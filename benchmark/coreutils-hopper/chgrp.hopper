
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/chgrp
        UUID: 350EFE36-38B1-92F9-52E6-034832958C1E
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xd998[ (55704 bytes)
        ; File offset : [0; 55704[ (55704 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x22 ; '"'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x78 ; 'x'
0000000000000029         db  0x70 ; 'p'
000000000000002a         db  0x04 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x98 ; '.'
00000000000000d1         db  0xd9 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x98 ; '.'
00000000000000d9         db  0xd9 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xb0 ; '.'
00000000000000f1         db  0xd9 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xb0 ; '.'
00000000000000f9         db  0xd9 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xb0 ; '.'                                         ; DATA XREF=sub_29d0+207, quotearg_free+87, fts_stat+144, fts_build+1222, rpl_fflush+18, slotvec0
0000000000000101         db  0xd9 ; '.'
0000000000000102         db  0x20 ; ' '                                         ; DATA XREF=setup_dir.isra.4, enter_dir.isra.10, leave_dir.isra.12+23, rpl_fts_close+159, rpl_fts_read+688
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xd0 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x90 ; '.'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xb8 ; '.'
0000000000000129         db  0xdb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xb8 ; '.'
0000000000000131         db  0xdb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xb8 ; '.'
0000000000000139         db  0xdb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'                                         ; DATA XREF=change_file_owner+16, sub_2e40+42
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x28 ; '('
0000000000000199         db  0xbd ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x28 ; '('
00000000000001a1         db  0xbd ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x28 ; '('
00000000000001a9         db  0xbd ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xa4 ; '.'
00000000000001b1         db  0x04 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xa4 ; '.'
00000000000001b9         db  0x04 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xfts_open+4, xstrtoul+573, diropen.isra.6+20, fts_build+1173, fts_build+1365
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'                                         ; DATA XREF=fts_build+1159, rpl_fts_open+30, rpl_fts_open+35, rpl_fts_open+629
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xb0 ; '.'
0000000000000209         db  0xd9 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xb0 ; '.'
0000000000000211         db  0xd9 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xb0 ; '.'
0000000000000219         db  0xd9 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x50 ; 'P'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x50 ; 'P'
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x35 ; '5'
0000000000000285         db  0x0e ; '.'
0000000000000286         db  0xfe ; '.'
0000000000000287         db  0x36 ; '6'
0000000000000288         db  0x38 ; '8'
0000000000000289         db  0xb1 ; '.'
000000000000028a         db  0x92 ; '.'
000000000000028b         db  0xf9 ; '.'
000000000000028c         db  0x52 ; 'R'
000000000000028d         db  0xe6 ; '.'
000000000000028e         db  0x03 ; '.'
000000000000028f         db  0x48 ; 'H'
0000000000000290         db  0x32 ; '2'
0000000000000291         db  0x95 ; '.'
0000000000000292         db  0x8c ; '.'
0000000000000293         db  0x1e ; '.'
0000000000000294         db  0xad ; '.'
0000000000000295         db  0x29 ; ')'
0000000000000296         db  0x9e ; '.'
0000000000000297         db  0x50 ; 'P'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x49 ; 'I'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x49 ; 'I'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x4a ; 'J'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x4f ; 'O'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xa78[ (1944 bytes)
        ; File offset : [736; 2680[ (1944 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x32 ; '2'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0xb5 ; '.'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xbc ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x1a ; '.'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x40 ; '@'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x23 ; '#'
0000000000000371         db  0x03 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xc2 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x12 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xff ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x34 ; '4'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x49 ; 'I'                                         ; DATA XREF=xstrtoul+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x6a ; 'j'                                         ; DATA XREF=main+663, xstrtoul+437, xstrtoul+806, xstrtoul+878, rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=fts_build+2307, rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x6d ; 'm'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x61 ; 'a'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x66 ; 'f'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x98 ; '.'
0000000000000461         db  0x02 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x57 ; 'W'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xee ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x0c ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x9a ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x4f ; 'O'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x89 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xdc ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x38 ; '8'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x0f ; '.'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x7a ; 'z'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x75 ; 'u'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x4f ; 'O'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x60 ; '`'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe0 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x13 ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x6e ; 'n'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x8d ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x6a ; 'j'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x80 ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x2b ; '+'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0xa6 ; '.'
0000000000000659         db  0x02 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x05 ; '.'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x92 ; '.'
0000000000000689         db  0x02 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x3f ; '?'
00000000000006a1         db  0x03 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x20 ; ' '
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x66 ; 'f'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x49 ; 'I'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xf1 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x56 ; 'V'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x26 ; '&'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x7c ; '|'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x0b ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xa0 ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xe8 ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0xc1 ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x73 ; 's'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xac ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x2e ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x19 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x5e ; '^'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x83 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x0a ; '.'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x9f ; '.'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x52 ; 'R'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x83 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x74 ; 't'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xb4 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xd5 ; '.'
00000000000008c9         db  0x02 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xd3 ; '.'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0xc3 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'                                         ; DATA XREF=sub_32e0+40
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xf8 ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x3b ; ';'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x4e ; 'N'
0000000000000941         db  0x03 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x20 ; ' '
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x98 ; '.'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0xa3 ; '.'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x3a ; ':'
0000000000000989         db  0x02 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x22 ; '"'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0xac ; '.'
00000000000009a1         db  0x01 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x59 ; 'Y'
00000000000009b9         db  0x01 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x11 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x88 ; '.'
00000000000009c1         db  0xe0 ; '.'
00000000000009c2         db  0x20 ; ' '
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x08 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xba ; '.'
00000000000009d1         db  0x02 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x11 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x19 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x80 ; '.'
00000000000009d9         db  0xe0 ; '.'
00000000000009da         db  0x20 ; ' '
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x08 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xc8 ; '.'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x21 ; '!'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x19 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0xa0 ; '.'
00000000000009f1         db  0xe0 ; '.'
00000000000009f2         db  0x20 ; ' '
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x08 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0xc5 ; '.'
0000000000000a01         db  0x02 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x11 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x19 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0xa0 ; '.'
0000000000000a09         db  0xe0 ; '.'
0000000000000a0a         db  0x20 ; ' '
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x08 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x16 ; '.'
0000000000000a19         db  0x02 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x21 ; '!'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x19 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x80 ; '.'
0000000000000a21         db  0xe0 ; '.'
0000000000000a22         db  0x20 ; ' '
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x08 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0xcc ; '.'
0000000000000a31         db  0x01 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x11 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x19 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0xc0 ; '.'
0000000000000a39         db  0xe0 ; '.'
0000000000000a3a         db  0x20 ; ' '
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x08 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x48 ; 'H'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x11 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x19 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x90 ; '.'
0000000000000a51         db  0xe0 ; '.'
0000000000000a52         db  0x20 ; ' '
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x04 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0xba ; '.'
0000000000000a61         db  0x01 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x11 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x19 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x98 ; '.'
0000000000000a69         db  0xe0 ; '.'
0000000000000a6a         db  0x20 ; ' '
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x08 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xa78; 0xde0[ (872 bytes)
        ; File offset : [2680; 3552[ (872 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000a78         db  0x00 ; '.'
0000000000000a79         db  0x6c ; 'l'
0000000000000a7a         db  0x69 ; 'i'
0000000000000a7b         db  0x62 ; 'b'
0000000000000a7c         db  0x63 ; 'c'
0000000000000a7d         db  0x2e ; '.'
0000000000000a7e         db  0x73 ; 's'
0000000000000a7f         db  0x6f ; 'o'
0000000000000a80         db  0x2e ; '.'
0000000000000a81         db  0x36 ; '6'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x66 ; 'f'
0000000000000a84         db  0x66 ; 'f'
0000000000000a85         db  0x6c ; 'l'
0000000000000a86         db  0x75 ; 'u'
0000000000000a87         db  0x73 ; 's'
0000000000000a88         db  0x68 ; 'h'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x73 ; 's'
0000000000000a8b         db  0x74 ; 't'
0000000000000a8c         db  0x72 ; 'r'
0000000000000a8d         db  0x63 ; 'c'
0000000000000a8e         db  0x70 ; 'p'
0000000000000a8f         db  0x79 ; 'y'
0000000000000a90         db  0x00 ; '.'
0000000000000a91         db  0x5f ; '_'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x70 ; 'p'
0000000000000a94         db  0x72 ; 'r'
0000000000000a95         db  0x69 ; 'i'
0000000000000a96         db  0x6e ; 'n'
0000000000000a97         db  0x74 ; 't'
0000000000000a98         db  0x66 ; 'f'
0000000000000a99         db  0x5f ; '_'
0000000000000a9a         db  0x63 ; 'c'
0000000000000a9b         db  0x68 ; 'h'
0000000000000a9c         db  0x6b ; 'k'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x72 ; 'r'
0000000000000a9f         db  0x65 ; 'e'
0000000000000aa0         db  0x61 ; 'a'
0000000000000aa1         db  0x64 ; 'd'
0000000000000aa2         db  0x64 ; 'd'
0000000000000aa3         db  0x69 ; 'i'
0000000000000aa4         db  0x72 ; 'r'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x73 ; 's'
0000000000000aa7         db  0x65 ; 'e'
0000000000000aa8         db  0x74 ; 't'
0000000000000aa9         db  0x6c ; 'l'
0000000000000aaa         db  0x6f ; 'o'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x61 ; 'a'
0000000000000aad         db  0x6c ; 'l'
0000000000000aae         db  0x65 ; 'e'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x6d ; 'm'
0000000000000ab1         db  0x62 ; 'b'
0000000000000ab2         db  0x72 ; 'r'
0000000000000ab3         db  0x74 ; 't'
0000000000000ab4         db  0x6f ; 'o'
0000000000000ab5         db  0x77 ; 'w'
0000000000000ab6         db  0x63 ; 'c'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x73 ; 's'
0000000000000ab9         db  0x74 ; 't'
0000000000000aba         db  0x72 ; 'r'
0000000000000abb         db  0x6e ; 'n'
0000000000000abc         db  0x63 ; 'c'
0000000000000abd         db  0x6d ; 'm'
0000000000000abe         db  0x70 ; 'p'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x6f ; 'o'
0000000000000ac1         db  0x70 ; 'p'
0000000000000ac2         db  0x74 ; 't'
0000000000000ac3         db  0x69 ; 'i'
0000000000000ac4         db  0x6e ; 'n'
0000000000000ac5         db  0x64 ; 'd'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x73 ; 's'
0000000000000ac8         db  0x74 ; 't'
0000000000000ac9         db  0x72 ; 'r'
0000000000000aca         db  0x72 ; 'r'
0000000000000acb         db  0x63 ; 'c'
0000000000000acc         db  0x68 ; 'h'
0000000000000acd         db  0x72 ; 'r'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x64 ; 'd'
0000000000000ad0         db  0x63 ; 'c'
0000000000000ad1         db  0x67 ; 'g'
0000000000000ad2         db  0x65 ; 'e'
0000000000000ad3         db  0x74 ; 't'
0000000000000ad4         db  0x74 ; 't'
0000000000000ad5         db  0x65 ; 'e'
0000000000000ad6         db  0x78 ; 'x'
0000000000000ad7         db  0x74 ; 't'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x67 ; 'g'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x74 ; 't'
0000000000000adc         db  0x70 ; 'p'
0000000000000add         db  0x77 ; 'w'
0000000000000ade         db  0x75 ; 'u'
0000000000000adf         db  0x69 ; 'i'
0000000000000ae0         db  0x64 ; 'd'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x63 ; 'c'
0000000000000ae3         db  0x6c ; 'l'
0000000000000ae4         db  0x6f ; 'o'
0000000000000ae5         db  0x73 ; 's'
0000000000000ae6         db  0x65 ; 'e'
0000000000000ae7         db  0x64 ; 'd'
0000000000000ae8         db  0x69 ; 'i'
0000000000000ae9         db  0x72 ; 'r'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x66 ; 'f'
0000000000000aec         db  0x63 ; 'c'
0000000000000aed         db  0x68 ; 'h'
0000000000000aee         db  0x64 ; 'd'
0000000000000aef         db  0x69 ; 'i'
0000000000000af0         db  0x72 ; 'r'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x67 ; 'g'
0000000000000af3         db  0x65 ; 'e'
0000000000000af4         db  0x74 ; 't'
0000000000000af5         db  0x67 ; 'g'
0000000000000af6         db  0x72 ; 'r'
0000000000000af7         db  0x67 ; 'g'
0000000000000af8         db  0x69 ; 'i'
0000000000000af9         db  0x64 ; 'd'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x72 ; 'r'
0000000000000afd         db  0x72 ; 'r'
0000000000000afe         db  0x6f ; 'o'
0000000000000aff         db  0x72 ; 'r'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x5f ; '_'
0000000000000b02         db  0x5f ; '_'
0000000000000b03         db  0x73 ; 's'
0000000000000b04         db  0x74 ; 't'
0000000000000b05         db  0x61 ; 'a'
0000000000000b06         db  0x63 ; 'c'
0000000000000b07         db  0x6b ; 'k'
0000000000000b08         db  0x5f ; '_'
0000000000000b09         db  0x63 ; 'c'
0000000000000b0a         db  0x68 ; 'h'
0000000000000b0b         db  0x6b ; 'k'
0000000000000b0c         db  0x5f ; '_'
0000000000000b0d         db  0x66 ; 'f'
0000000000000b0e         db  0x61 ; 'a'
0000000000000b0f         db  0x69 ; 'i'
0000000000000b10         db  0x6c ; 'l'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x5f ; '_'
0000000000000b13         db  0x5f ; '_'
0000000000000b14         db  0x6c ; 'l'
0000000000000b15         db  0x78 ; 'x'
0000000000000b16         db  0x73 ; 's'
0000000000000b17         db  0x74 ; 't'
0000000000000b18         db  0x61 ; 'a'
0000000000000b19         db  0x74 ; 't'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x69 ; 'i'
0000000000000b1c         db  0x73 ; 's'
0000000000000b1d         db  0x77 ; 'w'
0000000000000b1e         db  0x70 ; 'p'
0000000000000b1f         db  0x72 ; 'r'
0000000000000b20         db  0x69 ; 'i'
0000000000000b21         db  0x6e ; 'n'
0000000000000b22         db  0x74 ; 't'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x72 ; 'r'
0000000000000b25         db  0x65 ; 'e'
0000000000000b26         db  0x61 ; 'a'
0000000000000b27         db  0x6c ; 'l'
0000000000000b28         db  0x6c ; 'l'
0000000000000b29         db  0x6f ; 'o'
0000000000000b2a         db  0x63 ; 'c'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x66 ; 'f'
0000000000000b2d         db  0x73 ; 's'
0000000000000b2e         db  0x74 ; 't'
0000000000000b2f         db  0x61 ; 'a'
0000000000000b30         db  0x74 ; 't'
0000000000000b31         db  0x66 ; 'f'
0000000000000b32         db  0x73 ; 's'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x61 ; 'a'
0000000000000b35         db  0x62 ; 'b'
0000000000000b36         db  0x6f ; 'o'
0000000000000b37         db  0x72 ; 'r'
0000000000000b38         db  0x74 ; 't'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x65 ; 'e'
0000000000000b3c         db  0x78 ; 'x'
0000000000000b3d         db  0x69 ; 'i'
0000000000000b3e         db  0x74 ; 't'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0x70 ; 'p'
0000000000000b41         db  0x72 ; 'r'
0000000000000b42         db  0x6f ; 'o'
0000000000000b43         db  0x67 ; 'g'
0000000000000b44         db  0x72 ; 'r'
0000000000000b45         db  0x61 ; 'a'
                     aMinvocationnam:
0000000000000b46         db         "m_invocation_name", 0
0000000000000b58         db  0x5f ; '_'
0000000000000b59         db  0x5f ; '_'
0000000000000b5a         db  0x61 ; 'a'
0000000000000b5b         db  0x73 ; 's'
0000000000000b5c         db  0x73 ; 's'
0000000000000b5d         db  0x65 ; 'e'
0000000000000b5e         db  0x72 ; 'r'
0000000000000b5f         db  0x74 ; 't'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x66 ; 'f'
0000000000000b62         db  0x61 ; 'a'
0000000000000b63         db  0x69 ; 'i'
0000000000000b64         db  0x6c ; 'l'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x5f ; '_'
0000000000000b67         db  0x5f ; '_'
0000000000000b68         db  0x63 ; 'c'
0000000000000b69         db  0x74 ; 't'
0000000000000b6a         db  0x79 ; 'y'
0000000000000b6b         db  0x70 ; 'p'
0000000000000b6c         db  0x65 ; 'e'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x67 ; 'g'
0000000000000b6f         db  0x65 ; 'e'
0000000000000b70         db  0x74 ; 't'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x6d ; 'm'
0000000000000b73         db  0x62 ; 'b'
0000000000000b74         db  0x5f ; '_'
0000000000000b75         db  0x63 ; 'c'
0000000000000b76         db  0x75 ; 'u'
0000000000000b77         db  0x72 ; 'r'
0000000000000b78         db  0x5f ; '_'
0000000000000b79         db  0x6d ; 'm'
0000000000000b7a         db  0x61 ; 'a'
0000000000000b7b         db  0x78 ; 'x'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x63 ; 'c'
0000000000000b7e         db  0x61 ; 'a'
0000000000000b7f         db  0x6c ; 'l'
0000000000000b80         db  0x6c ; 'l'
0000000000000b81         db  0x6f ; 'o'
0000000000000b82         db  0x63 ; 'c'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x73 ; 's'
0000000000000b85         db  0x74 ; 't'
0000000000000b86         db  0x72 ; 'r'
0000000000000b87         db  0x6c ; 'l'
0000000000000b88         db  0x65 ; 'e'
0000000000000b89         db  0x6e ; 'n'
0000000000000b8a         db  0x00 ; '.'
0000000000000b8b         db  0x6d ; 'm'
0000000000000b8c         db  0x65 ; 'e'
0000000000000b8d         db  0x6d ; 'm'
0000000000000b8e         db  0x73 ; 's'
0000000000000b8f         db  0x65 ; 'e'
0000000000000b90         db  0x74 ; 't'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x5f ; '_'
0000000000000b93         db  0x5f ; '_'
0000000000000b94         db  0x65 ; 'e'
0000000000000b95         db  0x72 ; 'r'
0000000000000b96         db  0x72 ; 'r'
0000000000000b97         db  0x6e ; 'n'
0000000000000b98         db  0x6f ; 'o'
0000000000000b99         db  0x5f ; '_'
0000000000000b9a         db  0x6c ; 'l'
0000000000000b9b         db  0x6f ; 'o'
0000000000000b9c         db  0x63 ; 'c'
0000000000000b9d         db  0x61 ; 'a'
0000000000000b9e         db  0x74 ; 't'
0000000000000b9f         db  0x69 ; 'i'
0000000000000ba0         db  0x6f ; 'o'
0000000000000ba1         db  0x6e ; 'n'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x6d ; 'm'
0000000000000ba4         db  0x65 ; 'e'
0000000000000ba5         db  0x6d ; 'm'
0000000000000ba6         db  0x63 ; 'c'
0000000000000ba7         db  0x6d ; 'm'
0000000000000ba8         db  0x70 ; 'p'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x65 ; 'e'
0000000000000bab         db  0x6e ; 'n'
0000000000000bac         db  0x64 ; 'd'
0000000000000bad         db  0x67 ; 'g'
0000000000000bae         db  0x72 ; 'r'
0000000000000baf         db  0x65 ; 'e'
0000000000000bb0         db  0x6e ; 'n'
0000000000000bb1         db  0x74 ; 't'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x5f ; '_'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x66 ; 'f'
0000000000000bb6         db  0x70 ; 'p'
0000000000000bb7         db  0x72 ; 'r'
0000000000000bb8         db  0x69 ; 'i'
0000000000000bb9         db  0x6e ; 'n'
0000000000000bba         db  0x74 ; 't'
0000000000000bbb         db  0x66 ; 'f'
0000000000000bbc         db  0x5f ; '_'
0000000000000bbd         db  0x63 ; 'c'
0000000000000bbe         db  0x68 ; 'h'
0000000000000bbf         db  0x6b ; 'k'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x67 ; 'g'
0000000000000bc2         db  0x65 ; 'e'
0000000000000bc3         db  0x74 ; 't'
0000000000000bc4         db  0x67 ; 'g'
0000000000000bc5         db  0x72 ; 'r'
0000000000000bc6         db  0x6e ; 'n'
0000000000000bc7         db  0x61 ; 'a'
0000000000000bc8         db  0x6d ; 'm'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x66 ; 'f'
0000000000000bcb         db  0x63 ; 'c'
0000000000000bcc         db  0x68 ; 'h'
0000000000000bcd         db  0x6f ; 'o'
0000000000000bce         db  0x77 ; 'w'
0000000000000bcf         db  0x6e ; 'n'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x73 ; 's'
0000000000000bd2         db  0x74 ; 't'
0000000000000bd3         db  0x64 ; 'd'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x75 ; 'u'
0000000000000bd6         db  0x74 ; 't'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x6c ; 'l'
0000000000000bd9         db  0x73 ; 's'
0000000000000bda         db  0x65 ; 'e'
0000000000000bdb         db  0x65 ; 'e'
0000000000000bdc         db  0x6b ; 'k'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x6d ; 'm'
0000000000000bdf         db  0x65 ; 'e'
0000000000000be0         db  0x6d ; 'm'
0000000000000be1         db  0x63 ; 'c'
0000000000000be2         db  0x70 ; 'p'
0000000000000be3         db  0x79 ; 'y'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x66 ; 'f'
0000000000000be6         db  0x63 ; 'c'
0000000000000be7         db  0x6c ; 'l'
0000000000000be8         db  0x6f ; 'o'
0000000000000be9         db  0x73 ; 's'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x73 ; 's'
0000000000000bed         db  0x74 ; 't'
0000000000000bee         db  0x72 ; 'r'
0000000000000bef         db  0x74 ; 't'
0000000000000bf0         db  0x6f ; 'o'
0000000000000bf1         db  0x75 ; 'u'
0000000000000bf2         db  0x6c ; 'l'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x6d ; 'm'
0000000000000bf5         db  0x61 ; 'a'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x6c ; 'l'
0000000000000bf8         db  0x6f ; 'o'
0000000000000bf9         db  0x63 ; 'c'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x66 ; 'f'
0000000000000bfc         db  0x64 ; 'd'
0000000000000bfd         db  0x6f ; 'o'
0000000000000bfe         db  0x70 ; 'p'
0000000000000bff         db  0x65 ; 'e'
                     aNdir:
0000000000000c00         db         "ndir", 0
0000000000000c05         db  0x5f ; '_'
0000000000000c06         db  0x5f ; '_'
0000000000000c07         db  0x6f ; 'o'
0000000000000c08         db  0x70 ; 'p'
0000000000000c09         db  0x65 ; 'e'
0000000000000c0a         db  0x6e ; 'n'
0000000000000c0b         db  0x61 ; 'a'
0000000000000c0c         db  0x74 ; 't'
0000000000000c0d         db  0x5f ; '_'
0000000000000c0e         db  0x32 ; '2'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x6d ; 'm'
0000000000000c11         db  0x62 ; 'b'
0000000000000c12         db  0x73 ; 's'
0000000000000c13         db  0x69 ; 'i'
0000000000000c14         db  0x6e ; 'n'
0000000000000c15         db  0x69 ; 'i'
0000000000000c16         db  0x74 ; 't'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x6e ; 'n'
0000000000000c19         db  0x6c ; 'l'
0000000000000c1a         db  0x5f ; '_'
0000000000000c1b         db  0x6c ; 'l'
0000000000000c1c         db  0x61 ; 'a'
0000000000000c1d         db  0x6e ; 'n'
0000000000000c1e         db  0x67 ; 'g'
0000000000000c1f         db  0x69 ; 'i'
0000000000000c20         db  0x6e ; 'n'
0000000000000c21         db  0x66 ; 'f'
0000000000000c22         db  0x6f ; 'o'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x5f ; '_'
0000000000000c25         db  0x5f ; '_'
0000000000000c26         db  0x63 ; 'c'
0000000000000c27         db  0x74 ; 't'
0000000000000c28         db  0x79 ; 'y'
0000000000000c29         db  0x70 ; 'p'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x5f ; '_'
0000000000000c2c         db  0x62 ; 'b'
0000000000000c2d         db  0x5f ; '_'
0000000000000c2e         db  0x6c ; 'l'
0000000000000c2f         db  0x6f ; 'o'
0000000000000c30         db  0x63 ; 'c'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x6f ; 'o'
0000000000000c33         db  0x70 ; 'p'
0000000000000c34         db  0x74 ; 't'
0000000000000c35         db  0x61 ; 'a'
0000000000000c36         db  0x72 ; 'r'
0000000000000c37         db  0x67 ; 'g'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x5f ; '_'
0000000000000c3a         db  0x5f ; '_'
0000000000000c3b         db  0x66 ; 'f'
0000000000000c3c         db  0x72 ; 'r'
0000000000000c3d         db  0x65 ; 'e'
0000000000000c3e         db  0x61 ; 'a'
0000000000000c3f         db  0x64 ; 'd'
0000000000000c40         db  0x69 ; 'i'
0000000000000c41         db  0x6e ; 'n'
0000000000000c42         db  0x67 ; 'g'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x73 ; 's'
0000000000000c45         db  0x74 ; 't'
0000000000000c46         db  0x64 ; 'd'
0000000000000c47         db  0x65 ; 'e'
0000000000000c48         db  0x72 ; 'r'
0000000000000c49         db  0x72 ; 'r'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x66 ; 'f'
0000000000000c4c         db  0x63 ; 'c'
0000000000000c4d         db  0x68 ; 'h'
0000000000000c4e         db  0x6f ; 'o'
0000000000000c4f         db  0x77 ; 'w'
0000000000000c50         db  0x6e ; 'n'
0000000000000c51         db  0x61 ; 'a'
0000000000000c52         db  0x74 ; 't'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x67 ; 'g'
0000000000000c55         db  0x65 ; 'e'
0000000000000c56         db  0x74 ; 't'
0000000000000c57         db  0x6f ; 'o'
0000000000000c58         db  0x70 ; 'p'
0000000000000c59         db  0x74 ; 't'
0000000000000c5a         db  0x5f ; '_'
0000000000000c5b         db  0x6c ; 'l'
0000000000000c5c         db  0x6f ; 'o'
0000000000000c5d         db  0x6e ; 'n'
0000000000000c5e         db  0x67 ; 'g'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x5f ; '_'
0000000000000c61         db  0x5f ; '_'
0000000000000c62         db  0x66 ; 'f'
0000000000000c63         db  0x78 ; 'x'
0000000000000c64         db  0x73 ; 's'
0000000000000c65         db  0x74 ; 't'
0000000000000c66         db  0x61 ; 'a'
0000000000000c67         db  0x74 ; 't'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x66 ; 'f'
0000000000000c6a         db  0x69 ; 'i'
0000000000000c6b         db  0x6c ; 'l'
0000000000000c6c         db  0x65 ; 'e'
0000000000000c6d         db  0x6e ; 'n'
0000000000000c6e         db  0x6f ; 'o'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x66 ; 'f'
0000000000000c71         db  0x77 ; 'w'
0000000000000c72         db  0x72 ; 'r'
0000000000000c73         db  0x69 ; 'i'
0000000000000c74         db  0x74 ; 't'
0000000000000c75         db  0x65 ; 'e'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x5f ; '_'
0000000000000c78         db  0x5f ; '_'
0000000000000c79         db  0x66 ; 'f'
0000000000000c7a         db  0x70 ; 'p'
0000000000000c7b         db  0x65 ; 'e'
0000000000000c7c         db  0x6e ; 'n'
0000000000000c7d         db  0x64 ; 'd'
0000000000000c7e         db  0x69 ; 'i'
0000000000000c7f         db  0x6e ; 'n'
0000000000000c80         db  0x67 ; 'g'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x6f ; 'o'
0000000000000c83         db  0x70 ; 'p'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x6e ; 'n'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x73 ; 's'
0000000000000c88         db  0x74 ; 't'
0000000000000c89         db  0x72 ; 'r'
0000000000000c8a         db  0x63 ; 'c'
0000000000000c8b         db  0x68 ; 'h'
0000000000000c8c         db  0x72 ; 'r'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x70 ; 'p'
0000000000000c8f         db  0x72 ; 'r'
0000000000000c90         db  0x6f ; 'o'
0000000000000c91         db  0x67 ; 'g'
0000000000000c92         db  0x72 ; 'r'
0000000000000c93         db  0x61 ; 'a'
0000000000000c94         db  0x6d ; 'm'
0000000000000c95         db  0x5f ; '_'
0000000000000c96         db  0x69 ; 'i'
0000000000000c97         db  0x6e ; 'n'
0000000000000c98         db  0x76 ; 'v'
0000000000000c99         db  0x6f ; 'o'
0000000000000c9a         db  0x63 ; 'c'
0000000000000c9b         db  0x61 ; 'a'
0000000000000c9c         db  0x74 ; 't'
0000000000000c9d         db  0x69 ; 'i'
0000000000000c9e         db  0x6f ; 'o'
0000000000000c9f         db  0x6e ; 'n'
0000000000000ca0         db  0x5f ; '_'
0000000000000ca1         db  0x73 ; 's'
0000000000000ca2         db  0x68 ; 'h'
0000000000000ca3         db  0x6f ; 'o'
0000000000000ca4         db  0x72 ; 'r'
0000000000000ca5         db  0x74 ; 't'
0000000000000ca6         db  0x5f ; '_'
0000000000000ca7         db  0x6e ; 'n'
0000000000000ca8         db  0x61 ; 'a'
0000000000000ca9         db  0x6d ; 'm'
0000000000000caa         db  0x65 ; 'e'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x71 ; 'q'
0000000000000cad         db  0x73 ; 's'
0000000000000cae         db  0x6f ; 'o'
0000000000000caf         db  0x72 ; 'r'
0000000000000cb0         db  0x74 ; 't'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x5f ; '_'
0000000000000cb3         db  0x5f ; '_'
0000000000000cb4         db  0x63 ; 'c'
0000000000000cb5         db  0x78 ; 'x'
0000000000000cb6         db  0x61 ; 'a'
0000000000000cb7         db  0x5f ; '_'
0000000000000cb8         db  0x66 ; 'f'
0000000000000cb9         db  0x69 ; 'i'
0000000000000cba         db  0x6e ; 'n'
0000000000000cbb         db  0x61 ; 'a'
0000000000000cbc         db  0x6c ; 'l'
0000000000000cbd         db  0x69 ; 'i'
0000000000000cbe         db  0x7a ; 'z'
0000000000000cbf         db  0x65 ; 'e'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x66 ; 'f'
0000000000000cc2         db  0x63 ; 'c'
0000000000000cc3         db  0x6e ; 'n'
0000000000000cc4         db  0x74 ; 't'
0000000000000cc5         db  0x6c ; 'l'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x6f ; 'o'
0000000000000cc8         db  0x70 ; 'p'
0000000000000cc9         db  0x65 ; 'e'
0000000000000cca         db  0x6e ; 'n'
0000000000000ccb         db  0x61 ; 'a'
0000000000000ccc         db  0x74 ; 't'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x5f ; '_'
0000000000000ccf         db  0x5f ; '_'
0000000000000cd0         db  0x78 ; 'x'
0000000000000cd1         db  0x73 ; 's'
0000000000000cd2         db  0x74 ; 't'
0000000000000cd3         db  0x61 ; 'a'
0000000000000cd4         db  0x74 ; 't'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x6d ; 'm'
0000000000000cd7         db  0x65 ; 'e'
0000000000000cd8         db  0x6d ; 'm'
0000000000000cd9         db  0x6d ; 'm'
0000000000000cda         db  0x6f ; 'o'
0000000000000cdb         db  0x76 ; 'v'
0000000000000cdc         db  0x65 ; 'e'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x62 ; 'b'
0000000000000cdf         db  0x69 ; 'i'
0000000000000ce0         db  0x6e ; 'n'
0000000000000ce1         db  0x64 ; 'd'
0000000000000ce2         db  0x74 ; 't'
0000000000000ce3         db  0x65 ; 'e'
0000000000000ce4         db  0x78 ; 'x'
0000000000000ce5         db  0x74 ; 't'
0000000000000ce6         db  0x64 ; 'd'
0000000000000ce7         db  0x6f ; 'o'
0000000000000ce8         db  0x6d ; 'm'
0000000000000ce9         db  0x61 ; 'a'
0000000000000cea         db  0x69 ; 'i'
0000000000000ceb         db  0x6e ; 'n'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x5f ; '_'
0000000000000cee         db  0x5f ; '_'
0000000000000cef         db  0x66 ; 'f'
0000000000000cf0         db  0x78 ; 'x'
0000000000000cf1         db  0x73 ; 's'
0000000000000cf2         db  0x74 ; 't'
0000000000000cf3         db  0x61 ; 'a'
0000000000000cf4         db  0x74 ; 't'
0000000000000cf5         db  0x61 ; 'a'
0000000000000cf6         db  0x74 ; 't'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x5f ; '_'
0000000000000cf9         db  0x5f ; '_'
0000000000000cfa         db  0x6c ; 'l'
0000000000000cfb         db  0x69 ; 'i'
0000000000000cfc         db  0x62 ; 'b'
0000000000000cfd         db  0x63 ; 'c'
0000000000000cfe         db  0x5f ; '_'
0000000000000cff         db  0x73 ; 's'
                     aTartmain:
0000000000000d00         db         "tart_main", 0
0000000000000d0a         db  0x64 ; 'd'
0000000000000d0b         db  0x69 ; 'i'
0000000000000d0c         db  0x72 ; 'r'
0000000000000d0d         db  0x66 ; 'f'
0000000000000d0e         db  0x64 ; 'd'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x73 ; 's'
0000000000000d11         db  0x74 ; 't'
0000000000000d12         db  0x70 ; 'p'
0000000000000d13         db  0x63 ; 'c'
0000000000000d14         db  0x70 ; 'p'
0000000000000d15         db  0x79 ; 'y'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x66 ; 'f'
0000000000000d18         db  0x73 ; 's'
0000000000000d19         db  0x65 ; 'e'
0000000000000d1a         db  0x65 ; 'e'
0000000000000d1b         db  0x6b ; 'k'
0000000000000d1c         db  0x6f ; 'o'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x66 ; 'f'
0000000000000d1f         db  0x70 ; 'p'
0000000000000d20         db  0x75 ; 'u'
0000000000000d21         db  0x74 ; 't'
0000000000000d22         db  0x73 ; 's'
0000000000000d23         db  0x5f ; '_'
0000000000000d24         db  0x75 ; 'u'
0000000000000d25         db  0x6e ; 'n'
0000000000000d26         db  0x6c ; 'l'
0000000000000d27         db  0x6f ; 'o'
0000000000000d28         db  0x63 ; 'c'
0000000000000d29         db  0x6b ; 'k'
0000000000000d2a         db  0x65 ; 'e'
0000000000000d2b         db  0x64 ; 'd'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x66 ; 'f'
0000000000000d2e         db  0x72 ; 'r'
0000000000000d2f         db  0x65 ; 'e'
0000000000000d30         db  0x65 ; 'e'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x5f ; '_'
0000000000000d33         db  0x5f ; '_'
0000000000000d34         db  0x70 ; 'p'
0000000000000d35         db  0x72 ; 'r'
0000000000000d36         db  0x6f ; 'o'
0000000000000d37         db  0x67 ; 'g'
0000000000000d38         db  0x6e ; 'n'
0000000000000d39         db  0x61 ; 'a'
0000000000000d3a         db  0x6d ; 'm'
0000000000000d3b         db  0x65 ; 'e'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x5f ; '_'
0000000000000d3e         db  0x5f ; '_'
0000000000000d3f         db  0x70 ; 'p'
0000000000000d40         db  0x72 ; 'r'
0000000000000d41         db  0x6f ; 'o'
0000000000000d42         db  0x67 ; 'g'
0000000000000d43         db  0x6e ; 'n'
0000000000000d44         db  0x61 ; 'a'
0000000000000d45         db  0x6d ; 'm'
0000000000000d46         db  0x65 ; 'e'
0000000000000d47         db  0x5f ; '_'
0000000000000d48         db  0x66 ; 'f'
0000000000000d49         db  0x75 ; 'u'
0000000000000d4a         db  0x6c ; 'l'
0000000000000d4b         db  0x6c ; 'l'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x5f ; '_'
0000000000000d4e         db  0x5f ; '_'
0000000000000d4f         db  0x63 ; 'c'
0000000000000d50         db  0x78 ; 'x'
0000000000000d51         db  0x61 ; 'a'
0000000000000d52         db  0x5f ; '_'
0000000000000d53         db  0x61 ; 'a'
0000000000000d54         db  0x74 ; 't'
0000000000000d55         db  0x65 ; 'e'
0000000000000d56         db  0x78 ; 'x'
0000000000000d57         db  0x69 ; 'i'
0000000000000d58         db  0x74 ; 't'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x47 ; 'G'
0000000000000d5b         db  0x4c ; 'L'
0000000000000d5c         db  0x49 ; 'I'
0000000000000d5d         db  0x42 ; 'B'
0000000000000d5e         db  0x43 ; 'C'
0000000000000d5f         db  0x5f ; '_'
0000000000000d60         db  0x32 ; '2'
0000000000000d61         db  0x2e ; '.'
0000000000000d62         db  0x33 ; '3'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x47 ; 'G'
0000000000000d65         db  0x4c ; 'L'
0000000000000d66         db  0x49 ; 'I'
0000000000000d67         db  0x42 ; 'B'
0000000000000d68         db  0x43 ; 'C'
0000000000000d69         db  0x5f ; '_'
0000000000000d6a         db  0x32 ; '2'
0000000000000d6b         db  0x2e ; '.'
0000000000000d6c         db  0x33 ; '3'
0000000000000d6d         db  0x2e ; '.'
0000000000000d6e         db  0x34 ; '4'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x47 ; 'G'
0000000000000d71         db  0x4c ; 'L'
0000000000000d72         db  0x49 ; 'I'
0000000000000d73         db  0x42 ; 'B'
0000000000000d74         db  0x43 ; 'C'
0000000000000d75         db  0x5f ; '_'
0000000000000d76         db  0x32 ; '2'
0000000000000d77         db  0x2e ; '.'
0000000000000d78         db  0x31 ; '1'
0000000000000d79         db  0x34 ; '4'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x47 ; 'G'
0000000000000d7c         db  0x4c ; 'L'
0000000000000d7d         db  0x49 ; 'I'
0000000000000d7e         db  0x42 ; 'B'
0000000000000d7f         db  0x43 ; 'C'
0000000000000d80         db  0x5f ; '_'
0000000000000d81         db  0x32 ; '2'
0000000000000d82         db  0x2e ; '.'
0000000000000d83         db  0x37 ; '7'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x47 ; 'G'
0000000000000d86         db  0x4c ; 'L'
0000000000000d87         db  0x49 ; 'I'
0000000000000d88         db  0x42 ; 'B'
0000000000000d89         db  0x43 ; 'C'
0000000000000d8a         db  0x5f ; '_'
0000000000000d8b         db  0x32 ; '2'
0000000000000d8c         db  0x2e ; '.'
0000000000000d8d         db  0x34 ; '4'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x47 ; 'G'
0000000000000d90         db  0x4c ; 'L'
0000000000000d91         db  0x49 ; 'I'
0000000000000d92         db  0x42 ; 'B'
0000000000000d93         db  0x43 ; 'C'
0000000000000d94         db  0x5f ; '_'
0000000000000d95         db  0x32 ; '2'
0000000000000d96         db  0x2e ; '.'
0000000000000d97         db  0x32 ; '2'
0000000000000d98         db  0x2e ; '.'
0000000000000d99         db  0x35 ; '5'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x5f ; '_'
0000000000000d9c         db  0x49 ; 'I'
0000000000000d9d         db  0x54 ; 'T'
0000000000000d9e         db  0x4d ; 'M'
0000000000000d9f         db  0x5f ; '_'
0000000000000da0         db  0x64 ; 'd'
0000000000000da1         db  0x65 ; 'e'
0000000000000da2         db  0x72 ; 'r'
0000000000000da3         db  0x65 ; 'e'
0000000000000da4         db  0x67 ; 'g'
0000000000000da5         db  0x69 ; 'i'
0000000000000da6         db  0x73 ; 's'
0000000000000da7         db  0x74 ; 't'
0000000000000da8         db  0x65 ; 'e'
0000000000000da9         db  0x72 ; 'r'
0000000000000daa         db  0x54 ; 'T'
0000000000000dab         db  0x4d ; 'M'
0000000000000dac         db  0x43 ; 'C'
0000000000000dad         db  0x6c ; 'l'
0000000000000dae         db  0x6f ; 'o'
0000000000000daf         db  0x6e ; 'n'
0000000000000db0         db  0x65 ; 'e'
0000000000000db1         db  0x54 ; 'T'
0000000000000db2         db  0x61 ; 'a'
0000000000000db3         db  0x62 ; 'b'
0000000000000db4         db  0x6c ; 'l'
0000000000000db5         db  0x65 ; 'e'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x5f ; '_'
0000000000000db8         db  0x5f ; '_'
0000000000000db9         db  0x67 ; 'g'
0000000000000dba         db  0x6d ; 'm'
0000000000000dbb         db  0x6f ; 'o'
0000000000000dbc         db  0x6e ; 'n'
0000000000000dbd         db  0x5f ; '_'
0000000000000dbe         db  0x73 ; 's'
0000000000000dbf         db  0x74 ; 't'
0000000000000dc0         db  0x61 ; 'a'
0000000000000dc1         db  0x72 ; 'r'
0000000000000dc2         db  0x74 ; 't'
0000000000000dc3         db  0x5f ; '_'
0000000000000dc4         db  0x5f ; '_'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x5f ; '_'
0000000000000dc7         db  0x49 ; 'I'
0000000000000dc8         db  0x54 ; 'T'
0000000000000dc9         db  0x4d ; 'M'
0000000000000dca         db  0x5f ; '_'
0000000000000dcb         db  0x72 ; 'r'
0000000000000dcc         db  0x65 ; 'e'
0000000000000dcd         db  0x67 ; 'g'
0000000000000dce         db  0x69 ; 'i'
0000000000000dcf         db  0x73 ; 's'
0000000000000dd0         db  0x74 ; 't'
0000000000000dd1         db  0x65 ; 'e'
0000000000000dd2         db  0x72 ; 'r'
0000000000000dd3         db  0x54 ; 'T'
0000000000000dd4         db  0x4d ; 'M'
0000000000000dd5         db  0x43 ; 'C'
0000000000000dd6         db  0x6c ; 'l'
0000000000000dd7         db  0x6f ; 'o'
0000000000000dd8         db  0x6e ; 'n'
0000000000000dd9         db  0x65 ; 'e'
0000000000000dda         db  0x54 ; 'T'
0000000000000ddb         db  0x61 ; 'a'
0000000000000ddc         db  0x62 ; 'b'
0000000000000ddd         db  0x6c ; 'l'
0000000000000dde         db  0x65 ; 'e'
0000000000000ddf         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xde0; 0xe82[ (162 bytes)
        ; File offset : [3552; 3714[ (162 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000de0         db  0x00 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x02 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x02 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x02 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x02 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x02 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x02 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x02 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x02 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x02 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x02 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x02 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x02 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x02 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x02 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x02 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x02 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x02 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x02 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x02 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x03 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x03 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x02 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x02 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x02 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x02 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x03 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x02 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x02 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x02 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x02 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x02 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x04 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x02 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x02 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x02 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x02 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x02 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x02 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x05 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x02 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x02 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x02 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x02 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x02 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x02 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x02 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x02 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x02 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x02 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x02 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x02 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x06 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x02 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x02 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x02 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x02 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x02 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x03 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x02 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x02 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x02 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x03 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x02 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x02 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x06 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x00 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x02 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x02 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x02 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x07 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x02 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x02 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x02 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x02 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x02 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x02 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x02 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x02 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xe88; 0xef8[ (112 bytes)
        ; File offset : [3720; 3832[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000e88         db  0x01 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x06 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x01 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x10 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x13 ; '.'
0000000000000e99         db  0x69 ; 'i'
0000000000000e9a         db  0x69 ; 'i'
0000000000000e9b         db  0x0d ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x07 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xe2 ; '.'
0000000000000ea1         db  0x02 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x10 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x74 ; 't'
0000000000000ea9         db  0x19 ; '.'
0000000000000eaa         db  0x69 ; 'i'
0000000000000eab         db  0x09 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x06 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xec ; '.'
0000000000000eb1         db  0x02 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x10 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x94 ; '.'
0000000000000eb9         db  0x91 ; '.'
0000000000000eba         db  0x96 ; '.'
0000000000000ebb         db  0x06 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x05 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xf8 ; '.'
0000000000000ec1         db  0x02 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x10 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x17 ; '.'
0000000000000ec9         db  0x69 ; 'i'
0000000000000eca         db  0x69 ; 'i'
0000000000000ecb         db  0x0d ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x04 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x03 ; '.'
0000000000000ed1         db  0x03 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x10 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x14 ; '.'
0000000000000ed9         db  0x69 ; 'i'
0000000000000eda         db  0x69 ; 'i'
0000000000000edb         db  0x0d ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x03 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x0d ; '.'
0000000000000ee1         db  0x03 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x10 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x75 ; 'u'
0000000000000ee9         db  0x1a ; '.'
0000000000000eea         db  0x69 ; 'i'
0000000000000eeb         db  0x09 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x02 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x17 ; '.'
0000000000000ef1         db  0x03 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xef8; 0x12b8[ (960 bytes)
        ; File offset : [3832; 4792[ (960 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ef8         db  0xb0 ; '.'
0000000000000ef9         db  0xd9 ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x40 ; '@'
0000000000000f09         db  0x23 ; '#'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xb8 ; '.'
0000000000000f11         db  0xd9 ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x23 ; '#'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xc0 ; '.'
0000000000000f29         db  0xd9 ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x46 ; 'F'
0000000000000f39         db  0xa5 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xe0 ; '.'
0000000000000f41         db  0xd9 ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x50 ; 'P'
0000000000000f51         db  0xa5 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x00 ; '.'
0000000000000f59         db  0xda ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x5b ; '['
0000000000000f69         db  0xa5 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x20 ; ' '
0000000000000f71         db  0xda ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x58 ; 'X'
0000000000000f81         db  0xa5 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x40 ; '@'
0000000000000f89         db  0xda ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x67 ; 'g'
0000000000000f99         db  0xa5 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x60 ; '`'
0000000000000fa1         db  0xda ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x6a ; 'j'
0000000000000fb1         db  0xa5 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x80 ; '.'
0000000000000fb9         db  0xda ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x78 ; 'x'
0000000000000fc9         db  0xa5 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xa0 ; '.'
0000000000000fd1         db  0xda ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x7e ; '~'
0000000000000fe1         db  0xa5 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xc0 ; '.'
0000000000000fe9         db  0xda ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x08 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x5d ; ']'
0000000000000ff9         db  0xa5 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xe0 ; '.'                                         ; DATA XREF=rpl_fts_open+165, rpl_fts_open+170, rpl_fts_open+735, rpl_fts_children+80, rpl_fts_children+95
0000000000001001         db  0xda ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x08 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x85 ; '.'
0000000000001011         db  0xa5 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x00 ; '.'
0000000000001019         db  0xdb ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x08 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x8d ; '.'
0000000000001029         db  0xa5 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x20 ; ' '
0000000000001031         db  0xdb ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x08 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x92 ; '.'
0000000000001041         db  0xa5 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x60 ; '`'
0000000000001049         db  0xdb ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x08 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x29 ; ')'
0000000000001059         db  0xb2 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x68 ; 'h'
0000000000001061         db  0xdb ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x08 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x31 ; '1'
0000000000001071         db  0xb2 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x70 ; 'p'
0000000000001079         db  0xdb ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x08 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x37 ; '7'
0000000000001089         db  0xb2 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x78 ; 'x'
0000000000001091         db  0xdb ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x08 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x44 ; 'D'
00000000000010a1         db  0xb2 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x80 ; '.'
00000000000010a9         db  0xdb ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x08 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x51 ; 'Q'
00000000000010b9         db  0xb2 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x88 ; '.'
00000000000010c1         db  0xdb ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x08 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x7b ; '{'
00000000000010d1         db  0xba ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x90 ; '.'
00000000000010d9         db  0xdb ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x08 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x65 ; 'e'
00000000000010e9         db  0xb2 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x98 ; '.'
00000000000010f1         db  0xdb ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x08 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x4a ; 'J'
0000000000001101         db  0xb2 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xa0 ; '.'
0000000000001109         db  0xdb ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x08 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xde ; '.'
0000000000001119         db  0xa4 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0xa8 ; '.'
0000000000001121         db  0xdb ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x08 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x6d ; 'm'
0000000000001131         db  0xb2 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x08 ; '.'
0000000000001139         db  0xe0 ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x08 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x08 ; '.'
0000000000001149         db  0xe0 ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x10 ; '.'
0000000000001151         db  0xe0 ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x08 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xb4 ; '.'
0000000000001161         db  0xb1 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x60 ; '`'
0000000000001169         db  0xe0 ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x08 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x70 ; 'p'
0000000000001179         db  0xe0 ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x78 ; 'x'
0000000000001181         db  0xe0 ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x08 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0xe1 ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xd0 ; '.'
0000000000001199         db  0xdf ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x06 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x02 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xd8 ; '.'
00000000000011b1         db  0xdf ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x06 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x06 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xe0 ; '.'
00000000000011c9         db  0xdf ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x06 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x23 ; '#'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xe8 ; '.'
00000000000011e1         db  0xdf ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x06 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x28 ; '('
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xf0 ; '.'
00000000000011f9         db  0xdf ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x06 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x44 ; 'D'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xf8 ; '.'
0000000000001211         db  0xdf ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x06 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x47 ; 'G'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x80 ; '.'
0000000000001229         db  0xe0 ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x05 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x4a ; 'J'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x88 ; '.'
0000000000001241         db  0xe0 ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x05 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x49 ; 'I'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x90 ; '.'
0000000000001259         db  0xe0 ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x05 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x4f ; 'O'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x98 ; '.'
0000000000001271         db  0xe0 ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x05 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x50 ; 'P'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0xa0 ; '.'
0000000000001289         db  0xe0 ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x05 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x4c ; 'L'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xc0 ; '.'
00000000000012a1         db  0xe0 ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x05 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x4e ; 'N'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x12b8; 0x18e8[ (1584 bytes)
        ; File offset : [4792; 6376[ (1584 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000012b8         db  0xc0 ; '.'
00000000000012b9         db  0xdd ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x01 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0xc8 ; '.'
00000000000012d1         db  0xdd ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x03 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0xd0 ; '.'
00000000000012e9         db  0xdd ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x04 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xd8 ; '.'
0000000000001301         db  0xdd ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x05 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xe0 ; '.'
0000000000001319         db  0xdd ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x07 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xe8 ; '.'
0000000000001331         db  0xdd ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x08 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xf0 ; '.'
0000000000001349         db  0xdd ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x09 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0xf8 ; '.'
0000000000001361         db  0xdd ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x0a ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0xde ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x0b ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x08 ; '.'
0000000000001391         db  0xde ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x0c ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x10 ; '.'
00000000000013a9         db  0xde ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x0d ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x18 ; '.'
00000000000013c1         db  0xde ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x0e ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x20 ; ' '
00000000000013d9         db  0xde ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x0f ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x28 ; '('
00000000000013f1         db  0xde ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x10 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x30 ; '0'
0000000000001409         db  0xde ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x11 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x38 ; '8'
0000000000001421         db  0xde ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x12 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x40 ; '@'
0000000000001439         db  0xde ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x13 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x48 ; 'H'
0000000000001451         db  0xde ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x14 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x50 ; 'P'
0000000000001469         db  0xde ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x15 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x58 ; 'X'
0000000000001481         db  0xde ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x16 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x60 ; '`'
0000000000001499         db  0xde ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x17 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x68 ; 'h'
00000000000014b1         db  0xde ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x18 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x70 ; 'p'
00000000000014c9         db  0xde ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x19 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x78 ; 'x'
00000000000014e1         db  0xde ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x1a ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x80 ; '.'
00000000000014f9         db  0xde ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x1b ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x88 ; '.'
0000000000001511         db  0xde ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x1c ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x90 ; '.'
0000000000001529         db  0xde ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x1d ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x98 ; '.'
0000000000001541         db  0xde ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x1e ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0xa0 ; '.'
0000000000001559         db  0xde ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x1f ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0xa8 ; '.'
0000000000001571         db  0xde ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x20 ; ' '
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0xb0 ; '.'
0000000000001589         db  0xde ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x21 ; '!'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0xb8 ; '.'
00000000000015a1         db  0xde ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x22 ; '"'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xc0 ; '.'
00000000000015b9         db  0xde ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x24 ; '$'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0xc8 ; '.'
00000000000015d1         db  0xde ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x25 ; '%'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0xd0 ; '.'
00000000000015e9         db  0xde ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x26 ; '&'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0xd8 ; '.'
0000000000001601         db  0xde ; '.'
0000000000001602         db  0x20 ; ' '
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x07 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x27 ; '''
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x00 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0xe0 ; '.'
0000000000001619         db  0xde ; '.'
000000000000161a         db  0x20 ; ' '
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x07 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x29 ; ')'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x00 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xe8 ; '.'
0000000000001631         db  0xde ; '.'
0000000000001632         db  0x20 ; ' '
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x07 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x2a ; '*'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x00 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0xf0 ; '.'
0000000000001649         db  0xde ; '.'
000000000000164a         db  0x20 ; ' '
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x07 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x2b ; '+'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x00 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0xf8 ; '.'
0000000000001661         db  0xde ; '.'
0000000000001662         db  0x20 ; ' '
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x07 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x2c ; ','
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x00 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0xdf ; '.'
000000000000167a         db  0x20 ; ' '
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x07 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x2d ; '-'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x00 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x08 ; '.'
0000000000001691         db  0xdf ; '.'
0000000000001692         db  0x20 ; ' '
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x07 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x2e ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x00 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x10 ; '.'
00000000000016a9         db  0xdf ; '.'
00000000000016aa         db  0x20 ; ' '
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x07 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x2f ; '/'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x00 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x18 ; '.'
00000000000016c1         db  0xdf ; '.'
00000000000016c2         db  0x20 ; ' '
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x07 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x30 ; '0'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x00 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x20 ; ' '
00000000000016d9         db  0xdf ; '.'
00000000000016da         db  0x20 ; ' '
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x07 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x31 ; '1'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x00 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x28 ; '('
00000000000016f1         db  0xdf ; '.'
00000000000016f2         db  0x20 ; ' '
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x07 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x32 ; '2'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x00 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x30 ; '0'
0000000000001709         db  0xdf ; '.'
000000000000170a         db  0x20 ; ' '
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x07 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x33 ; '3'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x00 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x38 ; '8'
0000000000001721         db  0xdf ; '.'
0000000000001722         db  0x20 ; ' '
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x07 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x34 ; '4'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x00 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x40 ; '@'
0000000000001739         db  0xdf ; '.'
000000000000173a         db  0x20 ; ' '
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x07 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x35 ; '5'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x00 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x48 ; 'H'
0000000000001751         db  0xdf ; '.'
0000000000001752         db  0x20 ; ' '
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x07 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x36 ; '6'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x00 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x50 ; 'P'
0000000000001769         db  0xdf ; '.'
000000000000176a         db  0x20 ; ' '
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x07 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x37 ; '7'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x00 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x58 ; 'X'
0000000000001781         db  0xdf ; '.'
0000000000001782         db  0x20 ; ' '
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x07 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x38 ; '8'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x00 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x60 ; '`'
0000000000001799         db  0xdf ; '.'
000000000000179a         db  0x20 ; ' '
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x07 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x39 ; '9'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x00 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x68 ; 'h'
00000000000017b1         db  0xdf ; '.'
00000000000017b2         db  0x20 ; ' '
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x07 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x3a ; ':'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x00 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x70 ; 'p'
00000000000017c9         db  0xdf ; '.'
00000000000017ca         db  0x20 ; ' '
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x07 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x3b ; ';'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x00 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x78 ; 'x'
00000000000017e1         db  0xdf ; '.'
00000000000017e2         db  0x20 ; ' '
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x07 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x3c ; '<'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x00 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x80 ; '.'
00000000000017f9         db  0xdf ; '.'
00000000000017fa         db  0x20 ; ' '
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x07 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x3d ; '='
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x00 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x88 ; '.'
0000000000001811         db  0xdf ; '.'
0000000000001812         db  0x20 ; ' '
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x07 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x3e ; '>'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x00 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x90 ; '.'
0000000000001829         db  0xdf ; '.'
000000000000182a         db  0x20 ; ' '
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x07 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x3f ; '?'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x00 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x98 ; '.'
0000000000001841         db  0xdf ; '.'
0000000000001842         db  0x20 ; ' '
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x07 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x40 ; '@'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x00 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0xa0 ; '.'
0000000000001859         db  0xdf ; '.'
000000000000185a         db  0x20 ; ' '
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x07 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x41 ; 'A'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x00 ; '.'
0000000000001869         db  0x00 ; '.'
000000000000186a         db  0x00 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0xa8 ; '.'
0000000000001871         db  0xdf ; '.'
0000000000001872         db  0x20 ; ' '
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x07 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x42 ; 'B'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x00 ; '.'
0000000000001881         db  0x00 ; '.'
0000000000001882         db  0x00 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0xb0 ; '.'
0000000000001889         db  0xdf ; '.'
000000000000188a         db  0x20 ; ' '
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x07 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x43 ; 'C'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x00 ; '.'
0000000000001899         db  0x00 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0xb8 ; '.'
00000000000018a1         db  0xdf ; '.'
00000000000018a2         db  0x20 ; ' '
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x07 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x45 ; 'E'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x00 ; '.'
00000000000018b1         db  0x00 ; '.'
00000000000018b2         db  0x00 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0xc0 ; '.'
00000000000018b9         db  0xdf ; '.'
00000000000018ba         db  0x20 ; ' '
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x07 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x46 ; 'F'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x00 ; '.'
00000000000018c9         db  0x00 ; '.'
00000000000018ca         db  0x00 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0xc8 ; '.'
00000000000018d1         db  0xdf ; '.'
00000000000018d2         db  0x20 ; ' '
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x07 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x48 ; 'H'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x00 ; '.'
00000000000018e1         db  0x00 ; '.'
00000000000018e2         db  0x00 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x18e8; 0x18ff[ (23 bytes)
        ; File offset : [6376; 6399[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000018e8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000018ec         mov        rax, qword [qword_20dfe8]                   ; qword_20dfe8
00000000000018f3         test       rax, rax
00000000000018f6         je         loc_18fa

00000000000018f8         call       rax

                     loc_18fa:
00000000000018fa         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000018fe         ret
                        ; endp
00000000000018ff         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1900; 0x1d30[ (1072 bytes)
        ; File offset : [6400; 7472[ (1072 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1900:
0000000000001900         push       qword [qword_20ddb0]                        ; Begin of unwind block (FDE at 0xc21c), qword_20ddb0, CODE XREF=sub_1916+5
0000000000001906         jmp        qword [qword_20ddb0+8]                      ; 0x20ddb8
                        ; endp
000000000000190c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endgrent:        // endgrent
0000000000001910         jmp        qword [endgrent@GOT]                        ; endgrent, endgrent@GOT, CODE XREF=main+824
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x0
000000000000191b         jmp        loc_1900


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001920         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4200+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, filesystem_type+295, cwd_advance_fd+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x1
000000000000192b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001930         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+902, main+1246, sub_29d0+232, sub_2e40+350, sub_2e40+731, sub_2e40+857, sub_32e0+325, sub_32e0+611, chown_files+127, close_stdout+22, quotearg_n_options+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x2
000000000000193b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001940         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+828, usage+1021
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x3
000000000000194b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001950         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x4
000000000000195b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
0000000000001960         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=user_group_str+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x5
000000000000196b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001970         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x6
000000000000197b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
0000000000001980         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=fts_sort+124
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x7
000000000000198b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001990         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x8
000000000000199b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000019a0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+114
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x9
00000000000019ab         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000019b0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0xa
00000000000019bb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwuid:        // getpwuid
00000000000019c0         jmp        qword [getpwuid@GOT]                        ; getpwuid, getpwuid@GOT, CODE XREF=uid_to_name+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0xb
00000000000019cb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000019d0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0xc
00000000000019db         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpcpy:        // stpcpy
00000000000019e0         jmp        qword [stpcpy@GOT]                          ; stpcpy, stpcpy@GOT, CODE XREF=user_group_str+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0xd
00000000000019eb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000019f0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+894, main+1028, main+1089, main+1127, main+1176, main+1238, usage+56, usage+102, usage+149, usage+186, usage+223
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0xe
00000000000019fb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001a00         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0xf
0000000000001a0b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001a10         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=user_group_str+20, user_group_str+31, quotearg_buffer_restyled+343, sub_4200+411, sub_4200+1742, xstrdup+4, fts_build+539, rpl_fts_open+136, rpl_fts_open+452, rpl_fts_read+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x10
0000000000001a1b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000001a20         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=get_root_dev_ino+45, fts_stat+348
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x11
0000000000001a2b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
0000000000001a30         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x12
0000000000001a3b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001a40         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1203, gid_to_name+79, uid_to_name+79, sub_35f0+170, sub_4200+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, get_root_dev_ino+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x13
0000000000001a4b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001a50         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+174
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x14
0000000000001a5b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001a60         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x15
0000000000001a6b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001a70         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoul+291, xstrtoul+323, xstrtoul+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x16
0000000000001a7b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrgid:        // getgrgid
0000000000001a80         jmp        qword [getgrgid@GOT]                        ; getgrgid, getgrgid@GOT, CODE XREF=gid_to_name+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x17
0000000000001a8b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000001a90         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=sub_29d0+658, fts_stat+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x18
0000000000001a9b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001aa0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14, rpl_fts_read+758
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x19
0000000000001aab         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001ab0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x1a
0000000000001abb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001ac0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=sub_5fbf+27, xstrtoul+927, cycle_check+133
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x1b
0000000000001acb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001ad0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x1c
0000000000001adb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001ae0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=sub_2e40+876, sub_32e0+344, sub_32e0+630, sub_35f0+152, fd_ring_clear+50, cwd_advance_fd+63, cwd_advance_fd+82, fts_safe_changedir+226, fts_safe_changedir+437, fts_build+1383, rpl_fts_close+243
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x1d
0000000000001aeb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___openat_2:        // __openat_2
0000000000001af0         jmp        qword [__openat_2@GOT]                      ; __openat_2, __openat_2@GOT, CODE XREF=sub_2e40+324, sub_32e0+726
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x1e
0000000000001afb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000001b00         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=fts_lfree+29, fts_build+1348, fts_build+1444, fts_build+1647, fts_build+1979, fts_build+2427
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x1f
0000000000001b0b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001b10         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x20
0000000000001b1b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001b20         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+160, usage+197, usage+234, usage+271, usage+308, usage+345, usage+382, usage+419, usage+456, usage+493, usage+1136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x21
0000000000001b2b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001b30         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26, rpl_fts_open+72, hash_initialize+177, hash_rehash+198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x22
0000000000001b3b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
0000000000001b40         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=fts_build+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x23
0000000000001b4b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001b50         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, fts_alloc+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x24
0000000000001b5b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrnam:        // getgrnam
0000000000001b60         jmp        qword [getgrnam@GOT]                        ; getgrnam, getgrnam@GOT, CODE XREF=main+807
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x25
0000000000001b6b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001b70         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x26
0000000000001b7b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001b80         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+594, fts_stat+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x27
0000000000001b8b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000001b90         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=fts_build+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x28
0000000000001b9b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001ba0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, fts_alloc+30, filesystem_type+224, setup_dir.isra.4+69, enter_dir.isra.10+23, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x29
0000000000001bab         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001bb0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x2a
0000000000001bbb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001bc0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x2b
0000000000001bcb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001bd0         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=sub_2e40+806, fts_safe_changedir+189
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0x2c
0000000000001bdb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001be0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0x2d
0000000000001beb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchdir:        // fchdir
0000000000001bf0         jmp        qword [fchdir@GOT]                          ; fchdir, fchdir@GOT, CODE XREF=restore_initial_cwd+29, fts_safe_changedir+380, rpl_fts_close+231, rpl_fts_read+1677, rpl_fts_children+236
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0x2e
0000000000001bfb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001c00         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, fts_sort+64, fts_palloc.isra.2+29
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0x2f
0000000000001c0b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001c10         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+83, usage+803, usage+996, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0x30
0000000000001c1b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001c20         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+123, usage+547, usage+791, usage+884, usage+945, usage+984, usage+1087, sub_29d0+473, sub_32e0+157, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0x31
0000000000001c2b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001c30         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=fts_build+949, rpl_fts_read+745, rpl_fts_read+802, rpl_fts_read+998
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x32
0000000000001c3b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001c40         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+922, main+1048, main+1103, main+1144, main+1193, main+1266, sub_29d0+837, sub_29d0+873, sub_2db0+44, sub_2e40+202, sub_2e40+238
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x33
0000000000001c4b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001c50         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x34
0000000000001c5b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001c60         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c66:
0000000000001c66         push       0x35
0000000000001c6b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchown:        // fchown
0000000000001c70         jmp        qword [fchown@GOT]                          ; fchown, fchown@GOT, CODE XREF=sub_35f0+122
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c76:
0000000000001c76         push       0x36
0000000000001c7b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000001c80         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c86:
0000000000001c86         push       0x37
0000000000001c8b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000001c90         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c96:
0000000000001c96         push       0x38
0000000000001c9b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fstatfs:        // fstatfs
0000000000001ca0         jmp        qword [fstatfs@GOT]                         ; fstatfs, fstatfs@GOT, CODE XREF=filesystem_type+200
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ca6:
0000000000001ca6         push       0x39
0000000000001cab         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001cb0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cb6:
0000000000001cb6         push       0x3a
0000000000001cbb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchownat:        // fchownat
0000000000001cc0         jmp        qword [fchownat@GOT]                        ; fchownat, fchownat@GOT, CODE XREF=sub_29d0+219, sub_2e40+433
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cc6:
0000000000001cc6         push       0x3b
0000000000001ccb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001cd0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+420, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cd6:
0000000000001cd6         push       0x3c
0000000000001cdb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001ce0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ce6:
0000000000001ce6         push       0x3d
0000000000001ceb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001cf0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872, hash_print_statistics+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cf6:
0000000000001cf6         push       0x3e
0000000000001cfb         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001d00         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4200+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d06:
0000000000001d06         push       0x3f
0000000000001d0b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001d10         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4200+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d16:
0000000000001d16         push       0x40
0000000000001d1b         jmp        0x1900
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001d20         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3fa0+51, xstrtoul+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d26:
0000000000001d26         push       0x41
0000000000001d2b         jmp        0x1900
                        ; endp


        ; Section .plt.got
        ; Range: [0x1d30; 0x1d40[ (16 bytes)
        ; File offset : [7472; 7488[ (16 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d30:
0000000000001d30         jmp        qword [qword_20dfd0]                        ; qword, End of unwind block (FDE at 0xc21c), Begin of unwind block (FDE at 0xc244), qword_20dfd0, CODE XREF=chopt_free+8, chopt_free+18, sub_29d0+481, sub_29d0+491, sub_29d0+501, sub_29d0+509, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp
0000000000001d36         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20dff8:        // qword_20dff8
0000000000001d38         jmp        qword [qword_20dff8]                        ; qword, qword_20dff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001d3e         align      64


        ; Section .text
        ; Range: [0x1d40; 0xa40e[ (34510 bytes)
        ; File offset : [7488; 41998[ (34510 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_B8: int32_t, -184
        ;    var_D8: int8_t, -216
        ;    var_E8: int64_t, -232
        ;    var_F7: int8_t, -247
        ;    var_F8: int8_t, -248
        ;    var_100: int64_t, -256
        ;    var_104: int8_t, -260
        ;    var_108: int32_t, -264
        ;    var_110: int64_t, -272
        ;    var_120: int64_t, -288


                     main:
0000000000001d40         push       r15                                         ; End of unwind block (FDE at 0xc244), Begin of unwind block (FDE at 0xc288), DATA XREF=_start+29
0000000000001d42         push       r14
0000000000001d44         mov        r15d, 0x1
0000000000001d4a         push       r13
0000000000001d4c         push       r12
0000000000001d4e         mov        r13d, 0xffffffff
0000000000001d54         push       rbp
0000000000001d55         push       rbx
0000000000001d56         movsxd     rbp, edi
0000000000001d59         mov        rbx, rsi
0000000000001d5c         mov        r12d, 0x10
0000000000001d62         xor        r14d, r14d
0000000000001d65         sub        rsp, 0xf8
0000000000001d6c         mov        rdi, qword [rsi]
0000000000001d6f         mov        rax, qword [fs:0x28]
0000000000001d78         mov        qword [rsp+0x128+var_40], rax
0000000000001d80         xor        eax, eax
0000000000001d82         call       set_program_name                            ; set_program_name
0000000000001d87         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xb741
0000000000001d8e         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001d93         call       j_setlocale                                 ; setlocale
0000000000001d98         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001d9f         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001da6         call       j_bindtextdomain                            ; bindtextdomain
0000000000001dab         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001db2         call       j_textdomain                                ; textdomain
0000000000001db7         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001dbe         call       atexit                                      ; atexit
0000000000001dc3         lea        rax, qword [rsp+0x128+var_108]
0000000000001dc8         mov        rdi, rax
0000000000001dcb         mov        qword [rsp+0x128+var_120], rax
0000000000001dd0         call       chopt_init                                  ; chopt_init
0000000000001dd5         nop        dword [rax]

                     loc_1dd8:
0000000000001dd8         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+250, main+296, main+342, main+431, main+441, main+452, main+465, main+473, main+484, main+497, main+505
0000000000001ddf         lea        rdx, qword [aHlprcfhv]                      ; argument "__shortopts" for method j_getopt_long, "HLPRcfhv"
0000000000001de6         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001de9         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001dec         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001dee         call       j_getopt_long                               ; getopt_long
0000000000001df3         cmp        eax, 0xffffffff
0000000000001df6         je         loc_1f49

0000000000001dfc         cmp        eax, 0x63
0000000000001dff         je         loc_1f29

0000000000001e05         jle        loc_1e40

0000000000001e07         cmp        eax, 0x80
0000000000001e0c         je         loc_1efe

0000000000001e12         jg         loc_1e70

0000000000001e14         cmp        eax, 0x68
0000000000001e17         je         loc_1f16

0000000000001e1d         cmp        eax, 0x76
0000000000001e20         je         loc_1f09

0000000000001e26         cmp        eax, 0x66
0000000000001e29         je         loc_1e35

                     loc_1e2b:
0000000000001e2b         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+288, main+326, main+1058, main+1108, main+1198
0000000000001e30         call       usage                                       ; usage

                     loc_1e35:
0000000000001e35         mov        byte [rsp+0x128+var_F7], r15b               ; CODE XREF=main+233
0000000000001e3a         jmp        loc_1dd8
0000000000001e3c         align      64

                     loc_1e40:
0000000000001e40         cmp        eax, 0x48                                   ; CODE XREF=main+197
0000000000001e43         je         loc_1f1e

0000000000001e49         jle        loc_1ea0

0000000000001e4b         cmp        eax, 0x50
0000000000001e4e         je         loc_1ee9

0000000000001e54         cmp        eax, 0x52
0000000000001e57         je         loc_1ef4

0000000000001e5d         cmp        eax, 0x4c
0000000000001e60         jne        loc_1e2b

0000000000001e62         mov        r12d, 0x2
0000000000001e68         jmp        loc_1dd8
0000000000001e6d         align      16

                     loc_1e70:
0000000000001e70         cmp        eax, 0x82                                   ; CODE XREF=main+210
0000000000001e75         je         loc_1f3e

0000000000001e7b         jl         loc_1f36

0000000000001e81         cmp        eax, 0x83
0000000000001e86         jne        loc_1e2b

0000000000001e88         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001e8f         mov        qword [reference_file], rax                 ; reference_file
0000000000001e96         jmp        loc_1dd8
0000000000001e9b         align      32

                     loc_1ea0:
0000000000001ea0         cmp        eax, 0xffffff7d                             ; CODE XREF=main+265
0000000000001ea5         jne        loc_215d

0000000000001eab         sub        rsp, 0x8
0000000000001eaf         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001eb6         mov        rcx, qword [Version]                        ; Version
0000000000001ebd         push       0x0
0000000000001ebf         lea        r9, qword [aJimMeyering]                    ; "Jim Meyering"
0000000000001ec6         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001ecd         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xa4a0
0000000000001ed4         lea        rsi, qword [aChgrp]                         ; "chgrp"
0000000000001edb         xor        eax, eax
0000000000001edd         call       version_etc                                 ; version_etc
0000000000001ee2         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001ee4         call       j_exit                                      ; exit
                        ; endp

                     loc_1ee9:
0000000000001ee9         mov        r12d, 0x10                                  ; CODE XREF=main+270
0000000000001eef         jmp        loc_1dd8

                     loc_1ef4:
0000000000001ef4         mov        byte [rsp+0x128+var_104], r15b              ; CODE XREF=main+279
0000000000001ef9         jmp        loc_1dd8

                     loc_1efe:
0000000000001efe         mov        r13d, 0x1                                   ; CODE XREF=main+204
0000000000001f04         jmp        loc_1dd8

                     loc_1f09:
0000000000001f09         mov        dword [rsp+0x128+var_108], 0x0              ; CODE XREF=main+224
0000000000001f11         jmp        loc_1dd8

                     loc_1f16:
0000000000001f16         xor        r13d, r13d                                  ; CODE XREF=main+215
0000000000001f19         jmp        loc_1dd8

                     loc_1f1e:
0000000000001f1e         mov        r12d, 0x11                                  ; CODE XREF=main+259
0000000000001f24         jmp        loc_1dd8

                     loc_1f29:
0000000000001f29         mov        dword [rsp+0x128+var_108], 0x1              ; CODE XREF=main+191
0000000000001f31         jmp        loc_1dd8

                     loc_1f36:
0000000000001f36         xor        r14d, r14d                                  ; CODE XREF=main+315
0000000000001f39         jmp        loc_1dd8

                     loc_1f3e:
0000000000001f3e         mov        r14d, 0x1                                   ; CODE XREF=main+309
0000000000001f44         jmp        loc_1dd8

                     loc_1f49:
0000000000001f49         cmp        byte [rsp+0x128+var_104], 0x0               ; CODE XREF=main+182
0000000000001f4e         jne        loc_201d

0000000000001f54         mov        r12d, 0x10

                     loc_1f5a:
0000000000001f5a         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+737, main+756
0000000000001f61         test       r13d, r13d
0000000000001f64         mov        r13, qword [reference_file]                 ; reference_file
0000000000001f6b         mov        edx, ebp
0000000000001f6d         setne      byte [rsp+0x128+var_F8]
0000000000001f72         sub        edx, eax
0000000000001f74         test       r13, r13
0000000000001f77         je         loc_2039

0000000000001f7d         test       edx, edx
0000000000001f7f         jle        loc_216f

0000000000001f85         lea        rdx, qword [rsp+0x128+var_D8]               ; argument "__stat_buf" for method j___xstat
0000000000001f8a         mov        rsi, r13                                    ; argument "__filename" for method j___xstat
0000000000001f8d         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000001f92         call       j___xstat                                   ; __xstat
0000000000001f97         test       eax, eax
0000000000001f99         jne        loc_21f8

0000000000001f9f         mov        ebp, dword [rsp+0x128+var_B8]
0000000000001fa3         mov        edi, ebp
0000000000001fa5         call       gid_to_name                                 ; gid_to_name
0000000000001faa         mov        qword [rsp+0x128+var_E8], rax

                     loc_1faf:
0000000000001faf         cmp        byte [rsp+0x128+var_104], 0x0               ; CODE XREF=main+829, main+930
0000000000001fb4         je         loc_1fbf

0000000000001fb6         test       r14b, r14b
0000000000001fb9         jne        loc_2082

                     loc_1fbf:
0000000000001fbf         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+628, main+854
0000000000001fc6         sub        rsp, 0x8
0000000000001fca         or         r9d, 0xffffffff
0000000000001fce         push       qword [rsp+0x130+var_120]
0000000000001fd2         mov        esi, r12d
0000000000001fd5         mov        ecx, ebp
0000000000001fd7         or         esi, 0x400
0000000000001fdd         mov        edx, r9d
0000000000001fe0         mov        r8d, r9d
0000000000001fe3         lea        rdi, qword [rbx+rax*8]
0000000000001fe7         call       chown_files                                 ; chown_files
0000000000001fec         pop        rdx
0000000000001fed         pop        rcx
0000000000001fee         xor        eax, 0x1
0000000000001ff1         movzx      eax, al
0000000000001ff4         mov        rcx, qword [rsp+0x128+var_40]
0000000000001ffc         xor        rcx, qword [fs:0x28]
0000000000002005         jne        loc_21f3

000000000000200b         add        rsp, 0xf8
0000000000002012         pop        rbx
0000000000002013         pop        rbp
0000000000002014         pop        r12
0000000000002016         pop        r13
0000000000002018         pop        r14
000000000000201a         pop        r15
000000000000201c         ret
                        ; endp

                     loc_201d:
000000000000201d         cmp        r12d, 0x10                                  ; CODE XREF=main+526
0000000000002021         jne        loc_1f5a

0000000000002027         sub        r13d, 0x1
000000000000202b         je         loc_2199

0000000000002031         xor        r13d, r13d
0000000000002034         jmp        loc_1f5a

                     loc_2039:
0000000000002039         sub        edx, 0x1                                    ; CODE XREF=main+567
000000000000203c         jle        loc_216f

0000000000002042         mov        r15, qword [rbx+rax*8]
0000000000002046         lea        edx, dword [rax+1]
0000000000002049         mov        dword [optind@@GLIBC_2.2.5], edx            ; optind@@GLIBC_2.2.5
000000000000204f         cmp        byte [r15], 0x0
0000000000002053         jne        loc_20e7

                     loc_2059:
0000000000002059         mov        qword [rsp+0x128+var_E8], r13               ; CODE XREF=main+946
000000000000205e         cmp        byte [r15], 0x0
0000000000002062         je         loc_20df

0000000000002064         mov        rdi, r15                                    ; argument "__name" for method j_getgrnam
0000000000002067         call       j_getgrnam                                  ; getgrnam
000000000000206c         test       rax, rax
000000000000206f         je         loc_20f7

0000000000002075         mov        ebp, dword [rax+0x10]

                     loc_2078:
0000000000002078         call       j_endgrent                                  ; endgrent, CODE XREF=main+997
000000000000207d         jmp        loc_1faf

                     loc_2082:
0000000000002082         lea        rdi, qword [dev_ino_buf.7117]               ; dev_ino_buf.7117, CODE XREF=main+633
0000000000002089         call       get_root_dev_ino                            ; get_root_dev_ino
000000000000208e         test       rax, rax
0000000000002091         mov        qword [rsp+0x128+var_100], rax
0000000000002096         jne        loc_1fbf

000000000000209c         lea        rsi, qword [aLibs+6]                        ; 0xb20e
00000000000020a3         mov        edi, 0x4
00000000000020a8         call       quotearg_style                              ; quotearg_style
00000000000020ad         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
00000000000020b4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020b9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020bb         mov        rbp, rax
00000000000020be         call       j_dcgettext                                 ; dcgettext
00000000000020c3         mov        rbx, rax
00000000000020c6         call       j___errno_location                          ; __errno_location
00000000000020cb         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000020cd         mov        rcx, rbp
00000000000020d0         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000020d3         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000020d8         xor        eax, eax
00000000000020da         call       j_error                                     ; error

                     loc_20df:
00000000000020df         or         ebp, 0xffffffff                             ; CODE XREF=main+802
00000000000020e2         jmp        loc_1faf

                     loc_20e7:
00000000000020e7         mov        rdi, r15                                    ; CODE XREF=main+787
00000000000020ea         call       xstrdup                                     ; xstrdup
00000000000020ef         mov        r13, rax
00000000000020f2         jmp        loc_2059

                     loc_20f7:
00000000000020f7         lea        rcx, qword [rsp+0x128+var_110]              ; CODE XREF=main+815
00000000000020fc         lea        r8, qword [aWrittenBySSAnd+27]              ; 0xb741
0000000000002103         xor        esi, esi
0000000000002105         mov        edx, 0xa
000000000000210a         mov        rdi, r15
000000000000210d         call       xstrtoul                                    ; xstrtoul
0000000000002112         test       eax, eax
0000000000002114         jne        loc_212b

0000000000002116         mov        rax, qword [rsp+0x128+var_110]
000000000000211b         mov        edx, 0xffffffff
0000000000002120         cmp        rax, rdx
0000000000002123         mov        ebp, eax
0000000000002125         jbe        loc_2078

                     loc_212b:
000000000000212b         mov        rdi, r15                                    ; CODE XREF=main+980
000000000000212e         call       quote                                       ; quote
0000000000002133         lea        rsi, qword [aInvalidGroupS]                 ; argument "msgid" for method j_dcgettext, "invalid group: %s"
000000000000213a         mov        rbx, rax
000000000000213d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002142         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002144         call       j_dcgettext                                 ; dcgettext
0000000000002149         mov        rcx, rbx
000000000000214c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000214f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002151         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002156         xor        eax, eax
0000000000002158         call       j_error                                     ; error

                     loc_215d:
000000000000215d         cmp        eax, 0xffffff7e                             ; CODE XREF=main+357
0000000000002162         jne        loc_1e2b

0000000000002168         xor        edi, edi                                    ; argument #1 for method usage
000000000000216a         call       usage                                       ; usage

                     loc_216f:
000000000000216f         cmp        eax, ebp                                    ; CODE XREF=main+575, main+764
0000000000002171         jl         loc_21bd

0000000000002173         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand"
000000000000217a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000217c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002181         call       j_dcgettext                                 ; dcgettext
0000000000002186         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002188         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000218b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000218d         xor        eax, eax
000000000000218f         call       j_error                                     ; error
0000000000002194         jmp        loc_1e2b

                     loc_2199:
0000000000002199         lea        rsi, qword [aRDereferenceRe]                ; argument "msgid" for method j_dcgettext, "-R --dereference requires either -H or -L", CODE XREF=main+747
00000000000021a0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021a7         call       j_dcgettext                                 ; dcgettext
00000000000021ac         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000021ae         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000021b1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000021b6         xor        eax, eax
00000000000021b8         call       j_error                                     ; error

                     loc_21bd:
00000000000021bd         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=main+1073
00000000000021c2         call       quote                                       ; quote
00000000000021c7         lea        rsi, qword [aMissingOperand_a51b]           ; argument "msgid" for method j_dcgettext, "missing operand after %s"
00000000000021ce         mov        rbx, rax
00000000000021d1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021d3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021d8         call       j_dcgettext                                 ; dcgettext
00000000000021dd         mov        rcx, rbx
00000000000021e0         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000021e3         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000021e5         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000021e7         xor        eax, eax
00000000000021e9         call       j_error                                     ; error
00000000000021ee         jmp        loc_1e2b

                     loc_21f3:
00000000000021f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+709
                        ; endp

                     loc_21f8:
00000000000021f8         mov        rsi, r13                                    ; CODE XREF=main+601
00000000000021fb         mov        edi, 0x4
0000000000002200         call       quotearg_style                              ; quotearg_style
0000000000002205         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
000000000000220c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002211         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002213         mov        rbp, rax
0000000000002216         call       j_dcgettext                                 ; dcgettext
000000000000221b         mov        rbx, rax
000000000000221e         call       j___errno_location                          ; __errno_location
0000000000002223         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002225         mov        rcx, rbp
0000000000002228         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000222b         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002230         xor        eax, eax
0000000000002232         call       j_error                                     ; error
0000000000002237         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xc288)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002240         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xc1ec)
0000000000002242         mov        r9, rdx
0000000000002245         pop        rsi
0000000000002246         mov        rdx, rsp
0000000000002249         and        rsp, 0xfffffffffffffff0
000000000000224d         push       rax
000000000000224e         push       rsp
000000000000224f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002256         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000225d         lea        rdi, qword [main]                           ; main
0000000000002264         call       qword [qword_20dfd8+8]                      ; 0x20dfe0
000000000000226a         hlt
                        ; endp
000000000000226b         align      16                                          ; End of unwind block (FDE at 0xc1ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002270         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002277         push       rbp
0000000000002278         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000227f         cmp        rax, rdi
0000000000002282         mov        rbp, rsp
0000000000002285         je         loc_22a0

0000000000002287         mov        rax, qword [qword_20dfd8]                   ; qword_20dfd8
000000000000228e         test       rax, rax
0000000000002291         je         loc_22a0

0000000000002293         pop        rbp
0000000000002294         jmp        rax
                        ; endp
0000000000002296         align      32

                     loc_22a0:
00000000000022a0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000022a1         ret
                        ; endp
00000000000022a2         align      16

                     register_tm_clones:
00000000000022b0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
00000000000022b7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000022be         push       rbp
00000000000022bf         sub        rsi, rdi
00000000000022c2         mov        rbp, rsp
00000000000022c5         sar        rsi, 0x3
00000000000022c9         mov        rax, rsi
00000000000022cc         shr        rax, 0x3f
00000000000022d0         add        rsi, rax
00000000000022d3         sar        rsi, 0x1
00000000000022d6         je         loc_22f0

00000000000022d8         mov        rax, qword [qword_20dff0]                   ; qword_20dff0
00000000000022df         test       rax, rax
00000000000022e2         je         loc_22f0

00000000000022e4         pop        rbp
00000000000022e5         jmp        rax
                        ; endp
00000000000022e7         align      16

                     loc_22f0:
00000000000022f0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000022f1         ret
                        ; endp
00000000000022f2         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002300         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002307         jne        loc_2338

0000000000002309         cmp        qword [qword_20dff8], 0x0                   ; qword_20dff8
0000000000002311         push       rbp
0000000000002312         mov        rbp, rsp
0000000000002315         je         loc_2323

0000000000002317         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000231e         call       j_qword_20dff8                              ; qword_20dff8

                     loc_2323:
0000000000002323         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002328         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000232f         pop        rbp
0000000000002330         ret
                        ; endp
0000000000002331         align      8

                     loc_2338:
0000000000002338         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000233a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002340         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002341         mov        rbp, rsp
0000000000002344         pop        rbp
0000000000002345         jmp        register_tm_clones                          ; register_tm_clones
000000000000234a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002350         push       r13                                         ; Begin of unwind block (FDE at 0xc25c), CODE XREF=main+240, main+1066
0000000000002352         push       r12
0000000000002354         mov        edx, 0x5
0000000000002359         push       rbp
000000000000235a         push       rbx
000000000000235b         mov        ebp, edi
000000000000235d         sub        rsp, 0x88
0000000000002364         mov        rbx, qword [program_name]                   ; program_name
000000000000236b         mov        rax, qword [fs:0x28]
0000000000002374         mov        qword [rsp+0xa8+var_30], rax
0000000000002379         xor        eax, eax
000000000000237b         test       edi, edi
000000000000237d         je         loc_23ad

000000000000237f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002386         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002388         call       j_dcgettext                                 ; dcgettext
000000000000238d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002394         mov        rdx, rax
0000000000002397         mov        rcx, rbx
000000000000239a         mov        esi, 0x1
000000000000239f         xor        eax, eax
00000000000023a1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_23a6:
00000000000023a6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+950
00000000000023a8         call       j_exit                                      ; exit
                        ; endp

                     loc_23ad:
00000000000023ad         lea        rsi, qword [aUsageSOptionGr]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... GROUP FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n", CODE XREF=usage+45
00000000000023b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023b6         call       j_dcgettext                                 ; dcgettext
00000000000023bb         mov        rcx, rbx
00000000000023be         mov        rdx, rbx
00000000000023c1         mov        rsi, rax
00000000000023c4         mov        edi, 0x1
00000000000023c9         xor        eax, eax
00000000000023cb         call       j___printf_chk                              ; __printf_chk
00000000000023d0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023d7         lea        rsi, qword [aChangeTheGroup]                ; argument "msgid" for method j_dcgettext, "Change the group of each FILE to GROUP.\\nWith --reference, change the group of each FILE to that of RFILE.\\n\\n"
00000000000023de         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023e3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023e5         call       j_dcgettext                                 ; dcgettext
00000000000023ea         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023ed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000023f0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000023f5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023fc         lea        rsi, qword [aCChangesLikeVe]                ; argument "msgid" for method j_dcgettext, "  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n"
0000000000002403         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002408         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000240a         call       j_dcgettext                                 ; dcgettext
000000000000240f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002412         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002415         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000241a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002421         lea        rsi, qword [aDereferenceAff]                ; argument "msgid" for method j_dcgettext, "      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n"
0000000000002428         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000242d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000242f         call       j_dcgettext                                 ; dcgettext
0000000000002434         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002437         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000243a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000243f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002446         lea        rsi, qword [aUsefulOnlyOnSy]                ; argument "msgid" for method j_dcgettext, "                         (useful only on systems that can change the\\n                         ownership of a symlink)\\n"
000000000000244d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002452         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002454         call       j_dcgettext                                 ; dcgettext
0000000000002459         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000245c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000245f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002464         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000246b         lea        rsi, qword [aNopreserveroot]                ; argument "msgid" for method j_dcgettext, "      --no-preserve-root  do not treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n"
0000000000002472         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002477         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002479         call       j_dcgettext                                 ; dcgettext
000000000000247e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002481         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002484         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002489         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002490         lea        rsi, qword [aReferencerfile]                ; argument "msgid" for method j_dcgettext, "      --reference=RFILE  use RFILE's group rather than specifying a\\n                         GROUP value\\n"
0000000000002497         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000249c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000249e         call       j_dcgettext                                 ; dcgettext
00000000000024a3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024a6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024a9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024ae         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024b5         lea        rsi, qword [aRRecursiveOper]                ; argument "msgid" for method j_dcgettext, "  -R, --recursive        operate on files and directories recursively\\n"
00000000000024bc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024c1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024c3         call       j_dcgettext                                 ; dcgettext
00000000000024c8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024cb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024ce         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024d3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024da         lea        rsi, qword [aNtheFollowingO]                ; argument "msgid" for method j_dcgettext, "\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                      …"
00000000000024e1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024e8         call       j_dcgettext                                 ; dcgettext
00000000000024ed         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024f0         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024f3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024f8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024ff         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002506         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000250b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000250d         call       j_dcgettext                                 ; dcgettext
0000000000002512         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002515         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002518         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000251d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002524         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
000000000000252b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002530         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002532         call       j_dcgettext                                 ; dcgettext
0000000000002537         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000253a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000253d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002542         mov        rbx, qword [program_name]                   ; program_name
0000000000002549         lea        rsi, qword [aNexamplesnSSta]                ; argument "msgid" for method j_dcgettext, "\\nExamples:\\n  %s staff /u      Change the group of /u to \\\"staff\\\".\\n  %s -hR staff /u  Change the group of /u and subfiles to \\\"staff\\\".\\n"
0000000000002550         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002555         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002557         call       j_dcgettext                                 ; dcgettext
000000000000255c         mov        rcx, rbx
000000000000255f         mov        rdx, rbx
0000000000002562         mov        rsi, rax
0000000000002565         mov        edi, 0x1
000000000000256a         xor        eax, eax
000000000000256c         lea        rbx, qword [aChgrp]                         ; "chgrp"
0000000000002573         call       j___printf_chk                              ; __printf_chk
0000000000002578         lea        rax, qword [aChgrp+6]                       ; 0xa42a
000000000000257f         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002586         mov        qword [rsp+0xa8+var_48], 0x0
000000000000258f         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002598         mov        rdx, rsp
000000000000259b         mov        qword [rsp+0xa8+var_A8], rax
000000000000259f         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000025a6         mov        qword [rsp+0xa8+var_78], rcx
00000000000025ab         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000025b2         mov        qword [rsp+0xa8+var_A0], rax
00000000000025b7         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000025be         mov        qword [rsp+0xa8+var_68], rcx
00000000000025c3         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000025ca         mov        qword [rsp+0xa8+var_98], rax
00000000000025cf         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000025d6         mov        qword [rsp+0xa8+var_58], rcx
00000000000025db         mov        qword [rsp+0xa8+var_90], rax
00000000000025e0         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000025e7         mov        qword [rsp+0xa8+var_88], rax
00000000000025ec         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000025f3         mov        qword [rsp+0xa8+var_80], rax
00000000000025f8         mov        qword [rsp+0xa8+var_70], rax
00000000000025fd         mov        qword [rsp+0xa8+var_60], rax
0000000000002602         mov        qword [rsp+0xa8+var_50], rax
0000000000002607         nop        word [rax+rax]

                     loc_2610:
0000000000002610         add        rdx, 0x10                                   ; CODE XREF=usage+733
0000000000002614         mov        rdi, qword [rdx]
0000000000002617         test       rdi, rdi
000000000000261a         je         loc_262f

000000000000261c         mov        ecx, 0x6
0000000000002621         mov        rsi, rbx
0000000000002624         rep  cmpsb byte [rsi], byte [rdi]
0000000000002626         seta       al
0000000000002629         sbb        al, 0x0
000000000000262b         test       al, al
000000000000262d         jne        loc_2610

                     loc_262f:
000000000000262f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+714
0000000000002633         xor        edi, edi
0000000000002635         mov        edx, 0x5
000000000000263a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002641         test       r12, r12
0000000000002644         je         loc_270b

000000000000264a         call       j_dcgettext                                 ; dcgettext
000000000000264f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002656         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xa4a0
000000000000265d         mov        rsi, rax
0000000000002660         mov        edi, 0x1
0000000000002665         xor        eax, eax
0000000000002667         call       j___printf_chk                              ; __printf_chk
000000000000266c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000266e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002673         call       j_setlocale                                 ; setlocale
0000000000002678         test       rax, rax
000000000000267b         je         loc_2699

000000000000267d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xa4ae
0000000000002684         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002689         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000268c         call       j_strncmp                                   ; strncmp
0000000000002691         test       eax, eax
0000000000002693         jne        loc_27a0

                     loc_2699:
0000000000002699         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+811, usage+1141
00000000000026a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026a7         call       j_dcgettext                                 ; dcgettext
00000000000026ac         lea        rcx, qword [aChgrp]                         ; "chgrp"
00000000000026b3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000026ba         mov        rsi, rax
00000000000026bd         mov        edi, 0x1
00000000000026c2         xor        eax, eax
00000000000026c4         call       j___printf_chk                              ; __printf_chk
00000000000026c9         cmp        r12, rbx
00000000000026cc         lea        rcx, qword [aMulticallInvoc+10]             ; 0xa446
00000000000026d3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xb741
00000000000026da         cmove      rbx, rcx

                     loc_26de:
00000000000026de         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1092
00000000000026e5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026ec         call       j_dcgettext                                 ; dcgettext
00000000000026f1         mov        rcx, rbx
00000000000026f4         mov        rsi, rax
00000000000026f7         mov        rdx, r12
00000000000026fa         mov        edi, 0x1
00000000000026ff         xor        eax, eax
0000000000002701         call       j___printf_chk                              ; __printf_chk
0000000000002706         jmp        loc_23a6

                     loc_270b:
000000000000270b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+756
0000000000002710         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/", DATA XREF=fts_build+430
0000000000002717         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xa4a0
000000000000271e         mov        rsi, rax
0000000000002721         mov        edi, 0x1
0000000000002726         xor        eax, eax
0000000000002728         call       j___printf_chk                              ; __printf_chk
000000000000272d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000272f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002734         call       j_setlocale                                 ; setlocale
0000000000002739         test       rax, rax
000000000000273c         je         loc_2756

000000000000273e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xa4ae
0000000000002745         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000274a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000274d         call       j_strncmp                                   ; strncmp
0000000000002752         test       eax, eax
0000000000002754         jne        loc_2799

                     loc_2756:
0000000000002756         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1004
000000000000275d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002762         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002764         lea        r12, qword [aChgrp]                         ; "chgrp"
000000000000276b         lea        rbx, qword [aMulticallInvoc+10]             ; 0xa446
0000000000002772         call       j_dcgettext                                 ; dcgettext
0000000000002777         lea        rcx, qword [aChgrp]                         ; "chgrp"
000000000000277e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002785         mov        rsi, rax
0000000000002788         mov        edi, 0x1
000000000000278d         xor        eax, eax
000000000000278f         call       j___printf_chk                              ; __printf_chk
0000000000002794         jmp        loc_26de

                     loc_2799:
0000000000002799         lea        r12, qword [aChgrp]                         ; "chgrp", CODE XREF=usage+1028

                     loc_27a0:
00000000000027a0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+835
00000000000027a7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000027ae         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027b0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027b5         call       j_dcgettext                                 ; dcgettext
00000000000027ba         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000027bd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000027c0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000027c5         jmp        loc_2699
00000000000027ca         align      16                                          ; End of unwind block (FDE at 0xc25c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     user_group_str:
00000000000027d0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc2f4), CODE XREF=sub_29d0+339, sub_29d0+375, sub_2e40+610
00000000000027d3         push       r12
00000000000027d5         push       rbp
00000000000027d6         push       rbx
00000000000027d7         je         loc_2828

00000000000027d9         test       rsi, rsi
00000000000027dc         je         loc_2830

00000000000027de         mov        rbx, rsi
00000000000027e1         mov        rbp, rdi
00000000000027e4         call       j_strlen                                    ; strlen
00000000000027e9         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000027ec         mov        r12, rax
00000000000027ef         call       j_strlen                                    ; strlen
00000000000027f4         lea        rdi, qword [r12+rax+2]
00000000000027f9         call       xmalloc                                     ; xmalloc
00000000000027fe         mov        rsi, rbp                                    ; argument "__src" for method j_stpcpy
0000000000002801         mov        rdi, rax                                    ; argument "__dest" for method j_stpcpy
0000000000002804         mov        r12, rax
0000000000002807         call       j_stpcpy                                    ; stpcpy
000000000000280c         lea        rdi, qword [rax+1]                          ; argument "__dest" for method j_strcpy
0000000000002810         mov        byte [rax], 0x3a
0000000000002813         mov        rsi, rbx                                    ; argument "__src" for method j_strcpy
0000000000002816         call       j_strcpy                                    ; strcpy

                     loc_281b:
000000000000281b         mov        rax, r12                                    ; CODE XREF=user_group_str+115
000000000000281e         pop        rbx
000000000000281f         pop        rbp
0000000000002820         pop        r12
0000000000002822         ret
                        ; endp
0000000000002823         align      8

                     loc_2828:
0000000000002828         test       rsi, rsi                                    ; CODE XREF=user_group_str+7
000000000000282b         je         loc_2840

000000000000282d         mov        rdi, rsi

                     loc_2830:
0000000000002830         pop        rbx                                         ; CODE XREF=user_group_str+12
0000000000002831         pop        rbp
0000000000002832         pop        r12
0000000000002834         jmp        xstrdup                                     ; xstrdup
0000000000002839         align      64

                     loc_2840:
0000000000002840         xor        r12d, r12d                                  ; CODE XREF=user_group_str+91
0000000000002843         jmp        loc_281b
0000000000002845         align      16                                          ; End of unwind block (FDE at 0xc2f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chopt_init:
0000000000002850         mov        dword [rdi], 0x2                            ; Begin of unwind block (FDE at 0xc330), CODE XREF=main+144
0000000000002856         mov        qword [rdi+8], 0x0
000000000000285e         mov        byte [rdi+0x10], 0x1
0000000000002862         mov        byte [rdi+4], 0x0
0000000000002866         mov        byte [rdi+0x11], 0x0
000000000000286a         mov        qword [rdi+0x18], 0x0
0000000000002872         mov        qword [rdi+0x20], 0x0
000000000000287a         ret
                        ; endp
000000000000287b         align      128                                         ; End of unwind block (FDE at 0xc330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chopt_free:
0000000000002880         push       rbx                                         ; Begin of unwind block (FDE at 0xc344)
0000000000002881         mov        rbx, rdi
0000000000002884         mov        rdi, qword [rdi+0x18]
0000000000002888         call       sub_1d30                                    ; sub_1d30
000000000000288d         mov        rdi, qword [rbx+0x20]
0000000000002891         pop        rbx
0000000000002892         jmp        sub_1d30                                    ; sub_1d30
                        ; endp
0000000000002897         align      32                                          ; End of unwind block (FDE at 0xc344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     gid_to_name:
00000000000028a0         push       rbx                                         ; Begin of unwind block (FDE at 0xc360), CODE XREF=main+613, sub_29d0+317, sub_32e0+99
00000000000028a1         mov        ebx, edi
00000000000028a3         sub        rsp, 0x20
00000000000028a7         mov        rax, qword [fs:0x28]
00000000000028b0         mov        qword [rsp+0x28+var_10], rax
00000000000028b5         xor        eax, eax
00000000000028b7         call       j_getgrgid                                  ; getgrgid
00000000000028bc         test       rax, rax
00000000000028bf         je         loc_28e0

00000000000028c1         mov        rdi, qword [rax]

                     loc_28c4:
00000000000028c4         call       xstrdup                                     ; xstrdup, CODE XREF=gid_to_name+77
00000000000028c9         mov        rdx, qword [rsp+0x28+var_10]
00000000000028ce         xor        rdx, qword [fs:0x28]
00000000000028d7         jne        loc_28ef

00000000000028d9         add        rsp, 0x20
00000000000028dd         pop        rbx
00000000000028de         ret
                        ; endp
00000000000028df         align      32

                     loc_28e0:
00000000000028e0         mov        edi, ebx                                    ; CODE XREF=gid_to_name+31
00000000000028e2         mov        rsi, rsp
00000000000028e5         call       umaxtostr                                   ; umaxtostr
00000000000028ea         mov        rdi, rax
00000000000028ed         jmp        loc_28c4

                     loc_28ef:
00000000000028ef         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=gid_to_name+55
                        ; endp
00000000000028f4         align      256                                         ; End of unwind block (FDE at 0xc360)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     uid_to_name:
0000000000002900         push       rbx                                         ; Begin of unwind block (FDE at 0xc384), CODE XREF=sub_29d0+303, sub_32e0+85
0000000000002901         mov        ebx, edi
0000000000002903         sub        rsp, 0x20
0000000000002907         mov        rax, qword [fs:0x28]
0000000000002910         mov        qword [rsp+0x28+var_10], rax
0000000000002915         xor        eax, eax
0000000000002917         call       j_getpwuid                                  ; getpwuid
000000000000291c         test       rax, rax
000000000000291f         je         loc_2940

0000000000002921         mov        rdi, qword [rax]

                     loc_2924:
0000000000002924         call       xstrdup                                     ; xstrdup, CODE XREF=uid_to_name+77
0000000000002929         mov        rdx, qword [rsp+0x28+var_10]
000000000000292e         xor        rdx, qword [fs:0x28]
0000000000002937         jne        loc_294f

0000000000002939         add        rsp, 0x20
000000000000293d         pop        rbx
000000000000293e         ret
                        ; endp
000000000000293f         align      64

                     loc_2940:
0000000000002940         mov        edi, ebx                                    ; CODE XREF=uid_to_name+31
0000000000002942         mov        rsi, rsp
0000000000002945         call       umaxtostr                                   ; umaxtostr
000000000000294a         mov        rdi, rax
000000000000294d         jmp        loc_2924

                     loc_294f:
000000000000294f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=uid_to_name+55
                        ; endp
0000000000002954         align      32                                          ; End of unwind block (FDE at 0xc384)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_B8: int32_t, -184
        ;    var_BC: int32_t, -188
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_168: int8_t, -360
        ;    var_170: int64_t, -368
        ;    var_178: int64_t, -376
        ;    var_17C: int32_t, -380
        ;    var_188: int64_t, -392
        ;    var_190: int64_t, -400
        ;    var_198: int64_t, -408
        ;    var_1A0: int64_t, -416
        ;    var_1A8: int64_t, -424


                     change_file_owner:
0000000000002960         push       r15                                         ; Begin of unwind block (FDE at 0xc3a8), CODE XREF=chown_files+105
0000000000002962         push       r14
0000000000002964         push       r13
0000000000002966         push       r12
0000000000002968         mov        r12d, r8d
000000000000296b         push       rbp
000000000000296c         push       rbx
000000000000296d         mov        rbp, rsi
0000000000002970         sub        rsp, 0x178
0000000000002977         movzx      r14d, word [rsi+0x70]
000000000000297c         mov        rax, qword [fs:0x28]
0000000000002985         mov        qword [rsp+0x1a8+var_40], rax
000000000000298d         xor        eax, eax
000000000000298f         mov        rax, qword [rsi+0x38]
0000000000002993         mov        qword [rsp+0x1a8+var_1A8], rdi
0000000000002997         mov        dword [rsp+0x1a8+var_198], edx
000000000000299b         mov        dword [rsp+0x1a8+var_190], ecx
000000000000299f         cmp        r14w, 0xa
00000000000029a4         mov        rbx, qword [rsp+0x1a8+arg_0]
00000000000029ac         mov        qword [rsp+0x1a8+var_1A0], rax
00000000000029b1         ja         loc_29eb

00000000000029b3         lea        rcx, qword [aNeitherSymboli+56]             ; 0xb188
00000000000029ba         movzx      edx, r14w
00000000000029be         movsxd     rax, dword [rcx+rdx*4]
00000000000029c2         add        rax, rcx
00000000000029c5         jmp        rax
                        ; endp
00000000000029c7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    ret_addr: int64_t, 0


                     sub_29d0:
00000000000029d0         mov        rdi, qword [rsp+ret_addr]
00000000000029d4         mov        dword [rsp+arg_18], r9d
00000000000029d9         call       cycle_warning_required                      ; cycle_warning_required
00000000000029de         test       al, al
00000000000029e0         mov        r9d, dword [rsp+arg_18]
00000000000029e5         jne        loc_31c8

                     loc_29eb:
00000000000029eb         cmp        r12d, 0xffffffff                            ; CODE XREF=change_file_owner+81, sub_29d0+704
00000000000029ef         mov        r11, qword [rbp+0x30]
00000000000029f3         movzx      ecx, byte [rbx+0x10]
00000000000029f7         sete       dl
00000000000029fa         cmp        r9d, 0xffffffff
00000000000029fe         lea        r13, qword [rbp+0x78]
0000000000002a02         sete       al
0000000000002a05         and        dl, al
0000000000002a07         mov        r15d, edx
0000000000002a0a         je         loc_2a20

0000000000002a0c         cmp        dword [rbx], 0x2
0000000000002a0f         jne        loc_2a20

0000000000002a11         cmp        qword [rbx+8], 0x0
0000000000002a16         je         loc_3290

0000000000002a1c         nop        dword [rax]

                     loc_2a20:
0000000000002a20         test       cl, cl                                      ; CODE XREF=sub_29d0+58, sub_29d0+63
0000000000002a22         jne        loc_2c28

                     loc_2a28:
0000000000002a28         mov        eax, r14d                                   ; CODE XREF=sub_29d0+616, sub_29d0+686
0000000000002a2b         and        eax, 0xfffffffd
0000000000002a2e         cmp        ax, 0x4
0000000000002a32         sete       al
0000000000002a35         sub        r14d, 0x1
0000000000002a39         cmp        r14w, 0x1
0000000000002a3e         setbe      dl
0000000000002a41         or         eax, edx
0000000000002a43         cmp        r12d, 0xffffffff
0000000000002a47         je         loc_2bf8

0000000000002a4d         cmp        dword [r13+0x1c], r12d
0000000000002a51         je         loc_2bf8

0000000000002a57         test       al, al
0000000000002a59         je         loc_3496

0000000000002a5f         mov        rdx, qword [rbx+8]
0000000000002a63         test       rdx, rdx
0000000000002a66         je         loc_369f

0000000000002a6c         xor        ecx, ecx

                     loc_2a6e:
0000000000002a6e         mov        rax, qword [rdx]                            ; CODE XREF=sub_29d0+590
0000000000002a71         cmp        qword [r13+8], rax
0000000000002a75         je         loc_2ea8

                     loc_2a7b:
0000000000002a7b         test       cl, cl                                      ; CODE XREF=sub_29d0+571, sub_29d0+584, sub_2e40+112
0000000000002a7d         je         loc_369f

                     loc_2a83:
0000000000002a83         movzx      ecx, byte [rbx+0x10]                        ; CODE XREF=sub_2e40+66, sub_2e40+79, sub_2e40+92

                     loc_2a87:
0000000000002a87         mov        rax, qword [rsp+0x1a8+var_1A8]              ; CODE XREF=sub_2e40+1133
0000000000002a8b         test       cl, cl
0000000000002a8d         mov        r14d, dword [rax+0x2c]
0000000000002a91         jne        loc_2f40

                     loc_2a97:
0000000000002a97         mov        ecx, dword [rsp+0x1a8+var_190]              ; argument "__group" for method j_fchownat, CODE XREF=sub_2e40+1147
0000000000002a9b         mov        edx, dword [rsp+0x1a8+var_198]              ; argument "__owner" for method j_fchownat
0000000000002a9f         mov        r8d, 0x100                                  ; argument "__flag" for method j_fchownat
0000000000002aa5         mov        rsi, r11                                    ; argument "__file" for method j_fchownat
0000000000002aa8         mov        edi, r14d                                   ; argument "__fd" for method j_fchownat
0000000000002aab         call       j_fchownat                                  ; fchownat
0000000000002ab0         test       eax, eax
0000000000002ab2         sete       r15b
0000000000002ab6         je         loc_2ac6

0000000000002ab8         call       j___errno_location                          ; __errno_location
0000000000002abd         cmp        dword [rax], 0x5f
0000000000002ac0         je         loc_3318

                     loc_2ac6:
0000000000002ac6         test       r15b, r15b                                  ; CODE XREF=sub_29d0+230, sub_2e40+444
0000000000002ac9         jne        loc_3008

                     loc_2acf:
0000000000002acf         movzx      r15d, byte [rbx+0x11]                       ; CODE XREF=sub_2e40+376, sub_32e0+352, sub_32e0+772, sub_35f0+159
0000000000002ad4         test       r15b, r15b
0000000000002ad7         je         loc_30e8

                     loc_2add:
0000000000002add         mov        eax, dword [rbx]                            ; CODE XREF=sub_32e0+272
0000000000002adf         xor        r15d, r15d
0000000000002ae2         cmp        eax, 0x2
0000000000002ae5         je         loc_2bd2

                     loc_2aeb:
0000000000002aeb         test       eax, eax                                    ; CODE XREF=sub_2e40+758, sub_2e40+890
0000000000002aed         jne        loc_2bd2

0000000000002af3         mov        dword [rsp+0x1a8+var_17C], 0x3

                     loc_2afb:
0000000000002afb         mov        edi, dword [r13+0x1c]                       ; CODE XREF=sub_2e40+494, sub_2e40+531, sub_2e40+553, sub_35f0+238
0000000000002aff         call       uid_to_name                                 ; uid_to_name
0000000000002b04         mov        edi, dword [r13+0x20]
0000000000002b08         mov        qword [rsp+0x1a8+var_198], rax
0000000000002b0d         call       gid_to_name                                 ; gid_to_name
0000000000002b12         mov        r12, qword [rbx+0x20]
0000000000002b16         mov        r14, qword [rbx+0x18]
0000000000002b1a         mov        r13, rax

                     loc_2b1d:
0000000000002b1d         mov        rsi, r12                                    ; CODE XREF=sub_2d60+67
0000000000002b20         mov        rdi, r14
0000000000002b23         call       user_group_str                              ; user_group_str
0000000000002b28         test       r12, r12
0000000000002b2b         mov        esi, 0x0
0000000000002b30         mov        qword [rsp+0x1a8+var_190], rax
0000000000002b35         cmovne     rsi, r13
0000000000002b39         test       r14, r14
0000000000002b3c         je         loc_30a0

0000000000002b42         mov        rdi, qword [rsp+0x1a8+var_198]
0000000000002b47         call       user_group_str                              ; user_group_str
0000000000002b4c         mov        qword [rsp+0x1a8+var_188], rax
0000000000002b51         mov        eax, dword [rsp+0x1a8+var_17C]
0000000000002b55         cmp        eax, 0x3
0000000000002b58         je         loc_3070

0000000000002b5e         cmp        eax, 0x4
0000000000002b61         jne        loc_32c0

0000000000002b67         lea        rsi, qword [aOwnershipOfSRe]                ; argument "msgid" for method j_dcgettext, "ownership of %s retained as %s\\n"
0000000000002b6e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b73         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b75         call       j_dcgettext                                 ; dcgettext
0000000000002b7a         mov        r12, rax
0000000000002b7d         nop        dword [rax]

                     loc_2b80:
0000000000002b80         mov        rsi, qword [rsp+0x1a8+var_1A0]              ; CODE XREF=sub_2e40+603, sub_2e40+669, sub_2e40+1007, sub_2e40+1042, sub_2e40+1174, sub_32e0+221, sub_32e0+377, sub_32e0+433, sub_32e0+689
0000000000002b85         mov        edi, 0x4
0000000000002b8a         call       quotearg_style                              ; quotearg_style
0000000000002b8f         mov        r14, qword [rsp+0x1a8+var_188]
0000000000002b94         mov        r8, qword [rsp+0x1a8+var_190]
0000000000002b99         mov        rdx, rax
0000000000002b9c         mov        rsi, r12
0000000000002b9f         mov        edi, 0x1
0000000000002ba4         xor        eax, eax
0000000000002ba6         mov        rcx, r14
0000000000002ba9         call       j___printf_chk                              ; __printf_chk
0000000000002bae         mov        rdi, r14
0000000000002bb1         call       sub_1d30                                    ; sub_1d30
0000000000002bb6         mov        rdi, qword [rsp+0x1a8+var_190]
0000000000002bbb         call       sub_1d30                                    ; sub_1d30

                     loc_2bc0:
0000000000002bc0         mov        rdi, qword [rsp+0x1a8+var_198]              ; CODE XREF=sub_32e0+162
0000000000002bc5         call       sub_1d30                                    ; sub_1d30
0000000000002bca         mov        rdi, r13
0000000000002bcd         call       sub_1d30                                    ; sub_1d30

                     loc_2bd2:
0000000000002bd2         cmp        byte [rbx+4], 0x0                           ; CODE XREF=sub_29d0+277, sub_29d0+285, sub_2e40+461, sub_2e40+539, sub_2e40+764, sub_2e40+896, sub_32e0+67, sub_32e0+75, sub_32e0+462, sub_32e0+658, sub_35f0+186
0000000000002bd6         jne        loc_2e50

0000000000002bdc         mov        rdi, qword [rsp+0x1a8+var_1A8]
0000000000002be0         mov        edx, 0x4
0000000000002be5         mov        rsi, rbp
0000000000002be8         call       rpl_fts_set                                 ; rpl_fts_set
0000000000002bed         jmp        loc_2e50
0000000000002bf2         align      8

                     loc_2bf8:
0000000000002bf8         cmp        r9d, 0xffffffff                             ; CODE XREF=sub_29d0+119, sub_29d0+129
0000000000002bfc         je         loc_2e80

0000000000002c02         cmp        dword [r13+0x20], r9d
0000000000002c06         sete       cl
0000000000002c09         test       al, al
0000000000002c0b         je         loc_2a7b

0000000000002c11         mov        rdx, qword [rbx+8]
0000000000002c15         test       rdx, rdx
0000000000002c18         je         loc_2a7b

0000000000002c1e         jmp        loc_2a6e
0000000000002c23         align      8

                     loc_2c28:
0000000000002c28         mov        eax, dword [rbp+0x90]                       ; CODE XREF=sub_29d0+82, sub_2e40+1106
0000000000002c2e         and        eax, 0xf000
0000000000002c33         cmp        eax, 0xa000
0000000000002c38         jne        loc_2a28

0000000000002c3e         mov        rax, qword [rsp+0x1a8+var_1A8]
0000000000002c42         lea        r13, qword [rsp+0x1a8+var_168]
0000000000002c47         xor        r8d, r8d                                    ; argument "__flag" for method j___fxstatat
0000000000002c4a         mov        rdx, r11                                    ; argument "__filename" for method j___fxstatat
0000000000002c4d         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000002c52         mov        dword [rsp+0x1a8+var_17C], r9d
0000000000002c57         mov        rcx, r13                                    ; argument "__stat_buf" for method j___fxstatat
0000000000002c5a         mov        qword [rsp+0x1a8+var_188], r11
0000000000002c5f         mov        esi, dword [rax+0x2c]                       ; argument "__fildes" for method j___fxstatat
0000000000002c62         call       j___fxstatat                                ; __fxstatat
0000000000002c67         test       eax, eax
0000000000002c69         jne        loc_33e8

0000000000002c6f         movzx      r14d, word [rbp+0x70]
0000000000002c74         mov        r11, qword [rsp+0x1a8+var_188]
0000000000002c79         mov        r9d, dword [rsp+0x1a8+var_17C]
0000000000002c7e         jmp        loc_2a28
0000000000002c83         nop        dword [rax+rax]
0000000000002c88         movzx      r15d, byte [rbx+4]
0000000000002c8d         test       r15b, r15b
0000000000002c90         je         sub_29d0+27
0000000000002c96         mov        rax, qword [rbx+8]
0000000000002c9a         test       rax, rax
0000000000002c9d         je         sub_2e40+16
0000000000002ca3         mov        rbx, qword [rax]
0000000000002ca6         cmp        qword [rsi+0x80], rbx
0000000000002cad         jne        sub_2e40+16
0000000000002cb3         mov        rax, qword [rax+8]
0000000000002cb7         cmp        qword [rsi+0x78], rax
0000000000002cbb         jne        sub_2e40+16
0000000000002cc1         lea        rdx, qword [aLibs+6]                        ; 0xb20e
0000000000002cc8         mov        rsi, qword [rsp+8]
0000000000002ccd         mov        ecx, 0x2
0000000000002cd2         mov        rdi, rdx
0000000000002cd5         rep  cmpsb byte [rsi], byte [rdi]
0000000000002cd7         seta       al
0000000000002cda         sbb        al, 0x0
0000000000002cdc         test       al, al
0000000000002cde         jne        sub_35f0                                    ; sub_35f0
0000000000002ce4         mov        rsi, qword [rsp+8]
0000000000002ce9         mov        edi, 0x4
0000000000002cee         call       quotearg_style                              ; quotearg_style
0000000000002cf3         lea        rsi, qword [aItIsDangerousT]                ; "it is dangerous to operate recursively on %s"
0000000000002cfa         mov        rbx, rax
0000000000002cfd         mov        edx, 0x5
0000000000002d02         xor        edi, edi
0000000000002d04         call       j_dcgettext                                 ; dcgettext
0000000000002d09         mov        rcx, rbx
0000000000002d0c         mov        rdx, rax
0000000000002d0f         xor        esi, esi
0000000000002d11         xor        edi, edi
0000000000002d13         xor        eax, eax
0000000000002d15         call       j_error                                     ; error

                     loc_2d1a:
0000000000002d1a         lea        rsi, qword [aUseNopreserver]                ; argument "msgid" for method j_dcgettext, "use --no-preserve-root to override this failsafe", CODE XREF=sub_35f0+77
0000000000002d21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d28         xor        r15d, r15d
0000000000002d2b         call       j_dcgettext                                 ; dcgettext
0000000000002d30         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002d32         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002d35         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002d37         xor        eax, eax
0000000000002d39         call       j_error                                     ; error
0000000000002d3e         mov        rbx, qword [rsp+ret_addr]
0000000000002d42         mov        edx, 0x4
0000000000002d47         mov        rsi, rbp
0000000000002d4a         mov        rdi, rbx
0000000000002d4d         call       rpl_fts_set                                 ; rpl_fts_set
0000000000002d52         mov        rdi, rbx
0000000000002d55         call       rpl_fts_read                                ; rpl_fts_read
0000000000002d5a         jmp        sub_2e40+16
                        ; endp
0000000000002d5f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d60:
0000000000002d60         movzx      r15d, byte [rbx+0x11]
0000000000002d65         test       r15b, r15b
0000000000002d68         je         sub_32e0                                    ; sub_32e0
                        ; endp

                     loc_2d6e:
0000000000002d6e         mov        eax, dword [rbx]                            ; CODE XREF=sub_2db0+8
0000000000002d70         xor        r15d, r15d
0000000000002d73         cmp        eax, 0x2
0000000000002d76         je         sub_29d0+514

                     loc_2d7c:
0000000000002d7c         test       eax, eax                                    ; CODE XREF=sub_2db0+54
0000000000002d7e         jne        sub_29d0+514

0000000000002d84         xor        r15d, r15d
0000000000002d87         mov        dword [rsp+arg_24], 0x3
                        ; endp

                     loc_2d8f:
0000000000002d8f         mov        r12, qword [rbx+0x20]                       ; CODE XREF=sub_35f0+219
0000000000002d93         mov        r14, qword [rbx+0x18]
0000000000002d97         xor        r13d, r13d
0000000000002d9a         mov        qword [rsp+0x1a8+var_198], 0x0
0000000000002da3         jmp        loc_2b1d
0000000000002da8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_24: int32_t, 44
        ;    arg_0: int, 8


                     sub_2db0:
0000000000002db0         movzx      r15d, byte [rbx+0x11]
0000000000002db5         test       r15b, r15b
0000000000002db8         jne        loc_2d6e

0000000000002dba         mov        rdx, qword [rsp+arg_0]
0000000000002dbf         mov        esi, 0x3
0000000000002dc4         xor        edi, edi
0000000000002dc6         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002dcb         mov        esi, dword [rbp+0x40]                       ; argument "__errnum" for method j_error
0000000000002dce         lea        rdx, qword [aInvalidGroupS+15]              ; argument "__format" for method j_error, 0xa543
0000000000002dd5         mov        rcx, rax
0000000000002dd8         xor        eax, eax
0000000000002dda         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002ddc         call       j_error                                     ; error
0000000000002de1         mov        eax, dword [rbx]
0000000000002de3         cmp        eax, 0x2
0000000000002de6         jne        loc_2d7c

0000000000002de8         jmp        sub_29d0+514
                        ; endp
0000000000002ded         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    ret_addr: int64_t, 0


                     sub_2df0:
0000000000002df0         cmp        qword [rsi+0x58], 0x0
0000000000002df5         jne        loc_2e02

0000000000002df7         cmp        qword [rsi+0x20], 0x0
0000000000002dfc         je         loc_33c8

                     loc_2e02:
0000000000002e02         movzx      r15d, byte [rbx+0x11]                       ; CODE XREF=sub_2df0+5
0000000000002e07         test       r15b, r15b
0000000000002e0a         jne        sub_2d60+14

0000000000002e10         mov        rsi, qword [rsp+arg_0]
0000000000002e15         mov        edi, 0x4
0000000000002e1a         call       quotearg_style                              ; quotearg_style
0000000000002e1f         lea        rsi, qword [aCannotAccessS]                 ; argument "msgid" for method j_dcgettext, "cannot access %s"
0000000000002e26         mov        r12, rax
0000000000002e29         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002e2e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002e30         call       j_dcgettext                                 ; dcgettext
0000000000002e35         mov        esi, dword [rbp+0x40]
0000000000002e38         mov        rcx, r12
0000000000002e3b         mov        rdx, rax
0000000000002e3e         jmp        sub_2db0+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e40:
0000000000002e40         cmp        byte [rbx+4], 0x0
0000000000002e44         jne        sub_29d0+27
                        ; endp

                     loc_2e4a:
0000000000002e4a         mov        r15d, 0x1                                   ; CODE XREF=sub_32e0+254
                        ; endp

                     loc_2e50:
0000000000002e50         mov        rbx, qword [rsp+0x1a8+var_40]               ; CODE XREF=sub_29d0+518, sub_29d0+541, sub_29d0+717, sub_29d0+733, sub_29d0+747, sub_2e40+243
0000000000002e58         xor        rbx, qword [fs:0x28]
0000000000002e61         mov        eax, r15d
0000000000002e64         jne        loc_369a

0000000000002e6a         add        rsp, 0x178
0000000000002e71         pop        rbx
0000000000002e72         pop        rbp
0000000000002e73         pop        r12
0000000000002e75         pop        r13
0000000000002e77         pop        r14
0000000000002e79         pop        r15
0000000000002e7b         ret
                        ; endp
0000000000002e7c         align      128

                     loc_2e80:
0000000000002e80         test       al, al                                      ; CODE XREF=sub_29d0+556
0000000000002e82         je         loc_2a83

0000000000002e88         mov        rdx, qword [rbx+8]
0000000000002e8c         test       rdx, rdx
0000000000002e8f         je         loc_2a83

0000000000002e95         mov        rdi, qword [rdx]
0000000000002e98         cmp        qword [r13+8], rdi
0000000000002e9c         jne        loc_2a83

0000000000002ea2         mov        ecx, eax
0000000000002ea4         nop        dword [rax]

                     loc_2ea8:
0000000000002ea8         mov        rax, qword [rdx+8]                          ; CODE XREF=sub_29d0+165
0000000000002eac         cmp        qword [r13], rax
0000000000002eb0         jne        loc_2a7b

0000000000002eb6         lea        rdx, qword [aLibs+6]                        ; 0xb20e
0000000000002ebd         mov        rsi, qword [rsp+0x1a8+var_1A0]
0000000000002ec2         mov        ecx, 0x2
0000000000002ec7         mov        rdi, rdx
0000000000002eca         rep  cmpsb byte [rsi], byte [rdi]
0000000000002ecc         seta       al
0000000000002ecf         sbb        al, 0x0
0000000000002ed1         test       al, al
0000000000002ed3         jne        loc_34b8

0000000000002ed9         mov        rsi, qword [rsp+0x1a8+var_1A0]
0000000000002ede         mov        edi, 0x4
0000000000002ee3         call       quotearg_style                              ; quotearg_style
0000000000002ee8         lea        rsi, qword [aItIsDangerousT]                ; argument "msgid" for method j_dcgettext, "it is dangerous to operate recursively on %s"
0000000000002eef         mov        rbx, rax
0000000000002ef2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ef7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ef9         call       j_dcgettext                                 ; dcgettext
0000000000002efe         mov        rcx, rbx
0000000000002f01         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002f04         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002f06         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002f08         xor        eax, eax
0000000000002f0a         call       j_error                                     ; error

                     loc_2f0f:
0000000000002f0f         lea        rsi, qword [aUseNopreserver]                ; argument "msgid" for method j_dcgettext, "use --no-preserve-root to override this failsafe", CODE XREF=sub_32e0+549
0000000000002f16         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f1b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f1d         xor        r15d, r15d
0000000000002f20         call       j_dcgettext                                 ; dcgettext
0000000000002f25         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002f27         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002f2a         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002f2c         xor        eax, eax
0000000000002f2e         call       j_error                                     ; error
0000000000002f33         jmp        loc_2e50
0000000000002f38         align      64

                     loc_2f40:
0000000000002f40         test       r15b, r15b                                  ; CODE XREF=sub_29d0+193
0000000000002f43         jne        loc_2fe0

0000000000002f49         mov        eax, dword [r13+0x18]
0000000000002f4d         and        eax, 0xf000
0000000000002f52         cmp        eax, 0x8000
0000000000002f57         je         loc_3308

0000000000002f5d         cmp        eax, 0x4000
0000000000002f62         mov        dword [rsp+0x1a8+var_188], 0x10900
0000000000002f6a         jne        loc_2fe0

                     loc_2f6c:
0000000000002f6c         mov        edx, dword [rsp+0x1a8+var_188]              ; CODE XREF=sub_32e0+48
0000000000002f70         mov        rsi, r11
0000000000002f73         mov        edi, r14d
0000000000002f76         mov        dword [rsp+0x1a8+var_178], r9d
0000000000002f7b         mov        byte [rsp+0x1a8+var_17C], cl
0000000000002f7f         mov        qword [rsp+0x1a8+var_170], r11
0000000000002f84         call       j___openat_2                                ; __openat_2
0000000000002f89         test       eax, eax
0000000000002f8b         mov        r8d, eax
0000000000002f8e         movzx      ecx, byte [rsp+0x1a8+var_17C]
0000000000002f93         mov        r9d, dword [rsp+0x1a8+var_178]
0000000000002f98         jns        loc_3148

0000000000002f9e         call       j___errno_location                          ; __errno_location
0000000000002fa3         cmp        dword [rax], 0xd
0000000000002fa6         mov        r10, rax
0000000000002fa9         movzx      ecx, byte [rsp+0x1a8+var_17C]
0000000000002fae         mov        r9d, dword [rsp+0x1a8+var_178]
0000000000002fb3         mov        r11, qword [rsp+0x1a8+var_170]
0000000000002fb8         jne        loc_2acf

0000000000002fbe         mov        eax, dword [r13+0x18]
0000000000002fc2         and        eax, 0xf000
0000000000002fc7         cmp        eax, 0x8000
0000000000002fcc         je         loc_3596

                     loc_2fd2:
0000000000002fd2         mov        rax, qword [rsp+0x1a8+var_1A8]              ; CODE XREF=sub_32e0+766
0000000000002fd6         mov        r14d, dword [rax+0x2c]
0000000000002fda         nop        word [rax+rax]

                     loc_2fe0:
0000000000002fe0         mov        ecx, dword [rsp+0x1a8+var_190]              ; argument "__group" for method j_fchownat, CODE XREF=sub_2e40+259, sub_2e40+298
0000000000002fe4         mov        edx, dword [rsp+0x1a8+var_198]              ; argument "__owner" for method j_fchownat
0000000000002fe8         xor        r8d, r8d                                    ; argument "__flag" for method j_fchownat
0000000000002feb         mov        rsi, r11                                    ; argument "__file" for method j_fchownat
0000000000002fee         mov        edi, r14d                                   ; argument "__fd" for method j_fchownat
0000000000002ff1         call       j_fchownat                                  ; fchownat
0000000000002ff6         test       eax, eax
0000000000002ff8         sete       r15b
0000000000002ffc         jmp        loc_2ac6
0000000000003001         align      8

                     loc_3008:
0000000000003008         mov        eax, dword [rbx]                            ; CODE XREF=sub_29d0+249
000000000000300a         cmp        eax, 0x2
000000000000300d         je         loc_2bd2

                     loc_3013:
0000000000003013         mov        esi, dword [rsp+0x1a8+var_198]              ; CODE XREF=sub_32e0+649
0000000000003017         cmp        esi, 0xffffffff
000000000000301a         je         loc_3034

000000000000301c         cmp        dword [r13+0x1c], esi
0000000000003020         mov        r15d, 0x1
0000000000003026         mov        dword [rsp+0x1a8+var_17C], 0x2
000000000000302e         jne        loc_2afb

                     loc_3034:
0000000000003034         mov        esi, dword [rsp+0x1a8+var_190]              ; CODE XREF=sub_2e40+474
0000000000003038         cmp        esi, 0xffffffff
000000000000303b         je         loc_3260

0000000000003041         cmp        dword [r13+0x20], esi
0000000000003045         mov        r15d, 0x1
000000000000304b         mov        dword [rsp+0x1a8+var_17C], 0x2
0000000000003053         jne        loc_2afb

0000000000003059         test       eax, eax
000000000000305b         jne        loc_2bd2

                     loc_3061:
0000000000003061         mov        dword [rsp+0x1a8+var_17C], 0x4              ; CODE XREF=sub_2e40+1070
0000000000003069         jmp        loc_2afb
000000000000306e         align      16

                     loc_3070:
0000000000003070         cmp        qword [rsp+0x1a8+var_188], 0x0              ; CODE XREF=sub_29d0+392, sub_2e40+627
0000000000003076         mov        edx, 0x5
000000000000307b         je         loc_3390

0000000000003081         test       r14, r14
0000000000003084         je         loc_3238

000000000000308a         lea        rsi, qword [aFailedToChange]                ; argument "msgid" for method j_dcgettext, "failed to change ownership of %s from %s to %s\\n"
0000000000003091         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003093         call       j_dcgettext                                 ; dcgettext
0000000000003098         mov        r12, rax
000000000000309b         jmp        loc_2b80

                     loc_30a0:
00000000000030a0         xor        edi, edi                                    ; CODE XREF=sub_29d0+364
00000000000030a2         call       user_group_str                              ; user_group_str
00000000000030a7         mov        qword [rsp+0x1a8+var_188], rax
00000000000030ac         mov        eax, dword [rsp+0x1a8+var_17C]
00000000000030b0         cmp        eax, 0x3
00000000000030b3         je         loc_3070

00000000000030b5         cmp        eax, 0x4
00000000000030b8         jne        loc_3210

00000000000030be         test       r12, r12
00000000000030c1         mov        edx, 0x5
00000000000030c6         je         loc_3448

00000000000030cc         lea        rsi, qword [aGroupOfSRetain]                ; argument "msgid" for method j_dcgettext, "group of %s retained as %s\\n"
00000000000030d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030d5         call       j_dcgettext                                 ; dcgettext
00000000000030da         mov        r12, rax
00000000000030dd         jmp        loc_2b80
00000000000030e2         align      8

                     loc_30e8:
00000000000030e8         mov        rsi, qword [rsp+0x1a8+var_1A0]              ; CODE XREF=sub_29d0+263
00000000000030ed         mov        edi, 0x4
00000000000030f2         call       quotearg_style                              ; quotearg_style
00000000000030f7         cmp        dword [rsp+0x1a8+var_198], 0xffffffff
00000000000030fc         mov        r14, rax
00000000000030ff         mov        edx, 0x5
0000000000003104         je         loc_3278

000000000000310a         lea        rsi, qword [aChangingOwners]                ; argument "msgid" for method j_dcgettext, "changing ownership of %s"
0000000000003111         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003113         call       j_dcgettext                                 ; dcgettext
0000000000003118         mov        r12, rax

                     loc_311b:
000000000000311b         call       j___errno_location                          ; __errno_location, CODE XREF=sub_2e40+1097
0000000000003120         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003122         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003124         xor        eax, eax
0000000000003126         mov        rcx, r14
0000000000003129         mov        rdx, r12                                    ; argument "__format" for method j_error
000000000000312c         call       j_error                                     ; error
0000000000003131         mov        eax, dword [rbx]
0000000000003133         cmp        eax, 0x2
0000000000003136         jne        loc_2aeb

000000000000313c         jmp        loc_2bd2
0000000000003141         align      8

                     loc_3148:
0000000000003148         lea        rdx, qword [rsp+0x1a8+var_D8]               ; argument "__stat_buf" for method j___fxstat, CODE XREF=sub_2e40+344, sub_32e0+756
0000000000003150         mov        esi, r8d                                    ; argument "__fildes" for method j___fxstat
0000000000003153         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000003158         mov        dword [rsp+0x1a8+var_188], r8d
000000000000315d         mov        dword [rsp+0x1a8+var_178], r9d
0000000000003162         mov        byte [rsp+0x1a8+var_17C], cl
0000000000003166         call       j___fxstat                                  ; __fxstat
000000000000316b         test       eax, eax
000000000000316d         mov        r8d, dword [rsp+0x1a8+var_188]
0000000000003172         jne        loc_3420

0000000000003178         mov        rax, qword [rsp+0x1a8+var_D0]
0000000000003180         cmp        qword [r13+8], rax
0000000000003184         movzx      ecx, byte [rsp+0x1a8+var_17C]
0000000000003189         mov        r9d, dword [rsp+0x1a8+var_178]
000000000000318e         je         loc_3510

                     loc_3194:
0000000000003194         mov        dword [rsp+0x1a8+var_198], r8d              ; CODE XREF=sub_32e0+572
0000000000003199         call       j___errno_location                          ; __errno_location
000000000000319e         mov        r8d, dword [rsp+0x1a8+var_198]
00000000000031a3         mov        r12, rax
00000000000031a6         mov        r14d, dword [rax]
00000000000031a9         mov        edi, r8d                                    ; argument "__fd" for method j_close
00000000000031ac         call       j_close                                     ; close
00000000000031b1         mov        eax, dword [rbx]
00000000000031b3         mov        dword [r12], r14d
00000000000031b7         cmp        eax, 0x2
00000000000031ba         jne        loc_2aeb

00000000000031c0         jmp        loc_2bd2
00000000000031c5         align      8

                     loc_31c8:
00000000000031c8         mov        rdx, qword [rsp+arg_0]                      ; CODE XREF=sub_29d0+21
00000000000031cd         mov        esi, 0x3
00000000000031d2         xor        edi, edi
00000000000031d4         xor        r15d, r15d
00000000000031d7         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000031dc         lea        rsi, qword [aWarningCircula]                ; argument "msgid" for method j_dcgettext, "WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n"
00000000000031e3         mov        rbx, rax
00000000000031e6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031eb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031ed         call       j_dcgettext                                 ; dcgettext
00000000000031f2         mov        rcx, rbx
00000000000031f5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000031f8         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000031fa         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000031fc         xor        eax, eax
00000000000031fe         call       j_error                                     ; error
0000000000003203         jmp        sub_2e40+16
                        ; endp
0000000000003208         align      16

                     loc_3210:
0000000000003210         test       r12, r12                                    ; CODE XREF=sub_2e40+632
0000000000003213         mov        edx, 0x5
0000000000003218         je         loc_3480

000000000000321e         lea        rsi, qword [aChangedGroupOf]                ; argument "msgid" for method j_dcgettext, "changed group of %s from %s to %s\\n"
0000000000003225         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003227         call       j_dcgettext                                 ; dcgettext
000000000000322c         mov        r12, rax
000000000000322f         jmp        loc_2b80
0000000000003234         align      8

                     loc_3238:
0000000000003238         test       r12, r12                                    ; CODE XREF=sub_2e40+580
000000000000323b         je         loc_3580

0000000000003241         lea        rsi, qword [aFailedToChange_b088]           ; argument "msgid" for method j_dcgettext, "failed to change group of %s from %s to %s\\n"
0000000000003248         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000324a         call       j_dcgettext                                 ; dcgettext
000000000000324f         mov        r12, rax
0000000000003252         jmp        loc_2b80
0000000000003257         align      32

                     loc_3260:
0000000000003260         test       eax, eax                                    ; CODE XREF=sub_2e40+507
0000000000003262         jne        loc_34a8

0000000000003268         mov        r15d, 0x1
000000000000326e         jmp        loc_3061
0000000000003273         align      8

                     loc_3278:
0000000000003278         lea        rsi, qword [aChangingGroupO]                ; "changing group of %s", CODE XREF=sub_2e40+708

                     loc_327f:
000000000000327f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=sub_32e0+308
0000000000003281         call       j_dcgettext                                 ; dcgettext
0000000000003286         mov        r12, rax
0000000000003289         jmp        loc_311b
000000000000328e         align      16

                     loc_3290:
0000000000003290         test       cl, cl                                      ; CODE XREF=sub_29d0+70
0000000000003292         jne        loc_2c28

0000000000003298         mov        eax, r14d
000000000000329b         and        eax, 0xfffffffd
000000000000329e         cmp        ax, 0x4
00000000000032a2         je         loc_32b3

00000000000032a4         sub        r14d, 0x1
00000000000032a8         cmp        r14w, 0x1
00000000000032ad         ja         loc_2a87

                     loc_32b3:
00000000000032b3         mov        rax, qword [rsp+0x1a8+var_1A8]              ; CODE XREF=sub_2e40+1122
00000000000032b7         mov        r14d, dword [rax+0x2c]
00000000000032bb         jmp        loc_2a97

                     loc_32c0:
00000000000032c0         lea        rsi, qword [aChangedOwnersh]                ; argument "msgid" for method j_dcgettext, "changed ownership of %s from %s to %s\\n", CODE XREF=sub_29d0+401
00000000000032c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032ce         call       j_dcgettext                                 ; dcgettext
00000000000032d3         mov        r12, rax
00000000000032d6         jmp        loc_2b80
00000000000032db         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32e0:
00000000000032e0         mov        rsi, qword [rsp+arg_0]
00000000000032e5         mov        edi, 0x4
00000000000032ea         call       quotearg_style                              ; quotearg_style
00000000000032ef         mov        edx, 0x5
00000000000032f4         mov        r12, rax
00000000000032f7         lea        rsi, qword [aCannotReadDire]                ; "cannot read directory %s"
00000000000032fe         jmp        sub_2df0+62
                        ; endp
0000000000003303         align      8

                     loc_3308:
0000000000003308         mov        dword [rsp+0x1a8+var_188], 0x900            ; CODE XREF=sub_2e40+279
0000000000003310         jmp        loc_2f6c
0000000000003315         align      8

                     loc_3318:
0000000000003318         mov        eax, dword [rbx]                            ; CODE XREF=sub_29d0+240
000000000000331a         mov        r15d, 0x1
0000000000003320         cmp        eax, 0x2
0000000000003323         je         loc_2bd2

0000000000003329         test       eax, eax
000000000000332b         jne        loc_2bd2

0000000000003331         mov        edi, dword [r13+0x1c]
0000000000003335         call       uid_to_name                                 ; uid_to_name
000000000000333a         mov        edi, dword [r13+0x20]
000000000000333e         mov        qword [rsp+0x1a8+var_198], rax
0000000000003343         call       gid_to_name                                 ; gid_to_name
0000000000003348         mov        rsi, qword [rsp+0x1a8+var_1A0]
000000000000334d         mov        edi, 0x4
0000000000003352         mov        r13, rax
0000000000003355         call       quotearg_style                              ; quotearg_style
000000000000335a         lea        rsi, qword [aNeitherSymboli]                ; argument "msgid" for method j_dcgettext, "neither symbolic link %s nor referent has been changed\\n"
0000000000003361         mov        r12, rax
0000000000003364         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003366         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000336b         call       j_dcgettext                                 ; dcgettext
0000000000003370         mov        rdx, r12
0000000000003373         mov        rsi, rax
0000000000003376         mov        edi, 0x1
000000000000337b         xor        eax, eax
000000000000337d         call       j___printf_chk                              ; __printf_chk
0000000000003382         jmp        loc_2bc0
0000000000003387         align      16

                     loc_3390:
0000000000003390         test       r14, r14                                    ; CODE XREF=sub_2e40+571
0000000000003393         lea        rsi, qword [aFailedToChange_b0e0]           ; "failed to change ownership of %s to %s\\n"
000000000000339a         je         loc_3460

                     loc_33a0:
00000000000033a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=sub_32e0+394, sub_32e0+407
00000000000033a2         call       j_dcgettext                                 ; dcgettext
00000000000033a7         mov        r12, rax
00000000000033aa         mov        rax, qword [rsp+0x1a8+var_190]
00000000000033af         mov        qword [rsp+0x1a8+var_190], 0x0
00000000000033b8         mov        qword [rsp+0x1a8+var_188], rax
00000000000033bd         jmp        loc_2b80
00000000000033c2         align      8

                     loc_33c8:
00000000000033c8         mov        rdi, qword [rsp+ret_addr]                   ; CODE XREF=sub_2df0+12
00000000000033cc         mov        qword [rsi+0x20], 0x1
00000000000033d4         mov        edx, 0x1
00000000000033d9         call       rpl_fts_set                                 ; rpl_fts_set
00000000000033de         jmp        loc_2e4a
00000000000033e3         align      8

                     loc_33e8:
00000000000033e8         movzx      r15d, byte [rbx+0x11]                       ; CODE XREF=sub_29d0+665
00000000000033ed         test       r15b, r15b
00000000000033f0         jne        loc_2add

00000000000033f6         mov        rsi, qword [rsp+0x1a8+var_1A0]
00000000000033fb         mov        edi, 0x4
0000000000003400         call       quotearg_style                              ; quotearg_style
0000000000003405         mov        edx, 0x5
000000000000340a         mov        r14, rax
000000000000340d         lea        rsi, qword [aCannotDerefere]                ; "cannot dereference %s"
0000000000003414         jmp        loc_327f
0000000000003419         align      32

                     loc_3420:
0000000000003420         mov        dword [rsp+0x1a8+var_190], r8d              ; CODE XREF=sub_2e40+818, sub_35f0+139
0000000000003425         call       j___errno_location                          ; __errno_location
000000000000342a         mov        r8d, dword [rsp+0x1a8+var_190]
000000000000342f         mov        r12d, dword [rax]
0000000000003432         mov        r14, rax
0000000000003435         mov        edi, r8d                                    ; argument "__fd" for method j_close
0000000000003438         call       j_close                                     ; close
000000000000343d         mov        dword [r14], r12d
0000000000003440         jmp        loc_2acf
0000000000003445         align      8

                     loc_3448:
0000000000003448         lea        rsi, qword [aOwnershipOfSRe_ae5f]           ; argument "msgid" for method j_dcgettext, "ownership of %s retained\\n", CODE XREF=sub_2e40+646
000000000000344f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003451         call       j_dcgettext                                 ; dcgettext
0000000000003456         mov        r12, rax
0000000000003459         jmp        loc_2b80
000000000000345e         align      32

                     loc_3460:
0000000000003460         test       r12, r12                                    ; CODE XREF=sub_32e0+186
0000000000003463         lea        rsi, qword [aFailedToChange_b108]           ; "failed to change group of %s to %s\\n"
000000000000346a         jne        loc_33a0

0000000000003470         lea        rsi, qword [aFailedToChange_b0b8]           ; "failed to change ownership of %s\\n"
0000000000003477         jmp        loc_33a0
000000000000347c         align      128

                     loc_3480:
0000000000003480         lea        rsi, qword [aNoChangeToOwne]                ; argument "msgid" for method j_dcgettext, "no change to ownership of %s\\n", CODE XREF=sub_2e40+984
0000000000003487         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003489         call       j_dcgettext                                 ; dcgettext
000000000000348e         mov        r12, rax
0000000000003491         jmp        loc_2b80

                     loc_3496:
0000000000003496         mov        eax, dword [rbx]                            ; CODE XREF=sub_29d0+137
0000000000003498         cmp        eax, 0x2
000000000000349b         je         loc_34a8

000000000000349d         test       eax, eax
000000000000349f         je         loc_36b8

00000000000034a5         nop        dword [rax]

                     loc_34a8:
00000000000034a8         mov        r15d, 0x1                                   ; CODE XREF=sub_2e40+1058, sub_32e0+443
00000000000034ae         jmp        loc_2bd2
00000000000034b3         align      8

                     loc_34b8:
00000000000034b8         mov        esi, 0x4                                    ; CODE XREF=sub_2e40+147
00000000000034bd         mov        edi, 0x1
00000000000034c2         call       quotearg_n_style                            ; quotearg_n_style
00000000000034c7         mov        rdx, qword [rsp+0x1a8+var_1A0]
00000000000034cc         xor        edi, edi
00000000000034ce         mov        esi, 0x4
00000000000034d3         mov        rbp, rax
00000000000034d6         call       quotearg_n_style                            ; quotearg_n_style
00000000000034db         lea        rsi, qword [aItIsDangerousT_aed0]           ; argument "msgid" for method j_dcgettext, "it is dangerous to operate recursively on %s (same as %s)"
00000000000034e2         mov        rbx, rax
00000000000034e5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000034e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000034ec         call       j_dcgettext                                 ; dcgettext
00000000000034f1         mov        r8, rbp
00000000000034f4         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000034f7         mov        rcx, rbx
00000000000034fa         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000034fc         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000034fe         xor        eax, eax
0000000000003500         call       j_error                                     ; error
0000000000003505         jmp        loc_2f0f
000000000000350a         align      16

                     loc_3510:
0000000000003510         mov        rax, qword [rsp+0x1a8+var_D8]               ; CODE XREF=sub_2e40+846
0000000000003518         cmp        qword [r13], rax
000000000000351c         jne        loc_3194

0000000000003522         cmp        r12d, 0xffffffff
0000000000003526         je         loc_3648

000000000000352c         cmp        r12d, dword [rsp+0x1a8+var_BC]
0000000000003534         je         loc_3642

                     loc_353a:
000000000000353a         mov        dword [rsp+0x1a8+var_17C], r8d              ; CODE XREF=sub_35f0+96
000000000000353f         mov        byte [rsp+0x1a8+var_188], cl
0000000000003543         call       j___errno_location                          ; __errno_location
0000000000003548         mov        r8d, dword [rsp+0x1a8+var_17C]
000000000000354d         mov        r14d, dword [rax]
0000000000003550         mov        r12, rax
0000000000003553         mov        edi, r8d                                    ; argument "__fd" for method j_close
0000000000003556         call       j_close                                     ; close
000000000000355b         mov        dword [r12], r14d

                     loc_355f:
000000000000355f         mov        eax, dword [rbx]                            ; CODE XREF=sub_35f0+165
0000000000003561         movzx      ecx, byte [rsp+0x1a8+var_188]
0000000000003566         cmp        eax, 0x2
0000000000003569         jne        loc_3013

000000000000356f         mov        r15d, ecx
0000000000003572         jmp        loc_2bd2
0000000000003577         align      128

                     loc_3580:
0000000000003580         lea        rsi, qword [aFailedToChange_b0b8]           ; argument "msgid" for method j_dcgettext, "failed to change ownership of %s\\n", CODE XREF=sub_2e40+1019
0000000000003587         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003589         call       j_dcgettext                                 ; dcgettext
000000000000358e         mov        r12, rax
0000000000003591         jmp        loc_2b80

                     loc_3596:
0000000000003596         mov        edx, dword [rsp+0x1a8+var_188]              ; CODE XREF=sub_2e40+396
000000000000359a         mov        rsi, r11
000000000000359d         mov        edi, r14d
00000000000035a0         mov        dword [rsp+0x1a8+var_170], r9d
00000000000035a5         mov        qword [rsp+0x1a8+var_178], r10
00000000000035aa         mov        byte [rsp+0x1a8+var_17C], cl
00000000000035ae         mov        qword [rsp+0x1a8+var_188], r11
00000000000035b3         or         edx, 0x1
00000000000035b6         call       j___openat_2                                ; __openat_2
00000000000035bb         test       eax, eax
00000000000035bd         mov        r8d, eax
00000000000035c0         mov        r11, qword [rsp+0x1a8+var_188]
00000000000035c5         movzx      ecx, byte [rsp+0x1a8+var_17C]
00000000000035ca         mov        r10, qword [rsp+0x1a8+var_178]
00000000000035cf         mov        r9d, dword [rsp+0x1a8+var_170]
00000000000035d4         jns        loc_3148

00000000000035da         cmp        dword [r10], 0xd
00000000000035de         je         loc_2fd2

00000000000035e4         jmp        loc_2acf
00000000000035e9         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    ret_addr: int64_t, 0


                     sub_35f0:
00000000000035f0         mov        esi, 0x4                                    ; CODE XREF=sub_29d0+782
00000000000035f5         mov        edi, 0x1
00000000000035fa         call       quotearg_n_style                            ; quotearg_n_style
00000000000035ff         mov        rdx, qword [rsp+arg_0]
0000000000003604         xor        edi, edi
0000000000003606         mov        esi, 0x4
000000000000360b         mov        r12, rax
000000000000360e         call       quotearg_n_style                            ; quotearg_n_style
0000000000003613         lea        rsi, qword [aItIsDangerousT_aed0]           ; argument "msgid" for method j_dcgettext, "it is dangerous to operate recursively on %s (same as %s)"
000000000000361a         mov        rbx, rax
000000000000361d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000361f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003624         call       j_dcgettext                                 ; dcgettext
0000000000003629         mov        r8, r12
000000000000362c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000362f         mov        rcx, rbx
0000000000003632         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003634         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003636         xor        eax, eax
0000000000003638         call       j_error                                     ; error
000000000000363d         jmp        loc_2d1a

                     loc_3642:
0000000000003642         cmp        r9d, 0xffffffff                             ; CODE XREF=sub_32e0+596
0000000000003646         je         loc_3656

                     loc_3648:
0000000000003648         cmp        r9d, dword [rsp+0x1a8+var_B8]               ; CODE XREF=sub_32e0+582
0000000000003650         jne        loc_353a

                     loc_3656:
0000000000003656         mov        edx, dword [rsp+0x1a8+var_190]              ; argument "__group" for method j_fchown, CODE XREF=sub_35f0+86
000000000000365a         mov        esi, dword [rsp+0x1a8+var_198]              ; argument "__owner" for method j_fchown
000000000000365e         mov        edi, r8d                                    ; argument "__fd" for method j_fchown
0000000000003661         mov        byte [rsp+0x1a8+var_17C], cl
0000000000003665         mov        dword [rsp+0x1a8+var_188], r8d
000000000000366a         call       j_fchown                                    ; fchown
000000000000366f         test       eax, eax
0000000000003671         mov        r8d, dword [rsp+0x1a8+var_188]
0000000000003676         movzx      ecx, byte [rsp+0x1a8+var_17C]
000000000000367b         jne        loc_3420

0000000000003681         mov        edi, r8d                                    ; argument "__fd" for method j_close
0000000000003684         mov        byte [rsp+0x1a8+var_188], cl
0000000000003688         call       j_close                                     ; close
000000000000368d         test       eax, eax
000000000000368f         jne        loc_2acf

0000000000003695         jmp        loc_355f

                     loc_369a:
000000000000369a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_2e40+36
                        ; endp

                     loc_369f:
000000000000369f         mov        eax, dword [rbx]                            ; CODE XREF=sub_29d0+150, sub_29d0+173
00000000000036a1         mov        r15d, 0x1
00000000000036a7         cmp        eax, 0x2
00000000000036aa         je         loc_2bd2

00000000000036b0         test       eax, eax
00000000000036b2         jne        loc_2bd2

                     loc_36b8:
00000000000036b8         test       r13, r13                                    ; CODE XREF=sub_32e0+447
00000000000036bb         jne        loc_36d0

00000000000036bd         mov        r15d, 0x1
00000000000036c3         mov        dword [rsp+0x1a8+var_17C], 0x4
00000000000036cb         jmp        loc_2d8f

                     loc_36d0:
00000000000036d0         mov        dword [rsp+0x1a8+var_17C], 0x4              ; CODE XREF=sub_35f0+203
00000000000036d8         mov        r15d, 0x1
00000000000036de         jmp        loc_2afb
00000000000036e3         align      16                                          ; End of unwind block (FDE at 0xc3a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_3C: int32_t, -60


                     chown_files:
00000000000036f0         push       r15                                         ; Begin of unwind block (FDE at 0xc3f8), CODE XREF=main+679
00000000000036f2         push       r14
00000000000036f4         mov        r15d, ecx
00000000000036f7         push       r13
00000000000036f9         push       r12
00000000000036fb         mov        r13d, r8d
00000000000036fe         push       rbp
00000000000036ff         push       rbx
0000000000003700         mov        r14d, r9d
0000000000003703         sub        rsp, 0x18
0000000000003707         cmp        r8d, 0xffffffff
000000000000370b         mov        dword [rsp+0x48+var_3C], edx
000000000000370f         mov        r12, qword [rsp+0x48+arg_0]
0000000000003714         jne        loc_3728

0000000000003716         cmp        r9d, 0xffffffff
000000000000371a         jne        loc_3728

000000000000371c         cmp        byte [r12+0x10], 0x0
0000000000003722         je         loc_37d0

                     loc_3728:
0000000000003728         xor        edx, edx                                    ; CODE XREF=chown_files+36, chown_files+42, chown_files+237
000000000000372a         mov        ebx, 0x1
000000000000372f         call       xfts_open                                   ; xfts_open
0000000000003734         mov        rbp, rax
0000000000003737         jmp        loc_3762
0000000000003739         align      64

                     loc_3740:
0000000000003740         sub        rsp, 0x8                                    ; CODE XREF=chown_files+125
0000000000003744         mov        r9d, r14d
0000000000003747         mov        r8d, r13d
000000000000374a         push       r12
000000000000374c         mov        edx, dword [rsp+0x58+var_3C]
0000000000003750         mov        ecx, r15d
0000000000003753         mov        rsi, rax
0000000000003756         mov        rdi, rbp
0000000000003759         call       change_file_owner                           ; change_file_owner
000000000000375e         and        ebx, eax
0000000000003760         pop        rax
0000000000003761         pop        rdx

                     loc_3762:
0000000000003762         mov        rdi, rbp                                    ; CODE XREF=chown_files+71
0000000000003765         call       rpl_fts_read                                ; rpl_fts_read
000000000000376a         test       rax, rax
000000000000376d         jne        loc_3740

000000000000376f         call       j___errno_location                          ; __errno_location
0000000000003774         mov        ecx, dword [rax]
0000000000003776         mov        r13, rax
0000000000003779         test       ecx, ecx
000000000000377b         je         loc_3789

000000000000377d         movzx      ebx, byte [r12+0x11]
0000000000003783         test       bl, bl
0000000000003785         je         loc_37e8

0000000000003787         xor        ebx, ebx

                     loc_3789:
0000000000003789         mov        rdi, rbp                                    ; CODE XREF=chown_files+139, chown_files+283
000000000000378c         call       rpl_fts_close                               ; rpl_fts_close
0000000000003791         test       eax, eax
0000000000003793         je         loc_37ba

0000000000003795         lea        rsi, qword [aFtscloseFailed]                ; argument "msgid" for method j_dcgettext, "fts_close failed"
000000000000379c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037a1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037a3         xor        ebx, ebx
00000000000037a5         call       j_dcgettext                                 ; dcgettext
00000000000037aa         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
00000000000037ae         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000037b1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000037b3         xor        eax, eax
00000000000037b5         call       j_error                                     ; error

                     loc_37ba:
00000000000037ba         add        rsp, 0x18                                   ; CODE XREF=chown_files+163
00000000000037be         mov        eax, ebx
00000000000037c0         pop        rbx
00000000000037c1         pop        rbp
00000000000037c2         pop        r12
00000000000037c4         pop        r13
00000000000037c6         pop        r14
00000000000037c8         pop        r15
00000000000037ca         ret
                        ; endp
00000000000037cb         align      16

                     loc_37d0:
00000000000037d0         mov        eax, esi                                    ; CODE XREF=chown_files+50
00000000000037d2         or         eax, 0x8
00000000000037d5         cmp        dword [r12], 0x2
00000000000037da         cmove      esi, eax
00000000000037dd         jmp        loc_3728
00000000000037e2         align      8

                     loc_37e8:
00000000000037e8         lea        rsi, qword [aFtsreadFailed]                 ; argument "msgid" for method j_dcgettext, "fts_read failed", CODE XREF=chown_files+149
00000000000037ef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037f6         call       j_dcgettext                                 ; dcgettext
00000000000037fb         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
00000000000037ff         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003802         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003804         xor        eax, eax
0000000000003806         call       j_error                                     ; error
000000000000380b         jmp        loc_3789


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003810         mov        qword [file_name], rdi                      ; End of unwind block (FDE at 0xc3f8), Begin of unwind block (FDE at 0xc454), file_name
0000000000003817         ret
                        ; endp
0000000000003818         align      32                                          ; End of unwind block (FDE at 0xc454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003820         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xc468), ignore_EPIPE
0000000000003827         ret
                        ; endp
0000000000003828         align      16                                          ; End of unwind block (FDE at 0xc468)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003830         push       rbp                                         ; Begin of unwind block (FDE at 0xc47c), DATA XREF=main+119
0000000000003831         push       rbx
0000000000003832         sub        rsp, 0x8
0000000000003836         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000383d         call       close_stream                                ; close_stream
0000000000003842         test       eax, eax
0000000000003844         je         loc_385c

0000000000003846         call       j___errno_location                          ; __errno_location
000000000000384b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003852         mov        rbx, rax
0000000000003855         je         loc_3873

0000000000003857         cmp        dword [rax], 0x20
000000000000385a         jne        loc_3873

                     loc_385c:
000000000000385c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003863         call       close_stream                                ; close_stream
0000000000003868         test       eax, eax
000000000000386a         jne        loc_38b2

000000000000386c         add        rsp, 0x8
0000000000003870         pop        rbx
0000000000003871         pop        rbp
0000000000003872         ret
                        ; endp

                     loc_3873:
0000000000003873         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000387a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000387c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003881         call       j_dcgettext                                 ; dcgettext
0000000000003886         mov        rdi, qword [file_name]                      ; file_name
000000000000388d         mov        rbp, rax
0000000000003890         test       rdi, rdi
0000000000003893         je         loc_38bd

0000000000003895         call       quotearg_colon                              ; quotearg_colon
000000000000389a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000389c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000038a3         mov        rcx, rax
00000000000038a6         mov        r8, rbp
00000000000038a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000038ab         xor        eax, eax
00000000000038ad         call       j_error                                     ; error

                     loc_38b2:
00000000000038b2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000038b8         call       j__exit                                     ; _exit
                        ; endp

                     loc_38bd:
00000000000038bd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000038bf         lea        rdx, qword [aInvalidGroupS+15]              ; argument "__format" for method j_error, 0xa543
00000000000038c6         mov        rcx, rax
00000000000038c9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000038cb         xor        eax, eax
00000000000038cd         call       j_error                                     ; error
00000000000038d2         jmp        loc_38b2
00000000000038d4         align      32                                          ; End of unwind block (FDE at 0xc47c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
00000000000038e0         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0xc4ac), CODE XREF=gid_to_name+69, uid_to_name+69
00000000000038e4         mov        byte [rsi+0x14], 0x0
00000000000038e8         movabs     rsi, 0xcccccccccccccccd
00000000000038f2         nop        word [rax+rax]

                     loc_38f8:
00000000000038f8         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
00000000000038fb         sub        rcx, 0x1
00000000000038ff         mul        rsi
0000000000003902         shr        rdx, 0x3
0000000000003906         lea        rax, qword [rdx+rdx*4]
000000000000390a         add        rax, rax
000000000000390d         sub        rdi, rax
0000000000003910         add        edi, 0x30
0000000000003913         test       rdx, rdx
0000000000003916         mov        byte [rcx], dil
0000000000003919         mov        rdi, rdx
000000000000391c         jne        loc_38f8

000000000000391e         mov        rax, rcx
0000000000003921         ret
                        ; endp
0000000000003922         align      16                                          ; End of unwind block (FDE at 0xc4ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003930         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc4c4), CODE XREF=main+66
0000000000003933         push       rbx
0000000000003934         je         loc_39ad

0000000000003936         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000393b         mov        rbx, rdi
000000000000393e         call       j_strrchr                                   ; strrchr
0000000000003943         test       rax, rax
0000000000003946         je         loc_399d

0000000000003948         lea        r8, qword [rax+1]
000000000000394c         mov        rdx, r8
000000000000394f         sub        rdx, rbx
0000000000003952         cmp        rdx, 0x6
0000000000003956         jle        loc_399d

0000000000003958         lea        rsi, qword [rax-6]
000000000000395c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003963         mov        ecx, 0x7
0000000000003968         rep  cmpsb byte [rsi], byte [rdi]
000000000000396a         seta       dl
000000000000396d         sbb        dl, 0x0
0000000000003970         test       dl, dl
0000000000003972         jne        loc_399d

0000000000003974         lea        rdi, qword [aLibs+8]                        ; 0xb210
000000000000397b         mov        ecx, 0x3
0000000000003980         mov        rsi, r8
0000000000003983         mov        rbx, r8
0000000000003986         rep  cmpsb byte [rsi], byte [rdi]
0000000000003988         seta       dl
000000000000398b         sbb        dl, 0x0
000000000000398e         test       dl, dl
0000000000003990         jne        loc_399d

0000000000003992         lea        rbx, qword [rax+4]
0000000000003996         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_399d:
000000000000399d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000039a4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000039ab         pop        rbx
00000000000039ac         ret
                        ; endp

                     loc_39ad:
00000000000039ad         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000039b4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000039bb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000039c0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000039c5         call       j_fwrite                                    ; fwrite
00000000000039ca         call       j_abort                                     ; abort
                        ; endp
00000000000039cf         align      16                                          ; End of unwind block (FDE at 0xc4c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000039d0         push       rbp                                         ; Begin of unwind block (FDE at 0xc4e4), CODE XREF=sub_4200+2597, sub_4200+2619
00000000000039d1         push       rbx
00000000000039d2         mov        rbp, rdi
00000000000039d5         mov        ebx, esi
00000000000039d7         sub        rsp, 0x8
00000000000039db         call       locale_charset                              ; locale_charset
00000000000039e0         movzx      edx, byte [rax]
00000000000039e3         and        edx, 0xffffffdf
00000000000039e6         cmp        dl, 0x55
00000000000039e9         je         loc_3a60

00000000000039eb         cmp        dl, 0x47
00000000000039ee         je         loc_3a10

                     loc_39f0:
00000000000039f0         lea        rax, qword [aLibs+27]                       ; 0xb223, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000039f7         lea        rdx, qword [aLibs+29]                       ; 0xb225
00000000000039fe         cmp        ebx, 0x9
0000000000003a01         cmovne     rax, rdx
0000000000003a05         add        rsp, 0x8
0000000000003a09         pop        rbx
0000000000003a0a         pop        rbp
0000000000003a0b         ret
                        ; endp
0000000000003a0c         align      16

                     loc_3a10:
0000000000003a10         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003a14         and        edx, 0xffffffdf
0000000000003a17         cmp        dl, 0x42
0000000000003a1a         jne        loc_39f0

0000000000003a1c         cmp        byte [rax+2], 0x31
0000000000003a20         jne        loc_39f0

0000000000003a22         cmp        byte [rax+3], 0x38
0000000000003a26         jne        loc_39f0

0000000000003a28         cmp        byte [rax+4], 0x30
0000000000003a2c         jne        loc_39f0

0000000000003a2e         cmp        byte [rax+5], 0x33
0000000000003a32         jne        loc_39f0

0000000000003a34         cmp        byte [rax+6], 0x30
0000000000003a38         jne        loc_39f0

0000000000003a3a         cmp        byte [rax+7], 0x0
0000000000003a3e         jne        loc_39f0

0000000000003a40         cmp        byte [rbp], 0x60
0000000000003a44         lea        rax, qword [aLibs+20]                       ; 0xb21c
0000000000003a4b         lea        rdx, qword [aLibs+24]                       ; 0xb220
0000000000003a52         cmovne     rax, rdx
0000000000003a56         add        rsp, 0x8
0000000000003a5a         pop        rbx
0000000000003a5b         pop        rbp
0000000000003a5c         ret
                        ; endp
0000000000003a5d         align      32

                     loc_3a60:
0000000000003a60         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003a64         and        edx, 0xffffffdf
0000000000003a67         cmp        dl, 0x54
0000000000003a6a         jne        loc_39f0

0000000000003a6c         movzx      edx, byte [rax+2]
0000000000003a70         and        edx, 0xffffffdf
0000000000003a73         cmp        dl, 0x46
0000000000003a76         jne        loc_39f0

0000000000003a7c         cmp        byte [rax+3], 0x2d
0000000000003a80         jne        loc_39f0

0000000000003a86         cmp        byte [rax+4], 0x38
0000000000003a8a         jne        loc_39f0

0000000000003a90         cmp        byte [rax+5], 0x0
0000000000003a94         jne        loc_39f0

0000000000003a9a         cmp        byte [rbp], 0x60
0000000000003a9e         lea        rax, qword [aLibs+12]                       ; 0xb214
0000000000003aa5         lea        rdx, qword [aLibs+16]                       ; 0xb218
0000000000003aac         cmovne     rax, rdx
0000000000003ab0         add        rsp, 0x8
0000000000003ab4         pop        rbx
0000000000003ab5         pop        rbp
0000000000003ab6         ret
                        ; endp
0000000000003ab7         align      64                                          ; End of unwind block (FDE at 0xc4e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003ac0         push       r15                                         ; Begin of unwind block (FDE at 0xc528), CODE XREF=sub_4200+1165, sub_4200+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003ac2         push       r14
0000000000003ac4         mov        r15d, r8d
0000000000003ac7         push       r13
0000000000003ac9         push       r12
0000000000003acb         mov        r14, rdi
0000000000003ace         push       rbp
0000000000003acf         push       rbx
0000000000003ad0         mov        ebx, r9d
0000000000003ad3         mov        r13, rsi
0000000000003ad6         mov        rbp, rcx
0000000000003ad9         and        ebx, 0x2
0000000000003adc         sub        rsp, 0xb8
0000000000003ae3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000003aeb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000003af0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000003af5         mov        dword [rsp+0xe8+var_70], r9d
0000000000003afa         mov        qword [rsp+0xe8+var_C8], rax
0000000000003aff         mov        rax, qword [rsp+0xe8+arg_8]
0000000000003b07         mov        qword [rsp+0xe8+var_80], rax
0000000000003b0c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003b14         mov        qword [rsp+0xe8+var_88], rax
0000000000003b19         mov        rax, qword [fs:0x28]
0000000000003b22         mov        qword [rsp+0xe8+var_40], rax
0000000000003b2a         xor        eax, eax
0000000000003b2c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003b31         cmp        r15d, 0xa
0000000000003b35         mov        qword [rsp+0xe8+var_90], rax
0000000000003b3a         ja         loc_4cef

0000000000003b40         lea        rcx, qword [switch_table_b280]              ; switch_table_b280
0000000000003b47         mov        edx, r15d
0000000000003b4a         movsxd     rax, dword [rcx+rdx*4]
0000000000003b4e         add        rax, rcx
0000000000003b51         jmp        rax                                         ; switch statement using table at 0xb280, with 11 cases, 0x3b53,0x4724,0x4780,0x47d5,0x481a,0x4854,0x48fa,0x4934,0x4b28

                     loc_3b53:
0000000000003b53         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4200+1318
0000000000003b58         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b5d         xor        r12d, r12d
0000000000003b60         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b69         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b6e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3b73:
0000000000003b73         lea        rax, qword [aLibs+29]                       ; 0xb225, CODE XREF=sub_4200+1876
0000000000003b7a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b83         xor        r15d, r15d
0000000000003b86         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b8e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3b93:
0000000000003b93         xor        r11d, r11d                                  ; CODE XREF=sub_4200+180, sub_4200+1400, sub_4200+1488, sub_4200+1557, sub_4200+1615, sub_4200+1781, sub_4200+1839, sub_4200+2408, sub_4200+2485
0000000000003b96         mov        rax, rbp
0000000000003b99         mov        r8d, r12d
0000000000003b9c         mov        rbp, r11
0000000000003b9f         mov        r11, rax
0000000000003ba2         nop        word [rax+rax]

                     loc_3ba8:
0000000000003ba8         cmp        r11, rbp                                    ; CODE XREF=sub_3cb0+194
0000000000003bab         setne      r12b
0000000000003baf         cmp        r11, 0xffffffffffffffff
0000000000003bb3         jne        loc_3bc2

0000000000003bb5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000003bba         cmp        byte [rax+rbp], 0x0
0000000000003bbe         setne      r12b

                     loc_3bc2:
0000000000003bc2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003bc5         je         loc_4220

0000000000003bcb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003bd0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003bd5         lea        r9, qword [rdi+rbp]
0000000000003bd9         setne      al
0000000000003bdc         and        al, byte [rsp+0xe8+var_DB]
0000000000003be0         mov        r10d, eax
0000000000003be3         je         loc_3c90

0000000000003be9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000003bee         test       rax, rax
0000000000003bf1         je         loc_4020

0000000000003bf7         cmp        r11, 0xffffffffffffffff
0000000000003bfb         lea        rbx, qword [rbp+rax]
0000000000003c00         jne        loc_3c30

0000000000003c02         cmp        rax, 0x1
0000000000003c06         jbe        loc_3c30

0000000000003c08         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003c0d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003c12         mov        qword [rsp+0xe8+var_C0], r9
0000000000003c17         call       j_strlen                                    ; strlen
0000000000003c1c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003c22         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003c28         mov        r11, rax
0000000000003c2b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3c30:
0000000000003c30         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003c33         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003c38         ja         loc_41f0

0000000000003c3e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003c43         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003c48         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003c4b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003c50         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003c55         mov        qword [rsp+0xe8+var_B8], r9
0000000000003c5a         call       j_memcmp                                    ; memcmp
0000000000003c5f         test       eax, eax
0000000000003c61         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003c66         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003c6c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003c71         jne        loc_41f0

0000000000003c77         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003c7c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003c82         jne        loc_4c05

0000000000003c88         nop        dword [rax+rax]

                     loc_3c90:
0000000000003c90         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_41e0+19
0000000000003c94         cmp        bl, 0x7e
0000000000003c97         ja         loc_3fb8

0000000000003c9d         lea        rcx, qword [switch_table_b280+44]           ; 0xb2ac
0000000000003ca4         movzx      edx, bl
0000000000003ca7         movsxd     rax, dword [rcx+rdx*4]
0000000000003cab         add        rax, rcx
0000000000003cae         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3cb0:
0000000000003cb0         xor        r10d, r10d
0000000000003cb3         cmp        r11, 0x1
0000000000003cb7         setne      al
0000000000003cba         cmp        r11, 0xffffffffffffffff
0000000000003cbe         jne        loc_3ccc

0000000000003cc0         mov        rax, qword [rsp+arg_8]
0000000000003cc5         cmp        byte [rax+1], 0x0
0000000000003cc9         setne      al

                     loc_3ccc:
0000000000003ccc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3cb0+14
0000000000003cd1         sete       dl
0000000000003cd4         test       al, al
0000000000003cd6         je         loc_3f28

                     loc_3cdc:
0000000000003cdc         xor        r12d, r12d                                  ; CODE XREF=sub_3f20+11
0000000000003cdf         xor        eax, eax
0000000000003ce1         nop        dword [rax]
                        ; endp

                     loc_3ce8:
0000000000003ce8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3ed0+50, sub_3fa0+119
0000000000003ced         jne        loc_3e02

0000000000003cf3         test       dl, dl
0000000000003cf5         jne        loc_3e02

                     loc_3cfb:
0000000000003cfb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3db0+87
0000000000003d00         test       rsi, rsi
0000000000003d03         je         loc_3d19

0000000000003d05         mov        edx, ebx
0000000000003d07         shr        dl, 0x5
0000000000003d0a         movzx      edx, dl
0000000000003d0d         mov        edx, dword [rsi+rdx*4]
0000000000003d10         bt         edx, ebx
0000000000003d13         jb         loc_3e63

                     loc_3d19:
0000000000003d19         test       r10b, r10b                                  ; CODE XREF=sub_3cb0+83, sub_3db0+93
0000000000003d1c         jne        loc_3e63

0000000000003d22         xor        eax, 0x1
0000000000003d25         add        rbp, 0x1
0000000000003d29         and        eax, r8d

                     loc_3d2c:
0000000000003d2c         test       al, al                                      ; CODE XREF=sub_4200+936
0000000000003d2e         je         loc_3d50

0000000000003d30         cmp        r13, r15
0000000000003d33         jbe        loc_3d3a

0000000000003d35         mov        byte [r14+r15], 0x27

                     loc_3d3a:
0000000000003d3a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3cb0+131
0000000000003d3e         cmp        r13, rax
0000000000003d41         jbe        loc_3d49

0000000000003d43         mov        byte [r14+r15+1], 0x27

                     loc_3d49:
0000000000003d49         add        r15, 0x2                                    ; CODE XREF=sub_3cb0+145
0000000000003d4d         xor        r8d, r8d

                     loc_3d50:
0000000000003d50         cmp        r15, r13                                    ; CODE XREF=sub_3cb0+126, sub_3db0+275, sub_4200+869
0000000000003d53         jae        loc_3d59

0000000000003d55         mov        byte [r14+r15], bl

                     loc_3d59:
0000000000003d59         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3cb0+163
0000000000003d5e         add        r15, 0x1
0000000000003d62         mov        eax, 0x0
0000000000003d67         test       r12b, r12b
0000000000003d6a         cmove      edi, eax
0000000000003d6d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003d72         jmp        loc_3ba8
0000000000003d77         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3d80:
0000000000003d80         xor        r10d, r10d
0000000000003d83         mov        eax, dword [rsp+arg_0]
0000000000003d87         cmp        eax, 0x2
0000000000003d8a         je         loc_4348

0000000000003d90         cmp        eax, 0x5
0000000000003d93         je         loc_4308

0000000000003d99         cmp        eax, 0x2
0000000000003d9c         mov        ebx, 0x3f
0000000000003da1         sete       dl
0000000000003da4         xor        r12d, r12d
0000000000003da7         xor        eax, eax
0000000000003da9         jmp        sub_3cb0+56
                        ; endp
0000000000003dae         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3db0:
0000000000003db0         xor        r10d, r10d
0000000000003db3         cmp        dword [rsp+arg_0], 0x2
0000000000003db8         je         loc_42c0

0000000000003dbe         mov        byte [rsp+arg_74], r12b
0000000000003dc3         xor        edx, edx
0000000000003dc5         xor        eax, eax
0000000000003dc7         mov        ebx, 0x27
0000000000003dcc         jmp        sub_3cb0+56
                        ; endp
0000000000003dd1         nop        dword [rax]
0000000000003dd8         mov        edx, 0x9
0000000000003ddd         mov        ebx, 0x74

                     loc_3de2:
0000000000003de2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3f70+10, sub_4060+37, sub_41a0+53
0000000000003de7         sete       al
0000000000003dea         and        al, byte [rsp+arg_7]
0000000000003dee         jne        sub_3f20+30

0000000000003df4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3db0+114
0000000000003df9         jne        loc_3e60

                     loc_3dfb:
0000000000003dfb         mov        ebx, edx                                    ; CODE XREF=sub_3ed0+18
0000000000003dfd         xor        r12d, r12d
0000000000003e00         xor        eax, eax
                        ; endp

                     loc_3e02:
0000000000003e02         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3cb0+61, sub_3cb0+69
0000000000003e07         jne        loc_3cfb

0000000000003e0d         jmp        loc_3d19
0000000000003e12         nop        word [rax+rax]
0000000000003e18         mov        edx, 0x8
0000000000003e1d         mov        ebx, 0x62
0000000000003e22         jmp        sub_3db0+68
0000000000003e24         nop        dword [rax]
0000000000003e28         cmp        dword [rsp+8], 0x2
0000000000003e2d         je         sub_4200                                    ; sub_4200
0000000000003e33         cmp        byte [rsp+0xd], 0x0
0000000000003e38         je         sub_4040+16

                     loc_3e3e:
0000000000003e3e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4040+8
0000000000003e43         je         loc_4050

0000000000003e49         cmp        qword [rsp+arg_10], 0x0
0000000000003e4f         jne        sub_4200+11

0000000000003e55         mov        ebx, 0x5c
0000000000003e5a         nop        word [rax+rax]
                        ; endp

                     loc_3e60:
0000000000003e60         xor        r12d, r12d                                  ; CODE XREF=sub_3db0+73, sub_41a0+29
                        ; endp

                     loc_3e63:
0000000000003e63         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3cb0+99, sub_3cb0+108
0000000000003e68         sete       dl
0000000000003e6b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003e70         mov        eax, edx
0000000000003e72         jne        loc_46c8

0000000000003e78         mov        eax, r8d
0000000000003e7b         xor        eax, 0x1
0000000000003e7e         and        al, dl
0000000000003e80         je         loc_3eb1

0000000000003e82         cmp        r13, r15
0000000000003e85         jbe        loc_3e8c

0000000000003e87         mov        byte [r14+r15], 0x27

                     loc_3e8c:
0000000000003e8c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3db0+213
0000000000003e90         cmp        r13, rdx
0000000000003e93         jbe        loc_3e9b

0000000000003e95         mov        byte [r14+r15+1], 0x24

                     loc_3e9b:
0000000000003e9b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3db0+227
0000000000003e9f         cmp        r13, rdx
0000000000003ea2         jbe        loc_3eaa

0000000000003ea4         mov        byte [r14+r15+2], 0x27

                     loc_3eaa:
0000000000003eaa         add        r15, 0x3                                    ; CODE XREF=sub_3db0+242
0000000000003eae         mov        r8d, eax

                     loc_3eb1:
0000000000003eb1         cmp        r13, r15                                    ; CODE XREF=sub_3db0+208
0000000000003eb4         jbe        loc_3ebb

0000000000003eb6         mov        byte [r14+r15], 0x5c

                     loc_3ebb:
0000000000003ebb         add        r15, 0x1                                    ; CODE XREF=sub_3db0+260
0000000000003ebf         add        rbp, 0x1
0000000000003ec3         jmp        loc_3d50
0000000000003ec8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3ed0:
0000000000003ed0         cmp        byte [rsp+arg_5], 0x0
0000000000003ed5         jne        loc_40a3

0000000000003edb         xor        edx, edx
0000000000003edd         test       byte [rsp+arg_70], 0x1
0000000000003ee2         je         loc_3dfb

0000000000003ee8         add        rbp, 0x1
0000000000003eec         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003ef1         nop        dword [rax]
0000000000003ef8         cmp        dword [rsp+8], 0x2
0000000000003efd         sete       dl
0000000000003f00         xor        eax, eax
0000000000003f02         jmp        sub_3cb0+56
0000000000003f07         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f10:
0000000000003f10         mov        edx, 0x7
0000000000003f15         mov        ebx, 0x61
0000000000003f1a         jmp        sub_3db0+68
                        ; endp
0000000000003f1f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f20:
0000000000003f20         cmp        dword [rsp+8], 0x2
0000000000003f25         sete       dl
                        ; endp

                     loc_3f28:
0000000000003f28         test       rbp, rbp                                    ; CODE XREF=sub_3cb0+38, sub_4140+35
0000000000003f2b         jne        loc_3cdc

0000000000003f31         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4170+43
0000000000003f36         and        al, dl
0000000000003f38         je         sub_3cb0+56

0000000000003f3e         mov        rbp, r11
0000000000003f41         mov        dword [rsp+arg_0], 0x2
0000000000003f49         jmp        sub_4200+1097
                        ; endp
0000000000003f4e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f50:
0000000000003f50         cmp        dword [rsp+arg_0], 0x2
0000000000003f55         sete       dl
0000000000003f58         xor        r12d, r12d
0000000000003f5b         jmp        sub_3f20+17
                        ; endp
0000000000003f5d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f60:
0000000000003f60         cmp        dword [rsp+arg_0], 0x2
0000000000003f65         mov        ebx, 0x20
0000000000003f6a         sete       dl
0000000000003f6d         jmp        sub_3f20+17
                        ; endp
0000000000003f6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3f70:
0000000000003f70         mov        edx, 0xd
0000000000003f75         mov        ebx, 0x72
0000000000003f7a         jmp        loc_3de2
0000000000003f7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f80:
0000000000003f80         mov        edx, 0xc
0000000000003f85         mov        ebx, 0x66
0000000000003f8a         jmp        sub_3db0+68
                        ; endp
0000000000003f8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f90:
0000000000003f90         mov        edx, 0xb
0000000000003f95         mov        ebx, 0x76
0000000000003f9a         jmp        sub_3db0+68
                        ; endp
0000000000003f9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3fa0:
0000000000003fa0         mov        edx, 0xa
0000000000003fa5         mov        ebx, 0x6e
0000000000003faa         jmp        sub_3db0+50
                        ; endp
0000000000003faf         align      16

                     loc_3fb0:
0000000000003fb0         xor        r10d, r10d                                  ; CODE XREF=sub_3fa0+135
0000000000003fb3         nop        dword [rax+rax]

                     loc_3fb8:
0000000000003fb8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003fbe         jne        loc_4368

0000000000003fc4         mov        qword [rsp+0xe8+var_B0], r11
0000000000003fc9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003fce         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003fd3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003fd8         mov        rcx, qword [rax]
0000000000003fdb         movzx      edx, bl
0000000000003fde         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003fe4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003fea         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003fef         mov        edi, 0x1
0000000000003ff4         movzx      eax, word [rcx+rdx*2]
0000000000003ff8         and        ax, 0x4000
0000000000003ffc         setne      r12b
0000000000004000         sete       al                                          ; DATA XREF=sub_2e40+285, sub_3fa0+88, fts_stat+182, rpl_fts_read+1473
0000000000004003         and        al, byte [rsp+0xe8+var_DB]

                     loc_4007:
0000000000004007         test       al, al                                      ; CODE XREF=sub_4200+2221
0000000000004009         jne        loc_49a1

000000000000400f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004014         sete       dl
0000000000004017         jmp        loc_3ce8
000000000000401c         align      32

                     loc_4020:
0000000000004020         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004024         cmp        bl, 0x7e
0000000000004027         ja         loc_3fb0

0000000000004029         lea        rcx, qword [switch_table_b280+552]          ; 0xb4a8
0000000000004030         movzx      edx, bl
0000000000004033         movsxd     rax, dword [rcx+rdx*4]
0000000000004037         add        rax, rcx
000000000000403a         jmp        rax
                        ; endp
000000000000403c         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4040:
0000000000004040         xor        r10d, r10d
0000000000004043         cmp        byte [rsp+arg_5], 0x0
0000000000004048         jne        loc_3e3e

000000000000404e         nop

                     loc_4050:
0000000000004050         mov        edx, 0x5c                                   ; CODE XREF=sub_3db0+136, sub_3db0+147
0000000000004055         mov        ebx, 0x5c
000000000000405a         jmp        sub_3db0+68
                        ; endp
000000000000405f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4060:
0000000000004060         mov        edx, 0xc
0000000000004065         xor        r10d, r10d
0000000000004068         mov        ebx, 0x66
000000000000406d         jmp        sub_3db0+68
                        ; endp
0000000000004072         nop        word [rax+rax]
0000000000004078         mov        edx, 0xa
000000000000407d         xor        r10d, r10d
0000000000004080         mov        ebx, 0x6e
0000000000004085         jmp        sub_3db0+50
000000000000408a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4090:
0000000000004090         mov        ebx, 0x61
0000000000004095         jmp        sub_3db0+176
                        ; endp
000000000000409a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_40a0:
00000000000040a0         xor        r10d, r10d
                        ; endp

                     loc_40a3:
00000000000040a3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3ed0+5
00000000000040a8         sete       dl
00000000000040ab         cmp        byte [rsp+arg_7], 0x0
00000000000040b0         jne        loc_4c4a

00000000000040b6         mov        eax, r8d
00000000000040b9         mov        rcx, r15
00000000000040bc         xor        eax, 0x1
00000000000040bf         and        al, dl
00000000000040c1         je         loc_40f0

00000000000040c3         cmp        r13, r15
00000000000040c6         jbe        loc_40cd

00000000000040c8         mov        byte [r14+r15], 0x27

                     loc_40cd:
00000000000040cd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_40a0+38
00000000000040d1         cmp        r13, rcx
00000000000040d4         jbe        loc_40dc

00000000000040d6         mov        byte [r14+r15+1], 0x24

                     loc_40dc:
00000000000040dc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_40a0+52
00000000000040e0         cmp        r13, rcx
00000000000040e3         ja         loc_4719

                     loc_40e9:
00000000000040e9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4200+1311
00000000000040ed         mov        r8d, eax

                     loc_40f0:
00000000000040f0         cmp        r13, rcx                                    ; CODE XREF=sub_40a0+33
00000000000040f3         jbe        loc_40fa

00000000000040f5         mov        byte [r14+rcx], 0x5c

                     loc_40fa:
00000000000040fa         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_40a0+83
00000000000040ff         lea        r15, qword [rcx+1]
0000000000004103         je         loc_4709

0000000000004109         lea        rax, qword [rbp+1]
000000000000410d         cmp        rax, r11
0000000000004110         jae        loc_412b

0000000000004112         mov        rax, qword [rsp+arg_8]
0000000000004117         movzx      eax, byte [rax+rbp+1]
000000000000411c         mov        byte [rsp+arg_20], al
0000000000004120         sub        eax, 0x30
0000000000004123         cmp        al, 0x9
0000000000004125         jbe        loc_4959

                     loc_412b:
000000000000412b         mov        eax, r12d                                   ; CODE XREF=sub_40a0+112
000000000000412e         mov        ebx, 0x30
0000000000004133         xor        r12d, r12d
0000000000004136         jmp        sub_3cb0+56
                        ; endp
000000000000413b         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4140:
0000000000004140         cmp        dword [rsp+arg_0], 0x2
0000000000004145         mov        r12d, r10d
0000000000004148         sete       dl
000000000000414b         xor        r10d, r10d
000000000000414e         xor        eax, eax
0000000000004150         jmp        sub_3cb0+56
                        ; endp
0000000000004155         nop        dword [rax]
0000000000004158         cmp        dword [rsp+8], 0x2
000000000000415d         sete       dl
0000000000004160         xor        r10d, r10d
0000000000004163         jmp        sub_3f20+8
0000000000004168         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4170:
0000000000004170         cmp        dword [rsp+8], 0x2
0000000000004175         sete       dl
0000000000004178         xor        r10d, r10d
000000000000417b         xor        r12d, r12d
000000000000417e         jmp        sub_3f20+17
                        ; endp
0000000000004183         nop        dword [rax+rax]
0000000000004188         cmp        dword [rsp+8], 0x2
000000000000418d         mov        r12d, r10d
0000000000004190         mov        ebx, 0x20
0000000000004195         sete       dl
0000000000004198         xor        r10d, r10d
000000000000419b         jmp        sub_3f20+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41a0:
00000000000041a0         mov        edx, 0xd
00000000000041a5         xor        r10d, r10d
00000000000041a8         mov        ebx, 0x72
00000000000041ad         jmp        sub_3db0+50
                        ; endp
00000000000041b2         nop        word [rax+rax]
00000000000041b8         mov        ebx, 0x76
00000000000041bd         jmp        sub_3db0+176
00000000000041c2         nop        word [rax+rax]
00000000000041c8         mov        edx, 0x9
00000000000041cd         xor        r10d, r10d
00000000000041d0         mov        ebx, 0x74
00000000000041d5         jmp        sub_3db0+50
00000000000041da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41e0:
00000000000041e0         mov        ebx, 0x62
00000000000041e5         jmp        sub_3db0+176
                        ; endp
00000000000041ea         nop        word [rax+rax]

                     loc_41f0:
00000000000041f0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000041f3         jmp        loc_3c90
00000000000041f8         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4200:
0000000000004200         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3db0+125
0000000000004205         jne        loc_4b70

000000000000420b         add        rbp, 0x1
000000000000420f         mov        eax, r8d
0000000000004212         xor        r12d, r12d
0000000000004215         mov        ebx, 0x5c
000000000000421a         jmp        sub_3cb0+124
                        ; endp
000000000000421f         align      32

                     loc_4220:
0000000000004220         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004225         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000422a         mov        r12d, r8d
000000000000422d         mov        rbp, r11
0000000000004230         sete       dl
0000000000004233         mov        eax, ebx
0000000000004235         test       r15, r15
0000000000004238         sete       cl
000000000000423b         and        eax, edx
000000000000423d         and        al, cl
000000000000423f         jne        loc_4ca6

0000000000004245         mov        eax, ebx
0000000000004247         xor        eax, 0x1
000000000000424a         and        dl, al
000000000000424c         je         loc_4bbc

0000000000004252         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004257         je         loc_4bba

000000000000425d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004262         jne        loc_4c5d

0000000000004268         test       r13, r13
000000000000426b         sete       al
000000000000426e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004274         setne      dl
0000000000004277         and        al, dl
0000000000004279         je         loc_4c9c

000000000000427f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4284:
0000000000004284         lea        rbx, qword [aLibs+29]                       ; 0xb225, CODE XREF=sub_4200+2781
000000000000428b         mov        byte [r14], 0x27
000000000000428f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004297         mov        r15d, 0x1
000000000000429d         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000042a6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000042ab         mov        qword [rsp+0xe8+var_A0], rbx
00000000000042b0         mov        byte [rsp+0xe8+var_6C], al
00000000000042b4         jmp        loc_3b93
00000000000042b9         align      64

                     loc_42c0:
00000000000042c0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3db0+8
00000000000042c5         jne        sub_4200+2416

00000000000042cb         test       r13, r13
00000000000042ce         je         loc_46d0

00000000000042d4         xor        edx, edx
00000000000042d6         cmp        qword [rsp+arg_48], 0x0
00000000000042dc         jne        loc_46d0

                     loc_42e2:
00000000000042e2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4200+1284, sub_4200+2794
00000000000042e7         add        r15, 0x3
00000000000042eb         xor        eax, eax
00000000000042ed         mov        byte [rsp+arg_74], r12b
00000000000042f2         xor        r8d, r8d
00000000000042f5         mov        r13, rdx
00000000000042f8         mov        ebx, 0x27
00000000000042fd         jmp        sub_3cb0+105
                        ; endp
0000000000004302         align      8

                     loc_4308:
0000000000004308         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3d80+19
000000000000430d         je         loc_4330

000000000000430f         lea        rcx, qword [rbp+2]
0000000000004313         cmp        rcx, r11
0000000000004316         jae        loc_4330

0000000000004318         mov        rax, qword [rsp+arg_8]
000000000000431d         cmp        byte [rax+rbp+1], 0x3f
0000000000004322         je         loc_4ab2

0000000000004328         nop        dword [rax+rax]

                     loc_4330:
0000000000004330         xor        edx, edx                                    ; CODE XREF=sub_4200+269, sub_4200+278, sub_4200+2233, sub_4200+2253
0000000000004332         xor        r12d, r12d
0000000000004335         xor        eax, eax
0000000000004337         mov        ebx, 0x3f
000000000000433c         jmp        sub_3cb0+56
                        ; endp
0000000000004341         align      8

                     loc_4348:
0000000000004348         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3d80+10
000000000000434d         jne        sub_4200+2416

0000000000004353         xor        r12d, r12d
0000000000004356         xor        eax, eax
0000000000004358         mov        ebx, 0x3f
000000000000435d         jmp        sub_3cb0+105
                        ; endp
0000000000004362         align      8

                     loc_4368:
0000000000004368         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3fa0+30
0000000000004370         cmp        r11, 0xffffffffffffffff
0000000000004374         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004380         mov        qword [rsp+0xe8+var_C0], rax
0000000000004385         jne        loc_43b4

0000000000004387         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000438c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004391         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004396         mov        qword [rsp+0xe8+var_B8], r9
000000000000439b         call       j_strlen                                    ; strlen
00000000000043a0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000043a6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000043ac         mov        r11, rax
00000000000043af         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_43b4:
00000000000043b4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4200+389
00000000000043bc         xor        ecx, ecx
00000000000043be         mov        byte [rsp+0xe8+var_6A], bl
00000000000043c2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000043c7         mov        rbx, rcx
00000000000043ca         mov        qword [rsp+0xe8+var_60], r9
00000000000043d2         mov        qword [rsp+0xe8+var_B0], rax
00000000000043d7         mov        byte [rsp+0xe8+var_69], r10b
00000000000043dc         mov        qword [rsp+0xe8+var_68], r15
00000000000043e4         mov        qword [rsp+0xe8+var_A8], r14
00000000000043e9         mov        qword [rsp+0xe8+var_78], r13
00000000000043ee         mov        qword [rsp+0xe8+var_B8], r11

                     loc_43f3:
00000000000043f3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4200+623
00000000000043f8         lea        r14, qword [rbp+rbx]
00000000000043fd         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004402         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004407         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000440c         lea        r13, qword [rax+r14]
0000000000004410         sub        rdx, r14
0000000000004413         mov        rsi, r13
0000000000004416         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000441b         test       rax, rax
000000000000441e         mov        r15, rax
0000000000004421         je         loc_4471

0000000000004423         cmp        rax, 0xffffffffffffffff
0000000000004427         je         loc_4a45

000000000000442d         cmp        rax, 0xfffffffffffffffe
0000000000004431         je         loc_49d1

0000000000004437         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000443c         sete       al
000000000000443f         and        al, byte [rsp+0xe8+var_D9]
0000000000004443         jne        loc_45e0

                     loc_4449:
0000000000004449         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4200+996, sub_4200+1031
0000000000004450         call       j_iswprint                                  ; iswprint
0000000000004455         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000445a         test       eax, eax
000000000000445c         mov        eax, 0x0
0000000000004461         cmove      r12d, eax
0000000000004465         add        rbx, r15
0000000000004468         call       j_mbsinit                                   ; mbsinit
000000000000446d         test       eax, eax
000000000000446f         je         loc_43f3

                     loc_4471:
0000000000004471         mov        edx, r12d                                   ; CODE XREF=sub_4200+545
0000000000004474         mov        rdi, rbx
0000000000004477         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000447d         xor        edx, 0x1
0000000000004480         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004485         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000448b         and        dl, byte [rsp+0xe8+var_DB]
000000000000448f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004497         mov        r14, qword [rsp+0xe8+var_A8]
000000000000449c         mov        r13, qword [rsp+0xe8+var_78]
00000000000044a1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_44a6:
00000000000044a6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4200+2112, sub_4200+2168
00000000000044aa         jbe        loc_4aab

                     loc_44b0:
00000000000044b0         mov        rcx, rdi                                    ; CODE XREF=sub_4200+1961
00000000000044b3         xor        esi, esi
00000000000044b5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000044bb         add        rcx, rbp
00000000000044be         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000044c3         jmp        loc_457e
00000000000044c8         align      16

                     loc_44d0:
00000000000044d0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4200+896
00000000000044d5         sete       al
00000000000044d8         test       r9b, r9b
00000000000044db         jne        loc_4990

00000000000044e1         mov        esi, r8d
00000000000044e4         xor        esi, 0x1
00000000000044e7         and        al, sil
00000000000044ea         je         loc_451b

00000000000044ec         cmp        r13, r15
00000000000044ef         jbe        loc_44f6

00000000000044f1         mov        byte [r14+r15], 0x27

                     loc_44f6:
00000000000044f6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4200+751
00000000000044fa         cmp        r13, rsi
00000000000044fd         jbe        loc_4505

00000000000044ff         mov        byte [r14+r15+1], 0x24

                     loc_4505:
0000000000004505         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4200+765
0000000000004509         cmp        r13, rsi
000000000000450c         jbe        loc_4514

000000000000450e         mov        byte [r14+r15+2], 0x27

                     loc_4514:
0000000000004514         add        r15, 0x3                                    ; CODE XREF=sub_4200+780
0000000000004518         mov        r8d, eax

                     loc_451b:
000000000000451b         cmp        r13, r15                                    ; CODE XREF=sub_4200+746
000000000000451e         jbe        loc_4525

0000000000004520         mov        byte [r14+r15], 0x5c

                     loc_4525:
0000000000004525         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+798
0000000000004529         cmp        r13, rax
000000000000452c         jbe        loc_453b

000000000000452e         mov        eax, ebx
0000000000004530         shr        al, 0x6
0000000000004533         add        eax, 0x30
0000000000004536         mov        byte [r14+r15+1], al

                     loc_453b:
000000000000453b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+812
000000000000453f         cmp        r13, rax
0000000000004542         jbe        loc_4554

0000000000004544         mov        eax, ebx
0000000000004546         shr        al, 0x3
0000000000004549         and        eax, 0x7
000000000000454c         add        eax, 0x30
000000000000454f         mov        byte [r14+r15+2], al

                     loc_4554:
0000000000004554         and        ebx, 0x7                                    ; CODE XREF=sub_4200+834
0000000000004557         add        rbp, 0x1
000000000000455b         add        r15, 0x3
000000000000455f         add        ebx, 0x30
0000000000004562         cmp        rbp, rcx
0000000000004565         jae        loc_3d50

000000000000456b         mov        esi, edx

                     loc_456d:
000000000000456d         cmp        r13, r15                                    ; CODE XREF=sub_4200+985, sub_4200+1969
0000000000004570         jbe        loc_4576

0000000000004572         mov        byte [r14+r15], bl

                     loc_4576:
0000000000004576         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4200+880
000000000000457a         add        r15, 0x1

                     loc_457e:
000000000000457e         test       dl, dl                                      ; CODE XREF=sub_4200+707
0000000000004580         jne        loc_44d0

0000000000004586         mov        eax, esi
0000000000004588         xor        eax, 0x1
000000000000458b         and        eax, r8d
000000000000458e         test       r10b, r10b
0000000000004591         je         loc_45a1

0000000000004593         cmp        r13, r15
0000000000004596         jbe        loc_459d

0000000000004598         mov        byte [r14+r15], 0x5c

                     loc_459d:
000000000000459d         add        r15, 0x1                                    ; CODE XREF=sub_4200+918

                     loc_45a1:
00000000000045a1         add        rbp, 0x1                                    ; CODE XREF=sub_4200+913
00000000000045a5         cmp        rbp, rcx
00000000000045a8         jae        loc_3d2c

00000000000045ae         test       al, al
00000000000045b0         je         loc_49ae

00000000000045b6         cmp        r13, r15
00000000000045b9         jbe        loc_45c0

00000000000045bb         mov        byte [r14+r15], 0x27

                     loc_45c0:
00000000000045c0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+953
00000000000045c4         cmp        r13, rax
00000000000045c7         jbe        loc_45cf

00000000000045c9         mov        byte [r14+r15+1], 0x27

                     loc_45cf:
00000000000045cf         add        r15, 0x2                                    ; CODE XREF=sub_4200+967
00000000000045d3         xor        r10d, r10d
00000000000045d6         xor        r8d, r8d
00000000000045d9         jmp        loc_456d
00000000000045db         align      32

                     loc_45e0:
00000000000045e0         cmp        r15, 0x1                                    ; CODE XREF=sub_4200+579
00000000000045e4         je         loc_4449

00000000000045ea         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000045ef         lea        rcx, qword [rdi+r15]
00000000000045f3         lea        rdx, qword [rdi+r14+1]
00000000000045f8         lea        r8, qword [rcx+r14]
00000000000045fc         jmp        loc_460d
00000000000045fe         align      512

                     loc_4600:
0000000000004600         add        rdx, 0x1                                    ; CODE XREF=sub_4200+1046, sub_4200+1072
0000000000004604         cmp        r8, rdx
0000000000004607         je         loc_4449

                     loc_460d:
000000000000460d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4200+1020
0000000000004610         sub        ecx, 0x5b
0000000000004613         cmp        cl, 0x21
0000000000004616         ja         loc_4600

0000000000004618         mov        esi, 0x1
000000000000461d         shl        rsi, cl
0000000000004620         mov        rcx, rsi
0000000000004623         movabs     rsi, 0x20000002b
000000000000462d         test       rcx, rsi
0000000000004630         je         loc_4600

0000000000004632         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004637         mov        r13, qword [rsp+0xe8+var_78]
000000000000463c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004641         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4649:
0000000000004649         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4200+1227, sub_4200+1948, sub_4200+2585, sub_4200+2734
000000000000464e         je         loc_4660

0000000000004650         test       al, al
0000000000004652         mov        eax, 0x4
0000000000004657         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000465c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4660:
0000000000004660         sub        rsp, 0x8                                    ; CODE XREF=sub_4200+1102
0000000000004664         mov        rcx, rbp
0000000000004667         mov        rsi, r13
000000000000466a         push       qword [rsp+0xf0+var_88]
000000000000466e         push       qword [rsp+0xf8+var_80]
0000000000004672         mov        rdi, r14
0000000000004675         push       0x0
0000000000004677         mov        r9d, dword [rsp+0x108+var_70]
000000000000467f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004684         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004689         and        r9d, 0xfffffffd
000000000000468d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004692         add        rsp, 0x20
0000000000004696         mov        r15, rax

                     loc_4699:
0000000000004699         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4200+2549, sub_4200+2560, sub_4200+2711
00000000000046a1         xor        rbx, qword [fs:0x28]
00000000000046aa         mov        rax, r15
00000000000046ad         jne        loc_4cb3

00000000000046b3         add        rsp, 0xb8
00000000000046ba         pop        rbx
00000000000046bb         pop        rbp
00000000000046bc         pop        r12
00000000000046be         pop        r13
00000000000046c0         pop        r14
00000000000046c2         pop        r15
00000000000046c4         ret
                        ; endp
00000000000046c5         align      8

                     loc_46c8:
00000000000046c8         mov        rbp, r11                                    ; CODE XREF=sub_3db0+194
00000000000046cb         jmp        loc_4649

                     loc_46d0:
00000000000046d0         cmp        r13, r15                                    ; CODE XREF=sub_4200+206, sub_4200+220
00000000000046d3         jbe        loc_46da

00000000000046d5         mov        byte [r14+r15], 0x27

                     loc_46da:
00000000000046da         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+1235
00000000000046de         cmp        r13, rax
00000000000046e1         jbe        loc_46e9

00000000000046e3         mov        byte [r14+r15+1], 0x5c

                     loc_46e9:
00000000000046e9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+1249
00000000000046ed         cmp        r13, rax
00000000000046f0         jbe        loc_4ce2

00000000000046f6         mov        rdx, r13
00000000000046f9         mov        byte [r14+r15+2], 0x27
00000000000046ff         mov        r13, qword [rsp+arg_48]
0000000000004704         jmp        loc_42e2

                     loc_4709:
0000000000004709         mov        eax, r12d                                   ; CODE XREF=sub_40a0+99
000000000000470c         mov        ebx, 0x30
0000000000004711         xor        r12d, r12d
0000000000004714         jmp        sub_3cb0+105
                        ; endp

                     loc_4719:
0000000000004719         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_40a0+67
000000000000471f         jmp        loc_40e9

                     loc_4724:
0000000000004724         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004726         jne        loc_3b53

000000000000472c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4731:
0000000000004731         test       r13, r13                                    ; CODE XREF=sub_4200+2749
0000000000004734         jne        loc_4cca

000000000000473a         lea        rax, qword [aLibs+29]                       ; 0xb225
0000000000004741         mov        qword [rsp+0xe8+var_98], 0x0
000000000000474a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000474f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004754         xor        r12d, r12d
0000000000004757         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000475c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004765         mov        qword [rsp+0xe8+var_A0], rax
000000000000476a         mov        r15d, 0x1
0000000000004770         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004778         jmp        loc_3b93
000000000000477d         align      128

                     loc_4780:
0000000000004780         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004782         jne        loc_4b7d

0000000000004788         test       r13, r13
000000000000478b         je         loc_49b6

0000000000004791         mov        byte [r14], 0x22
0000000000004795         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000479a         xor        r12d, r12d
000000000000479d         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047a2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_47ab:
00000000000047ab         lea        rax, qword [aLibs+27]                       ; 0xb223, CODE XREF=sub_4200+1996
00000000000047b2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000047b7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000047c5         mov        r15d, 0x1
00000000000047cb         mov        qword [rsp+0xe8+var_A0], rax
00000000000047d0         jmp        loc_3b93

                     loc_47d5:
00000000000047d5         lea        rax, qword [aLibs+27]                       ; case 6, 0xb223, CODE XREF=quotearg_buffer_restyled+145
00000000000047dc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000047e1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047e6         xor        r12d, r12d
00000000000047e9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000047f2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000047f7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047fc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004805         xor        r15d, r15d
0000000000004808         mov        qword [rsp+0xe8+var_A0], rax
000000000000480d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004815         jmp        loc_3b93

                     loc_481a:
000000000000481a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000481f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004824         xor        r12d, r12d
0000000000004827         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004830         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004835         xor        r15d, r15d
0000000000004838         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000483d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004846         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000484f         jmp        loc_3b93

                     loc_4854:
0000000000004854         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004859         je         loc_48b1

000000000000485b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0xb227
0000000000004862         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004864         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004869         call       j_dcgettext                                 ; dcgettext
000000000000486e         mov        rcx, rax
0000000000004871         mov        qword [rsp+0xe8+var_80], rax
0000000000004876         lea        rax, qword [aLibs+31]                       ; 0xb227
000000000000487d         cmp        rcx, rax
0000000000004880         je         loc_4c1e

                     loc_4886:
0000000000004886         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xb225, CODE XREF=sub_4200+2607
000000000000488d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000488f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004894         call       j_dcgettext                                 ; dcgettext
0000000000004899         mov        rcx, rax
000000000000489c         mov        qword [rsp+0xe8+var_88], rax
00000000000048a1         lea        rax, qword [aLibs+29]                       ; 0xb225
00000000000048a8         cmp        rcx, rax
00000000000048ab         je         loc_4c34

                     loc_48b1:
00000000000048b1         xor        r15d, r15d                                  ; CODE XREF=sub_4200+1625, sub_4200+2629
00000000000048b4         test       ebx, ebx
00000000000048b6         je         loc_4a7d

                     loc_48bc:
00000000000048bc         test       ebx, ebx                                    ; CODE XREF=sub_4200+2183, sub_4200+2214
00000000000048be         mov        rbx, qword [rsp+0xe8+var_88]
00000000000048c3         setne      byte [rsp+0xe8+var_D9]
00000000000048c8         xor        r12d, r12d
00000000000048cb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000048ce         call       j_strlen                                    ; strlen
00000000000048d3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000048d8         mov        qword [rsp+0xe8+var_D0], rax
00000000000048dd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000048e2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000048f0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000048f5         jmp        loc_3b93

                     loc_48fa:
00000000000048fa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000048ff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004904         xor        r12d, r12d
0000000000004907         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004910         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004915         xor        r15d, r15d
0000000000004918         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000491d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004926         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000492f         jmp        loc_3b93

                     loc_4934:
0000000000004934         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004939         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000493e         xor        r12d, r12d
0000000000004941         mov        qword [rsp+0xe8+var_98], 0x0
000000000000494a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000494f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004954         jmp        loc_3b73

                     loc_4959:
0000000000004959         cmp        r13, r15                                    ; CODE XREF=sub_40a0+133
000000000000495c         jbe        loc_4963

000000000000495e         mov        byte [r14+r15], 0x30

                     loc_4963:
0000000000004963         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4200+1884
0000000000004967         cmp        r13, rax
000000000000496a         jbe        loc_4972

000000000000496c         mov        byte [r14+rcx+2], 0x30

                     loc_4972:
0000000000004972         mov        eax, r12d                                   ; CODE XREF=sub_4200+1898
0000000000004975         lea        r15, qword [rcx+3]
0000000000004979         xor        r12d, r12d
000000000000497c         mov        ebx, 0x30
0000000000004981         jmp        sub_3cb0+56
                        ; endp
0000000000004986         align      16

                     loc_4990:
0000000000004990         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4200+731
0000000000004995         mov        rbp, r11
0000000000004998         mov        byte [rsp+0xe8+var_DB], bl
000000000000499c         jmp        loc_4649

                     loc_49a1:
00000000000049a1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3fa0+105
00000000000049a6         xor        r12d, r12d
00000000000049a9         jmp        loc_44b0

                     loc_49ae:
00000000000049ae         xor        r10d, r10d                                  ; CODE XREF=sub_4200+944
00000000000049b1         jmp        loc_456d

                     loc_49b6:
00000000000049b6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4200+1419
00000000000049bf         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000049c4         xor        r12d, r12d
00000000000049c7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000049cc         jmp        loc_47ab

                     loc_49d1:
00000000000049d1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4200+561
00000000000049d6         mov        rsi, r14
00000000000049d9         mov        rcx, r13
00000000000049dc         mov        rax, rbx
00000000000049df         mov        rdi, rbx
00000000000049e2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000049e8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000049ed         mov        r9, qword [rsp+0xe8+var_60]
00000000000049f5         cmp        rsi, r11
00000000000049f8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000049fe         mov        r15, qword [rsp+0xe8+var_68]
0000000000004a06         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004a0b         mov        r13, qword [rsp+0xe8+var_78]
0000000000004a10         jae        loc_4a38

0000000000004a12         cmp        byte [rcx], 0x0
0000000000004a15         jne        loc_4a27

0000000000004a17         jmp        loc_4a38
0000000000004a19         align      32

                     loc_4a20:
0000000000004a20         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4200+2099
0000000000004a25         je         loc_4a35

                     loc_4a27:
0000000000004a27         add        rax, 0x1                                    ; CODE XREF=sub_4200+2069
0000000000004a2b         lea        rdx, qword [rbp+rax]
0000000000004a30         cmp        r11, rdx
0000000000004a33         ja         loc_4a20

                     loc_4a35:
0000000000004a35         mov        rdi, rax                                    ; CODE XREF=sub_4200+2085

                     loc_4a38:
0000000000004a38         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4200+2064, sub_4200+2071
0000000000004a3d         xor        r12d, r12d
0000000000004a40         jmp        loc_44a6

                     loc_4a45:
0000000000004a45         mov        rdi, rbx                                    ; CODE XREF=sub_4200+551
0000000000004a48         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004a4e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004a53         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004a59         mov        r15, qword [rsp+0xe8+var_68]
0000000000004a61         xor        r12d, r12d
0000000000004a64         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004a69         mov        r13, qword [rsp+0xe8+var_78]
0000000000004a6e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004a73         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004a78         jmp        loc_44a6

                     loc_4a7d:
0000000000004a7d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4200+1718
0000000000004a82         movzx      eax, byte [rdx]
0000000000004a85         test       al, al
0000000000004a87         je         loc_48bc

0000000000004a8d         nop        dword [rax]

                     loc_4a90:
0000000000004a90         cmp        r13, r15                                    ; CODE XREF=sub_4200+2212
0000000000004a93         jbe        loc_4a99

0000000000004a95         mov        byte [r14+r15], al

                     loc_4a99:
0000000000004a99         add        r15, 0x1                                    ; CODE XREF=sub_4200+2195
0000000000004a9d         movzx      eax, byte [rdx+r15]
0000000000004aa2         test       al, al
0000000000004aa4         jne        loc_4a90

0000000000004aa6         jmp        loc_48bc

                     loc_4aab:
0000000000004aab         mov        eax, edx                                    ; CODE XREF=sub_4200+682
0000000000004aad         jmp        loc_4007

                     loc_4ab2:
0000000000004ab2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4200+290
0000000000004ab6         cmp        bl, 0x3e
0000000000004ab9         ja         loc_4330

0000000000004abf         movabs     rax, 0x7000a38200000000
0000000000004ac9         bt         rax, rbx
0000000000004acd         jae        loc_4330

0000000000004ad3         cmp        byte [rsp+arg_7], 0x0
0000000000004ad8         jne        loc_4cc2

0000000000004ade         cmp        r13, r15
0000000000004ae1         jbe        loc_4ae8

0000000000004ae3         mov        byte [r14+r15], 0x3f

                     loc_4ae8:
0000000000004ae8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+2273
0000000000004aec         cmp        r13, rax
0000000000004aef         jbe        loc_4af7

0000000000004af1         mov        byte [r14+r15+1], 0x22

                     loc_4af7:
0000000000004af7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+2287
0000000000004afb         cmp        r13, rax
0000000000004afe         jbe        loc_4b06

0000000000004b00         mov        byte [r14+r15+2], 0x22

                     loc_4b06:
0000000000004b06         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4200+2302
0000000000004b0a         cmp        r13, rax
0000000000004b0d         jbe        loc_4b15

0000000000004b0f         mov        byte [r14+r15+3], 0x3f

                     loc_4b15:
0000000000004b15         add        r15, 0x4                                    ; CODE XREF=sub_4200+2317
0000000000004b19         xor        edx, edx
0000000000004b1b         xor        r12d, r12d
0000000000004b1e         xor        eax, eax
0000000000004b20         mov        rbp, rcx
0000000000004b23         jmp        sub_3cb0+56
                        ; endp

                     loc_4b28:
0000000000004b28         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000004b2a         je         loc_4cb8

0000000000004b30         lea        rax, qword [aLibs+29]                       ; 0xb225
0000000000004b37         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b3c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b41         xor        r12d, r12d
0000000000004b44         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b4d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b52         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004b57         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004b60         xor        r15d, r15d
0000000000004b63         mov        qword [rsp+0xe8+var_A0], rax
0000000000004b68         jmp        loc_3b93
0000000000004b6d         align      16

                     loc_4b70:
0000000000004b70         mov        rbp, r11                                    ; CODE XREF=sub_4200+5
0000000000004b73         movzx      eax, byte [rsp+arg_7]
0000000000004b78         jmp        sub_4200+1097
                        ; endp

                     loc_4b7d:
0000000000004b7d         lea        rax, qword [aLibs+27]                       ; 0xb223, CODE XREF=sub_4200+1410
0000000000004b84         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b89         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b8e         xor        r12d, r12d
0000000000004b91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b9a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b9f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004ba4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004bad         xor        r15d, r15d
0000000000004bb0         mov        qword [rsp+0xe8+var_A0], rax
0000000000004bb5         jmp        loc_3b93

                     loc_4bba:
0000000000004bba         mov        eax, edx                                    ; CODE XREF=sub_4200+87

                     loc_4bbc:
0000000000004bbc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4200+76, sub_4200+2721
0000000000004bc1         test       rbx, rbx
0000000000004bc4         je         loc_4bf2

0000000000004bc6         test       al, al
0000000000004bc8         je         loc_4bf2

0000000000004bca         movzx      ecx, byte [rbx]
0000000000004bcd         mov        rax, rbx
0000000000004bd0         test       cl, cl
0000000000004bd2         je         loc_4bf2

0000000000004bd4         mov        rdx, r15
0000000000004bd7         sub        rax, r15

                     loc_4bda:
0000000000004bda         cmp        r13, rdx                                    ; CODE XREF=sub_4200+2541
0000000000004bdd         jbe        loc_4be3

0000000000004bdf         mov        byte [r14+rdx], cl

                     loc_4be3:
0000000000004be3         add        rdx, 0x1                                    ; CODE XREF=sub_4200+2525
0000000000004be7         movzx      ecx, byte [rax+rdx]
0000000000004beb         test       cl, cl
0000000000004bed         jne        loc_4bda

0000000000004bef         mov        r15, rdx

                     loc_4bf2:
0000000000004bf2         cmp        r13, r15                                    ; CODE XREF=sub_4200+2500, sub_4200+2504, sub_4200+2514
0000000000004bf5         jbe        loc_4699

0000000000004bfb         mov        byte [r14+r15], 0x0
0000000000004c00         jmp        loc_4699

                     loc_4c05:
0000000000004c05         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000004c0a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004c0f         mov        rbp, r11
0000000000004c12         sete       al
0000000000004c15         mov        byte [rsp+0xe8+var_DB], bl
0000000000004c19         jmp        loc_4649

                     loc_4c1e:
0000000000004c1e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4200+1664
0000000000004c22         mov        rdi, rcx
0000000000004c25         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004c2a         mov        qword [rsp+0xe8+var_80], rax
0000000000004c2f         jmp        loc_4886

                     loc_4c34:
0000000000004c34         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4200+1707
0000000000004c38         mov        rdi, rcx
0000000000004c3b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004c40         mov        qword [rsp+0xe8+var_88], rax
0000000000004c45         jmp        loc_48b1

                     loc_4c4a:
0000000000004c4a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_40a0+16
0000000000004c4f         mov        rbp, r11
0000000000004c52         mov        eax, edx
0000000000004c54         mov        byte [rsp+arg_5], bl
0000000000004c58         jmp        sub_4200+1097
                        ; endp

                     loc_4c5d:
0000000000004c5d         sub        rsp, 0x8                                    ; CODE XREF=sub_4200+98
0000000000004c61         mov        r8d, 0x5
0000000000004c67         mov        rcx, r11
0000000000004c6a         push       qword [rsp+0xf0+var_88]
0000000000004c6e         push       qword [rsp+0xf8+var_80]
0000000000004c72         mov        rdi, r14
0000000000004c75         push       qword [rsp+0x100+var_C8]
0000000000004c79         mov        r9d, dword [rsp+0x108+var_70]
0000000000004c81         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004c86         mov        rsi, qword [rsp+0x108+var_98]
0000000000004c8b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c90         add        rsp, 0x20
0000000000004c94         mov        r15, rax
0000000000004c97         jmp        loc_4699

                     loc_4c9c:
0000000000004c9c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4200+121
0000000000004ca1         jmp        loc_4bbc

                     loc_4ca6:
0000000000004ca6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4200+63
0000000000004cae         jmp        loc_4649

                     loc_4cb3:
0000000000004cb3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4200+1197
                        ; endp

                     loc_4cb8:
0000000000004cb8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4200+2346
0000000000004cbd         jmp        loc_4731

                     loc_4cc2:
0000000000004cc2         mov        rbp, r11                                    ; CODE XREF=sub_4200+2264
0000000000004cc5         jmp        sub_4200+1120
                        ; endp

                     loc_4cca:
0000000000004cca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4200+1332
0000000000004ccf         xor        eax, eax
0000000000004cd1         xor        r12d, r12d
0000000000004cd4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004cdd         jmp        loc_4284

                     loc_4ce2:
0000000000004ce2         mov        rdx, r13                                    ; CODE XREF=sub_4200+1264
0000000000004ce5         mov        r13, qword [rsp+arg_48]
0000000000004cea         jmp        loc_42e2

                     loc_4cef:
0000000000004cef         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004cf4         align      256                                         ; End of unwind block (FDE at 0xc528)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004d00         push       r15                                         ; Begin of unwind block (FDE at 0xc5a0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004d02         push       r14
0000000000004d04         movsxd     r15, edi
0000000000004d07         push       r13
0000000000004d09         push       r12
0000000000004d0b         mov        r14, rdx
0000000000004d0e         push       rbp
0000000000004d0f         push       rbx
0000000000004d10         mov        rbp, rcx
0000000000004d13         sub        rsp, 0x28
0000000000004d17         mov        qword [rsp+0x58+var_50], rsi
0000000000004d1c         call       j___errno_location                          ; __errno_location
0000000000004d21         mov        r13, rax
0000000000004d24         mov        eax, dword [rax]
0000000000004d26         test       r15d, r15d
0000000000004d29         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004d30         mov        dword [rsp+0x58+var_40], eax
0000000000004d34         js         loc_4ea1

0000000000004d3a         cmp        dword [nslots], r15d                        ; nslots
0000000000004d41         jg         loc_4da5

0000000000004d43         cmp        r15d, 0x7fffffff
0000000000004d4a         je         loc_4ea6

0000000000004d50         lea        r12d, dword [r15+1]
0000000000004d54         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004d5b         movsxd     rsi, r12d
0000000000004d5e         shl        rsi, 0x4
0000000000004d62         cmp        rbx, rax
0000000000004d65         je         loc_4e80

0000000000004d6b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004d6e         call       xrealloc                                    ; xrealloc
0000000000004d73         mov        rbx, rax
0000000000004d76         mov        qword [slotvec], rax                        ; slotvec

                     loc_4d7d:
0000000000004d7d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004d84         mov        edx, r12d
0000000000004d87         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004d89         sub        edx, edi
0000000000004d8b         shl        rdi, 0x4
0000000000004d8f         movsxd     rdx, edx
0000000000004d92         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004d95         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004d99         call       j_memset                                    ; memset
0000000000004d9e         mov        dword [nslots], r12d                        ; nslots

                     loc_4da5:
0000000000004da5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004da8         shl        r15, 0x4
0000000000004dac         sub        rsp, 0x8
0000000000004db0         add        rbx, r15
0000000000004db3         lea        r15, qword [rbp+8]
0000000000004db7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004dbb         mov        r11, qword [rbx]
0000000000004dbe         mov        r12, qword [rbx+8]
0000000000004dc2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004dc5         or         eax, 0x1
0000000000004dc8         mov        dword [rsp+0x60+var_3C], eax
0000000000004dcc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004dcf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004dd2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004dd5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004dd7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000004dda         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004ddf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004de2         mov        qword [rsp+0x78+var_48], r11
0000000000004de7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004dec         add        rsp, 0x20
0000000000004df0         mov        r11, qword [rsp+0x58+var_48]
0000000000004df5         cmp        r11, rax
0000000000004df8         ja         loc_4e61

0000000000004dfa         lea        rsi, qword [rax+1]
0000000000004dfe         lea        rax, qword [slot0]                          ; slot0
0000000000004e05         cmp        r12, rax
0000000000004e08         mov        qword [rbx], rsi
0000000000004e0b         je         loc_4e1f

0000000000004e0d         mov        rdi, r12
0000000000004e10         mov        qword [rsp+0x58+var_48], rsi
0000000000004e15         call       sub_1d30                                    ; sub_1d30
0000000000004e1a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4e1f:
0000000000004e1f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004e22         mov        qword [rsp+0x58+var_48], rsi
0000000000004e27         call       xmalloc                                     ; xmalloc
0000000000004e2c         sub        rsp, 0x8
0000000000004e30         mov        qword [rbx+8], rax
0000000000004e34         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004e38         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004e3b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004e3e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004e41         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004e43         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004e48         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004e4b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004e50         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004e55         mov        r12, rax
0000000000004e58         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004e5d         add        rsp, 0x20

                     loc_4e61:
0000000000004e61         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004e65         mov        dword [r13], eax
0000000000004e69         add        rsp, 0x28
0000000000004e6d         mov        rax, r12
0000000000004e70         pop        rbx
0000000000004e71         pop        rbp
0000000000004e72         pop        r12
0000000000004e74         pop        r13
0000000000004e76         pop        r14
0000000000004e78         pop        r15
0000000000004e7a         ret
                        ; endp
0000000000004e7b         align      128

                     loc_4e80:
0000000000004e80         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004e82         call       xrealloc                                    ; xrealloc
0000000000004e87         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004e8f         mov        rbx, rax
0000000000004e92         mov        qword [slotvec], rax                        ; slotvec
0000000000004e99         movups     xmmword [rax], xmm0
0000000000004e9c         jmp        loc_4d7d

                     loc_4ea1:
0000000000004ea1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4ea6:
0000000000004ea6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4eab:
0000000000004eab         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xc5a0)
                     clone_quoting_options:
0000000000004eb0         push       r12                                         ; Begin of unwind block (FDE at 0xc60c)
0000000000004eb2         push       rbp
0000000000004eb3         push       rbx
0000000000004eb4         mov        rbx, rdi
0000000000004eb7         call       j___errno_location                          ; __errno_location
0000000000004ebc         mov        r12d, dword [rax]
0000000000004ebf         mov        rbp, rax
0000000000004ec2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004ec9         test       rbx, rbx
0000000000004ecc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004ed1         cmove      rbx, rax
0000000000004ed5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004ed8         call       xmemdup                                     ; xmemdup
0000000000004edd         mov        dword [rbp], r12d
0000000000004ee1         pop        rbx
0000000000004ee2         pop        rbp
0000000000004ee3         pop        r12
0000000000004ee5         ret
                        ; endp
0000000000004ee6         align      16                                          ; End of unwind block (FDE at 0xc60c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004ef0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc638), default_quoting_options
0000000000004ef7         test       rdi, rdi
0000000000004efa         cmove      rdi, rax
0000000000004efe         mov        eax, dword [rdi]
0000000000004f00         ret
                        ; endp
0000000000004f01         align      16                                          ; End of unwind block (FDE at 0xc638)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004f10         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc64c), default_quoting_options
0000000000004f17         test       rdi, rdi
0000000000004f1a         cmove      rdi, rax
0000000000004f1e         mov        dword [rdi], esi
0000000000004f20         ret
                        ; endp
0000000000004f21         align      16                                          ; End of unwind block (FDE at 0xc64c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004f30         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc660), default_quoting_options
0000000000004f37         test       rdi, rdi
0000000000004f3a         mov        ecx, esi
0000000000004f3c         cmove      rdi, rax
0000000000004f40         mov        eax, esi
0000000000004f42         and        ecx, 0x1f
0000000000004f45         shr        al, 0x5
0000000000004f48         movzx      eax, al
0000000000004f4b         lea        rdi, qword [rdi+rax*4+8]
0000000000004f50         mov        esi, dword [rdi]
0000000000004f52         mov        eax, esi
0000000000004f54         shr        eax, cl
0000000000004f56         xor        edx, eax
0000000000004f58         and        eax, 0x1
0000000000004f5b         and        edx, 0x1
0000000000004f5e         shl        edx, cl
0000000000004f60         xor        edx, esi
0000000000004f62         mov        dword [rdi], edx
0000000000004f64         ret
                        ; endp
0000000000004f65         align      16                                          ; End of unwind block (FDE at 0xc660)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004f70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc674), default_quoting_options
0000000000004f77         test       rdi, rdi
0000000000004f7a         cmove      rdi, rax
0000000000004f7e         mov        eax, dword [rdi+4]
0000000000004f81         mov        dword [rdi+4], esi
0000000000004f84         ret
                        ; endp
0000000000004f85         align      16                                          ; End of unwind block (FDE at 0xc674)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004f90         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc688), default_quoting_options
0000000000004f97         test       rdi, rdi
0000000000004f9a         cmove      rdi, rax
0000000000004f9e         test       rsi, rsi
0000000000004fa1         mov        dword [rdi], 0xa
0000000000004fa7         je         loc_4fb7

0000000000004fa9         test       rdx, rdx
0000000000004fac         je         loc_4fb7

0000000000004fae         mov        qword [rdi+0x28], rsi
0000000000004fb2         mov        qword [rdi+0x30], rdx
0000000000004fb6         ret
                        ; endp

                     loc_4fb7:
0000000000004fb7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004fbb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004fc0         push       r15                                         ; End of unwind block (FDE at 0xc688), Begin of unwind block (FDE at 0xc69c)
0000000000004fc2         push       r14
0000000000004fc4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004fcb         push       r13
0000000000004fcd         push       r12
0000000000004fcf         mov        r13, rdi
0000000000004fd2         push       rbp
0000000000004fd3         push       rbx
0000000000004fd4         mov        rbx, r8
0000000000004fd7         mov        r14, rsi
0000000000004fda         mov        r15, rdx
0000000000004fdd         sub        rsp, 0x18
0000000000004fe1         test       r8, r8
0000000000004fe4         cmove      rbx, rax
0000000000004fe8         mov        qword [rsp+0x48+var_40], rcx
0000000000004fed         call       j___errno_location                          ; __errno_location
0000000000004ff2         mov        r12d, dword [rax]
0000000000004ff5         mov        rbp, rax
0000000000004ff8         lea        rax, qword [rbx+8]
0000000000004ffc         sub        rsp, 0x8
0000000000005000         mov        r9d, dword [rbx+4]
0000000000005004         push       qword [rbx+0x30]
0000000000005007         mov        r8d, dword [rbx]
000000000000500a         push       qword [rbx+0x28]
000000000000500d         mov        rdx, r15
0000000000005010         push       rax
0000000000005011         mov        rcx, qword [rsp+0x68+var_40]
0000000000005016         mov        rsi, r14
0000000000005019         mov        rdi, r13
000000000000501c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005021         mov        dword [rbp], r12d
0000000000005025         add        rsp, 0x38
0000000000005029         pop        rbx
000000000000502a         pop        rbp
000000000000502b         pop        r12
000000000000502d         pop        r13
000000000000502f         pop        r14
0000000000005031         pop        r15
0000000000005033         ret
                        ; endp
0000000000005034         align      64                                          ; End of unwind block (FDE at 0xc69c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005040         push       r15                                         ; Begin of unwind block (FDE at 0xc6f0), CODE XREF=quotearg_alloc+5
0000000000005042         push       r14
0000000000005044         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000504b         push       r13
000000000000504d         push       r12
000000000000504f         mov        r12, rdx
0000000000005052         push       rbp
0000000000005053         push       rbx
0000000000005054         mov        rbx, rcx
0000000000005057         mov        r14, rdi
000000000000505a         mov        r15, rsi
000000000000505d         sub        rsp, 0x38
0000000000005061         test       rcx, rcx
0000000000005064         cmove      rbx, rax
0000000000005068         xor        ebp, ebp
000000000000506a         call       j___errno_location                          ; __errno_location
000000000000506f         test       r12, r12
0000000000005072         mov        r13, rax
0000000000005075         mov        eax, dword [rax]
0000000000005077         sete       bpl
000000000000507b         or         ebp, dword [rbx+4]
000000000000507e         lea        r10, qword [rbx+8]
0000000000005082         sub        rsp, 0x8
0000000000005086         mov        r8d, dword [rbx]
0000000000005089         mov        rcx, r15
000000000000508c         mov        dword [rsp+0x70+var_5C], eax
0000000000005090         push       qword [rbx+0x30]
0000000000005093         mov        rdx, r14
0000000000005096         push       qword [rbx+0x28]
0000000000005099         push       r10
000000000000509b         xor        esi, esi
000000000000509d         mov        r9d, ebp
00000000000050a0         xor        edi, edi
00000000000050a2         mov        qword [rsp+0x88+var_48], r10
00000000000050a7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050ac         lea        rsi, qword [rax+1]
00000000000050b0         mov        qword [rsp+0x88+var_40], rax
00000000000050b5         add        rsp, 0x20
00000000000050b9         mov        rdi, rsi
00000000000050bc         mov        qword [rsp+0x68+var_50], rsi
00000000000050c1         call       xmalloc                                     ; xmalloc
00000000000050c6         mov        qword [rsp+0x68+var_58], rax
00000000000050cb         sub        rsp, 0x8
00000000000050cf         push       qword [rbx+0x30]
00000000000050d2         push       qword [rbx+0x28]
00000000000050d5         mov        r10, qword [rsp+0x80+var_48]
00000000000050da         mov        r9d, ebp
00000000000050dd         mov        r8d, dword [rbx]
00000000000050e0         mov        rcx, r15
00000000000050e3         mov        rdx, r14
00000000000050e6         mov        rdi, rax
00000000000050e9         push       r10
00000000000050eb         mov        rsi, qword [rsp+0x88+var_50]
00000000000050f0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050f5         mov        eax, dword [rsp+0x88+var_5C]
00000000000050f9         add        rsp, 0x20
00000000000050fd         test       r12, r12
0000000000005100         mov        dword [r13], eax
0000000000005104         je         loc_510f

0000000000005106         mov        r11, qword [rsp+0x68+var_40]
000000000000510b         mov        qword [r12], r11

                     loc_510f:
000000000000510f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005114         add        rsp, 0x38
0000000000005118         pop        rbx
0000000000005119         pop        rbp
000000000000511a         pop        r12
000000000000511c         pop        r13
000000000000511e         pop        r14
0000000000005120         pop        r15
0000000000005122         ret
                        ; endp
0000000000005123         align      16                                          ; End of unwind block (FDE at 0xc6f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005130         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xc75c)
0000000000005133         xor        edx, edx
0000000000005135         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000513a         align      64                                          ; End of unwind block (FDE at 0xc75c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005140         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xc770), nslots
0000000000005146         push       r12
0000000000005148         mov        r12, qword [slotvec]                        ; slotvec
000000000000514f         push       rbp
0000000000005150         push       rbx
0000000000005151         cmp        eax, 0x1
0000000000005154         jle        loc_5181

0000000000005156         sub        eax, 0x2
0000000000005159         lea        rbx, qword [r12+0x18]
000000000000515e         shl        rax, 0x4
0000000000005162         lea        rbp, qword [r12+rax+0x28]
0000000000005167         nop        word [rax+rax]

                     loc_5170:
0000000000005170         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
0000000000005173         add        rbx, 0x10
0000000000005177         call       sub_1d30                                    ; sub_1d30
000000000000517c         cmp        rbx, rbp
000000000000517f         jne        loc_5170

                     loc_5181:
0000000000005181         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005186         lea        rbx, qword [slot0]                          ; slot0
000000000000518d         cmp        rdi, rbx
0000000000005190         je         loc_51a9

0000000000005192         call       sub_1d30                                    ; sub_1d30
0000000000005197         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000051a2         mov        qword [slotvec0+8], rbx                     ; 0x20e078

                     loc_51a9:
00000000000051a9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000051b0         cmp        r12, rbx
00000000000051b3         je         loc_51c4

00000000000051b5         mov        rdi, r12
00000000000051b8         call       sub_1d30                                    ; sub_1d30
00000000000051bd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_51c4:
00000000000051c4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000051c5         mov        dword [nslots], 0x1                         ; nslots
00000000000051cf         pop        rbp
00000000000051d0         pop        r12
00000000000051d2         ret
                        ; endp
00000000000051d3         align      32                                          ; End of unwind block (FDE at 0xc770)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000051e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc79c), default_quoting_options
00000000000051e7         mov        rdx, 0xffffffffffffffff
00000000000051ee         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051f3         align      512                                         ; End of unwind block (FDE at 0xc79c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005200         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc7b0), default_quoting_options
0000000000005207         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000520c         align      16                                          ; End of unwind block (FDE at 0xc7b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005210         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc7c4), default_quoting_options
0000000000005217         mov        rsi, rdi
000000000000521a         mov        rdx, 0xffffffffffffffff
0000000000005221         xor        edi, edi
0000000000005223         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005228         align      16                                          ; End of unwind block (FDE at 0xc7c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005230         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xc7d8), default_quoting_options
0000000000005237         mov        rdx, rsi
000000000000523a         mov        rsi, rdi
000000000000523d         xor        edi, edi
000000000000523f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005244         align      16                                          ; End of unwind block (FDE at 0xc7d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005250         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xc7ec), CODE XREF=sub_32e0+482, sub_32e0+502, sub_35f0+10, sub_35f0+30
0000000000005254         mov        rax, rdx
0000000000005257         mov        rdx, qword [fs:0x28]
0000000000005260         mov        qword [rsp+0x48+var_10], rdx
0000000000005265         xor        edx, edx
0000000000005267         cmp        esi, 0xa
000000000000526a         je         loc_52d4

000000000000526c         mov        dword [rsp+0x48+var_48], esi
000000000000526f         mov        rcx, rsp
0000000000005272         mov        rdx, 0xffffffffffffffff
0000000000005279         mov        rsi, rax
000000000000527c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005285         mov        qword [rsp+0x48+var_3C], 0x0
000000000000528e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005297         mov        qword [rsp+0x48+var_2C], 0x0
00000000000052a0         mov        qword [rsp+0x48+var_24], 0x0
00000000000052a9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000052b2         mov        dword [rsp+0x48+var_14], 0x0
00000000000052ba         call       quotearg_n_options                          ; quotearg_n_options
00000000000052bf         mov        rcx, qword [rsp+0x48+var_10]
00000000000052c4         xor        rcx, qword [fs:0x28]
00000000000052cd         jne        loc_52d9

00000000000052cf         add        rsp, 0x48
00000000000052d3         ret
                        ; endp

                     loc_52d4:
00000000000052d4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_52d9:
00000000000052d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000052de         align      32                                          ; End of unwind block (FDE at 0xc7ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000052e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xc808), CODE XREF=quotearg_style_mem+10
00000000000052e4         mov        rax, rdx
00000000000052e7         mov        rdx, rcx
00000000000052ea         mov        rcx, qword [fs:0x28]
00000000000052f3         mov        qword [rsp+0x48+var_10], rcx
00000000000052f8         xor        ecx, ecx
00000000000052fa         cmp        esi, 0xa
00000000000052fd         je         loc_5360

00000000000052ff         mov        dword [rsp+0x48+var_48], esi
0000000000005302         mov        rcx, rsp
0000000000005305         mov        rsi, rax
0000000000005308         mov        qword [rsp+0x48+var_44], 0x0
0000000000005311         mov        qword [rsp+0x48+var_3C], 0x0
000000000000531a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005323         mov        qword [rsp+0x48+var_2C], 0x0
000000000000532c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005335         mov        qword [rsp+0x48+var_1C], 0x0
000000000000533e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005346         call       quotearg_n_options                          ; quotearg_n_options
000000000000534b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005350         xor        rdx, qword [fs:0x28]
0000000000005359         jne        loc_5365

000000000000535b         add        rsp, 0x48
000000000000535f         ret
                        ; endp

                     loc_5360:
0000000000005360         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5365:
0000000000005365         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000536a         align      16                                          ; End of unwind block (FDE at 0xc808)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005370         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xc824), CODE XREF=main+872, main+1216, sub_29d0+442, sub_29d0+798, sub_2df0+42, sub_2e40+163, sub_2e40+690, sub_32e0+10, sub_32e0+117, sub_32e0+288
0000000000005373         mov        esi, edi
0000000000005375         xor        edi, edi
0000000000005377         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000537c         align      128                                         ; End of unwind block (FDE at 0xc824)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005380         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xc838)
0000000000005383         mov        rdx, rsi
0000000000005386         mov        esi, edi
0000000000005388         xor        edi, edi
000000000000538a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000538f         align      16                                          ; End of unwind block (FDE at 0xc838)

                     quotearg_char_mem:
0000000000005390         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xc84c), CODE XREF=quotearg_char+11
0000000000005394         mov        ecx, edx
0000000000005396         mov        rax, qword [fs:0x28]
000000000000539f         mov        qword [rsp+0x48+var_10], rax
00000000000053a4         xor        eax, eax
00000000000053a6         mov        rax, qword [qword_20e230]                   ; qword_20e230
00000000000053ad         mov        r8, rsp
00000000000053b0         and        ecx, 0x1f
00000000000053b3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000053bb         mov        qword [rsp+0x48+var_18], rax
00000000000053c0         mov        eax, edx
00000000000053c2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000053c6         shr        al, 0x5
00000000000053c9         movzx      eax, al
00000000000053cc         lea        r9, qword [r8+rax*4+8]
00000000000053d1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e210
00000000000053d9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000053de         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e220
00000000000053e6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000053eb         mov        edx, dword [r9]
00000000000053ee         mov        eax, edx
00000000000053f0         shr        eax, cl
00000000000053f2         not        eax
00000000000053f4         and        eax, 0x1
00000000000053f7         shl        eax, cl
00000000000053f9         mov        rcx, r8
00000000000053fc         xor        eax, edx
00000000000053fe         mov        rdx, rsi
0000000000005401         mov        rsi, rdi
0000000000005404         mov        dword [r9], eax
0000000000005407         xor        edi, edi
0000000000005409         call       quotearg_n_options                          ; quotearg_n_options
000000000000540e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005413         xor        rsi, qword [fs:0x28]
000000000000541c         jne        loc_5423

000000000000541e         add        rsp, 0x48
0000000000005422         ret
                        ; endp

                     loc_5423:
0000000000005423         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005428         align      16                                          ; End of unwind block (FDE at 0xc84c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005430         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xc868)
0000000000005434         mov        rsi, 0xffffffffffffffff
000000000000543b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005440         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xc868), Begin of unwind block (FDE at 0xc87c), CODE XREF=close_stdout+101
0000000000005445         mov        rsi, 0xffffffffffffffff
000000000000544c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005451         align      32                                          ; End of unwind block (FDE at 0xc87c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005460         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xc890)
0000000000005465         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000546a         align      16                                          ; End of unwind block (FDE at 0xc890)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005470         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xc8a4), CODE XREF=sub_2db0+22, sub_2e40+919
0000000000005474         mov        rax, rdx
0000000000005477         mov        rdx, qword [fs:0x28]
0000000000005480         mov        qword [rsp+0x48+var_10], rdx
0000000000005485         xor        edx, edx
0000000000005487         cmp        esi, 0xa
000000000000548a         je         loc_54f4

000000000000548c         mov        dword [rsp+0x48+var_48], esi
000000000000548f         mov        rcx, rsp
0000000000005492         mov        rdx, 0xffffffffffffffff
0000000000005499         mov        rsi, rax
000000000000549c         mov        qword [rsp+0x48+var_44], 0x0
00000000000054a5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000054ae         mov        qword [rsp+0x48+var_34], 0x0
00000000000054b7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000054c0         mov        qword [rsp+0x48+var_24], 0x0
00000000000054c9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000054d2         mov        dword [rsp+0x48+var_14], 0x0
00000000000054da         call       quotearg_n_options                          ; quotearg_n_options
00000000000054df         mov        rcx, qword [rsp+0x48+var_10]
00000000000054e4         xor        rcx, qword [fs:0x28]
00000000000054ed         jne        loc_54f9

00000000000054ef         add        rsp, 0x48
00000000000054f3         ret
                        ; endp

                     loc_54f4:
00000000000054f4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_54f9:
00000000000054f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000054fe         align      256                                         ; End of unwind block (FDE at 0xc8a4)

                     quotearg_n_custom_mem:
0000000000005500         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xc8c0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005504         mov        r9, rcx
0000000000005507         mov        rcx, qword [qword_20e230]                   ; qword_20e230
000000000000550e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005516         mov        rax, qword [fs:0x28]
000000000000551f         mov        qword [rsp+0x48+var_10], rax
0000000000005524         xor        eax, eax
0000000000005526         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000552a         test       rsi, rsi
000000000000552d         mov        qword [rsp+0x48+var_18], rcx
0000000000005532         mov        dword [rsp+0x48+var_48], 0xa
0000000000005539         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e210
0000000000005541         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005546         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e220
000000000000554e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005553         je         loc_5587

0000000000005555         test       rdx, rdx
0000000000005558         je         loc_5587

000000000000555a         mov        qword [rsp+0x48+var_20], rsi
000000000000555f         mov        qword [rsp+0x48+var_18], rdx
0000000000005564         mov        rcx, rsp
0000000000005567         mov        rdx, r8
000000000000556a         mov        rsi, r9
000000000000556d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005572         mov        rdi, qword [rsp+0x48+var_10]
0000000000005577         xor        rdi, qword [fs:0x28]
0000000000005580         jne        loc_558c

0000000000005582         add        rsp, 0x48
0000000000005586         ret
                        ; endp

                     loc_5587:
0000000000005587         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_558c:
000000000000558c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005591         align      32                                          ; End of unwind block (FDE at 0xc8c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000055a0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xc8dc)
00000000000055a7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000055ac         align      16                                          ; End of unwind block (FDE at 0xc8dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000055b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xc8f0)
00000000000055b3         mov        r8, 0xffffffffffffffff
00000000000055ba         mov        rdx, rsi
00000000000055bd         mov        rsi, rdi
00000000000055c0         xor        edi, edi
00000000000055c2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055c7         align      16                                          ; End of unwind block (FDE at 0xc8f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000055d0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xc904)
00000000000055d3         mov        rcx, rdx
00000000000055d6         mov        rdx, rsi
00000000000055d9         mov        rsi, rdi
00000000000055dc         xor        edi, edi
00000000000055de         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055e3         align      16                                          ; End of unwind block (FDE at 0xc904)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000055f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc918), quote_quoting_options
00000000000055f7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000055fc         align      512                                         ; End of unwind block (FDE at 0xc918)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005600         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc92c), quote_quoting_options
0000000000005607         mov        rdx, rsi
000000000000560a         mov        rsi, rdi
000000000000560d         xor        edi, edi
000000000000560f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005614         align      32                                          ; End of unwind block (FDE at 0xc92c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005620         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc940), quote_quoting_options
0000000000005627         mov        rdx, 0xffffffffffffffff
000000000000562e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005633         align      64                                          ; End of unwind block (FDE at 0xc940)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005640         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc954), quote_quoting_options, CODE XREF=main+1006, main+1154
0000000000005647         mov        rsi, rdi
000000000000564a         mov        rdx, 0xffffffffffffffff
0000000000005651         xor        edi, edi
0000000000005653         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005658         align      32                                          ; End of unwind block (FDE at 0xc954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     get_root_dev_ino:
0000000000005660         push       rbx                                         ; Begin of unwind block (FDE at 0xc96c), CODE XREF=main+841
0000000000005661         lea        rsi, qword [aLibs+6]                        ; argument "__filename" for method j___lxstat, 0xb20e
0000000000005668         mov        rbx, rdi
000000000000566b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000005670         sub        rsp, 0xa0
0000000000005677         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
000000000000567a         mov        rax, qword [fs:0x28]
0000000000005683         mov        qword [rsp+0xa8+var_10], rax
000000000000568b         xor        eax, eax
000000000000568d         call       j___lxstat                                  ; __lxstat
0000000000005692         test       eax, eax
0000000000005694         jne        loc_56c8

0000000000005696         mov        rax, qword [rsp+0xa8+var_A0]
000000000000569b         mov        qword [rbx], rax
000000000000569e         mov        rax, qword [rsp+0xa8+var_A8]
00000000000056a2         mov        qword [rbx+8], rax
00000000000056a6         mov        rax, rbx

                     loc_56a9:
00000000000056a9         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=get_root_dev_ino+106
00000000000056b1         xor        rcx, qword [fs:0x28]
00000000000056ba         jne        loc_56cc

00000000000056bc         add        rsp, 0xa0
00000000000056c3         pop        rbx
00000000000056c4         ret
                        ; endp
00000000000056c5         align      8

                     loc_56c8:
00000000000056c8         xor        eax, eax                                    ; CODE XREF=get_root_dev_ino+52
00000000000056ca         jmp        loc_56a9

                     loc_56cc:
00000000000056cc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=get_root_dev_ino+90
                        ; endp
00000000000056d1         align      32                                          ; End of unwind block (FDE at 0xc96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000056e0         push       r15                                         ; Begin of unwind block (FDE at 0xc994), CODE XREF=version_etc_va+75, version_etc+161
00000000000056e2         push       r14
00000000000056e4         push       r13
00000000000056e6         push       r12
00000000000056e8         mov        r12, r9
00000000000056eb         push       rbp
00000000000056ec         push       rbx
00000000000056ed         mov        rbp, rdi
00000000000056f0         mov        rbx, r8
00000000000056f3         sub        rsp, 0x28
00000000000056f7         test       rsi, rsi
00000000000056fa         je         loc_5818

0000000000005700         mov        r8, rdx
0000000000005703         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000570a         mov        r9, rcx
000000000000570d         xor        eax, eax
000000000000570f         mov        rcx, rsi
0000000000005712         mov        esi, 0x1
0000000000005717         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_571c:
000000000000571c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xb6fb, CODE XREF=version_etc_arn+337
0000000000005723         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005725         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000572a         call       j_dcgettext                                 ; dcgettext
000000000000572f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005736         mov        rcx, rax
0000000000005739         mov        r8d, 0x7e3
000000000000573f         mov        esi, 0x1
0000000000005744         mov        rdi, rbp
0000000000005747         xor        eax, eax
0000000000005749         call       j___fprintf_chk                             ; __fprintf_chk
000000000000574e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005755         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005757         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000575c         call       j_dcgettext                                 ; dcgettext
0000000000005761         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005764         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005767         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000576c         cmp        r12, 0x9
0000000000005770         ja         loc_5ab0

0000000000005776         lea        rdx, qword [switch_table_b9e4]              ; switch_table_b9e4
000000000000577d         movsxd     rax, dword [rdx+r12*4]
0000000000005781         add        rax, rdx
0000000000005784         jmp        rax                                         ; switch statement using table at 0xb9e4, with 10 cases, 0x5790,0x5806,0x5840,0x5898,0x58d8,0x5920,0x5970,0x59c8,0x59f8,0x5a60
0000000000005786         align      16

                     loc_5790:
0000000000005790         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005794         mov        rax, qword [rbx+0x10]
0000000000005798         lea        rsi, qword [aWrittenBySSSns_b8f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000579f         mov        r8, qword [rbx+8]
00000000000057a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000057a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000057aa         mov        r13, qword [rbx+0x30]
00000000000057ae         mov        r12, qword [rbx+0x28]
00000000000057b2         mov        qword [rsp+0x58+var_48], r9
00000000000057b7         mov        r15, qword [rbx+0x20]
00000000000057bb         mov        r14, qword [rbx+0x18]
00000000000057bf         mov        qword [rsp+0x58+var_58], rax
00000000000057c3         mov        qword [rsp+0x58+var_50], r8
00000000000057c8         mov        rbx, qword [rbx]
00000000000057cb         call       j_dcgettext                                 ; dcgettext
00000000000057d0         sub        rsp, 0x8

                     loc_57d4:
00000000000057d4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000057d9         mov        rdx, rax
00000000000057dc         mov        rcx, rbx
00000000000057df         mov        esi, 0x1
00000000000057e4         mov        rdi, rbp
00000000000057e7         xor        eax, eax
00000000000057e9         push       r9
00000000000057eb         push       r13
00000000000057ed         push       r12
00000000000057ef         push       r15
00000000000057f1         push       r14
00000000000057f3         mov        r9, qword [rsp+0x88+var_58]
00000000000057f8         mov        r8, qword [rsp+0x88+var_50]
00000000000057fd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005802         add        rsp, 0x30

                     loc_5806:
0000000000005806         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000580a         pop        rbx
000000000000580b         pop        rbp
000000000000580c         pop        r12
000000000000580e         pop        r13
0000000000005810         pop        r14
0000000000005812         pop        r15
0000000000005814         ret
                        ; endp
0000000000005815         align      8

                     loc_5818:
0000000000005818         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000581b         mov        rcx, rdx
000000000000581e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005825         mov        esi, 0x1
000000000000582a         xor        eax, eax
000000000000582c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005831         jmp        loc_571c
0000000000005836         align      64

                     loc_5840:
0000000000005840         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005844         mov        r9, qword [rbx+0x38]
0000000000005848         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000584f         mov        rax, qword [rbx+0x10]
0000000000005853         mov        r8, qword [rbx+8]
0000000000005857         mov        edx, 0x5
000000000000585c         mov        r13, qword [rbx+0x30]
0000000000005860         mov        r12, qword [rbx+0x28]
0000000000005864         mov        r15, qword [rbx+0x20]
0000000000005868         mov        r14, qword [rbx+0x18]
000000000000586c         mov        rbx, qword [rbx]
000000000000586f         mov        qword [rsp+0x58+var_40], r10
0000000000005874         mov        qword [rsp+0x58+var_48], r9
0000000000005879         mov        qword [rsp+0x58+var_58], rax
000000000000587d         mov        qword [rsp+0x58+var_50], r8

                     loc_5882:
0000000000005882         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005884         call       j_dcgettext                                 ; dcgettext
0000000000005889         mov        r10, qword [rsp+0x58+var_40]
000000000000588e         push       r10
0000000000005890         jmp        loc_57d4
0000000000005895         align      8

                     loc_5898:
0000000000005898         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000589b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000058a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058a9         call       j_dcgettext                                 ; dcgettext
00000000000058ae         add        rsp, 0x28
00000000000058b2         mov        rcx, rbx
00000000000058b5         mov        rdi, rbp
00000000000058b8         pop        rbx
00000000000058b9         pop        rbp
00000000000058ba         pop        r12
00000000000058bc         pop        r13
00000000000058be         pop        r14
00000000000058c0         pop        r15
00000000000058c2         mov        rdx, rax
00000000000058c5         mov        esi, 0x1
00000000000058ca         xor        eax, eax
00000000000058cc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000058d1         align      8

                     loc_58d8:
00000000000058d8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000058dc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000058e3         mov        rbx, qword [rbx]
00000000000058e6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058eb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058ed         call       j_dcgettext                                 ; dcgettext
00000000000058f2         add        rsp, 0x28
00000000000058f6         mov        r8, r12
00000000000058f9         mov        rcx, rbx
00000000000058fc         mov        rdi, rbp
00000000000058ff         mov        rdx, rax
0000000000005902         mov        esi, 0x1
0000000000005907         pop        rbx
0000000000005908         pop        rbp
0000000000005909         pop        r12
000000000000590b         pop        r13
000000000000590d         pop        r14
000000000000590f         pop        r15
0000000000005911         xor        eax, eax
0000000000005913         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005918         align      32

                     loc_5920:
0000000000005920         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005924         mov        r12, qword [rbx+8]
0000000000005928         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000592f         mov        rbx, qword [rbx]
0000000000005932         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005937         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005939         call       j_dcgettext                                 ; dcgettext
000000000000593e         add        rsp, 0x28
0000000000005942         mov        r9, r13
0000000000005945         mov        r8, r12
0000000000005948         mov        rcx, rbx
000000000000594b         mov        rdi, rbp
000000000000594e         mov        rdx, rax
0000000000005951         pop        rbx
0000000000005952         pop        rbp
0000000000005953         pop        r12
0000000000005955         pop        r13
0000000000005957         pop        r14
0000000000005959         pop        r15
000000000000595b         mov        esi, 0x1
0000000000005960         xor        eax, eax
0000000000005962         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005967         align      16

                     loc_5970:
0000000000005970         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005977         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000597c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000597e         mov        r14, qword [rbx+0x18]
0000000000005982         mov        r13, qword [rbx+0x10]
0000000000005986         mov        r12, qword [rbx+8]
000000000000598a         mov        rbx, qword [rbx]
000000000000598d         call       j_dcgettext                                 ; dcgettext
0000000000005992         sub        rsp, 0x8

                     loc_5996:
0000000000005996         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005998         mov        rdx, rax
000000000000599b         mov        r9, r13
000000000000599e         mov        r8, r12
00000000000059a1         mov        rcx, rbx
00000000000059a4         mov        rdi, rbp
00000000000059a7         mov        esi, 0x1
00000000000059ac         xor        eax, eax
00000000000059ae         call       j___fprintf_chk                             ; __fprintf_chk
00000000000059b3         pop        rax
00000000000059b4         pop        rdx
00000000000059b5         add        rsp, 0x28
00000000000059b9         pop        rbx
00000000000059ba         pop        rbp
00000000000059bb         pop        r12
00000000000059bd         pop        r13
00000000000059bf         pop        r14
00000000000059c1         pop        r15
00000000000059c3         ret
                        ; endp
00000000000059c4         align      8

                     loc_59c8:
00000000000059c8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000059cc         lea        rsi, qword [aWrittenBySSSns_b878]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000059d3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059da         mov        r14, qword [rbx+0x18]
00000000000059de         mov        r13, qword [rbx+0x10]
00000000000059e2         mov        r12, qword [rbx+8]
00000000000059e6         mov        rbx, qword [rbx]
00000000000059e9         call       j_dcgettext                                 ; dcgettext
00000000000059ee         push       r15
00000000000059f0         jmp        loc_5996
00000000000059f2         align      8

                     loc_59f8:
00000000000059f8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000059fc         mov        r12, qword [rbx+0x28]
0000000000005a00         lea        rsi, qword [aWrittenBySSSns_b8a0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005a07         mov        r15, qword [rbx+0x20]
0000000000005a0b         mov        r14, qword [rbx+0x18]
0000000000005a0f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005a14         mov        r13, qword [rbx+0x10]
0000000000005a18         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a1a         mov        rbx, qword [rbx]
0000000000005a1d         mov        qword [rsp+0x58+var_58], r8
0000000000005a21         call       j_dcgettext                                 ; dcgettext
0000000000005a26         sub        rsp, 0x8
0000000000005a2a         mov        r9, r13
0000000000005a2d         push       r12
0000000000005a2f         push       r15
0000000000005a31         push       r14

                     loc_5a33:
0000000000005a33         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005a38         mov        rcx, rbx
0000000000005a3b         mov        rdx, rax
0000000000005a3e         mov        rdi, rbp
0000000000005a41         mov        esi, 0x1
0000000000005a46         xor        eax, eax
0000000000005a48         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005a4d         add        rsp, 0x20
0000000000005a51         add        rsp, 0x28
0000000000005a55         pop        rbx
0000000000005a56         pop        rbp
0000000000005a57         pop        r12
0000000000005a59         pop        r13
0000000000005a5b         pop        r14
0000000000005a5d         pop        r15
0000000000005a5f         ret
                        ; endp

                     loc_5a60:
0000000000005a60         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000005a64         mov        r13, qword [rbx+0x30]
0000000000005a68         lea        rsi, qword [aWrittenBySSSns_b8c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000005a6f         mov        r12, qword [rbx+0x28]
0000000000005a73         mov        r15, qword [rbx+0x20]
0000000000005a77         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005a7c         mov        r14, qword [rbx+0x18]
0000000000005a80         mov        r8, qword [rbx+8]
0000000000005a84         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a86         mov        qword [rsp+0x58+var_50], r9
0000000000005a8b         mov        rbx, qword [rbx]
0000000000005a8e         mov        qword [rsp+0x58+var_58], r8
0000000000005a92         call       j_dcgettext                                 ; dcgettext
0000000000005a97         push       r13
0000000000005a99         push       r12
0000000000005a9b         push       r15
0000000000005a9d         push       r14
0000000000005a9f         mov        r9, qword [rsp+0x78+var_50]
0000000000005aa4         jmp        loc_5a33
0000000000005aa6         align      16

                     loc_5ab0:
0000000000005ab0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005ab4         mov        r9, qword [rbx+0x38]
0000000000005ab8         mov        edx, 0x5
0000000000005abd         mov        rax, qword [rbx+0x10]
0000000000005ac1         mov        r8, qword [rbx+8]
0000000000005ac5         lea        rsi, qword [aWrittenBySSSns_b960]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000005acc         mov        r13, qword [rbx+0x30]
0000000000005ad0         mov        r12, qword [rbx+0x28]
0000000000005ad4         mov        r15, qword [rbx+0x20]
0000000000005ad8         mov        r14, qword [rbx+0x18]
0000000000005adc         mov        qword [rsp+0x58+var_40], r10
0000000000005ae1         mov        qword [rsp+0x58+var_48], r9
0000000000005ae6         mov        qword [rsp+0x58+var_58], rax
0000000000005aea         mov        qword [rsp+0x58+var_50], r8
0000000000005aef         mov        rbx, qword [rbx]
0000000000005af2         jmp        loc_5882
0000000000005af7         align      256                                         ; End of unwind block (FDE at 0xc994)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005b00         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xcaa8)
0000000000005b03         cmp        qword [r8], 0x0
0000000000005b07         je         j_version_etc_arn                           ; version_etc_arn

0000000000005b09         nop        dword [rax]

                     loc_5b10:
0000000000005b10         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005b14         cmp        qword [r8+r9*8], 0x0
0000000000005b19         jne        loc_5b10

                     j_version_etc_arn:        // version_etc_arn
0000000000005b1b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005b20         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xcaa8), Begin of unwind block (FDE at 0xcabc)
0000000000005b24         mov        r10, r8
0000000000005b27         xor        r9d, r9d
0000000000005b2a         mov        rax, qword [fs:0x28]
0000000000005b33         mov        qword [rsp+0x68+var_10], rax
0000000000005b38         xor        eax, eax
0000000000005b3a         mov        r8, rsp
0000000000005b3d         nop        dword [rax]

                     loc_5b40:
0000000000005b40         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005b43         cmp        eax, 0x2f
0000000000005b46         ja         loc_5b8a

0000000000005b48         mov        r11d, eax
0000000000005b4b         add        r11, qword [r10+0x10]
0000000000005b4f         add        eax, 0x8
0000000000005b52         mov        dword [r10], eax

                     loc_5b55:
0000000000005b55         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005b58         test       rax, rax
0000000000005b5b         mov        qword [r8+r9*8], rax
0000000000005b5f         je         loc_5b6b

0000000000005b61         add        r9, 0x1
0000000000005b65         cmp        r9, 0xa
0000000000005b69         jne        loc_5b40

                     loc_5b6b:
0000000000005b6b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005b70         mov        rax, qword [rsp+0x68+var_10]
0000000000005b75         xor        rax, qword [fs:0x28]
0000000000005b7e         jne        loc_5b85

0000000000005b80         add        rsp, 0x68
0000000000005b84         ret
                        ; endp

                     loc_5b85:
0000000000005b85         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_5b8a:
0000000000005b8a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000005b8e         lea        rax, qword [r11+8]
0000000000005b92         mov        qword [r10+8], rax
0000000000005b96         jmp        loc_5b55
0000000000005b98         align      32                                          ; End of unwind block (FDE at 0xcabc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005ba0         push       rbp                                         ; Begin of unwind block (FDE at 0xcad8), CODE XREF=main+413
0000000000005ba1         push       rbx
0000000000005ba2         mov        r10d, 0x20
0000000000005ba8         xor        r11d, r11d
0000000000005bab         sub        rsp, 0xb8
0000000000005bb2         mov        rax, qword [fs:0x28]
0000000000005bbb         mov        qword [rsp+0xc8+var_50], rax
0000000000005bc0         xor        eax, eax
0000000000005bc2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000005bca         mov        qword [rsp+0xc8+var_28], r8
0000000000005bd2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000005bda         lea        r8, qword [rsp+0xc8+var_A8]
0000000000005bdf         mov        qword [rsp+0xc8+var_20], r9
0000000000005be7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000005bef         mov        qword [rsp+0xc8+var_B8], rax
0000000000005bf4         lea        rax, qword [rsp+0xc8+var_48]
0000000000005bfc         xor        r9d, r9d
0000000000005bff         mov        qword [rsp+0xc8+var_B0], rax
0000000000005c04         mov        rbp, rax
0000000000005c07         nop        word [rax+rax]

                     loc_5c10:
0000000000005c10         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005c14         ja         loc_5c6c

0000000000005c16         mov        eax, r10d
0000000000005c19         mov        r11d, 0x1
0000000000005c1f         add        r10d, 0x8
0000000000005c23         add        rax, rbp

                     loc_5c26:
0000000000005c26         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005c29         test       rax, rax
0000000000005c2c         mov        qword [r8+r9*8], rax
0000000000005c30         je         loc_5c3c

0000000000005c32         add        r9, 0x1
0000000000005c36         cmp        r9, 0xa
0000000000005c3a         jne        loc_5c10

                     loc_5c3c:
0000000000005c3c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000005c3f         jne        loc_5c65

                     loc_5c41:
0000000000005c41         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005c46         mov        rax, qword [rsp+0xc8+var_50]
0000000000005c4b         xor        rax, qword [fs:0x28]
0000000000005c54         jne        loc_5c60

0000000000005c56         add        rsp, 0xb8
0000000000005c5d         pop        rbx
0000000000005c5e         pop        rbp
0000000000005c5f         ret
                        ; endp

                     loc_5c60:
0000000000005c60         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5c65:
0000000000005c65         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000005c6a         jmp        loc_5c41

                     loc_5c6c:
0000000000005c6c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000005c6f         add        rbx, 0x8
0000000000005c73         jmp        loc_5c26
0000000000005c75         align      128                                         ; End of unwind block (FDE at 0xcad8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005c80         push       rbx                                         ; Begin of unwind block (FDE at 0xcb04)
0000000000005c81         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005c88         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c8d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c8f         call       j_dcgettext                                 ; dcgettext
0000000000005c94         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000005c9b         mov        rsi, rax
0000000000005c9e         mov        edi, 0x1
0000000000005ca3         xor        eax, eax
0000000000005ca5         call       j___printf_chk                              ; __printf_chk
0000000000005caa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005cb1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005cb6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005cb8         call       j_dcgettext                                 ; dcgettext
0000000000005cbd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005cc4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xa4a0
0000000000005ccb         mov        rsi, rax
0000000000005cce         mov        edi, 0x1
0000000000005cd3         xor        eax, eax
0000000000005cd5         call       j___printf_chk                              ; __printf_chk
0000000000005cda         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005ce1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005ce8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005cea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005cef         call       j_dcgettext                                 ; dcgettext
0000000000005cf4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005cf7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005cfa         pop        rbx
0000000000005cfb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005d00         push       rbx                                         ; End of unwind block (FDE at 0xcb04), Begin of unwind block (FDE at 0xcb24), CODE XREF=user_group_str+41, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005d01         mov        rbx, rdi
0000000000005d04         call       j_malloc                                    ; malloc
0000000000005d09         test       rax, rax
0000000000005d0c         jne        loc_5d13

0000000000005d0e         test       rbx, rbx
0000000000005d11         jne        loc_5d15

                     loc_5d13:
0000000000005d13         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005d14         ret
                        ; endp

                     loc_5d15:
0000000000005d15         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d1a:
0000000000005d1a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xcb24)
                     xnmalloc:
0000000000005d20         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xcb40)
0000000000005d23         mul        rsi
0000000000005d26         mov        rdi, rax
0000000000005d29         seto       al
0000000000005d2c         test       rdi, rdi
0000000000005d2f         js         loc_5d3b

0000000000005d31         movzx      eax, al
0000000000005d34         test       rax, rax
0000000000005d37         jne        loc_5d3b

0000000000005d39         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_5d3b:
0000000000005d3b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000005d3f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d44:
0000000000005d44         nop                                                    ; End of unwind block (FDE at 0xcb40)
0000000000005d46         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005d50         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xcb54)
                        ; endp
0000000000005d52         align      32                                          ; End of unwind block (FDE at 0xcb54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005d60         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xcb68), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005d63         push       rbx
0000000000005d64         mov        rbx, rsi
0000000000005d67         jne        loc_5d6e

0000000000005d69         test       rdi, rdi
0000000000005d6c         jne        loc_5d88

                     loc_5d6e:
0000000000005d6e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005d71         call       j_realloc                                   ; realloc
0000000000005d76         test       rax, rax
0000000000005d79         jne        loc_5d80

0000000000005d7b         test       rbx, rbx
0000000000005d7e         jne        loc_5d91

                     loc_5d80:
0000000000005d80         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005d81         ret
                        ; endp
0000000000005d82         align      8

                     loc_5d88:
0000000000005d88         call       sub_1d30                                    ; sub_1d30, CODE XREF=xrealloc+12
0000000000005d8d         xor        eax, eax
0000000000005d8f         pop        rbx
0000000000005d90         ret
                        ; endp

                     loc_5d91:
0000000000005d91         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d96:
0000000000005d96         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xcb68)
                     xnrealloc:
0000000000005da0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xcb8c)
0000000000005da3         mul        rdx
0000000000005da6         mov        rsi, rax
0000000000005da9         seto       al
0000000000005dac         test       rsi, rsi
0000000000005daf         js         loc_5dbb

0000000000005db1         movzx      eax, al
0000000000005db4         test       rax, rax
0000000000005db7         jne        loc_5dbb

0000000000005db9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_5dbb:
0000000000005dbb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000005dbf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5dc4:
0000000000005dc4         nop                                                    ; End of unwind block (FDE at 0xcb8c)
0000000000005dc6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005dd0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xcba0)
0000000000005dd3         mov        r9, rdx
0000000000005dd6         mov        rcx, qword [rsi]
0000000000005dd9         je         loc_5e10

0000000000005ddb         xor        edx, edx
0000000000005ddd         movabs     rax, 0x5555555555555554
0000000000005de7         div        r9
0000000000005dea         cmp        rax, rcx
0000000000005ded         jbe        loc_5e2b

0000000000005def         mov        rax, rcx
0000000000005df2         shr        rax, 0x1
0000000000005df5         lea        rcx, qword [rax+rcx+1]

                     loc_5dfa:
0000000000005dfa         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005dfd         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005e01         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005e04         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005e09         align      16

                     loc_5e10:
0000000000005e10         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005e13         je         loc_5e38

                     loc_5e15:
0000000000005e15         mov        rax, rcx                                    ; CODE XREF=sub_5e34+28
0000000000005e18         mul        r9
0000000000005e1b         seto       dl
0000000000005e1e         test       rax, rax
0000000000005e21         movzx      edx, dl
0000000000005e24         js         loc_5e2b

0000000000005e26         test       rdx, rdx
0000000000005e29         je         loc_5dfa

                     loc_5e2b:
0000000000005e2b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005e2f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e34:
0000000000005e34         nop        dword [rax]
                        ; endp

                     loc_5e38:
0000000000005e38         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005e3a         mov        eax, 0x80
0000000000005e3f         xor        r8d, r8d
0000000000005e42         div        r9
0000000000005e45         test       rax, rax
0000000000005e48         sete       r8b
0000000000005e4c         lea        rcx, qword [r8+rax]
0000000000005e50         jmp        loc_5e15
0000000000005e52         align      32                                          ; End of unwind block (FDE at 0xcba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005e60         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xcbb8)
0000000000005e63         mov        rax, qword [rsi]
0000000000005e66         je         loc_5e90

0000000000005e68         movabs     rdx, 0x5555555555555553
0000000000005e72         cmp        rax, rdx
0000000000005e75         ja         loc_5ea1

0000000000005e77         mov        rdx, rax
0000000000005e7a         shr        rdx, 0x1
0000000000005e7d         lea        rax, qword [rdx+rax+1]

                     loc_5e82:
0000000000005e82         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005e85         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005e88         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005e8d         align      16

                     loc_5e90:
0000000000005e90         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005e93         mov        edx, 0x80
0000000000005e98         cmove      rax, rdx
0000000000005e9c         test       rax, rax
0000000000005e9f         jns        loc_5e82

                     loc_5ea1:
0000000000005ea1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005ea5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5eaa:
0000000000005eaa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xcbb8)
                     xzalloc:
0000000000005eb0         push       rbx                                         ; Begin of unwind block (FDE at 0xcbd0)
0000000000005eb1         mov        rbx, rdi
0000000000005eb4         call       xmalloc                                     ; xmalloc
0000000000005eb9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005ebc         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005ebe         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005ec1         pop        rbx
0000000000005ec2         jmp        j_memset                                    ; memset
                        ; endp
0000000000005ec7         align      16                                          ; End of unwind block (FDE at 0xcbd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005ed0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xcbec)
0000000000005ed3         sub        rsp, 0x8
0000000000005ed7         mul        rsi
0000000000005eda         seto       dl
0000000000005edd         test       rax, rax
0000000000005ee0         js         loc_5ef9

0000000000005ee2         movzx      edx, dl
0000000000005ee5         test       rdx, rdx
0000000000005ee8         jne        loc_5ef9

0000000000005eea         call       j_calloc                                    ; calloc
0000000000005eef         test       rax, rax
0000000000005ef2         je         loc_5ef9

0000000000005ef4         add        rsp, 0x8
0000000000005ef8         ret
                        ; endp

                     loc_5ef9:
0000000000005ef9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5efe:
0000000000005efe         nop                                                    ; End of unwind block (FDE at 0xcbec)
                        ; endp

                     xmemdup:
0000000000005f00         push       rbp                                         ; Begin of unwind block (FDE at 0xcc08), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005f01         push       rbx
0000000000005f02         mov        rbp, rdi
0000000000005f05         mov        rdi, rsi
0000000000005f08         mov        rbx, rsi
0000000000005f0b         sub        rsp, 0x8
0000000000005f0f         call       xmalloc                                     ; xmalloc
0000000000005f14         add        rsp, 0x8
0000000000005f18         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005f1b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005f1e         pop        rbx
0000000000005f1f         pop        rbp
0000000000005f20         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005f23         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005f28         align      16                                          ; End of unwind block (FDE at 0xcc08)

                     xstrdup:
0000000000005f30         push       rbx                                         ; Begin of unwind block (FDE at 0xcc30), CODE XREF=main+938, user_group_str+100, gid_to_name+36, uid_to_name+36
0000000000005f31         mov        rbx, rdi
0000000000005f34         call       j_strlen                                    ; strlen
0000000000005f39         mov        rdi, rbx
0000000000005f3c         lea        rsi, qword [rax+1]
0000000000005f40         pop        rbx
0000000000005f41         jmp        xmemdup                                     ; xmemdup
0000000000005f43         align      16                                          ; End of unwind block (FDE at 0xcc30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005f50         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xcc4c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xfts_open+42
0000000000005f57         sub        rsp, 0x8
0000000000005f5b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f60         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f62         call       j_dcgettext                                 ; dcgettext
0000000000005f67         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005f6d         lea        rdx, qword [aInvalidGroupS+15]              ; argument "__format" for method j_error, 0xa543
0000000000005f74         mov        rcx, rax
0000000000005f77         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005f79         xor        eax, eax
0000000000005f7b         call       j_error                                     ; error
0000000000005f80         call       j_abort                                     ; abort
                        ; endp
0000000000005f85         align      16                                          ; End of unwind block (FDE at 0xcc4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xfts_open:
0000000000005f90         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xcc64), CODE XREF=chown_files+63
0000000000005f94         or         esi, 0x200
0000000000005f9a         call       rpl_fts_open                                ; rpl_fts_open
0000000000005f9f         test       rax, rax
0000000000005fa2         je         loc_5fb0

0000000000005fa4         add        rsp, 0x8
0000000000005fa8         ret
                        ; endp
0000000000005fa9         align      16

                     loc_5fb0:
0000000000005fb0         call       j___errno_location                          ; __errno_location, CODE XREF=xfts_open+18
0000000000005fb5         cmp        dword [rax], 0x16
0000000000005fb8         je         loc_5fc0

0000000000005fba         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5fbf:
0000000000005fbf         nop
                        ; endp

                     loc_5fc0:
0000000000005fc0         lea        rcx, qword [__PRETTY_FUNCTION__.3434]       ; argument "__function" for method j___assert_fail, "xfts_open", CODE XREF=xfts_open+40
0000000000005fc7         lea        rsi, qword [aCoreutils831li_ba60]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xfts.c"
0000000000005fce         lea        rdi, qword [aErrnoEinval]                   ; argument "__assertion" for method j___assert_fail, "errno != EINVAL"
0000000000005fd5         mov        edx, 0x29                                   ; argument "__line" for method j___assert_fail
0000000000005fda         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000005fdf         align      32                                          ; End of unwind block (FDE at 0xcc64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_warning_required:
0000000000005fe0         mov        edx, dword [rdi+0x48]                       ; Begin of unwind block (FDE at 0xcc80), CODE XREF=sub_29d0+9
0000000000005fe3         mov        eax, 0x1
0000000000005fe8         and        edx, 0x11
0000000000005feb         cmp        edx, 0x10
0000000000005fee         je         loc_5ff7

0000000000005ff0         xor        eax, eax
0000000000005ff2         cmp        edx, 0x11
0000000000005ff5         je         loc_6000

                     loc_5ff7:
0000000000005ff7         ret                                                    ; CODE XREF=cycle_warning_required+14
                        ; endp
0000000000005ff9         align      8192

                     loc_6000:
0000000000006000         cmp        qword [rsi+0x58], 0x0                       ; CODE XREF=cycle_warning_required+21
0000000000006005         setne      al
0000000000006008         ret
                        ; endp
0000000000006009         align      16                                          ; End of unwind block (FDE at 0xcc80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoul:
0000000000006010         push       r15                                         ; Begin of unwind block (FDE at 0xcc94), CODE XREF=main+973
0000000000006012         push       r14
0000000000006014         push       r13
0000000000006016         push       r12
0000000000006018         push       rbp
0000000000006019         push       rbx
000000000000601a         sub        rsp, 0x28
000000000000601e         mov        rax, qword [fs:0x28]
0000000000006027         mov        qword [rsp+0x58+var_40], rax
000000000000602c         xor        eax, eax
000000000000602e         cmp        edx, 0x24
0000000000006031         ja         loc_6395

0000000000006037         lea        rax, qword [rsp+0x58+var_48]
000000000000603c         mov        r15, rsi
000000000000603f         test       rsi, rsi
0000000000006042         mov        rbp, rdi
0000000000006045         mov        dword [rsp+0x58+var_50], edx
0000000000006049         mov        r14, rcx
000000000000604c         mov        r13, r8
000000000000604f         cmove      r15, rax
0000000000006053         call       j___errno_location                          ; __errno_location
0000000000006058         mov        dword [rax], 0x0
000000000000605e         mov        r12, rax
0000000000006061         movzx      ebx, byte [rbp]
0000000000006065         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000606a         mov        edx, dword [rsp+0x58+var_50]
000000000000606e         mov        rsi, qword [rax]
0000000000006071         mov        rax, rbp
0000000000006074         jmp        loc_6087
0000000000006076         align      128

                     loc_6080:
0000000000006080         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000006084         movzx      ebx, byte [rax]

                     loc_6087:
0000000000006087         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
000000000000608a         test       byte [rsi+rcx*2+1], 0x20
000000000000608f         jne        loc_6080

0000000000006091         cmp        bl, 0x2d
0000000000006094         je         loc_60e8

0000000000006096         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000006099         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
000000000000609c         call       j_strtoul                                   ; strtoul
00000000000060a1         mov        rcx, qword [r15]
00000000000060a4         mov        rbx, rax
00000000000060a7         cmp        rcx, rbp
00000000000060aa         je         loc_60d8

00000000000060ac         mov        eax, dword [r12]
00000000000060b0         test       eax, eax
00000000000060b2         je         loc_6118

00000000000060b4         cmp        eax, 0x22
00000000000060b7         mov        ebp, 0x1
00000000000060bc         jne        loc_60e8

                     loc_60be:
00000000000060be         test       r13, r13                                    ; CODE XREF=xstrtoul+266
00000000000060c1         je         loc_60cc

00000000000060c3         movzx      r12d, byte [rcx]
00000000000060c7         test       r12b, r12b
00000000000060ca         jne        loc_6147

                     loc_60cc:
00000000000060cc         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
00000000000060cf         jmp        loc_60ed
00000000000060d1         align      8

                     loc_60d8:
00000000000060d8         test       r13, r13                                    ; CODE XREF=xstrtoul+154
00000000000060db         mov        qword [rsp+0x58+var_50], rcx
00000000000060e0         jne        loc_6120

00000000000060e2         nop        word [rax+rax]

                     loc_60e8:
00000000000060e8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_60ed:
00000000000060ed         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
00000000000060f2         xor        rdi, qword [fs:0x28]
00000000000060fb         mov        eax, ebp
00000000000060fd         jne        loc_6390

0000000000006103         add        rsp, 0x28
0000000000006107         pop        rbx
0000000000006108         pop        rbp
0000000000006109         pop        r12
000000000000610b         pop        r13
000000000000610d         pop        r14
000000000000610f         pop        r15
0000000000006111         ret
                        ; endp
0000000000006112         align      8

                     loc_6118:
0000000000006118         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
000000000000611a         jmp        loc_60be
000000000000611c         align      32

                     loc_6120:
0000000000006120         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
0000000000006125         test       r12b, r12b
0000000000006128         je         loc_60e8

000000000000612a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000612e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006131         xor        ebp, ebp
0000000000006133         call       j_strchr                                    ; strchr
0000000000006138         test       rax, rax
000000000000613b         mov        ebx, 0x1
0000000000006140         mov        rcx, qword [rsp+0x58+var_50]
0000000000006145         je         loc_60e8

                     loc_6147:
0000000000006147         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
000000000000614b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000614e         mov        qword [rsp+0x58+var_50], rcx
0000000000006153         call       j_strchr                                    ; strchr
0000000000006158         test       rax, rax
000000000000615b         mov        rcx, qword [rsp+0x58+var_50]
0000000000006160         je         loc_622c

0000000000006166         lea        eax, dword [r12-0x45]
000000000000616b         cmp        al, 0x2f
000000000000616d         ja         loc_61c0

000000000000616f         movabs     rdx, 0x814400308945
0000000000006179         bt         rdx, rax
000000000000617d         jae        loc_61c0

000000000000617f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000006184         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006187         mov        qword [rsp+0x58+var_50], rcx
000000000000618c         call       j_strchr                                    ; strchr
0000000000006191         test       rax, rax
0000000000006194         mov        rcx, qword [rsp+0x58+var_50]
0000000000006199         je         loc_61c0

000000000000619b         movzx      eax, byte [rcx+1]
000000000000619f         cmp        al, 0x44
00000000000061a1         je         loc_61af

00000000000061a3         cmp        al, 0x69
00000000000061a5         je         loc_6378

00000000000061ab         cmp        al, 0x42
00000000000061ad         jne        loc_61c0

                     loc_61af:
00000000000061af         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
00000000000061b4         mov        esi, 0x3e8
00000000000061b9         jmp        loc_61ca
00000000000061bb         align      64

                     loc_61c0:
00000000000061c0         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
00000000000061c5         mov        esi, 0x400

                     loc_61ca:
00000000000061ca         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
00000000000061ce         cmp        r12b, 0x35
00000000000061d2         ja         loc_622c

00000000000061d4         lea        rdx, qword [switch_table_bae8]              ; switch_table_bae8
00000000000061db         movzx      r12d, r12b
00000000000061df         movsxd     rax, dword [rdx+r12*4]
00000000000061e3         add        rax, rdx
00000000000061e6         jmp        rax                                         ; switch statement using table at 0xbae8, with 54 cases, 0x61e8,0x6210,0x622c,0x6237,0x624d,0x6264,0x628a,0x62af,0x62cf,0x62f0,0x6313,0x6336,0x634c

                     loc_61e8:
00000000000061e8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
00000000000061eb         mul        rsi
00000000000061ee         jo         loc_63e1

00000000000061f4         xor        r8d, r8d

                     loc_61f7:
00000000000061f7         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
00000000000061fa         jo         loc_63d2

0000000000006200         mov        rbx, rax

                     loc_6203:
0000000000006203         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
0000000000006206         nop        word [cs:rax+rax]

                     loc_6210:
0000000000006210         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
0000000000006213         mov        eax, ebp
0000000000006215         add        rcx, rdi
0000000000006218         or         eax, 0x2
000000000000621b         mov        qword [r15], rcx
000000000000621e         cmp        byte [rcx], 0x0
0000000000006221         mov        qword [r14], rbx
0000000000006224         cmovne     ebp, eax
0000000000006227         jmp        loc_60ed

                     loc_622c:
000000000000622c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
000000000000622f         or         ebp, 0x2
0000000000006232         jmp        loc_60ed

                     loc_6237:
0000000000006237         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
000000000000623c         mov        rax, rdx
000000000000623f         mul        rbx
0000000000006242         jo         loc_62de

0000000000006248         add        rbx, rbx
000000000000624b         jmp        loc_6210

                     loc_624d:
000000000000624d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
0000000000006252         mov        rax, rdx
0000000000006255         mul        rbx
0000000000006258         jo         loc_62de

000000000000625e         shl        rbx, 0x9
0000000000006262         jmp        loc_6210

                     loc_6264:
0000000000006264         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
000000000000626a         xor        r9d, r9d
000000000000626d         nop        dword [rax]

                     loc_6270:
0000000000006270         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
0000000000006273         mul        rsi
0000000000006276         mov        rbx, rax
0000000000006279         jo         loc_640e

                     loc_627f:
000000000000627f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
0000000000006283         jne        loc_6270

                     loc_6285:
0000000000006285         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
0000000000006288         jmp        loc_6210

                     loc_628a:
000000000000628a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
0000000000006290         xor        r9d, r9d
0000000000006293         nop        dword [rax+rax]

                     loc_6298:
0000000000006298         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
000000000000629b         mul        rsi
000000000000629e         mov        rbx, rax
00000000000062a1         jo         loc_63f0

                     loc_62a7:
00000000000062a7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
00000000000062ab         jne        loc_6298

00000000000062ad         jmp        loc_6285

                     loc_62af:
00000000000062af         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
00000000000062b5         xor        r9d, r9d

                     loc_62b8:
00000000000062b8         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
00000000000062bb         mul        rsi
00000000000062be         mov        rbx, rax
00000000000062c1         jo         loc_63c3

                     loc_62c7:
00000000000062c7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
00000000000062cb         jne        loc_62b8

00000000000062cd         jmp        loc_6285

                     loc_62cf:
00000000000062cf         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
00000000000062d2         mul        rsi
00000000000062d5         mov        rbx, rax
00000000000062d8         jno        loc_6210

                     loc_62de:
00000000000062de         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
00000000000062e3         or         rbx, 0xffffffffffffffff
00000000000062e7         jmp        loc_6210
00000000000062ec         align      16

                     loc_62f0:
00000000000062f0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
00000000000062f6         xor        r9d, r9d

                     loc_62f9:
00000000000062f9         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
00000000000062fc         mul        rsi
00000000000062ff         mov        rbx, rax
0000000000006302         jo         loc_63ff

                     loc_6308:
0000000000006308         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
000000000000630c         jne        loc_62f9

000000000000630e         jmp        loc_6285

                     loc_6313:
0000000000006313         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
0000000000006319         xor        r9d, r9d

                     loc_631c:
000000000000631c         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
000000000000631f         mul        rsi
0000000000006322         mov        rbx, rax
0000000000006325         jo         loc_63b4

                     loc_632b:
000000000000632b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
000000000000632f         jne        loc_631c

0000000000006331         jmp        loc_6285

                     loc_6336:
0000000000006336         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
000000000000633b         mov        rax, rdx
000000000000633e         mul        rbx
0000000000006341         jo         loc_62de

0000000000006343         shl        rbx, 0xa
0000000000006347         jmp        loc_6210

                     loc_634c:
000000000000634c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
000000000000634f         mul        rsi
0000000000006352         jo         loc_641d

0000000000006358         xor        r8d, r8d

                     loc_635b:
000000000000635b         mul        rsi                                         ; CODE XREF=xstrtoul+1047
000000000000635e         jno        loc_61f7

0000000000006364         mov        r8d, 0x1
000000000000636a         or         rax, 0xffffffffffffffff
000000000000636e         jmp        loc_61f7
0000000000006373         align      8

                     loc_6378:
0000000000006378         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
000000000000637a         cmp        byte [rcx+2], 0x42
000000000000637e         mov        esi, 0x400
0000000000006383         sete       dil
0000000000006387         lea        edi, dword [rdi+rdi+1]
000000000000638b         jmp        loc_61ca

                     loc_6390:
0000000000006390         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_6395:
0000000000006395         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
000000000000639c         lea        rsi, qword [aCoreutils831li_baa0]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000063a3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000063aa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000063af         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_63b4:
00000000000063b4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
00000000000063ba         or         rbx, 0xffffffffffffffff
00000000000063be         jmp        loc_632b

                     loc_63c3:
00000000000063c3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
00000000000063c9         or         rbx, 0xffffffffffffffff
00000000000063cd         jmp        loc_62c7

                     loc_63d2:
00000000000063d2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
00000000000063d8         or         rbx, 0xffffffffffffffff
00000000000063dc         jmp        loc_6203

                     loc_63e1:
00000000000063e1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
00000000000063e5         mov        r8d, 0x1
00000000000063eb         jmp        loc_61f7

                     loc_63f0:
00000000000063f0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
00000000000063f6         or         rbx, 0xffffffffffffffff
00000000000063fa         jmp        loc_62a7

                     loc_63ff:
00000000000063ff         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000006405         or         rbx, 0xffffffffffffffff
0000000000006409         jmp        loc_6308

                     loc_640e:
000000000000640e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
0000000000006414         or         rbx, 0xffffffffffffffff
0000000000006418         jmp        loc_627f

                     loc_641d:
000000000000641d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
0000000000006423         or         rax, 0xffffffffffffffff
0000000000006427         jmp        loc_635b
000000000000642c         align      16                                          ; End of unwind block (FDE at 0xcc94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_compare:
0000000000006430         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xcce4), DATA XREF=setup_dir.isra.4+19
0000000000006432         mov        rdx, qword [rsi+8]
0000000000006436         cmp        qword [rdi+8], rdx
000000000000643a         je         loc_6440

000000000000643c         ret
                        ; endp
000000000000643e         align      64

                     loc_6440:
0000000000006440         mov        rax, qword [rsi]                            ; CODE XREF=AD_compare+10
0000000000006443         cmp        qword [rdi], rax
0000000000006446         sete       al
0000000000006449         ret
                        ; endp
000000000000644a         align      16                                          ; End of unwind block (FDE at 0xcce4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_hash:
0000000000006450         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0xccf8), DATA XREF=setup_dir.isra.4+26
0000000000006454         xor        edx, edx
0000000000006456         div        rsi
0000000000006459         mov        rax, rdx
000000000000645c         ret
                        ; endp
000000000000645d         align      32                                          ; End of unwind block (FDE at 0xccf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_hash:
0000000000006460         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0xcd0c), DATA XREF=filesystem_type+110
0000000000006463         xor        edx, edx
0000000000006465         div        rsi
0000000000006468         mov        rax, rdx
000000000000646b         ret
                        ; endp
000000000000646c         align      16                                          ; End of unwind block (FDE at 0xcd0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_compare:
0000000000006470         mov        rax, qword [rsi]                            ; Begin of unwind block (FDE at 0xcd20), DATA XREF=filesystem_type+103
0000000000006473         cmp        qword [rdi], rax
0000000000006476         sete       al
0000000000006479         ret
                        ; endp
000000000000647a         align      128                                         ; End of unwind block (FDE at 0xcd20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_compare_ino:
0000000000006480         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xcd34), DATA XREF=fts_build+2040
0000000000006483         mov        rax, qword [rsi]
0000000000006486         mov        rax, qword [rax+0x80]
000000000000648d         cmp        qword [rdx+0x80], rax
0000000000006494         jb         loc_64a0

0000000000006496         seta       al
0000000000006499         movzx      eax, al
000000000000649c         ret
                        ; endp
000000000000649d         align      32

                     loc_64a0:
00000000000064a0         mov        eax, 0xffffffff                             ; CODE XREF=fts_compare_ino+20
00000000000064a5         ret
                        ; endp
00000000000064a6         align      16                                          ; End of unwind block (FDE at 0xcd34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_stat:
00000000000064b0         push       r12                                         ; Begin of unwind block (FDE at 0xcd48), CODE XREF=fts_build+1104, fts_build+1543, fts_build+2136, rpl_fts_open+765, rpl_fts_read+440, rpl_fts_read+645, rpl_fts_read+1452, rpl_fts_read+1624
00000000000064b2         push       rbp
00000000000064b3         mov        rbp, rsi
00000000000064b6         push       rbx
00000000000064b7         cmp        qword [rbp+0x58], 0x0
00000000000064bc         lea        rbx, qword [rsi+0x78]
00000000000064c0         mov        r12, rdi
00000000000064c3         mov        eax, dword [rdi+0x48]
00000000000064c6         mov        rsi, qword [rsi+0x30]
00000000000064ca         jne        loc_6530

00000000000064cc         test       al, 0x1
00000000000064ce         je         loc_6530

                     loc_64d0:
00000000000064d0         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___xstat, CODE XREF=fts_stat+130, fts_stat+134
00000000000064d3         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000064d8         call       j___xstat                                   ; __xstat
00000000000064dd         test       eax, eax
00000000000064df         je         loc_655b

00000000000064e1         call       j___errno_location                          ; __errno_location
00000000000064e6         mov        r12, rax
00000000000064e9         mov        eax, dword [rax]
00000000000064eb         cmp        eax, 0x2
00000000000064ee         je         loc_6600

                     loc_64f4:
00000000000064f4         lea        rdi, qword [rbx+8]                          ; CODE XREF=fts_stat+327, fts_stat+361
00000000000064f8         mov        dword [rbp+0x40], eax
00000000000064fb         mov        qword [rbp+0x78], 0x0
0000000000006503         mov        qword [rbx+0x88], 0x0
000000000000650e         xor        eax, eax
0000000000006510         and        rdi, 0xfffffffffffffff8
0000000000006514         sub        rbx, rdi
0000000000006517         lea        ecx, dword [rbx+0x90]
000000000000651d         shr        ecx, 0x3
0000000000006520         rep stosq  qword [rdi], rax
0000000000006523         mov        eax, 0xa

                     loc_6528:
0000000000006528         pop        rbx                                         ; CODE XREF=fts_stat+278, fts_stat+310, fts_stat+397, fts_stat+413, fts_stat+442
0000000000006529         pop        rbp
000000000000652a         pop        r12
000000000000652c         ret
                        ; endp
000000000000652d         align      16

                     loc_6530:
0000000000006530         test       al, 0x2                                     ; CODE XREF=fts_stat+26, fts_stat+30
0000000000006532         jne        loc_64d0

0000000000006534         test       dl, dl
0000000000006536         jne        loc_64d0

0000000000006538         mov        rdx, rsi                                    ; argument "__filename" for method j___fxstatat
000000000000653b         mov        esi, dword [r12+0x2c]                       ; argument "__fildes" for method j___fxstatat
0000000000006540         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000006546         mov        rcx, rbx                                    ; argument "__stat_buf" for method j___fxstatat
0000000000006549         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000654e         call       j___fxstatat                                ; __fxstatat
0000000000006553         test       eax, eax
0000000000006555         jne        loc_65f0

                     loc_655b:
000000000000655b         mov        eax, dword [rbp+0x90]                       ; CODE XREF=fts_stat+47
0000000000006561         and        eax, 0xf000
0000000000006566         cmp        eax, 0x4000
000000000000656b         je         loc_6590

000000000000656d         cmp        eax, 0xa000
0000000000006572         je         loc_6648

0000000000006578         cmp        eax, 0x8000
000000000000657d         sete       al
0000000000006580         movzx      eax, al
0000000000006583         pop        rbx
0000000000006584         lea        eax, dword [rax+rax*4+3]
0000000000006588         pop        rbp
0000000000006589         pop        r12
000000000000658b         ret
                        ; endp
000000000000658c         align      16

                     loc_6590:
0000000000006590         mov        rax, qword [rbp+0x88]                       ; CODE XREF=fts_stat+187
0000000000006597         cmp        rax, 0x1
000000000000659b         jbe        loc_6620

00000000000065a1         cmp        qword [rbp+0x58], 0x0
00000000000065a6         jle        loc_6620

00000000000065a8         test       byte [r12+0x48], 0x20
00000000000065ae         lea        rdx, qword [rax-2]
00000000000065b2         cmove      rax, rdx

                     loc_65b6:
00000000000065b6         cmp        byte [rbp+0x108], 0x2e                      ; CODE XREF=fts_stat+375
00000000000065bd         mov        qword [rbp+0x68], rax
00000000000065c1         mov        eax, 0x1
00000000000065c6         jne        loc_6528

00000000000065cc         cmp        byte [rbp+0x109], 0x0
00000000000065d3         jne        loc_6658

                     loc_65d9:
00000000000065d9         cmp        qword [rbp+0x58], 0x1                       ; CODE XREF=fts_stat+448
00000000000065de         sbb        eax, eax
00000000000065e0         and        eax, 0xfffffffc
00000000000065e3         add        eax, 0x5
00000000000065e6         jmp        loc_6528
00000000000065eb         align      16

                     loc_65f0:
00000000000065f0         call       j___errno_location                          ; __errno_location, CODE XREF=fts_stat+165
00000000000065f5         mov        eax, dword [rax]
00000000000065f7         jmp        loc_64f4
00000000000065fc         align      512

                     loc_6600:
0000000000006600         mov        rsi, qword [rbp+0x30]                       ; argument "__filename" for method j___lxstat, CODE XREF=fts_stat+62
0000000000006604         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___lxstat
0000000000006607         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000660c         call       j___lxstat                                  ; __lxstat
0000000000006611         test       eax, eax
0000000000006613         je         loc_6630

0000000000006615         mov        eax, dword [r12]
0000000000006619         jmp        loc_64f4
000000000000661e         align      32

                     loc_6620:
0000000000006620         mov        rax, 0xffffffffffffffff                     ; CODE XREF=fts_stat+235, fts_stat+246
0000000000006627         jmp        loc_65b6
0000000000006629         align      16

                     loc_6630:
0000000000006630         mov        dword [r12], 0x0                            ; CODE XREF=fts_stat+355
0000000000006638         mov        eax, 0xd
000000000000663d         jmp        loc_6528
0000000000006642         align      8

                     loc_6648:
0000000000006648         mov        eax, 0xc                                    ; CODE XREF=fts_stat+194
000000000000664d         jmp        loc_6528
0000000000006652         align      8

                     loc_6658:
0000000000006658         mov        edx, dword [rbp+0x108]                      ; CODE XREF=fts_stat+291
000000000000665e         and        edx, 0xffff00
0000000000006664         cmp        edx, 0x2e00
000000000000666a         jne        loc_6528

0000000000006670         jmp        loc_65d9
0000000000006675         align      128                                         ; End of unwind block (FDE at 0xcd48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_sort:
0000000000006680         push       r13                                         ; Begin of unwind block (FDE at 0xcd84), CODE XREF=fts_build+1825, fts_build+2062, rpl_fts_open+548
0000000000006682         push       r12
0000000000006684         mov        r12, rdx
0000000000006687         push       rbp
0000000000006688         push       rbx
0000000000006689         mov        rbp, rdi
000000000000668c         mov        rbx, rsi
000000000000668f         sub        rsp, 0x8
0000000000006693         cmp        qword [rbp+0x38], rdx
0000000000006697         mov        r13, qword [rdi+0x40]
000000000000669b         mov        rdi, qword [rdi+0x10]
000000000000669f         jae        loc_66d5

00000000000066a1         lea        rsi, qword [rdx+0x28]
00000000000066a5         movabs     rax, 0x1fffffffffffffff
00000000000066af         cmp        rsi, rax
00000000000066b2         mov        qword [rbp+0x38], rsi
00000000000066b6         ja         loc_6754

00000000000066bc         shl        rsi, 0x3                                    ; argument "__size" for method j_realloc
00000000000066c0         call       j_realloc                                   ; realloc
00000000000066c5         test       rax, rax
00000000000066c8         mov        rdi, rax
00000000000066cb         je         loc_6750

00000000000066d1         mov        qword [rbp+0x10], rax

                     loc_66d5:
00000000000066d5         test       rbx, rbx                                    ; CODE XREF=fts_sort+31
00000000000066d8         je         loc_66f1

00000000000066da         mov        rdx, rdi
00000000000066dd         nop        dword [rax]

                     loc_66e0:
00000000000066e0         add        rdx, 0x8                                    ; CODE XREF=fts_sort+111
00000000000066e4         mov        qword [rdx-8], rbx
00000000000066e8         mov        rbx, qword [rbx+0x10]
00000000000066ec         test       rbx, rbx
00000000000066ef         jne        loc_66e0

                     loc_66f1:
00000000000066f1         mov        rcx, r13                                    ; argument "__compar" for method j_qsort, CODE XREF=fts_sort+88
00000000000066f4         mov        edx, 0x8                                    ; argument "__size" for method j_qsort
00000000000066f9         mov        rsi, r12                                    ; argument "__nmemb" for method j_qsort
00000000000066fc         call       j_qsort                                     ; qsort
0000000000006701         mov        r8, qword [rbp+0x10]
0000000000006705         mov        rcx, r12
0000000000006708         sub        rcx, 0x1
000000000000670c         mov        rax, qword [r8]
000000000000670f         je         loc_6780

0000000000006711         mov        rdi, rax
0000000000006714         mov        rdx, r8
0000000000006717         jmp        loc_6723
0000000000006719         align      32

                     loc_6720:
0000000000006720         mov        rdi, qword [rdx]                            ; CODE XREF=fts_sort+179

                     loc_6723:
0000000000006723         mov        rsi, qword [rdx+8]                          ; CODE XREF=fts_sort+151
0000000000006727         add        rdx, 0x8
000000000000672b         sub        rcx, 0x1
000000000000672f         mov        qword [rdi+0x10], rsi
0000000000006733         jne        loc_6720

0000000000006735         mov        rdx, qword [r8+r12*8-8]

                     loc_673a:
000000000000673a         mov        qword [rdx+0x10], 0x0                       ; CODE XREF=fts_sort+259
0000000000006742         add        rsp, 0x8
0000000000006746         pop        rbx
0000000000006747         pop        rbp
0000000000006748         pop        r12
000000000000674a         pop        r13
000000000000674c         ret
                        ; endp
000000000000674d         align      16

                     loc_6750:
0000000000006750         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=fts_sort+75

                     loc_6754:
0000000000006754         call       sub_1d30                                    ; sub_1d30, CODE XREF=fts_sort+54
0000000000006759         mov        qword [rbp+0x10], 0x0
0000000000006761         mov        qword [rbp+0x38], 0x0
0000000000006769         add        rsp, 0x8
000000000000676d         mov        rax, rbx
0000000000006770         pop        rbx
0000000000006771         pop        rbp
0000000000006772         pop        r12
0000000000006774         pop        r13
0000000000006776         ret
                        ; endp
0000000000006777         align      128

                     loc_6780:
0000000000006780         mov        rdx, rax                                    ; CODE XREF=fts_sort+143
0000000000006783         jmp        loc_673a
0000000000006785         align      16                                          ; End of unwind block (FDE at 0xcd84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_alloc:
0000000000006790         push       r13                                         ; Begin of unwind block (FDE at 0xcdd4), CODE XREF=fts_build+556, rpl_fts_open+231, rpl_fts_open+334, rpl_fts_open+568
0000000000006792         push       r12
0000000000006794         mov        r12, rdi
0000000000006797         push       rbp
0000000000006798         lea        rdi, qword [rdx+0x110]
000000000000679f         push       rbx
00000000000067a0         mov        r13, rsi
00000000000067a3         mov        rbp, rdx
00000000000067a6         sub        rsp, 0x8
00000000000067aa         and        rdi, 0xfffffffffffffff8                     ; argument "__size" for method j_malloc
00000000000067ae         call       j_malloc                                    ; malloc
00000000000067b3         test       rax, rax
00000000000067b6         mov        rbx, rax
00000000000067b9         je         loc_680c

00000000000067bb         lea        rdi, qword [rax+0x108]                      ; argument "__dest" for method j_memcpy
00000000000067c2         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
00000000000067c5         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
00000000000067c8         call       j_memcpy                                    ; memcpy
00000000000067cd         mov        rax, qword [r12+0x20]
00000000000067d2         mov        byte [rbx+rbp+0x108], 0x0
00000000000067da         mov        qword [rbx+0x60], rbp
00000000000067de         mov        qword [rbx+0x50], r12
00000000000067e2         mov        dword [rbx+0x40], 0x0
00000000000067e9         mov        qword [rbx+0x18], 0x0
00000000000067f1         mov        qword [rbx+0x38], rax
00000000000067f5         mov        dword [rbx+0x72], 0x30000
00000000000067fc         mov        qword [rbx+0x20], 0x0
0000000000006804         mov        qword [rbx+0x28], 0x0

                     loc_680c:
000000000000680c         add        rsp, 0x8                                    ; CODE XREF=fts_alloc+41
0000000000006810         mov        rax, rbx
0000000000006813         pop        rbx
0000000000006814         pop        rbp
0000000000006815         pop        r12
0000000000006817         pop        r13
0000000000006819         ret
                        ; endp
000000000000681a         align      32                                          ; End of unwind block (FDE at 0xcdd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_lfree:
0000000000006820         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xce0c), CODE XREF=fts_build+1638, fts_build+1893, fts_build+2281, fts_build+2418, rpl_fts_open+851, rpl_fts_close+92, rpl_fts_read+367, rpl_fts_read+1034, rpl_fts_children+75
0000000000006823         je         loc_6860

0000000000006825         push       rbp
0000000000006826         push       rbx
0000000000006827         mov        rbx, rdi
000000000000682a         sub        rsp, 0x8
000000000000682e         nop

                     loc_6830:
0000000000006830         mov        rdi, qword [rbx+0x18]                       ; CODE XREF=fts_lfree+48
0000000000006834         mov        rbp, qword [rbx+0x10]
0000000000006838         test       rdi, rdi
000000000000683b         je         loc_6842

000000000000683d         call       j_closedir                                  ; closedir

                     loc_6842:
0000000000006842         mov        rdi, rbx                                    ; CODE XREF=fts_lfree+27
0000000000006845         mov        rbx, rbp
0000000000006848         call       sub_1d30                                    ; sub_1d30
000000000000684d         test       rbp, rbp
0000000000006850         jne        loc_6830

0000000000006852         add        rsp, 0x8
0000000000006856         pop        rbx
0000000000006857         pop        rbp
0000000000006858         ret
                        ; endp
0000000000006859         align      32

                     loc_6860:
0000000000006860         ret                                                    ; CODE XREF=fts_lfree+3
                        ; endp
0000000000006862         align      16                                          ; End of unwind block (FDE at 0xce0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_ring_clear:
0000000000006870         push       rbx                                         ; Begin of unwind block (FDE at 0xce38), CODE XREF=restore_initial_cwd+44, rpl_fts_close+140
0000000000006871         mov        rbx, rdi
0000000000006874         jmp        loc_688c
0000000000006876         align      128

                     loc_6880:
0000000000006880         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+38
0000000000006883         call       i_ring_pop                                  ; i_ring_pop
0000000000006888         test       eax, eax
000000000000688a         jns        loc_68a0

                     loc_688c:
000000000000688c         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+4, fd_ring_clear+55
000000000000688f         call       i_ring_empty                                ; i_ring_empty
0000000000006894         test       al, al
0000000000006896         je         loc_6880

0000000000006898         pop        rbx
0000000000006899         ret
                        ; endp
000000000000689a         align      32

                     loc_68a0:
00000000000068a0         mov        edi, eax                                    ; argument "__fd" for method j_close, CODE XREF=fd_ring_clear+26
00000000000068a2         call       j_close                                     ; close
00000000000068a7         jmp        loc_688c
00000000000068a9         align      16                                          ; End of unwind block (FDE at 0xce38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_A8: int64_t, -168
        ;    var_B8: int64_t, -184


                     filesystem_type:
00000000000068b0         push       r13                                         ; Begin of unwind block (FDE at 0xce54), CODE XREF=leaf_optimization+4, fts_build+708
00000000000068b2         push       r12
00000000000068b4         push       rbp
00000000000068b5         push       rbx
00000000000068b6         sub        rsp, 0x98
00000000000068bd         mov        rbx, qword [rdi+0x50]
00000000000068c1         mov        rax, qword [fs:0x28]
00000000000068ca         mov        qword [rsp+0xb8+var_30], rax
00000000000068d2         xor        eax, eax
00000000000068d4         test       byte [rbx+0x49], 0x2
00000000000068d8         je         loc_6942

00000000000068da         mov        r12, qword [rbx+0x50]
00000000000068de         mov        rbp, rdi
00000000000068e1         mov        r13d, esi
00000000000068e4         test       r12, r12
00000000000068e7         je         loc_6910

                     loc_68e9:
00000000000068e9         mov        rax, qword [rbp+0x78]                       ; CODE XREF=filesystem_type+139
00000000000068ed         mov        rsi, rsp
00000000000068f0         mov        rdi, r12
00000000000068f3         mov        qword [rsp+0xb8+var_B8], rax
00000000000068f7         call       hash_lookup                                 ; hash_lookup
00000000000068fc         test       rax, rax
00000000000068ff         je         loc_693d

0000000000006901         mov        rbx, qword [rax+8]
0000000000006905         jmp        loc_6944
0000000000006907         align      16

                     loc_6910:
0000000000006910         mov        r8, qword [qword_20dfd0]                    ; qword_20dfd0, CODE XREF=filesystem_type+55
0000000000006917         lea        rcx, qword [dev_type_compare]               ; dev_type_compare
000000000000691e         lea        rdx, qword [dev_type_hash]                  ; dev_type_hash
0000000000006925         xor        esi, esi
0000000000006927         mov        edi, 0xd
000000000000692c         call       hash_initialize                             ; hash_initialize
0000000000006931         test       rax, rax
0000000000006934         mov        r12, rax
0000000000006937         mov        qword [rbx+0x50], rax
000000000000693b         jne        loc_68e9

                     loc_693d:
000000000000693d         test       r13d, r13d                                  ; CODE XREF=filesystem_type+79
0000000000006940         jns        loc_6970

                     loc_6942:
0000000000006942         xor        ebx, ebx                                    ; CODE XREF=filesystem_type+40, filesystem_type+207

                     loc_6944:
0000000000006944         mov        rdx, qword [rsp+0xb8+var_30]                ; CODE XREF=filesystem_type+85, filesystem_type+217, filesystem_type+235, filesystem_type+275
000000000000694c         xor        rdx, qword [fs:0x28]
0000000000006955         mov        rax, rbx
0000000000006958         jne        loc_69d2

000000000000695a         add        rsp, 0x98
0000000000006961         pop        rbx
0000000000006962         pop        rbp
0000000000006963         pop        r12
0000000000006965         pop        r13
0000000000006967         ret
                        ; endp
0000000000006968         align      16

                     loc_6970:
0000000000006970         lea        rsi, qword [rsp+0xb8+var_A8]                ; argument "__buf" for method j_fstatfs, CODE XREF=filesystem_type+144
0000000000006975         mov        edi, r13d                                   ; argument "__fildes" for method j_fstatfs
0000000000006978         call       j_fstatfs                                   ; fstatfs
000000000000697d         test       eax, eax
000000000000697f         jne        loc_6942

0000000000006981         test       r12, r12
0000000000006984         mov        rbx, qword [rsp+0xb8+var_A8]
0000000000006989         je         loc_6944

000000000000698b         mov        edi, 0x10                                   ; argument "__size" for method j_malloc
0000000000006990         call       j_malloc                                    ; malloc
0000000000006995         test       rax, rax
0000000000006998         mov        r13, rax
000000000000699b         je         loc_6944

000000000000699d         mov        rax, qword [rbp+0x78]
00000000000069a1         mov        qword [r13+8], rbx
00000000000069a5         mov        rsi, r13
00000000000069a8         mov        rdi, r12
00000000000069ab         mov        qword [r13], rax
00000000000069af         call       hash_insert                                 ; hash_insert
00000000000069b4         test       rax, rax
00000000000069b7         je         loc_69c8

00000000000069b9         cmp        r13, rax
00000000000069bc         jne        loc_69d7

                     loc_69be:
00000000000069be         mov        rbx, qword [rsp+0xb8+var_A8]                ; CODE XREF=filesystem_type+288
00000000000069c3         jmp        loc_6944

                     loc_69c8:
00000000000069c8         mov        rdi, r13                                    ; CODE XREF=filesystem_type+263
00000000000069cb         call       sub_1d30                                    ; sub_1d30
00000000000069d0         jmp        loc_69be

                     loc_69d2:
00000000000069d2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=filesystem_type+168
                        ; endp

                     loc_69d7:
00000000000069d7         call       j_abort                                     ; abort, CODE XREF=filesystem_type+268
                        ; endp
00000000000069dc         align      32                                          ; End of unwind block (FDE at 0xce54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     leaf_optimization:
00000000000069e0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xce90), CODE XREF=fts_build+2231, rpl_fts_read+1797
00000000000069e4         call       filesystem_type                             ; filesystem_type
00000000000069e9         cmp        rax, 0x52654973
00000000000069ef         je         loc_6a40

00000000000069f1         jle        loc_6a20

00000000000069f3         cmp        rax, 0x58465342
00000000000069f9         je         loc_6a40

00000000000069fb         mov        edx, 0xff534d42
0000000000006a00         cmp        rax, rdx
0000000000006a03         je         loc_6a35

0000000000006a05         cmp        rax, 0x5346414f
0000000000006a0b         je         loc_6a35

                     loc_6a0d:
0000000000006a0d         mov        eax, 0x1                                    ; CODE XREF=leaf_optimization+83
0000000000006a12         add        rsp, 0x8
0000000000006a16         ret
                        ; endp
0000000000006a17         align      32

                     loc_6a20:
0000000000006a20         cmp        rax, 0x6969                                 ; CODE XREF=leaf_optimization+17
0000000000006a26         je         loc_6a35

0000000000006a28         cmp        rax, 0x9fa0
0000000000006a2e         je         loc_6a35

0000000000006a30         test       rax, rax
0000000000006a33         jne        loc_6a0d

                     loc_6a35:
0000000000006a35         xor        eax, eax                                    ; CODE XREF=leaf_optimization+35, leaf_optimization+43, leaf_optimization+70, leaf_optimization+78
0000000000006a37         add        rsp, 0x8
0000000000006a3b         ret
                        ; endp
0000000000006a3c         align      64

                     loc_6a40:
0000000000006a40         mov        eax, 0x2                                    ; CODE XREF=leaf_optimization+15, leaf_optimization+25
0000000000006a45         add        rsp, 0x8
0000000000006a49         ret
                        ; endp
0000000000006a4a         align      16                                          ; End of unwind block (FDE at 0xce90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cwd_advance_fd:
0000000000006a50         push       rbp                                         ; Begin of unwind block (FDE at 0xceb4), CODE XREF=restore_initial_cwd+74, fts_safe_changedir+542, rpl_fts_read+1279, rpl_fts_children+290
0000000000006a51         push       rbx
0000000000006a52         mov        ebp, esi
0000000000006a54         mov        rbx, rdi
0000000000006a57         sub        rsp, 0x8
0000000000006a5b         mov        esi, dword [rdi+0x2c]
0000000000006a5e         cmp        esi, ebp
0000000000006a60         jne        loc_6a67

0000000000006a62         cmp        esi, 0xffffff9c
0000000000006a65         jne        loc_6ab1

                     loc_6a67:
0000000000006a67         test       dl, dl                                      ; CODE XREF=cwd_advance_fd+16
0000000000006a69         jne        loc_6a80

0000000000006a6b         test       byte [rbx+0x48], 0x4
0000000000006a6f         jne        loc_6a75

0000000000006a71         test       esi, esi
0000000000006a73         jns        loc_6aa0

                     loc_6a75:
0000000000006a75         mov        dword [rbx+0x2c], ebp                       ; CODE XREF=cwd_advance_fd+31, cwd_advance_fd+59
0000000000006a78         add        rsp, 0x8
0000000000006a7c         pop        rbx
0000000000006a7d         pop        rbp
0000000000006a7e         ret
                        ; endp
0000000000006a7f         align      128

                     loc_6a80:
0000000000006a80         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=cwd_advance_fd+25
0000000000006a84         call       i_ring_push                                 ; i_ring_push
0000000000006a89         test       eax, eax
0000000000006a8b         js         loc_6a75

0000000000006a8d         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000006a8f         call       j_close                                     ; close
0000000000006a94         mov        dword [rbx+0x2c], ebp
0000000000006a97         add        rsp, 0x8
0000000000006a9b         pop        rbx
0000000000006a9c         pop        rbp
0000000000006a9d         ret
                        ; endp
0000000000006a9e         align      32

                     loc_6aa0:
0000000000006aa0         mov        edi, esi                                    ; argument "__fd" for method j_close, CODE XREF=cwd_advance_fd+35
0000000000006aa2         call       j_close                                     ; close
0000000000006aa7         mov        dword [rbx+0x2c], ebp
0000000000006aaa         add        rsp, 0x8
0000000000006aae         pop        rbx
0000000000006aaf         pop        rbp
0000000000006ab0         ret
                        ; endp

                     loc_6ab1:
0000000000006ab1         call       j_abort                                     ; abort, CODE XREF=cwd_advance_fd+21
                        ; endp
0000000000006ab6         align      64                                          ; End of unwind block (FDE at 0xceb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     restore_initial_cwd:
0000000000006ac0         push       rbp                                         ; Begin of unwind block (FDE at 0xcef8), CODE XREF=fts_build+1854, rpl_fts_read+675, rpl_fts_read+1171
0000000000006ac1         push       rbx
0000000000006ac2         mov        rbx, rdi
0000000000006ac5         sub        rsp, 0x8
0000000000006ac9         mov        edx, dword [rdi+0x48]
0000000000006acc         mov        ebp, edx
0000000000006ace         and        ebp, 0x4
0000000000006ad1         jne        loc_6b18

0000000000006ad3         and        dh, 0x2
0000000000006ad6         jne        loc_6b00

0000000000006ad8         mov        edi, dword [rdi+0x28]                       ; argument "__fd" for method j_fchdir
0000000000006adb         xor        ebp, ebp
0000000000006add         call       j_fchdir                                    ; fchdir
0000000000006ae2         test       eax, eax
0000000000006ae4         setne      bpl

                     loc_6ae8:
0000000000006ae8         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=restore_initial_cwd+79, restore_initial_cwd+90
0000000000006aec         call       fd_ring_clear                               ; fd_ring_clear
0000000000006af1         add        rsp, 0x8
0000000000006af5         mov        eax, ebp
0000000000006af7         pop        rbx
0000000000006af8         pop        rbp
0000000000006af9         ret
                        ; endp
0000000000006afa         align      256

                     loc_6b00:
0000000000006b00         mov        edx, 0x1                                    ; CODE XREF=restore_initial_cwd+22
0000000000006b05         mov        esi, 0xffffff9c
0000000000006b0a         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000006b0f         jmp        loc_6ae8
0000000000006b11         align      8

                     loc_6b18:
0000000000006b18         xor        ebp, ebp                                    ; CODE XREF=restore_initial_cwd+17
0000000000006b1a         jmp        loc_6ae8
0000000000006b1c         align      32                                          ; End of unwind block (FDE at 0xcef8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_palloc.isra.2:
0000000000006b20         push       rbx                                         ; Begin of unwind block (FDE at 0xcf24), CODE XREF=fts_build+611, rpl_fts_open+189
0000000000006b21         mov        rcx, qword [rsi]
0000000000006b24         mov        rbx, rdi
0000000000006b27         mov        rdi, qword [rdi]
0000000000006b2a         lea        rax, qword [rcx+rdx+0x100]
0000000000006b32         cmp        rcx, rax
0000000000006b35         ja         loc_6b58

0000000000006b37         mov        qword [rsi], rax
0000000000006b3a         mov        rsi, rax                                    ; argument "__size" for method j_realloc
0000000000006b3d         call       j_realloc                                   ; realloc
0000000000006b42         test       rax, rax
0000000000006b45         je         loc_6b78

0000000000006b47         mov        qword [rbx], rax
0000000000006b4a         mov        eax, 0x1
0000000000006b4f         pop        rbx
0000000000006b50         ret
                        ; endp
0000000000006b51         align      8

                     loc_6b58:
0000000000006b58         call       sub_1d30                                    ; sub_1d30, CODE XREF=fts_palloc.isra.2+21
0000000000006b5d         mov        qword [rbx], 0x0
0000000000006b64         call       j___errno_location                          ; __errno_location
0000000000006b69         mov        dword [rax], 0x24
0000000000006b6f         xor        eax, eax
0000000000006b71         pop        rbx
0000000000006b72         ret
                        ; endp
0000000000006b73         align      8

                     loc_6b78:
0000000000006b78         mov        rdi, qword [rbx]                            ; CODE XREF=fts_palloc.isra.2+37
0000000000006b7b         call       sub_1d30                                    ; sub_1d30
0000000000006b80         mov        qword [rbx], 0x0
0000000000006b87         xor        eax, eax
0000000000006b89         pop        rbx
0000000000006b8a         ret
                        ; endp
0000000000006b8b         align      16                                          ; End of unwind block (FDE at 0xcf24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setup_dir.isra.4:
0000000000006b90         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xcf4c), CODE XREF=rpl_fts_open+613, rpl_fts_read+837
0000000000006b96         push       rbx
0000000000006b97         mov        rbx, rsi
0000000000006b9a         je         loc_6bd0

0000000000006b9c         mov        r8, qword [qword_20dfd0]                    ; qword_20dfd0
0000000000006ba3         lea        rcx, qword [AD_compare]                     ; AD_compare
0000000000006baa         lea        rdx, qword [AD_hash]                        ; AD_hash
0000000000006bb1         xor        esi, esi
0000000000006bb3         mov        edi, 0x1f
0000000000006bb8         call       hash_initialize                             ; hash_initialize
0000000000006bbd         test       rax, rax
0000000000006bc0         mov        qword [rbx], rax
0000000000006bc3         setne      al

                     loc_6bc6:
0000000000006bc6         pop        rbx                                         ; CODE XREF=setup_dir.isra.4+85
0000000000006bc7         ret
                        ; endp
0000000000006bc8         align      16

                     loc_6bd0:
0000000000006bd0         mov        edi, 0x20                                   ; argument "__size" for method j_malloc, CODE XREF=setup_dir.isra.4+10
0000000000006bd5         call       j_malloc                                    ; malloc
0000000000006bda         mov        rdi, rax
0000000000006bdd         mov        qword [rbx], rax
0000000000006be0         xor        eax, eax
0000000000006be2         test       rdi, rdi
0000000000006be5         je         loc_6bc6

0000000000006be7         call       cycle_check_init                            ; cycle_check_init
0000000000006bec         mov        eax, 0x1
0000000000006bf1         pop        rbx
0000000000006bf2         ret
                        ; endp
0000000000006bf3         align      1024                                        ; End of unwind block (FDE at 0xcf4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     diropen.isra.6:
0000000000006c00         mov        rax, rdx                                    ; Begin of unwind block (FDE at 0xcf6c), CODE XREF=fts_safe_changedir+141, rpl_fts_open+647, rpl_fts_read+1752, rpl_fts_read+1832, rpl_fts_children+202
0000000000006c03         mov        edx, esi
0000000000006c05         shl        edx, 0xd
0000000000006c08         and        edx, 0x20000
0000000000006c0e         or         edx, 0x90900
0000000000006c14         and        esi, 0x200
0000000000006c1a         jne        loc_6c30

0000000000006c1c         mov        rdi, rax
0000000000006c1f         mov        esi, edx
0000000000006c21         xor        eax, eax
0000000000006c23         jmp        open_safer                                  ; open_safer
0000000000006c28         align      16

                     loc_6c30:
0000000000006c30         mov        rsi, rax                                    ; CODE XREF=diropen.isra.6+26
0000000000006c33         xor        eax, eax
0000000000006c35         jmp        openat_safer                                ; openat_safer
0000000000006c3a         align      64                                          ; End of unwind block (FDE at 0xcf6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217


                     fts_safe_changedir:
0000000000006c40         push       r15                                         ; Begin of unwind block (FDE at 0xcf80), CODE XREF=fts_build+2169, fts_build+2194, rpl_fts_read+542, rpl_fts_read+1123
0000000000006c42         push       r14
0000000000006c44         mov        r14, rsi
0000000000006c47         push       r13
0000000000006c49         push       r12
0000000000006c4b         mov        r13, rdi
0000000000006c4e         push       rbp
0000000000006c4f         push       rbx
0000000000006c50         mov        r12d, edx
0000000000006c53         mov        rbp, rcx
0000000000006c56         sub        rsp, 0xb8
0000000000006c5d         mov        ebx, dword [rdi+0x48]
0000000000006c60         mov        rax, qword [fs:0x28]
0000000000006c69         mov        qword [rsp+0xe8+var_40], rax
0000000000006c71         xor        eax, eax
0000000000006c73         mov        r9d, ebx
0000000000006c76         and        r9d, 0x4
0000000000006c7a         test       rcx, rcx
0000000000006c7d         je         loc_6d30

0000000000006c83         lea        rdx, qword [__PRETTY_FUNCTION__.4162+9]     ; 0xbbc9
0000000000006c8a         mov        ecx, 0x3
0000000000006c8f         mov        rsi, rbp
0000000000006c92         mov        rdi, rdx
0000000000006c95         rep  cmpsb byte [rsi], byte [rdi]
0000000000006c97         seta       al
0000000000006c9a         sbb        al, 0x0
0000000000006c9c         test       al, al
0000000000006c9e         jne        loc_6d30

0000000000006ca4         test       r9d, r9d
0000000000006ca7         jne        loc_6d35

0000000000006cad         test       r12d, r12d
0000000000006cb0         jns        loc_6e9a

0000000000006cb6         test       bh, 0x2
0000000000006cb9         jne        loc_6e00

                     loc_6cbf:
0000000000006cbf         mov        byte [rsp+0xe8+var_D9], 0x1                 ; CODE XREF=fts_safe_changedir+489

                     loc_6cc4:
0000000000006cc4         mov        edi, dword [r13+0x2c]                       ; CODE XREF=fts_safe_changedir+466, fts_safe_changedir+629
0000000000006cc8         mov        rdx, rbp
0000000000006ccb         mov        esi, ebx
0000000000006ccd         call       diropen.isra.6                              ; diropen.isra.6
0000000000006cd2         test       eax, eax
0000000000006cd4         mov        r15d, eax
0000000000006cd7         js         loc_6e8b

0000000000006cdd         mov        ebx, dword [r13+0x48]
0000000000006ce1         test       bl, 0x2
0000000000006ce4         je         loc_6d8a

0000000000006cea         nop        word [rax+rax]

                     loc_6cf0:
0000000000006cf0         lea        rdx, qword [rsp+0xe8+var_D8]                ; argument "__stat_buf" for method j___fxstat, CODE XREF=fts_safe_changedir+324, fts_safe_changedir+362, fts_safe_changedir+512, fts_safe_changedir+619
0000000000006cf5         mov        esi, r15d                                   ; argument "__fildes" for method j___fxstat
0000000000006cf8         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000006cfd         call       j___fxstat                                  ; __fxstat
0000000000006d02         test       eax, eax
0000000000006d04         je         loc_6dd0

                     loc_6d0a:
0000000000006d0a         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+426

                     loc_6d0f:
0000000000006d0f         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+387
0000000000006d12         jns        loc_6d45

0000000000006d14         call       j___errno_location                          ; __errno_location
0000000000006d19         mov        r12d, dword [rax]
0000000000006d1c         mov        rbp, rax
0000000000006d1f         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000006d22         call       j_close                                     ; close
0000000000006d27         mov        dword [rbp], r12d
0000000000006d2b         jmp        loc_6d45
0000000000006d2d         align      16

                     loc_6d30:
0000000000006d30         test       r9d, r9d                                    ; CODE XREF=fts_safe_changedir+61, fts_safe_changedir+94
0000000000006d33         je         loc_6d70

                     loc_6d35:
0000000000006d35         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+103
0000000000006d38         je         loc_6d43

0000000000006d3a         test       r12d, r12d
0000000000006d3d         jns        loc_6df0

                     loc_6d43:
0000000000006d43         xor        ebx, ebx                                    ; CODE XREF=fts_safe_changedir+248

                     loc_6d45:
0000000000006d45         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=fts_safe_changedir+210, fts_safe_changedir+235, fts_safe_changedir+442, fts_safe_changedir+547, fts_safe_changedir+592
0000000000006d4d         xor        rcx, qword [fs:0x28]
0000000000006d56         mov        eax, ebx
0000000000006d58         jne        loc_6e95

0000000000006d5e         add        rsp, 0xb8
0000000000006d65         pop        rbx
0000000000006d66         pop        rbp
0000000000006d67         pop        r12
0000000000006d69         pop        r13
0000000000006d6b         pop        r14
0000000000006d6d         pop        r15
0000000000006d6f         ret
                        ; endp

                     loc_6d70:
0000000000006d70         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+243
0000000000006d73         js         loc_6eb0

0000000000006d79         test       bl, 0x2
0000000000006d7c         mov        r15d, r12d
0000000000006d7f         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006d84         jne        loc_6cf0

                     loc_6d8a:
0000000000006d8a         test       rbp, rbp                                    ; CODE XREF=fts_safe_changedir+164
0000000000006d8d         je         loc_6db0

0000000000006d8f         lea        rdx, qword [__PRETTY_FUNCTION__.4162+9]     ; 0xbbc9

                     loc_6d96:
0000000000006d96         mov        ecx, 0x3                                    ; CODE XREF=fts_safe_changedir+613
0000000000006d9b         mov        rsi, rbp
0000000000006d9e         mov        rdi, rdx
0000000000006da1         rep  cmpsb byte [rsi], byte [rdi]
0000000000006da3         seta       al
0000000000006da6         sbb        al, 0x0
0000000000006da8         test       al, al
0000000000006daa         je         loc_6cf0

                     loc_6db0:
0000000000006db0         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+333, fts_safe_changedir+506, fts_safe_changedir+582
0000000000006db3         jne        loc_6e48

0000000000006db9         mov        edi, r15d                                   ; argument "__fd" for method j_fchdir
0000000000006dbc         call       j_fchdir                                    ; fchdir
0000000000006dc1         mov        ebx, eax
0000000000006dc3         jmp        loc_6d0f
0000000000006dc8         align      16

                     loc_6dd0:
0000000000006dd0         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=fts_safe_changedir+196
0000000000006dd5         cmp        qword [r14+0x78], rax
0000000000006dd9         je         loc_6e70

                     loc_6ddf:
0000000000006ddf         call       j___errno_location                          ; __errno_location, CODE XREF=fts_safe_changedir+572
0000000000006de4         mov        dword [rax], 0x2
0000000000006dea         jmp        loc_6d0a
0000000000006def         align      16

                     loc_6df0:
0000000000006df0         mov        edi, r12d                                   ; argument "__fd" for method j_close, CODE XREF=fts_safe_changedir+253
0000000000006df3         xor        ebx, ebx
0000000000006df5         call       j_close                                     ; close
0000000000006dfa         jmp        loc_6d45
0000000000006dff         align      512

                     loc_6e00:
0000000000006e00         lea        r15, qword [r13+0x60]                       ; CODE XREF=fts_safe_changedir+121
0000000000006e04         mov        rdi, r15
0000000000006e07         call       i_ring_empty                                ; i_ring_empty
0000000000006e0c         test       al, al
0000000000006e0e         mov        byte [rsp+0xe8+var_D9], al
0000000000006e12         jne        loc_6cc4

0000000000006e18         mov        rdi, r15
0000000000006e1b         call       i_ring_pop                                  ; i_ring_pop
0000000000006e20         test       eax, eax
0000000000006e22         mov        r15d, eax
0000000000006e25         mov        ebx, dword [r13+0x48]
0000000000006e29         js         loc_6cbf

0000000000006e2f         test       bl, 0x2
0000000000006e32         mov        r12d, eax
0000000000006e35         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006e3a         je         loc_6db0

0000000000006e40         jmp        loc_6cf0
0000000000006e45         align      8

                     loc_6e48:
0000000000006e48         movzx      r14d, byte [rsp+0xe8+var_D9]                ; CODE XREF=fts_safe_changedir+371
0000000000006e4e         mov        esi, r15d
0000000000006e51         mov        rdi, r13
0000000000006e54         xor        ebx, ebx
0000000000006e56         xor        r14d, 0x1
0000000000006e5a         movzx      edx, r14b
0000000000006e5e         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000006e63         jmp        loc_6d45
0000000000006e68         align      16

                     loc_6e70:
0000000000006e70         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=fts_safe_changedir+409
0000000000006e75         cmp        qword [r14+0x80], rax
0000000000006e7c         jne        loc_6ddf

0000000000006e82         mov        ebx, dword [r13+0x48]
0000000000006e86         jmp        loc_6db0

                     loc_6e8b:
0000000000006e8b         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+151
0000000000006e90         jmp        loc_6d45

                     loc_6e95:
0000000000006e95         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_safe_changedir+280
                        ; endp

                     loc_6e9a:
0000000000006e9a         test       bl, 0x2                                     ; CODE XREF=fts_safe_changedir+112
0000000000006e9d         mov        r15d, r12d
0000000000006ea0         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006ea5         je         loc_6d96

0000000000006eab         jmp        loc_6cf0

                     loc_6eb0:
0000000000006eb0         mov        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=fts_safe_changedir+307
0000000000006eb5         jmp        loc_6cc4
0000000000006eba         align      64                                          ; End of unwind block (FDE at 0xcf80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     enter_dir.isra.10:
0000000000006ec0         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xcfd0), CODE XREF=fts_build+1558, rpl_fts_read+899
0000000000006ec6         push       r12
0000000000006ec8         mov        r12, rsi
0000000000006ecb         push       rbp
0000000000006ecc         push       rbx
0000000000006ecd         mov        rbx, rdx
0000000000006ed0         je         loc_6f40

0000000000006ed2         mov        edi, 0x18                                   ; argument "__size" for method j_malloc
0000000000006ed7         call       j_malloc                                    ; malloc
0000000000006edc         test       rax, rax
0000000000006edf         mov        rbp, rax
0000000000006ee2         je         loc_6f68

0000000000006ee8         mov        rax, qword [rbx+0x78]
0000000000006eec         mov        rdi, qword [r12]
0000000000006ef0         mov        rsi, rbp
0000000000006ef3         mov        qword [rbp+0x10], rbx
0000000000006ef7         mov        qword [rbp], rax
0000000000006efb         mov        rax, qword [rbx+0x80]
0000000000006f02         mov        qword [rbp+8], rax
0000000000006f06         call       hash_insert                                 ; hash_insert
0000000000006f0b         cmp        rbp, rax
0000000000006f0e         mov        r12, rax
0000000000006f11         je         loc_6f31

0000000000006f13         mov        rdi, rbp
0000000000006f16         call       sub_1d30                                    ; sub_1d30
0000000000006f1b         test       r12, r12
0000000000006f1e         je         loc_6f68

0000000000006f20         mov        rax, qword [r12+0x10]
0000000000006f25         mov        ecx, 0x2
0000000000006f2a         mov        word [rbx+0x70], cx
0000000000006f2e         mov        qword [rbx], rax

                     loc_6f31:
0000000000006f31         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+81, enter_dir.isra.10+143
0000000000006f32         mov        eax, 0x1
0000000000006f37         pop        rbp
0000000000006f38         pop        r12
0000000000006f3a         ret
                        ; endp
0000000000006f3b         align      64

                     loc_6f40:
0000000000006f40         mov        rdi, qword [r12]                            ; CODE XREF=enter_dir.isra.10+16
0000000000006f44         lea        rsi, qword [rdx+0x78]
0000000000006f48         call       cycle_check                                 ; cycle_check
0000000000006f4d         test       al, al
0000000000006f4f         je         loc_6f31

0000000000006f51         mov        edx, 0x2
0000000000006f56         mov        qword [rbx], rbx
0000000000006f59         mov        word [rbx+0x70], dx
0000000000006f5d         pop        rbx
0000000000006f5e         pop        rbp
0000000000006f5f         pop        r12
0000000000006f61         ret
                        ; endp
0000000000006f62         align      8

                     loc_6f68:
0000000000006f68         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+34, enter_dir.isra.10+94
0000000000006f69         xor        eax, eax
0000000000006f6b         pop        rbp
0000000000006f6c         pop        r12
0000000000006f6e         ret
                        ; endp
0000000000006f6f         align      16                                          ; End of unwind block (FDE at 0xcfd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     leave_dir.isra.12:
0000000000006f70         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0xd014), CODE XREF=fts_build+1530, rpl_fts_read+405, rpl_fts_read+1209, rpl_fts_read+1368
0000000000006f74         mov        rcx, rsi
0000000000006f77         mov        rax, qword [fs:0x28]
0000000000006f80         mov        qword [rsp+0x28+var_10], rax
0000000000006f85         xor        eax, eax
0000000000006f87         and        edi, 0x102
0000000000006f8d         jne        loc_6fd0

0000000000006f8f         mov        rax, qword [rdx+8]
0000000000006f93         test       rax, rax
0000000000006f96         je         loc_6fb5

0000000000006f98         cmp        qword [rax+0x58], 0x0
0000000000006f9d         js         loc_6fb5

0000000000006f9f         mov        rcx, qword [rsi]
0000000000006fa2         cmp        qword [rcx+0x10], 0x0
0000000000006fa7         je         loc_7023

0000000000006fa9         mov        rsi, qword [rdx+0x80]
0000000000006fb0         cmp        qword [rcx], rsi
0000000000006fb3         je         loc_7000

                     loc_6fb5:
0000000000006fb5         mov        rax, qword [rsp+0x28+var_10]                ; CODE XREF=leave_dir.isra.12+38, leave_dir.isra.12+45, leave_dir.isra.12+140, leave_dir.isra.12+152, leave_dir.isra.12+172
0000000000006fba         xor        rax, qword [fs:0x28]
0000000000006fc3         jne        loc_701e

0000000000006fc5         add        rsp, 0x28
0000000000006fc9         ret
                        ; endp
0000000000006fca         align      16

                     loc_6fd0:
0000000000006fd0         mov        rax, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+29
0000000000006fd4         mov        rdi, qword [rcx]
0000000000006fd7         mov        rsi, rsp
0000000000006fda         mov        qword [rsp+0x28+var_28], rax
0000000000006fde         mov        rax, qword [rdx+0x80]
0000000000006fe5         mov        qword [rsp+0x28+var_20], rax
0000000000006fea         call       hash_delete                                 ; hash_delete
0000000000006fef         test       rax, rax
0000000000006ff2         je         loc_7023

0000000000006ff4         mov        rdi, rax
0000000000006ff7         call       sub_1d30                                    ; sub_1d30
0000000000006ffc         jmp        loc_6fb5
0000000000006ffe         align      4096

                     loc_7000:
0000000000007000         mov        rsi, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+67
0000000000007004         cmp        qword [rcx+8], rsi
0000000000007008         jne        loc_6fb5

000000000000700a         mov        rdx, qword [rax+0x78]
000000000000700e         mov        rax, qword [rax+0x80]
0000000000007015         mov        qword [rcx+8], rdx
0000000000007019         mov        qword [rcx], rax
000000000000701c         jmp        loc_6fb5

                     loc_701e:
000000000000701e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=leave_dir.isra.12+83
                        ; endp

                     loc_7023:
0000000000007023         call       j_abort                                     ; abort, CODE XREF=leave_dir.isra.12+55, leave_dir.isra.12+130
                        ; endp
0000000000007028         align      16                                          ; End of unwind block (FDE at 0xd014)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_49: int8_t, -73
        ;    var_4A: int8_t, -74
        ;    var_4B: int8_t, -75
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     fts_build:
0000000000007030         push       r15                                         ; Begin of unwind block (FDE at 0xd030), CODE XREF=rpl_fts_read+1056, rpl_fts_read+1561, rpl_fts_children+139, rpl_fts_children+219
0000000000007032         push       r14
0000000000007034         mov        r15, rdi
0000000000007037         push       r13
0000000000007039         push       r12
000000000000703b         push       rbp
000000000000703c         push       rbx
000000000000703d         sub        rsp, 0x78
0000000000007041         mov        rbp, qword [rdi]
0000000000007044         mov        rax, qword [fs:0x28]
000000000000704d         mov        qword [rsp+0xa8+var_40], rax
0000000000007052         xor        eax, eax
0000000000007054         mov        dword [rsp+0xa8+var_50], esi
0000000000007058         mov        rax, qword [rbp+0x18]
000000000000705c         test       rax, rax
000000000000705f         mov        qword [rsp+0xa8+var_58], rax
0000000000007064         je         loc_74a0

000000000000706a         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
000000000000706d         call       j_dirfd                                     ; dirfd
0000000000007072         test       eax, eax
0000000000007074         mov        dword [rsp+0xa8+var_44], eax
0000000000007078         js         loc_75d0

000000000000707e         cmp        qword [r15+0x40], 0x0
0000000000007083         je         loc_7858

0000000000007089         mov        qword [rsp+0xa8+var_70], 0xffffffffffffffff

                     loc_7092:
0000000000007092         mov        edi, dword [r15+0x48]                       ; CODE XREF=fts_build+2207
0000000000007096         mov        byte [rsp+0xa8+var_49], 0x1

                     loc_709b:
000000000000709b         mov        rcx, qword [rbp+0x48]                       ; CODE XREF=fts_build+1405, fts_build+2106, fts_build+2121
000000000000709f         mov        rdx, qword [rbp+0x38]
00000000000070a3         mov        qword [rsp+0xa8+var_68], 0x0
00000000000070ac         cmp        byte [rdx+rcx-1], 0x2f
00000000000070b1         lea        rax, qword [rcx-1]
00000000000070b5         cmovne     rax, rcx
00000000000070b9         and        edi, 0x4
00000000000070bc         mov        qword [rsp+0xa8+var_60], rax
00000000000070c1         je         loc_70d3

00000000000070c3         add        rax, qword [r15+0x20]
00000000000070c7         lea        rbx, qword [rax+1]
00000000000070cb         mov        byte [rax], 0x2f
00000000000070ce         mov        qword [rsp+0xa8+var_68], rbx

                     loc_70d3:
00000000000070d3         mov        rax, qword [rsp+0xa8+var_60]                ; CODE XREF=fts_build+145
00000000000070d8         mov        rbx, qword [r15+0x30]
00000000000070dc         mov        byte [rsp+0xa8+var_4A], 0x0
00000000000070e1         mov        byte [rsp+0xa8+var_4B], 0x0
00000000000070e6         mov        qword [rsp+0xa8+var_A0], 0x0
00000000000070ef         mov        qword [rsp+0xa8+var_98], 0x0
00000000000070f8         add        rax, 0x1
00000000000070fc         mov        qword [rsp+0xa8+var_88], rbp
0000000000007101         sub        rbx, rax
0000000000007104         mov        qword [rsp+0xa8+var_90], rax
0000000000007109         mov        rax, qword [rbp+0x58]
000000000000710d         mov        qword [rsp+0xa8+var_80], rbx
0000000000007112         xor        ebx, ebx
0000000000007114         add        rax, 0x1
0000000000007118         mov        qword [rsp+0xa8+var_78], rax
000000000000711d         jmp        loc_71ff
0000000000007122         align      8

                     loc_7128:
0000000000007128         mov        r9, r14                                     ; CODE XREF=fts_build+578, fts_build+678
000000000000712b         add        r9, qword [rsp+0xa8+var_90]
0000000000007130         jb         loc_7990

0000000000007136         mov        rax, qword [rsp+0xa8+var_78]
000000000000713b         lea        rsi, qword [r13+0x108]
0000000000007142         mov        qword [r13+0x58], rax
0000000000007146         mov        rax, qword [r15]
0000000000007149         mov        qword [r13+0x48], r9
000000000000714d         mov        qword [r13+8], rax
0000000000007151         mov        rax, qword [rbp]
0000000000007155         mov        qword [r13+0x80], rax
000000000000715c         mov        eax, dword [r15+0x48]
0000000000007160         test       al, 0x4
0000000000007162         jne        loc_73d0

0000000000007168         mov        qword [r13+0x30], rsi

                     loc_716c:
000000000000716c         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+958
0000000000007171         je         loc_717c

0000000000007173         test       ah, 0x4
0000000000007176         je         loc_7478

                     loc_717c:
000000000000717c         movzx      edx, byte [rbp+0x12]                        ; CODE XREF=fts_build+321
0000000000007180         and        eax, 0x18
0000000000007183         mov        esi, edx
0000000000007185         sub        edx, 0x1
0000000000007188         cmp        eax, 0x18
000000000000718b         je         loc_7440

                     loc_7191:
0000000000007191         mov        ecx, 0xb                                    ; CODE XREF=fts_build+1046
0000000000007196         cmp        edx, 0xb
0000000000007199         mov        word [r13+0x70], cx
000000000000719e         ja         loc_7408

00000000000071a4         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53
00000000000071ab         mov        eax, dword [rax+rdx*4]
00000000000071ae         mov        dword [r13+0x90], eax
00000000000071b5         mov        eax, 0x2

                     loc_71ba:
00000000000071ba         mov        qword [r13+0xa8], rax                       ; CODE XREF=fts_build+1000, fts_build+1087, fts_build+2508

                     loc_71c1:
00000000000071c1         cmp        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+1114
00000000000071c7         mov        qword [r13+0x10], 0x0
00000000000071cf         je         loc_73f8

00000000000071d5         mov        rax, qword [rsp+0xa8+var_A0]
00000000000071da         mov        qword [rax+0x10], r13

                     loc_71de:
00000000000071de         cmp        rbx, 0x2710                                 ; CODE XREF=fts_build+973
00000000000071e5         je         loc_72e0

                     loc_71eb:
00000000000071eb         add        rbx, 0x1                                    ; CODE XREF=fts_build+693, fts_build+1605
00000000000071ef         cmp        rbx, qword [rsp+0xa8+var_70]
00000000000071f4         jae        loc_7338

                     loc_71fa:
00000000000071fa         mov        qword [rsp+0xa8+var_A0], r13                ; CODE XREF=fts_build+765, fts_build+1030

                     loc_71ff:
00000000000071ff         mov        rax, qword [rsp+0xa8+var_88]                ; CODE XREF=fts_build+237
0000000000007204         mov        r13, qword [rax+0x18]
0000000000007208         test       r13, r13
000000000000720b         je         loc_76d8

0000000000007211         call       j___errno_location                          ; __errno_location
0000000000007216         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
0000000000007219         mov        dword [rax], 0x0
000000000000721f         mov        r12, rax
0000000000007222         call       j_readdir                                   ; readdir
0000000000007227         test       rax, rax
000000000000722a         mov        rbp, rax
000000000000722d         je         loc_77b0

0000000000007233         test       byte [r15+0x48], 0x20
0000000000007238         jne        loc_7244

000000000000723a         cmp        byte [rax+0x13], 0x2e
000000000000723e         je         loc_7420

                     loc_7244:
0000000000007244         lea        r13, qword [rbp+0x13]                       ; CODE XREF=fts_build+520, fts_build+1019
0000000000007248         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000724b         call       j_strlen                                    ; strlen
0000000000007250         mov        rsi, r13
0000000000007253         mov        rdx, rax
0000000000007256         mov        rdi, r15
0000000000007259         mov        r14, rax
000000000000725c         call       fts_alloc                                   ; fts_alloc
0000000000007261         test       rax, rax
0000000000007264         mov        r13, rax
0000000000007267         je         loc_7680

000000000000726d         cmp        qword [rsp+0xa8+var_80], r14
0000000000007272         ja         loc_7128

0000000000007278         mov        rax, qword [r15+0x20]
000000000000727c         lea        rsi, qword [r15+0x30]
0000000000007280         lea        rdi, qword [r15+0x20]
0000000000007284         mov        qword [rsp+0xa8+var_80], rax
0000000000007289         mov        rax, qword [rsp+0xa8+var_60]
000000000000728e         lea        rdx, qword [rax+r14+2]
0000000000007293         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
0000000000007298         test       al, al
000000000000729a         je         loc_7680

00000000000072a0         mov        rdx, qword [r15+0x20]
00000000000072a4         cmp        rdx, qword [rsp+0xa8+var_80]
00000000000072a9         je         loc_7490

00000000000072af         add        rdx, qword [rsp+0xa8+var_90]
00000000000072b4         test       byte [r15+0x48], 0x4
00000000000072b9         cmove      rdx, qword [rsp+0xa8+var_68]
00000000000072bf         mov        qword [rsp+0xa8+var_68], rdx

                     loc_72c4:
00000000000072c4         mov        rcx, qword [r15+0x30]                       ; CODE XREF=fts_build+1125
00000000000072c8         sub        rcx, qword [rsp+0xa8+var_90]
00000000000072cd         mov        byte [rsp+0xa8+var_4B], al
00000000000072d1         mov        qword [rsp+0xa8+var_80], rcx
00000000000072d6         jmp        loc_7128
00000000000072db         align      32

                     loc_72e0:
00000000000072e0         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+437
00000000000072e5         jne        loc_71eb

00000000000072eb         mov        esi, dword [rsp+0xa8+var_44]
00000000000072ef         mov        rdi, qword [rsp+0xa8+var_88]
00000000000072f4         call       filesystem_type                             ; filesystem_type
00000000000072f9         cmp        rax, 0x1021994
00000000000072ff         je         loc_7670

0000000000007305         mov        ecx, 0xff534d42
000000000000730a         cmp        rax, rcx
000000000000730d         je         loc_7670

0000000000007313         cmp        rax, 0x6969
0000000000007319         je         loc_7670

000000000000731f         add        rbx, 0x1
0000000000007323         cmp        rbx, qword [rsp+0xa8+var_70]
0000000000007328         mov        byte [rsp+0xa8+var_4A], 0x1
000000000000732d         jb         loc_71fa

0000000000007333         nop        dword [rax+rax]

                     loc_7338:
0000000000007338         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+452
000000000000733d         mov        rbp, qword [rsp+0xa8+var_88]
0000000000007342         je         loc_76e6

                     loc_7348:
0000000000007348         mov        rax, qword [r15+8]                          ; CODE XREF=fts_build+1712
000000000000734c         mov        rcx, qword [r15+0x20]
0000000000007350         test       rax, rax
0000000000007353         je         loc_7380

0000000000007355         nop        dword [rax]

                     loc_7358:
0000000000007358         mov        rdx, qword [rax+0x30]                       ; CODE XREF=fts_build+846
000000000000735c         lea        rsi, qword [rax+0x108]
0000000000007363         cmp        rdx, rsi
0000000000007366         je         loc_7373

0000000000007368         sub        rdx, qword [rax+0x38]
000000000000736c         add        rdx, rcx
000000000000736f         mov        qword [rax+0x30], rdx

                     loc_7373:
0000000000007373         mov        qword [rax+0x38], rcx                       ; CODE XREF=fts_build+822
0000000000007377         mov        rax, qword [rax+0x10]
000000000000737b         test       rax, rax
000000000000737e         jne        loc_7358

                     loc_7380:
0000000000007380         mov        rax, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+803
0000000000007385         jmp        loc_7393
0000000000007387         align      16

                     loc_7390:
0000000000007390         mov        rax, rdx                                    ; CODE XREF=fts_build+916, fts_build+922

                     loc_7393:
0000000000007393         cmp        qword [rax+0x58], 0x0                       ; CODE XREF=fts_build+853
0000000000007398         js         loc_76e6

000000000000739e         mov        rdx, qword [rax+0x30]
00000000000073a2         lea        rsi, qword [rax+0x108]
00000000000073a9         cmp        rdx, rsi
00000000000073ac         je         loc_73b9

00000000000073ae         sub        rdx, qword [rax+0x38]
00000000000073b2         add        rdx, rcx
00000000000073b5         mov        qword [rax+0x30], rdx

                     loc_73b9:
00000000000073b9         mov        rdx, qword [rax+0x10]                       ; CODE XREF=fts_build+892
00000000000073bd         mov        qword [rax+0x38], rcx
00000000000073c1         test       rdx, rdx
00000000000073c4         jne        loc_7390

00000000000073c6         mov        rdx, qword [rax+8]
00000000000073ca         jmp        loc_7390
00000000000073cc         align      16

                     loc_73d0:
00000000000073d0         mov        rax, qword [r13+0x38]                       ; CODE XREF=fts_build+306
00000000000073d4         mov        rdi, qword [rsp+0xa8+var_68]                ; argument "__dest" for method j_memmove
00000000000073d9         mov        qword [r13+0x30], rax
00000000000073dd         mov        rax, qword [r13+0x60]
00000000000073e1         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
00000000000073e5         call       j_memmove                                   ; memmove
00000000000073ea         mov        eax, dword [r15+0x48]
00000000000073ee         jmp        loc_716c
00000000000073f3         align      8

                     loc_73f8:
00000000000073f8         mov        qword [rsp+0xa8+var_98], r13                ; CODE XREF=fts_build+415
00000000000073fd         jmp        loc_71de
0000000000007402         align      8

                     loc_7408:
0000000000007408         mov        dword [r13+0x90], 0x0                       ; CODE XREF=fts_build+366
0000000000007413         mov        eax, 0x2
0000000000007418         jmp        loc_71ba
000000000000741d         align      32

                     loc_7420:
0000000000007420         cmp        byte [rax+0x14], 0x0                        ; CODE XREF=fts_build+526
0000000000007424         je         loc_7431

0000000000007426         cmp        word [rax+0x14], 0x2e
000000000000742b         jne        loc_7244

                     loc_7431:
0000000000007431         mov        r13, qword [rsp+0xa8+var_A0]                ; CODE XREF=fts_build+1012
0000000000007436         jmp        loc_71fa
000000000000743b         align      64

                     loc_7440:
0000000000007440         and        esi, 0xfb                                   ; CODE XREF=fts_build+347
0000000000007446         je         loc_7191

000000000000744c         mov        eax, 0xb
0000000000007451         cmp        edx, 0xb
0000000000007454         mov        word [r13+0x70], ax
0000000000007459         jbe        loc_79e6

000000000000745f         mov        dword [r13+0x90], 0x0
000000000000746a         mov        eax, 0x1
000000000000746f         jmp        loc_71ba
0000000000007474         align      8

                     loc_7478:
0000000000007478         xor        edx, edx                                    ; CODE XREF=fts_build+326
000000000000747a         mov        rsi, r13
000000000000747d         mov        rdi, r15
0000000000007480         call       fts_stat                                    ; fts_stat
0000000000007485         mov        word [r13+0x70], ax
000000000000748a         jmp        loc_71c1
000000000000748f         align      16

                     loc_7490:
0000000000007490         movzx      eax, byte [rsp+0xa8+var_4B]                 ; CODE XREF=fts_build+633
0000000000007495         jmp        loc_72c4
000000000000749a         align      32

                     loc_74a0:
00000000000074a0         mov        eax, dword [rdi+0x48]                       ; CODE XREF=fts_build+52
00000000000074a3         mov        edx, eax
00000000000074a5         and        edx, 0x10
00000000000074a8         je         loc_74b7

00000000000074aa         test       al, 0x1
00000000000074ac         mov        edx, 0x20000
00000000000074b1         jne        loc_75b8

                     loc_74b7:
00000000000074b7         and        eax, 0x204                                  ; CODE XREF=fts_build+1144, fts_build+1429
00000000000074bc         mov        rsi, qword [rbp+0x30]
00000000000074c0         mov        edi, 0xffffff9c
00000000000074c5         cmp        eax, 0x200
00000000000074ca         jne        loc_74d0

00000000000074cc         mov        edi, dword [r15+0x2c]

                     loc_74d0:
00000000000074d0         lea        rcx, qword [rsp+0xa8+var_44]                ; CODE XREF=fts_build+1178
00000000000074d5         call       opendirat                                   ; opendirat
00000000000074da         test       rax, rax
00000000000074dd         mov        qword [rbp+0x18], rax
00000000000074e1         je         loc_7800

00000000000074e7         cmp        word [rbp+0x70], 0xb
00000000000074ec         je         loc_7880

00000000000074f2         mov        edi, dword [r15+0x48]
00000000000074f6         test       edi, 0x100
00000000000074fc         jne        loc_7620

                     loc_7502:
0000000000007502         cmp        qword [r15+0x40], 0x1                       ; CODE XREF=fts_build+1565, fts_build+2145
0000000000007507         sbb        rax, rax
000000000000750a         and        eax, 0x186a1
000000000000750f         sub        rax, 0x1
0000000000007513         cmp        dword [rsp+0xa8+var_50], 0x2
0000000000007518         mov        qword [rsp+0xa8+var_70], rax
000000000000751d         je         loc_7870

0000000000007523         mov        edx, dword [r15+0x48]
0000000000007527         mov        eax, dword [rsp+0xa8+var_44]
000000000000752b         and        edx, 0x38
000000000000752e         cmp        edx, 0x18
0000000000007531         je         loc_78d4

                     loc_7537:
0000000000007537         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2220, fts_build+2244
000000000000753c         mov        r12d, 0x1
0000000000007542         sete       bl

                     loc_7545:
0000000000007545         test       byte [r15+0x49], 0x2                        ; CODE XREF=fts_build+2389
000000000000754a         jne        loc_792c

                     loc_7550:
0000000000007550         test       eax, eax                                    ; CODE XREF=fts_build+2323
0000000000007552         jns        loc_78b8

                     loc_7558:
0000000000007558         test       bl, bl                                      ; CODE XREF=fts_build+2201
000000000000755a         je         loc_756b

000000000000755c         test       r12b, r12b
000000000000755f         je         loc_756b

0000000000007561         call       j___errno_location                          ; __errno_location
0000000000007566         mov        eax, dword [rax]
0000000000007568         mov        dword [rbp+0x40], eax

                     loc_756b:
000000000000756b         or         word [rbp+0x72], 0x1                        ; CODE XREF=fts_build+1322, fts_build+1327
0000000000007570         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
0000000000007574         call       j_closedir                                  ; closedir
0000000000007579         mov        edi, dword [r15+0x48]
000000000000757d         mov        qword [rbp+0x18], 0x0
0000000000007585         test       edi, 0x200
000000000000758b         je         loc_75a0

000000000000758d         mov        eax, dword [rsp+0xa8+var_44]
0000000000007591         test       eax, eax
0000000000007593         js         loc_75a0

0000000000007595         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000007597         call       j_close                                     ; close
000000000000759c         mov        edi, dword [r15+0x48]

                     loc_75a0:
00000000000075a0         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=fts_build+1371, fts_build+1379
00000000000075a8         mov        byte [rsp+0xa8+var_49], 0x0
00000000000075ad         jmp        loc_709b
00000000000075b2         align      8

                     loc_75b8:
00000000000075b8         xor        edx, edx                                    ; CODE XREF=fts_build+1153
00000000000075ba         cmp        qword [rbp+0x58], 0x0
00000000000075bf         setne      dl
00000000000075c2         shl        edx, 0x11
00000000000075c5         jmp        loc_74b7
00000000000075ca         align      16

                     loc_75d0:
00000000000075d0         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir, CODE XREF=fts_build+72
00000000000075d4         call       j_closedir                                  ; closedir
00000000000075d9         cmp        dword [rsp+0xa8+var_50], 0x3
00000000000075de         mov        qword [rbp+0x18], 0x0
00000000000075e6         je         loc_780b

                     loc_75ec:
00000000000075ec         mov        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+2005, fts_build+2032

                     loc_75f5:
00000000000075f5         mov        rbx, qword [rsp+0xa8+var_40]                ; CODE XREF=fts_build+1591, fts_build+1692, fts_build+1798, fts_build+1808, fts_build+1835, fts_build+1907, fts_build+2080, fts_build+2295, fts_build+2476
00000000000075fa         xor        rbx, qword [fs:0x28]
0000000000007603         mov        rax, qword [rsp+0xa8+var_98]
0000000000007608         jne        loc_79e1

000000000000760e         add        rsp, 0x78
0000000000007612         pop        rbx
0000000000007613         pop        rbp
0000000000007614         pop        r12
0000000000007616         pop        r13
0000000000007618         pop        r14
000000000000761a         pop        r15
000000000000761c         ret
                        ; endp
000000000000761d         align      32

                     loc_7620:
0000000000007620         lea        rbx, qword [r15+0x58]                       ; CODE XREF=fts_build+1228
0000000000007624         mov        rdx, rbp
0000000000007627         mov        rsi, rbx
000000000000762a         call       leave_dir.isra.12                           ; leave_dir.isra.12
000000000000762f         xor        edx, edx
0000000000007631         mov        rsi, rbp
0000000000007634         mov        rdi, r15
0000000000007637         call       fts_stat                                    ; fts_stat
000000000000763c         mov        edi, dword [r15+0x48]
0000000000007640         mov        rdx, rbp
0000000000007643         mov        rsi, rbx
0000000000007646         call       enter_dir.isra.10                           ; enter_dir.isra.10
000000000000764b         test       al, al
000000000000764d         jne        loc_7502

0000000000007653         call       j___errno_location                          ; __errno_location
0000000000007658         mov        qword [rsp+0xa8+var_98], 0x0
0000000000007661         mov        dword [rax], 0xc
0000000000007667         jmp        loc_75f5
0000000000007669         align      16

                     loc_7670:
0000000000007670         mov        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+719, fts_build+733, fts_build+745
0000000000007675         jmp        loc_71eb
000000000000767a         align      128

                     loc_7680:
0000000000007680         mov        rdi, r13                                    ; CODE XREF=fts_build+567, fts_build+618
0000000000007683         mov        rbp, qword [rsp+0xa8+var_88]
0000000000007688         mov        ebx, dword [r12]
000000000000768c         call       sub_1d30                                    ; sub_1d30
0000000000007691         mov        rdi, qword [rsp+0xa8+var_98]
0000000000007696         call       fts_lfree                                   ; fts_lfree
000000000000769b         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
000000000000769f         call       j_closedir                                  ; closedir
00000000000076a4         mov        r9d, 0x7
00000000000076aa         mov        qword [rbp+0x18], 0x0
00000000000076b2         mov        qword [rsp+0xa8+var_98], 0x0
00000000000076bb         mov        word [rbp+0x70], r9w
00000000000076c0         or         dword [r15+0x48], 0x2000
00000000000076c8         mov        dword [r12], ebx
00000000000076cc         jmp        loc_75f5
00000000000076d1         align      8

                     loc_76d8:
00000000000076d8         mov        rbp, rax                                    ; CODE XREF=fts_build+475

                     loc_76db:
00000000000076db         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+1973, fts_build+1992
00000000000076e0         jne        loc_7348

                     loc_76e6:
00000000000076e6         test       byte [r15+0x48], 0x4                        ; CODE XREF=fts_build+786, fts_build+872
00000000000076eb         je         loc_770b

00000000000076ed         mov        rax, qword [rsp+0xa8+var_90]
00000000000076f2         cmp        qword [r15+0x30], rax
00000000000076f6         je         loc_76fd

00000000000076f8         test       rbx, rbx
00000000000076fb         jne        loc_7703

                     loc_76fd:
00000000000076fd         sub        qword [rsp+0xa8+var_68], 0x1                ; CODE XREF=fts_build+1734

                     loc_7703:
0000000000007703         mov        rax, qword [rsp+0xa8+var_68]                ; CODE XREF=fts_build+1739
0000000000007708         mov        byte [rax], 0x0

                     loc_770b:
000000000000770b         cmp        qword [rsp+0xa8+var_58], 0x0                ; CODE XREF=fts_build+1723
0000000000007711         jne        loc_7780

0000000000007713         cmp        byte [rsp+0xa8+var_49], 0x0
0000000000007718         je         loc_7780

000000000000771a         cmp        dword [rsp+0xa8+var_50], 0x1
000000000000771f         je         loc_7760

0000000000007721         test       rbx, rbx
0000000000007724         je         loc_7760

                     loc_7726:
0000000000007726         cmp        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+1875
000000000000772b         jne        loc_7828

0000000000007731         cmp        qword [r15+0x40], 0x0
0000000000007736         je         loc_75f5

000000000000773c         cmp        rbx, 0x1
0000000000007740         je         loc_75f5

0000000000007746         mov        rsi, qword [rsp+0xa8+var_98]
000000000000774b         mov        rdx, rbx
000000000000774e         mov        rdi, r15
0000000000007751         call       fts_sort                                    ; fts_sort
0000000000007756         mov        qword [rsp+0xa8+var_98], rax
000000000000775b         jmp        loc_75f5

                     loc_7760:
0000000000007760         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=fts_build+1775, fts_build+1780
0000000000007765         jne        loc_7896

000000000000776b         mov        rdi, r15
000000000000776e         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000007773         test       eax, eax
0000000000007775         setne      al

                     loc_7778:
0000000000007778         test       al, al                                      ; CODE XREF=fts_build+2179
000000000000777a         jne        loc_7903

                     loc_7780:
0000000000007780         test       rbx, rbx                                    ; CODE XREF=fts_build+1761, fts_build+1768
0000000000007783         jne        loc_7726

0000000000007785         cmp        dword [rsp+0xa8+var_50], 0x3
000000000000778a         je         loc_7948

                     loc_7790:
0000000000007790         mov        rdi, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+2336, fts_build+2346, fts_build+2361
0000000000007795         call       fts_lfree                                   ; fts_lfree
000000000000779a         mov        qword [rsp+0xa8+var_98], 0x0
00000000000077a3         jmp        loc_75f5
00000000000077a8         align      16

                     loc_77b0:
00000000000077b0         mov        eax, dword [r12]                            ; CODE XREF=fts_build+509
00000000000077b4         mov        rbp, qword [rsp+0xa8+var_88]
00000000000077b9         test       eax, eax
00000000000077bb         je         loc_77de

00000000000077bd         test       rbx, rbx
00000000000077c0         mov        dword [rbp+0x40], eax
00000000000077c3         jne        loc_78f9

00000000000077c9         cmp        qword [rsp+0xa8+var_58], 0x0
00000000000077cf         mov        eax, 0x4
00000000000077d4         jne        loc_78f9

                     loc_77da:
00000000000077da         mov        word [rbp+0x70], ax                         ; CODE XREF=fts_build+2254

                     loc_77de:
00000000000077de         mov        rdi, qword [rbp+0x18]                       ; CODE XREF=fts_build+1931
00000000000077e2         test       rdi, rdi
00000000000077e5         je         loc_76db

00000000000077eb         call       j_closedir                                  ; closedir
00000000000077f0         mov        qword [rbp+0x18], 0x0
00000000000077f8         jmp        loc_76db
00000000000077fd         align      2048

                     loc_7800:
0000000000007800         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+1201
0000000000007805         jne        loc_75ec

                     loc_780b:
000000000000780b         mov        r10d, 0x4                                   ; CODE XREF=fts_build+1462
0000000000007811         mov        word [rbp+0x70], r10w
0000000000007816         call       j___errno_location                          ; __errno_location
000000000000781b         mov        eax, dword [rax]
000000000000781d         mov        dword [rbp+0x40], eax
0000000000007820         jmp        loc_75ec
0000000000007825         align      8

                     loc_7828:
0000000000007828         lea        rax, qword [fts_compare_ino]                ; fts_compare_ino, CODE XREF=fts_build+1787
000000000000782f         mov        rsi, qword [rsp+0xa8+var_98]
0000000000007834         mov        rdx, rbx
0000000000007837         mov        rdi, r15
000000000000783a         mov        qword [r15+0x40], rax
000000000000783e         call       fts_sort                                    ; fts_sort
0000000000007843         mov        qword [r15+0x40], 0x0
000000000000784b         mov        qword [rsp+0xa8+var_98], rax
0000000000007850         jmp        loc_75f5
0000000000007855         align      8

                     loc_7858:
0000000000007858         mov        qword [rsp+0xa8+var_70], 0x186a0            ; CODE XREF=fts_build+83
0000000000007861         mov        byte [rsp+0xa8+var_49], 0x1
0000000000007866         mov        edi, dword [r15+0x48]
000000000000786a         jmp        loc_709b
000000000000786f         align      16

                     loc_7870:
0000000000007870         mov        byte [rsp+0xa8+var_49], 0x0                 ; CODE XREF=fts_build+1261, fts_build+2371
0000000000007875         mov        edi, dword [r15+0x48]
0000000000007879         jmp        loc_709b
000000000000787e         align      128

                     loc_7880:
0000000000007880         xor        edx, edx                                    ; CODE XREF=fts_build+1212
0000000000007882         mov        rsi, rbp
0000000000007885         mov        rdi, r15
0000000000007888         call       fts_stat                                    ; fts_stat
000000000000788d         mov        word [rbp+0x70], ax
0000000000007891         jmp        loc_7502

                     loc_7896:
0000000000007896         mov        rsi, qword [rbp+8]                          ; CODE XREF=fts_build+1845
000000000000789a         lea        rcx, qword [__PRETTY_FUNCTION__.4162+9]     ; 0xbbc9
00000000000078a1         mov        edx, 0xffffffff
00000000000078a6         mov        rdi, r15
00000000000078a9         call       fts_safe_changedir                          ; fts_safe_changedir
00000000000078ae         test       eax, eax
00000000000078b0         setne      al
00000000000078b3         jmp        loc_7778

                     loc_78b8:
00000000000078b8         xor        ecx, ecx                                    ; CODE XREF=fts_build+1314
00000000000078ba         mov        edx, eax
00000000000078bc         mov        rsi, rbp
00000000000078bf         mov        rdi, r15
00000000000078c2         call       fts_safe_changedir                          ; fts_safe_changedir
00000000000078c7         test       eax, eax
00000000000078c9         jne        loc_7558

00000000000078cf         jmp        loc_7092

                     loc_78d4:
00000000000078d4         cmp        qword [rbp+0x88], 0x2                       ; CODE XREF=fts_build+1281
00000000000078dc         jne        loc_7537

00000000000078e2         mov        esi, eax
00000000000078e4         mov        rdi, rbp
00000000000078e7         call       leaf_optimization                           ; leaf_optimization
00000000000078ec         test       eax, eax
00000000000078ee         jne        loc_796e

00000000000078f0         mov        eax, dword [rsp+0xa8+var_44]
00000000000078f4         jmp        loc_7537

                     loc_78f9:
00000000000078f9         mov        eax, 0x7                                    ; CODE XREF=fts_build+1939, fts_build+1956
00000000000078fe         jmp        loc_77da

                     loc_7903:
0000000000007903         mov        edi, 0x7                                    ; CODE XREF=fts_build+1866
0000000000007908         mov        word [rbp+0x70], di
000000000000790c         or         dword [r15+0x48], 0x2000
0000000000007914         mov        rdi, qword [rsp+0xa8+var_98]
0000000000007919         call       fts_lfree                                   ; fts_lfree
000000000000791e         mov        qword [rsp+0xa8+var_98], 0x0
0000000000007927         jmp        loc_75f5

                     loc_792c:
000000000000792c         mov        edi, eax                                    ; CODE XREF=fts_build+1306
000000000000792e         mov        edx, 0x3
0000000000007933         mov        esi, 0x406
0000000000007938         xor        eax, eax
000000000000793a         call       rpl_fcntl                                   ; rpl_fcntl
000000000000793f         mov        dword [rsp+0xa8+var_44], eax
0000000000007943         jmp        loc_7550

                     loc_7948:
0000000000007948         movzx      eax, word [rbp+0x70]                        ; CODE XREF=fts_build+1882
000000000000794c         cmp        ax, 0x7
0000000000007950         je         loc_7790

0000000000007956         cmp        ax, 0x4
000000000000795a         je         loc_7790

0000000000007960         mov        esi, 0x6
0000000000007965         mov        word [rbp+0x70], si
0000000000007969         jmp        loc_7790

                     loc_796e:
000000000000796e         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2238
0000000000007973         jne        loc_7870

0000000000007979         mov        eax, dword [rsp+0xa8+var_44]
000000000000797d         xor        r12d, r12d
0000000000007980         mov        ebx, 0x1
0000000000007985         jmp        loc_7545
000000000000798a         align      16

                     loc_7990:
0000000000007990         mov        rdi, r13                                    ; CODE XREF=fts_build+256
0000000000007993         mov        rbp, qword [rsp+0xa8+var_88]
0000000000007998         call       sub_1d30                                    ; sub_1d30
000000000000799d         mov        rdi, qword [rsp+0xa8+var_98]
00000000000079a2         call       fts_lfree                                   ; fts_lfree
00000000000079a7         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
00000000000079ab         call       j_closedir                                  ; closedir
00000000000079b0         mov        r8d, 0x7
00000000000079b6         mov        qword [rbp+0x18], 0x0
00000000000079be         mov        qword [rsp+0xa8+var_98], 0x0
00000000000079c7         mov        word [rbp+0x70], r8w
00000000000079cc         or         dword [r15+0x48], 0x2000
00000000000079d4         mov        dword [r12], 0x24
00000000000079dc         jmp        loc_75f5

                     loc_79e1:
00000000000079e1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_build+1496
                        ; endp

                     loc_79e6:
00000000000079e6         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53, CODE XREF=fts_build+1065
00000000000079ed         mov        eax, dword [rax+rdx*4]
00000000000079f0         mov        dword [r13+0x90], eax
00000000000079f7         mov        eax, 0x1
00000000000079fc         jmp        loc_71ba
0000000000007a01         align      16                                          ; End of unwind block (FDE at 0xd030)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_50: int64_t, -80


                     rpl_fts_open:
0000000000007a10         push       r15                                         ; Begin of unwind block (FDE at 0xd080), CODE XREF=xfts_open+10
0000000000007a12         push       r14
0000000000007a14         push       r13
0000000000007a16         push       r12
0000000000007a18         push       rbp
0000000000007a19         push       rbx
0000000000007a1a         sub        rsp, 0x28
0000000000007a1e         test       esi, 0xfffff000
0000000000007a24         jne        loc_7da8

0000000000007a2a         mov        eax, esi
0000000000007a2c         mov        ebp, esi
0000000000007a2e         and        eax, 0x204
0000000000007a33         cmp        eax, 0x204
0000000000007a38         je         loc_7da8

0000000000007a3e         test       sil, 0x12
0000000000007a42         je         loc_7da8

0000000000007a48         mov        r13, rdi
0000000000007a4b         mov        esi, 0x1                                    ; argument "__size" for method j_calloc
0000000000007a50         mov        edi, 0x80                                   ; argument "__nmemb" for method j_calloc
0000000000007a55         mov        r14, rdx
0000000000007a58         call       j_calloc                                    ; calloc
0000000000007a5d         test       rax, rax
0000000000007a60         mov        rbx, rax
0000000000007a63         je         loc_7cbe

0000000000007a69         test       bpl, 0x2
0000000000007a6d         mov        qword [rax+0x40], r14
0000000000007a71         jne        loc_7cd0

0000000000007a77         mov        rdi, qword [r13]
0000000000007a7b         mov        dword [rax+0x48], ebp
0000000000007a7e         mov        dword [rbx+0x2c], 0xffffff9c
0000000000007a85         test       rdi, rdi
0000000000007a88         je         loc_7cef

                     loc_7a8e:
0000000000007a8e         mov        r15, r13                                    ; CODE XREF=rpl_fts_open+729
0000000000007a91         xor        r12d, r12d
0000000000007a94         nop        dword [rax]

                     loc_7a98:
0000000000007a98         call       j_strlen                                    ; strlen, CODE XREF=rpl_fts_open+158
0000000000007a9d         cmp        r12, rax
0000000000007aa0         cmovb      r12, rax
0000000000007aa4         add        r15, 0x8
0000000000007aa8         mov        rdi, qword [r15]
0000000000007aab         test       rdi, rdi
0000000000007aae         jne        loc_7a98

0000000000007ab0         lea        rdx, qword [r12+1]
0000000000007ab5         mov        eax, 0x1000
0000000000007aba         cmp        rdx, 0x1000
0000000000007ac1         cmovb      rdx, rax

                     loc_7ac5:
0000000000007ac5         lea        rsi, qword [rbx+0x30]                       ; CODE XREF=rpl_fts_open+740
0000000000007ac9         lea        rdi, qword [rbx+0x20]
0000000000007acd         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
0000000000007ad2         test       al, al
0000000000007ad4         mov        byte [rsp+0x58+var_42], al
0000000000007ad8         je         loc_7d79

0000000000007ade         mov        rsi, qword [r13]
0000000000007ae2         test       rsi, rsi
0000000000007ae5         je         loc_7d90

0000000000007aeb         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xb741
0000000000007af2         xor        edx, edx
0000000000007af4         mov        rdi, rbx
0000000000007af7         call       fts_alloc                                   ; fts_alloc
0000000000007afc         test       rax, rax
0000000000007aff         mov        r15, rax
0000000000007b02         je         loc_7d70

0000000000007b08         mov        rax, 0xffffffffffffffff
0000000000007b0f         test       r14, r14
0000000000007b12         mov        rsi, qword [r13]
0000000000007b16         mov        qword [r15+0x58], rax
0000000000007b1a         mov        qword [r15+0x68], rax
0000000000007b1e         je         loc_7b2d

                     loc_7b20:
0000000000007b20         mov        eax, dword [rbx+0x48]                       ; CODE XREF=rpl_fts_open+902
0000000000007b23         shr        eax, 0xa
0000000000007b26         and        eax, 0x1
0000000000007b29         mov        byte [rsp+0x58+var_42], al

                     loc_7b2d:
0000000000007b2d         test       rsi, rsi                                    ; CODE XREF=rpl_fts_open+270
0000000000007b30         je         loc_7d9c

0000000000007b36         shr        ebp, 0xb
0000000000007b39         mov        qword [rsp+0x58+var_40], 0x0
0000000000007b42         xor        r12d, r12d
0000000000007b45         xor        ebp, 0x1
0000000000007b48         mov        eax, ebp
0000000000007b4a         xor        ebp, ebp
0000000000007b4c         and        eax, 0x1
0000000000007b4f         mov        byte [rsp+0x58+var_41], al
0000000000007b53         jmp        loc_7bcc
0000000000007b55         align      8

                     loc_7b58:
0000000000007b58         mov        rdx, rax                                    ; CODE XREF=rpl_fts_open+466, rpl_fts_open+477, rpl_fts_open+488, rpl_fts_open+501, rpl_fts_open+517
0000000000007b5b         mov        rdi, rbx
0000000000007b5e         call       fts_alloc                                   ; fts_alloc
0000000000007b63         test       rax, rax
0000000000007b66         mov        rcx, rax
0000000000007b69         je         loc_7d60

0000000000007b6f         mov        qword [rax+0x58], 0x0
0000000000007b77         mov        qword [rax+8], r15
0000000000007b7b         lea        rax, qword [rax+0x108]
0000000000007b82         test       r12, r12
0000000000007b85         mov        qword [rcx+0x30], rax
0000000000007b89         je         loc_7d00

0000000000007b8f         cmp        byte [rsp+0x58+var_42], 0x0
0000000000007b94         je         loc_7d00

0000000000007b9a         mov        esi, 0xb
0000000000007b9f         test       r14, r14
0000000000007ba2         mov        qword [rcx+0xa8], 0x2
0000000000007bad         mov        word [rcx+0x70], si
0000000000007bb1         je         loc_7d40

                     loc_7bb7:
0000000000007bb7         mov        qword [rcx+0x10], r12                       ; CODE XREF=rpl_fts_open+782
0000000000007bbb         mov        r12, rcx

                     loc_7bbe:
0000000000007bbe         add        rbp, 0x1                                    ; CODE XREF=rpl_fts_open+809, rpl_fts_open+838
0000000000007bc2         mov        rsi, qword [r13+rbp*8]
0000000000007bc7         test       rsi, rsi
0000000000007bca         je         loc_7c20

                     loc_7bcc:
0000000000007bcc         mov        rdi, rsi                                    ; argument "__s" for method j_strlen, CODE XREF=rpl_fts_open+323
0000000000007bcf         mov        qword [rsp+0x58+var_50], rsi
0000000000007bd4         call       j_strlen                                    ; strlen
0000000000007bd9         cmp        rax, 0x2
0000000000007bdd         mov        rsi, qword [rsp+0x58+var_50]
0000000000007be2         jbe        loc_7b58

0000000000007be8         cmp        byte [rsp+0x58+var_41], 0x0
0000000000007bed         je         loc_7b58

0000000000007bf3         cmp        byte [rsi+rax-1], 0x2f
0000000000007bf8         jne        loc_7b58

0000000000007bfe         nop

                     loc_7c00:
0000000000007c00         cmp        byte [rsi+rax-2], 0x2f                      ; CODE XREF=rpl_fts_open+515
0000000000007c05         jne        loc_7b58

0000000000007c0b         sub        rax, 0x1
0000000000007c0f         cmp        rax, 0x1
0000000000007c13         jne        loc_7c00

0000000000007c15         jmp        loc_7b58
0000000000007c1a         align      32

                     loc_7c20:
0000000000007c20         test       r14, r14                                    ; CODE XREF=rpl_fts_open+442
0000000000007c23         je         loc_7c3c

0000000000007c25         cmp        rbp, 0x1
0000000000007c29         jbe        loc_7c3c

0000000000007c2b         mov        rsi, r12
0000000000007c2e         mov        rdx, rbp
0000000000007c31         mov        rdi, rbx
0000000000007c34         call       fts_sort                                    ; fts_sort
0000000000007c39         mov        r12, rax

                     loc_7c3c:
0000000000007c3c         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xb741, CODE XREF=rpl_fts_open+531, rpl_fts_open+537, rpl_fts_open+911
0000000000007c43         xor        edx, edx
0000000000007c45         mov        rdi, rbx
0000000000007c48         call       fts_alloc                                   ; fts_alloc
0000000000007c4d         test       rax, rax
0000000000007c50         mov        qword [rbx], rax
0000000000007c53         je         loc_7d60

0000000000007c59         mov        edi, dword [rbx+0x48]
0000000000007c5c         mov        edx, 0x9
0000000000007c61         lea        rsi, qword [rbx+0x58]
0000000000007c65         mov        qword [rax+0x10], r12
0000000000007c69         mov        word [rax+0x70], dx
0000000000007c6d         mov        qword [rax+0x58], 0x1
0000000000007c75         call       setup_dir.isra.4                            ; setup_dir.isra.4
0000000000007c7a         test       al, al
0000000000007c7c         je         loc_7d60

0000000000007c82         mov        esi, dword [rbx+0x48]
0000000000007c85         test       esi, 0x204
0000000000007c8b         jne        loc_7cb0

0000000000007c8d         mov        edi, dword [rbx+0x2c]
0000000000007c90         lea        rdx, qword [__PRETTY_FUNCTION__.4162+10]    ; 0xbbca
0000000000007c97         call       diropen.isra.6                              ; diropen.isra.6
0000000000007c9c         test       eax, eax
0000000000007c9e         mov        dword [rbx+0x28], eax
0000000000007ca1         jns        loc_7cb0

0000000000007ca3         or         dword [rbx+0x48], 0x4
0000000000007ca7         nop        word [rax+rax]

                     loc_7cb0:
0000000000007cb0         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_open+635, rpl_fts_open+657
0000000000007cb4         mov        esi, 0xffffffff
0000000000007cb9         call       i_ring_init                                 ; i_ring_init

                     loc_7cbe:
0000000000007cbe         add        rsp, 0x28                                   ; CODE XREF=rpl_fts_open+83, rpl_fts_open+883, rpl_fts_open+933
0000000000007cc2         mov        rax, rbx
0000000000007cc5         pop        rbx
0000000000007cc6         pop        rbp
0000000000007cc7         pop        r12
0000000000007cc9         pop        r13
0000000000007ccb         pop        r14
0000000000007ccd         pop        r15
0000000000007ccf         ret
                        ; endp

                     loc_7cd0:
0000000000007cd0         mov        rdi, qword [r13]                            ; CODE XREF=rpl_fts_open+97
0000000000007cd4         mov        eax, ebp
0000000000007cd6         mov        dword [rbx+0x2c], 0xffffff9c
0000000000007cdd         and        ah, 0xfd
0000000000007ce0         or         eax, 0x4
0000000000007ce3         test       rdi, rdi
0000000000007ce6         mov        dword [rbx+0x48], eax
0000000000007ce9         jne        loc_7a8e

                     loc_7cef:
0000000000007cef         mov        edx, 0x1000                                 ; CODE XREF=rpl_fts_open+120
0000000000007cf4         jmp        loc_7ac5
0000000000007cf9         align      256

                     loc_7d00:
0000000000007d00         xor        edx, edx                                    ; CODE XREF=rpl_fts_open+377, rpl_fts_open+388
0000000000007d02         mov        rsi, rcx
0000000000007d05         mov        rdi, rbx
0000000000007d08         mov        qword [rsp+0x58+var_50], rcx
0000000000007d0d         call       fts_stat                                    ; fts_stat
0000000000007d12         mov        rcx, qword [rsp+0x58+var_50]
0000000000007d17         test       r14, r14
0000000000007d1a         mov        word [rcx+0x70], ax
0000000000007d1e         jne        loc_7bb7

0000000000007d24         test       r12, r12
0000000000007d27         mov        qword [rcx+0x10], 0x0
0000000000007d2f         jne        loc_7d48

0000000000007d31         mov        qword [rsp+0x58+var_40], rcx
0000000000007d36         mov        r12, rcx
0000000000007d39         jmp        loc_7bbe
0000000000007d3e         align      64

                     loc_7d40:
0000000000007d40         mov        qword [rcx+0x10], 0x0                       ; CODE XREF=rpl_fts_open+417

                     loc_7d48:
0000000000007d48         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=rpl_fts_open+799
0000000000007d4d         mov        qword [rsp+0x58+var_40], rcx
0000000000007d52         mov        qword [rax+0x10], rcx
0000000000007d56         jmp        loc_7bbe
0000000000007d5b         align      32

                     loc_7d60:
0000000000007d60         mov        rdi, r12                                    ; CODE XREF=rpl_fts_open+345, rpl_fts_open+579, rpl_fts_open+620
0000000000007d63         call       fts_lfree                                   ; fts_lfree
0000000000007d68         mov        rdi, r15
0000000000007d6b         call       sub_1d30                                    ; sub_1d30

                     loc_7d70:
0000000000007d70         mov        rdi, qword [rbx+0x20]                       ; CODE XREF=rpl_fts_open+242
0000000000007d74         call       sub_1d30                                    ; sub_1d30

                     loc_7d79:
0000000000007d79         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_open+200
0000000000007d7c         xor        ebx, ebx
0000000000007d7e         call       sub_1d30                                    ; sub_1d30
0000000000007d83         jmp        loc_7cbe
0000000000007d88         align      16

                     loc_7d90:
0000000000007d90         xor        r15d, r15d                                  ; CODE XREF=rpl_fts_open+213
0000000000007d93         test       r14, r14
0000000000007d96         jne        loc_7b20

                     loc_7d9c:
0000000000007d9c         xor        r12d, r12d                                  ; CODE XREF=rpl_fts_open+288
0000000000007d9f         jmp        loc_7c3c
0000000000007da4         align      8

                     loc_7da8:
0000000000007da8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_open+20, rpl_fts_open+40, rpl_fts_open+50
0000000000007dad         xor        ebx, ebx
0000000000007daf         mov        dword [rax], 0x16
0000000000007db5         jmp        loc_7cbe
0000000000007dba         align      64                                          ; End of unwind block (FDE at 0xd080)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_close:
0000000000007dc0         push       r12                                         ; Begin of unwind block (FDE at 0xd0cc), CODE XREF=chown_files+156
0000000000007dc2         push       rbp
0000000000007dc3         mov        rbp, rdi
0000000000007dc6         push       rbx
0000000000007dc7         mov        rdi, qword [rdi]
0000000000007dca         test       rdi, rdi
0000000000007dcd         je         loc_7e13

0000000000007dcf         cmp        qword [rdi+0x58], 0x0
0000000000007dd4         jns        loc_7def

0000000000007dd6         jmp        loc_7ef0
0000000000007ddb         align      32

                     loc_7de0:
0000000000007de0         call       sub_1d30                                    ; sub_1d30, CODE XREF=rpl_fts_close+54
0000000000007de5         cmp        qword [rbx+0x58], 0x0
0000000000007dea         mov        rdi, rbx
0000000000007ded         js         loc_7e0b

                     loc_7def:
0000000000007def         mov        rbx, qword [rdi+0x10]                       ; CODE XREF=rpl_fts_close+20, rpl_fts_close+73
0000000000007df3         test       rbx, rbx
0000000000007df6         jne        loc_7de0

0000000000007df8         mov        rbx, qword [rdi+8]
0000000000007dfc         call       sub_1d30                                    ; sub_1d30
0000000000007e01         cmp        qword [rbx+0x58], 0x0
0000000000007e06         mov        rdi, rbx
0000000000007e09         jns        loc_7def

                     loc_7e0b:
0000000000007e0b         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_close+45
0000000000007e0e         call       sub_1d30                                    ; sub_1d30

                     loc_7e13:
0000000000007e13         mov        rdi, qword [rbp+8]                          ; CODE XREF=rpl_fts_close+13, rpl_fts_close+315
0000000000007e17         test       rdi, rdi
0000000000007e1a         je         loc_7e21

0000000000007e1c         call       fts_lfree                                   ; fts_lfree

                     loc_7e21:
0000000000007e21         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_close+90
0000000000007e25         call       sub_1d30                                    ; sub_1d30
0000000000007e2a         mov        rdi, qword [rbp+0x20]
0000000000007e2e         call       sub_1d30                                    ; sub_1d30
0000000000007e33         mov        eax, dword [rbp+0x48]
0000000000007e36         test       ah, 0x2
0000000000007e39         je         loc_7ea0

0000000000007e3b         mov        edi, dword [rbp+0x2c]
0000000000007e3e         test       edi, edi
0000000000007e40         jns        loc_7ed0

                     loc_7e46:
0000000000007e46         xor        ebx, ebx                                    ; CODE XREF=rpl_fts_close+226, rpl_fts_close+250, rpl_fts_close+279

                     loc_7e48:
0000000000007e48         lea        rdi, qword [rbp+0x60]                       ; CODE XREF=rpl_fts_close+292, rpl_fts_close+340, rpl_fts_close+348, rpl_fts_close+364
0000000000007e4c         call       fd_ring_clear                               ; fd_ring_clear
0000000000007e51         mov        rdi, qword [rbp+0x50]
0000000000007e55         test       rdi, rdi
0000000000007e58         je         loc_7e5f

0000000000007e5a         call       hash_free                                   ; hash_free

                     loc_7e5f:
0000000000007e5f         test       dword [rbp+0x48], 0x102                     ; CODE XREF=rpl_fts_close+152
0000000000007e66         mov        rdi, qword [rbp+0x58]
0000000000007e6a         je         loc_7e90

0000000000007e6c         test       rdi, rdi
0000000000007e6f         je         loc_7e76

0000000000007e71         call       hash_free                                   ; hash_free

                     loc_7e76:
0000000000007e76         mov        rdi, rbp                                    ; CODE XREF=rpl_fts_close+175, rpl_fts_close+213
0000000000007e79         call       sub_1d30                                    ; sub_1d30
0000000000007e7e         test       ebx, ebx
0000000000007e80         jne        loc_7f31

                     loc_7e86:
0000000000007e86         mov        eax, ebx                                    ; CODE XREF=rpl_fts_close+381
0000000000007e88         pop        rbx
0000000000007e89         pop        rbp
0000000000007e8a         pop        r12
0000000000007e8c         ret
                        ; endp
0000000000007e8d         align      16

                     loc_7e90:
0000000000007e90         call       sub_1d30                                    ; sub_1d30, CODE XREF=rpl_fts_close+170
0000000000007e95         jmp        loc_7e76
0000000000007e97         align      32

                     loc_7ea0:
0000000000007ea0         test       al, 0x4                                     ; CODE XREF=rpl_fts_close+121
0000000000007ea2         jne        loc_7e46

0000000000007ea4         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_fchdir
0000000000007ea7         call       j_fchdir                                    ; fchdir
0000000000007eac         test       eax, eax
0000000000007eae         jne        loc_7f00

0000000000007eb0         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
0000000000007eb3         call       j_close                                     ; close
0000000000007eb8         test       eax, eax
0000000000007eba         je         loc_7e46

0000000000007ebc         call       j___errno_location                          ; __errno_location
0000000000007ec1         mov        r12, rax
0000000000007ec4         jmp        loc_7f28
0000000000007ec6         align      16

                     loc_7ed0:
0000000000007ed0         call       j_close                                     ; close, CODE XREF=rpl_fts_close+128
0000000000007ed5         test       eax, eax
0000000000007ed7         je         loc_7e46

0000000000007edd         call       j___errno_location                          ; __errno_location
0000000000007ee2         mov        ebx, dword [rax]
0000000000007ee4         jmp        loc_7e48
0000000000007ee9         align      16

                     loc_7ef0:
0000000000007ef0         mov        rbx, rdi                                    ; CODE XREF=rpl_fts_close+22
0000000000007ef3         mov        rdi, rbx
0000000000007ef6         call       sub_1d30                                    ; sub_1d30
0000000000007efb         jmp        loc_7e13

                     loc_7f00:
0000000000007f00         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+238
0000000000007f05         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
0000000000007f08         mov        r12, rax
0000000000007f0b         mov        ebx, dword [rax]
0000000000007f0d         call       j_close                                     ; close
0000000000007f12         test       eax, eax
0000000000007f14         je         loc_7e48

0000000000007f1a         test       ebx, ebx
0000000000007f1c         jne        loc_7e48

0000000000007f22         nop        word [rax+rax]

                     loc_7f28:
0000000000007f28         mov        ebx, dword [r12]                            ; CODE XREF=rpl_fts_close+260
0000000000007f2c         jmp        loc_7e48

                     loc_7f31:
0000000000007f31         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+192
0000000000007f36         mov        dword [rax], ebx
0000000000007f38         mov        ebx, 0xffffffff
0000000000007f3d         jmp        loc_7e86
0000000000007f42         align      16                                          ; End of unwind block (FDE at 0xd0cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_read:
0000000000007f50         push       r14                                         ; Begin of unwind block (FDE at 0xd0fc), CODE XREF=sub_29d0+901, chown_files+117
0000000000007f52         push       r13
0000000000007f54         push       r12
0000000000007f56         push       rbp
0000000000007f57         push       rbx
0000000000007f58         mov        rbp, qword [rdi]
0000000000007f5b         test       rbp, rbp
0000000000007f5e         je         loc_806e

0000000000007f64         mov        edx, dword [rdi+0x48]
0000000000007f67         test       dh, 0x20
0000000000007f6a         jne        loc_806e

0000000000007f70         movzx      eax, word [rbp+0x74]
0000000000007f74         mov        ebx, 0x3
0000000000007f79         mov        r12, rdi
0000000000007f7c         mov        word [rbp+0x74], bx
0000000000007f80         cmp        ax, 0x1
0000000000007f84         je         loc_81d0

0000000000007f8a         cmp        ax, 0x2
0000000000007f8e         movzx      ecx, word [rbp+0x70]
0000000000007f92         je         loc_8080

0000000000007f98         cmp        cx, 0x1
0000000000007f9c         jne        loc_7fd0

0000000000007f9e         jmp        loc_81c0
0000000000007fa3         align      8

                     loc_7fa8:
0000000000007fa8         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+135
0000000000007fac         mov        rdi, rbp
0000000000007faf         call       sub_1d30                                    ; sub_1d30
0000000000007fb4         cmp        qword [rbx+0x58], 0x0
0000000000007fb9         je         loc_81f0

0000000000007fbf         movzx      eax, word [rbx+0x74]
0000000000007fc3         mov        rbp, rbx
0000000000007fc6         cmp        ax, 0x4
0000000000007fca         jne        loc_82f8

                     loc_7fd0:
0000000000007fd0         mov        rbx, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_read+76, rpl_fts_read+317
0000000000007fd4         test       rbx, rbx
0000000000007fd7         jne        loc_7fa8

0000000000007fd9         mov        rbx, qword [rbp+8]
0000000000007fdd         cmp        qword [rbx+0x18], 0x0
0000000000007fe2         jne        loc_8550

                     loc_7fe8:
0000000000007fe8         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+1672
0000000000007fec         mov        rdi, rbp
0000000000007fef         call       sub_1d30                                    ; sub_1d30
0000000000007ff4         cmp        qword [rbx+0x58], 0xffffffffffffffff
0000000000007ff9         je         loc_84b2

0000000000007fff         cmp        word [rbx+0x70], 0xb
0000000000008004         je         loc_813f

000000000000800a         mov        rdx, qword [r12+0x20]
000000000000800f         mov        rax, qword [rbx+0x48]
0000000000008013         mov        byte [rdx+rax], 0x0
0000000000008017         cmp        qword [rbx+0x58], 0x0
000000000000801c         je         loc_83e0

0000000000008022         movzx      eax, word [rbx+0x72]
0000000000008026         test       al, 0x2
0000000000008028         je         loc_8398

000000000000802e         mov        eax, dword [r12+0x48]
0000000000008033         mov        edi, dword [rbx+0x44]
0000000000008036         test       al, 0x4
0000000000008038         je         loc_843c

                     loc_803e:
000000000000803e         call       j_close                                     ; close, CODE XREF=rpl_fts_read+1287, rpl_fts_read+1708

                     loc_8043:
0000000000008043         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1098, rpl_fts_read+1130, rpl_fts_read+1180

                     loc_8048:
0000000000008048         cmp        word [rbx+0x70], 0x2                        ; CODE XREF=rpl_fts_read+1162
000000000000804d         je         loc_8063

000000000000804f         mov        ecx, dword [rbx+0x40]
0000000000008052         test       ecx, ecx
0000000000008054         je         loc_83f8

000000000000805a         mov        edx, 0x7
000000000000805f         mov        word [rbx+0x70], dx

                     loc_8063:
0000000000008063         and        edi, 0x2000                                 ; CODE XREF=rpl_fts_read+253, rpl_fts_read+1219
0000000000008069         mov        rbp, rbx
000000000000806c         je         loc_80ea

                     loc_806e:
000000000000806e         xor        ebp, ebp                                    ; CODE XREF=rpl_fts_read+14, rpl_fts_read+26, rpl_fts_read+1327, rpl_fts_read+1662
0000000000008070         pop        rbx
0000000000008071         mov        rax, rbp
0000000000008074         pop        rbp
0000000000008075         pop        r12
0000000000008077         pop        r13
0000000000008079         pop        r14
000000000000807b         ret
                        ; endp
000000000000807c         align      128

                     loc_8080:
0000000000008080         lea        eax, dword [rcx-0xc]                        ; CODE XREF=rpl_fts_read+66
0000000000008083         cmp        ax, 0x1
0000000000008087         jbe        loc_8100

0000000000008089         cmp        cx, 0x1
000000000000808d         jne        loc_7fd0

                     loc_8093:
0000000000008093         test       dl, 0x40                                    ; CODE XREF=rpl_fts_read+628
0000000000008096         je         loc_8148

000000000000809c         mov        rax, qword [r12+0x18]
00000000000080a1         cmp        qword [rbp+0x78], rax
00000000000080a5         je         loc_8148

                     loc_80ab:
00000000000080ab         test       byte [rbp+0x72], 0x2                        ; CODE XREF=rpl_fts_read+634
00000000000080af         jne        loc_8590

                     loc_80b5:
00000000000080b5         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+1608
00000000000080ba         test       rdi, rdi
00000000000080bd         je         loc_80cd

00000000000080bf         call       fts_lfree                                   ; fts_lfree
00000000000080c4         mov        qword [r12+8], 0x0

                     loc_80cd:
00000000000080cd         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+365
00000000000080d2         mov        r10d, 0x6
00000000000080d8         lea        rsi, qword [r12+0x58]
00000000000080dd         mov        word [rbp+0x70], r10w
00000000000080e2         mov        rdx, rbp
00000000000080e5         call       leave_dir.isra.12                           ; leave_dir.isra.12

                     loc_80ea:
00000000000080ea         pop        rbx                                         ; CODE XREF=rpl_fts_read+284, rpl_fts_read+467, rpl_fts_read+493, rpl_fts_read+864, rpl_fts_read+906, rpl_fts_read+925, rpl_fts_read+1373, rpl_fts_read+1407, rpl_fts_read+1518, rpl_fts_read+1724, rpl_fts_read+1778
00000000000080eb         mov        rax, rbp
00000000000080ee         pop        rbp
00000000000080ef         pop        r12
00000000000080f1         pop        r13
00000000000080f3         pop        r14
00000000000080f5         ret
                        ; endp
00000000000080f6         align      256

                     loc_8100:
0000000000008100         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+311
0000000000008105         mov        rsi, rbp
0000000000008108         call       fts_stat                                    ; fts_stat
000000000000810d         cmp        ax, 0x1
0000000000008111         mov        word [rbp+0x70], ax
0000000000008115         je         loc_845c

000000000000811b         cmp        ax, 0xb
000000000000811f         mov        qword [r12], rbp
0000000000008123         jne        loc_80ea

0000000000008125         nop        dword [rax]

                     loc_8128:
0000000000008128         mov        rax, qword [rbp+0xa8]                       ; CODE XREF=rpl_fts_read+854
000000000000812f         cmp        rax, 0x2
0000000000008133         je         loc_84d8

0000000000008139         cmp        rax, 0x1
000000000000813d         je         loc_80ea

                     loc_813f:
000000000000813f         call       j_abort                                     ; abort, CODE XREF=rpl_fts_read+180
                        ; endp
0000000000008144         align      8

                     loc_8148:
0000000000008148         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+326, rpl_fts_read+341
000000000000814d         test       rdi, rdi
0000000000008150         je         loc_8368

0000000000008156         test       dh, 0x10
0000000000008159         jne        loc_8352

000000000000815f         mov        rcx, qword [rbp+0x30]
0000000000008163         mov        edx, 0xffffffff
0000000000008168         mov        rsi, rbp
000000000000816b         mov        rdi, r12
000000000000816e         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000008173         test       eax, eax
0000000000008175         je         loc_8432

000000000000817b         call       j___errno_location                          ; __errno_location
0000000000008180         mov        eax, dword [rax]
0000000000008182         or         word [rbp+0x72], 0x1
0000000000008187         mov        dword [rbp+0x40], eax
000000000000818a         mov        rbp, qword [r12+8]
000000000000818f         test       rbp, rbp
0000000000008192         je         loc_8386

0000000000008198         mov        rax, rbp
000000000000819b         nop        dword [rax+rax]

                     loc_81a0:
00000000000081a0         mov        rdx, qword [rax+8]                          ; CODE XREF=rpl_fts_read+611
00000000000081a4         mov        rdx, qword [rdx+0x30]
00000000000081a8         mov        qword [rax+0x30], rdx
00000000000081ac         mov        rax, qword [rax+0x10]
00000000000081b0         test       rax, rax
00000000000081b3         jne        loc_81a0

00000000000081b5         jmp        loc_8386
00000000000081ba         align      64

                     loc_81c0:
00000000000081c0         cmp        ax, 0x4                                     ; CODE XREF=rpl_fts_read+78
00000000000081c4         jne        loc_8093

00000000000081ca         jmp        loc_80ab
00000000000081cf         align      16

                     loc_81d0:
00000000000081d0         mov        rsi, rbp                                    ; CODE XREF=rpl_fts_read+52
00000000000081d3         xor        edx, edx
00000000000081d5         call       fts_stat                                    ; fts_stat
00000000000081da         mov        word [rbp+0x70], ax
00000000000081de         mov        rax, rbp
00000000000081e1         pop        rbx
00000000000081e2         pop        rbp
00000000000081e3         pop        r12
00000000000081e5         pop        r13
00000000000081e7         pop        r14
00000000000081e9         ret
                        ; endp
00000000000081ea         align      16

                     loc_81f0:
00000000000081f0         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+105
00000000000081f3         call       restore_initial_cwd                         ; restore_initial_cwd
00000000000081f8         test       eax, eax
00000000000081fa         jne        loc_8601

0000000000008200         test       dword [r12+0x48], 0x102
0000000000008209         mov        rdi, qword [r12+0x58]
000000000000820e         je         loc_8348

0000000000008214         test       rdi, rdi
0000000000008217         je         loc_821e

0000000000008219         call       hash_free                                   ; hash_free

                     loc_821e:
000000000000821e         mov        rdx, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_read+711, rpl_fts_read+1021
0000000000008222         lea        rbp, qword [rbx+0x108]
0000000000008229         mov        rdi, qword [r12+0x20]                       ; argument "__dest" for method j_memmove
000000000000822e         mov        rsi, rbp                                    ; argument "__src" for method j_memmove
0000000000008231         mov        qword [rbx+0x48], rdx
0000000000008235         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
0000000000008239         call       j_memmove                                   ; memmove
000000000000823e         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000008243         mov        rdi, rbp                                    ; argument "__s" for method j_strrchr
0000000000008246         call       j_strrchr                                   ; strrchr
000000000000824b         test       rax, rax
000000000000824e         je         loc_827b

0000000000008250         cmp        rbp, rax
0000000000008253         je         loc_8420

                     loc_8259:
0000000000008259         lea        r13, qword [rax+1]                          ; CODE XREF=rpl_fts_read+1239
000000000000825d         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000008260         call       j_strlen                                    ; strlen
0000000000008265         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000008269         mov        r14, rax
000000000000826c         mov        rsi, r13                                    ; argument "__src" for method j_memmove
000000000000826f         mov        rdi, rbp                                    ; argument "__dest" for method j_memmove
0000000000008272         call       j_memmove                                   ; memmove
0000000000008277         mov        qword [rbx+0x60], r14

                     loc_827b:
000000000000827b         mov        rax, qword [r12+0x20]                       ; CODE XREF=rpl_fts_read+766, rpl_fts_read+1245
0000000000008280         mov        edi, dword [r12+0x48]
0000000000008285         lea        rsi, qword [r12+0x58]
000000000000828a         mov        rbp, rbx
000000000000828d         mov        qword [rbx+0x38], rax
0000000000008291         mov        qword [rbx+0x30], rax
0000000000008295         call       setup_dir.isra.4                            ; setup_dir.isra.4
000000000000829a         movzx      eax, word [rbx+0x70]

                     loc_829e:
000000000000829e         cmp        ax, 0xb                                     ; CODE XREF=rpl_fts_read+1007, rpl_fts_read+1853
00000000000082a2         mov        qword [r12], rbp
00000000000082a6         je         loc_8128

                     loc_82ac:
00000000000082ac         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1479, rpl_fts_read+1815
00000000000082b0         jne        loc_80ea

                     loc_82b6:
00000000000082b6         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_read+1311
00000000000082bb         jne        loc_82c6

                     loc_82bd:
00000000000082bd         mov        rax, qword [rbp+0x78]                       ; CODE XREF=rpl_fts_read+1784
00000000000082c1         mov        qword [r12+0x18], rax

                     loc_82c6:
00000000000082c6         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+875, rpl_fts_read+1524
00000000000082cb         lea        rsi, qword [r12+0x58]
00000000000082d0         mov        rdx, rbp
00000000000082d3         call       enter_dir.isra.10                           ; enter_dir.isra.10
00000000000082d8         test       al, al
00000000000082da         jne        loc_80ea

00000000000082e0         call       j___errno_location                          ; __errno_location
00000000000082e5         xor        ebp, ebp
00000000000082e7         mov        dword [rax], 0xc
00000000000082ed         jmp        loc_80ea
00000000000082f2         align      8

                     loc_82f8:
00000000000082f8         cmp        ax, 0x2                                     ; CODE XREF=rpl_fts_read+122
00000000000082fc         je         loc_859d

                     loc_8302:
0000000000008302         mov        rax, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+1087, rpl_fts_read+1585, rpl_fts_read+1651
0000000000008306         lea        rsi, qword [rbp+0x108]                      ; argument "__src" for method j_memmove
000000000000830d         mov        rdi, qword [rax+0x48]
0000000000008311         mov        rax, qword [rax+0x38]
0000000000008315         cmp        byte [rax+rdi-1], 0x2f
000000000000831a         lea        rdx, qword [rdi-1]
000000000000831e         cmove      rdi, rdx
0000000000008322         add        rdi, qword [r12+0x20]
0000000000008327         mov        byte [rdi], 0x2f
000000000000832a         mov        rax, qword [rbp+0x60]
000000000000832e         add        rdi, 0x1                                    ; argument "__dest" for method j_memmove
0000000000008332         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000008336         call       j_memmove                                   ; memmove
000000000000833b         movzx      eax, word [rbp+0x70]
000000000000833f         jmp        loc_829e
0000000000008344         align      8

                     loc_8348:
0000000000008348         call       sub_1d30                                    ; sub_1d30, CODE XREF=rpl_fts_read+702
000000000000834d         jmp        loc_821e

                     loc_8352:
0000000000008352         and        dh, 0xef                                    ; CODE XREF=rpl_fts_read+521
0000000000008355         mov        dword [r12+0x48], edx
000000000000835a         call       fts_lfree                                   ; fts_lfree
000000000000835f         mov        qword [r12+8], 0x0

                     loc_8368:
0000000000008368         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+512
000000000000836d         mov        rdi, r12
0000000000008370         call       fts_build                                   ; fts_build
0000000000008375         test       rax, rax
0000000000008378         mov        qword [r12+8], rax
000000000000837d         je         loc_8474

0000000000008383         mov        rbp, rax

                     loc_8386:
0000000000008386         mov        qword [r12+8], 0x0                          ; CODE XREF=rpl_fts_read+578, rpl_fts_read+613, rpl_fts_read+1255
000000000000838f         jmp        loc_8302
0000000000008394         align      8

                     loc_8398:
0000000000008398         test       al, 0x1                                     ; CODE XREF=rpl_fts_read+216
000000000000839a         jne        loc_8043

00000000000083a0         mov        rsi, qword [rbx+8]
00000000000083a4         lea        rcx, qword [__PRETTY_FUNCTION__.4162+9]     ; 0xbbc9
00000000000083ab         mov        edx, 0xffffffff
00000000000083b0         mov        rdi, r12
00000000000083b3         call       fts_safe_changedir                          ; fts_safe_changedir
00000000000083b8         test       eax, eax
00000000000083ba         je         loc_8043

                     loc_83c0:
00000000000083c0         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1178
00000000000083c5         mov        edi, dword [r12+0x48]
00000000000083ca         mov        eax, dword [rax]
00000000000083cc         or         edi, 0x2000
00000000000083d2         mov        dword [rbx+0x40], eax
00000000000083d5         mov        dword [r12+0x48], edi
00000000000083da         jmp        loc_8048
00000000000083df         align      32

                     loc_83e0:
00000000000083e0         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+204
00000000000083e3         call       restore_initial_cwd                         ; restore_initial_cwd
00000000000083e8         test       eax, eax
00000000000083ea         jne        loc_83c0

00000000000083ec         jmp        loc_8043
00000000000083f1         align      8

                     loc_83f8:
00000000000083f8         mov        eax, 0x6                                    ; CODE XREF=rpl_fts_read+260
00000000000083fd         lea        rsi, qword [r12+0x58]
0000000000008402         mov        rdx, rbx
0000000000008405         mov        word [rbx+0x70], ax
0000000000008409         call       leave_dir.isra.12                           ; leave_dir.isra.12
000000000000840e         mov        edi, dword [r12+0x48]
0000000000008413         jmp        loc_8063
0000000000008418         align      32

                     loc_8420:
0000000000008420         cmp        byte [rbx+0x109], 0x0                       ; CODE XREF=rpl_fts_read+771
0000000000008427         jne        loc_8259

000000000000842d         jmp        loc_827b

                     loc_8432:
0000000000008432         mov        rbp, qword [r12+8]                          ; CODE XREF=rpl_fts_read+549
0000000000008437         jmp        loc_8386

                     loc_843c:
000000000000843c         test       ah, 0x2                                     ; CODE XREF=rpl_fts_read+232
000000000000843f         je         loc_85dd

0000000000008445         mov        esi, edi
0000000000008447         mov        edx, 0x1
000000000000844c         mov        rdi, r12
000000000000844f         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000008454         mov        edi, dword [rbx+0x44]
0000000000008457         jmp        loc_803e

                     loc_845c:
000000000000845c         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+453
0000000000008461         test       sil, 0x4
0000000000008465         je         loc_866c

000000000000846b         mov        qword [r12], rbp
000000000000846f         jmp        loc_82b6

                     loc_8474:
0000000000008474         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1069
0000000000008479         test       edi, 0x2000
000000000000847f         jne        loc_806e

0000000000008485         mov        r9d, dword [rbp+0x40]
0000000000008489         test       r9d, r9d
000000000000848c         je         loc_84a0

000000000000848e         cmp        word [rbp+0x70], 0x4
0000000000008493         je         loc_84a0

0000000000008495         mov        r8d, 0x7
000000000000849b         mov        word [rbp+0x70], r8w

                     loc_84a0:
00000000000084a0         lea        rsi, qword [r12+0x58]                       ; CODE XREF=rpl_fts_read+1340, rpl_fts_read+1347
00000000000084a5         mov        rdx, rbp
00000000000084a8         call       leave_dir.isra.12                           ; leave_dir.isra.12
00000000000084ad         jmp        loc_80ea

                     loc_84b2:
00000000000084b2         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_read+169
00000000000084b5         xor        ebp, ebp
00000000000084b7         call       sub_1d30                                    ; sub_1d30
00000000000084bc         call       j___errno_location                          ; __errno_location
00000000000084c1         mov        dword [rax], 0x0
00000000000084c7         mov        qword [r12], 0x0
00000000000084cf         jmp        loc_80ea
00000000000084d4         align      8

                     loc_84d8:
00000000000084d8         mov        rbx, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+483
00000000000084dc         cmp        qword [rbx+0x68], 0x0
00000000000084e1         jne        loc_84f4

00000000000084e3         mov        eax, dword [r12+0x48]
00000000000084e8         and        eax, 0x18
00000000000084eb         cmp        eax, 0x18
00000000000084ee         je         loc_864d

                     loc_84f4:
00000000000084f4         xor        edx, edx                                    ; CODE XREF=rpl_fts_read+1425, rpl_fts_read+1805
00000000000084f6         mov        rsi, rbp
00000000000084f9         mov        rdi, r12
00000000000084fc         call       fts_stat                                    ; fts_stat
0000000000008501         mov        edx, dword [rbp+0x90]
0000000000008507         mov        word [rbp+0x70], ax
000000000000850b         and        edx, 0xf000
0000000000008511         cmp        edx, 0x4000
0000000000008517         jne        loc_82ac

000000000000851d         cmp        qword [rbp+0x58], 0x0
0000000000008522         je         loc_863e

0000000000008528         mov        rcx, qword [rbx+0x68]
000000000000852c         lea        rdx, qword [rcx-1]
0000000000008530         cmp        rdx, 0xfffffffffffffffd
0000000000008534         ja         loc_853a

0000000000008536         mov        qword [rbx+0x68], rdx

                     loc_853a:
000000000000853a         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1508
000000000000853e         jne        loc_80ea

0000000000008544         jmp        loc_82c6
0000000000008549         align      16

                     loc_8550:
0000000000008550         mov        rax, qword [rbx+0x48]                       ; CODE XREF=rpl_fts_read+146
0000000000008554         mov        rdx, qword [r12+0x20]
0000000000008559         mov        esi, 0x3
000000000000855e         mov        qword [r12], rbx
0000000000008562         mov        rdi, r12
0000000000008565         mov        byte [rdx+rax], 0x0
0000000000008569         call       fts_build                                   ; fts_build
000000000000856e         test       rax, rax
0000000000008571         mov        rbx, rax
0000000000008574         je         loc_85c8

0000000000008576         mov        rdi, rbp
0000000000008579         mov        rbp, rbx
000000000000857c         call       sub_1d30                                    ; sub_1d30
0000000000008581         jmp        loc_8302
0000000000008586         align      16

                     loc_8590:
0000000000008590         mov        edi, dword [rbp+0x44]                       ; argument "__fd" for method j_close, CODE XREF=rpl_fts_read+351
0000000000008593         call       j_close                                     ; close
0000000000008598         jmp        loc_80b5

                     loc_859d:
000000000000859d         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+940
00000000000085a2         mov        rsi, rbx
00000000000085a5         mov        rdi, r12
00000000000085a8         call       fts_stat                                    ; fts_stat
00000000000085ad         cmp        ax, 0x1
00000000000085b1         mov        word [rbx+0x70], ax
00000000000085b5         je         loc_8611

                     loc_85b7:
00000000000085b7         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+1738, rpl_fts_read+1769, rpl_fts_read+1907
00000000000085bc         mov        rbp, rbx
00000000000085bf         mov        word [rbx+0x74], si
00000000000085c3         jmp        loc_8302

                     loc_85c8:
00000000000085c8         test       byte [r12+0x49], 0x20                       ; CODE XREF=rpl_fts_read+1572
00000000000085ce         jne        loc_806e

00000000000085d4         mov        rbx, qword [rbp+8]
00000000000085d8         jmp        loc_7fe8

                     loc_85dd:
00000000000085dd         call       j_fchdir                                    ; fchdir, CODE XREF=rpl_fts_read+1263
00000000000085e2         test       eax, eax
00000000000085e4         je         loc_85f9

00000000000085e6         call       j___errno_location                          ; __errno_location
00000000000085eb         mov        eax, dword [rax]
00000000000085ed         mov        dword [rbx+0x40], eax
00000000000085f0         or         dword [r12+0x48], 0x2000

                     loc_85f9:
00000000000085f9         mov        edi, dword [rbx+0x44]                       ; CODE XREF=rpl_fts_read+1684
00000000000085fc         jmp        loc_803e

                     loc_8601:
0000000000008601         or         dword [r12+0x48], 0x2000                    ; CODE XREF=rpl_fts_read+682
000000000000860a         xor        ebp, ebp
000000000000860c         jmp        loc_80ea

                     loc_8611:
0000000000008611         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1637
0000000000008616         test       sil, 0x4
000000000000861a         jne        loc_85b7

000000000000861c         mov        edi, dword [r12+0x2c]
0000000000008621         lea        rdx, qword [__PRETTY_FUNCTION__.4162+10]    ; 0xbbca
0000000000008628         call       diropen.isra.6                              ; diropen.isra.6
000000000000862d         test       eax, eax
000000000000862f         mov        dword [rbx+0x44], eax
0000000000008632         js         loc_86b0

0000000000008634         or         word [rbx+0x72], 0x2
0000000000008639         jmp        loc_85b7

                     loc_863e:
000000000000863e         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1490
0000000000008642         jne        loc_80ea

0000000000008648         jmp        loc_82bd

                     loc_864d:
000000000000864d         mov        esi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1438
0000000000008652         mov        rdi, rbx
0000000000008655         call       leaf_optimization                           ; leaf_optimization
000000000000865a         cmp        eax, 0x2
000000000000865d         jne        loc_84f4

0000000000008663         movzx      eax, word [rbp+0x70]
0000000000008667         jmp        loc_82ac

                     loc_866c:
000000000000866c         mov        edi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1301
0000000000008671         lea        rdx, qword [__PRETTY_FUNCTION__.4162+10]    ; 0xbbca
0000000000008678         call       diropen.isra.6                              ; diropen.isra.6
000000000000867d         test       eax, eax
000000000000867f         mov        dword [rbp+0x44], eax
0000000000008682         js         loc_8692

0000000000008684         or         word [rbp+0x72], 0x2
0000000000008689         movzx      eax, word [rbp+0x70]
000000000000868d         jmp        loc_829e

                     loc_8692:
0000000000008692         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1842
0000000000008697         mov        eax, dword [rax]
0000000000008699         mov        r11d, 0x7
000000000000869f         mov        word [rbp+0x70], r11w
00000000000086a4         mov        dword [rbp+0x40], eax
00000000000086a7         mov        qword [r12], rbp
00000000000086ab         jmp        loc_80ea

                     loc_86b0:
00000000000086b0         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1762
00000000000086b5         mov        eax, dword [rax]
00000000000086b7         mov        edi, 0x7
00000000000086bc         mov        word [rbx+0x70], di
00000000000086c0         mov        dword [rbx+0x40], eax
00000000000086c3         jmp        loc_85b7
00000000000086c8         align      16                                          ; End of unwind block (FDE at 0xd0fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_set:
00000000000086d0         cmp        edx, 0x4                                    ; Begin of unwind block (FDE at 0xd160), CODE XREF=sub_29d0+536, sub_29d0+893, sub_32e0+249
00000000000086d3         ja         loc_86e0

00000000000086d5         mov        word [rsi+0x74], dx
00000000000086d9         xor        eax, eax
00000000000086db         ret
                        ; endp
00000000000086dc         align      32

                     loc_86e0:
00000000000086e0         sub        rsp, 0x8                                    ; CODE XREF=rpl_fts_set+3
00000000000086e4         call       j___errno_location                          ; __errno_location
00000000000086e9         mov        dword [rax], 0x16
00000000000086ef         mov        eax, 0x1
00000000000086f4         add        rsp, 0x8
00000000000086f8         ret
                        ; endp
00000000000086f9         align      256                                         ; End of unwind block (FDE at 0xd160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_children:
0000000000008700         push       r14                                         ; Begin of unwind block (FDE at 0xd178)
0000000000008702         push       r13
0000000000008704         push       r12
0000000000008706         push       rbp
0000000000008707         mov        r12d, esi
000000000000870a         push       rbx
000000000000870b         mov        rbx, rdi
000000000000870e         call       j___errno_location                          ; __errno_location
0000000000008713         test       r12d, 0xffffefff
000000000000871a         mov        r13, rax
000000000000871d         jne        loc_8808

0000000000008723         mov        rbp, qword [rbx]
0000000000008726         mov        dword [rax], 0x0
000000000000872c         test       byte [rbx+0x49], 0x20
0000000000008730         jne        loc_87b0

0000000000008732         movzx      eax, word [rbp+0x70]
0000000000008736         cmp        ax, 0x9
000000000000873a         je         loc_87a0

000000000000873c         cmp        ax, 0x1
0000000000008740         jne        loc_87b0

0000000000008742         mov        rdi, qword [rbx+8]
0000000000008746         test       rdi, rdi
0000000000008749         je         loc_8750

000000000000874b         call       fts_lfree                                   ; fts_lfree

                     loc_8750:
0000000000008750         cmp        r12d, 0x1000                                ; CODE XREF=rpl_fts_children+73
0000000000008757         mov        r14d, 0x1
000000000000875d         jne        loc_876c

000000000000875f         or         dword [rbx+0x48], 0x1000
0000000000008766         mov        r14d, 0x2

                     loc_876c:
000000000000876c         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_children+93
0000000000008771         jne        loc_8785

0000000000008773         mov        rax, qword [rbp+0x30]
0000000000008777         cmp        byte [rax], 0x2f
000000000000877a         je         loc_8785

000000000000877c         mov        esi, dword [rbx+0x48]
000000000000877f         test       sil, 0x4
0000000000008783         je         loc_87c0

                     loc_8785:
0000000000008785         mov        esi, r14d                                   ; CODE XREF=rpl_fts_children+113, rpl_fts_children+122
0000000000008788         mov        rdi, rbx
000000000000878b         call       fts_build                                   ; fts_build
0000000000008790         mov        qword [rbx+8], rax

                     loc_8794:
0000000000008794         pop        rbx                                         ; CODE XREF=rpl_fts_children+256, rpl_fts_children+272, rpl_fts_children+307, rpl_fts_children+329
0000000000008795         pop        rbp
0000000000008796         pop        r12
0000000000008798         pop        r13
000000000000879a         pop        r14
000000000000879c         ret
                        ; endp
000000000000879d         align      32

                     loc_87a0:
00000000000087a0         pop        rbx                                         ; CODE XREF=rpl_fts_children+58
00000000000087a1         mov        rax, qword [rbp+0x10]
00000000000087a5         pop        rbp
00000000000087a6         pop        r12
00000000000087a8         pop        r13
00000000000087aa         pop        r14
00000000000087ac         ret
                        ; endp
00000000000087ad         align      16

                     loc_87b0:
00000000000087b0         pop        rbx                                         ; CODE XREF=rpl_fts_children+48, rpl_fts_children+64
00000000000087b1         xor        eax, eax
00000000000087b3         pop        rbp
00000000000087b4         pop        r12
00000000000087b6         pop        r13
00000000000087b8         pop        r14
00000000000087ba         ret
                        ; endp
00000000000087bb         align      64

                     loc_87c0:
00000000000087c0         mov        edi, dword [rbx+0x2c]                       ; CODE XREF=rpl_fts_children+131
00000000000087c3         lea        rdx, qword [__PRETTY_FUNCTION__.4162+10]    ; 0xbbca
00000000000087ca         call       diropen.isra.6                              ; diropen.isra.6
00000000000087cf         test       eax, eax
00000000000087d1         mov        ebp, eax
00000000000087d3         js         loc_8829

00000000000087d5         mov        esi, r14d
00000000000087d8         mov        rdi, rbx
00000000000087db         call       fts_build                                   ; fts_build
00000000000087e0         test       byte [rbx+0x49], 0x2
00000000000087e4         mov        qword [rbx+8], rax
00000000000087e8         jne        loc_8818

00000000000087ea         mov        edi, ebp                                    ; argument "__fd" for method j_fchdir
00000000000087ec         call       j_fchdir                                    ; fchdir
00000000000087f1         test       eax, eax
00000000000087f3         jne        loc_8838

00000000000087f5         mov        edi, ebp                                    ; argument "__fd" for method j_close
00000000000087f7         call       j_close                                     ; close

                     loc_87fc:
00000000000087fc         mov        rax, qword [rbx+8]                          ; CODE XREF=rpl_fts_children+295
0000000000008800         jmp        loc_8794
0000000000008802         align      8

                     loc_8808:
0000000000008808         mov        dword [rax], 0x16                           ; CODE XREF=rpl_fts_children+29
000000000000880e         xor        eax, eax
0000000000008810         jmp        loc_8794
0000000000008815         align      8

                     loc_8818:
0000000000008818         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_children+232
000000000000881d         mov        esi, ebp
000000000000881f         mov        rdi, rbx
0000000000008822         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000008827         jmp        loc_87fc

                     loc_8829:
0000000000008829         mov        qword [rbx+8], 0x0                          ; CODE XREF=rpl_fts_children+211
0000000000008831         xor        eax, eax
0000000000008833         jmp        loc_8794

                     loc_8838:
0000000000008838         mov        ebx, dword [r13]                            ; CODE XREF=rpl_fts_children+243
000000000000883c         mov        edi, ebp                                    ; argument "__fd" for method j_close
000000000000883e         call       j_close                                     ; close
0000000000008843         xor        eax, eax
0000000000008845         mov        dword [r13], ebx
0000000000008849         jmp        loc_8794
000000000000884e         align      16                                          ; End of unwind block (FDE at 0xd178)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000008850         push       r13                                         ; Begin of unwind block (FDE at 0xd1dc), CODE XREF=sub_4200+534
0000000000008852         push       r12
0000000000008854         mov        r13, rsi
0000000000008857         push       rbp
0000000000008858         push       rbx
0000000000008859         mov        rbx, rdi
000000000000885c         mov        r12, rdx
000000000000885f         sub        rsp, 0x18
0000000000008863         mov        rax, qword [fs:0x28]
000000000000886c         mov        qword [rsp+0x38+var_30], rax
0000000000008871         xor        eax, eax
0000000000008873         lea        rax, qword [rsp+0x38+var_34]
0000000000008878         test       rdi, rdi
000000000000887b         cmove      rbx, rax
000000000000887f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000008882         call       j_mbrtowc                                   ; mbrtowc
0000000000008887         cmp        rax, 0xfffffffffffffffd
000000000000888b         mov        rbp, rax
000000000000888e         jbe        loc_88b0

0000000000008890         test       r12, r12
0000000000008893         je         loc_88b0

0000000000008895         xor        edi, edi
0000000000008897         call       hard_locale                                 ; hard_locale
000000000000889c         test       al, al
000000000000889e         jne        loc_88b0

00000000000088a0         movzx      eax, byte [r13]
00000000000088a5         mov        ebp, 0x1
00000000000088aa         mov        dword [rbx], eax
00000000000088ac         nop        dword [rax]

                     loc_88b0:
00000000000088b0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000088b5         xor        rdx, qword [fs:0x28]
00000000000088be         mov        rax, rbp
00000000000088c1         jne        loc_88ce

00000000000088c3         add        rsp, 0x18
00000000000088c7         pop        rbx
00000000000088c8         pop        rbp
00000000000088c9         pop        r12
00000000000088cb         pop        r13
00000000000088cd         ret
                        ; endp

                     loc_88ce:
00000000000088ce         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000088d3         align      32                                          ; End of unwind block (FDE at 0xd1dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000088e0         push       r12                                         ; Begin of unwind block (FDE at 0xd21c), CODE XREF=close_stdout+13, close_stdout+51
00000000000088e2         push       rbp
00000000000088e3         mov        rbp, rdi
00000000000088e6         push       rbx
00000000000088e7         call       j___fpending                                ; __fpending
00000000000088ec         mov        ebx, dword [rbp]
00000000000088ef         mov        rdi, rbp
00000000000088f2         mov        r12, rax
00000000000088f5         call       rpl_fclose                                  ; rpl_fclose
00000000000088fa         and        ebx, 0x20
00000000000088fd         test       ebx, ebx
00000000000088ff         jne        loc_8918

0000000000008901         test       eax, eax
0000000000008903         je         loc_890f

0000000000008905         test       r12, r12
0000000000008908         mov        eax, 0xffffffff
000000000000890d         je         loc_8948

                     loc_890f:
000000000000890f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000008910         pop        rbp
0000000000008911         pop        r12
0000000000008913         ret
                        ; endp
0000000000008914         align      8

                     loc_8918:
0000000000008918         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000891a         jne        loc_8938

000000000000891c         call       j___errno_location                          ; __errno_location
0000000000008921         mov        dword [rax], 0x0
0000000000008927         mov        eax, 0xffffffff
000000000000892c         pop        rbx
000000000000892d         pop        rbp
000000000000892e         pop        r12
0000000000008930         ret
                        ; endp
0000000000008931         align      8

                     loc_8938:
0000000000008938         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000008939         mov        eax, 0xffffffff
000000000000893e         pop        rbp
000000000000893f         pop        r12
0000000000008941         ret
                        ; endp
0000000000008942         align      8

                     loc_8948:
0000000000008948         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000894d         cmp        dword [rax], 0x9
0000000000008950         pop        rbx
0000000000008951         pop        rbp
0000000000008952         pop        r12
0000000000008954         setne      al
0000000000008957         movzx      eax, al
000000000000895a         neg        eax
000000000000895c         ret
                        ; endp
000000000000895d         align      32                                          ; End of unwind block (FDE at 0xd21c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check_init:
0000000000008960         mov        qword [rdi+0x10], 0x0                       ; Begin of unwind block (FDE at 0xd26c), CODE XREF=setup_dir.isra.4+87
0000000000008968         mov        dword [rdi+0x18], 0x95f616
000000000000896f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check:
0000000000008970         cmp        dword [rdi+0x18], 0x95f616                  ; End of unwind block (FDE at 0xd26c), Begin of unwind block (FDE at 0xd280), CODE XREF=enter_dir.isra.10+136
0000000000008977         jne        loc_89d7

0000000000008979         mov        rdx, qword [rdi+0x10]
000000000000897d         mov        rcx, qword [rsi+8]
0000000000008981         test       rdx, rdx
0000000000008984         je         loc_89a0

0000000000008986         cmp        qword [rdi], rcx
0000000000008989         je         loc_89b8

                     loc_898b:
000000000000898b         lea        r8, qword [rdx+1]                           ; CODE XREF=cycle_check+79
000000000000898f         xor        eax, eax
0000000000008991         test       rdx, r8
0000000000008994         mov        qword [rdi+0x10], r8
0000000000008998         je         loc_89d0

000000000000899a         ret
                        ; endp
000000000000899c         align      32

                     loc_89a0:
00000000000089a0         mov        qword [rdi+0x10], 0x1                       ; CODE XREF=cycle_check+20

                     loc_89a8:
00000000000089a8         mov        rax, qword [rsi]                            ; CODE XREF=cycle_check+101
00000000000089ab         mov        qword [rdi], rcx
00000000000089ae         mov        qword [rdi+8], rax
00000000000089b2         xor        eax, eax
00000000000089b4         ret
                        ; endp
00000000000089b5         align      8

                     loc_89b8:
00000000000089b8         mov        rax, qword [rdi+8]                          ; CODE XREF=cycle_check+25
00000000000089bc         cmp        qword [rsi], rax
00000000000089bf         jne        loc_898b

                     loc_89c1:
00000000000089c1         mov        eax, 0x1                                    ; CODE XREF=cycle_check+99
00000000000089c6         ret
                        ; endp
00000000000089c7         align      16

                     loc_89d0:
00000000000089d0         test       r8, r8                                      ; CODE XREF=cycle_check+40
00000000000089d3         je         loc_89c1

00000000000089d5         jmp        loc_89a8

                     loc_89d7:
00000000000089d7         lea        rcx, qword [__PRETTY_FUNCTION__.3994]       ; argument "__function" for method j___assert_fail, "cycle_check", CODE XREF=cycle_check+7
00000000000089de         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/cycle-check.c"
00000000000089e5         lea        rdi, qword [aStatemagic9827]                ; argument "__assertion" for method j___assert_fail, "state->magic == 9827862"
00000000000089ec         sub        rsp, 0x8
00000000000089f0         mov        edx, 0x3c                                   ; argument "__line" for method j___assert_fail
00000000000089f5         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000089fa         align      512                                         ; End of unwind block (FDE at 0xd280)

                     open_safer:
0000000000008a00         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xd29c), CODE XREF=diropen.isra.6+35
0000000000008a04         mov        qword [rsp+0x58+var_28], rdx
0000000000008a09         xor        edx, edx
0000000000008a0b         mov        rax, qword [fs:0x28]
0000000000008a14         mov        qword [rsp+0x58+var_40], rax
0000000000008a19         xor        eax, eax
0000000000008a1b         test       sil, 0x40
0000000000008a1f         jne        loc_8a48

                     loc_8a21:
0000000000008a21         xor        eax, eax                                    ; CODE XREF=open_safer+103
0000000000008a23         call       j_open                                      ; open
0000000000008a28         mov        edi, eax
0000000000008a2a         call       fd_safer                                    ; fd_safer
0000000000008a2f         mov        rcx, qword [rsp+0x58+var_40]
0000000000008a34         xor        rcx, qword [fs:0x28]
0000000000008a3d         jne        loc_8a69

0000000000008a3f         add        rsp, 0x58
0000000000008a43         ret
                        ; endp
0000000000008a44         align      8

                     loc_8a48:
0000000000008a48         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
0000000000008a4d         mov        dword [rsp+0x58+var_58], 0x10
0000000000008a54         mov        edx, dword [rsp+0x58+var_28]
0000000000008a58         mov        qword [rsp+0x58+var_50], rax
0000000000008a5d         lea        rax, qword [rsp+0x58+var_38]
0000000000008a62         mov        qword [rsp+0x58+var_48], rax
0000000000008a67         jmp        loc_8a21

                     loc_8a69:
0000000000008a69         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
0000000000008a6e         align      16                                          ; End of unwind block (FDE at 0xd29c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000008a70         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd2bc), CODE XREF=rpl_mbrtowc+71
0000000000008a74         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000008a76         call       j_setlocale                                 ; setlocale
0000000000008a7b         mov        rdx, rax
0000000000008a7e         mov        eax, 0x1
0000000000008a83         test       rdx, rdx
0000000000008a86         je         loc_8aa5

0000000000008a88         lea        rdi, qword [__PRETTY_FUNCTION__.3994+12]    ; 0xbc5c
0000000000008a8f         mov        ecx, 0x2
0000000000008a94         mov        rsi, rdx
0000000000008a97         rep  cmpsb byte [rsi], byte [rdi]
0000000000008a99         seta       cl
0000000000008a9c         sbb        cl, 0x0
0000000000008a9f         xor        eax, eax
0000000000008aa1         test       cl, cl
0000000000008aa3         jne        loc_8ab0

                     loc_8aa5:
0000000000008aa5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000008aa9         ret
                        ; endp
0000000000008aaa         align      16

                     loc_8ab0:
0000000000008ab0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000008ab7         mov        ecx, 0x6
0000000000008abc         mov        rsi, rdx
0000000000008abf         rep  cmpsb byte [rsi], byte [rdi]
0000000000008ac1         seta       al
0000000000008ac4         sbb        al, 0x0
0000000000008ac6         test       al, al
0000000000008ac8         setne      al
0000000000008acb         add        rsp, 0x8
0000000000008acf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
0000000000008ad0         cmp        rdi, 0xa                                    ; End of unwind block (FDE at 0xd2bc), Begin of unwind block (FDE at 0xd2dc), CODE XREF=hash_initialize+123, hash_rehash+123
0000000000008ad4         mov        eax, 0xa
0000000000008ad9         movabs     r9, 0xaaaaaaaaaaaaaaab
0000000000008ae3         cmovb      rdi, rax
0000000000008ae7         or         rdi, 0x1
0000000000008aeb         cmp        rdi, 0xffffffffffffffff
0000000000008aef         je         loc_8b5f

0000000000008af1         nop        dword [rax]

                     loc_8af8:
0000000000008af8         mov        rax, rdi                                    ; CODE XREF=next_prime+141
0000000000008afb         mov        rcx, rdi
0000000000008afe         mul        r9
0000000000008b01         mov        rax, rdx
0000000000008b04         shr        rax, 0x1
0000000000008b07         lea        rax, qword [rax+rax*2]
0000000000008b0b         sub        rcx, rax
0000000000008b0e         cmp        rdi, 0x9
0000000000008b12         mov        rax, rcx
0000000000008b15         jbe        loc_8b50

0000000000008b17         test       rcx, rcx
0000000000008b1a         je         loc_8b55

0000000000008b1c         mov        r8d, 0x10
0000000000008b22         mov        esi, 0x9
0000000000008b27         mov        ecx, 0x3
0000000000008b2c         jmp        loc_8b39
0000000000008b2e         align      16

                     loc_8b30:
0000000000008b30         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000008b34         test       rdx, rdx
0000000000008b37         je         loc_8b55

                     loc_8b39:
0000000000008b39         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
0000000000008b3d         xor        edx, edx
0000000000008b3f         mov        rax, rdi
0000000000008b42         div        rcx
0000000000008b45         add        rsi, r8
0000000000008b48         cmp        rsi, rdi
0000000000008b4b         mov        rax, rdx
0000000000008b4e         jb         loc_8b30

                     loc_8b50:
0000000000008b50         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000008b53         jne        loc_8b5f

                     loc_8b55:
0000000000008b55         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000008b59         cmp        rdi, 0xffffffffffffffff
0000000000008b5d         jne        loc_8af8

                     loc_8b5f:
0000000000008b5f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000008b62         ret
                        ; endp
0000000000008b63         align      16                                          ; End of unwind block (FDE at 0xd2dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000008b70         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xd2f0), DATA XREF=hash_initialize+4
0000000000008b73         xor        edx, edx
0000000000008b75         ror        rax, 0x3
0000000000008b79         div        rsi
0000000000008b7c         mov        rax, rdx
0000000000008b7f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
0000000000008b80         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0xd2f0), Begin of unwind block (FDE at 0xd304), DATA XREF=hash_initialize+48
0000000000008b83         sete       al
0000000000008b86         ret
                        ; endp
0000000000008b87         align      16                                          ; End of unwind block (FDE at 0xd304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
0000000000008b90         push       rbx                                         ; Begin of unwind block (FDE at 0xd318), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
0000000000008b91         mov        rbx, rdi
0000000000008b94         mov        rdi, rsi
0000000000008b97         mov        rsi, qword [rbx+0x10]
0000000000008b9b         call       qword [rbx+0x30]
0000000000008b9e         cmp        qword [rbx+0x10], rax
0000000000008ba2         jbe        loc_8bad

0000000000008ba4         shl        rax, 0x4
0000000000008ba8         add        rax, qword [rbx]
0000000000008bab         pop        rbx
0000000000008bac         ret
                        ; endp

                     loc_8bad:
0000000000008bad         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
0000000000008bb2         align      64                                          ; End of unwind block (FDE at 0xd318)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
0000000000008bc0         push       r14                                         ; Begin of unwind block (FDE at 0xd334), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
0000000000008bc2         push       r13
0000000000008bc4         mov        r14, rdx
0000000000008bc7         push       r12
0000000000008bc9         push       rbp
0000000000008bca         mov        r12, rdi
0000000000008bcd         push       rbx
0000000000008bce         mov        rbp, rsi
0000000000008bd1         mov        r13d, ecx
0000000000008bd4         call       safe_hasher                                 ; safe_hasher
0000000000008bd9         mov        qword [r14], rax
0000000000008bdc         mov        rsi, qword [rax]
0000000000008bdf         test       rsi, rsi
0000000000008be2         je         loc_8cd0

0000000000008be8         cmp        rsi, rbp
0000000000008beb         mov        rbx, rax
0000000000008bee         je         loc_8c83

0000000000008bf4         mov        rdi, rbp
0000000000008bf7         call       qword [r12+0x38]
0000000000008bfc         test       al, al
0000000000008bfe         jne        loc_8c80

0000000000008c04         mov        rax, qword [rbx+8]
0000000000008c08         test       rax, rax
0000000000008c0b         je         loc_8cd0

0000000000008c11         mov        rsi, qword [rax]
0000000000008c14         cmp        rbp, rsi
0000000000008c17         jne        loc_8c39

0000000000008c19         jmp        loc_8c4c
0000000000008c1b         align      32

                     loc_8c20:
0000000000008c20         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
0000000000008c24         mov        rax, qword [rbx+8]
0000000000008c28         test       rax, rax
0000000000008c2b         je         loc_8cd0

0000000000008c31         mov        rsi, qword [rax]
0000000000008c34         cmp        rsi, rbp
0000000000008c37         je         loc_8c4c

                     loc_8c39:
0000000000008c39         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
0000000000008c3c         call       qword [r12+0x38]
0000000000008c41         test       al, al
0000000000008c43         je         loc_8c20

0000000000008c45         mov        rax, qword [rbx+8]
0000000000008c49         mov        rsi, qword [rax]

                     loc_8c4c:
0000000000008c4c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
0000000000008c4f         je         loc_8c6e

0000000000008c51         mov        rdx, qword [rax+8]
0000000000008c55         mov        qword [rbx+8], rdx
0000000000008c59         mov        qword [rax], 0x0
0000000000008c60         mov        rdx, qword [r12+0x48]
0000000000008c65         mov        qword [rax+8], rdx
0000000000008c69         mov        qword [r12+0x48], rax

                     loc_8c6e:
0000000000008c6e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
0000000000008c6f         mov        rax, rsi
0000000000008c72         pop        rbp
0000000000008c73         pop        r12
0000000000008c75         pop        r13
0000000000008c77         pop        r14
0000000000008c79         ret
                        ; endp
0000000000008c7a         align      128

                     loc_8c80:
0000000000008c80         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_8c83:
0000000000008c83         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
0000000000008c86         je         loc_8c6e

0000000000008c88         mov        rax, qword [rbx+8]
0000000000008c8c         test       rax, rax
0000000000008c8f         je         loc_8cc0

0000000000008c91         movdqu     xmm0, xmmword [rax]
0000000000008c95         movups     xmmword [rbx], xmm0
0000000000008c98         mov        qword [rax], 0x0
0000000000008c9f         mov        rdx, qword [r12+0x48]
0000000000008ca4         mov        qword [rax+8], rdx
0000000000008ca8         mov        qword [r12+0x48], rax
0000000000008cad         mov        rax, rsi
0000000000008cb0         pop        rbx
0000000000008cb1         pop        rbp
0000000000008cb2         pop        r12
0000000000008cb4         pop        r13
0000000000008cb6         pop        r14
0000000000008cb8         ret
                        ; endp
0000000000008cb9         align      64

                     loc_8cc0:
0000000000008cc0         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
0000000000008cc7         jmp        loc_8c6e
0000000000008cc9         align      16

                     loc_8cd0:
0000000000008cd0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
0000000000008cd2         pop        rbx
0000000000008cd3         mov        rax, rsi
0000000000008cd6         pop        rbp
0000000000008cd7         pop        r12
0000000000008cd9         pop        r13
0000000000008cdb         pop        r14
0000000000008cdd         ret
                        ; endp
0000000000008cde         align      32                                          ; End of unwind block (FDE at 0xd334)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
0000000000008ce0         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xd394), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
0000000000008ce3         lea        rcx, qword [default_tuning]                 ; default_tuning
0000000000008cea         mov        eax, 0x1
0000000000008cef         cmp        rdx, rcx
0000000000008cf2         je         loc_8d55

0000000000008cf4         movss      xmm0, dword [rdx+8]
0000000000008cf9         ucomiss    xmm0, dword [float_bcf4]                    ; float_bcf4
0000000000008d00         jbe        loc_8d50

0000000000008d02         movss      xmm1, dword [float_bcf8]                    ; float_bcf8
0000000000008d0a         ucomiss    xmm1, xmm0
0000000000008d0d         jbe        loc_8d50

0000000000008d0f         movss      xmm1, dword [rdx+0xc]
0000000000008d14         ucomiss    xmm1, dword [float_bcfc]                    ; float_bcfc
0000000000008d1b         jbe        loc_8d50

0000000000008d1d         movss      xmm1, dword [rdx]
0000000000008d21         ucomiss    xmm1, dword [float_bd00]                    ; float_bd00
0000000000008d28         jb         loc_8d50

0000000000008d2a         addss      xmm1, dword [float_bcf4]                    ; float_bcf4
0000000000008d32         movss      xmm2, dword [rdx+4]
0000000000008d37         ucomiss    xmm2, xmm1
0000000000008d3a         jbe        loc_8d50

0000000000008d3c         movss      xmm3, dword [float_bd04]                    ; float_bd04
0000000000008d44         ucomiss    xmm3, xmm2
0000000000008d47         jb         loc_8d50

0000000000008d49         ucomiss    xmm0, xmm1
0000000000008d4c         ja         loc_8d55

0000000000008d4e         nop

                     loc_8d50:
0000000000008d50         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000008d53         xor        eax, eax

                     loc_8d55:
0000000000008d55         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000008d57         align      32                                          ; End of unwind block (FDE at 0xd394)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000008d60         push       r15                                         ; Begin of unwind block (FDE at 0xd3a8), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000008d62         push       r14
0000000000008d64         push       r13
0000000000008d66         push       r12
0000000000008d68         push       rbp
0000000000008d69         push       rbx
0000000000008d6a         sub        rsp, 0x8
0000000000008d6e         mov        r12, qword [rsi]
0000000000008d71         cmp        r12, qword [rsi+8]
0000000000008d75         jae        loc_8e58

0000000000008d7b         mov        rbp, rdi
0000000000008d7e         mov        r13, rsi
0000000000008d81         mov        r14d, edx
0000000000008d84         nop        dword [rax]

                     loc_8d88:
0000000000008d88         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
0000000000008d8c         test       r15, r15
0000000000008d8f         je         loc_8e4a

0000000000008d95         mov        rbx, qword [r12+8]
0000000000008d9a         test       rbx, rbx
0000000000008d9d         jne        loc_8dbc

0000000000008d9f         jmp        loc_8dfb
0000000000008da1         align      8

                     loc_8da8:
0000000000008da8         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
0000000000008dac         test       rdx, rdx
0000000000008daf         mov        qword [rbx+8], rcx
0000000000008db3         mov        qword [rax+8], rbx
0000000000008db7         mov        rbx, rdx
0000000000008dba         je         loc_8df7

                     loc_8dbc:
0000000000008dbc         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
0000000000008dbf         mov        rdi, rbp
0000000000008dc2         mov        rsi, r15
0000000000008dc5         call       safe_hasher                                 ; safe_hasher
0000000000008dca         cmp        qword [rax], 0x0
0000000000008dce         mov        rdx, qword [rbx+8]
0000000000008dd2         jne        loc_8da8

0000000000008dd4         mov        qword [rax], r15
0000000000008dd7         add        qword [rbp+0x18], 0x1
0000000000008ddc         test       rdx, rdx
0000000000008ddf         mov        qword [rbx], 0x0
0000000000008de6         mov        rax, qword [rbp+0x48]
0000000000008dea         mov        qword [rbx+8], rax
0000000000008dee         mov        qword [rbp+0x48], rbx
0000000000008df2         mov        rbx, rdx
0000000000008df5         jne        loc_8dbc

                     loc_8df7:
0000000000008df7         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_8dfb:
0000000000008dfb         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
0000000000008dfe         mov        qword [r12+8], 0x0
0000000000008e07         jne        loc_8e4a

0000000000008e09         mov        rsi, r15
0000000000008e0c         mov        rdi, rbp
0000000000008e0f         call       safe_hasher                                 ; safe_hasher
0000000000008e14         cmp        qword [rax], 0x0
0000000000008e18         mov        rbx, rax
0000000000008e1b         je         loc_8e70

0000000000008e1d         mov        rax, qword [rbp+0x48]
0000000000008e21         test       rax, rax
0000000000008e24         je         loc_8e80

0000000000008e26         mov        rdx, qword [rax+8]
0000000000008e2a         mov        qword [rbp+0x48], rdx

                     loc_8e2e:
0000000000008e2e         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
0000000000008e32         mov        qword [rax], r15
0000000000008e35         mov        qword [rax+8], rdx
0000000000008e39         mov        qword [rbx+8], rax

                     loc_8e3d:
0000000000008e3d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
0000000000008e45         sub        qword [r13+0x18], 0x1

                     loc_8e4a:
0000000000008e4a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
0000000000008e4e         cmp        qword [r13+8], r12
0000000000008e52         ja         loc_8d88

                     loc_8e58:
0000000000008e58         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
0000000000008e5c         mov        eax, 0x1
0000000000008e61         pop        rbx
0000000000008e62         pop        rbp
0000000000008e63         pop        r12
0000000000008e65         pop        r13
0000000000008e67         pop        r14
0000000000008e69         pop        r15
0000000000008e6b         ret
                        ; endp
0000000000008e6c         align      16

                     loc_8e70:
0000000000008e70         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000008e73         add        qword [rbp+0x18], 0x1
0000000000008e78         jmp        loc_8e3d
0000000000008e7a         align      128

                     loc_8e80:
0000000000008e80         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000008e85         call       j_malloc                                    ; malloc
0000000000008e8a         test       rax, rax
0000000000008e8d         jne        loc_8e2e

0000000000008e8f         add        rsp, 0x8
0000000000008e93         xor        eax, eax
0000000000008e95         pop        rbx
0000000000008e96         pop        rbp
0000000000008e97         pop        r12
0000000000008e99         pop        r13
0000000000008e9b         pop        r14
0000000000008e9d         pop        r15
0000000000008e9f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000008ea0         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0xd3a8), Begin of unwind block (FDE at 0xd408)
0000000000008ea4         ret
                        ; endp
0000000000008ea5         align      16                                          ; End of unwind block (FDE at 0xd408)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000008eb0         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0xd41c)
0000000000008eb4         ret
                        ; endp
0000000000008eb5         align      64                                          ; End of unwind block (FDE at 0xd41c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
0000000000008ec0         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0xd430)
0000000000008ec4         ret
                        ; endp
0000000000008ec5         align      16                                          ; End of unwind block (FDE at 0xd430)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
0000000000008ed0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0xd444)
0000000000008ed3         mov        rdi, qword [rdi+8]
0000000000008ed7         xor        eax, eax
0000000000008ed9         cmp        rsi, rdi
0000000000008edc         jae        loc_8f17

0000000000008ede         nop

                     loc_8ee0:
0000000000008ee0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
0000000000008ee4         je         loc_8f0c

0000000000008ee6         mov        rdx, qword [rsi+8]
0000000000008eea         mov        ecx, 0x1
0000000000008eef         test       rdx, rdx
0000000000008ef2         je         loc_8f05

0000000000008ef4         nop        dword [rax]

                     loc_8ef8:
0000000000008ef8         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
0000000000008efc         add        rcx, 0x1
0000000000008f00         test       rdx, rdx
0000000000008f03         jne        loc_8ef8

                     loc_8f05:
0000000000008f05         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
0000000000008f08         cmovb      rax, rcx

                     loc_8f0c:
0000000000008f0c         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
0000000000008f10         cmp        rsi, rdi
0000000000008f13         jb         loc_8ee0

0000000000008f15         ret
                        ; endp

                     loc_8f17:
0000000000008f17         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
0000000000008f19         align      32                                          ; End of unwind block (FDE at 0xd444)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
0000000000008f20         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0xd458)
0000000000008f23         mov        r8, qword [rdi+8]
0000000000008f27         xor        edx, edx
0000000000008f29         xor        esi, esi
0000000000008f2b         cmp        rcx, r8
0000000000008f2e         jae        loc_8f66

                     loc_8f30:
0000000000008f30         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
0000000000008f34         je         loc_8f5d

0000000000008f36         mov        rax, qword [rcx+8]
0000000000008f3a         add        rsi, 0x1
0000000000008f3e         add        rdx, 0x1
0000000000008f42         test       rax, rax
0000000000008f45         je         loc_8f5d

0000000000008f47         nop        word [rax+rax]

                     loc_8f50:
0000000000008f50         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
0000000000008f54         add        rdx, 0x1
0000000000008f58         test       rax, rax
0000000000008f5b         jne        loc_8f50

                     loc_8f5d:
0000000000008f5d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
0000000000008f61         cmp        rcx, r8
0000000000008f64         jb         loc_8f30

                     loc_8f66:
0000000000008f66         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
0000000000008f68         cmp        qword [rdi+0x18], rsi
0000000000008f6c         je         loc_8f70

0000000000008f6e         ret
                        ; endp

                     loc_8f70:
0000000000008f70         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000008f74         sete       al
0000000000008f77         ret
                        ; endp
0000000000008f78         align      128                                         ; End of unwind block (FDE at 0xd458)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000008f80         push       r13                                         ; Begin of unwind block (FDE at 0xd46c)
0000000000008f82         push       r12
0000000000008f84         mov        r12, rsi
0000000000008f87         push       rbp
0000000000008f88         push       rbx
0000000000008f89         xor        ebx, ebx
0000000000008f8b         sub        rsp, 0x8
0000000000008f8f         mov        rsi, qword [rdi]
0000000000008f92         mov        rcx, qword [rdi+0x20]
0000000000008f96         mov        rbp, qword [rdi+0x10]
0000000000008f9a         mov        r13, qword [rdi+0x18]
0000000000008f9e         mov        rdi, qword [rdi+8]
0000000000008fa2         cmp        rsi, rdi
0000000000008fa5         jae        loc_8fe5

0000000000008fa7         nop        word [rax+rax]

                     loc_8fb0:
0000000000008fb0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000008fb4         je         loc_8fdc

0000000000008fb6         mov        rax, qword [rsi+8]
0000000000008fba         mov        edx, 0x1
0000000000008fbf         test       rax, rax
0000000000008fc2         je         loc_8fd5

0000000000008fc4         nop        dword [rax]

                     loc_8fc8:
0000000000008fc8         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
0000000000008fcc         add        rdx, 0x1
0000000000008fd0         test       rax, rax
0000000000008fd3         jne        loc_8fc8

                     loc_8fd5:
0000000000008fd5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
0000000000008fd8         cmovb      rbx, rdx

                     loc_8fdc:
0000000000008fdc         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
0000000000008fe0         cmp        rsi, rdi
0000000000008fe3         jb         loc_8fb0

                     loc_8fe5:
0000000000008fe5         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
0000000000008fec         mov        esi, 0x1
0000000000008ff1         mov        rdi, r12
0000000000008ff4         xor        eax, eax
0000000000008ff6         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008ffb         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
0000000000009002         xor        eax, eax
0000000000009004         mov        rcx, rbp
0000000000009007         mov        esi, 0x1
000000000000900c         mov        rdi, r12
000000000000900f         call       j___fprintf_chk                             ; __fprintf_chk
0000000000009014         test       r13, r13
0000000000009017         js         loc_9080

0000000000009019         pxor       xmm0, xmm0
000000000000901d         test       rbp, rbp
0000000000009020         cvtsi2sd   xmm0, r13
0000000000009025         mulsd      xmm0, qword [float_bd10+8]                  ; 0xbd18
000000000000902d         js         loc_90a9

                     loc_902f:
000000000000902f         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
0000000000009033         cvtsi2sd   xmm1, rbp

                     loc_9038:
0000000000009038         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000903c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
0000000000009043         mov        rcx, r13
0000000000009046         mov        rdi, r12
0000000000009049         mov        esi, 0x1
000000000000904e         mov        eax, 0x1
0000000000009053         call       j___fprintf_chk                             ; __fprintf_chk
0000000000009058         add        rsp, 0x8
000000000000905c         mov        rcx, rbx
000000000000905f         mov        rdi, r12
0000000000009062         pop        rbx
0000000000009063         pop        rbp
0000000000009064         pop        r12
0000000000009066         pop        r13
0000000000009068         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000906f         mov        esi, 0x1
0000000000009074         xor        eax, eax
0000000000009076         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000907b         align      128

                     loc_9080:
0000000000009080         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000009083         mov        rdx, r13
0000000000009086         pxor       xmm0, xmm0
000000000000908a         shr        rax, 0x1
000000000000908d         and        edx, 0x1
0000000000009090         or         rax, rdx
0000000000009093         test       rbp, rbp
0000000000009096         cvtsi2sd   xmm0, rax
000000000000909b         addsd      xmm0, xmm0
000000000000909f         mulsd      xmm0, qword [float_bd10+8]                  ; 0xbd18
00000000000090a7         jns        loc_902f

                     loc_90a9:
00000000000090a9         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
00000000000090ac         pxor       xmm1, xmm1
00000000000090b0         shr        rax, 0x1
00000000000090b3         and        ebp, 0x1
00000000000090b6         or         rax, rbp
00000000000090b9         cvtsi2sd   xmm1, rax
00000000000090be         addsd      xmm1, xmm1
00000000000090c2         jmp        loc_9038
00000000000090c7         align      16                                          ; End of unwind block (FDE at 0xd46c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
00000000000090d0         push       r12                                         ; Begin of unwind block (FDE at 0xd4a8), CODE XREF=filesystem_type+71
00000000000090d2         push       rbp
00000000000090d3         mov        r12, rdi
00000000000090d6         push       rbx
00000000000090d7         mov        rbp, rsi
00000000000090da         call       safe_hasher                                 ; safe_hasher
00000000000090df         mov        rsi, qword [rax]
00000000000090e2         test       rsi, rsi
00000000000090e5         je         loc_910d

00000000000090e7         mov        rbx, rax
00000000000090ea         jmp        loc_90f3
00000000000090ec         align      16

                     loc_90f0:
00000000000090f0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_90f3:
00000000000090f3         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
00000000000090f6         je         loc_910f

00000000000090f8         mov        rdi, rbp
00000000000090fb         call       qword [r12+0x38]
0000000000009100         test       al, al
0000000000009102         jne        loc_9120

0000000000009104         mov        rbx, qword [rbx+8]
0000000000009108         test       rbx, rbx
000000000000910b         jne        loc_90f0

                     loc_910d:
000000000000910d         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_910f:
000000000000910f         pop        rbx                                         ; CODE XREF=hash_lookup+38
0000000000009110         mov        rax, rsi
0000000000009113         pop        rbp
0000000000009114         pop        r12
0000000000009116         ret
                        ; endp
0000000000009117         align      32

                     loc_9120:
0000000000009120         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
0000000000009123         pop        rbx
0000000000009124         pop        rbp
0000000000009125         mov        rax, rsi
0000000000009128         pop        r12
000000000000912a         ret
                        ; endp
000000000000912b         align      16                                          ; End of unwind block (FDE at 0xd4a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
0000000000009130         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0xd4e0)
0000000000009135         je         loc_9163

0000000000009137         mov        rdx, qword [rdi]
000000000000913a         mov        rcx, qword [rdi+8]
000000000000913e         cmp        rdx, rcx
0000000000009141         jae        loc_9168

0000000000009143         mov        rax, qword [rdx]
0000000000009146         test       rax, rax
0000000000009149         jne        loc_9166

000000000000914b         nop        dword [rax+rax]

                     loc_9150:
0000000000009150         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
0000000000009154         cmp        rdx, rcx
0000000000009157         jae        loc_9168

0000000000009159         mov        rax, qword [rdx]
000000000000915c         test       rax, rax
000000000000915f         je         loc_9150

0000000000009161         ret
                        ; endp

                     loc_9163:
0000000000009163         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
0000000000009165         ret
                        ; endp

                     loc_9166:
0000000000009166         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_9168:
0000000000009168         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000916c         call       j_abort                                     ; abort
                        ; endp
0000000000009171         align      128                                         ; End of unwind block (FDE at 0xd4e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000009180         push       rbp                                         ; Begin of unwind block (FDE at 0xd4f4)
0000000000009181         push       rbx
0000000000009182         mov        rbp, rdi
0000000000009185         mov        rbx, rsi
0000000000009188         sub        rsp, 0x8
000000000000918c         call       safe_hasher                                 ; safe_hasher
0000000000009191         mov        rdx, rax
0000000000009194         mov        rcx, rax
0000000000009197         mov        rax, qword [rdx]
000000000000919a         mov        rdx, qword [rdx+8]
000000000000919e         cmp        rax, rbx
00000000000091a1         je         loc_91b9

00000000000091a3         nop        dword [rax+rax]

                     loc_91a8:
00000000000091a8         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
00000000000091ab         je         loc_91be

00000000000091ad         mov        rax, qword [rdx]
00000000000091b0         mov        rdx, qword [rdx+8]
00000000000091b4         cmp        rax, rbx
00000000000091b7         jne        loc_91a8

                     loc_91b9:
00000000000091b9         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
00000000000091bc         jne        loc_91e8

                     loc_91be:
00000000000091be         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
00000000000091c2         jmp        loc_91d0
00000000000091c4         align      8

                     loc_91c8:
00000000000091c8         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
00000000000091cb         test       rax, rax
00000000000091ce         jne        loc_91db

                     loc_91d0:
00000000000091d0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
00000000000091d4         cmp        rdx, rcx
00000000000091d7         ja         loc_91c8

00000000000091d9         xor        eax, eax

                     loc_91db:
00000000000091db         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
00000000000091df         pop        rbx
00000000000091e0         pop        rbp
00000000000091e1         ret
                        ; endp
00000000000091e2         align      8

                     loc_91e8:
00000000000091e8         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
00000000000091eb         add        rsp, 0x8
00000000000091ef         pop        rbx
00000000000091f0         pop        rbp
00000000000091f1         ret
                        ; endp
00000000000091f2         align      512                                         ; End of unwind block (FDE at 0xd4f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
0000000000009200         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0xd528)
0000000000009203         cmp        qword [rdi+8], r9
0000000000009207         jbe        loc_9262

0000000000009209         xor        r8d, r8d

                     loc_920c:
000000000000920c         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
000000000000920f         test       rcx, rcx
0000000000009212         je         loc_924d

0000000000009214         cmp        rdx, r8
0000000000009217         jbe        loc_9257

0000000000009219         mov        qword [rsi+r8*8], rcx
000000000000921d         mov        rcx, qword [r9+8]
0000000000009221         lea        rax, qword [r8+1]
0000000000009225         test       rcx, rcx
0000000000009228         je         loc_924a

000000000000922a         nop        word [rax+rax]

                     loc_9230:
0000000000009230         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
0000000000009233         je         loc_9260

0000000000009235         mov        r8, qword [rcx]
0000000000009238         add        rax, 0x1
000000000000923c         mov        qword [rsi+rax*8-8], r8
0000000000009241         mov        rcx, qword [rcx+8]
0000000000009245         test       rcx, rcx
0000000000009248         jne        loc_9230

                     loc_924a:
000000000000924a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_924d:
000000000000924d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
0000000000009251         cmp        qword [rdi+8], r9
0000000000009255         ja         loc_920c

                     loc_9257:
0000000000009257         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
000000000000925a         ret
                        ; endp
000000000000925b         align      32

                     loc_9260:
0000000000009260         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_9262:
0000000000009262         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
0000000000009264         ret
                        ; endp
0000000000009265         align      16                                          ; End of unwind block (FDE at 0xd528)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000009270         push       r15                                         ; Begin of unwind block (FDE at 0xd53c)
0000000000009272         push       r14
0000000000009274         push       r13
0000000000009276         push       r12
0000000000009278         push       rbp
0000000000009279         push       rbx
000000000000927a         sub        rsp, 0x8
000000000000927e         mov        r14, qword [rdi]
0000000000009281         cmp        qword [rdi+8], r14
0000000000009285         jbe        loc_92d6

0000000000009287         mov        r13, rdx
000000000000928a         mov        r12, rsi
000000000000928d         mov        r15, rdi
0000000000009290         xor        ebp, ebp

                     loc_9292:
0000000000009292         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000009295         test       rdi, rdi
0000000000009298         je         loc_92ba

000000000000929a         mov        rbx, r14
000000000000929d         jmp        loc_92a3
000000000000929f         align      32

                     loc_92a0:
00000000000092a0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_92a3:
00000000000092a3         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
00000000000092a6         call       r12
00000000000092a9         test       al, al
00000000000092ab         je         loc_92c4

00000000000092ad         mov        rbx, qword [rbx+8]
00000000000092b1         add        rbp, 0x1
00000000000092b5         test       rbx, rbx
00000000000092b8         jne        loc_92a0

                     loc_92ba:
00000000000092ba         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
00000000000092be         cmp        qword [r15+8], r14
00000000000092c2         ja         loc_9292

                     loc_92c4:
00000000000092c4         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
00000000000092c8         mov        rax, rbp
00000000000092cb         pop        rbx
00000000000092cc         pop        rbp
00000000000092cd         pop        r12
00000000000092cf         pop        r13
00000000000092d1         pop        r14
00000000000092d3         pop        r15
00000000000092d5         ret
                        ; endp

                     loc_92d6:
00000000000092d6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
00000000000092d8         jmp        loc_92c4
00000000000092da         align      32                                          ; End of unwind block (FDE at 0xd53c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
00000000000092e0         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0xd588)
00000000000092e3         xor        edx, edx
00000000000092e5         test       cl, cl
00000000000092e7         je         loc_930d

00000000000092e9         nop        dword [rax]

                     loc_92f0:
00000000000092f0         mov        rax, rdx                                    ; CODE XREF=hash_string+43
00000000000092f3         add        rdi, 0x1
00000000000092f7         shl        rax, 0x5
00000000000092fb         sub        rax, rdx
00000000000092fe         xor        edx, edx
0000000000009300         add        rax, rcx
0000000000009303         movzx      ecx, byte [rdi]
0000000000009306         div        rsi
0000000000009309         test       cl, cl
000000000000930b         jne        loc_92f0

                     loc_930d:
000000000000930d         mov        rax, rdx                                    ; CODE XREF=hash_string+7
0000000000009310         ret
                        ; endp
0000000000009311         align      32                                          ; End of unwind block (FDE at 0xd588)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
0000000000009320         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0xd59c)
000000000000932a         mov        byte [rdi+0x10], 0x0
000000000000932e         mov        qword [rdi], rax
0000000000009331         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000933b         mov        qword [rdi+8], rax
000000000000933f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
0000000000009340         push       r15                                         ; End of unwind block (FDE at 0xd59c), Begin of unwind block (FDE at 0xd5b0), CODE XREF=filesystem_type+124, setup_dir.isra.4+40
0000000000009342         push       r14
0000000000009344         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000934b         push       r13
000000000000934d         push       r12
000000000000934f         mov        r12, rdx
0000000000009352         push       rbp
0000000000009353         push       rbx
0000000000009354         mov        r13, rcx
0000000000009357         mov        rbp, rdi
000000000000935a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
000000000000935f         mov        r15, rsi
0000000000009362         sub        rsp, 0x8
0000000000009366         test       rdx, rdx
0000000000009369         mov        r14, r8
000000000000936c         cmove      r12, rax
0000000000009370         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000009377         test       rcx, rcx
000000000000937a         cmove      r13, rax
000000000000937e         call       j_malloc                                    ; malloc
0000000000009383         test       rax, rax
0000000000009386         mov        rbx, rax
0000000000009389         je         loc_943a

000000000000938f         test       r15, r15
0000000000009392         lea        rdi, qword [rax+0x28]
0000000000009396         je         loc_9450

000000000000939c         mov        qword [rax+0x28], r15
00000000000093a0         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000093a5         test       al, al
00000000000093a7         je         loc_9430

00000000000093ad         cmp        byte [r15+0x10], 0x0
00000000000093b2         je         loc_94b0

                     loc_93b8:
00000000000093b8         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
00000000000093bb         call       next_prime                                  ; next_prime
00000000000093c0         mov        edx, 0x8
00000000000093c5         mov        rbp, rax
00000000000093c8         xor        ecx, ecx
00000000000093ca         mov        rax, rdx
00000000000093cd         mul        rbp
00000000000093d0         jo         loc_94ea

                     loc_93d6:
00000000000093d6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
00000000000093d9         js         loc_9430

00000000000093db         test       rcx, rcx
00000000000093de         jne        loc_9430

00000000000093e0         test       rbp, rbp
00000000000093e3         mov        qword [rbx+0x10], rbp
00000000000093e7         je         loc_9430

00000000000093e9         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
00000000000093ee         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
00000000000093f1         call       j_calloc                                    ; calloc
00000000000093f6         test       rax, rax
00000000000093f9         mov        qword [rbx], rax
00000000000093fc         je         loc_9430

00000000000093fe         shl        rbp, 0x4
0000000000009402         mov        qword [rbx+0x18], 0x0
000000000000940a         mov        qword [rbx+0x20], 0x0
0000000000009412         add        rbp, rax
0000000000009415         mov        qword [rbx+0x30], r12
0000000000009419         mov        qword [rbx+0x38], r13
000000000000941d         mov        qword [rbx+8], rbp
0000000000009421         mov        qword [rbx+0x40], r14
0000000000009425         mov        qword [rbx+0x48], 0x0
000000000000942d         jmp        loc_943a
000000000000942f         align      16

                     loc_9430:
0000000000009430         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
0000000000009433         xor        ebx, ebx
0000000000009435         call       sub_1d30                                    ; sub_1d30

                     loc_943a:
000000000000943a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000943e         mov        rax, rbx
0000000000009441         pop        rbx
0000000000009442         pop        rbp
0000000000009443         pop        r12
0000000000009445         pop        r13
0000000000009447         pop        r14
0000000000009449         pop        r15
000000000000944b         ret
                        ; endp
000000000000944c         align      16

                     loc_9450:
0000000000009450         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
0000000000009457         mov        qword [rbx+0x28], rax
000000000000945b         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000009460         test       al, al
0000000000009462         movss      xmm1, dword [float_bd08]                    ; float_bd08
000000000000946a         je         loc_9430

000000000000946c         test       rbp, rbp
000000000000946f         js         loc_94bb

                     loc_9471:
0000000000009471         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000009475         cvtsi2ss   xmm0, rbp

                     loc_947a:
000000000000947a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000947e         ucomiss    xmm0, dword [float_bd0c]                    ; float_bd0c
0000000000009485         jae        loc_9430

0000000000009487         ucomiss    xmm0, dword [float_bd10]                    ; float_bd10
000000000000948e         jb         loc_94e0

0000000000009490         subss      xmm0, dword [float_bd10]                    ; float_bd10
0000000000009498         movabs     rax, 0x8000000000000000
00000000000094a2         cvttss2si  rbp, xmm0
00000000000094a7         xor        rbp, rax
00000000000094aa         jmp        loc_93b8
00000000000094af         align      16

                     loc_94b0:
00000000000094b0         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
00000000000094b3         movss      xmm1, dword [r15+8]
00000000000094b9         jns        loc_9471

                     loc_94bb:
00000000000094bb         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
00000000000094be         pxor       xmm0, xmm0
00000000000094c2         shr        rax, 0x1
00000000000094c5         and        ebp, 0x1
00000000000094c8         or         rax, rbp
00000000000094cb         cvtsi2ss   xmm0, rax
00000000000094d0         addss      xmm0, xmm0
00000000000094d4         jmp        loc_947a
00000000000094d6         align      32

                     loc_94e0:
00000000000094e0         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
00000000000094e5         jmp        loc_93b8

                     loc_94ea:
00000000000094ea         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
00000000000094ef         jmp        loc_93d6
00000000000094f4         align      256                                         ; End of unwind block (FDE at 0xd5b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
0000000000009500         push       r12                                         ; Begin of unwind block (FDE at 0xd5fc)
0000000000009502         push       rbp
0000000000009503         mov        rbp, rdi
0000000000009506         push       rbx
0000000000009507         mov        r12, qword [rdi]
000000000000950a         cmp        r12, qword [rdi+8]
000000000000950e         jae        loc_957b

                     loc_9510:
0000000000009510         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
0000000000009515         je         loc_9571

0000000000009517         mov        rbx, qword [r12+8]
000000000000951c         mov        rax, qword [rbp+0x40]
0000000000009520         test       rbx, rbx
0000000000009523         je         loc_9555

0000000000009525         nop        dword [rax]

                     loc_9528:
0000000000009528         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000952b         je         loc_9536

000000000000952d         mov        rdi, qword [rbx]
0000000000009530         call       rax
0000000000009532         mov        rax, qword [rbp+0x40]

                     loc_9536:
0000000000009536         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000953a         mov        rcx, qword [rbp+0x48]
000000000000953e         mov        qword [rbx], 0x0
0000000000009545         test       rdx, rdx
0000000000009548         mov        qword [rbx+8], rcx
000000000000954c         mov        qword [rbp+0x48], rbx
0000000000009550         mov        rbx, rdx
0000000000009553         jne        loc_9528

                     loc_9555:
0000000000009555         test       rax, rax                                    ; CODE XREF=hash_clear+35
0000000000009558         je         loc_9560

000000000000955a         mov        rdi, qword [r12]
000000000000955e         call       rax

                     loc_9560:
0000000000009560         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
0000000000009568         mov        qword [r12+8], 0x0

                     loc_9571:
0000000000009571         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000009575         cmp        qword [rbp+8], r12
0000000000009579         ja         loc_9510

                     loc_957b:
000000000000957b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
0000000000009583         mov        qword [rbp+0x20], 0x0
000000000000958b         pop        rbx
000000000000958c         pop        rbp
000000000000958d         pop        r12
000000000000958f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
0000000000009590         push       r12                                         ; End of unwind block (FDE at 0xd5fc), Begin of unwind block (FDE at 0xd628), CODE XREF=rpl_fts_close+154, rpl_fts_close+177, rpl_fts_read+713
0000000000009592         push       rbp
0000000000009593         mov        r12, rdi
0000000000009596         push       rbx
0000000000009597         cmp        qword [rdi+0x40], 0x0
000000000000959c         mov        rbp, qword [rdi]
000000000000959f         mov        rax, qword [rdi+8]
00000000000095a3         je         loc_95f3

00000000000095a5         cmp        qword [rdi+0x20], 0x0
00000000000095aa         je         loc_95f3

00000000000095ac         cmp        rbp, rax
00000000000095af         jae        loc_962c

00000000000095b1         nop        dword [rax]

                     loc_95b8:
00000000000095b8         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
00000000000095bc         test       rdi, rdi
00000000000095bf         je         loc_95e6

00000000000095c1         mov        rbx, rbp
00000000000095c4         jmp        loc_95d3
00000000000095c6         align      16

                     loc_95d0:
00000000000095d0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_95d3:
00000000000095d3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
00000000000095d8         mov        rbx, qword [rbx+8]
00000000000095dc         test       rbx, rbx
00000000000095df         jne        loc_95d0

00000000000095e1         mov        rax, qword [r12+8]

                     loc_95e6:
00000000000095e6         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
00000000000095ea         cmp        rax, rbp
00000000000095ed         ja         loc_95b8

00000000000095ef         mov        rbp, qword [r12]

                     loc_95f3:
00000000000095f3         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
00000000000095f6         jae        loc_962c

00000000000095f8         nop        dword [rax+rax]

                     loc_9600:
0000000000009600         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
0000000000009604         test       rdi, rdi
0000000000009607         je         loc_9621

0000000000009609         nop        dword [rax]

                     loc_9610:
0000000000009610         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
0000000000009614         call       sub_1d30                                    ; sub_1d30
0000000000009619         test       rbx, rbx
000000000000961c         mov        rdi, rbx
000000000000961f         jne        loc_9610

                     loc_9621:
0000000000009621         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
0000000000009625         cmp        qword [r12+8], rbp
000000000000962a         ja         loc_9600

                     loc_962c:
000000000000962c         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
0000000000009631         test       rdi, rdi
0000000000009634         je         loc_9651

0000000000009636         nop        word [cs:rax+rax]

                     loc_9640:
0000000000009640         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
0000000000009644         call       sub_1d30                                    ; sub_1d30
0000000000009649         test       rbx, rbx
000000000000964c         mov        rdi, rbx
000000000000964f         jne        loc_9640

                     loc_9651:
0000000000009651         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
0000000000009655         call       sub_1d30                                    ; sub_1d30
000000000000965a         pop        rbx
000000000000965b         mov        rdi, r12
000000000000965e         pop        rbp
000000000000965f         pop        r12
0000000000009661         jmp        sub_1d30                                    ; sub_1d30
                        ; endp
0000000000009666         align      16                                          ; End of unwind block (FDE at 0xd628)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000009670         push       r12                                         ; Begin of unwind block (FDE at 0xd654), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000009672         push       rbp
0000000000009673         mov        rbp, rdi
0000000000009676         push       rbx
0000000000009677         sub        rsp, 0x60
000000000000967b         mov        r12, qword [rdi+0x28]
000000000000967f         mov        rax, qword [fs:0x28]
0000000000009688         mov        qword [rsp+0x78+var_20], rax
000000000000968d         xor        eax, eax
000000000000968f         cmp        byte [r12+0x10], 0x0
0000000000009695         jne        loc_96e8

0000000000009697         test       rsi, rsi
000000000000969a         js         loc_9818

00000000000096a0         pxor       xmm0, xmm0
00000000000096a4         cvtsi2ss   xmm0, rsi

                     loc_96a9:
00000000000096a9         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
00000000000096b0         ucomiss    xmm0, dword [float_bd0c]                    ; float_bd0c
00000000000096b7         jae        loc_97f0

00000000000096bd         ucomiss    xmm0, dword [float_bd10]                    ; float_bd10
00000000000096c4         jb         loc_9840

00000000000096ca         subss      xmm0, dword [float_bd10]                    ; float_bd10
00000000000096d2         movabs     rax, 0x8000000000000000
00000000000096dc         cvttss2si  rsi, xmm0
00000000000096e1         xor        rsi, rax
00000000000096e4         nop        dword [rax]

                     loc_96e8:
00000000000096e8         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
00000000000096eb         call       next_prime                                  ; next_prime
00000000000096f0         mov        edx, 0x8
00000000000096f5         mov        rbx, rax
00000000000096f8         xor        ecx, ecx
00000000000096fa         mov        rax, rdx
00000000000096fd         mul        rbx
0000000000009700         jo         loc_989f

                     loc_9706:
0000000000009706         test       rax, rax                                    ; CODE XREF=hash_rehash+564
0000000000009709         mov        eax, 0x1
000000000000970e         cmovs      rcx, rax
0000000000009712         test       rbx, rbx
0000000000009715         je         loc_97f0

000000000000971b         and        ecx, 0x1
000000000000971e         jne        loc_97f0

0000000000009724         cmp        qword [rbp+0x10], rbx
0000000000009728         je         loc_9850

000000000000972e         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000009733         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
0000000000009736         call       j_calloc                                    ; calloc
000000000000973b         test       rax, rax
000000000000973e         mov        qword [rsp+0x78+var_78], rax
0000000000009742         je         loc_97f0

0000000000009748         mov        qword [rsp+0x78+var_68], rbx
000000000000974d         shl        rbx, 0x4
0000000000009751         mov        qword [rsp+0x78+var_50], r12
0000000000009756         add        rbx, rax
0000000000009759         mov        rax, qword [rbp+0x30]
000000000000975d         mov        r12, rsp
0000000000009760         xor        edx, edx
0000000000009762         mov        rsi, rbp
0000000000009765         mov        rdi, r12
0000000000009768         mov        qword [rsp+0x78+var_70], rbx
000000000000976d         mov        qword [rsp+0x78+var_60], 0x0
0000000000009776         mov        qword [rsp+0x78+var_48], rax
000000000000977b         mov        rax, qword [rbp+0x38]
000000000000977f         mov        qword [rsp+0x78+var_58], 0x0
0000000000009788         mov        qword [rsp+0x78+var_40], rax
000000000000978d         mov        rax, qword [rbp+0x40]
0000000000009791         mov        qword [rsp+0x78+var_38], rax
0000000000009796         mov        rax, qword [rbp+0x48]
000000000000979a         mov        qword [rsp+0x78+var_30], rax
000000000000979f         call       transfer_entries                            ; transfer_entries
00000000000097a4         test       al, al
00000000000097a6         mov        ebx, eax
00000000000097a8         jne        loc_9860

00000000000097ae         mov        rax, qword [rsp+0x78+var_30]
00000000000097b3         mov        edx, 0x1
00000000000097b8         mov        rsi, r12
00000000000097bb         mov        rdi, rbp
00000000000097be         mov        qword [rbp+0x48], rax
00000000000097c2         call       transfer_entries                            ; transfer_entries
00000000000097c7         test       al, al
00000000000097c9         je         loc_98a9

00000000000097cf         xor        edx, edx
00000000000097d1         mov        rsi, r12
00000000000097d4         mov        rdi, rbp
00000000000097d7         call       transfer_entries                            ; transfer_entries
00000000000097dc         test       al, al
00000000000097de         je         loc_98a9

00000000000097e4         mov        rdi, qword [rsp+0x78+var_78]
00000000000097e8         call       sub_1d30                                    ; sub_1d30
00000000000097ed         jmp        loc_97f2
00000000000097ef         align      16

                     loc_97f0:
00000000000097f0         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_97f2:
00000000000097f2         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
00000000000097f7         xor        rcx, qword [fs:0x28]
0000000000009800         mov        eax, ebx
0000000000009802         jne        loc_989a

0000000000009808         add        rsp, 0x60
000000000000980c         pop        rbx
000000000000980d         pop        rbp
000000000000980e         pop        r12
0000000000009810         ret
                        ; endp
0000000000009811         align      8

                     loc_9818:
0000000000009818         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
000000000000981b         pxor       xmm0, xmm0
000000000000981f         shr        rax, 0x1
0000000000009822         and        esi, 0x1
0000000000009825         or         rax, rsi
0000000000009828         cvtsi2ss   xmm0, rax
000000000000982d         addss      xmm0, xmm0
0000000000009831         jmp        loc_96a9
0000000000009836         align      64

                     loc_9840:
0000000000009840         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000009845         jmp        loc_96e8
000000000000984a         align      16

                     loc_9850:
0000000000009850         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000009855         jmp        loc_97f2
0000000000009857         align      32

                     loc_9860:
0000000000009860         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
0000000000009864         call       sub_1d30                                    ; sub_1d30
0000000000009869         mov        rax, qword [rsp+0x78+var_78]
000000000000986d         mov        qword [rbp], rax
0000000000009871         mov        rax, qword [rsp+0x78+var_70]
0000000000009876         mov        qword [rbp+8], rax
000000000000987a         mov        rax, qword [rsp+0x78+var_68]
000000000000987f         mov        qword [rbp+0x10], rax
0000000000009883         mov        rax, qword [rsp+0x78+var_60]
0000000000009888         mov        qword [rbp+0x18], rax
000000000000988c         mov        rax, qword [rsp+0x78+var_30]
0000000000009891         mov        qword [rbp+0x48], rax
0000000000009895         jmp        loc_97f2

                     loc_989a:
000000000000989a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_989f:
000000000000989f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
00000000000098a4         jmp        loc_9706

                     loc_98a9:
00000000000098a9         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
00000000000098ae         align      16                                          ; End of unwind block (FDE at 0xd654)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
00000000000098b0         push       r13                                         ; Begin of unwind block (FDE at 0xd68c), CODE XREF=hash_insert+27
00000000000098b2         push       r12
00000000000098b4         push       rbp
00000000000098b5         push       rbx
00000000000098b6         sub        rsp, 0x18
00000000000098ba         mov        rax, qword [fs:0x28]
00000000000098c3         mov        qword [rsp+0x38+var_30], rax
00000000000098c8         xor        eax, eax
00000000000098ca         test       rsi, rsi
00000000000098cd         je         loc_9a8d

00000000000098d3         mov        r12, rsp
00000000000098d6         xor        ecx, ecx
00000000000098d8         mov        r13, rdx
00000000000098db         mov        rdx, r12
00000000000098de         mov        rbx, rdi
00000000000098e1         mov        rbp, rsi
00000000000098e4         call       hash_find_entry                             ; hash_find_entry
00000000000098e9         test       rax, rax
00000000000098ec         mov        rdx, rax
00000000000098ef         je         loc_9920

00000000000098f1         xor        eax, eax
00000000000098f3         test       r13, r13
00000000000098f6         je         loc_98fc

00000000000098f8         mov        qword [r13], rdx

                     loc_98fc:
00000000000098fc         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
0000000000009901         xor        rcx, qword [fs:0x28]
000000000000990a         jne        loc_9b2f

0000000000009910         add        rsp, 0x18
0000000000009914         pop        rbx
0000000000009915         pop        rbp
0000000000009916         pop        r12
0000000000009918         pop        r13
000000000000991a         ret
                        ; endp
000000000000991b         align      32

                     loc_9920:
0000000000009920         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
0000000000009924         test       rax, rax
0000000000009927         js         loc_99a0

0000000000009929         pxor       xmm1, xmm1
000000000000992d         mov        rdx, qword [rbx+0x28]
0000000000009931         cvtsi2ss   xmm1, rax
0000000000009936         mov        rax, qword [rbx+0x10]
000000000000993a         test       rax, rax
000000000000993d         js         loc_99ca

                     loc_9943:
0000000000009943         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000009947         cvtsi2ss   xmm0, rax

                     loc_994c:
000000000000994c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000009951         ucomiss    xmm1, xmm0
0000000000009954         ja         loc_99f0

                     loc_995a:
000000000000995a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000995e         cmp        qword [r12], 0x0
0000000000009963         je         loc_9a98

0000000000009969         mov        rax, qword [rbx+0x48]
000000000000996d         test       rax, rax
0000000000009970         je         loc_9ab0

0000000000009976         mov        rdx, qword [rax+8]
000000000000997a         mov        qword [rbx+0x48], rdx

                     loc_997e:
000000000000997e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
0000000000009983         mov        qword [rax], rbp
0000000000009986         mov        qword [rax+8], rdx
000000000000998a         mov        qword [r12+8], rax
000000000000998f         mov        eax, 0x1
0000000000009994         add        qword [rbx+0x20], 0x1
0000000000009999         jmp        loc_98fc
000000000000999e         align      32

                     loc_99a0:
00000000000099a0         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
00000000000099a3         pxor       xmm1, xmm1
00000000000099a7         and        eax, 0x1
00000000000099aa         shr        rdx, 0x1
00000000000099ad         or         rdx, rax
00000000000099b0         mov        rax, qword [rbx+0x10]
00000000000099b4         cvtsi2ss   xmm1, rdx
00000000000099b9         mov        rdx, qword [rbx+0x28]
00000000000099bd         test       rax, rax
00000000000099c0         addss      xmm1, xmm1
00000000000099c4         jns        loc_9943

                     loc_99ca:
00000000000099ca         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
00000000000099cd         pxor       xmm0, xmm0
00000000000099d1         shr        rcx, 0x1
00000000000099d4         and        eax, 0x1
00000000000099d7         or         rcx, rax
00000000000099da         cvtsi2ss   xmm0, rcx
00000000000099df         addss      xmm0, xmm0
00000000000099e3         jmp        loc_994c
00000000000099e8         align      16

                     loc_99f0:
00000000000099f0         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
00000000000099f4         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000099f9         mov        rax, qword [rbx+0x10]
00000000000099fd         mov        rdx, qword [rbx+0x28]
0000000000009a01         test       rax, rax
0000000000009a04         movss      xmm2, dword [rdx+8]
0000000000009a09         js         loc_9ad0

0000000000009a0f         pxor       xmm0, xmm0
0000000000009a13         cvtsi2ss   xmm0, rax

                     loc_9a18:
0000000000009a18         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
0000000000009a1c         test       rax, rax
0000000000009a1f         js         loc_9af0

0000000000009a25         pxor       xmm1, xmm1
0000000000009a29         cvtsi2ss   xmm1, rax

                     loc_9a2e:
0000000000009a2e         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000009a31         mulss      xmm3, xmm0
0000000000009a35         ucomiss    xmm1, xmm3
0000000000009a38         jbe        loc_995a

0000000000009a3e         cmp        byte [rdx+0x10], 0x0
0000000000009a42         mulss      xmm0, dword [rdx+0xc]
0000000000009a47         jne        loc_9a4d

0000000000009a49         mulss      xmm0, xmm2

                     loc_9a4d:
0000000000009a4d         ucomiss    xmm0, dword [float_bd0c]                    ; float_bd0c, CODE XREF=hash_insert_if_absent+407
0000000000009a54         jae        loc_9ac3

0000000000009a56         ucomiss    xmm0, dword [float_bd10]                    ; float_bd10
0000000000009a5d         jae        loc_9b10

0000000000009a63         cvttss2si  rsi, xmm0

                     loc_9a68:
0000000000009a68         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
0000000000009a6b         call       hash_rehash                                 ; hash_rehash
0000000000009a70         test       al, al
0000000000009a72         je         loc_9ac3

0000000000009a74         xor        ecx, ecx
0000000000009a76         mov        rdx, r12
0000000000009a79         mov        rsi, rbp
0000000000009a7c         mov        rdi, rbx
0000000000009a7f         call       hash_find_entry                             ; hash_find_entry
0000000000009a84         test       rax, rax
0000000000009a87         je         loc_995a

                     loc_9a8d:
0000000000009a8d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
0000000000009a92         align      8

                     loc_9a98:
0000000000009a98         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
0000000000009a9c         mov        eax, 0x1
0000000000009aa1         add        qword [rbx+0x20], 0x1
0000000000009aa6         add        qword [rbx+0x18], 0x1
0000000000009aab         jmp        loc_98fc

                     loc_9ab0:
0000000000009ab0         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
0000000000009ab5         call       j_malloc                                    ; malloc
0000000000009aba         test       rax, rax
0000000000009abd         jne        loc_997e

                     loc_9ac3:
0000000000009ac3         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
0000000000009ac8         jmp        loc_98fc
0000000000009acd         align      16

                     loc_9ad0:
0000000000009ad0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
0000000000009ad3         pxor       xmm0, xmm0
0000000000009ad7         shr        rcx, 0x1
0000000000009ada         and        eax, 0x1
0000000000009add         or         rcx, rax
0000000000009ae0         cvtsi2ss   xmm0, rcx
0000000000009ae5         addss      xmm0, xmm0
0000000000009ae9         jmp        loc_9a18
0000000000009aee         align      16

                     loc_9af0:
0000000000009af0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
0000000000009af3         pxor       xmm1, xmm1
0000000000009af7         shr        rcx, 0x1
0000000000009afa         and        eax, 0x1
0000000000009afd         or         rcx, rax
0000000000009b00         cvtsi2ss   xmm1, rcx
0000000000009b05         addss      xmm1, xmm1
0000000000009b09         jmp        loc_9a2e
0000000000009b0e         align      16

                     loc_9b10:
0000000000009b10         subss      xmm0, dword [float_bd10]                    ; float_bd10, CODE XREF=hash_insert_if_absent+429
0000000000009b18         movabs     rax, 0x8000000000000000
0000000000009b22         cvttss2si  rsi, xmm0
0000000000009b27         xor        rsi, rax
0000000000009b2a         jmp        loc_9a68

                     loc_9b2f:
0000000000009b2f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000009b34         align      64                                          ; End of unwind block (FDE at 0xd68c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000009b40         push       rbx                                         ; Begin of unwind block (FDE at 0xd6c8), CODE XREF=filesystem_type+255, enter_dir.isra.10+70
0000000000009b41         mov        rbx, rsi
0000000000009b44         sub        rsp, 0x10
0000000000009b48         mov        rdx, rsp
0000000000009b4b         mov        rax, qword [fs:0x28]
0000000000009b54         mov        qword [rsp+0x18+var_10], rax
0000000000009b59         xor        eax, eax
0000000000009b5b         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000009b60         cmp        eax, 0xffffffff
0000000000009b63         je         loc_9b90

0000000000009b65         test       eax, eax
0000000000009b67         jne        loc_9b6d

0000000000009b69         mov        rbx, qword [rsp+0x18+var_18]

                     loc_9b6d:
0000000000009b6d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000009b72         xor        rcx, qword [fs:0x28]
0000000000009b7b         mov        rax, rbx
0000000000009b7e         jne        loc_9b94

0000000000009b80         add        rsp, 0x10
0000000000009b84         pop        rbx
0000000000009b85         ret
                        ; endp
0000000000009b86         align      16

                     loc_9b90:
0000000000009b90         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
0000000000009b92         jmp        loc_9b6d

                     loc_9b94:
0000000000009b94         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
0000000000009b99         align      32                                          ; End of unwind block (FDE at 0xd6c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
0000000000009ba0         push       r12                                         ; Begin of unwind block (FDE at 0xd6ec), CODE XREF=leave_dir.isra.12+122
0000000000009ba2         push       rbp
0000000000009ba3         mov        ecx, 0x1
0000000000009ba8         push       rbx
0000000000009ba9         mov        rbx, rdi
0000000000009bac         sub        rsp, 0x10
0000000000009bb0         mov        rdx, rsp
0000000000009bb3         mov        rax, qword [fs:0x28]
0000000000009bbc         mov        qword [rsp+0x28+var_20], rax
0000000000009bc1         xor        eax, eax
0000000000009bc3         call       hash_find_entry                             ; hash_find_entry
0000000000009bc8         test       rax, rax
0000000000009bcb         mov        rbp, rax
0000000000009bce         je         loc_9bdf

0000000000009bd0         mov        rax, qword [rsp+0x28+var_28]
0000000000009bd4         sub        qword [rbx+0x20], 0x1
0000000000009bd9         cmp        qword [rax], 0x0
0000000000009bdd         je         loc_9c00

                     loc_9bdf:
0000000000009bdf         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
0000000000009be4         xor        rcx, qword [fs:0x28]
0000000000009bed         mov        rax, rbp
0000000000009bf0         jne        loc_9d9e

0000000000009bf6         add        rsp, 0x10
0000000000009bfa         pop        rbx
0000000000009bfb         pop        rbp
0000000000009bfc         pop        r12
0000000000009bfe         ret
                        ; endp
0000000000009bff         align      1024

                     loc_9c00:
0000000000009c00         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
0000000000009c04         sub        rax, 0x1
0000000000009c08         test       rax, rax
0000000000009c0b         mov        qword [rbx+0x18], rax
0000000000009c0f         js         loc_9d10

0000000000009c15         pxor       xmm0, xmm0
0000000000009c19         cvtsi2ss   xmm0, rax

                     loc_9c1e:
0000000000009c1e         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
0000000000009c22         mov        rdx, qword [rbx+0x28]
0000000000009c26         test       rax, rax
0000000000009c29         js         loc_9cf0

0000000000009c2f         pxor       xmm1, xmm1
0000000000009c33         cvtsi2ss   xmm1, rax

                     loc_9c38:
0000000000009c38         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
0000000000009c3c         ucomiss    xmm1, xmm0
0000000000009c3f         jbe        loc_9bdf

0000000000009c41         lea        rdi, qword [rbx+0x28]
0000000000009c45         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000009c4a         mov        rax, qword [rbx+0x10]
0000000000009c4e         mov        rdx, qword [rbx+0x28]
0000000000009c52         test       rax, rax
0000000000009c55         js         loc_9d80

0000000000009c5b         pxor       xmm0, xmm0
0000000000009c5f         cvtsi2ss   xmm0, rax

                     loc_9c64:
0000000000009c64         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000009c68         test       rax, rax
0000000000009c6b         js         loc_9d60

0000000000009c71         pxor       xmm1, xmm1
0000000000009c75         cvtsi2ss   xmm1, rax

                     loc_9c7a:
0000000000009c7a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
0000000000009c7e         mulss      xmm2, xmm0
0000000000009c82         ucomiss    xmm2, xmm1
0000000000009c85         jbe        loc_9bdf

0000000000009c8b         cmp        byte [rdx+0x10], 0x0
0000000000009c8f         mulss      xmm0, dword [rdx+4]
0000000000009c94         je         loc_9d50

                     loc_9c9a:
0000000000009c9a         ucomiss    xmm0, dword [float_bd10]                    ; float_bd10, CODE XREF=hash_delete+437
0000000000009ca1         jae        loc_9d30

0000000000009ca7         cvttss2si  rsi, xmm0

                     loc_9cac:
0000000000009cac         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
0000000000009caf         call       hash_rehash                                 ; hash_rehash
0000000000009cb4         test       al, al
0000000000009cb6         jne        loc_9bdf

0000000000009cbc         mov        rdi, qword [rbx+0x48]
0000000000009cc0         test       rdi, rdi
0000000000009cc3         je         loc_9cd9

0000000000009cc5         nop        dword [rax]

                     loc_9cc8:
0000000000009cc8         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
0000000000009ccc         call       sub_1d30                                    ; sub_1d30
0000000000009cd1         test       r12, r12
0000000000009cd4         mov        rdi, r12
0000000000009cd7         jne        loc_9cc8

                     loc_9cd9:
0000000000009cd9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
0000000000009ce1         jmp        loc_9bdf
0000000000009ce6         align      16

                     loc_9cf0:
0000000000009cf0         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
0000000000009cf3         pxor       xmm1, xmm1
0000000000009cf7         shr        rcx, 0x1
0000000000009cfa         and        eax, 0x1
0000000000009cfd         or         rcx, rax
0000000000009d00         cvtsi2ss   xmm1, rcx
0000000000009d05         addss      xmm1, xmm1
0000000000009d09         jmp        loc_9c38
0000000000009d0e         align      16

                     loc_9d10:
0000000000009d10         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
0000000000009d13         pxor       xmm0, xmm0
0000000000009d17         shr        rdx, 0x1
0000000000009d1a         and        eax, 0x1
0000000000009d1d         or         rdx, rax
0000000000009d20         cvtsi2ss   xmm0, rdx
0000000000009d25         addss      xmm0, xmm0
0000000000009d29         jmp        loc_9c1e
0000000000009d2e         align      16

                     loc_9d30:
0000000000009d30         subss      xmm0, dword [float_bd10]                    ; float_bd10, CODE XREF=hash_delete+257
0000000000009d38         movabs     rax, 0x8000000000000000
0000000000009d42         cvttss2si  rsi, xmm0
0000000000009d47         xor        rsi, rax
0000000000009d4a         jmp        loc_9cac
0000000000009d4f         align      16

                     loc_9d50:
0000000000009d50         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000009d55         jmp        loc_9c9a
0000000000009d5a         align      32

                     loc_9d60:
0000000000009d60         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000009d63         pxor       xmm1, xmm1
0000000000009d67         shr        rcx, 0x1
0000000000009d6a         and        eax, 0x1
0000000000009d6d         or         rcx, rax
0000000000009d70         cvtsi2ss   xmm1, rcx
0000000000009d75         addss      xmm1, xmm1
0000000000009d79         jmp        loc_9c7a
0000000000009d7e         align      128

                     loc_9d80:
0000000000009d80         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000009d83         pxor       xmm0, xmm0
0000000000009d87         shr        rcx, 0x1
0000000000009d8a         and        eax, 0x1
0000000000009d8d         or         rcx, rax
0000000000009d90         cvtsi2ss   xmm0, rcx
0000000000009d95         addss      xmm0, xmm0
0000000000009d99         jmp        loc_9c64

                     loc_9d9e:
0000000000009d9e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000009da3         align      16                                          ; End of unwind block (FDE at 0xd6ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_init:
0000000000009db0         mov        byte [rdi+0x1c], 0x1                        ; Begin of unwind block (FDE at 0xd724), CODE XREF=rpl_fts_open+681
0000000000009db4         mov        qword [rdi+0x14], 0x0
0000000000009dbc         mov        dword [rdi], esi
0000000000009dbe         mov        dword [rdi+4], esi
0000000000009dc1         mov        dword [rdi+8], esi
0000000000009dc4         mov        dword [rdi+0xc], esi
0000000000009dc7         mov        dword [rdi+0x10], esi
0000000000009dca         ret
                        ; endp
0000000000009dcb         align      16                                          ; End of unwind block (FDE at 0xd724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_empty:
0000000000009dd0         movzx      eax, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xd738), CODE XREF=fd_ring_clear+31, fts_safe_changedir+455
0000000000009dd4         ret
                        ; endp
0000000000009dd5         align      32                                          ; End of unwind block (FDE at 0xd738)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_push:
0000000000009de0         movzx      edx, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xd74c), CODE XREF=cwd_advance_fd+52
0000000000009de4         mov        ecx, dword [rdi+0x14]
0000000000009de7         xor        edx, 0x1
0000000000009dea         movzx      edx, dl
0000000000009ded         add        ecx, edx
0000000000009def         and        ecx, 0x3
0000000000009df2         mov        eax, ecx
0000000000009df4         lea        r8, qword [rdi+rax*4]
0000000000009df8         mov        eax, dword [r8]
0000000000009dfb         mov        dword [r8], esi
0000000000009dfe         mov        esi, dword [rdi+0x18]
0000000000009e01         mov        dword [rdi+0x14], ecx
0000000000009e04         cmp        esi, ecx
0000000000009e06         jne        loc_9e10

0000000000009e08         add        edx, esi
0000000000009e0a         and        edx, 0x3
0000000000009e0d         mov        dword [rdi+0x18], edx

                     loc_9e10:
0000000000009e10         mov        byte [rdi+0x1c], 0x0                        ; CODE XREF=i_ring_push+38
0000000000009e14         ret
                        ; endp
0000000000009e15         align      32                                          ; End of unwind block (FDE at 0xd74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_pop:
0000000000009e20         cmp        byte [rdi+0x1c], 0x0                        ; Begin of unwind block (FDE at 0xd760), CODE XREF=fd_ring_clear+19, fts_safe_changedir+475
0000000000009e24         jne        loc_9e55

0000000000009e26         mov        eax, dword [rdi+0x14]
0000000000009e29         mov        esi, dword [rdi+0x10]
0000000000009e2c         lea        rcx, qword [rdi+rax*4]
0000000000009e30         mov        rdx, rax
0000000000009e33         mov        eax, dword [rcx]
0000000000009e35         mov        dword [rcx], esi
0000000000009e37         cmp        edx, dword [rdi+0x18]
0000000000009e3a         je         loc_9e50

0000000000009e3c         add        edx, 0x3
0000000000009e3f         and        edx, 0x3
0000000000009e42         mov        dword [rdi+0x14], edx
0000000000009e45         ret
                        ; endp
0000000000009e46         align      16

                     loc_9e50:
0000000000009e50         mov        byte [rdi+0x1c], 0x1                        ; CODE XREF=i_ring_pop+26
0000000000009e54         ret
                        ; endp

                     loc_9e55:
0000000000009e55         sub        rsp, 0x8                                    ; CODE XREF=i_ring_pop+4
0000000000009e59         call       j_abort                                     ; abort
                        ; endp
0000000000009e5e         align      32                                          ; End of unwind block (FDE at 0xd760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000009e60         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd774), CODE XREF=gettext_quote.part.1+11
0000000000009e64         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000009e69         call       j_nl_langinfo                               ; nl_langinfo
0000000000009e6e         test       rax, rax
0000000000009e71         je         loc_9e90

0000000000009e73         cmp        byte [rax], 0x0
0000000000009e76         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000009e7d         cmove      rax, rdx
0000000000009e81         add        rsp, 0x8
0000000000009e85         ret
                        ; endp
0000000000009e86         align      16

                     loc_9e90:
0000000000009e90         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000009e97         add        rsp, 0x8
0000000000009e9b         ret
                        ; endp
0000000000009e9c         align      32                                          ; End of unwind block (FDE at 0xd774)

                     openat_safer:
0000000000009ea0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xd794), CODE XREF=diropen.isra.6+53, opendirat+21
0000000000009ea4         mov        qword [rsp+0x58+var_20], rcx
0000000000009ea9         xor        ecx, ecx
0000000000009eab         mov        rax, qword [fs:0x28]
0000000000009eb4         mov        qword [rsp+0x58+var_40], rax
0000000000009eb9         xor        eax, eax
0000000000009ebb         test       dl, 0x40
0000000000009ebe         jne        loc_9ee8

                     loc_9ec0:
0000000000009ec0         xor        eax, eax                                    ; CODE XREF=openat_safer+103
0000000000009ec2         call       j_openat                                    ; openat
0000000000009ec7         mov        edi, eax
0000000000009ec9         call       fd_safer                                    ; fd_safer
0000000000009ece         mov        rsi, qword [rsp+0x58+var_40]
0000000000009ed3         xor        rsi, qword [fs:0x28]
0000000000009edc         jne        loc_9f09

0000000000009ede         add        rsp, 0x58
0000000000009ee2         ret
                        ; endp
0000000000009ee3         align      8

                     loc_9ee8:
0000000000009ee8         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
0000000000009eed         mov        dword [rsp+0x58+var_58], 0x18
0000000000009ef4         mov        ecx, dword [rsp+0x58+var_20]
0000000000009ef8         mov        qword [rsp+0x58+var_50], rax
0000000000009efd         lea        rax, qword [rsp+0x58+var_38]
0000000000009f02         mov        qword [rsp+0x58+var_48], rax
0000000000009f07         jmp        loc_9ec0

                     loc_9f09:
0000000000009f09         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
0000000000009f0e         align      16                                          ; End of unwind block (FDE at 0xd794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
0000000000009f10         push       r13                                         ; Begin of unwind block (FDE at 0xd7b4), CODE XREF=fts_build+1189
0000000000009f12         push       r12
0000000000009f14         or         edx, 0x90900
0000000000009f1a         push       rbp
0000000000009f1b         push       rbx
0000000000009f1c         xor        eax, eax
0000000000009f1e         mov        r12, rcx
0000000000009f21         sub        rsp, 0x8
0000000000009f25         call       openat_safer                                ; openat_safer
0000000000009f2a         test       eax, eax
0000000000009f2c         js         loc_9f80

0000000000009f2e         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
0000000000009f30         mov        ebx, eax
0000000000009f32         call       j_fdopendir                                 ; fdopendir
0000000000009f37         test       rax, rax
0000000000009f3a         mov        rbp, rax
0000000000009f3d         je         loc_9f58

0000000000009f3f         mov        dword [r12], ebx
0000000000009f43         add        rsp, 0x8
0000000000009f47         mov        rax, rbp
0000000000009f4a         pop        rbx
0000000000009f4b         pop        rbp
0000000000009f4c         pop        r12
0000000000009f4e         pop        r13
0000000000009f50         ret
                        ; endp
0000000000009f51         align      8

                     loc_9f58:
0000000000009f58         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
0000000000009f5d         mov        r13d, dword [rax]
0000000000009f60         mov        r12, rax
0000000000009f63         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009f65         call       j_close                                     ; close
0000000000009f6a         mov        rax, rbp
0000000000009f6d         mov        dword [r12], r13d
0000000000009f71         add        rsp, 0x8
0000000000009f75         pop        rbx
0000000000009f76         pop        rbp
0000000000009f77         pop        r12
0000000000009f79         pop        r13
0000000000009f7b         ret
                        ; endp
0000000000009f7c         align      128

                     loc_9f80:
0000000000009f80         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
0000000000009f84         xor        ebp, ebp
0000000000009f86         pop        rbx
0000000000009f87         mov        rax, rbp
0000000000009f8a         pop        rbp
0000000000009f8b         pop        r12
0000000000009f8d         pop        r13
0000000000009f8f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000009f90         push       r13                                         ; End of unwind block (FDE at 0xd7b4), Begin of unwind block (FDE at 0xd814), CODE XREF=open_safer+42, openat_safer+41
0000000000009f92         push       r12
0000000000009f94         push       rbp
0000000000009f95         push       rbx
0000000000009f96         mov        ebx, edi
0000000000009f98         sub        rsp, 0x8
0000000000009f9c         cmp        edi, 0x2
0000000000009f9f         ja         loc_9fc2

0000000000009fa1         call       dup_safer                                   ; dup_safer
0000000000009fa6         mov        r12d, eax
0000000000009fa9         call       j___errno_location                          ; __errno_location
0000000000009fae         mov        r13d, dword [rax]
0000000000009fb1         mov        rbp, rax
0000000000009fb4         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009fb6         call       j_close                                     ; close
0000000000009fbb         mov        ebx, r12d
0000000000009fbe         mov        dword [rbp], r13d

                     loc_9fc2:
0000000000009fc2         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000009fc6         mov        eax, ebx
0000000000009fc8         pop        rbx
0000000000009fc9         pop        rbp
0000000000009fca         pop        r12
0000000000009fcc         pop        r13
0000000000009fce         ret
                        ; endp
0000000000009fcf         align      16                                          ; End of unwind block (FDE at 0xd814)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000009fd0         push       r12                                         ; Begin of unwind block (FDE at 0xd84c), CODE XREF=close_stream+21
0000000000009fd2         push       rbp
0000000000009fd3         push       rbx
0000000000009fd4         mov        rbx, rdi
0000000000009fd7         call       j_fileno                                    ; fileno
0000000000009fdc         test       eax, eax
0000000000009fde         mov        rdi, rbx
0000000000009fe1         js         loc_a037

0000000000009fe3         call       j___freading                                ; __freading
0000000000009fe8         test       eax, eax
0000000000009fea         jne        loc_a018

                     loc_9fec:
0000000000009fec         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000009fef         call       rpl_fflush                                  ; rpl_fflush
0000000000009ff4         test       eax, eax
0000000000009ff6         je         loc_a034

0000000000009ff8         call       j___errno_location                          ; __errno_location
0000000000009ffd         mov        r12d, dword [rax]
000000000000a000         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose, DATA XREF=sub_29d0+611, fts_stat+189
000000000000a003         mov        rbp, rax
000000000000a006         call       j_fclose                                    ; fclose
000000000000a00b         test       r12d, r12d
000000000000a00e         jne        loc_a040

                     loc_a010:
000000000000a010         pop        rbx                                         ; CODE XREF=rpl_fclose+121
000000000000a011         pop        rbp
000000000000a012         pop        r12
000000000000a014         ret
                        ; endp
000000000000a015         align      8

                     loc_a018:
000000000000a018         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000a01b         call       j_fileno                                    ; fileno
000000000000a020         xor        esi, esi                                    ; argument "__offset" for method j_lseek
000000000000a022         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
000000000000a027         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000a029         call       j_lseek                                     ; lseek
000000000000a02e         cmp        rax, 0xffffffffffffffff
000000000000a032         jne        loc_9fec

                     loc_a034:
000000000000a034         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_a037:
000000000000a037         pop        rbx                                         ; CODE XREF=rpl_fclose+17
000000000000a038         pop        rbp
000000000000a039         pop        r12
000000000000a03b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_a040:
000000000000a040         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
000000000000a044         mov        eax, 0xffffffff
000000000000a049         jmp        loc_a010
000000000000a04b         align      16                                          ; End of unwind block (FDE at 0xd84c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
000000000000a050         push       r12                                         ; Begin of unwind block (FDE at 0xd884), CODE XREF=fts_build+2314
000000000000a052         push       rbp
000000000000a053         mov        ebp, edi
000000000000a055         push       rbx
000000000000a056         sub        rsp, 0x50
000000000000a05a         mov        rax, qword [fs:0x28]
000000000000a063         mov        qword [rsp+0x68+var_50], rax
000000000000a068         xor        eax, eax
000000000000a06a         lea        rax, qword [rsp+0x68+arg_0]
000000000000a06f         test       esi, esi
000000000000a071         mov        qword [rsp+0x68+var_38], rdx
000000000000a076         mov        qword [rsp+0x68+var_30], rcx
000000000000a07b         mov        qword [rsp+0x68+var_28], r8
000000000000a080         mov        qword [rsp+0x68+var_60], rax
000000000000a085         lea        rax, qword [rsp+0x68+var_48]
000000000000a08a         mov        qword [rsp+0x68+var_20], r9
000000000000a08f         mov        dword [rsp+0x68+var_68], 0x10
000000000000a096         mov        qword [rsp+0x68+var_58], rax
000000000000a09b         je         loc_a2a2

000000000000a0a1         cmp        esi, 0x406
000000000000a0a7         jne        loc_a0f0

000000000000a0a9         mov        rax, qword [rsp+0x68+var_58]
000000000000a0ae         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
000000000000a0b5         mov        dword [rsp+0x68+var_68], 0x18
000000000000a0bc         mov        r12d, dword [rax+0x10]
000000000000a0c0         mov        edx, r12d
000000000000a0c3         js         loc_a1f3

000000000000a0c9         xor        eax, eax
000000000000a0cb         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
000000000000a0d0         call       j_fcntl                                     ; fcntl
000000000000a0d5         test       eax, eax
000000000000a0d7         mov        ebx, eax
000000000000a0d9         js         loc_a268

                     loc_a0df:
000000000000a0df         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
000000000000a0e9         jmp        loc_a130
000000000000a0eb         align      16

                     loc_a0f0:
000000000000a0f0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
000000000000a0f3         je         loc_a120

000000000000a0f5         jg         loc_a150

000000000000a0f7         cmp        esi, 0x4
000000000000a0fa         je         loc_a1d0

000000000000a100         jg         loc_a1c0

000000000000a106         cmp        esi, 0x2
000000000000a109         je         loc_a1d0

000000000000a10f         jg         loc_a120

000000000000a111         cmp        esi, 0x1
000000000000a114         jne        loc_a178

000000000000a116         nop        word [cs:rax+rax]

                     loc_a120:
000000000000a120         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
000000000000a122         xor        eax, eax
000000000000a124         call       j_fcntl                                     ; fcntl
000000000000a129         mov        ebx, eax
000000000000a12b         nop        dword [rax+rax]

                     loc_a130:
000000000000a130         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
000000000000a135         xor        rcx, qword [fs:0x28]
000000000000a13e         mov        eax, ebx
000000000000a140         jne        loc_a29d

000000000000a146         add        rsp, 0x50
000000000000a14a         pop        rbx
000000000000a14b         pop        rbp
000000000000a14c         pop        r12
000000000000a14e         ret
                        ; endp
000000000000a14f         align      16

                     loc_a150:
000000000000a150         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
000000000000a156         jg         loc_a1a0

000000000000a158         cmp        esi, 0x406
000000000000a15e         jge        loc_a1d0

000000000000a160         cmp        esi, 0x401
000000000000a166         je         loc_a120

000000000000a168         cmp        esi, 0x402
000000000000a16e         je         loc_a1d0

000000000000a170         cmp        esi, 0x400
000000000000a176         je         loc_a1d0

                     loc_a178:
000000000000a178         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000a17b         cmp        eax, 0x2f
000000000000a17e         ja         loc_a2ba

000000000000a184         add        rax, qword [rsp+0x68+var_58]

                     loc_a189:
000000000000a189         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000a18c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000a18e         xor        eax, eax
000000000000a190         call       j_fcntl                                     ; fcntl
000000000000a195         mov        ebx, eax
000000000000a197         jmp        loc_a130
000000000000a199         align      32

                     loc_a1a0:
000000000000a1a0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
000000000000a1a6         je         loc_a1d0

000000000000a1a8         jl         loc_a120

000000000000a1ae         cmp        esi, 0x40a
000000000000a1b4         jne        loc_a178

000000000000a1b6         jmp        loc_a120
000000000000a1bb         align      64

                     loc_a1c0:
000000000000a1c0         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
000000000000a1c3         je         loc_a120

000000000000a1c9         jg         loc_a1d0

000000000000a1cb         cmp        esi, 0x8
000000000000a1ce         jne        loc_a178

                     loc_a1d0:
000000000000a1d0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
000000000000a1d3         cmp        eax, 0x2f
000000000000a1d6         ja         loc_a2c4

000000000000a1dc         add        rax, qword [rsp+0x68+var_58]

                     loc_a1e1:
000000000000a1e1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
000000000000a1e3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000a1e5         xor        eax, eax
000000000000a1e7         call       j_fcntl                                     ; fcntl
000000000000a1ec         mov        ebx, eax
000000000000a1ee         jmp        loc_a130

                     loc_a1f3:
000000000000a1f3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
000000000000a1f5         xor        eax, eax
000000000000a1f7         call       j_fcntl                                     ; fcntl
000000000000a1fc         test       eax, eax
000000000000a1fe         mov        ebx, eax
000000000000a200         js         loc_a130

000000000000a206         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000a20d         jne        loc_a130

                     loc_a213:
000000000000a213         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
000000000000a215         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000a21a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000a21c         call       j_fcntl                                     ; fcntl
000000000000a221         test       eax, eax
000000000000a223         js         loc_a241

000000000000a225         or         eax, 0x1
000000000000a228         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000a22d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000a22f         mov        edx, eax
000000000000a231         xor        eax, eax
000000000000a233         call       j_fcntl                                     ; fcntl
000000000000a238         cmp        eax, 0xffffffff
000000000000a23b         jne        loc_a130

                     loc_a241:
000000000000a241         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
000000000000a246         mov        r12d, dword [rax]
000000000000a249         mov        rbp, rax
000000000000a24c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000a24e         call       j_close                                     ; close
000000000000a253         mov        ebx, 0xffffffff
000000000000a258         mov        dword [rbp], r12d
000000000000a25c         jmp        loc_a130
000000000000a261         align      8

                     loc_a268:
000000000000a268         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000000a26d         cmp        dword [rax], 0x16
000000000000a270         jne        loc_a0df

000000000000a276         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
000000000000a278         xor        eax, eax
000000000000a27a         mov        edx, r12d
000000000000a27d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000a27f         call       j_fcntl                                     ; fcntl
000000000000a284         test       eax, eax
000000000000a286         mov        ebx, eax
000000000000a288         js         loc_a130

000000000000a28e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000a298         jmp        loc_a213

                     loc_a29d:
000000000000a29d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_a2a2:
000000000000a2a2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
000000000000a2a7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
000000000000a2a9         mov        edx, dword [rax+0x10]
000000000000a2ac         xor        eax, eax
000000000000a2ae         call       j_fcntl                                     ; fcntl
000000000000a2b3         mov        ebx, eax
000000000000a2b5         jmp        loc_a130

                     loc_a2ba:
000000000000a2ba         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000000a2bf         jmp        loc_a189

                     loc_a2c4:
000000000000a2c4         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
000000000000a2c9         jmp        loc_a1e1
000000000000a2ce         align      16                                          ; End of unwind block (FDE at 0xd884)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
000000000000a2d0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xd8bc), CODE XREF=rpl_fclose+31
000000000000a2d3         push       rbx
000000000000a2d4         mov        rbx, rdi
000000000000a2d7         je         loc_a2ea

000000000000a2d9         call       j___freading                                ; __freading
000000000000a2de         test       eax, eax
000000000000a2e0         je         loc_a2ea

000000000000a2e2         test       dword [rbx], 0x100
000000000000a2e8         jne        loc_a2f8

                     loc_a2ea:
000000000000a2ea         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000a2ed         pop        rbx
000000000000a2ee         jmp        j_fflush                                    ; fflush
                        ; endp
000000000000a2f3         align      8

                     loc_a2f8:
000000000000a2f8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000a2fb         mov        edx, 0x1
000000000000a300         xor        esi, esi
000000000000a302         call       rpl_fseeko                                  ; rpl_fseeko
000000000000a307         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000a30a         pop        rbx
000000000000a30b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
000000000000a310         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xd8bc), Begin of unwind block (FDE at 0xd8dc), CODE XREF=rpl_fflush+50
000000000000a314         cmp        qword [rdi+0x10], rax
000000000000a318         je         loc_a320

                     j_j_fseeko:        // fseeko
000000000000a31a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000a31f         align      32

                     loc_a320:
000000000000a320         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
000000000000a324         cmp        qword [rdi+0x28], rax
000000000000a328         jne        j_j_fseeko                                  ; fseeko

000000000000a32a         cmp        qword [rdi+0x48], 0x0
000000000000a32f         jne        j_j_fseeko                                  ; fseeko

000000000000a331         push       r12
000000000000a333         push       rbp
000000000000a334         mov        r12d, edx
000000000000a337         push       rbx
000000000000a338         mov        rbp, rsi
000000000000a33b         mov        rbx, rdi
000000000000a33e         call       j_fileno                                    ; fileno
000000000000a343         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
000000000000a346         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
000000000000a349         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000a34b         call       j_lseek                                     ; lseek
000000000000a350         cmp        rax, 0xffffffffffffffff
000000000000a354         je         loc_a362

000000000000a356         and        dword [rbx], 0xffffffef
000000000000a359         mov        qword [rbx+0x90], rax
000000000000a360         xor        eax, eax

                     loc_a362:
000000000000a362         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
000000000000a363         pop        rbp
000000000000a364         pop        r12
000000000000a366         ret
                        ; endp
000000000000a367         align      16                                          ; End of unwind block (FDE at 0xd8dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
000000000000a370         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xd90c), CODE XREF=fd_safer+17
000000000000a375         xor        esi, esi
000000000000a377         xor        eax, eax
000000000000a379         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
000000000000a37e         align      128                                         ; End of unwind block (FDE at 0xd90c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
000000000000a380         push       r15                                         ; Begin of unwind block (FDE at 0xd924), DATA XREF=_start+22
000000000000a382         push       r14
000000000000a384         mov        r15, rdx
000000000000a387         push       r13
000000000000a389         push       r12
000000000000a38b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
000000000000a392         push       rbp
000000000000a393         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000a39a         push       rbx
000000000000a39b         mov        r13d, edi
000000000000a39e         mov        r14, rsi
000000000000a3a1         sub        rbp, r12
000000000000a3a4         sub        rsp, 0x8
000000000000a3a8         sar        rbp, 0x3
000000000000a3ac         call       _init                                       ; _init
000000000000a3b1         test       rbp, rbp
000000000000a3b4         je         loc_a3d6

000000000000a3b6         xor        ebx, ebx
000000000000a3b8         nop        dword [rax+rax]

                     loc_a3c0:
000000000000a3c0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
000000000000a3c3         mov        rsi, r14
000000000000a3c6         mov        edi, r13d
000000000000a3c9         call       qword [r12+rbx*8]
000000000000a3cd         add        rbx, 0x1
000000000000a3d1         cmp        rbp, rbx
000000000000a3d4         jne        loc_a3c0

                     loc_a3d6:
000000000000a3d6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000a3da         pop        rbx
000000000000a3db         pop        rbp
000000000000a3dc         pop        r12
000000000000a3de         pop        r13
000000000000a3e0         pop        r14
000000000000a3e2         pop        r15
000000000000a3e4         ret
                        ; endp
000000000000a3e5         align      16                                          ; End of unwind block (FDE at 0xd924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
000000000000a3f0         ret                                                    ; Begin of unwind block (FDE at 0xd96c), DATA XREF=_start+15
                        ; endp
000000000000a3f2         align      1024                                        ; End of unwind block (FDE at 0xd96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
000000000000a400         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xd984), __dso_handle, CODE XREF=main+126
000000000000a407         xor        esi, esi
000000000000a409         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000a40e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xd984)
000000000000a40f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0xa410; 0xa419[ (9 bytes)
        ; File offset : [42000; 42009[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
000000000000a410         sub        rsp, 0x8
000000000000a414         add        rsp, 0x8
000000000000a418         ret
                        ; endp
000000000000a419         db  0x00 ; '.'
000000000000a41a         db  0x00 ; '.'
000000000000a41b         db  0x00 ; '.'
000000000000a41c         db  0x00 ; '.'
000000000000a41d         db  0x00 ; '.'
000000000000a41e         db  0x00 ; '.'
000000000000a41f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0xa420; 0xbd26[ (6406 bytes)
        ; File offset : [42016; 48422[ (6406 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
000000000000a420         db  0x01 ; '.'
000000000000a421         db  0x00 ; '.'
000000000000a422         db  0x02 ; '.'
000000000000a423         db  0x00 ; '.'
                     aChgrp:
000000000000a424         db         "chgrp", 0                                  ; DATA XREF=main+404, usage+540, usage+860, usage+1044, usage+1063, usage+1097
000000000000a42a         db  0x5b ; '['                                         ; DATA XREF=usage+552
000000000000a42b         db  0x00 ; '.'
                     aTestInvocation:
000000000000a42c         db         "test invocation", 0                        ; DATA XREF=usage+591
                     aMulticallInvoc:
000000000000a43c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+639
                     aSha224sum:
000000000000a452         db         "sha224sum", 0                              ; DATA XREF=usage+656
                     aSha2Utilities:
000000000000a45c         db         "sha2 utilities", 0                         ; DATA XREF=usage+668
                     aSha256sum:
000000000000a46b         db         "sha256sum", 0                              ; DATA XREF=usage+559
                     aSha384sum:
000000000000a475         db         "sha384sum", 0                              ; DATA XREF=usage+603
                     aSha512sum:
000000000000a47f         db         "sha512sum", 0                              ; DATA XREF=usage+627
                     aNsOnlineHelpSn:
000000000000a489         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+746
000000000000a4a0         db  0x47 ; 'G'                                         ; DATA XREF=main+397, usage+774, usage+967, emit_bug_reporting_address+68
000000000000a4a1         db  0x4e ; 'N'
000000000000a4a2         db  0x55 ; 'U'
000000000000a4a3         db  0x20 ; ' '
                     aCoreutils:
000000000000a4a4         db         "coreutils", 0                              ; DATA XREF=main+95, main+107, usage+615
000000000000a4ae         db  0x65 ; 'e'                                         ; DATA XREF=usage+813, usage+1006
000000000000a4af         db  0x6e ; 'n'
000000000000a4b0         db  0x5f ; '_'
000000000000a4b1         db  0x00 ; '.'
                     aFullDocumentat:
000000000000a4b2         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+841, usage+1030
                     aUsrlocalsharel:
000000000000a4cd         db         "/usr/local/share/locale", 0                ; DATA XREF=main+88
                     aJimMeyering:
000000000000a4e5         db         "Jim Meyering", 0                           ; DATA XREF=main+383
                     aDavidMackenzie:
000000000000a4f2         db         "David MacKenzie", 0                        ; DATA XREF=main+390
                     aHlprcfhv:
000000000000a502         db         "HLPRcfhv", 0                               ; DATA XREF=main+159
                     aMissingOperand:
000000000000a50b         db         "missing operand", 0                        ; DATA XREF=main+1075
                     aMissingOperand_a51b:        // aMissingOperand
000000000000a51b         db         "missing operand after %s", 0               ; DATA XREF=main+1159
                     aInvalidGroupS:
000000000000a534         db         "invalid group: %s", 0                      ; DATA XREF=main+1011
                     aRecursive:
000000000000a546         db         "recursive", 0
                     aChanges:
000000000000a550         db         "changes", 0
000000000000a558         db  0x6e ; 'n'
000000000000a559         db  0x6f ; 'o'
000000000000a55a         db  0x2d ; '-'
000000000000a55b         db  0x64 ; 'd'
000000000000a55c         db  0x65 ; 'e'
                     aReference:
000000000000a55d         db         "reference", 0
000000000000a567         db  0x6e ; 'n'
000000000000a568         db  0x6f ; 'o'
000000000000a569         db  0x2d ; '-'
                     aPreserveroot:
000000000000a56a         db         "preserve-root", 0
                     aQuiet:
000000000000a578         db         "quiet", 0
                     aSilent:
000000000000a57e         db         "silent", 0
                     aVerbose:
000000000000a585         db         "verbose", 0
                     aHelp:
000000000000a58d         db         "help", 0
                     aVersion:
000000000000a592         db         "version", 0
000000000000a59a         align      32
                     aTrySHelpForMor:
000000000000a5a0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000a5c7         align      8
                     aUsageSOptionGr:
000000000000a5c8         db         "Usage: %s [OPTION]... GROUP FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n", 0 ; DATA XREF=usage+93
000000000000a61d         align      32
                     aChangeTheGroup:
000000000000a620         db         "Change the group of each FILE to GROUP.\nWith --reference, change the group of each FILE to that of RFILE.\n\n", 0 ; DATA XREF=usage+135
000000000000a68c         align      16
                     aCChangesLikeVe:
000000000000a690         db         "  -c, --changes          like verbose but report only when a change is made\n  -f, --silent, --quiet  suppress most error messages\n  -v, --verbose          output a diagnostic for every file processed\n", 0 ; DATA XREF=usage+172
000000000000a759         align      32
                     aDereferenceAff:
000000000000a760         db         "      --dereference      affect the referent of each symbolic link (this is\n                         the default), rather than the symbolic link itself\n  -h, --no-dereference   affect symbolic links instead of any referenced file\n", 0 ; DATA XREF=usage+209
000000000000a847         align      8
                     aUsefulOnlyOnSy:
000000000000a848         db         "                         (useful only on systems that can change the\n                         ownership of a symlink)\n", 0 ; DATA XREF=usage+246
000000000000a8bf         align      64
                     aNopreserveroot:
000000000000a8c0         db         "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n", 0 ; DATA XREF=usage+283
                     aReferencerfile:
000000000000a940         db         "      --reference=RFILE  use RFILE's group rather than specifying a\n                         GROUP value\n", 0 ; DATA XREF=usage+320
000000000000a9aa         align      16
                     aRRecursiveOper:
000000000000a9b0         db         "  -R, --recursive        operate on files and directories recursively\n", 0 ; DATA XREF=usage+357
000000000000a9f7         align      8
                     aNtheFollowingO:
000000000000a9f8         db         "\nThe following options modify how a hierarchy is traversed when the -R\noption is also specified.  If more than one is specified, only the final\none takes effect.\n\n  -H                     if a command line argument is a symbolic link\n                      " ; DATA XREF=usage+394
000000000000aaf8         db         "   to a directory, traverse it\n  -L                     traverse every symbolic link to a directory\n                         encountered\n  -P                     do not traverse any symbolic links (default)\n\n", 0
000000000000abc9         align      16
                     aHelpDisplayThi:
000000000000abd0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+431
000000000000abfd         align      1024
                     aVersionOutputV:
000000000000ac00         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+468
000000000000ac36         align      8
                     aNexamplesnSSta:
000000000000ac38         db         "\nExamples:\n  %s staff /u      Change the group of /u to \"staff\".\n  %s -hR staff /u  Change the group of /u and subfiles to \"staff\".\n", 0 ; DATA XREF=usage+505
000000000000acbd         align      64
                     aHttpswwwgnuorg:
000000000000acc0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+767, usage+867, usage+960, usage+1070, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000ace8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1111
000000000000ad2f         align      16
                     aOrAvailableLoc:
000000000000ad30         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+910
000000000000ad63         align      8
                     aRDereferenceRe:
000000000000ad68         db         "-R --dereference requires either -H or -L", 0 ; DATA XREF=main+1113
000000000000ad92         align      8
                     aFailedToGetAtt:
000000000000ad98         db         "failed to get attributes of %s", 0         ; DATA XREF=main+877, main+1221
                     aCannotAccessS:
000000000000adb7         db         "cannot access %s", 0                       ; DATA XREF=sub_2df0+47
                     aCannotReadDire:
000000000000adc8         db         "cannot read directory %s", 0               ; DATA XREF=sub_32e0+23
                     aCannotDerefere:
000000000000ade1         db         "cannot dereference %s", 0                  ; DATA XREF=sub_32e0+301
                     aChangingOwners:
000000000000adf7         db         "changing ownership of %s", 0               ; DATA XREF=sub_2e40+714
                     aChangingGroupO:
000000000000ae10         db         "changing group of %s", 0                   ; DATA XREF=sub_2e40+1080
                     aNoChangeToOwne:
000000000000ae25         db         "no change to ownership of %s\n", 0         ; DATA XREF=sub_32e0+416
                     aGroupOfSRetain:
000000000000ae43         db         "group of %s retained as %s\n", 0           ; DATA XREF=sub_2e40+652
                     aOwnershipOfSRe_ae5f:        // aOwnershipOfSRe
000000000000ae5f         db         "ownership of %s retained\n", 0             ; DATA XREF=sub_32e0+360
                     aFtsreadFailed:
000000000000ae79         db         "fts_read failed", 0                        ; DATA XREF=chown_files+248
                     aFtscloseFailed:
000000000000ae89         db         "fts_close failed", 0                       ; DATA XREF=chown_files+165
000000000000ae9a         align      32
                     aItIsDangerousT:
000000000000aea0         db         "it is dangerous to operate recursively on %s", 0 ; DATA XREF=sub_29d0+803, sub_2e40+168
000000000000aecd         align      16
                     aItIsDangerousT_aed0:        // aItIsDangerousT
000000000000aed0         db         "it is dangerous to operate recursively on %s (same as %s)", 0 ; DATA XREF=sub_32e0+507, sub_35f0+35
000000000000af0a         align      16
                     aUseNopreserver:
000000000000af10         db         "use --no-preserve-root to override this failsafe", 0 ; DATA XREF=sub_29d0+842, sub_2e40+207
000000000000af41         align      8
                     aWarningCircula:
000000000000af48         db         "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 0 ; DATA XREF=sub_2e40+924
000000000000b002         align      8
                     aChangedOwnersh:
000000000000b008         db         "changed ownership of %s from %s to %s\n", 0 ; DATA XREF=sub_2e40+1152
000000000000b02f         align      16
                     aChangedGroupOf:
000000000000b030         db         "changed group of %s from %s to %s\n", 0    ; DATA XREF=sub_2e40+990
000000000000b053         align      8
                     aFailedToChange:
000000000000b058         db         "failed to change ownership of %s from %s to %s\n", 0 ; DATA XREF=sub_2e40+586
                     aFailedToChange_b088:        // aFailedToChange
000000000000b088         db         "failed to change group of %s from %s to %s\n", 0 ; DATA XREF=sub_2e40+1025
000000000000b0b4         align      8
                     aFailedToChange_b0b8:        // aFailedToChange
000000000000b0b8         db         "failed to change ownership of %s\n", 0     ; DATA XREF=sub_32e0+400, sub_32e0+672
000000000000b0da         align      32
                     aFailedToChange_b0e0:        // aFailedToChange
000000000000b0e0         db         "failed to change ownership of %s to %s\n", 0 ; DATA XREF=sub_32e0+179
                     aFailedToChange_b108:        // aFailedToChange
000000000000b108         db         "failed to change group of %s to %s\n", 0   ; DATA XREF=sub_32e0+387
000000000000b12c         align      16
                     aOwnershipOfSRe:
000000000000b130         db         "ownership of %s retained as %s\n", 0       ; DATA XREF=sub_29d0+407
                     aNeitherSymboli:
000000000000b150         db         "neither symbolic link %s nor referent has been changed\n", 0 ; DATA XREF=sub_32e0+122
000000000000b188         db  0x63 ; 'c'                                         ; DATA XREF=change_file_owner+83
000000000000b189         db  0x78 ; 'x'
000000000000b18a         db  0xff ; '.'
000000000000b18b         db  0xff ; '.'
000000000000b18c         db  0x00 ; '.'
000000000000b18d         db  0x7b ; '{'
000000000000b18e         db  0xff ; '.'
000000000000b18f         db  0xff ; '.'
000000000000b190         db  0x48 ; 'H'
000000000000b191         db  0x78 ; 'x'
000000000000b192         db  0xff ; '.'
000000000000b193         db  0xff ; '.'
000000000000b194         db  0x63 ; 'c'
000000000000b195         db  0x78 ; 'x'
000000000000b196         db  0xff ; '.'
000000000000b197         db  0xff ; '.'
000000000000b198         db  0xd8 ; '.'
000000000000b199         db  0x7b ; '{'
000000000000b19a         db  0xff ; '.'
000000000000b19b         db  0xff ; '.'
000000000000b19c         db  0x63 ; 'c'
000000000000b19d         db  0x78 ; 'x'
000000000000b19e         db  0xff ; '.'
000000000000b19f         db  0xff ; '.'
000000000000b1a0         db  0xb8 ; '.'
000000000000b1a1         db  0x7c ; '|'
000000000000b1a2         db  0xff ; '.'
000000000000b1a3         db  0xff ; '.'
000000000000b1a4         db  0x28 ; '('
000000000000b1a5         db  0x7c ; '|'
000000000000b1a6         db  0xff ; '.'
000000000000b1a7         db  0xff ; '.'
000000000000b1a8         db  0x63 ; 'c'
000000000000b1a9         db  0x78 ; 'x'
000000000000b1aa         db  0xff ; '.'
000000000000b1ab         db  0xff ; '.'
000000000000b1ac         db  0x63 ; 'c'
000000000000b1ad         db  0x78 ; 'x'
000000000000b1ae         db  0xff ; '.'
000000000000b1af         db  0xff ; '.'
000000000000b1b0         db  0x68 ; 'h'
000000000000b1b1         db  0x7c ; '|'
000000000000b1b2         db  0xff ; '.'
000000000000b1b3         db  0xff ; '.'
                     a831:
000000000000b1b4         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000b1b9         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000b1c5         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
000000000000b1cc         align      16
                     aANullArgv0WasP:
000000000000b1d0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000b208         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000b210         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000b211         db  0x74 ; 't'
000000000000b212         db  0x2d ; '-'
000000000000b213         db  0x00 ; '.'
000000000000b214         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000b215         db  0x80 ; '.'
000000000000b216         db  0x98 ; '.'
000000000000b217         db  0x00 ; '.'
000000000000b218         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000b219         db  0x80 ; '.'
000000000000b21a         db  0x99 ; '.'
000000000000b21b         db  0x00 ; '.'
000000000000b21c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000b21d         db  0x07 ; '.'
000000000000b21e         db  0x65 ; 'e'
000000000000b21f         db  0x00 ; '.'
000000000000b220         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000b221         db  0xaf ; '.'
000000000000b222         db  0x00 ; '.'
000000000000b223         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4200+1451, sub_4200+1493, sub_4200+2429
000000000000b224         db  0x00 ; '.'
000000000000b225         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4200+132, sub_4200+1338, sub_4200+1670, sub_4200+1697, sub_4200+2352
000000000000b226         db  0x00 ; '.'
000000000000b227         db  0x60 ; '`'                                         ; DATA XREF=sub_4200+1627, sub_4200+1654
000000000000b228         db  0x00 ; '.'
                     aLiteral:
000000000000b229         db         "literal", 0
                     aShell:
000000000000b231         db         "shell", 0
                     aShellalways:
000000000000b237         db         "shell-always", 0
000000000000b244         db  0x73 ; 's'
000000000000b245         db  0x68 ; 'h'
000000000000b246         db  0x65 ; 'e'
000000000000b247         db  0x6c ; 'l'
000000000000b248         db  0x6c ; 'l'
000000000000b249         db  0x2d ; '-'
                     aEscape:
000000000000b24a         db         "escape", 0
                     aShellescapealw:
000000000000b251         db         "shell-escape-always", 0
                     aCmaybe:
000000000000b265         db         "c-maybe", 0
                     aClocale:
000000000000b26d         db         "clocale", 0
000000000000b275         align      128
                     switch_table_b280:        // switch_table
000000000000b280         dd         quotearg_buffer_restyled.loc_48fa-switch_table_b280, quotearg_buffer_restyled.loc_3b53-switch_table_b280, quotearg_buffer_restyled.loc_4b28-switch_table_b280, quotearg_buffer_restyled.loc_4934-switch_table_b280 ; switch table used at 0x3b51 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000b290         dd         quotearg_buffer_restyled.loc_4724-switch_table_b280, quotearg_buffer_restyled.loc_4780-switch_table_b280, quotearg_buffer_restyled.loc_47d5-switch_table_b280, quotearg_buffer_restyled.loc_481a-switch_table_b280
000000000000b2a0         dd         3 dup (quotearg_buffer_restyled.loc_4854-switch_table_b280)
000000000000b2ac         db  0x24 ; '$'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000b2ad         db  0x8c ; '.'
000000000000b2ae         db  0xff ; '.'
000000000000b2af         db  0xff ; '.'
000000000000b2b0         db  0x0c ; '.'
000000000000b2b1         db  0x8d ; '.'
000000000000b2b2         db  0xff ; '.'
000000000000b2b3         db  0xff ; '.'
000000000000b2b4         db  0x0c ; '.'
000000000000b2b5         db  0x8d ; '.'
000000000000b2b6         db  0xff ; '.'
000000000000b2b7         db  0xff ; '.'
000000000000b2b8         db  0x0c ; '.'
000000000000b2b9         db  0x8d ; '.'
000000000000b2ba         db  0xff ; '.'
000000000000b2bb         db  0xff ; '.'
000000000000b2bc         db  0x0c ; '.'
000000000000b2bd         db  0x8d ; '.'
000000000000b2be         db  0xff ; '.'
000000000000b2bf         db  0xff ; '.'
000000000000b2c0         db  0x0c ; '.'
000000000000b2c1         db  0x8d ; '.'
000000000000b2c2         db  0xff ; '.'
000000000000b2c3         db  0xff ; '.'
000000000000b2c4         db  0x0c ; '.'
000000000000b2c5         db  0x8d ; '.'
000000000000b2c6         db  0xff ; '.'
000000000000b2c7         db  0xff ; '.'
000000000000b2c8         db  0x64 ; 'd'
000000000000b2c9         db  0x8c ; '.'
000000000000b2ca         db  0xff ; '.'
000000000000b2cb         db  0xff ; '.'
000000000000b2cc         db  0x6c ; 'l'
000000000000b2cd         db  0x8b ; '.'
000000000000b2ce         db  0xff ; '.'
000000000000b2cf         db  0xff ; '.'
000000000000b2d0         db  0x2c ; ','
000000000000b2d1         db  0x8b ; '.'
000000000000b2d2         db  0xff ; '.'
000000000000b2d3         db  0xff ; '.'
000000000000b2d4         db  0xf4 ; '.'
000000000000b2d5         db  0x8c ; '.'
000000000000b2d6         db  0xff ; '.'
000000000000b2d7         db  0xff ; '.'
000000000000b2d8         db  0xe4 ; '.'
000000000000b2d9         db  0x8c ; '.'
000000000000b2da         db  0xff ; '.'
000000000000b2db         db  0xff ; '.'
000000000000b2dc         db  0xd4 ; '.'
000000000000b2dd         db  0x8c ; '.'
000000000000b2de         db  0xff ; '.'
000000000000b2df         db  0xff ; '.'
000000000000b2e0         db  0xc4 ; '.'
000000000000b2e1         db  0x8c ; '.'
000000000000b2e2         db  0xff ; '.'
000000000000b2e3         db  0xff ; '.'
000000000000b2e4         db  0x0c ; '.'
000000000000b2e5         db  0x8d ; '.'
000000000000b2e6         db  0xff ; '.'
000000000000b2e7         db  0xff ; '.'
000000000000b2e8         db  0x0c ; '.'
000000000000b2e9         db  0x8d ; '.'
000000000000b2ea         db  0xff ; '.'
000000000000b2eb         db  0xff ; '.'
000000000000b2ec         db  0x0c ; '.'
000000000000b2ed         db  0x8d ; '.'
000000000000b2ee         db  0xff ; '.'
000000000000b2ef         db  0xff ; '.'
000000000000b2f0         db  0x0c ; '.'
000000000000b2f1         db  0x8d ; '.'
000000000000b2f2         db  0xff ; '.'
000000000000b2f3         db  0xff ; '.'
000000000000b2f4         db  0x0c ; '.'
000000000000b2f5         db  0x8d ; '.'
000000000000b2f6         db  0xff ; '.'
000000000000b2f7         db  0xff ; '.'
000000000000b2f8         db  0x0c ; '.'
000000000000b2f9         db  0x8d ; '.'
000000000000b2fa         db  0xff ; '.'
000000000000b2fb         db  0xff ; '.'
000000000000b2fc         db  0x0c ; '.'
000000000000b2fd         db  0x8d ; '.'
000000000000b2fe         db  0xff ; '.'
000000000000b2ff         db  0xff ; '.'
000000000000b300         db  0x0c ; '.'
000000000000b301         db  0x8d ; '.'
000000000000b302         db  0xff ; '.'
000000000000b303         db  0xff ; '.'
000000000000b304         db  0x0c ; '.'
000000000000b305         db  0x8d ; '.'
000000000000b306         db  0xff ; '.'
000000000000b307         db  0xff ; '.'
000000000000b308         db  0x0c ; '.'
000000000000b309         db  0x8d ; '.'
000000000000b30a         db  0xff ; '.'
000000000000b30b         db  0xff ; '.'
000000000000b30c         db  0x0c ; '.'
000000000000b30d         db  0x8d ; '.'
000000000000b30e         db  0xff ; '.'
000000000000b30f         db  0xff ; '.'
000000000000b310         db  0x0c ; '.'
000000000000b311         db  0x8d ; '.'
000000000000b312         db  0xff ; '.'
000000000000b313         db  0xff ; '.'
000000000000b314         db  0x0c ; '.'
000000000000b315         db  0x8d ; '.'
000000000000b316         db  0xff ; '.'
000000000000b317         db  0xff ; '.'
000000000000b318         db  0x0c ; '.'
000000000000b319         db  0x8d ; '.'
000000000000b31a         db  0xff ; '.'
000000000000b31b         db  0xff ; '.'
000000000000b31c         db  0x0c ; '.'
000000000000b31d         db  0x8d ; '.'
000000000000b31e         db  0xff ; '.'
000000000000b31f         db  0xff ; '.'
000000000000b320         db  0x0c ; '.'
000000000000b321         db  0x8d ; '.'
000000000000b322         db  0xff ; '.'
000000000000b323         db  0xff ; '.'
000000000000b324         db  0x0c ; '.'
000000000000b325         db  0x8d ; '.'
000000000000b326         db  0xff ; '.'
000000000000b327         db  0xff ; '.'
000000000000b328         db  0x0c ; '.'
000000000000b329         db  0x8d ; '.'
000000000000b32a         db  0xff ; '.'
000000000000b32b         db  0xff ; '.'
000000000000b32c         db  0xb4 ; '.'
000000000000b32d         db  0x8c ; '.'
000000000000b32e         db  0xff ; '.'
000000000000b32f         db  0xff ; '.'
000000000000b330         db  0xa4 ; '.'
000000000000b331         db  0x8c ; '.'
000000000000b332         db  0xff ; '.'
000000000000b333         db  0xff ; '.'
000000000000b334         db  0xa4 ; '.'
000000000000b335         db  0x8c ; '.'
000000000000b336         db  0xff ; '.'
000000000000b337         db  0xff ; '.'
000000000000b338         db  0x74 ; 't'
000000000000b339         db  0x8c ; '.'
000000000000b33a         db  0xff ; '.'
000000000000b33b         db  0xff ; '.'
000000000000b33c         db  0xa4 ; '.'
000000000000b33d         db  0x8c ; '.'
000000000000b33e         db  0xff ; '.'
000000000000b33f         db  0xff ; '.'
000000000000b340         db  0x4c ; 'L'
000000000000b341         db  0x8c ; '.'
000000000000b342         db  0xff ; '.'
000000000000b343         db  0xff ; '.'
000000000000b344         db  0xa4 ; '.'
000000000000b345         db  0x8c ; '.'
000000000000b346         db  0xff ; '.'
000000000000b347         db  0xff ; '.'
000000000000b348         db  0x07 ; '.'
000000000000b349         db  0x8b ; '.'
000000000000b34a         db  0xff ; '.'
000000000000b34b         db  0xff ; '.'
000000000000b34c         db  0xa4 ; '.'
000000000000b34d         db  0x8c ; '.'
000000000000b34e         db  0xff ; '.'
000000000000b34f         db  0xff ; '.'
000000000000b350         db  0xa4 ; '.'
000000000000b351         db  0x8c ; '.'
000000000000b352         db  0xff ; '.'
000000000000b353         db  0xff ; '.'
000000000000b354         db  0xa4 ; '.'
000000000000b355         db  0x8c ; '.'
000000000000b356         db  0xff ; '.'
000000000000b357         db  0xff ; '.'
000000000000b358         db  0x4c ; 'L'
000000000000b359         db  0x8c ; '.'
000000000000b35a         db  0xff ; '.'
000000000000b35b         db  0xff ; '.'
000000000000b35c         db  0x4c ; 'L'
000000000000b35d         db  0x8c ; '.'
000000000000b35e         db  0xff ; '.'
000000000000b35f         db  0xff ; '.'
000000000000b360         db  0x4c ; 'L'
000000000000b361         db  0x8c ; '.'
000000000000b362         db  0xff ; '.'
000000000000b363         db  0xff ; '.'
000000000000b364         db  0x4c ; 'L'
000000000000b365         db  0x8c ; '.'
000000000000b366         db  0xff ; '.'
000000000000b367         db  0xff ; '.'
000000000000b368         db  0x4c ; 'L'
000000000000b369         db  0x8c ; '.'
000000000000b36a         db  0xff ; '.'
000000000000b36b         db  0xff ; '.'
000000000000b36c         db  0x4c ; 'L'
000000000000b36d         db  0x8c ; '.'
000000000000b36e         db  0xff ; '.'
000000000000b36f         db  0xff ; '.'
000000000000b370         db  0x4c ; 'L'
000000000000b371         db  0x8c ; '.'
000000000000b372         db  0xff ; '.'
000000000000b373         db  0xff ; '.'
000000000000b374         db  0x4c ; 'L'
000000000000b375         db  0x8c ; '.'
000000000000b376         db  0xff ; '.'
000000000000b377         db  0xff ; '.'
000000000000b378         db  0x4c ; 'L'
000000000000b379         db  0x8c ; '.'
000000000000b37a         db  0xff ; '.'
000000000000b37b         db  0xff ; '.'
000000000000b37c         db  0x4c ; 'L'
000000000000b37d         db  0x8c ; '.'
000000000000b37e         db  0xff ; '.'
000000000000b37f         db  0xff ; '.'
000000000000b380         db  0x4c ; 'L'
000000000000b381         db  0x8c ; '.'
000000000000b382         db  0xff ; '.'
000000000000b383         db  0xff ; '.'
000000000000b384         db  0x4c ; 'L'
000000000000b385         db  0x8c ; '.'
000000000000b386         db  0xff ; '.'
000000000000b387         db  0xff ; '.'
000000000000b388         db  0x4c ; 'L'
000000000000b389         db  0x8c ; '.'
000000000000b38a         db  0xff ; '.'
000000000000b38b         db  0xff ; '.'
000000000000b38c         db  0x4c ; 'L'
000000000000b38d         db  0x8c ; '.'
000000000000b38e         db  0xff ; '.'
000000000000b38f         db  0xff ; '.'
000000000000b390         db  0x4c ; 'L'
000000000000b391         db  0x8c ; '.'
000000000000b392         db  0xff ; '.'
000000000000b393         db  0xff ; '.'
000000000000b394         db  0x4c ; 'L'
000000000000b395         db  0x8c ; '.'
000000000000b396         db  0xff ; '.'
000000000000b397         db  0xff ; '.'
000000000000b398         db  0xa4 ; '.'
000000000000b399         db  0x8c ; '.'
000000000000b39a         db  0xff ; '.'
000000000000b39b         db  0xff ; '.'
000000000000b39c         db  0xa4 ; '.'
000000000000b39d         db  0x8c ; '.'
000000000000b39e         db  0xff ; '.'
000000000000b39f         db  0xff ; '.'
000000000000b3a0         db  0xa4 ; '.'
000000000000b3a1         db  0x8c ; '.'
000000000000b3a2         db  0xff ; '.'
000000000000b3a3         db  0xff ; '.'
000000000000b3a4         db  0xa4 ; '.'
000000000000b3a5         db  0x8c ; '.'
000000000000b3a6         db  0xff ; '.'
000000000000b3a7         db  0xff ; '.'
000000000000b3a8         db  0xd7 ; '.'
000000000000b3a9         db  0x8a ; '.'
000000000000b3aa         db  0xff ; '.'
000000000000b3ab         db  0xff ; '.'
000000000000b3ac         db  0x0c ; '.'
000000000000b3ad         db  0x8d ; '.'
000000000000b3ae         db  0xff ; '.'
000000000000b3af         db  0xff ; '.'
000000000000b3b0         db  0x4c ; 'L'
000000000000b3b1         db  0x8c ; '.'
000000000000b3b2         db  0xff ; '.'
000000000000b3b3         db  0xff ; '.'
000000000000b3b4         db  0x4c ; 'L'
000000000000b3b5         db  0x8c ; '.'
000000000000b3b6         db  0xff ; '.'
000000000000b3b7         db  0xff ; '.'
000000000000b3b8         db  0x4c ; 'L'
000000000000b3b9         db  0x8c ; '.'
000000000000b3ba         db  0xff ; '.'
000000000000b3bb         db  0xff ; '.'
000000000000b3bc         db  0x4c ; 'L'
000000000000b3bd         db  0x8c ; '.'
000000000000b3be         db  0xff ; '.'
000000000000b3bf         db  0xff ; '.'
000000000000b3c0         db  0x4c ; 'L'
000000000000b3c1         db  0x8c ; '.'
000000000000b3c2         db  0xff ; '.'
000000000000b3c3         db  0xff ; '.'
000000000000b3c4         db  0x4c ; 'L'
000000000000b3c5         db  0x8c ; '.'
000000000000b3c6         db  0xff ; '.'
000000000000b3c7         db  0xff ; '.'
000000000000b3c8         db  0x4c ; 'L'
000000000000b3c9         db  0x8c ; '.'
000000000000b3ca         db  0xff ; '.'
000000000000b3cb         db  0xff ; '.'
000000000000b3cc         db  0x4c ; 'L'
000000000000b3cd         db  0x8c ; '.'
000000000000b3ce         db  0xff ; '.'
000000000000b3cf         db  0xff ; '.'
000000000000b3d0         db  0x4c ; 'L'
000000000000b3d1         db  0x8c ; '.'
000000000000b3d2         db  0xff ; '.'
000000000000b3d3         db  0xff ; '.'
000000000000b3d4         db  0x4c ; 'L'
000000000000b3d5         db  0x8c ; '.'
000000000000b3d6         db  0xff ; '.'
000000000000b3d7         db  0xff ; '.'
000000000000b3d8         db  0x4c ; 'L'
000000000000b3d9         db  0x8c ; '.'
000000000000b3da         db  0xff ; '.'
000000000000b3db         db  0xff ; '.'
000000000000b3dc         db  0x4c ; 'L'
000000000000b3dd         db  0x8c ; '.'
000000000000b3de         db  0xff ; '.'
000000000000b3df         db  0xff ; '.'
000000000000b3e0         db  0x4c ; 'L'
000000000000b3e1         db  0x8c ; '.'
000000000000b3e2         db  0xff ; '.'
000000000000b3e3         db  0xff ; '.'
000000000000b3e4         db  0x4c ; 'L'
000000000000b3e5         db  0x8c ; '.'
000000000000b3e6         db  0xff ; '.'
000000000000b3e7         db  0xff ; '.'
000000000000b3e8         db  0x4c ; 'L'
000000000000b3e9         db  0x8c ; '.'
000000000000b3ea         db  0xff ; '.'
000000000000b3eb         db  0xff ; '.'
000000000000b3ec         db  0x4c ; 'L'
000000000000b3ed         db  0x8c ; '.'
000000000000b3ee         db  0xff ; '.'
000000000000b3ef         db  0xff ; '.'
000000000000b3f0         db  0x4c ; 'L'
000000000000b3f1         db  0x8c ; '.'
000000000000b3f2         db  0xff ; '.'
000000000000b3f3         db  0xff ; '.'
000000000000b3f4         db  0x4c ; 'L'
000000000000b3f5         db  0x8c ; '.'
000000000000b3f6         db  0xff ; '.'
000000000000b3f7         db  0xff ; '.'
000000000000b3f8         db  0x4c ; 'L'
000000000000b3f9         db  0x8c ; '.'
000000000000b3fa         db  0xff ; '.'
000000000000b3fb         db  0xff ; '.'
000000000000b3fc         db  0x4c ; 'L'
000000000000b3fd         db  0x8c ; '.'
000000000000b3fe         db  0xff ; '.'
000000000000b3ff         db  0xff ; '.'
000000000000b400         db  0x4c ; 'L'
000000000000b401         db  0x8c ; '.'
000000000000b402         db  0xff ; '.'
000000000000b403         db  0xff ; '.'
000000000000b404         db  0x4c ; 'L'
000000000000b405         db  0x8c ; '.'
000000000000b406         db  0xff ; '.'
000000000000b407         db  0xff ; '.'
000000000000b408         db  0x4c ; 'L'
000000000000b409         db  0x8c ; '.'
000000000000b40a         db  0xff ; '.'
000000000000b40b         db  0xff ; '.'
000000000000b40c         db  0x4c ; 'L'
000000000000b40d         db  0x8c ; '.'
000000000000b40e         db  0xff ; '.'
000000000000b40f         db  0xff ; '.'
000000000000b410         db  0x4c ; 'L'
000000000000b411         db  0x8c ; '.'
000000000000b412         db  0xff ; '.'
000000000000b413         db  0xff ; '.'
000000000000b414         db  0x4c ; 'L'
000000000000b415         db  0x8c ; '.'
000000000000b416         db  0xff ; '.'
000000000000b417         db  0xff ; '.'
000000000000b418         db  0xa4 ; '.'
000000000000b419         db  0x8c ; '.'
000000000000b41a         db  0xff ; '.'
000000000000b41b         db  0xff ; '.'
000000000000b41c         db  0x7c ; '|'
000000000000b41d         db  0x8b ; '.'
000000000000b41e         db  0xff ; '.'
000000000000b41f         db  0xff ; '.'
000000000000b420         db  0x4c ; 'L'
000000000000b421         db  0x8c ; '.'
000000000000b422         db  0xff ; '.'
000000000000b423         db  0xff ; '.'
000000000000b424         db  0xa4 ; '.'
000000000000b425         db  0x8c ; '.'
000000000000b426         db  0xff ; '.'
000000000000b427         db  0xff ; '.'
000000000000b428         db  0x4c ; 'L'
000000000000b429         db  0x8c ; '.'
000000000000b42a         db  0xff ; '.'
000000000000b42b         db  0xff ; '.'
000000000000b42c         db  0xa4 ; '.'
000000000000b42d         db  0x8c ; '.'
000000000000b42e         db  0xff ; '.'
000000000000b42f         db  0xff ; '.'
000000000000b430         db  0x4c ; 'L'
000000000000b431         db  0x8c ; '.'
000000000000b432         db  0xff ; '.'
000000000000b433         db  0xff ; '.'
000000000000b434         db  0x4c ; 'L'
000000000000b435         db  0x8c ; '.'
000000000000b436         db  0xff ; '.'
000000000000b437         db  0xff ; '.'
000000000000b438         db  0x4c ; 'L'
000000000000b439         db  0x8c ; '.'
000000000000b43a         db  0xff ; '.'
000000000000b43b         db  0xff ; '.'
000000000000b43c         db  0x4c ; 'L'
000000000000b43d         db  0x8c ; '.'
000000000000b43e         db  0xff ; '.'
000000000000b43f         db  0xff ; '.'
000000000000b440         db  0x4c ; 'L'
000000000000b441         db  0x8c ; '.'
000000000000b442         db  0xff ; '.'
000000000000b443         db  0xff ; '.'
000000000000b444         db  0x4c ; 'L'
000000000000b445         db  0x8c ; '.'
000000000000b446         db  0xff ; '.'
000000000000b447         db  0xff ; '.'
000000000000b448         db  0x4c ; 'L'
000000000000b449         db  0x8c ; '.'
000000000000b44a         db  0xff ; '.'
000000000000b44b         db  0xff ; '.'
000000000000b44c         db  0x4c ; 'L'
000000000000b44d         db  0x8c ; '.'
000000000000b44e         db  0xff ; '.'
000000000000b44f         db  0xff ; '.'
000000000000b450         db  0x4c ; 'L'
000000000000b451         db  0x8c ; '.'
000000000000b452         db  0xff ; '.'
000000000000b453         db  0xff ; '.'
000000000000b454         db  0x4c ; 'L'
000000000000b455         db  0x8c ; '.'
000000000000b456         db  0xff ; '.'
000000000000b457         db  0xff ; '.'
000000000000b458         db  0x4c ; 'L'
000000000000b459         db  0x8c ; '.'
000000000000b45a         db  0xff ; '.'
000000000000b45b         db  0xff ; '.'
000000000000b45c         db  0x4c ; 'L'
000000000000b45d         db  0x8c ; '.'
000000000000b45e         db  0xff ; '.'
000000000000b45f         db  0xff ; '.'
000000000000b460         db  0x4c ; 'L'
000000000000b461         db  0x8c ; '.'
000000000000b462         db  0xff ; '.'
000000000000b463         db  0xff ; '.'
000000000000b464         db  0x4c ; 'L'
000000000000b465         db  0x8c ; '.'
000000000000b466         db  0xff ; '.'
000000000000b467         db  0xff ; '.'
000000000000b468         db  0x4c ; 'L'
000000000000b469         db  0x8c ; '.'
000000000000b46a         db  0xff ; '.'
000000000000b46b         db  0xff ; '.'
000000000000b46c         db  0x4c ; 'L'
000000000000b46d         db  0x8c ; '.'
000000000000b46e         db  0xff ; '.'
000000000000b46f         db  0xff ; '.'
000000000000b470         db  0x4c ; 'L'
000000000000b471         db  0x8c ; '.'
000000000000b472         db  0xff ; '.'
000000000000b473         db  0xff ; '.'
000000000000b474         db  0x4c ; 'L'
000000000000b475         db  0x8c ; '.'
000000000000b476         db  0xff ; '.'
000000000000b477         db  0xff ; '.'
000000000000b478         db  0x4c ; 'L'
000000000000b479         db  0x8c ; '.'
000000000000b47a         db  0xff ; '.'
000000000000b47b         db  0xff ; '.'
000000000000b47c         db  0x4c ; 'L'
000000000000b47d         db  0x8c ; '.'
000000000000b47e         db  0xff ; '.'
000000000000b47f         db  0xff ; '.'
000000000000b480         db  0x4c ; 'L'
000000000000b481         db  0x8c ; '.'
000000000000b482         db  0xff ; '.'
000000000000b483         db  0xff ; '.'
000000000000b484         db  0x4c ; 'L'
000000000000b485         db  0x8c ; '.'
000000000000b486         db  0xff ; '.'
000000000000b487         db  0xff ; '.'
000000000000b488         db  0x4c ; 'L'
000000000000b489         db  0x8c ; '.'
000000000000b48a         db  0xff ; '.'
000000000000b48b         db  0xff ; '.'
000000000000b48c         db  0x4c ; 'L'
000000000000b48d         db  0x8c ; '.'
000000000000b48e         db  0xff ; '.'
000000000000b48f         db  0xff ; '.'
000000000000b490         db  0x4c ; 'L'
000000000000b491         db  0x8c ; '.'
000000000000b492         db  0xff ; '.'
000000000000b493         db  0xff ; '.'
000000000000b494         db  0x4c ; 'L'
000000000000b495         db  0x8c ; '.'
000000000000b496         db  0xff ; '.'
000000000000b497         db  0xff ; '.'
000000000000b498         db  0x07 ; '.'
000000000000b499         db  0x8a ; '.'
000000000000b49a         db  0xff ; '.'
000000000000b49b         db  0xff ; '.'
000000000000b49c         db  0xa4 ; '.'
000000000000b49d         db  0x8c ; '.'
000000000000b49e         db  0xff ; '.'
000000000000b49f         db  0xff ; '.'
000000000000b4a0         db  0x07 ; '.'
000000000000b4a1         db  0x8a ; '.'
000000000000b4a2         db  0xff ; '.'
000000000000b4a3         db  0xff ; '.'
000000000000b4a4         db  0x74 ; 't'
000000000000b4a5         db  0x8c ; '.'
000000000000b4a6         db  0xff ; '.'
000000000000b4a7         db  0xff ; '.'
000000000000b4a8         db  0xf8 ; '.'                                         ; DATA XREF=sub_3fa0+137
000000000000b4a9         db  0x8b ; '.'
000000000000b4aa         db  0xff ; '.'
000000000000b4ab         db  0xff ; '.'
000000000000b4ac         db  0x08 ; '.'
000000000000b4ad         db  0x8b ; '.'
000000000000b4ae         db  0xff ; '.'
000000000000b4af         db  0xff ; '.'
000000000000b4b0         db  0x08 ; '.'
000000000000b4b1         db  0x8b ; '.'
000000000000b4b2         db  0xff ; '.'
000000000000b4b3         db  0xff ; '.'
000000000000b4b4         db  0x08 ; '.'
000000000000b4b5         db  0x8b ; '.'
000000000000b4b6         db  0xff ; '.'
000000000000b4b7         db  0xff ; '.'
000000000000b4b8         db  0x08 ; '.'
000000000000b4b9         db  0x8b ; '.'
000000000000b4ba         db  0xff ; '.'
000000000000b4bb         db  0xff ; '.'
000000000000b4bc         db  0x08 ; '.'
000000000000b4bd         db  0x8b ; '.'
000000000000b4be         db  0xff ; '.'
000000000000b4bf         db  0xff ; '.'
000000000000b4c0         db  0x08 ; '.'
000000000000b4c1         db  0x8b ; '.'
000000000000b4c2         db  0xff ; '.'
000000000000b4c3         db  0xff ; '.'
000000000000b4c4         db  0xe8 ; '.'
000000000000b4c5         db  0x8b ; '.'
000000000000b4c6         db  0xff ; '.'
000000000000b4c7         db  0xff ; '.'
000000000000b4c8         db  0x38 ; '8'
000000000000b4c9         db  0x8d ; '.'
000000000000b4ca         db  0xff ; '.'
000000000000b4cb         db  0xff ; '.'
000000000000b4cc         db  0x20 ; ' '
000000000000b4cd         db  0x8d ; '.'
000000000000b4ce         db  0xff ; '.'
000000000000b4cf         db  0xff ; '.'
000000000000b4d0         db  0xd0 ; '.'
000000000000b4d1         db  0x8b ; '.'
000000000000b4d2         db  0xff ; '.'
000000000000b4d3         db  0xff ; '.'
000000000000b4d4         db  0x10 ; '.'
000000000000b4d5         db  0x8d ; '.'
000000000000b4d6         db  0xff ; '.'
000000000000b4d7         db  0xff ; '.'
000000000000b4d8         db  0xb8 ; '.'
000000000000b4d9         db  0x8b ; '.'
000000000000b4da         db  0xff ; '.'
000000000000b4db         db  0xff ; '.'
000000000000b4dc         db  0xf8 ; '.'
000000000000b4dd         db  0x8c ; '.'
000000000000b4de         db  0xff ; '.'
000000000000b4df         db  0xff ; '.'
000000000000b4e0         db  0x08 ; '.'
000000000000b4e1         db  0x8b ; '.'
000000000000b4e2         db  0xff ; '.'
000000000000b4e3         db  0xff ; '.'
000000000000b4e4         db  0x08 ; '.'
000000000000b4e5         db  0x8b ; '.'
000000000000b4e6         db  0xff ; '.'
000000000000b4e7         db  0xff ; '.'
000000000000b4e8         db  0x08 ; '.'
000000000000b4e9         db  0x8b ; '.'
000000000000b4ea         db  0xff ; '.'
000000000000b4eb         db  0xff ; '.'
000000000000b4ec         db  0x08 ; '.'
000000000000b4ed         db  0x8b ; '.'
000000000000b4ee         db  0xff ; '.'
000000000000b4ef         db  0xff ; '.'
000000000000b4f0         db  0x08 ; '.'
000000000000b4f1         db  0x8b ; '.'
000000000000b4f2         db  0xff ; '.'
000000000000b4f3         db  0xff ; '.'
000000000000b4f4         db  0x08 ; '.'
000000000000b4f5         db  0x8b ; '.'
000000000000b4f6         db  0xff ; '.'
000000000000b4f7         db  0xff ; '.'
000000000000b4f8         db  0x08 ; '.'
000000000000b4f9         db  0x8b ; '.'
000000000000b4fa         db  0xff ; '.'
000000000000b4fb         db  0xff ; '.'
000000000000b4fc         db  0x08 ; '.'
000000000000b4fd         db  0x8b ; '.'
000000000000b4fe         db  0xff ; '.'
000000000000b4ff         db  0xff ; '.'
000000000000b500         db  0x08 ; '.'
000000000000b501         db  0x8b ; '.'
000000000000b502         db  0xff ; '.'
000000000000b503         db  0xff ; '.'
000000000000b504         db  0x08 ; '.'
000000000000b505         db  0x8b ; '.'
000000000000b506         db  0xff ; '.'
000000000000b507         db  0xff ; '.'
000000000000b508         db  0x08 ; '.'
000000000000b509         db  0x8b ; '.'
000000000000b50a         db  0xff ; '.'
000000000000b50b         db  0xff ; '.'
000000000000b50c         db  0x08 ; '.'
000000000000b50d         db  0x8b ; '.'
000000000000b50e         db  0xff ; '.'
000000000000b50f         db  0xff ; '.'
000000000000b510         db  0x08 ; '.'
000000000000b511         db  0x8b ; '.'
000000000000b512         db  0xff ; '.'
000000000000b513         db  0xff ; '.'
000000000000b514         db  0x08 ; '.'
000000000000b515         db  0x8b ; '.'
000000000000b516         db  0xff ; '.'
000000000000b517         db  0xff ; '.'
000000000000b518         db  0x08 ; '.'
000000000000b519         db  0x8b ; '.'
000000000000b51a         db  0xff ; '.'
000000000000b51b         db  0xff ; '.'
000000000000b51c         db  0x08 ; '.'
000000000000b51d         db  0x8b ; '.'
000000000000b51e         db  0xff ; '.'
000000000000b51f         db  0xff ; '.'
000000000000b520         db  0x08 ; '.'
000000000000b521         db  0x8b ; '.'
000000000000b522         db  0xff ; '.'
000000000000b523         db  0xff ; '.'
000000000000b524         db  0x08 ; '.'
000000000000b525         db  0x8b ; '.'
000000000000b526         db  0xff ; '.'
000000000000b527         db  0xff ; '.'
000000000000b528         db  0xe0 ; '.'
000000000000b529         db  0x8c ; '.'
000000000000b52a         db  0xff ; '.'
000000000000b52b         db  0xff ; '.'
000000000000b52c         db  0xc8 ; '.'
000000000000b52d         db  0x8c ; '.'
000000000000b52e         db  0xff ; '.'
000000000000b52f         db  0xff ; '.'
000000000000b530         db  0xc8 ; '.'
000000000000b531         db  0x8c ; '.'
000000000000b532         db  0xff ; '.'
000000000000b533         db  0xff ; '.'
000000000000b534         db  0xb0 ; '.'
000000000000b535         db  0x8c ; '.'
000000000000b536         db  0xff ; '.'
000000000000b537         db  0xff ; '.'
000000000000b538         db  0xc8 ; '.'
000000000000b539         db  0x8c ; '.'
000000000000b53a         db  0xff ; '.'
000000000000b53b         db  0xff ; '.'
000000000000b53c         db  0x98 ; '.'
000000000000b53d         db  0x8c ; '.'
000000000000b53e         db  0xff ; '.'
000000000000b53f         db  0xff ; '.'
000000000000b540         db  0xc8 ; '.'
000000000000b541         db  0x8c ; '.'
000000000000b542         db  0xff ; '.'
000000000000b543         db  0xff ; '.'
000000000000b544         db  0x08 ; '.'
000000000000b545         db  0x89 ; '.'
000000000000b546         db  0xff ; '.'
000000000000b547         db  0xff ; '.'
000000000000b548         db  0xc8 ; '.'
000000000000b549         db  0x8c ; '.'
000000000000b54a         db  0xff ; '.'
000000000000b54b         db  0xff ; '.'
000000000000b54c         db  0xc8 ; '.'
000000000000b54d         db  0x8c ; '.'
000000000000b54e         db  0xff ; '.'
000000000000b54f         db  0xff ; '.'
000000000000b550         db  0xc8 ; '.'
000000000000b551         db  0x8c ; '.'
000000000000b552         db  0xff ; '.'
000000000000b553         db  0xff ; '.'
000000000000b554         db  0x98 ; '.'
000000000000b555         db  0x8c ; '.'
000000000000b556         db  0xff ; '.'
000000000000b557         db  0xff ; '.'
000000000000b558         db  0x98 ; '.'
000000000000b559         db  0x8c ; '.'
000000000000b55a         db  0xff ; '.'
000000000000b55b         db  0xff ; '.'
000000000000b55c         db  0x98 ; '.'
000000000000b55d         db  0x8c ; '.'
000000000000b55e         db  0xff ; '.'
000000000000b55f         db  0xff ; '.'
000000000000b560         db  0x98 ; '.'
000000000000b561         db  0x8c ; '.'
000000000000b562         db  0xff ; '.'
000000000000b563         db  0xff ; '.'
000000000000b564         db  0x98 ; '.'
000000000000b565         db  0x8c ; '.'
000000000000b566         db  0xff ; '.'
000000000000b567         db  0xff ; '.'
000000000000b568         db  0x98 ; '.'
000000000000b569         db  0x8c ; '.'
000000000000b56a         db  0xff ; '.'
000000000000b56b         db  0xff ; '.'
000000000000b56c         db  0x98 ; '.'
000000000000b56d         db  0x8c ; '.'
000000000000b56e         db  0xff ; '.'
000000000000b56f         db  0xff ; '.'
000000000000b570         db  0x98 ; '.'
000000000000b571         db  0x8c ; '.'
000000000000b572         db  0xff ; '.'
000000000000b573         db  0xff ; '.'
000000000000b574         db  0x98 ; '.'
000000000000b575         db  0x8c ; '.'
000000000000b576         db  0xff ; '.'
000000000000b577         db  0xff ; '.'
000000000000b578         db  0x98 ; '.'
000000000000b579         db  0x8c ; '.'
000000000000b57a         db  0xff ; '.'
000000000000b57b         db  0xff ; '.'
000000000000b57c         db  0x98 ; '.'
000000000000b57d         db  0x8c ; '.'
000000000000b57e         db  0xff ; '.'
000000000000b57f         db  0xff ; '.'
000000000000b580         db  0x98 ; '.'
000000000000b581         db  0x8c ; '.'
000000000000b582         db  0xff ; '.'
000000000000b583         db  0xff ; '.'
000000000000b584         db  0x98 ; '.'
000000000000b585         db  0x8c ; '.'
000000000000b586         db  0xff ; '.'
000000000000b587         db  0xff ; '.'
000000000000b588         db  0x98 ; '.'
000000000000b589         db  0x8c ; '.'
000000000000b58a         db  0xff ; '.'
000000000000b58b         db  0xff ; '.'
000000000000b58c         db  0x98 ; '.'
000000000000b58d         db  0x8c ; '.'
000000000000b58e         db  0xff ; '.'
000000000000b58f         db  0xff ; '.'
000000000000b590         db  0x98 ; '.'
000000000000b591         db  0x8c ; '.'
000000000000b592         db  0xff ; '.'
000000000000b593         db  0xff ; '.'
000000000000b594         db  0xc8 ; '.'
000000000000b595         db  0x8c ; '.'
000000000000b596         db  0xff ; '.'
000000000000b597         db  0xff ; '.'
000000000000b598         db  0xc8 ; '.'
000000000000b599         db  0x8c ; '.'
000000000000b59a         db  0xff ; '.'
000000000000b59b         db  0xff ; '.'
000000000000b59c         db  0xc8 ; '.'
000000000000b59d         db  0x8c ; '.'
000000000000b59e         db  0xff ; '.'
000000000000b59f         db  0xff ; '.'
000000000000b5a0         db  0xc8 ; '.'
000000000000b5a1         db  0x8c ; '.'
000000000000b5a2         db  0xff ; '.'
000000000000b5a3         db  0xff ; '.'
000000000000b5a4         db  0xd8 ; '.'
000000000000b5a5         db  0x88 ; '.'
000000000000b5a6         db  0xff ; '.'
000000000000b5a7         db  0xff ; '.'
000000000000b5a8         db  0x08 ; '.'
000000000000b5a9         db  0x8b ; '.'
000000000000b5aa         db  0xff ; '.'
000000000000b5ab         db  0xff ; '.'
000000000000b5ac         db  0x98 ; '.'
000000000000b5ad         db  0x8c ; '.'
000000000000b5ae         db  0xff ; '.'
000000000000b5af         db  0xff ; '.'
000000000000b5b0         db  0x98 ; '.'
000000000000b5b1         db  0x8c ; '.'
000000000000b5b2         db  0xff ; '.'
000000000000b5b3         db  0xff ; '.'
000000000000b5b4         db  0x98 ; '.'
000000000000b5b5         db  0x8c ; '.'
000000000000b5b6         db  0xff ; '.'
000000000000b5b7         db  0xff ; '.'
000000000000b5b8         db  0x98 ; '.'
000000000000b5b9         db  0x8c ; '.'
000000000000b5ba         db  0xff ; '.'
000000000000b5bb         db  0xff ; '.'
000000000000b5bc         db  0x98 ; '.'
000000000000b5bd         db  0x8c ; '.'
000000000000b5be         db  0xff ; '.'
000000000000b5bf         db  0xff ; '.'
000000000000b5c0         db  0x98 ; '.'
000000000000b5c1         db  0x8c ; '.'
000000000000b5c2         db  0xff ; '.'
000000000000b5c3         db  0xff ; '.'
000000000000b5c4         db  0x98 ; '.'
000000000000b5c5         db  0x8c ; '.'
000000000000b5c6         db  0xff ; '.'
000000000000b5c7         db  0xff ; '.'
000000000000b5c8         db  0x98 ; '.'
000000000000b5c9         db  0x8c ; '.'
000000000000b5ca         db  0xff ; '.'
000000000000b5cb         db  0xff ; '.'
000000000000b5cc         db  0x98 ; '.'
000000000000b5cd         db  0x8c ; '.'
000000000000b5ce         db  0xff ; '.'
000000000000b5cf         db  0xff ; '.'
000000000000b5d0         db  0x98 ; '.'
000000000000b5d1         db  0x8c ; '.'
000000000000b5d2         db  0xff ; '.'
000000000000b5d3         db  0xff ; '.'
000000000000b5d4         db  0x98 ; '.'
000000000000b5d5         db  0x8c ; '.'
000000000000b5d6         db  0xff ; '.'
000000000000b5d7         db  0xff ; '.'
000000000000b5d8         db  0x98 ; '.'
000000000000b5d9         db  0x8c ; '.'
000000000000b5da         db  0xff ; '.'
000000000000b5db         db  0xff ; '.'
000000000000b5dc         db  0x98 ; '.'
000000000000b5dd         db  0x8c ; '.'
000000000000b5de         db  0xff ; '.'
000000000000b5df         db  0xff ; '.'
000000000000b5e0         db  0x98 ; '.'
000000000000b5e1         db  0x8c ; '.'
000000000000b5e2         db  0xff ; '.'
000000000000b5e3         db  0xff ; '.'
000000000000b5e4         db  0x98 ; '.'
000000000000b5e5         db  0x8c ; '.'
000000000000b5e6         db  0xff ; '.'
000000000000b5e7         db  0xff ; '.'
000000000000b5e8         db  0x98 ; '.'
000000000000b5e9         db  0x8c ; '.'
000000000000b5ea         db  0xff ; '.'
000000000000b5eb         db  0xff ; '.'
000000000000b5ec         db  0x98 ; '.'
000000000000b5ed         db  0x8c ; '.'
000000000000b5ee         db  0xff ; '.'
000000000000b5ef         db  0xff ; '.'
000000000000b5f0         db  0x98 ; '.'
000000000000b5f1         db  0x8c ; '.'
000000000000b5f2         db  0xff ; '.'
000000000000b5f3         db  0xff ; '.'
000000000000b5f4         db  0x98 ; '.'
000000000000b5f5         db  0x8c ; '.'
000000000000b5f6         db  0xff ; '.'
000000000000b5f7         db  0xff ; '.'
000000000000b5f8         db  0x98 ; '.'
000000000000b5f9         db  0x8c ; '.'
000000000000b5fa         db  0xff ; '.'
000000000000b5fb         db  0xff ; '.'
000000000000b5fc         db  0x98 ; '.'
000000000000b5fd         db  0x8c ; '.'
000000000000b5fe         db  0xff ; '.'
000000000000b5ff         db  0xff ; '.'
000000000000b600         db  0x98 ; '.'
000000000000b601         db  0x8c ; '.'
000000000000b602         db  0xff ; '.'
000000000000b603         db  0xff ; '.'
000000000000b604         db  0x98 ; '.'
000000000000b605         db  0x8c ; '.'
000000000000b606         db  0xff ; '.'
000000000000b607         db  0xff ; '.'
000000000000b608         db  0x98 ; '.'
000000000000b609         db  0x8c ; '.'
000000000000b60a         db  0xff ; '.'
000000000000b60b         db  0xff ; '.'
000000000000b60c         db  0x98 ; '.'
000000000000b60d         db  0x8c ; '.'
000000000000b60e         db  0xff ; '.'
000000000000b60f         db  0xff ; '.'
000000000000b610         db  0x98 ; '.'
000000000000b611         db  0x8c ; '.'
000000000000b612         db  0xff ; '.'
000000000000b613         db  0xff ; '.'
000000000000b614         db  0xc8 ; '.'
000000000000b615         db  0x8c ; '.'
000000000000b616         db  0xff ; '.'
000000000000b617         db  0xff ; '.'
000000000000b618         db  0x98 ; '.'
000000000000b619         db  0x8b ; '.'
000000000000b61a         db  0xff ; '.'
000000000000b61b         db  0xff ; '.'
000000000000b61c         db  0x98 ; '.'
000000000000b61d         db  0x8c ; '.'
000000000000b61e         db  0xff ; '.'
000000000000b61f         db  0xff ; '.'
000000000000b620         db  0xc8 ; '.'
000000000000b621         db  0x8c ; '.'
000000000000b622         db  0xff ; '.'
000000000000b623         db  0xff ; '.'
000000000000b624         db  0x98 ; '.'
000000000000b625         db  0x8c ; '.'
000000000000b626         db  0xff ; '.'
000000000000b627         db  0xff ; '.'
000000000000b628         db  0xc8 ; '.'
000000000000b629         db  0x8c ; '.'
000000000000b62a         db  0xff ; '.'
000000000000b62b         db  0xff ; '.'
000000000000b62c         db  0x98 ; '.'
000000000000b62d         db  0x8c ; '.'
000000000000b62e         db  0xff ; '.'
000000000000b62f         db  0xff ; '.'
000000000000b630         db  0x98 ; '.'
000000000000b631         db  0x8c ; '.'
000000000000b632         db  0xff ; '.'
000000000000b633         db  0xff ; '.'
000000000000b634         db  0x98 ; '.'
000000000000b635         db  0x8c ; '.'
000000000000b636         db  0xff ; '.'
000000000000b637         db  0xff ; '.'
000000000000b638         db  0x98 ; '.'
000000000000b639         db  0x8c ; '.'
000000000000b63a         db  0xff ; '.'
000000000000b63b         db  0xff ; '.'
000000000000b63c         db  0x98 ; '.'
000000000000b63d         db  0x8c ; '.'
000000000000b63e         db  0xff ; '.'
000000000000b63f         db  0xff ; '.'
000000000000b640         db  0x98 ; '.'
000000000000b641         db  0x8c ; '.'
000000000000b642         db  0xff ; '.'
000000000000b643         db  0xff ; '.'
000000000000b644         db  0x98 ; '.'
000000000000b645         db  0x8c ; '.'
000000000000b646         db  0xff ; '.'
000000000000b647         db  0xff ; '.'
000000000000b648         db  0x98 ; '.'
000000000000b649         db  0x8c ; '.'
000000000000b64a         db  0xff ; '.'
000000000000b64b         db  0xff ; '.'
000000000000b64c         db  0x98 ; '.'
000000000000b64d         db  0x8c ; '.'
000000000000b64e         db  0xff ; '.'
000000000000b64f         db  0xff ; '.'
000000000000b650         db  0x98 ; '.'
000000000000b651         db  0x8c ; '.'
000000000000b652         db  0xff ; '.'
000000000000b653         db  0xff ; '.'
000000000000b654         db  0x98 ; '.'
000000000000b655         db  0x8c ; '.'
000000000000b656         db  0xff ; '.'
000000000000b657         db  0xff ; '.'
000000000000b658         db  0x98 ; '.'
000000000000b659         db  0x8c ; '.'
000000000000b65a         db  0xff ; '.'
000000000000b65b         db  0xff ; '.'
000000000000b65c         db  0x98 ; '.'
000000000000b65d         db  0x8c ; '.'
000000000000b65e         db  0xff ; '.'
000000000000b65f         db  0xff ; '.'
000000000000b660         db  0x98 ; '.'
000000000000b661         db  0x8c ; '.'
000000000000b662         db  0xff ; '.'
000000000000b663         db  0xff ; '.'
000000000000b664         db  0x98 ; '.'
000000000000b665         db  0x8c ; '.'
000000000000b666         db  0xff ; '.'
000000000000b667         db  0xff ; '.'
000000000000b668         db  0x98 ; '.'
000000000000b669         db  0x8c ; '.'
000000000000b66a         db  0xff ; '.'
000000000000b66b         db  0xff ; '.'
000000000000b66c         db  0x98 ; '.'
000000000000b66d         db  0x8c ; '.'
000000000000b66e         db  0xff ; '.'
000000000000b66f         db  0xff ; '.'
000000000000b670         db  0x98 ; '.'
000000000000b671         db  0x8c ; '.'
000000000000b672         db  0xff ; '.'
000000000000b673         db  0xff ; '.'
000000000000b674         db  0x98 ; '.'
000000000000b675         db  0x8c ; '.'
000000000000b676         db  0xff ; '.'
000000000000b677         db  0xff ; '.'
000000000000b678         db  0x98 ; '.'
000000000000b679         db  0x8c ; '.'
000000000000b67a         db  0xff ; '.'
000000000000b67b         db  0xff ; '.'
000000000000b67c         db  0x98 ; '.'
000000000000b67d         db  0x8c ; '.'
000000000000b67e         db  0xff ; '.'
000000000000b67f         db  0xff ; '.'
000000000000b680         db  0x98 ; '.'
000000000000b681         db  0x8c ; '.'
000000000000b682         db  0xff ; '.'
000000000000b683         db  0xff ; '.'
000000000000b684         db  0x98 ; '.'
000000000000b685         db  0x8c ; '.'
000000000000b686         db  0xff ; '.'
000000000000b687         db  0xff ; '.'
000000000000b688         db  0x98 ; '.'
000000000000b689         db  0x8c ; '.'
000000000000b68a         db  0xff ; '.'
000000000000b68b         db  0xff ; '.'
000000000000b68c         db  0x98 ; '.'
000000000000b68d         db  0x8c ; '.'
000000000000b68e         db  0xff ; '.'
000000000000b68f         db  0xff ; '.'
000000000000b690         db  0x98 ; '.'
000000000000b691         db  0x8c ; '.'
000000000000b692         db  0xff ; '.'
000000000000b693         db  0xff ; '.'
000000000000b694         db  0x08 ; '.'
000000000000b695         db  0x88 ; '.'
000000000000b696         db  0xff ; '.'
000000000000b697         db  0xff ; '.'
000000000000b698         db  0xc8 ; '.'
000000000000b699         db  0x8c ; '.'
000000000000b69a         db  0xff ; '.'
000000000000b69b         db  0xff ; '.'
000000000000b69c         db  0x08 ; '.'
000000000000b69d         db  0x88 ; '.'
000000000000b69e         db  0xff ; '.'
000000000000b69f         db  0xff ; '.'
000000000000b6a0         db  0xb0 ; '.'
000000000000b6a1         db  0x8c ; '.'
000000000000b6a2         db  0xff ; '.'
000000000000b6a3         db  0xff ; '.'
000000000000b6a4         db  0x00 ; '.'
000000000000b6a5         db  0x00 ; '.'
000000000000b6a6         db  0x00 ; '.'
000000000000b6a7         db  0x00 ; '.'
000000000000b6a8         db  0x00 ; '.'
000000000000b6a9         db  0x00 ; '.'
000000000000b6aa         db  0x00 ; '.'
000000000000b6ab         db  0x00 ; '.'
000000000000b6ac         db  0x00 ; '.'
000000000000b6ad         db  0x00 ; '.'
000000000000b6ae         db  0x00 ; '.'
000000000000b6af         db  0x00 ; '.'
000000000000b6b0         db  0x00 ; '.'
000000000000b6b1         db  0x00 ; '.'
000000000000b6b2         db  0x00 ; '.'
000000000000b6b3         db  0x00 ; '.'
000000000000b6b4         db  0x00 ; '.'
000000000000b6b5         db  0x00 ; '.'
000000000000b6b6         db  0x00 ; '.'
000000000000b6b7         db  0x00 ; '.'
000000000000b6b8         db  0x00 ; '.'
000000000000b6b9         db  0x00 ; '.'
000000000000b6ba         db  0x00 ; '.'
000000000000b6bb         db  0x00 ; '.'
000000000000b6bc         db  0x00 ; '.'
000000000000b6bd         db  0x00 ; '.'
000000000000b6be         db  0x00 ; '.'
000000000000b6bf         db  0x00 ; '.'
                     quoting_style_vals:
000000000000b6c0         db  0x00 ; '.'
000000000000b6c1         db  0x00 ; '.'
000000000000b6c2         db  0x00 ; '.'
000000000000b6c3         db  0x00 ; '.'
000000000000b6c4         db  0x01 ; '.'
000000000000b6c5         db  0x00 ; '.'
000000000000b6c6         db  0x00 ; '.'
000000000000b6c7         db  0x00 ; '.'
000000000000b6c8         db  0x02 ; '.'
000000000000b6c9         db  0x00 ; '.'
000000000000b6ca         db  0x00 ; '.'
000000000000b6cb         db  0x00 ; '.'
000000000000b6cc         db  0x03 ; '.'
000000000000b6cd         db  0x00 ; '.'
000000000000b6ce         db  0x00 ; '.'
000000000000b6cf         db  0x00 ; '.'
000000000000b6d0         db  0x04 ; '.'
000000000000b6d1         db  0x00 ; '.'
000000000000b6d2         db  0x00 ; '.'
000000000000b6d3         db  0x00 ; '.'
000000000000b6d4         db  0x05 ; '.'
000000000000b6d5         db  0x00 ; '.'
000000000000b6d6         db  0x00 ; '.'
000000000000b6d7         db  0x00 ; '.'
000000000000b6d8         db  0x06 ; '.'
000000000000b6d9         db  0x00 ; '.'
000000000000b6da         db  0x00 ; '.'
000000000000b6db         db  0x00 ; '.'
000000000000b6dc         db  0x07 ; '.'
000000000000b6dd         db  0x00 ; '.'
000000000000b6de         db  0x00 ; '.'
000000000000b6df         db  0x00 ; '.'
000000000000b6e0         db  0x08 ; '.'
000000000000b6e1         db  0x00 ; '.'
000000000000b6e2         db  0x00 ; '.'
000000000000b6e3         db  0x00 ; '.'
000000000000b6e4         db  0x09 ; '.'
000000000000b6e5         db  0x00 ; '.'
000000000000b6e6         db  0x00 ; '.'
000000000000b6e7         db  0x00 ; '.'
                     aSSSn:
000000000000b6e8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000b6f4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000b6fb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000b6fc         db  0x43 ; 'C'
000000000000b6fd         db  0x29 ; ')'
000000000000b6fe         db  0x00 ; '.'
                     aWrittenBySn:
000000000000b6ff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000b70f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000b726         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000b742         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000b757         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000b76d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000000b781         align      8
                     aNlicenseGplv3G:
000000000000b788         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000b854         align      8
                     aWrittenBySSSna:
000000000000b858         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_b878:        // aWrittenBySSSns
000000000000b878         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000b89c         align      32
                     aWrittenBySSSns_b8a0:        // aWrittenBySSSns
000000000000b8a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_b8c8:        // aWrittenBySSSns
000000000000b8c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000b8f4         align      8
                     aWrittenBySSSns_b8f8:        // aWrittenBySSSns
000000000000b8f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000b928         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000b95c         align      32
                     aWrittenBySSSns_b960:        // aWrittenBySSSns
000000000000b960         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000b99c         align      32
                     aGeneralHelpUsi:
000000000000b9a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000b9e1         align      4
                     switch_table_b9e4:        // switch_table
000000000000b9e4         dd         version_etc_arn.loc_5806-switch_table_b9e4, version_etc_arn.loc_5898-switch_table_b9e4, version_etc_arn.loc_58d8-switch_table_b9e4, version_etc_arn.loc_5920-switch_table_b9e4 ; switch table used at 0x5784 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000b9f4         dd         version_etc_arn.loc_5970-switch_table_b9e4, version_etc_arn.loc_59c8-switch_table_b9e4, version_etc_arn.loc_59f8-switch_table_b9e4, version_etc_arn.loc_5a60-switch_table_b9e4
000000000000ba04         dd         version_etc_arn.loc_5790-switch_table_b9e4, version_etc_arn.loc_5840-switch_table_b9e4
000000000000ba0c         align      32
                     version_etc_copyright:
000000000000ba20         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000ba4f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li_ba60:        // aCoreutils831li
000000000000ba60         db         "../coreutils-8.31/lib/xfts.c", 0           ; DATA XREF=sub_5fbf+8
                     aErrnoEinval:
000000000000ba7d         db         "errno != EINVAL", 0                        ; DATA XREF=sub_5fbf+15
000000000000ba8d         align      16
                     __PRETTY_FUNCTION__.3434:
000000000000ba90         db         "xfts_open", 0                              ; DATA XREF=sub_5fbf+1
000000000000ba9a         align      32
                     aCoreutils831li_baa0:        // aCoreutils831li
000000000000baa0         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908
                     a0StrtolbaseStr:
000000000000bac0         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915
000000000000bae6         align      8
                     switch_table_bae8:        // switch_table
000000000000bae8         dd         xstrtoul.loc_6336-switch_table_bae8, 2 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_6313-switch_table_bae8, xstrtoul.loc_622c-switch_table_bae8 ; switch table used at 0x61e6 containing 54 entries, DATA XREF=xstrtoul+452
000000000000bafc         dd         xstrtoul.loc_634c-switch_table_bae8, 3 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_62cf-switch_table_bae8, xstrtoul.loc_622c-switch_table_bae8
000000000000bb14         dd         xstrtoul.loc_61e8-switch_table_bae8, 2 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_62f0-switch_table_bae8, 3 dup (xstrtoul.loc_622c-switch_table_bae8)
000000000000bb30         dd         xstrtoul.loc_62af-switch_table_bae8, 4 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_628a-switch_table_bae8, xstrtoul.loc_6264-switch_table_bae8
000000000000bb4c         dd         7 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_624d-switch_table_bae8, xstrtoul.loc_6210-switch_table_bae8, 3 dup (xstrtoul.loc_622c-switch_table_bae8)
000000000000bb7c         dd         xstrtoul.loc_634c-switch_table_bae8, 3 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_62cf-switch_table_bae8, xstrtoul.loc_622c-switch_table_bae8
000000000000bb94         dd         xstrtoul.loc_61e8-switch_table_bae8, 6 dup (xstrtoul.loc_622c-switch_table_bae8), xstrtoul.loc_62af-switch_table_bae8, 2 dup (xstrtoul.loc_622c-switch_table_bae8)
000000000000bbbc         dd         xstrtoul.loc_6237-switch_table_bae8
                     __PRETTY_FUNCTION__.4162:
000000000000bbc0         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
000000000000bbc9         db  0x2e ; '.'                                         ; DATA XREF=fts_safe_changedir+67, fts_safe_changedir+335, fts_build+2154, rpl_fts_read+1108
000000000000bbca         db  0x2e ; '.'                                         ; DATA XREF=rpl_fts_open+640, rpl_fts_read+1745, rpl_fts_read+1825, rpl_fts_children+195
000000000000bbcb         db  0x00 ; '.'
000000000000bbcc         db  0x00 ; '.'
000000000000bbcd         db  0x00 ; '.'
000000000000bbce         db  0x00 ; '.'
000000000000bbcf         db  0x00 ; '.'
000000000000bbd0         db  0x00 ; '.'
000000000000bbd1         db  0x00 ; '.'
000000000000bbd2         db  0x00 ; '.'
000000000000bbd3         db  0x00 ; '.'
000000000000bbd4         db  0x00 ; '.'
000000000000bbd5         db  0x00 ; '.'
000000000000bbd6         db  0x00 ; '.'
000000000000bbd7         db  0x00 ; '.'
000000000000bbd8         db  0x00 ; '.'
000000000000bbd9         db  0x00 ; '.'
000000000000bbda         db  0x00 ; '.'
000000000000bbdb         db  0x00 ; '.'
000000000000bbdc         db  0x00 ; '.'
000000000000bbdd         db  0x00 ; '.'
000000000000bbde         db  0x00 ; '.'
000000000000bbdf         db  0x00 ; '.'
                     CSWTCH.53:
000000000000bbe0         db  0x00 ; '.'                                         ; DATA XREF=fts_build+372, fts_build+2486
000000000000bbe1         db  0x10 ; '.'
000000000000bbe2         db  0x00 ; '.'
000000000000bbe3         db  0x00 ; '.'
000000000000bbe4         db  0x00 ; '.'
000000000000bbe5         db  0x20 ; ' '
000000000000bbe6         db  0x00 ; '.'
000000000000bbe7         db  0x00 ; '.'
000000000000bbe8         db  0x00 ; '.'
000000000000bbe9         db  0x00 ; '.'
000000000000bbea         db  0x00 ; '.'
000000000000bbeb         db  0x00 ; '.'
000000000000bbec         db  0x00 ; '.'
000000000000bbed         db  0x40 ; '@'
000000000000bbee         db  0x00 ; '.'
000000000000bbef         db  0x00 ; '.'
000000000000bbf0         db  0x00 ; '.'
000000000000bbf1         db  0x00 ; '.'
000000000000bbf2         db  0x00 ; '.'
000000000000bbf3         db  0x00 ; '.'
000000000000bbf4         db  0x00 ; '.'
000000000000bbf5         db  0x60 ; '`'
000000000000bbf6         db  0x00 ; '.'
000000000000bbf7         db  0x00 ; '.'
000000000000bbf8         db  0x00 ; '.'
000000000000bbf9         db  0x00 ; '.'
000000000000bbfa         db  0x00 ; '.'
000000000000bbfb         db  0x00 ; '.'
000000000000bbfc         db  0x00 ; '.'
000000000000bbfd         db  0x80 ; '.'
000000000000bbfe         db  0x00 ; '.'
000000000000bbff         db  0x00 ; '.'
000000000000bc00         db  0x00 ; '.'
000000000000bc01         db  0x00 ; '.'
000000000000bc02         db  0x00 ; '.'
000000000000bc03         db  0x00 ; '.'
000000000000bc04         db  0x00 ; '.'
000000000000bc05         db  0xa0 ; '.'
000000000000bc06         db  0x00 ; '.'
000000000000bc07         db  0x00 ; '.'
000000000000bc08         db  0x00 ; '.'
000000000000bc09         db  0x00 ; '.'
000000000000bc0a         db  0x00 ; '.'
000000000000bc0b         db  0x00 ; '.'
000000000000bc0c         db  0x00 ; '.'
000000000000bc0d         db  0xc0 ; '.'
000000000000bc0e         db  0x00 ; '.'
000000000000bc0f         db  0x00 ; '.'
                     aCoreutils831li:
000000000000bc10         db         "../coreutils-8.31/lib/cycle-check.c", 0    ; DATA XREF=cycle_check+110
                     aStatemagic9827:
000000000000bc34         db         "state->magic == 9827862", 0                ; DATA XREF=cycle_check+117
000000000000bc4c         align      16
                     __PRETTY_FUNCTION__.3994:
000000000000bc50         db         "cycle_check", 0                            ; DATA XREF=cycle_check+103
000000000000bc5c         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000bc5d         db  0x00 ; '.'
                     aPosix:
000000000000bc5e         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aEntriesLun:
000000000000bc64         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000000bc7c         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
000000000000bc94         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
000000000000bcac         align      16
                     aBucketsUsedLu2:
000000000000bcb0         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
000000000000bcd1         db  0x00 ; '.'
000000000000bcd2         db  0x00 ; '.'
000000000000bcd3         db  0x00 ; '.'
000000000000bcd4         db  0x00 ; '.'
000000000000bcd5         db  0x00 ; '.'
000000000000bcd6         db  0x00 ; '.'
000000000000bcd7         db  0x00 ; '.'
000000000000bcd8         db  0x00 ; '.'
000000000000bcd9         db  0x00 ; '.'
000000000000bcda         db  0x00 ; '.'
000000000000bcdb         db  0x00 ; '.'
000000000000bcdc         db  0x00 ; '.'
000000000000bcdd         db  0x00 ; '.'
000000000000bcde         db  0x00 ; '.'
000000000000bcdf         db  0x00 ; '.'
                     default_tuning:
000000000000bce0         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
000000000000bce1         db  0x00 ; '.'
000000000000bce2         db  0x00 ; '.'
000000000000bce3         db  0x00 ; '.'
000000000000bce4         db  0x00 ; '.'
000000000000bce5         db  0x00 ; '.'
000000000000bce6         db  0x80 ; '.'
000000000000bce7         db  0x3f ; '?'
000000000000bce8         db  0xcd ; '.'
000000000000bce9         db  0xcc ; '.'
000000000000bcea         db  0x4c ; 'L'
000000000000bceb         db  0x3f ; '?'
000000000000bcec         db  0xf4 ; '.'
000000000000bced         db  0xfd ; '.'
000000000000bcee         db  0xb4 ; '.'
000000000000bcef         db  0x3f ; '?'
000000000000bcf0         db  0x00 ; '.'
000000000000bcf1         db  0x00 ; '.'
000000000000bcf2         db  0x00 ; '.'
000000000000bcf3         db  0x00 ; '.'
                     float_bcf4:        // float
000000000000bcf4         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_bcf8:        // float
000000000000bcf8         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_bcfc:        // float
000000000000bcfc         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_bd00:        // float
000000000000bd00         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_bd04:        // float
000000000000bd04         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_bd08:        // float
000000000000bd08         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_bd0c:        // float
000000000000bd0c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_bd10:        // float
000000000000bd10         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
000000000000bd14         align      2
000000000000bd1e         db  0x59 ; 'Y'
000000000000bd1f         db  0x40 ; '@'
                     aAscii:
000000000000bd20         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000bd26         db  0x00 ; '.'
000000000000bd27         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xbd28; 0xc1cc[ (1188 bytes)
        ; File offset : [48424; 49612[ (1188 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000bd28         db  0x01 ; '.'
000000000000bd29         db  0x1b ; '.'
000000000000bd2a         db  0x03 ; '.'
000000000000bd2b         db  0x3b ; ';'
000000000000bd2c         db  0xa4 ; '.'
000000000000bd2d         db  0x04 ; '.'
000000000000bd2e         db  0x00 ; '.'
000000000000bd2f         db  0x00 ; '.'
000000000000bd30         db  0x93 ; '.'
000000000000bd31         db  0x00 ; '.'
000000000000bd32         db  0x00 ; '.'
000000000000bd33         db  0x00 ; '.'
000000000000bd34         db  0xd8 ; '.'
000000000000bd35         db  0x5b ; '['
000000000000bd36         db  0xff ; '.'
000000000000bd37         db  0xff ; '.'
000000000000bd38         db  0xf0 ; '.'
000000000000bd39         db  0x04 ; '.'
000000000000bd3a         db  0x00 ; '.'
000000000000bd3b         db  0x00 ; '.'
000000000000bd3c         db  0x08 ; '.'
000000000000bd3d         db  0x60 ; '`'
000000000000bd3e         db  0xff ; '.'
000000000000bd3f         db  0xff ; '.'
000000000000bd40         db  0x18 ; '.'
000000000000bd41         db  0x05 ; '.'
000000000000bd42         db  0x00 ; '.'
000000000000bd43         db  0x00 ; '.'
000000000000bd44         db  0x18 ; '.'
000000000000bd45         db  0x60 ; '`'
000000000000bd46         db  0xff ; '.'
000000000000bd47         db  0xff ; '.'
000000000000bd48         db  0x5c ; '\'
000000000000bd49         db  0x05 ; '.'
000000000000bd4a         db  0x00 ; '.'
000000000000bd4b         db  0x00 ; '.'
000000000000bd4c         db  0x18 ; '.'
000000000000bd4d         db  0x65 ; 'e'
000000000000bd4e         db  0xff ; '.'
000000000000bd4f         db  0xff ; '.'
000000000000bd50         db  0xc0 ; '.'
000000000000bd51         db  0x04 ; '.'
000000000000bd52         db  0x00 ; '.'
000000000000bd53         db  0x00 ; '.'
000000000000bd54         db  0x28 ; '('
000000000000bd55         db  0x66 ; 'f'
000000000000bd56         db  0xff ; '.'
000000000000bd57         db  0xff ; '.'
000000000000bd58         db  0x30 ; '0'
000000000000bd59         db  0x05 ; '.'
000000000000bd5a         db  0x00 ; '.'
000000000000bd5b         db  0x00 ; '.'
000000000000bd5c         db  0xa8 ; '.'
000000000000bd5d         db  0x6a ; 'j'
000000000000bd5e         db  0xff ; '.'
000000000000bd5f         db  0xff ; '.'
000000000000bd60         db  0xc8 ; '.'
000000000000bd61         db  0x05 ; '.'
000000000000bd62         db  0x00 ; '.'
000000000000bd63         db  0x00 ; '.'
000000000000bd64         db  0x28 ; '('
000000000000bd65         db  0x6b ; 'k'
000000000000bd66         db  0xff ; '.'
000000000000bd67         db  0xff ; '.'
000000000000bd68         db  0x04 ; '.'
000000000000bd69         db  0x06 ; '.'
000000000000bd6a         db  0x00 ; '.'
000000000000bd6b         db  0x00 ; '.'
000000000000bd6c         db  0x58 ; 'X'
000000000000bd6d         db  0x6b ; 'k'
000000000000bd6e         db  0xff ; '.'
000000000000bd6f         db  0xff ; '.'
000000000000bd70         db  0x18 ; '.'
000000000000bd71         db  0x06 ; '.'
000000000000bd72         db  0x00 ; '.'
000000000000bd73         db  0x00 ; '.'
000000000000bd74         db  0x78 ; 'x'
000000000000bd75         db  0x6b ; 'k'
000000000000bd76         db  0xff ; '.'
000000000000bd77         db  0xff ; '.'
000000000000bd78         db  0x34 ; '4'
000000000000bd79         db  0x06 ; '.'
000000000000bd7a         db  0x00 ; '.'
000000000000bd7b         db  0x00 ; '.'
000000000000bd7c         db  0xd8 ; '.'
000000000000bd7d         db  0x6b ; 'k'
000000000000bd7e         db  0xff ; '.'
000000000000bd7f         db  0xff ; '.'
000000000000bd80         db  0x58 ; 'X'
000000000000bd81         db  0x06 ; '.'
000000000000bd82         db  0x00 ; '.'
000000000000bd83         db  0x00 ; '.'
000000000000bd84         db  0x38 ; '8'
000000000000bd85         db  0x6c ; 'l'
000000000000bd86         db  0xff ; '.'
000000000000bd87         db  0xff ; '.'
000000000000bd88         db  0x7c ; '|'
000000000000bd89         db  0x06 ; '.'
000000000000bd8a         db  0x00 ; '.'
000000000000bd8b         db  0x00 ; '.'
000000000000bd8c         db  0xc8 ; '.'
000000000000bd8d         db  0x79 ; 'y'
000000000000bd8e         db  0xff ; '.'
000000000000bd8f         db  0xff ; '.'
000000000000bd90         db  0xcc ; '.'
000000000000bd91         db  0x06 ; '.'
000000000000bd92         db  0x00 ; '.'
000000000000bd93         db  0x00 ; '.'
000000000000bd94         db  0xe8 ; '.'
000000000000bd95         db  0x7a ; 'z'
000000000000bd96         db  0xff ; '.'
000000000000bd97         db  0xff ; '.'
000000000000bd98         db  0x28 ; '('
000000000000bd99         db  0x07 ; '.'
000000000000bd9a         db  0x00 ; '.'
000000000000bd9b         db  0x00 ; '.'
000000000000bd9c         db  0xf8 ; '.'
000000000000bd9d         db  0x7a ; 'z'
000000000000bd9e         db  0xff ; '.'
000000000000bd9f         db  0xff ; '.'
000000000000bda0         db  0x3c ; '<'
000000000000bda1         db  0x07 ; '.'
000000000000bda2         db  0x00 ; '.'
000000000000bda3         db  0x00 ; '.'
000000000000bda4         db  0x08 ; '.'
000000000000bda5         db  0x7b ; '{'
000000000000bda6         db  0xff ; '.'
000000000000bda7         db  0xff ; '.'
000000000000bda8         db  0x50 ; 'P'
000000000000bda9         db  0x07 ; '.'
000000000000bdaa         db  0x00 ; '.'
000000000000bdab         db  0x00 ; '.'
000000000000bdac         db  0xb8 ; '.'
000000000000bdad         db  0x7b ; '{'
000000000000bdae         db  0xff ; '.'
000000000000bdaf         db  0xff ; '.'
000000000000bdb0         db  0x80 ; '.'
000000000000bdb1         db  0x07 ; '.'
000000000000bdb2         db  0x00 ; '.'
000000000000bdb3         db  0x00 ; '.'
000000000000bdb4         db  0x08 ; '.'
000000000000bdb5         db  0x7c ; '|'
000000000000bdb6         db  0xff ; '.'
000000000000bdb7         db  0xff ; '.'
000000000000bdb8         db  0x98 ; '.'
000000000000bdb9         db  0x07 ; '.'
000000000000bdba         db  0x00 ; '.'
000000000000bdbb         db  0x00 ; '.'
000000000000bdbc         db  0xa8 ; '.'
000000000000bdbd         db  0x7c ; '|'
000000000000bdbe         db  0xff ; '.'
000000000000bdbf         db  0xff ; '.'
000000000000bdc0         db  0xb8 ; '.'
000000000000bdc1         db  0x07 ; '.'
000000000000bdc2         db  0x00 ; '.'
000000000000bdc3         db  0x00 ; '.'
000000000000bdc4         db  0x98 ; '.'
000000000000bdc5         db  0x7d ; '}'
000000000000bdc6         db  0xff ; '.'
000000000000bdc7         db  0xff ; '.'
000000000000bdc8         db  0xfc ; '.'
000000000000bdc9         db  0x07 ; '.'
000000000000bdca         db  0x00 ; '.'
000000000000bdcb         db  0x00 ; '.'
000000000000bdcc         db  0xd8 ; '.'
000000000000bdcd         db  0x8f ; '.'
000000000000bdce         db  0xff ; '.'
000000000000bdcf         db  0xff ; '.'
000000000000bdd0         db  0x74 ; 't'
000000000000bdd1         db  0x08 ; '.'
000000000000bdd2         db  0x00 ; '.'
000000000000bdd3         db  0x00 ; '.'
000000000000bdd4         db  0x88 ; '.'
000000000000bdd5         db  0x91 ; '.'
000000000000bdd6         db  0xff ; '.'
000000000000bdd7         db  0xff ; '.'
000000000000bdd8         db  0xe0 ; '.'
000000000000bdd9         db  0x08 ; '.'
000000000000bdda         db  0x00 ; '.'
000000000000bddb         db  0x00 ; '.'
000000000000bddc         db  0xc8 ; '.'
000000000000bddd         db  0x91 ; '.'
000000000000bdde         db  0xff ; '.'
000000000000bddf         db  0xff ; '.'
000000000000bde0         db  0x0c ; '.'
000000000000bde1         db  0x09 ; '.'
000000000000bde2         db  0x00 ; '.'
000000000000bde3         db  0x00 ; '.'
000000000000bde4         db  0xe8 ; '.'
000000000000bde5         db  0x91 ; '.'
000000000000bde6         db  0xff ; '.'
000000000000bde7         db  0xff ; '.'
000000000000bde8         db  0x20 ; ' '
000000000000bde9         db  0x09 ; '.'
000000000000bdea         db  0x00 ; '.'
000000000000bdeb         db  0x00 ; '.'
000000000000bdec         db  0x08 ; '.'
000000000000bded         db  0x92 ; '.'
000000000000bdee         db  0xff ; '.'
000000000000bdef         db  0xff ; '.'
000000000000bdf0         db  0x34 ; '4'
000000000000bdf1         db  0x09 ; '.'
000000000000bdf2         db  0x00 ; '.'
000000000000bdf3         db  0x00 ; '.'
000000000000bdf4         db  0x48 ; 'H'
000000000000bdf5         db  0x92 ; '.'
000000000000bdf6         db  0xff ; '.'
000000000000bdf7         db  0xff ; '.'
000000000000bdf8         db  0x48 ; 'H'
000000000000bdf9         db  0x09 ; '.'
000000000000bdfa         db  0x00 ; '.'
000000000000bdfb         db  0x00 ; '.'
000000000000bdfc         db  0x68 ; 'h'
000000000000bdfd         db  0x92 ; '.'
000000000000bdfe         db  0xff ; '.'
000000000000bdff         db  0xff ; '.'
000000000000be00         db  0x5c ; '\'
000000000000be01         db  0x09 ; '.'
000000000000be02         db  0x00 ; '.'
000000000000be03         db  0x00 ; '.'
000000000000be04         db  0x98 ; '.'
000000000000be05         db  0x92 ; '.'
000000000000be06         db  0xff ; '.'
000000000000be07         db  0xff ; '.'
000000000000be08         db  0x70 ; 'p'
000000000000be09         db  0x09 ; '.'
000000000000be0a         db  0x00 ; '.'
000000000000be0b         db  0x00 ; '.'
000000000000be0c         db  0x18 ; '.'
000000000000be0d         db  0x93 ; '.'
000000000000be0e         db  0xff ; '.'
000000000000be0f         db  0xff ; '.'
000000000000be10         db  0xc4 ; '.'
000000000000be11         db  0x09 ; '.'
000000000000be12         db  0x00 ; '.'
000000000000be13         db  0x00 ; '.'
000000000000be14         db  0x08 ; '.'
000000000000be15         db  0x94 ; '.'
000000000000be16         db  0xff ; '.'
000000000000be17         db  0xff ; '.'
000000000000be18         db  0x30 ; '0'
000000000000be19         db  0x0a ; '.'
000000000000be1a         db  0x00 ; '.'
000000000000be1b         db  0x00 ; '.'
000000000000be1c         db  0x18 ; '.'
000000000000be1d         db  0x94 ; '.'
000000000000be1e         db  0xff ; '.'
000000000000be1f         db  0xff ; '.'
000000000000be20         db  0x44 ; 'D'
000000000000be21         db  0x0a ; '.'
000000000000be22         db  0x00 ; '.'
000000000000be23         db  0x00 ; '.'
000000000000be24         db  0xb8 ; '.'
000000000000be25         db  0x94 ; '.'
000000000000be26         db  0xff ; '.'
000000000000be27         db  0xff ; '.'
000000000000be28         db  0x70 ; 'p'
000000000000be29         db  0x0a ; '.'
000000000000be2a         db  0x00 ; '.'
000000000000be2b         db  0x00 ; '.'
000000000000be2c         db  0xd8 ; '.'
000000000000be2d         db  0x94 ; '.'
000000000000be2e         db  0xff ; '.'
000000000000be2f         db  0xff ; '.'
000000000000be30         db  0x84 ; '.'
000000000000be31         db  0x0a ; '.'
000000000000be32         db  0x00 ; '.'
000000000000be33         db  0x00 ; '.'
000000000000be34         db  0xe8 ; '.'
000000000000be35         db  0x94 ; '.'
000000000000be36         db  0xff ; '.'
000000000000be37         db  0xff ; '.'
000000000000be38         db  0x98 ; '.'
000000000000be39         db  0x0a ; '.'
000000000000be3a         db  0x00 ; '.'
000000000000be3b         db  0x00 ; '.'
000000000000be3c         db  0x08 ; '.'
000000000000be3d         db  0x95 ; '.'
000000000000be3e         db  0xff ; '.'
000000000000be3f         db  0xff ; '.'
000000000000be40         db  0xac ; '.'
000000000000be41         db  0x0a ; '.'
000000000000be42         db  0x00 ; '.'
000000000000be43         db  0x00 ; '.'
000000000000be44         db  0x28 ; '('
000000000000be45         db  0x95 ; '.'
000000000000be46         db  0xff ; '.'
000000000000be47         db  0xff ; '.'
000000000000be48         db  0xc0 ; '.'
000000000000be49         db  0x0a ; '.'
000000000000be4a         db  0x00 ; '.'
000000000000be4b         db  0x00 ; '.'
000000000000be4c         db  0xb8 ; '.'
000000000000be4d         db  0x95 ; '.'
000000000000be4e         db  0xff ; '.'
000000000000be4f         db  0xff ; '.'
000000000000be50         db  0xdc ; '.'
000000000000be51         db  0x0a ; '.'
000000000000be52         db  0x00 ; '.'
000000000000be53         db  0x00 ; '.'
000000000000be54         db  0x48 ; 'H'
000000000000be55         db  0x96 ; '.'
000000000000be56         db  0xff ; '.'
000000000000be57         db  0xff ; '.'
000000000000be58         db  0xf8 ; '.'
000000000000be59         db  0x0a ; '.'
000000000000be5a         db  0x00 ; '.'
000000000000be5b         db  0x00 ; '.'
000000000000be5c         db  0x58 ; 'X'
000000000000be5d         db  0x96 ; '.'
000000000000be5e         db  0xff ; '.'
000000000000be5f         db  0xff ; '.'
000000000000be60         db  0x0c ; '.'
000000000000be61         db  0x0b ; '.'
000000000000be62         db  0x00 ; '.'
000000000000be63         db  0x00 ; '.'
000000000000be64         db  0x68 ; 'h'
000000000000be65         db  0x96 ; '.'
000000000000be66         db  0xff ; '.'
000000000000be67         db  0xff ; '.'
000000000000be68         db  0x20 ; ' '
000000000000be69         db  0x0b ; '.'
000000000000be6a         db  0x00 ; '.'
000000000000be6b         db  0x00 ; '.'
000000000000be6c         db  0x08 ; '.'
000000000000be6d         db  0x97 ; '.'
000000000000be6e         db  0xff ; '.'
000000000000be6f         db  0xff ; '.'
000000000000be70         db  0x3c ; '<'
000000000000be71         db  0x0b ; '.'
000000000000be72         db  0x00 ; '.'
000000000000be73         db  0x00 ; '.'
000000000000be74         db  0x18 ; '.'
000000000000be75         db  0x97 ; '.'
000000000000be76         db  0xff ; '.'
000000000000be77         db  0xff ; '.'
000000000000be78         db  0x50 ; 'P'
000000000000be79         db  0x0b ; '.'
000000000000be7a         db  0x00 ; '.'
000000000000be7b         db  0x00 ; '.'
000000000000be7c         db  0x38 ; '8'
000000000000be7d         db  0x97 ; '.'
000000000000be7e         db  0xff ; '.'
000000000000be7f         db  0xff ; '.'
000000000000be80         db  0x64 ; 'd'
000000000000be81         db  0x0b ; '.'
000000000000be82         db  0x00 ; '.'
000000000000be83         db  0x00 ; '.'
000000000000be84         db  0x48 ; 'H'
000000000000be85         db  0x97 ; '.'
000000000000be86         db  0xff ; '.'
000000000000be87         db  0xff ; '.'
000000000000be88         db  0x78 ; 'x'
000000000000be89         db  0x0b ; '.'
000000000000be8a         db  0x00 ; '.'
000000000000be8b         db  0x00 ; '.'
000000000000be8c         db  0xd8 ; '.'
000000000000be8d         db  0x97 ; '.'
000000000000be8e         db  0xff ; '.'
000000000000be8f         db  0xff ; '.'
000000000000be90         db  0x94 ; '.'
000000000000be91         db  0x0b ; '.'
000000000000be92         db  0x00 ; '.'
000000000000be93         db  0x00 ; '.'
000000000000be94         db  0x78 ; 'x'
000000000000be95         db  0x98 ; '.'
000000000000be96         db  0xff ; '.'
000000000000be97         db  0xff ; '.'
000000000000be98         db  0xb0 ; '.'
000000000000be99         db  0x0b ; '.'
000000000000be9a         db  0x00 ; '.'
000000000000be9b         db  0x00 ; '.'
000000000000be9c         db  0x88 ; '.'
000000000000be9d         db  0x98 ; '.'
000000000000be9e         db  0xff ; '.'
000000000000be9f         db  0xff ; '.'
000000000000bea0         db  0xc4 ; '.'
000000000000bea1         db  0x0b ; '.'
000000000000bea2         db  0x00 ; '.'
000000000000bea3         db  0x00 ; '.'
000000000000bea4         db  0xa8 ; '.'
000000000000bea5         db  0x98 ; '.'
000000000000bea6         db  0xff ; '.'
000000000000bea7         db  0xff ; '.'
000000000000bea8         db  0xd8 ; '.'
000000000000bea9         db  0x0b ; '.'
000000000000beaa         db  0x00 ; '.'
000000000000beab         db  0x00 ; '.'
000000000000beac         db  0xc8 ; '.'
000000000000bead         db  0x98 ; '.'
000000000000beae         db  0xff ; '.'
000000000000beaf         db  0xff ; '.'
000000000000beb0         db  0xec ; '.'
000000000000beb1         db  0x0b ; '.'
000000000000beb2         db  0x00 ; '.'
000000000000beb3         db  0x00 ; '.'
000000000000beb4         db  0xd8 ; '.'
000000000000beb5         db  0x98 ; '.'
000000000000beb6         db  0xff ; '.'
000000000000beb7         db  0xff ; '.'
000000000000beb8         db  0x00 ; '.'
000000000000beb9         db  0x0c ; '.'
000000000000beba         db  0x00 ; '.'
000000000000bebb         db  0x00 ; '.'
000000000000bebc         db  0xf8 ; '.'
000000000000bebd         db  0x98 ; '.'
000000000000bebe         db  0xff ; '.'
000000000000bebf         db  0xff ; '.'
000000000000bec0         db  0x14 ; '.'
000000000000bec1         db  0x0c ; '.'
000000000000bec2         db  0x00 ; '.'
000000000000bec3         db  0x00 ; '.'
000000000000bec4         db  0x18 ; '.'
000000000000bec5         db  0x99 ; '.'
000000000000bec6         db  0xff ; '.'
000000000000bec7         db  0xff ; '.'
000000000000bec8         db  0x28 ; '('
000000000000bec9         db  0x0c ; '.'
000000000000beca         db  0x00 ; '.'
000000000000becb         db  0x00 ; '.'
000000000000becc         db  0x38 ; '8'
000000000000becd         db  0x99 ; '.'
000000000000bece         db  0xff ; '.'
000000000000becf         db  0xff ; '.'
000000000000bed0         db  0x40 ; '@'
000000000000bed1         db  0x0c ; '.'
000000000000bed2         db  0x00 ; '.'
000000000000bed3         db  0x00 ; '.'
000000000000bed4         db  0xb8 ; '.'
000000000000bed5         db  0x99 ; '.'
000000000000bed6         db  0xff ; '.'
000000000000bed7         db  0xff ; '.'
000000000000bed8         db  0x68 ; 'h'
000000000000bed9         db  0x0c ; '.'
000000000000beda         db  0x00 ; '.'
000000000000bedb         db  0x00 ; '.'
000000000000bedc         db  0xd8 ; '.'
000000000000bedd         db  0x9d ; '.'
000000000000bede         db  0xff ; '.'
000000000000bedf         db  0xff ; '.'
000000000000bee0         db  0x7c ; '|'
000000000000bee1         db  0x0d ; '.'
000000000000bee2         db  0x00 ; '.'
000000000000bee3         db  0x00 ; '.'
000000000000bee4         db  0xf8 ; '.'
000000000000bee5         db  0x9d ; '.'
000000000000bee6         db  0xff ; '.'
000000000000bee7         db  0xff ; '.'
000000000000bee8         db  0x90 ; '.'
000000000000bee9         db  0x0d ; '.'
000000000000beea         db  0x00 ; '.'
000000000000beeb         db  0x00 ; '.'
000000000000beec         db  0x78 ; 'x'
000000000000beed         db  0x9e ; '.'
000000000000beee         db  0xff ; '.'
000000000000beef         db  0xff ; '.'
000000000000bef0         db  0xac ; '.'
000000000000bef1         db  0x0d ; '.'
000000000000bef2         db  0x00 ; '.'
000000000000bef3         db  0x00 ; '.'
000000000000bef4         db  0x58 ; 'X'
000000000000bef5         db  0x9f ; '.'
000000000000bef6         db  0xff ; '.'
000000000000bef7         db  0xff ; '.'
000000000000bef8         db  0xd8 ; '.'
000000000000bef9         db  0x0d ; '.'
000000000000befa         db  0x00 ; '.'
000000000000befb         db  0x00 ; '.'
000000000000befc         db  0xd8 ; '.'
000000000000befd         db  0x9f ; '.'
000000000000befe         db  0xff ; '.'
000000000000beff         db  0xff ; '.'
000000000000bf00         db  0xf8 ; '.'
000000000000bf01         db  0x0d ; '.'
000000000000bf02         db  0x00 ; '.'
000000000000bf03         db  0x00 ; '.'
000000000000bf04         db  0xf8 ; '.'
000000000000bf05         db  0x9f ; '.'
000000000000bf06         db  0xff ; '.'
000000000000bf07         db  0xff ; '.'
000000000000bf08         db  0x14 ; '.'
000000000000bf09         db  0x0e ; '.'
000000000000bf0a         db  0x00 ; '.'
000000000000bf0b         db  0x00 ; '.'
000000000000bf0c         db  0x28 ; '('
000000000000bf0d         db  0xa0 ; '.'
000000000000bf0e         db  0xff ; '.'
000000000000bf0f         db  0xff ; '.'
000000000000bf10         db  0x28 ; '('
000000000000bf11         db  0x0e ; '.'
000000000000bf12         db  0x00 ; '.'
000000000000bf13         db  0x00 ; '.'
000000000000bf14         db  0x38 ; '8'
000000000000bf15         db  0xa0 ; '.'
000000000000bf16         db  0xff ; '.'
000000000000bf17         db  0xff ; '.'
000000000000bf18         db  0x3c ; '<'
000000000000bf19         db  0x0e ; '.'
000000000000bf1a         db  0x00 ; '.'
000000000000bf1b         db  0x00 ; '.'
000000000000bf1c         db  0x78 ; 'x'
000000000000bf1d         db  0xa0 ; '.'
000000000000bf1e         db  0xff ; '.'
000000000000bf1f         db  0xff ; '.'
000000000000bf20         db  0x60 ; '`'
000000000000bf21         db  0x0e ; '.'
000000000000bf22         db  0x00 ; '.'
000000000000bf23         db  0x00 ; '.'
000000000000bf24         db  0xa8 ; '.'
000000000000bf25         db  0xa0 ; '.'
000000000000bf26         db  0xff ; '.'
000000000000bf27         db  0xff ; '.'
000000000000bf28         db  0x74 ; 't'
000000000000bf29         db  0x0e ; '.'
000000000000bf2a         db  0x00 ; '.'
000000000000bf2b         db  0x00 ; '.'
000000000000bf2c         db  0x38 ; '8'
000000000000bf2d         db  0xa1 ; '.'
000000000000bf2e         db  0xff ; '.'
000000000000bf2f         db  0xff ; '.'
000000000000bf30         db  0x8c ; '.'
000000000000bf31         db  0x0e ; '.'
000000000000bf32         db  0x00 ; '.'
000000000000bf33         db  0x00 ; '.'
000000000000bf34         db  0x88 ; '.'
000000000000bf35         db  0xa1 ; '.'
000000000000bf36         db  0xff ; '.'
000000000000bf37         db  0xff ; '.'
000000000000bf38         db  0xa4 ; '.'
000000000000bf39         db  0x0e ; '.'
000000000000bf3a         db  0x00 ; '.'
000000000000bf3b         db  0x00 ; '.'
000000000000bf3c         db  0xa8 ; '.'
000000000000bf3d         db  0xa1 ; '.'
000000000000bf3e         db  0xff ; '.'
000000000000bf3f         db  0xff ; '.'
000000000000bf40         db  0xc0 ; '.'
000000000000bf41         db  0x0e ; '.'
000000000000bf42         db  0x00 ; '.'
000000000000bf43         db  0x00 ; '.'
000000000000bf44         db  0xd8 ; '.'
000000000000bf45         db  0xa1 ; '.'
000000000000bf46         db  0xff ; '.'
000000000000bf47         db  0xff ; '.'
000000000000bf48         db  0xdc ; '.'
000000000000bf49         db  0x0e ; '.'
000000000000bf4a         db  0x00 ; '.'
000000000000bf4b         db  0x00 ; '.'
000000000000bf4c         db  0x08 ; '.'
000000000000bf4d         db  0xa2 ; '.'
000000000000bf4e         db  0xff ; '.'
000000000000bf4f         db  0xff ; '.'
000000000000bf50         db  0x04 ; '.'
000000000000bf51         db  0x0f ; '.'
000000000000bf52         db  0x00 ; '.'
000000000000bf53         db  0x00 ; '.'
000000000000bf54         db  0x28 ; '('
000000000000bf55         db  0xa2 ; '.'
000000000000bf56         db  0xff ; '.'
000000000000bf57         db  0xff ; '.'
000000000000bf58         db  0x20 ; ' '
000000000000bf59         db  0x0f ; '.'
000000000000bf5a         db  0x00 ; '.'
000000000000bf5b         db  0x00 ; '.'
000000000000bf5c         db  0x68 ; 'h'
000000000000bf5d         db  0xa2 ; '.'
000000000000bf5e         db  0xff ; '.'
000000000000bf5f         db  0xff ; '.'
000000000000bf60         db  0x38 ; '8'
000000000000bf61         db  0x0f ; '.'
000000000000bf62         db  0x00 ; '.'
000000000000bf63         db  0x00 ; '.'
000000000000bf64         db  0xb8 ; '.'
000000000000bf65         db  0xa2 ; '.'
000000000000bf66         db  0xff ; '.'
000000000000bf67         db  0xff ; '.'
000000000000bf68         db  0x54 ; 'T'
000000000000bf69         db  0x0f ; '.'
000000000000bf6a         db  0x00 ; '.'
000000000000bf6b         db  0x00 ; '.'
000000000000bf6c         db  0xe8 ; '.'
000000000000bf6d         db  0xa2 ; '.'
000000000000bf6e         db  0xff ; '.'
000000000000bf6f         db  0xff ; '.'
000000000000bf70         db  0x68 ; 'h'
000000000000bf71         db  0x0f ; '.'
000000000000bf72         db  0x00 ; '.'
000000000000bf73         db  0x00 ; '.'
000000000000bf74         db  0x08 ; '.'
000000000000bf75         db  0xa7 ; '.'
000000000000bf76         db  0xff ; '.'
000000000000bf77         db  0xff ; '.'
000000000000bf78         db  0xb8 ; '.'
000000000000bf79         db  0x0f ; '.'
000000000000bf7a         db  0x00 ; '.'
000000000000bf7b         db  0x00 ; '.'
000000000000bf7c         db  0x28 ; '('
000000000000bf7d         db  0xa7 ; '.'
000000000000bf7e         db  0xff ; '.'
000000000000bf7f         db  0xff ; '.'
000000000000bf80         db  0xcc ; '.'
000000000000bf81         db  0x0f ; '.'
000000000000bf82         db  0x00 ; '.'
000000000000bf83         db  0x00 ; '.'
000000000000bf84         db  0x38 ; '8'
000000000000bf85         db  0xa7 ; '.'
000000000000bf86         db  0xff ; '.'
000000000000bf87         db  0xff ; '.'
000000000000bf88         db  0xe0 ; '.'
000000000000bf89         db  0x0f ; '.'
000000000000bf8a         db  0x00 ; '.'
000000000000bf8b         db  0x00 ; '.'
000000000000bf8c         db  0x48 ; 'H'
000000000000bf8d         db  0xa7 ; '.'
000000000000bf8e         db  0xff ; '.'
000000000000bf8f         db  0xff ; '.'
000000000000bf90         db  0xf4 ; '.'
000000000000bf91         db  0x0f ; '.'
000000000000bf92         db  0x00 ; '.'
000000000000bf93         db  0x00 ; '.'
000000000000bf94         db  0x58 ; 'X'
000000000000bf95         db  0xa7 ; '.'
000000000000bf96         db  0xff ; '.'
000000000000bf97         db  0xff ; '.'
000000000000bf98         db  0x08 ; '.'
000000000000bf99         db  0x10 ; '.'
000000000000bf9a         db  0x00 ; '.'
000000000000bf9b         db  0x00 ; '.'
000000000000bf9c         db  0x88 ; '.'
000000000000bf9d         db  0xa7 ; '.'
000000000000bf9e         db  0xff ; '.'
000000000000bf9f         db  0xff ; '.'
000000000000bfa0         db  0x1c ; '.'
000000000000bfa1         db  0x10 ; '.'
000000000000bfa2         db  0x00 ; '.'
000000000000bfa3         db  0x00 ; '.'
000000000000bfa4         db  0x58 ; 'X'
000000000000bfa5         db  0xa9 ; '.'
000000000000bfa6         db  0xff ; '.'
000000000000bfa7         db  0xff ; '.'
000000000000bfa8         db  0x58 ; 'X'
000000000000bfa9         db  0x10 ; '.'
000000000000bfaa         db  0x00 ; '.'
000000000000bfab         db  0x00 ; '.'
000000000000bfac         db  0x68 ; 'h'
000000000000bfad         db  0xaa ; '.'
000000000000bfae         db  0xff ; '.'
000000000000bfaf         db  0xff ; '.'
000000000000bfb0         db  0xa8 ; '.'
000000000000bfb1         db  0x10 ; '.'
000000000000bfb2         db  0x00 ; '.'
000000000000bfb3         db  0x00 ; '.'
000000000000bfb4         db  0xf8 ; '.'
000000000000bfb5         db  0xaa ; '.'
000000000000bfb6         db  0xff ; '.'
000000000000bfb7         db  0xff ; '.'
000000000000bfb8         db  0xe0 ; '.'
000000000000bfb9         db  0x10 ; '.'
000000000000bfba         db  0x00 ; '.'
000000000000bfbb         db  0x00 ; '.'
000000000000bfbc         db  0x48 ; 'H'
000000000000bfbd         db  0xab ; '.'
000000000000bfbe         db  0xff ; '.'
000000000000bfbf         db  0xff ; '.'
000000000000bfc0         db  0x0c ; '.'
000000000000bfc1         db  0x11 ; '.'
000000000000bfc2         db  0x00 ; '.'
000000000000bfc3         db  0x00 ; '.'
000000000000bfc4         db  0x88 ; '.'
000000000000bfc5         db  0xab ; '.'
000000000000bfc6         db  0xff ; '.'
000000000000bfc7         db  0xff ; '.'
000000000000bfc8         db  0x28 ; '('
000000000000bfc9         db  0x11 ; '.'
000000000000bfca         db  0x00 ; '.'
000000000000bfcb         db  0x00 ; '.'
000000000000bfcc         db  0xb8 ; '.'
000000000000bfcd         db  0xac ; '.'
000000000000bfce         db  0xff ; '.'
000000000000bfcf         db  0xff ; '.'
000000000000bfd0         db  0x64 ; 'd'
000000000000bfd1         db  0x11 ; '.'
000000000000bfd2         db  0x00 ; '.'
000000000000bfd3         db  0x00 ; '.'
000000000000bfd4         db  0x28 ; '('
000000000000bfd5         db  0xad ; '.'
000000000000bfd6         db  0xff ; '.'
000000000000bfd7         db  0xff ; '.'
000000000000bfd8         db  0x88 ; '.'
000000000000bfd9         db  0x11 ; '.'
000000000000bfda         db  0x00 ; '.'
000000000000bfdb         db  0x00 ; '.'
000000000000bfdc         db  0x98 ; '.'
000000000000bfdd         db  0xad ; '.'
000000000000bfde         db  0xff ; '.'
000000000000bfdf         db  0xff ; '.'
000000000000bfe0         db  0xcc ; '.'
000000000000bfe1         db  0x11 ; '.'
000000000000bfe2         db  0x00 ; '.'
000000000000bfe3         db  0x00 ; '.'
000000000000bfe4         db  0xf8 ; '.'
000000000000bfe5         db  0xad ; '.'
000000000000bfe6         db  0xff ; '.'
000000000000bfe7         db  0xff ; '.'
000000000000bfe8         db  0xf8 ; '.'
000000000000bfe9         db  0x11 ; '.'
000000000000bfea         db  0x00 ; '.'
000000000000bfeb         db  0x00 ; '.'
000000000000bfec         db  0x68 ; 'h'
000000000000bfed         db  0xae ; '.'
000000000000bfee         db  0xff ; '.'
000000000000bfef         db  0xff ; '.'
000000000000bff0         db  0x20 ; ' '
000000000000bff1         db  0x12 ; '.'
000000000000bff2         db  0x00 ; '.'
000000000000bff3         db  0x00 ; '.'
000000000000bff4         db  0xd8 ; '.'
000000000000bff5         db  0xae ; '.'
000000000000bff6         db  0xff ; '.'
000000000000bff7         db  0xff ; '.'
000000000000bff8         db  0x40 ; '@'
000000000000bff9         db  0x12 ; '.'
000000000000bffa         db  0x00 ; '.'
000000000000bffb         db  0x00 ; '.'
000000000000bffc         db  0x18 ; '.'
000000000000bffd         db  0xaf ; '.'
000000000000bffe         db  0xff ; '.'
000000000000bfff         db  0xff ; '.'
000000000000c000         db  0x54 ; 'T'
000000000000c001         db  0x12 ; '.'
000000000000c002         db  0x00 ; '.'
000000000000c003         db  0x00 ; '.'
000000000000c004         db  0x98 ; '.'
000000000000c005         db  0xb1 ; '.'
000000000000c006         db  0xff ; '.'
000000000000c007         db  0xff ; '.'
000000000000c008         db  0xa4 ; '.'
000000000000c009         db  0x12 ; '.'
000000000000c00a         db  0x00 ; '.'
000000000000c00b         db  0x00 ; '.'
000000000000c00c         db  0x48 ; 'H'
000000000000c00d         db  0xb2 ; '.'
000000000000c00e         db  0xff ; '.'
000000000000c00f         db  0xff ; '.'
000000000000c010         db  0xe8 ; '.'
000000000000c011         db  0x12 ; '.'
000000000000c012         db  0x00 ; '.'
000000000000c013         db  0x00 ; '.'
000000000000c014         db  0x08 ; '.'
000000000000c015         db  0xb3 ; '.'
000000000000c016         db  0xff ; '.'
000000000000c017         db  0xff ; '.'
000000000000c018         db  0x04 ; '.'
000000000000c019         db  0x13 ; '.'
000000000000c01a         db  0x00 ; '.'
000000000000c01b         db  0x00 ; '.'
000000000000c01c         db  0xe8 ; '.'
000000000000c01d         db  0xbc ; '.'
000000000000c01e         db  0xff ; '.'
000000000000c01f         db  0xff ; '.'
000000000000c020         db  0x54 ; 'T'
000000000000c021         db  0x13 ; '.'
000000000000c022         db  0x00 ; '.'
000000000000c023         db  0x00 ; '.'
000000000000c024         db  0x98 ; '.'
000000000000c025         db  0xc0 ; '.'
000000000000c026         db  0xff ; '.'
000000000000c027         db  0xff ; '.'
000000000000c028         db  0xa0 ; '.'
000000000000c029         db  0x13 ; '.'
000000000000c02a         db  0x00 ; '.'
000000000000c02b         db  0x00 ; '.'
000000000000c02c         db  0x28 ; '('
000000000000c02d         db  0xc2 ; '.'
000000000000c02e         db  0xff ; '.'
000000000000c02f         db  0xff ; '.'
000000000000c030         db  0xd0 ; '.'
000000000000c031         db  0x13 ; '.'
000000000000c032         db  0x00 ; '.'
000000000000c033         db  0x00 ; '.'
000000000000c034         db  0xa8 ; '.'
000000000000c035         db  0xc9 ; '.'
000000000000c036         db  0xff ; '.'
000000000000c037         db  0xff ; '.'
000000000000c038         db  0x34 ; '4'
000000000000c039         db  0x14 ; '.'
000000000000c03a         db  0x00 ; '.'
000000000000c03b         db  0x00 ; '.'
000000000000c03c         db  0xd8 ; '.'
000000000000c03d         db  0xc9 ; '.'
000000000000c03e         db  0xff ; '.'
000000000000c03f         db  0xff ; '.'
000000000000c040         db  0x4c ; 'L'
000000000000c041         db  0x14 ; '.'
000000000000c042         db  0x00 ; '.'
000000000000c043         db  0x00 ; '.'
000000000000c044         db  0x28 ; '('
000000000000c045         db  0xcb ; '.'
000000000000c046         db  0xff ; '.'
000000000000c047         db  0xff ; '.'
000000000000c048         db  0xb0 ; '.'
000000000000c049         db  0x14 ; '.'
000000000000c04a         db  0x00 ; '.'
000000000000c04b         db  0x00 ; '.'
000000000000c04c         db  0xb8 ; '.'
000000000000c04d         db  0xcb ; '.'
000000000000c04e         db  0xff ; '.'
000000000000c04f         db  0xff ; '.'
000000000000c050         db  0xf0 ; '.'
000000000000c051         db  0x14 ; '.'
000000000000c052         db  0x00 ; '.'
000000000000c053         db  0x00 ; '.'
000000000000c054         db  0x38 ; '8'
000000000000c055         db  0xcc ; '.'
000000000000c056         db  0xff ; '.'
000000000000c057         db  0xff ; '.'
000000000000c058         db  0x40 ; '@'
000000000000c059         db  0x15 ; '.'
000000000000c05a         db  0x00 ; '.'
000000000000c05b         db  0x00 ; '.'
000000000000c05c         db  0x48 ; 'H'
000000000000c05d         db  0xcc ; '.'
000000000000c05e         db  0xff ; '.'
000000000000c05f         db  0xff ; '.'
000000000000c060         db  0x54 ; 'T'
000000000000c061         db  0x15 ; '.'
000000000000c062         db  0x00 ; '.'
000000000000c063         db  0x00 ; '.'
000000000000c064         db  0xd8 ; '.'
000000000000c065         db  0xcc ; '.'
000000000000c066         db  0xff ; '.'
000000000000c067         db  0xff ; '.'
000000000000c068         db  0x70 ; 'p'
000000000000c069         db  0x15 ; '.'
000000000000c06a         db  0x00 ; '.'
000000000000c06b         db  0x00 ; '.'
000000000000c06c         db  0x48 ; 'H'
000000000000c06d         db  0xcd ; '.'
000000000000c06e         db  0xff ; '.'
000000000000c06f         db  0xff ; '.'
000000000000c070         db  0x90 ; '.'
000000000000c071         db  0x15 ; '.'
000000000000c072         db  0x00 ; '.'
000000000000c073         db  0x00 ; '.'
000000000000c074         db  0xa8 ; '.'
000000000000c075         db  0xcd ; '.'
000000000000c076         db  0xff ; '.'
000000000000c077         db  0xff ; '.'
000000000000c078         db  0xb0 ; '.'
000000000000c079         db  0x15 ; '.'
000000000000c07a         db  0x00 ; '.'
000000000000c07b         db  0x00 ; '.'
000000000000c07c         db  0x48 ; 'H'
000000000000c07d         db  0xce ; '.'
000000000000c07e         db  0xff ; '.'
000000000000c07f         db  0xff ; '.'
000000000000c080         db  0xc4 ; '.'
000000000000c081         db  0x15 ; '.'
000000000000c082         db  0x00 ; '.'
000000000000c083         db  0x00 ; '.'
000000000000c084         db  0x58 ; 'X'
000000000000c085         db  0xce ; '.'
000000000000c086         db  0xff ; '.'
000000000000c087         db  0xff ; '.'
000000000000c088         db  0xd8 ; '.'
000000000000c089         db  0x15 ; '.'
000000000000c08a         db  0x00 ; '.'
000000000000c08b         db  0x00 ; '.'
000000000000c08c         db  0x68 ; 'h'
000000000000c08d         db  0xce ; '.'
000000000000c08e         db  0xff ; '.'
000000000000c08f         db  0xff ; '.'
000000000000c090         db  0xec ; '.'
000000000000c091         db  0x15 ; '.'
000000000000c092         db  0x00 ; '.'
000000000000c093         db  0x00 ; '.'
000000000000c094         db  0x98 ; '.'
000000000000c095         db  0xce ; '.'
000000000000c096         db  0xff ; '.'
000000000000c097         db  0xff ; '.'
000000000000c098         db  0x08 ; '.'
000000000000c099         db  0x16 ; '.'
000000000000c09a         db  0x00 ; '.'
000000000000c09b         db  0x00 ; '.'
000000000000c09c         db  0xb8 ; '.'
000000000000c09d         db  0xcf ; '.'
000000000000c09e         db  0xff ; '.'
000000000000c09f         db  0xff ; '.'
000000000000c0a0         db  0x68 ; 'h'
000000000000c0a1         db  0x16 ; '.'
000000000000c0a2         db  0x00 ; '.'
000000000000c0a3         db  0x00 ; '.'
000000000000c0a4         db  0x38 ; '8'
000000000000c0a5         db  0xd0 ; '.'
000000000000c0a6         db  0xff ; '.'
000000000000c0a7         db  0xff ; '.'
000000000000c0a8         db  0x7c ; '|'
000000000000c0a9         db  0x16 ; '.'
000000000000c0aa         db  0x00 ; '.'
000000000000c0ab         db  0x00 ; '.'
000000000000c0ac         db  0x78 ; 'x'
000000000000c0ad         db  0xd1 ; '.'
000000000000c0ae         db  0xff ; '.'
000000000000c0af         db  0xff ; '.'
000000000000c0b0         db  0xdc ; '.'
000000000000c0b1         db  0x16 ; '.'
000000000000c0b2         db  0x00 ; '.'
000000000000c0b3         db  0x00 ; '.'
000000000000c0b4         db  0x88 ; '.'
000000000000c0b5         db  0xd1 ; '.'
000000000000c0b6         db  0xff ; '.'
000000000000c0b7         db  0xff ; '.'
000000000000c0b8         db  0xf0 ; '.'
000000000000c0b9         db  0x16 ; '.'
000000000000c0ba         db  0x00 ; '.'
000000000000c0bb         db  0x00 ; '.'
000000000000c0bc         db  0x98 ; '.'
000000000000c0bd         db  0xd1 ; '.'
000000000000c0be         db  0xff ; '.'
000000000000c0bf         db  0xff ; '.'
000000000000c0c0         db  0x04 ; '.'
000000000000c0c1         db  0x17 ; '.'
000000000000c0c2         db  0x00 ; '.'
000000000000c0c3         db  0x00 ; '.'
000000000000c0c4         db  0xa8 ; '.'
000000000000c0c5         db  0xd1 ; '.'
000000000000c0c6         db  0xff ; '.'
000000000000c0c7         db  0xff ; '.'
000000000000c0c8         db  0x18 ; '.'
000000000000c0c9         db  0x17 ; '.'
000000000000c0ca         db  0x00 ; '.'
000000000000c0cb         db  0x00 ; '.'
000000000000c0cc         db  0xf8 ; '.'
000000000000c0cd         db  0xd1 ; '.'
000000000000c0ce         db  0xff ; '.'
000000000000c0cf         db  0xff ; '.'
000000000000c0d0         db  0x2c ; ','
000000000000c0d1         db  0x17 ; '.'
000000000000c0d2         db  0x00 ; '.'
000000000000c0d3         db  0x00 ; '.'
000000000000c0d4         db  0x58 ; 'X'
000000000000c0d5         db  0xd2 ; '.'
000000000000c0d6         db  0xff ; '.'
000000000000c0d7         db  0xff ; '.'
000000000000c0d8         db  0x40 ; '@'
000000000000c0d9         db  0x17 ; '.'
000000000000c0da         db  0x00 ; '.'
000000000000c0db         db  0x00 ; '.'
000000000000c0dc         db  0xa8 ; '.'
000000000000c0dd         db  0xd3 ; '.'
000000000000c0de         db  0xff ; '.'
000000000000c0df         db  0xff ; '.'
000000000000c0e0         db  0x7c ; '|'
000000000000c0e1         db  0x17 ; '.'
000000000000c0e2         db  0x00 ; '.'
000000000000c0e3         db  0x00 ; '.'
000000000000c0e4         db  0x08 ; '.'
000000000000c0e5         db  0xd4 ; '.'
000000000000c0e6         db  0xff ; '.'
000000000000c0e7         db  0xff ; '.'
000000000000c0e8         db  0xb4 ; '.'
000000000000c0e9         db  0x17 ; '.'
000000000000c0ea         db  0x00 ; '.'
000000000000c0eb         db  0x00 ; '.'
000000000000c0ec         db  0x58 ; 'X'
000000000000c0ed         db  0xd4 ; '.'
000000000000c0ee         db  0xff ; '.'
000000000000c0ef         db  0xff ; '.'
000000000000c0f0         db  0xc8 ; '.'
000000000000c0f1         db  0x17 ; '.'
000000000000c0f2         db  0x00 ; '.'
000000000000c0f3         db  0x00 ; '.'
000000000000c0f4         db  0xd8 ; '.'
000000000000c0f5         db  0xd4 ; '.'
000000000000c0f6         db  0xff ; '.'
000000000000c0f7         db  0xff ; '.'
000000000000c0f8         db  0xfc ; '.'
000000000000c0f9         db  0x17 ; '.'
000000000000c0fa         db  0x00 ; '.'
000000000000c0fb         db  0x00 ; '.'
000000000000c0fc         db  0x48 ; 'H'
000000000000c0fd         db  0xd5 ; '.'
000000000000c0fe         db  0xff ; '.'
000000000000c0ff         db  0xff ; '.'
000000000000c100         db  0x10 ; '.'
000000000000c101         db  0x18 ; '.'
000000000000c102         db  0x00 ; '.'
000000000000c103         db  0x00 ; '.'
000000000000c104         db  0xb8 ; '.'
000000000000c105         db  0xd5 ; '.'
000000000000c106         db  0xff ; '.'
000000000000c107         db  0xff ; '.'
000000000000c108         db  0x5c ; '\'
000000000000c109         db  0x18 ; '.'
000000000000c10a         db  0x00 ; '.'
000000000000c10b         db  0x00 ; '.'
000000000000c10c         db  0xf8 ; '.'
000000000000c10d         db  0xd5 ; '.'
000000000000c10e         db  0xff ; '.'
000000000000c10f         db  0xff ; '.'
000000000000c110         db  0x70 ; 'p'
000000000000c111         db  0x18 ; '.'
000000000000c112         db  0x00 ; '.'
000000000000c113         db  0x00 ; '.'
000000000000c114         db  0x18 ; '.'
000000000000c115         db  0xd6 ; '.'
000000000000c116         db  0xff ; '.'
000000000000c117         db  0xff ; '.'
000000000000c118         db  0x84 ; '.'
000000000000c119         db  0x18 ; '.'
000000000000c11a         db  0x00 ; '.'
000000000000c11b         db  0x00 ; '.'
000000000000c11c         db  0xd8 ; '.'
000000000000c11d         db  0xd7 ; '.'
000000000000c11e         db  0xff ; '.'
000000000000c11f         db  0xff ; '.'
000000000000c120         db  0xd0 ; '.'
000000000000c121         db  0x18 ; '.'
000000000000c122         db  0x00 ; '.'
000000000000c123         db  0x00 ; '.'
000000000000c124         db  0x68 ; 'h'
000000000000c125         db  0xd8 ; '.'
000000000000c126         db  0xff ; '.'
000000000000c127         db  0xff ; '.'
000000000000c128         db  0xfc ; '.'
000000000000c129         db  0x18 ; '.'
000000000000c12a         db  0x00 ; '.'
000000000000c12b         db  0x00 ; '.'
000000000000c12c         db  0x48 ; 'H'
000000000000c12d         db  0xd9 ; '.'
000000000000c12e         db  0xff ; '.'
000000000000c12f         db  0xff ; '.'
000000000000c130         db  0x28 ; '('
000000000000c131         db  0x19 ; '.'
000000000000c132         db  0x00 ; '.'
000000000000c133         db  0x00 ; '.'
000000000000c134         db  0x88 ; '.'
000000000000c135         db  0xdb ; '.'
000000000000c136         db  0xff ; '.'
000000000000c137         db  0xff ; '.'
000000000000c138         db  0x60 ; '`'
000000000000c139         db  0x19 ; '.'
000000000000c13a         db  0x00 ; '.'
000000000000c13b         db  0x00 ; '.'
000000000000c13c         db  0x18 ; '.'
000000000000c13d         db  0xde ; '.'
000000000000c13e         db  0xff ; '.'
000000000000c13f         db  0xff ; '.'
000000000000c140         db  0x9c ; '.'
000000000000c141         db  0x19 ; '.'
000000000000c142         db  0x00 ; '.'
000000000000c143         db  0x00 ; '.'
000000000000c144         db  0x78 ; 'x'
000000000000c145         db  0xde ; '.'
000000000000c146         db  0xff ; '.'
000000000000c147         db  0xff ; '.'
000000000000c148         db  0xc0 ; '.'
000000000000c149         db  0x19 ; '.'
000000000000c14a         db  0x00 ; '.'
000000000000c14b         db  0x00 ; '.'
000000000000c14c         db  0x88 ; '.'
000000000000c14d         db  0xe0 ; '.'
000000000000c14e         db  0xff ; '.'
000000000000c14f         db  0xff ; '.'
000000000000c150         db  0xf8 ; '.'
000000000000c151         db  0x19 ; '.'
000000000000c152         db  0x00 ; '.'
000000000000c153         db  0x00 ; '.'
000000000000c154         db  0xa8 ; '.'
000000000000c155         db  0xe0 ; '.'
000000000000c156         db  0xff ; '.'
000000000000c157         db  0xff ; '.'
000000000000c158         db  0x0c ; '.'
000000000000c159         db  0x1a ; '.'
000000000000c15a         db  0x00 ; '.'
000000000000c15b         db  0x00 ; '.'
000000000000c15c         db  0xb8 ; '.'
000000000000c15d         db  0xe0 ; '.'
000000000000c15e         db  0xff ; '.'
000000000000c15f         db  0xff ; '.'
000000000000c160         db  0x20 ; ' '
000000000000c161         db  0x1a ; '.'
000000000000c162         db  0x00 ; '.'
000000000000c163         db  0x00 ; '.'
000000000000c164         db  0xf8 ; '.'
000000000000c165         db  0xe0 ; '.'
000000000000c166         db  0xff ; '.'
000000000000c167         db  0xff ; '.'
000000000000c168         db  0x34 ; '4'
000000000000c169         db  0x1a ; '.'
000000000000c16a         db  0x00 ; '.'
000000000000c16b         db  0x00 ; '.'
000000000000c16c         db  0x38 ; '8'
000000000000c16d         db  0xe1 ; '.'
000000000000c16e         db  0xff ; '.'
000000000000c16f         db  0xff ; '.'
000000000000c170         db  0x48 ; 'H'
000000000000c171         db  0x1a ; '.'
000000000000c172         db  0x00 ; '.'
000000000000c173         db  0x00 ; '.'
000000000000c174         db  0x78 ; 'x'
000000000000c175         db  0xe1 ; '.'
000000000000c176         db  0xff ; '.'
000000000000c177         db  0xff ; '.'
000000000000c178         db  0x68 ; 'h'
000000000000c179         db  0x1a ; '.'
000000000000c17a         db  0x00 ; '.'
000000000000c17b         db  0x00 ; '.'
000000000000c17c         db  0xe8 ; '.'
000000000000c17d         db  0xe1 ; '.'
000000000000c17e         db  0xff ; '.'
000000000000c17f         db  0xff ; '.'
000000000000c180         db  0x88 ; '.'
000000000000c181         db  0x1a ; '.'
000000000000c182         db  0x00 ; '.'
000000000000c183         db  0x00 ; '.'
000000000000c184         db  0x68 ; 'h'
000000000000c185         db  0xe2 ; '.'
000000000000c186         db  0xff ; '.'
000000000000c187         db  0xff ; '.'
000000000000c188         db  0xe8 ; '.'
000000000000c189         db  0x1a ; '.'
000000000000c18a         db  0x00 ; '.'
000000000000c18b         db  0x00 ; '.'
000000000000c18c         db  0xa8 ; '.'
000000000000c18d         db  0xe2 ; '.'
000000000000c18e         db  0xff ; '.'
000000000000c18f         db  0xff ; '.'
000000000000c190         db  0x20 ; ' '
000000000000c191         db  0x1b ; '.'
000000000000c192         db  0x00 ; '.'
000000000000c193         db  0x00 ; '.'
000000000000c194         db  0x28 ; '('
000000000000c195         db  0xe3 ; '.'
000000000000c196         db  0xff ; '.'
000000000000c197         db  0xff ; '.'
000000000000c198         db  0x58 ; 'X'
000000000000c199         db  0x1b ; '.'
000000000000c19a         db  0x00 ; '.'
000000000000c19b         db  0x00 ; '.'
000000000000c19c         db  0xa8 ; '.'
000000000000c19d         db  0xe5 ; '.'
000000000000c19e         db  0xff ; '.'
000000000000c19f         db  0xff ; '.'
000000000000c1a0         db  0x90 ; '.'
000000000000c1a1         db  0x1b ; '.'
000000000000c1a2         db  0x00 ; '.'
000000000000c1a3         db  0x00 ; '.'
000000000000c1a4         db  0xe8 ; '.'
000000000000c1a5         db  0xe5 ; '.'
000000000000c1a6         db  0xff ; '.'
000000000000c1a7         db  0xff ; '.'
000000000000c1a8         db  0xb0 ; '.'
000000000000c1a9         db  0x1b ; '.'
000000000000c1aa         db  0x00 ; '.'
000000000000c1ab         db  0x00 ; '.'
000000000000c1ac         db  0x48 ; 'H'
000000000000c1ad         db  0xe6 ; '.'
000000000000c1ae         db  0xff ; '.'
000000000000c1af         db  0xff ; '.'
000000000000c1b0         db  0xe0 ; '.'
000000000000c1b1         db  0x1b ; '.'
000000000000c1b2         db  0x00 ; '.'
000000000000c1b3         db  0x00 ; '.'
000000000000c1b4         db  0x58 ; 'X'
000000000000c1b5         db  0xe6 ; '.'
000000000000c1b6         db  0xff ; '.'
000000000000c1b7         db  0xff ; '.'
000000000000c1b8         db  0xf8 ; '.'
000000000000c1b9         db  0x1b ; '.'
000000000000c1ba         db  0x00 ; '.'
000000000000c1bb         db  0x00 ; '.'
000000000000c1bc         db  0xc8 ; '.'
000000000000c1bd         db  0xe6 ; '.'
000000000000c1be         db  0xff ; '.'
000000000000c1bf         db  0xff ; '.'
000000000000c1c0         db  0x40 ; '@'
000000000000c1c1         db  0x1c ; '.'
000000000000c1c2         db  0x00 ; '.'
000000000000c1c3         db  0x00 ; '.'
000000000000c1c4         db  0xd8 ; '.'
000000000000c1c5         db  0xe6 ; '.'
000000000000c1c6         db  0xff ; '.'
000000000000c1c7         db  0xff ; '.'
000000000000c1c8         db  0x58 ; 'X'
000000000000c1c9         db  0x1c ; '.'
000000000000c1ca         db  0x00 ; '.'
000000000000c1cb         db  0x00 ; '.'
000000000000c1cc         db  0x00 ; '.'
000000000000c1cd         db  0x00 ; '.'
000000000000c1ce         db  0x00 ; '.'
000000000000c1cf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xc1d0; 0xd998[ (6088 bytes)
        ; File offset : [49616; 55704[ (6088 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000c1d0         dd         0x00000014                                  ; Length of the record
000000000000c1d4         dd         0x00000000                                  ; CIE ID
000000000000c1d8         db         0x01                                        ; Version
000000000000c1d9         db         "zR", 0                                     ; Augmentation String
000000000000c1dc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000c1dd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000c1de         db         0x10                                        ; Return address register
000000000000c1df         db         0x01                                        ; Augmentation data length
000000000000c1e0         db         0x1b                                        ; FDE encoding
000000000000c1e1         db  0x0c ; '.'
000000000000c1e2         db  0x07 ; '.'
000000000000c1e3         db  0x08 ; '.'
000000000000c1e4         db  0x90 ; '.'
000000000000c1e5         db  0x01 ; '.'
000000000000c1e6         db  0x07 ; '.'
000000000000c1e7         db  0x10 ; '.'
000000000000c1e8         dd         0x00000014                                  ; Length of the record
000000000000c1ec         dd         0x0000001c                                  ; FDE: parent CIE at 0xc1d0 (FDE encoding = 0x1B)
000000000000c1f0         db         0x50, 0x60, 2 dup (0xff)                    ; begin 0x2240
000000000000c1f4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x226b)
000000000000c1f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1f9         align      512
000000000000c200         dd         0x00000014                                  ; Length of the record
000000000000c204         dd         0x00000000                                  ; CIE ID
000000000000c208         db         0x01                                        ; Version
000000000000c209         db         "zR", 0                                     ; Augmentation String
000000000000c20c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000c20d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000c20e         db         0x10                                        ; Return address register
000000000000c20f         db         0x01                                        ; Augmentation data length
000000000000c210         db         0x1b                                        ; FDE encoding
000000000000c211         db  0x0c ; '.'
000000000000c212         db  0x07 ; '.'
000000000000c213         db  0x08 ; '.'
000000000000c214         db  0x90 ; '.'
000000000000c215         db  0x01 ; '.'
000000000000c216         db  0x00 ; '.'
000000000000c217         db  0x00 ; '.'
000000000000c218         dd         0x00000024                                  ; Length of the record
000000000000c21c         dd         0x0000001c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c220         db         0xe0, 0x56, 2 dup (0xff)                    ; begin 0x1900
000000000000c224         db         0x30, 0x04, 2 dup (0x00)                    ; length 0x430 (end at 0x1d30)
000000000000c228         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c229         db  0x0e ; '.'
000000000000c22a         db  0x10 ; '.'
000000000000c22b         db  0x46 ; 'F'
000000000000c22c         db  0x0e ; '.'
000000000000c22d         db  0x18 ; '.'
000000000000c22e         db  0x4a ; 'J'
000000000000c22f         db  0x0f ; '.'
000000000000c230         db  0x0b ; '.'
000000000000c231         db  0x77 ; 'w'
000000000000c232         db  0x08 ; '.'
000000000000c233         db  0x80 ; '.'
000000000000c234         db  0x00 ; '.'
000000000000c235         db  0x3f ; '?'
000000000000c236         db  0x1a ; '.'
000000000000c237         db  0x3b ; ';'
000000000000c238         db  0x2a ; '*'
000000000000c239         db  0x33 ; '3'
000000000000c23a         db  0x24 ; '$'
000000000000c23b         db  0x22 ; '"'
000000000000c23c         db  0x00 ; '.'
000000000000c23d         db  0x00 ; '.'
000000000000c23e         db  0x00 ; '.'
000000000000c23f         db  0x00 ; '.'
000000000000c240         dd         0x00000014                                  ; Length of the record
000000000000c244         dd         0x00000044                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c248         db         0xe8, 0x5a, 2 dup (0xff)                    ; begin 0x1d30
000000000000c24c         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x1d40)
000000000000c250         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c251         align      8
000000000000c258         dd         0x00000028                                  ; Length of the record
000000000000c25c         dd         0x0000005c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c260         db         0xf0, 0x60, 2 dup (0xff)                    ; begin 0x2350
000000000000c264         db         0x7a, 0x04, 2 dup (0x00)                    ; length 0x47a (end at 0x27ca)
000000000000c268         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c269         db  0x42 ; 'B'
000000000000c26a         db  0x0e ; '.'
000000000000c26b         db  0x10 ; '.'
000000000000c26c         db  0x8d ; '.'
000000000000c26d         db  0x02 ; '.'
000000000000c26e         db  0x42 ; 'B'
000000000000c26f         db  0x0e ; '.'
000000000000c270         db  0x18 ; '.'
000000000000c271         db  0x8c ; '.'
000000000000c272         db  0x03 ; '.'
000000000000c273         db  0x46 ; 'F'
000000000000c274         db  0x0e ; '.'
000000000000c275         db  0x20 ; ' '
000000000000c276         db  0x86 ; '.'
000000000000c277         db  0x04 ; '.'
000000000000c278         db  0x41 ; 'A'
000000000000c279         db  0x0e ; '.'
000000000000c27a         db  0x28 ; '('
000000000000c27b         db  0x83 ; '.'
000000000000c27c         db  0x05 ; '.'
000000000000c27d         db  0x49 ; 'I'
000000000000c27e         db  0x0e ; '.'
000000000000c27f         db  0xb0 ; '.'
000000000000c280         db  0x01 ; '.'
000000000000c281         db  0x00 ; '.'
000000000000c282         db  0x00 ; '.'
000000000000c283         db  0x00 ; '.'
000000000000c284         dd         0x00000068                                  ; Length of the record
000000000000c288         dd         0x00000088                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c28c         db         0xb4, 0x5a, 2 dup (0xff)                    ; begin 0x1d40
000000000000c290         db         0xf7, 0x04, 2 dup (0x00)                    ; length 0x4f7 (end at 0x2237)
000000000000c294         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c295         db  0x42 ; 'B'
000000000000c296         db  0x0e ; '.'
000000000000c297         db  0x10 ; '.'
000000000000c298         db  0x8f ; '.'
000000000000c299         db  0x02 ; '.'
000000000000c29a         db  0x42 ; 'B'
000000000000c29b         db  0x0e ; '.'
000000000000c29c         db  0x18 ; '.'
000000000000c29d         db  0x8e ; '.'
000000000000c29e         db  0x03 ; '.'
000000000000c29f         db  0x48 ; 'H'
000000000000c2a0         db  0x0e ; '.'
000000000000c2a1         db  0x20 ; ' '
000000000000c2a2         db  0x8d ; '.'
000000000000c2a3         db  0x04 ; '.'
000000000000c2a4         db  0x42 ; 'B'
000000000000c2a5         db  0x0e ; '.'
000000000000c2a6         db  0x28 ; '('
000000000000c2a7         db  0x8c ; '.'
000000000000c2a8         db  0x05 ; '.'
000000000000c2a9         db  0x47 ; 'G'
000000000000c2aa         db  0x0e ; '.'
000000000000c2ab         db  0x30 ; '0'
000000000000c2ac         db  0x86 ; '.'
000000000000c2ad         db  0x06 ; '.'
000000000000c2ae         db  0x41 ; 'A'
000000000000c2af         db  0x0e ; '.'
000000000000c2b0         db  0x38 ; '8'
000000000000c2b1         db  0x83 ; '.'
000000000000c2b2         db  0x07 ; '.'
000000000000c2b3         db  0x56 ; 'V'
000000000000c2b4         db  0x0e ; '.'
000000000000c2b5         db  0xb0 ; '.'
000000000000c2b6         db  0x02 ; '.'
000000000000c2b7         db  0x03 ; '.'
000000000000c2b8         db  0x43 ; 'C'
000000000000c2b9         db  0x01 ; '.'
000000000000c2ba         db  0x0a ; '.'
000000000000c2bb         db  0x0e ; '.'
000000000000c2bc         db  0xb8 ; '.'
000000000000c2bd         db  0x02 ; '.'
000000000000c2be         db  0x50 ; 'P'
000000000000c2bf         db  0x0e ; '.'
000000000000c2c0         db  0xc0 ; '.'
000000000000c2c1         db  0x02 ; '.'
000000000000c2c2         db  0x6a ; 'j'
000000000000c2c3         db  0x0b ; '.'
000000000000c2c4         db  0x02 ; '.'
000000000000c2c5         db  0xe1 ; '.'
000000000000c2c6         db  0x0e ; '.'
000000000000c2c7         db  0xb8 ; '.'
000000000000c2c8         db  0x02 ; '.'
000000000000c2c9         db  0x48 ; 'H'
000000000000c2ca         db  0x0e ; '.'
000000000000c2cb         db  0xc0 ; '.'
000000000000c2cc         db  0x02 ; '.'
000000000000c2cd         db  0x5b ; '['
000000000000c2ce         db  0x0e ; '.'
000000000000c2cf         db  0xb8 ; '.'
000000000000c2d0         db  0x02 ; '.'
000000000000c2d1         db  0x41 ; 'A'
000000000000c2d2         db  0x0e ; '.'
000000000000c2d3         db  0xb0 ; '.'
000000000000c2d4         db  0x02 ; '.'
000000000000c2d5         db  0x64 ; 'd'
000000000000c2d6         db  0x0a ; '.'
000000000000c2d7         db  0x0e ; '.'
000000000000c2d8         db  0x38 ; '8'
000000000000c2d9         db  0x41 ; 'A'
000000000000c2da         db  0x0e ; '.'
000000000000c2db         db  0x30 ; '0'
000000000000c2dc         db  0x41 ; 'A'
000000000000c2dd         db  0x0e ; '.'
000000000000c2de         db  0x28 ; '('
000000000000c2df         db  0x42 ; 'B'
000000000000c2e0         db  0x0e ; '.'
000000000000c2e1         db  0x20 ; ' '
000000000000c2e2         db  0x42 ; 'B'
000000000000c2e3         db  0x0e ; '.'
000000000000c2e4         db  0x18 ; '.'
000000000000c2e5         db  0x42 ; 'B'
000000000000c2e6         db  0x0e ; '.'
000000000000c2e7         db  0x10 ; '.'
000000000000c2e8         db  0x42 ; 'B'
000000000000c2e9         db  0x0e ; '.'
000000000000c2ea         db  0x08 ; '.'
000000000000c2eb         db  0x41 ; 'A'
000000000000c2ec         db  0x0b ; '.'
000000000000c2ed         db  0x00 ; '.'
000000000000c2ee         db  0x00 ; '.'
000000000000c2ef         db  0x00 ; '.'
000000000000c2f0         dd         0x00000038                                  ; Length of the record
000000000000c2f4         dd         0x000000f4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c2f8         db         0xd8, 0x64, 2 dup (0xff)                    ; begin 0x27d0
000000000000c2fc         db         0x75, 3 dup (0x00)                          ; length 0x75 (end at 0x2845)
000000000000c300         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c301         db  0x45 ; 'E'
000000000000c302         db  0x0e ; '.'
000000000000c303         db  0x10 ; '.'
000000000000c304         db  0x8c ; '.'
000000000000c305         db  0x02 ; '.'
000000000000c306         db  0x41 ; 'A'
000000000000c307         db  0x0e ; '.'
000000000000c308         db  0x18 ; '.'
000000000000c309         db  0x86 ; '.'
000000000000c30a         db  0x03 ; '.'
000000000000c30b         db  0x41 ; 'A'
000000000000c30c         db  0x0e ; '.'
000000000000c30d         db  0x20 ; ' '
000000000000c30e         db  0x83 ; '.'
000000000000c30f         db  0x04 ; '.'
000000000000c310         db  0x02 ; '.'
000000000000c311         db  0x48 ; 'H'
000000000000c312         db  0x0a ; '.'
000000000000c313         db  0x0e ; '.'
000000000000c314         db  0x18 ; '.'
000000000000c315         db  0x41 ; 'A'
000000000000c316         db  0x0e ; '.'
000000000000c317         db  0x10 ; '.'
000000000000c318         db  0x42 ; 'B'
000000000000c319         db  0x0e ; '.'
000000000000c31a         db  0x08 ; '.'
000000000000c31b         db  0x46 ; 'F'
000000000000c31c         db  0x0b ; '.'
000000000000c31d         db  0x49 ; 'I'
000000000000c31e         db  0x0a ; '.'
000000000000c31f         db  0x0e ; '.'
000000000000c320         db  0x18 ; '.'
000000000000c321         db  0x41 ; 'A'
000000000000c322         db  0x0e ; '.'
000000000000c323         db  0x10 ; '.'
000000000000c324         db  0x42 ; 'B'
000000000000c325         db  0x0e ; '.'
000000000000c326         db  0x08 ; '.'
000000000000c327         db  0x4c ; 'L'
000000000000c328         db  0x0b ; '.'
000000000000c329         db  0x00 ; '.'
000000000000c32a         db  0x00 ; '.'
000000000000c32b         db  0x00 ; '.'
000000000000c32c         dd         0x00000010                                  ; Length of the record
000000000000c330         dd         0x00000130                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c334         db         0x1c, 0x65, 2 dup (0xff)                    ; begin 0x2850
000000000000c338         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x287b)
000000000000c33c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c33d         align      64
000000000000c340         dd         0x00000018                                  ; Length of the record
000000000000c344         dd         0x00000144                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c348         db         0x38, 0x65, 2 dup (0xff)                    ; begin 0x2880
000000000000c34c         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x2897)
000000000000c350         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c351         db  0x41 ; 'A'
000000000000c352         db  0x0e ; '.'
000000000000c353         db  0x10 ; '.'
000000000000c354         db  0x83 ; '.'
000000000000c355         db  0x02 ; '.'
000000000000c356         db  0x51 ; 'Q'
000000000000c357         db  0x0e ; '.'
000000000000c358         db  0x08 ; '.'
000000000000c359         db  0x00 ; '.'
000000000000c35a         db  0x00 ; '.'
000000000000c35b         db  0x00 ; '.'
000000000000c35c         dd         0x00000020                                  ; Length of the record
000000000000c360         dd         0x00000160                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c364         db         0x3c, 0x65, 2 dup (0xff)                    ; begin 0x28a0
000000000000c368         db         0x54, 3 dup (0x00)                          ; length 0x54 (end at 0x28f4)
000000000000c36c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c36d         db  0x41 ; 'A'
000000000000c36e         db  0x0e ; '.'
000000000000c36f         db  0x10 ; '.'
000000000000c370         db  0x83 ; '.'
000000000000c371         db  0x02 ; '.'
000000000000c372         db  0x46 ; 'F'
000000000000c373         db  0x0e ; '.'
000000000000c374         db  0x30 ; '0'
000000000000c375         db  0x76 ; 'v'
000000000000c376         db  0x0a ; '.'
000000000000c377         db  0x0e ; '.'
000000000000c378         db  0x10 ; '.'
000000000000c379         db  0x41 ; 'A'
000000000000c37a         db  0x0e ; '.'
000000000000c37b         db  0x08 ; '.'
000000000000c37c         db  0x42 ; 'B'
000000000000c37d         db  0x0b ; '.'
000000000000c37e         db  0x00 ; '.'
000000000000c37f         db  0x00 ; '.'
000000000000c380         dd         0x00000020                                  ; Length of the record
000000000000c384         dd         0x00000184                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c388         db         0x78, 0x65, 2 dup (0xff)                    ; begin 0x2900
000000000000c38c         db         0x54, 3 dup (0x00)                          ; length 0x54 (end at 0x2954)
000000000000c390         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c391         db  0x41 ; 'A'
000000000000c392         db  0x0e ; '.'
000000000000c393         db  0x10 ; '.'
000000000000c394         db  0x83 ; '.'
000000000000c395         db  0x02 ; '.'
000000000000c396         db  0x46 ; 'F'
000000000000c397         db  0x0e ; '.'
000000000000c398         db  0x30 ; '0'
000000000000c399         db  0x76 ; 'v'
000000000000c39a         db  0x0a ; '.'
000000000000c39b         db  0x0e ; '.'
000000000000c39c         db  0x10 ; '.'
000000000000c39d         db  0x41 ; 'A'
000000000000c39e         db  0x0e ; '.'
000000000000c39f         db  0x08 ; '.'
000000000000c3a0         db  0x42 ; 'B'
000000000000c3a1         db  0x0b ; '.'
000000000000c3a2         db  0x00 ; '.'
000000000000c3a3         db  0x00 ; '.'
000000000000c3a4         dd         0x0000004c                                  ; Length of the record
000000000000c3a8         dd         0x000001a8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c3ac         db         0xb4, 0x65, 2 dup (0xff)                    ; begin 0x2960
000000000000c3b0         db         0x83, 0x0d, 2 dup (0x00)                    ; length 0xd83 (end at 0x36e3)
000000000000c3b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c3b5         db  0x42 ; 'B'
000000000000c3b6         db  0x0e ; '.'
000000000000c3b7         db  0x10 ; '.'
000000000000c3b8         db  0x8f ; '.'
000000000000c3b9         db  0x02 ; '.'
000000000000c3ba         db  0x42 ; 'B'
000000000000c3bb         db  0x0e ; '.'
000000000000c3bc         db  0x18 ; '.'
000000000000c3bd         db  0x8e ; '.'
000000000000c3be         db  0x03 ; '.'
000000000000c3bf         db  0x42 ; 'B'
000000000000c3c0         db  0x0e ; '.'
000000000000c3c1         db  0x20 ; ' '
000000000000c3c2         db  0x8d ; '.'
000000000000c3c3         db  0x04 ; '.'
000000000000c3c4         db  0x42 ; 'B'
000000000000c3c5         db  0x0e ; '.'
000000000000c3c6         db  0x28 ; '('
000000000000c3c7         db  0x8c ; '.'
000000000000c3c8         db  0x05 ; '.'
000000000000c3c9         db  0x44 ; 'D'
000000000000c3ca         db  0x0e ; '.'
000000000000c3cb         db  0x30 ; '0'
000000000000c3cc         db  0x86 ; '.'
000000000000c3cd         db  0x06 ; '.'
000000000000c3ce         db  0x41 ; 'A'
000000000000c3cf         db  0x0e ; '.'
000000000000c3d0         db  0x38 ; '8'
000000000000c3d1         db  0x83 ; '.'
000000000000c3d2         db  0x07 ; '.'
000000000000c3d3         db  0x4a ; 'J'
000000000000c3d4         db  0x0e ; '.'
000000000000c3d5         db  0xb0 ; '.'
000000000000c3d6         db  0x03 ; '.'
000000000000c3d7         db  0x03 ; '.'
000000000000c3d8         db  0xfa ; '.'
000000000000c3d9         db  0x04 ; '.'
000000000000c3da         db  0x0a ; '.'
000000000000c3db         db  0x0e ; '.'
000000000000c3dc         db  0x38 ; '8'
000000000000c3dd         db  0x41 ; 'A'
000000000000c3de         db  0x0e ; '.'
000000000000c3df         db  0x30 ; '0'
000000000000c3e0         db  0x41 ; 'A'
000000000000c3e1         db  0x0e ; '.'
000000000000c3e2         db  0x28 ; '('
000000000000c3e3         db  0x42 ; 'B'
000000000000c3e4         db  0x0e ; '.'
000000000000c3e5         db  0x20 ; ' '
000000000000c3e6         db  0x42 ; 'B'
000000000000c3e7         db  0x0e ; '.'
000000000000c3e8         db  0x18 ; '.'
000000000000c3e9         db  0x42 ; 'B'
000000000000c3ea         db  0x0e ; '.'
000000000000c3eb         db  0x10 ; '.'
000000000000c3ec         db  0x42 ; 'B'
000000000000c3ed         db  0x0e ; '.'
000000000000c3ee         db  0x08 ; '.'
000000000000c3ef         db  0x45 ; 'E'
000000000000c3f0         db  0x0b ; '.'
000000000000c3f1         db  0x00 ; '.'
000000000000c3f2         db  0x00 ; '.'
000000000000c3f3         db  0x00 ; '.'
000000000000c3f4         dd         0x00000058                                  ; Length of the record
000000000000c3f8         dd         0x000001f8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c3fc         db         0xf4, 0x72, 2 dup (0xff)                    ; begin 0x36f0
000000000000c400         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x3810)
000000000000c404         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c405         db  0x42 ; 'B'
000000000000c406         db  0x0e ; '.'
000000000000c407         db  0x10 ; '.'
000000000000c408         db  0x8f ; '.'
000000000000c409         db  0x02 ; '.'
000000000000c40a         db  0x42 ; 'B'
000000000000c40b         db  0x0e ; '.'
000000000000c40c         db  0x18 ; '.'
000000000000c40d         db  0x8e ; '.'
000000000000c40e         db  0x03 ; '.'
000000000000c40f         db  0x45 ; 'E'
000000000000c410         db  0x0e ; '.'
000000000000c411         db  0x20 ; ' '
000000000000c412         db  0x8d ; '.'
000000000000c413         db  0x04 ; '.'
000000000000c414         db  0x42 ; 'B'
000000000000c415         db  0x0e ; '.'
000000000000c416         db  0x28 ; '('
000000000000c417         db  0x8c ; '.'
000000000000c418         db  0x05 ; '.'
000000000000c419         db  0x44 ; 'D'
000000000000c41a         db  0x0e ; '.'
000000000000c41b         db  0x30 ; '0'
000000000000c41c         db  0x86 ; '.'
000000000000c41d         db  0x06 ; '.'
000000000000c41e         db  0x41 ; 'A'
000000000000c41f         db  0x0e ; '.'
000000000000c420         db  0x38 ; '8'
000000000000c421         db  0x83 ; '.'
000000000000c422         db  0x07 ; '.'
000000000000c423         db  0x47 ; 'G'
000000000000c424         db  0x0e ; '.'
000000000000c425         db  0x50 ; 'P'
000000000000c426         db  0x7d ; '}'
000000000000c427         db  0x0e ; '.'
000000000000c428         db  0x58 ; 'X'
000000000000c429         db  0x48 ; 'H'
000000000000c42a         db  0x0e ; '.'
000000000000c42b         db  0x60 ; '`'
000000000000c42c         db  0x55 ; 'U'
000000000000c42d         db  0x0e ; '.'
000000000000c42e         db  0x58 ; 'X'
000000000000c42f         db  0x41 ; 'A'
000000000000c430         db  0x0e ; '.'
000000000000c431         db  0x50 ; 'P'
000000000000c432         db  0x02 ; '.'
000000000000c433         db  0x5c ; '\'
000000000000c434         db  0x0a ; '.'
000000000000c435         db  0x0e ; '.'
000000000000c436         db  0x38 ; '8'
000000000000c437         db  0x43 ; 'C'
000000000000c438         db  0x0e ; '.'
000000000000c439         db  0x30 ; '0'
000000000000c43a         db  0x41 ; 'A'
000000000000c43b         db  0x0e ; '.'
000000000000c43c         db  0x28 ; '('
000000000000c43d         db  0x42 ; 'B'
000000000000c43e         db  0x0e ; '.'
000000000000c43f         db  0x20 ; ' '
000000000000c440         db  0x42 ; 'B'
000000000000c441         db  0x0e ; '.'
000000000000c442         db  0x18 ; '.'
000000000000c443         db  0x42 ; 'B'
000000000000c444         db  0x0e ; '.'
000000000000c445         db  0x10 ; '.'
000000000000c446         db  0x42 ; 'B'
000000000000c447         db  0x0e ; '.'
000000000000c448         db  0x08 ; '.'
000000000000c449         db  0x46 ; 'F'
000000000000c44a         db  0x0b ; '.'
000000000000c44b         db  0x00 ; '.'
000000000000c44c         db  0x00 ; '.'
000000000000c44d         db  0x00 ; '.'
000000000000c44e         db  0x00 ; '.'
000000000000c44f         db  0x00 ; '.'
000000000000c450         dd         0x00000010                                  ; Length of the record
000000000000c454         dd         0x00000254                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c458         db         0xb8, 0x73, 2 dup (0xff)                    ; begin 0x3810
000000000000c45c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3818)
000000000000c460         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c461         align      4
000000000000c464         dd         0x00000010                                  ; Length of the record
000000000000c468         dd         0x00000268                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c46c         db         0xb4, 0x73, 2 dup (0xff)                    ; begin 0x3820
000000000000c470         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3828)
000000000000c474         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c475         align      8
000000000000c478         dd         0x0000002c                                  ; Length of the record
000000000000c47c         dd         0x0000027c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c480         db         0xb0, 0x73, 2 dup (0xff)                    ; begin 0x3830
000000000000c484         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x38d4)
000000000000c488         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c489         db  0x41 ; 'A'
000000000000c48a         db  0x0e ; '.'
000000000000c48b         db  0x10 ; '.'
000000000000c48c         db  0x86 ; '.'
000000000000c48d         db  0x02 ; '.'
000000000000c48e         db  0x41 ; 'A'
000000000000c48f         db  0x0e ; '.'
000000000000c490         db  0x18 ; '.'
000000000000c491         db  0x83 ; '.'
000000000000c492         db  0x03 ; '.'
000000000000c493         db  0x44 ; 'D'
000000000000c494         db  0x0e ; '.'
000000000000c495         db  0x20 ; ' '
000000000000c496         db  0x7a ; 'z'
000000000000c497         db  0x0a ; '.'
000000000000c498         db  0x0e ; '.'
000000000000c499         db  0x18 ; '.'
000000000000c49a         db  0x41 ; 'A'
000000000000c49b         db  0x0e ; '.'
000000000000c49c         db  0x10 ; '.'
000000000000c49d         db  0x41 ; 'A'
000000000000c49e         db  0x0e ; '.'
000000000000c49f         db  0x08 ; '.'
000000000000c4a0         db  0x41 ; 'A'
000000000000c4a1         db  0x0b ; '.'
000000000000c4a2         db  0x00 ; '.'
000000000000c4a3         db  0x00 ; '.'
000000000000c4a4         db  0x00 ; '.'
000000000000c4a5         db  0x00 ; '.'
000000000000c4a6         db  0x00 ; '.'
000000000000c4a7         db  0x00 ; '.'
000000000000c4a8         dd         0x00000014                                  ; Length of the record
000000000000c4ac         dd         0x000002ac                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c4b0         db         0x30, 0x74, 2 dup (0xff)                    ; begin 0x38e0
000000000000c4b4         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x3922)
000000000000c4b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4b9         align      64
000000000000c4c0         dd         0x0000001c                                  ; Length of the record
000000000000c4c4         dd         0x000002c4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c4c8         db         0x68, 0x74, 2 dup (0xff)                    ; begin 0x3930
000000000000c4cc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x39cf)
000000000000c4d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4d1         db  0x44 ; 'D'
000000000000c4d2         db  0x0e ; '.'
000000000000c4d3         db  0x10 ; '.'
000000000000c4d4         db  0x83 ; '.'
000000000000c4d5         db  0x02 ; '.'
000000000000c4d6         db  0x02 ; '.'
000000000000c4d7         db  0x78 ; 'x'
000000000000c4d8         db  0x0a ; '.'
000000000000c4d9         db  0x0e ; '.'
000000000000c4da         db  0x08 ; '.'
000000000000c4db         db  0x41 ; 'A'
000000000000c4dc         db  0x0b ; '.'
000000000000c4dd         db  0x00 ; '.'
000000000000c4de         db  0x00 ; '.'
000000000000c4df         db  0x00 ; '.'
000000000000c4e0         dd         0x00000040                                  ; Length of the record
000000000000c4e4         dd         0x000002e4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c4e8         db         0xe8, 0x74, 2 dup (0xff)                    ; begin 0x39d0
000000000000c4ec         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3ab7)
000000000000c4f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4f1         db  0x41 ; 'A'
000000000000c4f2         db  0x0e ; '.'
000000000000c4f3         db  0x10 ; '.'
000000000000c4f4         db  0x86 ; '.'
000000000000c4f5         db  0x02 ; '.'
000000000000c4f6         db  0x41 ; 'A'
000000000000c4f7         db  0x0e ; '.'
000000000000c4f8         db  0x18 ; '.'
000000000000c4f9         db  0x83 ; '.'
000000000000c4fa         db  0x03 ; '.'
000000000000c4fb         db  0x49 ; 'I'
000000000000c4fc         db  0x0e ; '.'
000000000000c4fd         db  0x20 ; ' '
000000000000c4fe         db  0x6e ; 'n'
000000000000c4ff         db  0x0a ; '.'
000000000000c500         db  0x0e ; '.'
000000000000c501         db  0x18 ; '.'
000000000000c502         db  0x41 ; 'A'
000000000000c503         db  0x0e ; '.'
000000000000c504         db  0x10 ; '.'
000000000000c505         db  0x41 ; 'A'
000000000000c506         db  0x0e ; '.'
000000000000c507         db  0x08 ; '.'
000000000000c508         db  0x45 ; 'E'
000000000000c509         db  0x0b ; '.'
000000000000c50a         db  0x02 ; '.'
000000000000c50b         db  0x4a ; 'J'
000000000000c50c         db  0x0a ; '.'
000000000000c50d         db  0x0e ; '.'
000000000000c50e         db  0x18 ; '.'
000000000000c50f         db  0x41 ; 'A'
000000000000c510         db  0x0e ; '.'
000000000000c511         db  0x10 ; '.'
000000000000c512         db  0x41 ; 'A'
000000000000c513         db  0x0e ; '.'
000000000000c514         db  0x08 ; '.'
000000000000c515         db  0x44 ; 'D'
000000000000c516         db  0x0b ; '.'
000000000000c517         db  0x02 ; '.'
000000000000c518         db  0x54 ; 'T'
000000000000c519         db  0x0e ; '.'
000000000000c51a         db  0x18 ; '.'
000000000000c51b         db  0x41 ; 'A'
000000000000c51c         db  0x0e ; '.'
000000000000c51d         db  0x10 ; '.'
000000000000c51e         db  0x41 ; 'A'
000000000000c51f         db  0x0e ; '.'
000000000000c520         db  0x08 ; '.'
000000000000c521         db  0x00 ; '.'
000000000000c522         db  0x00 ; '.'
000000000000c523         db  0x00 ; '.'
000000000000c524         dd         0x00000074                                  ; Length of the record
000000000000c528         dd         0x00000328                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c52c         db         0x94, 0x75, 2 dup (0xff)                    ; begin 0x3ac0
000000000000c530         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4cf4)
000000000000c534         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c535         db  0x42 ; 'B'
000000000000c536         db  0x0e ; '.'
000000000000c537         db  0x10 ; '.'
000000000000c538         db  0x8f ; '.'
000000000000c539         db  0x02 ; '.'
000000000000c53a         db  0x42 ; 'B'
000000000000c53b         db  0x0e ; '.'
000000000000c53c         db  0x18 ; '.'
000000000000c53d         db  0x8e ; '.'
000000000000c53e         db  0x03 ; '.'
000000000000c53f         db  0x45 ; 'E'
000000000000c540         db  0x0e ; '.'
000000000000c541         db  0x20 ; ' '
000000000000c542         db  0x8d ; '.'
000000000000c543         db  0x04 ; '.'
000000000000c544         db  0x42 ; 'B'
000000000000c545         db  0x0e ; '.'
000000000000c546         db  0x28 ; '('
000000000000c547         db  0x8c ; '.'
000000000000c548         db  0x05 ; '.'
000000000000c549         db  0x44 ; 'D'
000000000000c54a         db  0x0e ; '.'
000000000000c54b         db  0x30 ; '0'
000000000000c54c         db  0x86 ; '.'
000000000000c54d         db  0x06 ; '.'
000000000000c54e         db  0x41 ; 'A'
000000000000c54f         db  0x0e ; '.'
000000000000c550         db  0x38 ; '8'
000000000000c551         db  0x83 ; '.'
000000000000c552         db  0x07 ; '.'
000000000000c553         db  0x53 ; 'S'
000000000000c554         db  0x0e ; '.'
000000000000c555         db  0xf0 ; '.'
000000000000c556         db  0x01 ; '.'
000000000000c557         db  0x03 ; '.'
000000000000c558         db  0x81 ; '.'
000000000000c559         db  0x0b ; '.'
000000000000c55a         db  0x0e ; '.'
000000000000c55b         db  0xf8 ; '.'
000000000000c55c         db  0x01 ; '.'
000000000000c55d         db  0x4a ; 'J'
000000000000c55e         db  0x0e ; '.'
000000000000c55f         db  0x80 ; '.'
000000000000c560         db  0x02 ; '.'
000000000000c561         db  0x44 ; 'D'
000000000000c562         db  0x0e ; '.'
000000000000c563         db  0x88 ; '.'
000000000000c564         db  0x02 ; '.'
000000000000c565         db  0x45 ; 'E'
000000000000c566         db  0x0e ; '.'
000000000000c567         db  0x90 ; '.'
000000000000c568         db  0x02 ; '.'
000000000000c569         db  0x5f ; '_'
000000000000c56a         db  0x0e ; '.'
000000000000c56b         db  0xf0 ; '.'
000000000000c56c         db  0x01 ; '.'
000000000000c56d         db  0x64 ; 'd'
000000000000c56e         db  0x0a ; '.'
000000000000c56f         db  0x0e ; '.'
000000000000c570         db  0x38 ; '8'
000000000000c571         db  0x41 ; 'A'
000000000000c572         db  0x0e ; '.'
000000000000c573         db  0x30 ; '0'
000000000000c574         db  0x41 ; 'A'
000000000000c575         db  0x0e ; '.'
000000000000c576         db  0x28 ; '('
000000000000c577         db  0x42 ; 'B'
000000000000c578         db  0x0e ; '.'
000000000000c579         db  0x20 ; ' '
000000000000c57a         db  0x42 ; 'B'
000000000000c57b         db  0x0e ; '.'
000000000000c57c         db  0x18 ; '.'
000000000000c57d         db  0x42 ; 'B'
000000000000c57e         db  0x0e ; '.'
000000000000c57f         db  0x10 ; '.'
000000000000c580         db  0x42 ; 'B'
000000000000c581         db  0x0e ; '.'
000000000000c582         db  0x08 ; '.'
000000000000c583         db  0x44 ; 'D'
000000000000c584         db  0x0b ; '.'
000000000000c585         db  0x03 ; '.'
000000000000c586         db  0x99 ; '.'
000000000000c587         db  0x05 ; '.'
000000000000c588         db  0x0e ; '.'
000000000000c589         db  0xf8 ; '.'
000000000000c58a         db  0x01 ; '.'
000000000000c58b         db  0x4d ; 'M'
000000000000c58c         db  0x0e ; '.'
000000000000c58d         db  0x80 ; '.'
000000000000c58e         db  0x02 ; '.'
000000000000c58f         db  0x44 ; 'D'
000000000000c590         db  0x0e ; '.'
000000000000c591         db  0x88 ; '.'
000000000000c592         db  0x02 ; '.'
000000000000c593         db  0x47 ; 'G'
000000000000c594         db  0x0e ; '.'
000000000000c595         db  0x90 ; '.'
000000000000c596         db  0x02 ; '.'
000000000000c597         db  0x5b ; '['
000000000000c598         db  0x0e ; '.'
000000000000c599         db  0xf0 ; '.'
000000000000c59a         db  0x01 ; '.'
000000000000c59b         db  0x00 ; '.'
000000000000c59c         dd         0x00000068                                  ; Length of the record
000000000000c5a0         dd         0x000003a0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c5a4         db         0x5c, 0x87, 2 dup (0xff)                    ; begin 0x4d00
000000000000c5a8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4eab)
000000000000c5ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5ad         db  0x42 ; 'B'
000000000000c5ae         db  0x0e ; '.'
000000000000c5af         db  0x10 ; '.'
000000000000c5b0         db  0x8f ; '.'
000000000000c5b1         db  0x02 ; '.'
000000000000c5b2         db  0x42 ; 'B'
000000000000c5b3         db  0x0e ; '.'
000000000000c5b4         db  0x18 ; '.'
000000000000c5b5         db  0x8e ; '.'
000000000000c5b6         db  0x03 ; '.'
000000000000c5b7         db  0x45 ; 'E'
000000000000c5b8         db  0x0e ; '.'
000000000000c5b9         db  0x20 ; ' '
000000000000c5ba         db  0x8d ; '.'
000000000000c5bb         db  0x04 ; '.'
000000000000c5bc         db  0x42 ; 'B'
000000000000c5bd         db  0x0e ; '.'
000000000000c5be         db  0x28 ; '('
000000000000c5bf         db  0x8c ; '.'
000000000000c5c0         db  0x05 ; '.'
000000000000c5c1         db  0x44 ; 'D'
000000000000c5c2         db  0x0e ; '.'
000000000000c5c3         db  0x30 ; '0'
000000000000c5c4         db  0x86 ; '.'
000000000000c5c5         db  0x06 ; '.'
000000000000c5c6         db  0x41 ; 'A'
000000000000c5c7         db  0x0e ; '.'
000000000000c5c8         db  0x38 ; '8'
000000000000c5c9         db  0x83 ; '.'
000000000000c5ca         db  0x07 ; '.'
000000000000c5cb         db  0x47 ; 'G'
000000000000c5cc         db  0x0e ; '.'
000000000000c5cd         db  0x60 ; '`'
000000000000c5ce         db  0x02 ; '.'
000000000000c5cf         db  0x99 ; '.'
000000000000c5d0         db  0x0e ; '.'
000000000000c5d1         db  0x68 ; 'h'
000000000000c5d2         db  0x5f ; '_'
000000000000c5d3         db  0x0e ; '.'
000000000000c5d4         db  0x70 ; 'p'
000000000000c5d5         db  0x46 ; 'F'
000000000000c5d6         db  0x0e ; '.'
000000000000c5d7         db  0x78 ; 'x'
000000000000c5d8         db  0x42 ; 'B'
000000000000c5d9         db  0x0e ; '.'
000000000000c5da         db  0x80 ; '.'
000000000000c5db         db  0x01 ; '.'
000000000000c5dc         db  0x59 ; 'Y'
000000000000c5dd         db  0x0e ; '.'
000000000000c5de         db  0x60 ; '`'
000000000000c5df         db  0x02 ; '.'
000000000000c5e0         db  0x40 ; '@'
000000000000c5e1         db  0x0e ; '.'
000000000000c5e2         db  0x68 ; 'h'
000000000000c5e3         db  0x4b ; 'K'
000000000000c5e4         db  0x0e ; '.'
000000000000c5e5         db  0x70 ; 'p'
000000000000c5e6         db  0x43 ; 'C'
000000000000c5e7         db  0x0e ; '.'
000000000000c5e8         db  0x78 ; 'x'
000000000000c5e9         db  0x45 ; 'E'
000000000000c5ea         db  0x0e ; '.'
000000000000c5eb         db  0x80 ; '.'
000000000000c5ec         db  0x01 ; '.'
000000000000c5ed         db  0x5e ; '^'
000000000000c5ee         db  0x0e ; '.'
000000000000c5ef         db  0x60 ; '`'
000000000000c5f0         db  0x4c ; 'L'
000000000000c5f1         db  0x0a ; '.'
000000000000c5f2         db  0x0e ; '.'
000000000000c5f3         db  0x38 ; '8'
000000000000c5f4         db  0x44 ; 'D'
000000000000c5f5         db  0x0e ; '.'
000000000000c5f6         db  0x30 ; '0'
000000000000c5f7         db  0x41 ; 'A'
000000000000c5f8         db  0x0e ; '.'
000000000000c5f9         db  0x28 ; '('
000000000000c5fa         db  0x42 ; 'B'
000000000000c5fb         db  0x0e ; '.'
000000000000c5fc         db  0x20 ; ' '
000000000000c5fd         db  0x42 ; 'B'
000000000000c5fe         db  0x0e ; '.'
000000000000c5ff         db  0x18 ; '.'
000000000000c600         db  0x42 ; 'B'
000000000000c601         db  0x0e ; '.'
000000000000c602         db  0x10 ; '.'
000000000000c603         db  0x42 ; 'B'
000000000000c604         db  0x0e ; '.'
000000000000c605         db  0x08 ; '.'
000000000000c606         db  0x46 ; 'F'
000000000000c607         db  0x0b ; '.'
000000000000c608         dd         0x00000028                                  ; Length of the record
000000000000c60c         dd         0x0000040c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c610         db         0xa0, 0x88, 2 dup (0xff)                    ; begin 0x4eb0
000000000000c614         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4ee6)
000000000000c618         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c619         db  0x42 ; 'B'
000000000000c61a         db  0x0e ; '.'
000000000000c61b         db  0x10 ; '.'
000000000000c61c         db  0x8c ; '.'
000000000000c61d         db  0x02 ; '.'
000000000000c61e         db  0x41 ; 'A'
000000000000c61f         db  0x0e ; '.'
000000000000c620         db  0x18 ; '.'
000000000000c621         db  0x86 ; '.'
000000000000c622         db  0x03 ; '.'
000000000000c623         db  0x41 ; 'A'
000000000000c624         db  0x0e ; '.'
000000000000c625         db  0x20 ; ' '
000000000000c626         db  0x83 ; '.'
000000000000c627         db  0x04 ; '.'
000000000000c628         db  0x6e ; 'n'
000000000000c629         db  0x0e ; '.'
000000000000c62a         db  0x18 ; '.'
000000000000c62b         db  0x41 ; 'A'
000000000000c62c         db  0x0e ; '.'
000000000000c62d         db  0x10 ; '.'
000000000000c62e         db  0x42 ; 'B'
000000000000c62f         db  0x0e ; '.'
000000000000c630         db  0x08 ; '.'
000000000000c631         db  0x00 ; '.'
000000000000c632         db  0x00 ; '.'
000000000000c633         db  0x00 ; '.'
000000000000c634         dd         0x00000010                                  ; Length of the record
000000000000c638         dd         0x00000438                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c63c         db         0xb4, 0x88, 2 dup (0xff)                    ; begin 0x4ef0
000000000000c640         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4f01)
000000000000c644         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c645         align      8
000000000000c648         dd         0x00000010                                  ; Length of the record
000000000000c64c         dd         0x0000044c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c650         db         0xc0, 0x88, 2 dup (0xff)                    ; begin 0x4f10
000000000000c654         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4f21)
000000000000c658         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c659         align      4
000000000000c65c         dd         0x00000010                                  ; Length of the record
000000000000c660         dd         0x00000460                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c664         db         0xcc, 0x88, 2 dup (0xff)                    ; begin 0x4f30
000000000000c668         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4f65)
000000000000c66c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c66d         align      16
000000000000c670         dd         0x00000010                                  ; Length of the record
000000000000c674         dd         0x00000474                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c678         db         0xf8, 0x88, 2 dup (0xff)                    ; begin 0x4f70
000000000000c67c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4f85)
000000000000c680         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c681         align      4
000000000000c684         dd         0x00000010                                  ; Length of the record
000000000000c688         dd         0x00000488                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c68c         db         0x04, 0x89, 2 dup (0xff)                    ; begin 0x4f90
000000000000c690         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4fc0)
000000000000c694         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c695         db  0x6b ; 'k'
000000000000c696         db  0x0e ; '.'
000000000000c697         db  0x10 ; '.'
000000000000c698         dd         0x00000050                                  ; Length of the record
000000000000c69c         dd         0x0000049c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c6a0         db         0x20, 0x89, 2 dup (0xff)                    ; begin 0x4fc0
000000000000c6a4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5034)
000000000000c6a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6a9         db  0x42 ; 'B'
000000000000c6aa         db  0x0e ; '.'
000000000000c6ab         db  0x10 ; '.'
000000000000c6ac         db  0x8f ; '.'
000000000000c6ad         db  0x02 ; '.'
000000000000c6ae         db  0x42 ; 'B'
000000000000c6af         db  0x0e ; '.'
000000000000c6b0         db  0x18 ; '.'
000000000000c6b1         db  0x8e ; '.'
000000000000c6b2         db  0x03 ; '.'
000000000000c6b3         db  0x49 ; 'I'
000000000000c6b4         db  0x0e ; '.'
000000000000c6b5         db  0x20 ; ' '
000000000000c6b6         db  0x8d ; '.'
000000000000c6b7         db  0x04 ; '.'
000000000000c6b8         db  0x42 ; 'B'
000000000000c6b9         db  0x0e ; '.'
000000000000c6ba         db  0x28 ; '('
000000000000c6bb         db  0x8c ; '.'
000000000000c6bc         db  0x05 ; '.'
000000000000c6bd         db  0x44 ; 'D'
000000000000c6be         db  0x0e ; '.'
000000000000c6bf         db  0x30 ; '0'
000000000000c6c0         db  0x86 ; '.'
000000000000c6c1         db  0x06 ; '.'
000000000000c6c2         db  0x41 ; 'A'
000000000000c6c3         db  0x0e ; '.'
000000000000c6c4         db  0x38 ; '8'
000000000000c6c5         db  0x83 ; '.'
000000000000c6c6         db  0x07 ; '.'
000000000000c6c7         db  0x4d ; 'M'
000000000000c6c8         db  0x0e ; '.'
000000000000c6c9         db  0x50 ; 'P'
000000000000c6ca         db  0x5f ; '_'
000000000000c6cb         db  0x0e ; '.'
000000000000c6cc         db  0x58 ; 'X'
000000000000c6cd         db  0x47 ; 'G'
000000000000c6ce         db  0x0e ; '.'
000000000000c6cf         db  0x60 ; '`'
000000000000c6d0         db  0x46 ; 'F'
000000000000c6d1         db  0x0e ; '.'
000000000000c6d2         db  0x68 ; 'h'
000000000000c6d3         db  0x44 ; 'D'
000000000000c6d4         db  0x0e ; '.'
000000000000c6d5         db  0x70 ; 'p'
000000000000c6d6         db  0x58 ; 'X'
000000000000c6d7         db  0x0e ; '.'
000000000000c6d8         db  0x38 ; '8'
000000000000c6d9         db  0x41 ; 'A'
000000000000c6da         db  0x0e ; '.'
000000000000c6db         db  0x30 ; '0'
000000000000c6dc         db  0x41 ; 'A'
000000000000c6dd         db  0x0e ; '.'
000000000000c6de         db  0x28 ; '('
000000000000c6df         db  0x42 ; 'B'
000000000000c6e0         db  0x0e ; '.'
000000000000c6e1         db  0x20 ; ' '
000000000000c6e2         db  0x42 ; 'B'
000000000000c6e3         db  0x0e ; '.'
000000000000c6e4         db  0x18 ; '.'
000000000000c6e5         db  0x42 ; 'B'
000000000000c6e6         db  0x0e ; '.'
000000000000c6e7         db  0x10 ; '.'
000000000000c6e8         db  0x42 ; 'B'
000000000000c6e9         db  0x0e ; '.'
000000000000c6ea         db  0x08 ; '.'
000000000000c6eb         db  0x00 ; '.'
000000000000c6ec         dd         0x00000068                                  ; Length of the record
000000000000c6f0         dd         0x000004f0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c6f4         db         0x4c, 0x89, 2 dup (0xff)                    ; begin 0x5040
000000000000c6f8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5123)
000000000000c6fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6fd         db  0x42 ; 'B'
000000000000c6fe         db  0x0e ; '.'
000000000000c6ff         db  0x10 ; '.'
000000000000c700         db  0x8f ; '.'
000000000000c701         db  0x02 ; '.'
000000000000c702         db  0x42 ; 'B'
000000000000c703         db  0x0e ; '.'
000000000000c704         db  0x18 ; '.'
000000000000c705         db  0x8e ; '.'
000000000000c706         db  0x03 ; '.'
000000000000c707         db  0x49 ; 'I'
000000000000c708         db  0x0e ; '.'
000000000000c709         db  0x20 ; ' '
000000000000c70a         db  0x8d ; '.'
000000000000c70b         db  0x04 ; '.'
000000000000c70c         db  0x42 ; 'B'
000000000000c70d         db  0x0e ; '.'
000000000000c70e         db  0x28 ; '('
000000000000c70f         db  0x8c ; '.'
000000000000c710         db  0x05 ; '.'
000000000000c711         db  0x44 ; 'D'
000000000000c712         db  0x0e ; '.'
000000000000c713         db  0x30 ; '0'
000000000000c714         db  0x86 ; '.'
000000000000c715         db  0x06 ; '.'
000000000000c716         db  0x41 ; 'A'
000000000000c717         db  0x0e ; '.'
000000000000c718         db  0x38 ; '8'
000000000000c719         db  0x83 ; '.'
000000000000c71a         db  0x07 ; '.'
000000000000c71b         db  0x4d ; 'M'
000000000000c71c         db  0x0e ; '.'
000000000000c71d         db  0x70 ; 'p'
000000000000c71e         db  0x65 ; 'e'
000000000000c71f         db  0x0e ; '.'
000000000000c720         db  0x78 ; 'x'
000000000000c721         db  0x4d ; 'M'
000000000000c722         db  0x0e ; '.'
000000000000c723         db  0x80 ; '.'
000000000000c724         db  0x01 ; '.'
000000000000c725         db  0x46 ; 'F'
000000000000c726         db  0x0e ; '.'
000000000000c727         db  0x88 ; '.'
000000000000c728         db  0x01 ; '.'
000000000000c729         db  0x42 ; 'B'
000000000000c72a         db  0x0e ; '.'
000000000000c72b         db  0x90 ; '.'
000000000000c72c         db  0x01 ; '.'
000000000000c72d         db  0x5e ; '^'
000000000000c72e         db  0x0e ; '.'
000000000000c72f         db  0x70 ; 'p'
000000000000c730         db  0x56 ; 'V'
000000000000c731         db  0x0e ; '.'
000000000000c732         db  0x78 ; 'x'
000000000000c733         db  0x43 ; 'C'
000000000000c734         db  0x0e ; '.'
000000000000c735         db  0x80 ; '.'
000000000000c736         db  0x01 ; '.'
000000000000c737         db  0x43 ; 'C'
000000000000c738         db  0x0e ; '.'
000000000000c739         db  0x88 ; '.'
000000000000c73a         db  0x01 ; '.'
000000000000c73b         db  0x56 ; 'V'
000000000000c73c         db  0x0e ; '.'
000000000000c73d         db  0x90 ; '.'
000000000000c73e         db  0x01 ; '.'
000000000000c73f         db  0x52 ; 'R'
000000000000c740         db  0x0e ; '.'
000000000000c741         db  0x70 ; 'p'
000000000000c742         db  0x5b ; '['
000000000000c743         db  0x0e ; '.'
000000000000c744         db  0x38 ; '8'
000000000000c745         db  0x41 ; 'A'
000000000000c746         db  0x0e ; '.'
000000000000c747         db  0x30 ; '0'
000000000000c748         db  0x41 ; 'A'
000000000000c749         db  0x0e ; '.'
000000000000c74a         db  0x28 ; '('
000000000000c74b         db  0x42 ; 'B'
000000000000c74c         db  0x0e ; '.'
000000000000c74d         db  0x20 ; ' '
000000000000c74e         db  0x42 ; 'B'
000000000000c74f         db  0x0e ; '.'
000000000000c750         db  0x18 ; '.'
000000000000c751         db  0x42 ; 'B'
000000000000c752         db  0x0e ; '.'
000000000000c753         db  0x10 ; '.'
000000000000c754         db  0x42 ; 'B'
000000000000c755         db  0x0e ; '.'
000000000000c756         db  0x08 ; '.'
000000000000c757         db  0x00 ; '.'
000000000000c758         dd         0x00000010                                  ; Length of the record
000000000000c75c         dd         0x0000055c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c760         db         0xd0, 0x89, 2 dup (0xff)                    ; begin 0x5130
000000000000c764         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x513a)
000000000000c768         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c769         align      4
000000000000c76c         dd         0x00000028                                  ; Length of the record
000000000000c770         dd         0x00000570                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c774         db         0xcc, 0x89, 2 dup (0xff)                    ; begin 0x5140
000000000000c778         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x51d3)
000000000000c77c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c77d         db  0x48 ; 'H'
000000000000c77e         db  0x0e ; '.'
000000000000c77f         db  0x10 ; '.'
000000000000c780         db  0x8c ; '.'
000000000000c781         db  0x02 ; '.'
000000000000c782         db  0x48 ; 'H'
000000000000c783         db  0x0e ; '.'
000000000000c784         db  0x18 ; '.'
000000000000c785         db  0x86 ; '.'
000000000000c786         db  0x03 ; '.'
000000000000c787         db  0x41 ; 'A'
000000000000c788         db  0x0e ; '.'
000000000000c789         db  0x20 ; ' '
000000000000c78a         db  0x83 ; '.'
000000000000c78b         db  0x04 ; '.'
000000000000c78c         db  0x02 ; '.'
000000000000c78d         db  0x74 ; 't'
000000000000c78e         db  0x0e ; '.'
000000000000c78f         db  0x18 ; '.'
000000000000c790         db  0x4b ; 'K'
000000000000c791         db  0x0e ; '.'
000000000000c792         db  0x10 ; '.'
000000000000c793         db  0x42 ; 'B'
000000000000c794         db  0x0e ; '.'
000000000000c795         db  0x08 ; '.'
000000000000c796         db  0x00 ; '.'
000000000000c797         db  0x00 ; '.'
000000000000c798         dd         0x00000010                                  ; Length of the record
000000000000c79c         dd         0x0000059c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c7a0         db         0x40, 0x8a, 2 dup (0xff)                    ; begin 0x51e0
000000000000c7a4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x51f3)
000000000000c7a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7a9         align      4
000000000000c7ac         dd         0x00000010                                  ; Length of the record
000000000000c7b0         dd         0x000005b0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c7b4         db         0x4c, 0x8a, 2 dup (0xff)                    ; begin 0x5200
000000000000c7b8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x520c)
000000000000c7bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7bd         align      64
000000000000c7c0         dd         0x00000010                                  ; Length of the record
000000000000c7c4         dd         0x000005c4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c7c8         db         0x48, 0x8a, 2 dup (0xff)                    ; begin 0x5210
000000000000c7cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5228)
000000000000c7d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7d1         align      4
000000000000c7d4         dd         0x00000010                                  ; Length of the record
000000000000c7d8         dd         0x000005d8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c7dc         db         0x54, 0x8a, 2 dup (0xff)                    ; begin 0x5230
000000000000c7e0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5244)
000000000000c7e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7e5         align      8
000000000000c7e8         dd         0x00000018                                  ; Length of the record
000000000000c7ec         dd         0x000005ec                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c7f0         db         0x60, 0x8a, 2 dup (0xff)                    ; begin 0x5250
000000000000c7f4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x52de)
000000000000c7f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7f9         db  0x44 ; 'D'
000000000000c7fa         db  0x0e ; '.'
000000000000c7fb         db  0x50 ; 'P'
000000000000c7fc         db  0x02 ; '.'
000000000000c7fd         db  0x7f ; '.'
000000000000c7fe         db  0x0a ; '.'
000000000000c7ff         db  0x0e ; '.'
000000000000c800         db  0x08 ; '.'
000000000000c801         db  0x41 ; 'A'
000000000000c802         db  0x0b ; '.'
000000000000c803         db  0x00 ; '.'
000000000000c804         dd         0x00000018                                  ; Length of the record
000000000000c808         dd         0x00000608                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c80c         db         0xd4, 0x8a, 2 dup (0xff)                    ; begin 0x52e0
000000000000c810         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x536a)
000000000000c814         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c815         db  0x44 ; 'D'
000000000000c816         db  0x0e ; '.'
000000000000c817         db  0x50 ; 'P'
000000000000c818         db  0x02 ; '.'
000000000000c819         db  0x7b ; '{'
000000000000c81a         db  0x0a ; '.'
000000000000c81b         db  0x0e ; '.'
000000000000c81c         db  0x08 ; '.'
000000000000c81d         db  0x41 ; 'A'
000000000000c81e         db  0x0b ; '.'
000000000000c81f         db  0x00 ; '.'
000000000000c820         dd         0x00000010                                  ; Length of the record
000000000000c824         dd         0x00000624                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c828         db         0x48, 0x8b, 2 dup (0xff)                    ; begin 0x5370
000000000000c82c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x537c)
000000000000c830         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c831         align      4
000000000000c834         dd         0x00000010                                  ; Length of the record
000000000000c838         dd         0x00000638                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c83c         db         0x44, 0x8b, 2 dup (0xff)                    ; begin 0x5380
000000000000c840         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x538f)
000000000000c844         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c845         align      8
000000000000c848         dd         0x00000018                                  ; Length of the record
000000000000c84c         dd         0x0000064c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c850         db         0x40, 0x8b, 2 dup (0xff)                    ; begin 0x5390
000000000000c854         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5428)
000000000000c858         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c859         db  0x44 ; 'D'
000000000000c85a         db  0x0e ; '.'
000000000000c85b         db  0x50 ; 'P'
000000000000c85c         db  0x02 ; '.'
000000000000c85d         db  0x8e ; '.'
000000000000c85e         db  0x0a ; '.'
000000000000c85f         db  0x0e ; '.'
000000000000c860         db  0x08 ; '.'
000000000000c861         db  0x41 ; 'A'
000000000000c862         db  0x0b ; '.'
000000000000c863         db  0x00 ; '.'
000000000000c864         dd         0x00000010                                  ; Length of the record
000000000000c868         dd         0x00000668                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c86c         db         0xc4, 0x8b, 2 dup (0xff)                    ; begin 0x5430
000000000000c870         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5440)
000000000000c874         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c875         align      8
000000000000c878         dd         0x00000010                                  ; Length of the record
000000000000c87c         dd         0x0000067c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c880         db         0xc0, 0x8b, 2 dup (0xff)                    ; begin 0x5440
000000000000c884         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5451)
000000000000c888         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c889         align      4
000000000000c88c         dd         0x00000010                                  ; Length of the record
000000000000c890         dd         0x00000690                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c894         db         0xcc, 0x8b, 2 dup (0xff)                    ; begin 0x5460
000000000000c898         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x546a)
000000000000c89c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c89d         align      32
000000000000c8a0         dd         0x00000018                                  ; Length of the record
000000000000c8a4         dd         0x000006a4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c8a8         db         0xc8, 0x8b, 2 dup (0xff)                    ; begin 0x5470
000000000000c8ac         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x54fe)
000000000000c8b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8b1         db  0x44 ; 'D'
000000000000c8b2         db  0x0e ; '.'
000000000000c8b3         db  0x50 ; 'P'
000000000000c8b4         db  0x02 ; '.'
000000000000c8b5         db  0x7f ; '.'
000000000000c8b6         db  0x0a ; '.'
000000000000c8b7         db  0x0e ; '.'
000000000000c8b8         db  0x08 ; '.'
000000000000c8b9         db  0x41 ; 'A'
000000000000c8ba         db  0x0b ; '.'
000000000000c8bb         db  0x00 ; '.'
000000000000c8bc         dd         0x00000018                                  ; Length of the record
000000000000c8c0         dd         0x000006c0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c8c4         db         0x3c, 0x8c, 2 dup (0xff)                    ; begin 0x5500
000000000000c8c8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5591)
000000000000c8cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8cd         db  0x44 ; 'D'
000000000000c8ce         db  0x0e ; '.'
000000000000c8cf         db  0x50 ; 'P'
000000000000c8d0         db  0x02 ; '.'
000000000000c8d1         db  0x82 ; '.'
000000000000c8d2         db  0x0a ; '.'
000000000000c8d3         db  0x0e ; '.'
000000000000c8d4         db  0x08 ; '.'
000000000000c8d5         db  0x41 ; 'A'
000000000000c8d6         db  0x0b ; '.'
000000000000c8d7         db  0x00 ; '.'
000000000000c8d8         dd         0x00000010                                  ; Length of the record
000000000000c8dc         dd         0x000006dc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c8e0         db         0xc0, 0x8c, 2 dup (0xff)                    ; begin 0x55a0
000000000000c8e4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55ac)
000000000000c8e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8e9         align      4
000000000000c8ec         dd         0x00000010                                  ; Length of the record
000000000000c8f0         dd         0x000006f0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c8f4         db         0xbc, 0x8c, 2 dup (0xff)                    ; begin 0x55b0
000000000000c8f8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x55c7)
000000000000c8fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8fd         align      256
000000000000c900         dd         0x00000010                                  ; Length of the record
000000000000c904         dd         0x00000704                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c908         db         0xc8, 0x8c, 2 dup (0xff)                    ; begin 0x55d0
000000000000c90c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x55e3)
000000000000c910         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c911         align      4
000000000000c914         dd         0x00000010                                  ; Length of the record
000000000000c918         dd         0x00000718                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c91c         db         0xd4, 0x8c, 2 dup (0xff)                    ; begin 0x55f0
000000000000c920         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55fc)
000000000000c924         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c925         align      8
000000000000c928         dd         0x00000010                                  ; Length of the record
000000000000c92c         dd         0x0000072c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c930         db         0xd0, 0x8c, 2 dup (0xff)                    ; begin 0x5600
000000000000c934         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5614)
000000000000c938         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c939         align      4
000000000000c93c         dd         0x00000010                                  ; Length of the record
000000000000c940         dd         0x00000740                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c944         db         0xdc, 0x8c, 2 dup (0xff)                    ; begin 0x5620
000000000000c948         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5633)
000000000000c94c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c94d         align      16
000000000000c950         dd         0x00000014                                  ; Length of the record
000000000000c954         dd         0x00000754                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c958         db         0xe8, 0x8c, 2 dup (0xff)                    ; begin 0x5640
000000000000c95c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5658)
000000000000c960         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c961         align      8
000000000000c968         dd         0x00000024                                  ; Length of the record
000000000000c96c         dd         0x0000076c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c970         db         0xf0, 0x8c, 2 dup (0xff)                    ; begin 0x5660
000000000000c974         db         0x71, 3 dup (0x00)                          ; length 0x71 (end at 0x56d1)
000000000000c978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c979         db  0x41 ; 'A'
000000000000c97a         db  0x0e ; '.'
000000000000c97b         db  0x10 ; '.'
000000000000c97c         db  0x83 ; '.'
000000000000c97d         db  0x02 ; '.'
000000000000c97e         db  0x56 ; 'V'
000000000000c97f         db  0x0e ; '.'
000000000000c980         db  0xb0 ; '.'
000000000000c981         db  0x01 ; '.'
000000000000c982         db  0x02 ; '.'
000000000000c983         db  0x4c ; 'L'
000000000000c984         db  0x0a ; '.'
000000000000c985         db  0x0e ; '.'
000000000000c986         db  0x10 ; '.'
000000000000c987         db  0x41 ; 'A'
000000000000c988         db  0x0e ; '.'
000000000000c989         db  0x08 ; '.'
000000000000c98a         db  0x44 ; 'D'
000000000000c98b         db  0x0b ; '.'
000000000000c98c         db  0x00 ; '.'
000000000000c98d         db  0x00 ; '.'
000000000000c98e         db  0x00 ; '.'
000000000000c98f         db  0x00 ; '.'
000000000000c990         dd         0x00000110                                  ; Length of the record
000000000000c994         dd         0x00000794                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000c998         db         0x48, 0x8d, 2 dup (0xff)                    ; begin 0x56e0
000000000000c99c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5af7)
000000000000c9a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9a1         db  0x42 ; 'B'
000000000000c9a2         db  0x0e ; '.'
000000000000c9a3         db  0x10 ; '.'
000000000000c9a4         db  0x8f ; '.'
000000000000c9a5         db  0x02 ; '.'
000000000000c9a6         db  0x42 ; 'B'
000000000000c9a7         db  0x0e ; '.'
000000000000c9a8         db  0x18 ; '.'
000000000000c9a9         db  0x8e ; '.'
000000000000c9aa         db  0x03 ; '.'
000000000000c9ab         db  0x42 ; 'B'
000000000000c9ac         db  0x0e ; '.'
000000000000c9ad         db  0x20 ; ' '
000000000000c9ae         db  0x8d ; '.'
000000000000c9af         db  0x04 ; '.'
000000000000c9b0         db  0x42 ; 'B'
000000000000c9b1         db  0x0e ; '.'
000000000000c9b2         db  0x28 ; '('
000000000000c9b3         db  0x8c ; '.'
000000000000c9b4         db  0x05 ; '.'
000000000000c9b5         db  0x44 ; 'D'
000000000000c9b6         db  0x0e ; '.'
000000000000c9b7         db  0x30 ; '0'
000000000000c9b8         db  0x86 ; '.'
000000000000c9b9         db  0x06 ; '.'
000000000000c9ba         db  0x41 ; 'A'
000000000000c9bb         db  0x0e ; '.'
000000000000c9bc         db  0x38 ; '8'
000000000000c9bd         db  0x83 ; '.'
000000000000c9be         db  0x07 ; '.'
000000000000c9bf         db  0x4a ; 'J'
000000000000c9c0         db  0x0e ; '.'
000000000000c9c1         db  0x60 ; '`'
000000000000c9c2         db  0x02 ; '.'
000000000000c9c3         db  0xdd ; '.'
000000000000c9c4         db  0x0e ; '.'
000000000000c9c5         db  0x68 ; 'h'
000000000000c9c6         db  0x57 ; 'W'
000000000000c9c7         db  0x0e ; '.'
000000000000c9c8         db  0x70 ; 'p'
000000000000c9c9         db  0x42 ; 'B'
000000000000c9ca         db  0x0e ; '.'
000000000000c9cb         db  0x78 ; 'x'
000000000000c9cc         db  0x42 ; 'B'
000000000000c9cd         db  0x0e ; '.'
000000000000c9ce         db  0x80 ; '.'
000000000000c9cf         db  0x01 ; '.'
000000000000c9d0         db  0x42 ; 'B'
000000000000c9d1         db  0x0e ; '.'
000000000000c9d2         db  0x88 ; '.'
000000000000c9d3         db  0x01 ; '.'
000000000000c9d4         db  0x42 ; 'B'
000000000000c9d5         db  0x0e ; '.'
000000000000c9d6         db  0x90 ; '.'
000000000000c9d7         db  0x01 ; '.'
000000000000c9d8         db  0x53 ; 'S'
000000000000c9d9         db  0x0e ; '.'
000000000000c9da         db  0x60 ; '`'
000000000000c9db         db  0x44 ; 'D'
000000000000c9dc         db  0x0a ; '.'
000000000000c9dd         db  0x0e ; '.'
000000000000c9de         db  0x38 ; '8'
000000000000c9df         db  0x41 ; 'A'
000000000000c9e0         db  0x0e ; '.'
000000000000c9e1         db  0x30 ; '0'
000000000000c9e2         db  0x41 ; 'A'
000000000000c9e3         db  0x0e ; '.'
000000000000c9e4         db  0x28 ; '('
000000000000c9e5         db  0x42 ; 'B'
000000000000c9e6         db  0x0e ; '.'
000000000000c9e7         db  0x20 ; ' '
000000000000c9e8         db  0x42 ; 'B'
000000000000c9e9         db  0x0e ; '.'
000000000000c9ea         db  0x18 ; '.'
000000000000c9eb         db  0x42 ; 'B'
000000000000c9ec         db  0x0e ; '.'
000000000000c9ed         db  0x10 ; '.'
000000000000c9ee         db  0x42 ; 'B'
000000000000c9ef         db  0x0e ; '.'
000000000000c9f0         db  0x08 ; '.'
000000000000c9f1         db  0x44 ; 'D'
000000000000c9f2         db  0x0b ; '.'
000000000000c9f3         db  0x02 ; '.'
000000000000c9f4         db  0x78 ; 'x'
000000000000c9f5         db  0x0a ; '.'
000000000000c9f6         db  0x0e ; '.'
000000000000c9f7         db  0x68 ; 'h'
000000000000c9f8         db  0x48 ; 'H'
000000000000c9f9         db  0x0b ; '.'
000000000000c9fa         db  0x5a ; 'Z'
000000000000c9fb         db  0x0a ; '.'
000000000000c9fc         db  0x0e ; '.'
000000000000c9fd         db  0x38 ; '8'
000000000000c9fe         db  0x47 ; 'G'
000000000000c9ff         db  0x0e ; '.'
000000000000ca00         db  0x30 ; '0'
000000000000ca01         db  0x41 ; 'A'
000000000000ca02         db  0x0e ; '.'
000000000000ca03         db  0x28 ; '('
000000000000ca04         db  0x42 ; 'B'
000000000000ca05         db  0x0e ; '.'
000000000000ca06         db  0x20 ; ' '
000000000000ca07         db  0x42 ; 'B'
000000000000ca08         db  0x0e ; '.'
000000000000ca09         db  0x18 ; '.'
000000000000ca0a         db  0x42 ; 'B'
000000000000ca0b         db  0x0e ; '.'
000000000000ca0c         db  0x10 ; '.'
000000000000ca0d         db  0x42 ; 'B'
000000000000ca0e         db  0x0e ; '.'
000000000000ca0f         db  0x08 ; '.'
000000000000ca10         db  0x56 ; 'V'
000000000000ca11         db  0x0b ; '.'
000000000000ca12         db  0x5e ; '^'
000000000000ca13         db  0x0a ; '.'
000000000000ca14         db  0x0e ; '.'
000000000000ca15         db  0x38 ; '8'
000000000000ca16         db  0x52 ; 'R'
000000000000ca17         db  0x0e ; '.'
000000000000ca18         db  0x30 ; '0'
000000000000ca19         db  0x41 ; 'A'
000000000000ca1a         db  0x0e ; '.'
000000000000ca1b         db  0x28 ; '('
000000000000ca1c         db  0x42 ; 'B'
000000000000ca1d         db  0x0e ; '.'
000000000000ca1e         db  0x20 ; ' '
000000000000ca1f         db  0x42 ; 'B'
000000000000ca20         db  0x0e ; '.'
000000000000ca21         db  0x18 ; '.'
000000000000ca22         db  0x42 ; 'B'
000000000000ca23         db  0x0e ; '.'
000000000000ca24         db  0x10 ; '.'
000000000000ca25         db  0x42 ; 'B'
000000000000ca26         db  0x0e ; '.'
000000000000ca27         db  0x08 ; '.'
000000000000ca28         db  0x4f ; 'O'
000000000000ca29         db  0x0b ; '.'
000000000000ca2a         db  0x62 ; 'b'
000000000000ca2b         db  0x0a ; '.'
000000000000ca2c         db  0x0e ; '.'
000000000000ca2d         db  0x38 ; '8'
000000000000ca2e         db  0x50 ; 'P'
000000000000ca2f         db  0x0e ; '.'
000000000000ca30         db  0x30 ; '0'
000000000000ca31         db  0x41 ; 'A'
000000000000ca32         db  0x0e ; '.'
000000000000ca33         db  0x28 ; '('
000000000000ca34         db  0x42 ; 'B'
000000000000ca35         db  0x0e ; '.'
000000000000ca36         db  0x20 ; ' '
000000000000ca37         db  0x42 ; 'B'
000000000000ca38         db  0x0e ; '.'
000000000000ca39         db  0x18 ; '.'
000000000000ca3a         db  0x42 ; 'B'
000000000000ca3b         db  0x0e ; '.'
000000000000ca3c         db  0x10 ; '.'
000000000000ca3d         db  0x42 ; 'B'
000000000000ca3e         db  0x0e ; '.'
000000000000ca3f         db  0x08 ; '.'
000000000000ca40         db  0x55 ; 'U'
000000000000ca41         db  0x0b ; '.'
000000000000ca42         db  0x66 ; 'f'
000000000000ca43         db  0x0e ; '.'
000000000000ca44         db  0x68 ; 'h'
000000000000ca45         db  0x42 ; 'B'
000000000000ca46         db  0x0e ; '.'
000000000000ca47         db  0x70 ; 'p'
000000000000ca48         db  0x5c ; '\'
000000000000ca49         db  0x0e ; '.'
000000000000ca4a         db  0x68 ; 'h'
000000000000ca4b         db  0x41 ; 'A'
000000000000ca4c         db  0x0e ; '.'
000000000000ca4d         db  0x60 ; '`'
000000000000ca4e         db  0x44 ; 'D'
000000000000ca4f         db  0x0a ; '.'
000000000000ca50         db  0x0e ; '.'
000000000000ca51         db  0x38 ; '8'
000000000000ca52         db  0x41 ; 'A'
000000000000ca53         db  0x0e ; '.'
000000000000ca54         db  0x30 ; '0'
000000000000ca55         db  0x41 ; 'A'
000000000000ca56         db  0x0e ; '.'
000000000000ca57         db  0x28 ; '('
000000000000ca58         db  0x42 ; 'B'
000000000000ca59         db  0x0e ; '.'
000000000000ca5a         db  0x20 ; ' '
000000000000ca5b         db  0x42 ; 'B'
000000000000ca5c         db  0x0e ; '.'
000000000000ca5d         db  0x18 ; '.'
000000000000ca5e         db  0x42 ; 'B'
000000000000ca5f         db  0x0e ; '.'
000000000000ca60         db  0x10 ; '.'
000000000000ca61         db  0x42 ; 'B'
000000000000ca62         db  0x0e ; '.'
000000000000ca63         db  0x08 ; '.'
000000000000ca64         db  0x45 ; 'E'
000000000000ca65         db  0x0b ; '.'
000000000000ca66         db  0x68 ; 'h'
000000000000ca67         db  0x0a ; '.'
000000000000ca68         db  0x0e ; '.'
000000000000ca69         db  0x68 ; 'h'
000000000000ca6a         db  0x48 ; 'H'
000000000000ca6b         db  0x0b ; '.'
000000000000ca6c         db  0x72 ; 'r'
000000000000ca6d         db  0x0e ; '.'
000000000000ca6e         db  0x68 ; 'h'
000000000000ca6f         db  0x45 ; 'E'
000000000000ca70         db  0x0e ; '.'
000000000000ca71         db  0x70 ; 'p'
000000000000ca72         db  0x42 ; 'B'
000000000000ca73         db  0x0e ; '.'
000000000000ca74         db  0x78 ; 'x'
000000000000ca75         db  0x42 ; 'B'
000000000000ca76         db  0x0e ; '.'
000000000000ca77         db  0x80 ; '.'
000000000000ca78         db  0x01 ; '.'
000000000000ca79         db  0x5e ; '^'
000000000000ca7a         db  0x0e ; '.'
000000000000ca7b         db  0x60 ; '`'
000000000000ca7c         db  0x44 ; 'D'
000000000000ca7d         db  0x0a ; '.'
000000000000ca7e         db  0x0e ; '.'
000000000000ca7f         db  0x38 ; '8'
000000000000ca80         db  0x41 ; 'A'
000000000000ca81         db  0x0e ; '.'
000000000000ca82         db  0x30 ; '0'
000000000000ca83         db  0x41 ; 'A'
000000000000ca84         db  0x0e ; '.'
000000000000ca85         db  0x28 ; '('
000000000000ca86         db  0x42 ; 'B'
000000000000ca87         db  0x0e ; '.'
000000000000ca88         db  0x20 ; ' '
000000000000ca89         db  0x42 ; 'B'
000000000000ca8a         db  0x0e ; '.'
000000000000ca8b         db  0x18 ; '.'
000000000000ca8c         db  0x42 ; 'B'
000000000000ca8d         db  0x0e ; '.'
000000000000ca8e         db  0x10 ; '.'
000000000000ca8f         db  0x42 ; 'B'
000000000000ca90         db  0x0e ; '.'
000000000000ca91         db  0x08 ; '.'
000000000000ca92         db  0x41 ; 'A'
000000000000ca93         db  0x0b ; '.'
000000000000ca94         db  0x79 ; 'y'
000000000000ca95         db  0x0a ; '.'
000000000000ca96         db  0x0e ; '.'
000000000000ca97         db  0x68 ; 'h'
000000000000ca98         db  0x42 ; 'B'
000000000000ca99         db  0x0e ; '.'
000000000000ca9a         db  0x70 ; 'p'
000000000000ca9b         db  0x42 ; 'B'
000000000000ca9c         db  0x0e ; '.'
000000000000ca9d         db  0x78 ; 'x'
000000000000ca9e         db  0x42 ; 'B'
000000000000ca9f         db  0x0e ; '.'
000000000000caa0         db  0x80 ; '.'
000000000000caa1         db  0x01 ; '.'
000000000000caa2         db  0x51 ; 'Q'
000000000000caa3         db  0x0b ; '.'
000000000000caa4         dd         0x00000010                                  ; Length of the record
000000000000caa8         dd         0x000008a8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000caac         db         0x54, 0x90, 2 dup (0xff)                    ; begin 0x5b00
000000000000cab0         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5b20)
000000000000cab4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cab5         align      8
000000000000cab8         dd         0x00000018                                  ; Length of the record
000000000000cabc         dd         0x000008bc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cac0         db         0x60, 0x90, 2 dup (0xff)                    ; begin 0x5b20
000000000000cac4         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5b98)
000000000000cac8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cac9         db  0x44 ; 'D'
000000000000caca         db  0x0e ; '.'
000000000000cacb         db  0x70 ; 'p'
000000000000cacc         db  0x02 ; '.'
000000000000cacd         db  0x60 ; '`'
000000000000cace         db  0x0a ; '.'
000000000000cacf         db  0x0e ; '.'
000000000000cad0         db  0x08 ; '.'
000000000000cad1         db  0x41 ; 'A'
000000000000cad2         db  0x0b ; '.'
000000000000cad3         db  0x00 ; '.'
000000000000cad4         dd         0x00000028                                  ; Length of the record
000000000000cad8         dd         0x000008d8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cadc         db         0xc4, 0x90, 2 dup (0xff)                    ; begin 0x5ba0
000000000000cae0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5c75)
000000000000cae4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cae5         db  0x41 ; 'A'
000000000000cae6         db  0x0e ; '.'
000000000000cae7         db  0x10 ; '.'
000000000000cae8         db  0x86 ; '.'
000000000000cae9         db  0x02 ; '.'
000000000000caea         db  0x41 ; 'A'
000000000000caeb         db  0x0e ; '.'
000000000000caec         db  0x18 ; '.'
000000000000caed         db  0x83 ; '.'
000000000000caee         db  0x03 ; '.'
000000000000caef         db  0x50 ; 'P'
000000000000caf0         db  0x0e ; '.'
000000000000caf1         db  0xd0 ; '.'
000000000000caf2         db  0x01 ; '.'
000000000000caf3         db  0x02 ; '.'
000000000000caf4         db  0xab ; '.'
000000000000caf5         db  0x0a ; '.'
000000000000caf6         db  0x0e ; '.'
000000000000caf7         db  0x18 ; '.'
000000000000caf8         db  0x41 ; 'A'
000000000000caf9         db  0x0e ; '.'
000000000000cafa         db  0x10 ; '.'
000000000000cafb         db  0x41 ; 'A'
000000000000cafc         db  0x0e ; '.'
000000000000cafd         db  0x08 ; '.'
000000000000cafe         db  0x41 ; 'A'
000000000000caff         db  0x0b ; '.'
000000000000cb00         dd         0x0000001c                                  ; Length of the record
000000000000cb04         dd         0x00000904                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb08         db         0x78, 0x91, 2 dup (0xff)                    ; begin 0x5c80
000000000000cb0c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5d00)
000000000000cb10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb11         db  0x41 ; 'A'
000000000000cb12         db  0x0e ; '.'
000000000000cb13         db  0x10 ; '.'
000000000000cb14         db  0x83 ; '.'
000000000000cb15         db  0x02 ; '.'
000000000000cb16         db  0x02 ; '.'
000000000000cb17         db  0x7a ; 'z'
000000000000cb18         db  0x0e ; '.'
000000000000cb19         db  0x08 ; '.'
000000000000cb1a         db  0x00 ; '.'
000000000000cb1b         db  0x00 ; '.'
000000000000cb1c         db  0x00 ; '.'
000000000000cb1d         db  0x00 ; '.'
000000000000cb1e         db  0x00 ; '.'
000000000000cb1f         db  0x00 ; '.'
000000000000cb20         dd         0x00000018                                  ; Length of the record
000000000000cb24         dd         0x00000924                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb28         db         0xd8, 0x91, 2 dup (0xff)                    ; begin 0x5d00
000000000000cb2c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5d1a)
000000000000cb30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb31         db  0x41 ; 'A'
000000000000cb32         db  0x0e ; '.'
000000000000cb33         db  0x10 ; '.'
000000000000cb34         db  0x83 ; '.'
000000000000cb35         db  0x02 ; '.'
000000000000cb36         db  0x53 ; 'S'
000000000000cb37         db  0x0a ; '.'
000000000000cb38         db  0x0e ; '.'
000000000000cb39         db  0x08 ; '.'
000000000000cb3a         db  0x41 ; 'A'
000000000000cb3b         db  0x0b ; '.'
000000000000cb3c         dd         0x00000010                                  ; Length of the record
000000000000cb40         dd         0x00000940                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb44         db         0xdc, 0x91, 2 dup (0xff)                    ; begin 0x5d20
000000000000cb48         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5d44)
000000000000cb4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb4d         db  0x5f ; '_'
000000000000cb4e         db  0x0e ; '.'
000000000000cb4f         db  0x10 ; '.'
000000000000cb50         dd         0x00000010                                  ; Length of the record
000000000000cb54         dd         0x00000954                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb58         db         0xf8, 0x91, 2 dup (0xff)                    ; begin 0x5d50
000000000000cb5c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5d52)
000000000000cb60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb61         align      4
000000000000cb64         dd         0x00000020                                  ; Length of the record
000000000000cb68         dd         0x00000968                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb6c         db         0xf4, 0x91, 2 dup (0xff)                    ; begin 0x5d60
000000000000cb70         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5d96)
000000000000cb74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb75         db  0x44 ; 'D'
000000000000cb76         db  0x0e ; '.'
000000000000cb77         db  0x10 ; '.'
000000000000cb78         db  0x83 ; '.'
000000000000cb79         db  0x02 ; '.'
000000000000cb7a         db  0x5d ; ']'
000000000000cb7b         db  0x0a ; '.'
000000000000cb7c         db  0x0e ; '.'
000000000000cb7d         db  0x08 ; '.'
000000000000cb7e         db  0x47 ; 'G'
000000000000cb7f         db  0x0b ; '.'
000000000000cb80         db  0x48 ; 'H'
000000000000cb81         db  0x0a ; '.'
000000000000cb82         db  0x0e ; '.'
000000000000cb83         db  0x08 ; '.'
000000000000cb84         db  0x41 ; 'A'
000000000000cb85         db  0x0b ; '.'
000000000000cb86         db  0x00 ; '.'
000000000000cb87         db  0x00 ; '.'
000000000000cb88         dd         0x00000010                                  ; Length of the record
000000000000cb8c         dd         0x0000098c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cb90         db         0x10, 0x92, 2 dup (0xff)                    ; begin 0x5da0
000000000000cb94         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5dc4)
000000000000cb98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb99         db  0x5f ; '_'
000000000000cb9a         db  0x0e ; '.'
000000000000cb9b         db  0x10 ; '.'
000000000000cb9c         dd         0x00000014                                  ; Length of the record
000000000000cba0         dd         0x000009a0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cba4         db         0x2c, 0x92, 2 dup (0xff)                    ; begin 0x5dd0
000000000000cba8         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5e52)
000000000000cbac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbad         db  0x02 ; '.'
000000000000cbae         db  0x5f ; '_'
000000000000cbaf         db  0x0e ; '.'
000000000000cbb0         db  0x10 ; '.'
000000000000cbb1         db  0x49 ; 'I'
000000000000cbb2         db  0x0e ; '.'
000000000000cbb3         db  0x08 ; '.'
000000000000cbb4         dd         0x00000014                                  ; Length of the record
000000000000cbb8         dd         0x000009b8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cbbc         db         0xa4, 0x92, 2 dup (0xff)                    ; begin 0x5e60
000000000000cbc0         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5eaa)
000000000000cbc4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbc5         db  0x02 ; '.'
000000000000cbc6         db  0x45 ; 'E'
000000000000cbc7         db  0x0e ; '.'
000000000000cbc8         db  0x10 ; '.'
000000000000cbc9         db  0x00 ; '.'
000000000000cbca         db  0x00 ; '.'
000000000000cbcb         db  0x00 ; '.'
000000000000cbcc         dd         0x00000018                                  ; Length of the record
000000000000cbd0         dd         0x000009d0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cbd4         db         0xdc, 0x92, 2 dup (0xff)                    ; begin 0x5eb0
000000000000cbd8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5ec7)
000000000000cbdc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbdd         db  0x41 ; 'A'
000000000000cbde         db  0x0e ; '.'
000000000000cbdf         db  0x10 ; '.'
000000000000cbe0         db  0x83 ; '.'
000000000000cbe1         db  0x02 ; '.'
000000000000cbe2         db  0x51 ; 'Q'
000000000000cbe3         db  0x0e ; '.'
000000000000cbe4         db  0x08 ; '.'
000000000000cbe5         db  0x00 ; '.'
000000000000cbe6         db  0x00 ; '.'
000000000000cbe7         db  0x00 ; '.'
000000000000cbe8         dd         0x00000018                                  ; Length of the record
000000000000cbec         dd         0x000009ec                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cbf0         db         0xe0, 0x92, 2 dup (0xff)                    ; begin 0x5ed0
000000000000cbf4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5efe)
000000000000cbf8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbf9         db  0x47 ; 'G'
000000000000cbfa         db  0x0e ; '.'
000000000000cbfb         db  0x10 ; '.'
000000000000cbfc         db  0x61 ; 'a'
000000000000cbfd         db  0x0a ; '.'
000000000000cbfe         db  0x0e ; '.'
000000000000cbff         db  0x08 ; '.'
000000000000cc00         db  0x41 ; 'A'
000000000000cc01         db  0x0b ; '.'
000000000000cc02         db  0x00 ; '.'
000000000000cc03         db  0x00 ; '.'
000000000000cc04         dd         0x00000024                                  ; Length of the record
000000000000cc08         dd         0x00000a08                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc0c         db         0xf4, 0x92, 2 dup (0xff)                    ; begin 0x5f00
000000000000cc10         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5f28)
000000000000cc14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc15         db  0x41 ; 'A'
000000000000cc16         db  0x0e ; '.'
000000000000cc17         db  0x10 ; '.'
000000000000cc18         db  0x86 ; '.'
000000000000cc19         db  0x02 ; '.'
000000000000cc1a         db  0x41 ; 'A'
000000000000cc1b         db  0x0e ; '.'
000000000000cc1c         db  0x18 ; '.'
000000000000cc1d         db  0x83 ; '.'
000000000000cc1e         db  0x03 ; '.'
000000000000cc1f         db  0x4d ; 'M'
000000000000cc20         db  0x0e ; '.'
000000000000cc21         db  0x20 ; ' '
000000000000cc22         db  0x49 ; 'I'
000000000000cc23         db  0x0e ; '.'
000000000000cc24         db  0x18 ; '.'
000000000000cc25         db  0x47 ; 'G'
000000000000cc26         db  0x0e ; '.'
000000000000cc27         db  0x10 ; '.'
000000000000cc28         db  0x41 ; 'A'
000000000000cc29         db  0x0e ; '.'
000000000000cc2a         db  0x08 ; '.'
000000000000cc2b         db  0x00 ; '.'
000000000000cc2c         dd         0x00000018                                  ; Length of the record
000000000000cc30         dd         0x00000a30                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc34         db         0xfc, 0x92, 2 dup (0xff)                    ; begin 0x5f30
000000000000cc38         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5f43)
000000000000cc3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc3d         db  0x41 ; 'A'
000000000000cc3e         db  0x0e ; '.'
000000000000cc3f         db  0x10 ; '.'
000000000000cc40         db  0x83 ; '.'
000000000000cc41         db  0x02 ; '.'
000000000000cc42         db  0x50 ; 'P'
000000000000cc43         db  0x0e ; '.'
000000000000cc44         db  0x08 ; '.'
000000000000cc45         db  0x00 ; '.'
000000000000cc46         db  0x00 ; '.'
000000000000cc47         db  0x00 ; '.'
000000000000cc48         dd         0x00000014                                  ; Length of the record
000000000000cc4c         dd         0x00000a4c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc50         db         0x00, 0x93, 2 dup (0xff)                    ; begin 0x5f50
000000000000cc54         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5f85)
000000000000cc58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc59         db  0x4b ; 'K'
000000000000cc5a         db  0x0e ; '.'
000000000000cc5b         db  0x10 ; '.'
000000000000cc5c         db  0x00 ; '.'
000000000000cc5d         db  0x00 ; '.'
000000000000cc5e         db  0x00 ; '.'
000000000000cc5f         db  0x00 ; '.'
000000000000cc60         dd         0x00000018                                  ; Length of the record
000000000000cc64         dd         0x00000a64                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc68         db         0x28, 0x93, 2 dup (0xff)                    ; begin 0x5f90
000000000000cc6c         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x5fdf)
000000000000cc70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc71         db  0x44 ; 'D'
000000000000cc72         db  0x0e ; '.'
000000000000cc73         db  0x10 ; '.'
000000000000cc74         db  0x54 ; 'T'
000000000000cc75         db  0x0a ; '.'
000000000000cc76         db  0x0e ; '.'
000000000000cc77         db  0x08 ; '.'
000000000000cc78         db  0x48 ; 'H'
000000000000cc79         db  0x0b ; '.'
000000000000cc7a         db  0x00 ; '.'
000000000000cc7b         db  0x00 ; '.'
000000000000cc7c         dd         0x00000010                                  ; Length of the record
000000000000cc80         dd         0x00000a80                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc84         db         0x5c, 0x93, 2 dup (0xff)                    ; begin 0x5fe0
000000000000cc88         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x6009)
000000000000cc8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc8d         align      16
000000000000cc90         dd         0x0000004c                                  ; Length of the record
000000000000cc94         dd         0x00000a94                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cc98         db         0x78, 0x93, 2 dup (0xff)                    ; begin 0x6010
000000000000cc9c         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x642c)
000000000000cca0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cca1         db  0x42 ; 'B'
000000000000cca2         db  0x0e ; '.'
000000000000cca3         db  0x10 ; '.'
000000000000cca4         db  0x8f ; '.'
000000000000cca5         db  0x02 ; '.'
000000000000cca6         db  0x42 ; 'B'
000000000000cca7         db  0x0e ; '.'
000000000000cca8         db  0x18 ; '.'
000000000000cca9         db  0x8e ; '.'
000000000000ccaa         db  0x03 ; '.'
000000000000ccab         db  0x42 ; 'B'
000000000000ccac         db  0x0e ; '.'
000000000000ccad         db  0x20 ; ' '
000000000000ccae         db  0x8d ; '.'
000000000000ccaf         db  0x04 ; '.'
000000000000ccb0         db  0x42 ; 'B'
000000000000ccb1         db  0x0e ; '.'
000000000000ccb2         db  0x28 ; '('
000000000000ccb3         db  0x8c ; '.'
000000000000ccb4         db  0x05 ; '.'
000000000000ccb5         db  0x41 ; 'A'
000000000000ccb6         db  0x0e ; '.'
000000000000ccb7         db  0x30 ; '0'
000000000000ccb8         db  0x86 ; '.'
000000000000ccb9         db  0x06 ; '.'
000000000000ccba         db  0x41 ; 'A'
000000000000ccbb         db  0x0e ; '.'
000000000000ccbc         db  0x38 ; '8'
000000000000ccbd         db  0x83 ; '.'
000000000000ccbe         db  0x07 ; '.'
000000000000ccbf         db  0x44 ; 'D'
000000000000ccc0         db  0x0e ; '.'
000000000000ccc1         db  0x60 ; '`'
000000000000ccc2         db  0x02 ; '.'
000000000000ccc3         db  0xe9 ; '.'
000000000000ccc4         db  0x0a ; '.'
000000000000ccc5         db  0x0e ; '.'
000000000000ccc6         db  0x38 ; '8'
000000000000ccc7         db  0x41 ; 'A'
000000000000ccc8         db  0x0e ; '.'
000000000000ccc9         db  0x30 ; '0'
000000000000ccca         db  0x41 ; 'A'
000000000000cccb         db  0x0e ; '.'
000000000000cccc         db  0x28 ; '('
000000000000cccd         db  0x42 ; 'B'
000000000000ccce         db  0x0e ; '.'
000000000000cccf         db  0x20 ; ' '
000000000000ccd0         db  0x42 ; 'B'
000000000000ccd1         db  0x0e ; '.'
000000000000ccd2         db  0x18 ; '.'
000000000000ccd3         db  0x42 ; 'B'
000000000000ccd4         db  0x0e ; '.'
000000000000ccd5         db  0x10 ; '.'
000000000000ccd6         db  0x42 ; 'B'
000000000000ccd7         db  0x0e ; '.'
000000000000ccd8         db  0x08 ; '.'
000000000000ccd9         db  0x47 ; 'G'
000000000000ccda         db  0x0b ; '.'
000000000000ccdb         db  0x00 ; '.'
000000000000ccdc         db  0x00 ; '.'
000000000000ccdd         db  0x00 ; '.'
000000000000ccde         db  0x00 ; '.'
000000000000ccdf         db  0x00 ; '.'
000000000000cce0         dd         0x00000010                                  ; Length of the record
000000000000cce4         dd         0x00000ae4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cce8         db         0x48, 0x97, 2 dup (0xff)                    ; begin 0x6430
000000000000ccec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x644a)
000000000000ccf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ccf1         align      4
000000000000ccf4         dd         0x00000010                                  ; Length of the record
000000000000ccf8         dd         0x00000af8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ccfc         db         0x54, 0x97, 2 dup (0xff)                    ; begin 0x6450
000000000000cd00         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x645d)
000000000000cd04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd05         align      8
000000000000cd08         dd         0x00000010                                  ; Length of the record
000000000000cd0c         dd         0x00000b0c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cd10         db         0x50, 0x97, 2 dup (0xff)                    ; begin 0x6460
000000000000cd14         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x646c)
000000000000cd18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd19         align      4
000000000000cd1c         dd         0x00000010                                  ; Length of the record
000000000000cd20         dd         0x00000b20                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cd24         db         0x4c, 0x97, 2 dup (0xff)                    ; begin 0x6470
000000000000cd28         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x647a)
000000000000cd2c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd2d         align      16
000000000000cd30         dd         0x00000010                                  ; Length of the record
000000000000cd34         dd         0x00000b34                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cd38         db         0x48, 0x97, 2 dup (0xff)                    ; begin 0x6480
000000000000cd3c         db         0x26, 3 dup (0x00)                          ; length 0x26 (end at 0x64a6)
000000000000cd40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd41         align      4
000000000000cd44         dd         0x00000038                                  ; Length of the record
000000000000cd48         dd         0x00000b48                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cd4c         db         0x64, 0x97, 2 dup (0xff)                    ; begin 0x64b0
000000000000cd50         db         0xc5, 0x01, 2 dup (0x00)                    ; length 0x1c5 (end at 0x6675)
000000000000cd54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd55         db  0x42 ; 'B'
000000000000cd56         db  0x0e ; '.'
000000000000cd57         db  0x10 ; '.'
000000000000cd58         db  0x8c ; '.'
000000000000cd59         db  0x02 ; '.'
000000000000cd5a         db  0x41 ; 'A'
000000000000cd5b         db  0x0e ; '.'
000000000000cd5c         db  0x18 ; '.'
000000000000cd5d         db  0x86 ; '.'
000000000000cd5e         db  0x03 ; '.'
000000000000cd5f         db  0x44 ; 'D'
000000000000cd60         db  0x0e ; '.'
000000000000cd61         db  0x20 ; ' '
000000000000cd62         db  0x83 ; '.'
000000000000cd63         db  0x04 ; '.'
000000000000cd64         db  0x02 ; '.'
000000000000cd65         db  0x72 ; 'r'
000000000000cd66         db  0x0a ; '.'
000000000000cd67         db  0x0e ; '.'
000000000000cd68         db  0x18 ; '.'
000000000000cd69         db  0x41 ; 'A'
000000000000cd6a         db  0x0e ; '.'
000000000000cd6b         db  0x10 ; '.'
000000000000cd6c         db  0x42 ; 'B'
000000000000cd6d         db  0x0e ; '.'
000000000000cd6e         db  0x08 ; '.'
000000000000cd6f         db  0x44 ; 'D'
000000000000cd70         db  0x0b ; '.'
000000000000cd71         db  0x02 ; '.'
000000000000cd72         db  0x54 ; 'T'
000000000000cd73         db  0x0a ; '.'
000000000000cd74         db  0x0e ; '.'
000000000000cd75         db  0x18 ; '.'
000000000000cd76         db  0x45 ; 'E'
000000000000cd77         db  0x0e ; '.'
000000000000cd78         db  0x10 ; '.'
000000000000cd79         db  0x42 ; 'B'
000000000000cd7a         db  0x0e ; '.'
000000000000cd7b         db  0x08 ; '.'
000000000000cd7c         db  0x45 ; 'E'
000000000000cd7d         db  0x0b ; '.'
000000000000cd7e         db  0x00 ; '.'
000000000000cd7f         db  0x00 ; '.'
000000000000cd80         dd         0x0000004c                                  ; Length of the record
000000000000cd84         dd         0x00000b84                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cd88         db         0xf8, 0x98, 2 dup (0xff)                    ; begin 0x6680
000000000000cd8c         db         0x05, 0x01, 2 dup (0x00)                    ; length 0x105 (end at 0x6785)
000000000000cd90         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd91         db  0x42 ; 'B'
000000000000cd92         db  0x0e ; '.'
000000000000cd93         db  0x10 ; '.'
000000000000cd94         db  0x8d ; '.'
000000000000cd95         db  0x02 ; '.'
000000000000cd96         db  0x42 ; 'B'
000000000000cd97         db  0x0e ; '.'
000000000000cd98         db  0x18 ; '.'
000000000000cd99         db  0x8c ; '.'
000000000000cd9a         db  0x03 ; '.'
000000000000cd9b         db  0x44 ; 'D'
000000000000cd9c         db  0x0e ; '.'
000000000000cd9d         db  0x20 ; ' '
000000000000cd9e         db  0x86 ; '.'
000000000000cd9f         db  0x04 ; '.'
000000000000cda0         db  0x41 ; 'A'
000000000000cda1         db  0x0e ; '.'
000000000000cda2         db  0x28 ; '('
000000000000cda3         db  0x83 ; '.'
000000000000cda4         db  0x05 ; '.'
000000000000cda5         db  0x4a ; 'J'
000000000000cda6         db  0x0e ; '.'
000000000000cda7         db  0x30 ; '0'
000000000000cda8         db  0x02 ; '.'
000000000000cda9         db  0xb3 ; '.'
000000000000cdaa         db  0x0a ; '.'
000000000000cdab         db  0x0e ; '.'
000000000000cdac         db  0x28 ; '('
000000000000cdad         db  0x41 ; 'A'
000000000000cdae         db  0x0e ; '.'
000000000000cdaf         db  0x20 ; ' '
000000000000cdb0         db  0x41 ; 'A'
000000000000cdb1         db  0x0e ; '.'
000000000000cdb2         db  0x18 ; '.'
000000000000cdb3         db  0x42 ; 'B'
000000000000cdb4         db  0x0e ; '.'
000000000000cdb5         db  0x10 ; '.'
000000000000cdb6         db  0x42 ; 'B'
000000000000cdb7         db  0x0e ; '.'
000000000000cdb8         db  0x08 ; '.'
000000000000cdb9         db  0x44 ; 'D'
000000000000cdba         db  0x0b ; '.'
000000000000cdbb         db  0x5d ; ']'
000000000000cdbc         db  0x0a ; '.'
000000000000cdbd         db  0x0e ; '.'
000000000000cdbe         db  0x28 ; '('
000000000000cdbf         db  0x44 ; 'D'
000000000000cdc0         db  0x0e ; '.'
000000000000cdc1         db  0x20 ; ' '
000000000000cdc2         db  0x41 ; 'A'
000000000000cdc3         db  0x0e ; '.'
000000000000cdc4         db  0x18 ; '.'
000000000000cdc5         db  0x42 ; 'B'
000000000000cdc6         db  0x0e ; '.'
000000000000cdc7         db  0x10 ; '.'
000000000000cdc8         db  0x42 ; 'B'
000000000000cdc9         db  0x0e ; '.'
000000000000cdca         db  0x08 ; '.'
000000000000cdcb         db  0x4a ; 'J'
000000000000cdcc         db  0x0b ; '.'
000000000000cdcd         db  0x00 ; '.'
000000000000cdce         db  0x00 ; '.'
000000000000cdcf         db  0x00 ; '.'
000000000000cdd0         dd         0x00000034                                  ; Length of the record
000000000000cdd4         dd         0x00000bd4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cdd8         db         0xb8, 0x99, 2 dup (0xff)                    ; begin 0x6790
000000000000cddc         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x681a)
000000000000cde0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cde1         db  0x42 ; 'B'
000000000000cde2         db  0x0e ; '.'
000000000000cde3         db  0x10 ; '.'
000000000000cde4         db  0x8d ; '.'
000000000000cde5         db  0x02 ; '.'
000000000000cde6         db  0x42 ; 'B'
000000000000cde7         db  0x0e ; '.'
000000000000cde8         db  0x18 ; '.'
000000000000cde9         db  0x8c ; '.'
000000000000cdea         db  0x03 ; '.'
000000000000cdeb         db  0x44 ; 'D'
000000000000cdec         db  0x0e ; '.'
000000000000cded         db  0x20 ; ' '
000000000000cdee         db  0x86 ; '.'
000000000000cdef         db  0x04 ; '.'
000000000000cdf0         db  0x48 ; 'H'
000000000000cdf1         db  0x0e ; '.'
000000000000cdf2         db  0x28 ; '('
000000000000cdf3         db  0x83 ; '.'
000000000000cdf4         db  0x05 ; '.'
000000000000cdf5         db  0x4a ; 'J'
000000000000cdf6         db  0x0e ; '.'
000000000000cdf7         db  0x30 ; '0'
000000000000cdf8         db  0x02 ; '.'
000000000000cdf9         db  0x66 ; 'f'
000000000000cdfa         db  0x0e ; '.'
000000000000cdfb         db  0x28 ; '('
000000000000cdfc         db  0x44 ; 'D'
000000000000cdfd         db  0x0e ; '.'
000000000000cdfe         db  0x20 ; ' '
000000000000cdff         db  0x41 ; 'A'
000000000000ce00         db  0x0e ; '.'
000000000000ce01         db  0x18 ; '.'
000000000000ce02         db  0x42 ; 'B'
000000000000ce03         db  0x0e ; '.'
000000000000ce04         db  0x10 ; '.'
000000000000ce05         db  0x42 ; 'B'
000000000000ce06         db  0x0e ; '.'
000000000000ce07         db  0x08 ; '.'
000000000000ce08         dd         0x00000028                                  ; Length of the record
000000000000ce0c         dd         0x00000c0c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ce10         db         0x10, 0x9a, 2 dup (0xff)                    ; begin 0x6820
000000000000ce14         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x6862)
000000000000ce18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce19         db  0x46 ; 'F'
000000000000ce1a         db  0x0e ; '.'
000000000000ce1b         db  0x10 ; '.'
000000000000ce1c         db  0x86 ; '.'
000000000000ce1d         db  0x02 ; '.'
000000000000ce1e         db  0x41 ; 'A'
000000000000ce1f         db  0x0e ; '.'
000000000000ce20         db  0x18 ; '.'
000000000000ce21         db  0x83 ; '.'
000000000000ce22         db  0x03 ; '.'
000000000000ce23         db  0x47 ; 'G'
000000000000ce24         db  0x0e ; '.'
000000000000ce25         db  0x20 ; ' '
000000000000ce26         db  0x68 ; 'h'
000000000000ce27         db  0x0e ; '.'
000000000000ce28         db  0x18 ; '.'
000000000000ce29         db  0x41 ; 'A'
000000000000ce2a         db  0x0e ; '.'
000000000000ce2b         db  0x10 ; '.'
000000000000ce2c         db  0x41 ; 'A'
000000000000ce2d         db  0x0e ; '.'
000000000000ce2e         db  0x08 ; '.'
000000000000ce2f         db  0x48 ; 'H'
000000000000ce30         db  0xc3 ; '.'
000000000000ce31         db  0xc6 ; '.'
000000000000ce32         db  0x00 ; '.'
000000000000ce33         db  0x00 ; '.'
000000000000ce34         dd         0x00000018                                  ; Length of the record
000000000000ce38         dd         0x00000c38                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ce3c         db         0x34, 0x9a, 2 dup (0xff)                    ; begin 0x6870
000000000000ce40         db         0x39, 3 dup (0x00)                          ; length 0x39 (end at 0x68a9)
000000000000ce44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce45         db  0x41 ; 'A'
000000000000ce46         db  0x0e ; '.'
000000000000ce47         db  0x10 ; '.'
000000000000ce48         db  0x83 ; '.'
000000000000ce49         db  0x02 ; '.'
000000000000ce4a         db  0x68 ; 'h'
000000000000ce4b         db  0x0a ; '.'
000000000000ce4c         db  0x0e ; '.'
000000000000ce4d         db  0x08 ; '.'
000000000000ce4e         db  0x47 ; 'G'
000000000000ce4f         db  0x0b ; '.'
000000000000ce50         dd         0x00000038                                  ; Length of the record
000000000000ce54         dd         0x00000c54                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ce58         db         0x58, 0x9a, 2 dup (0xff)                    ; begin 0x68b0
000000000000ce5c         db         0x2c, 0x01, 2 dup (0x00)                    ; length 0x12c (end at 0x69dc)
000000000000ce60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce61         db  0x42 ; 'B'
000000000000ce62         db  0x0e ; '.'
000000000000ce63         db  0x10 ; '.'
000000000000ce64         db  0x8d ; '.'
000000000000ce65         db  0x02 ; '.'
000000000000ce66         db  0x42 ; 'B'
000000000000ce67         db  0x0e ; '.'
000000000000ce68         db  0x18 ; '.'
000000000000ce69         db  0x8c ; '.'
000000000000ce6a         db  0x03 ; '.'
000000000000ce6b         db  0x41 ; 'A'
000000000000ce6c         db  0x0e ; '.'
000000000000ce6d         db  0x20 ; ' '
000000000000ce6e         db  0x86 ; '.'
000000000000ce6f         db  0x04 ; '.'
000000000000ce70         db  0x41 ; 'A'
000000000000ce71         db  0x0e ; '.'
000000000000ce72         db  0x28 ; '('
000000000000ce73         db  0x83 ; '.'
000000000000ce74         db  0x05 ; '.'
000000000000ce75         db  0x47 ; 'G'
000000000000ce76         db  0x0e ; '.'
000000000000ce77         db  0xc0 ; '.'
000000000000ce78         db  0x01 ; '.'
000000000000ce79         db  0x02 ; '.'
000000000000ce7a         db  0xa4 ; '.'
000000000000ce7b         db  0x0a ; '.'
000000000000ce7c         db  0x0e ; '.'
000000000000ce7d         db  0x28 ; '('
000000000000ce7e         db  0x41 ; 'A'
000000000000ce7f         db  0x0e ; '.'
000000000000ce80         db  0x20 ; ' '
000000000000ce81         db  0x41 ; 'A'
000000000000ce82         db  0x0e ; '.'
000000000000ce83         db  0x18 ; '.'
000000000000ce84         db  0x42 ; 'B'
000000000000ce85         db  0x0e ; '.'
000000000000ce86         db  0x10 ; '.'
000000000000ce87         db  0x42 ; 'B'
000000000000ce88         db  0x0e ; '.'
000000000000ce89         db  0x08 ; '.'
000000000000ce8a         db  0x49 ; 'I'
000000000000ce8b         db  0x0b ; '.'
000000000000ce8c         dd         0x00000020                                  ; Length of the record
000000000000ce90         dd         0x00000c90                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ce94         db         0x4c, 0x9b, 2 dup (0xff)                    ; begin 0x69e0
000000000000ce98         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x6a4a)
000000000000ce9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce9d         db  0x44 ; 'D'
000000000000ce9e         db  0x0e ; '.'
000000000000ce9f         db  0x10 ; '.'
000000000000cea0         db  0x72 ; 'r'
000000000000cea1         db  0x0a ; '.'
000000000000cea2         db  0x0e ; '.'
000000000000cea3         db  0x08 ; '.'
000000000000cea4         db  0x4a ; 'J'
000000000000cea5         db  0x0b ; '.'
000000000000cea6         db  0x5b ; '['
000000000000cea7         db  0x0a ; '.'
000000000000cea8         db  0x0e ; '.'
000000000000cea9         db  0x08 ; '.'
000000000000ceaa         db  0x45 ; 'E'
000000000000ceab         db  0x0b ; '.'
000000000000ceac         db  0x49 ; 'I'
000000000000cead         db  0x0e ; '.'
000000000000ceae         db  0x08 ; '.'
000000000000ceaf         db  0x00 ; '.'
000000000000ceb0         dd         0x00000040                                  ; Length of the record
000000000000ceb4         dd         0x00000cb4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000ceb8         db         0x98, 0x9b, 2 dup (0xff)                    ; begin 0x6a50
000000000000cebc         db         0x66, 3 dup (0x00)                          ; length 0x66 (end at 0x6ab6)
000000000000cec0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cec1         db  0x41 ; 'A'
000000000000cec2         db  0x0e ; '.'
000000000000cec3         db  0x10 ; '.'
000000000000cec4         db  0x86 ; '.'
000000000000cec5         db  0x02 ; '.'
000000000000cec6         db  0x41 ; 'A'
000000000000cec7         db  0x0e ; '.'
000000000000cec8         db  0x18 ; '.'
000000000000cec9         db  0x83 ; '.'
000000000000ceca         db  0x03 ; '.'
000000000000cecb         db  0x49 ; 'I'
000000000000cecc         db  0x0e ; '.'
000000000000cecd         db  0x20 ; ' '
000000000000cece         db  0x61 ; 'a'
000000000000cecf         db  0x0a ; '.'
000000000000ced0         db  0x0e ; '.'
000000000000ced1         db  0x18 ; '.'
000000000000ced2         db  0x41 ; 'A'
000000000000ced3         db  0x0e ; '.'
000000000000ced4         db  0x10 ; '.'
000000000000ced5         db  0x41 ; 'A'
000000000000ced6         db  0x0e ; '.'
000000000000ced7         db  0x08 ; '.'
000000000000ced8         db  0x42 ; 'B'
000000000000ced9         db  0x0b ; '.'
000000000000ceda         db  0x5b ; '['
000000000000cedb         db  0x0a ; '.'
000000000000cedc         db  0x0e ; '.'
000000000000cedd         db  0x18 ; '.'
000000000000cede         db  0x41 ; 'A'
000000000000cedf         db  0x0e ; '.'
000000000000cee0         db  0x10 ; '.'
000000000000cee1         db  0x41 ; 'A'
000000000000cee2         db  0x0e ; '.'
000000000000cee3         db  0x08 ; '.'
000000000000cee4         db  0x43 ; 'C'
000000000000cee5         db  0x0b ; '.'
000000000000cee6         db  0x4e ; 'N'
000000000000cee7         db  0x0a ; '.'
000000000000cee8         db  0x0e ; '.'
000000000000cee9         db  0x18 ; '.'
000000000000ceea         db  0x41 ; 'A'
000000000000ceeb         db  0x0e ; '.'
000000000000ceec         db  0x10 ; '.'
000000000000ceed         db  0x41 ; 'A'
000000000000ceee         db  0x0e ; '.'
000000000000ceef         db  0x08 ; '.'
000000000000cef0         db  0x41 ; 'A'
000000000000cef1         db  0x0b ; '.'
000000000000cef2         db  0x00 ; '.'
000000000000cef3         db  0x00 ; '.'
000000000000cef4         dd         0x00000028                                  ; Length of the record
000000000000cef8         dd         0x00000cf8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cefc         db         0xc4, 0x9b, 2 dup (0xff)                    ; begin 0x6ac0
000000000000cf00         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x6b1c)
000000000000cf04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf05         db  0x41 ; 'A'
000000000000cf06         db  0x0e ; '.'
000000000000cf07         db  0x10 ; '.'
000000000000cf08         db  0x86 ; '.'
000000000000cf09         db  0x02 ; '.'
000000000000cf0a         db  0x41 ; 'A'
000000000000cf0b         db  0x0e ; '.'
000000000000cf0c         db  0x18 ; '.'
000000000000cf0d         db  0x83 ; '.'
000000000000cf0e         db  0x03 ; '.'
000000000000cf0f         db  0x47 ; 'G'
000000000000cf10         db  0x0e ; '.'
000000000000cf11         db  0x20 ; ' '
000000000000cf12         db  0x6c ; 'l'
000000000000cf13         db  0x0a ; '.'
000000000000cf14         db  0x0e ; '.'
000000000000cf15         db  0x18 ; '.'
000000000000cf16         db  0x43 ; 'C'
000000000000cf17         db  0x0e ; '.'
000000000000cf18         db  0x10 ; '.'
000000000000cf19         db  0x41 ; 'A'
000000000000cf1a         db  0x0e ; '.'
000000000000cf1b         db  0x08 ; '.'
000000000000cf1c         db  0x47 ; 'G'
000000000000cf1d         db  0x0b ; '.'
000000000000cf1e         db  0x00 ; '.'
000000000000cf1f         db  0x00 ; '.'
000000000000cf20         dd         0x00000024                                  ; Length of the record
000000000000cf24         dd         0x00000d24                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cf28         db         0xf8, 0x9b, 2 dup (0xff)                    ; begin 0x6b20
000000000000cf2c         db         0x6b, 3 dup (0x00)                          ; length 0x6b (end at 0x6b8b)
000000000000cf30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf31         db  0x41 ; 'A'
000000000000cf32         db  0x0e ; '.'
000000000000cf33         db  0x10 ; '.'
000000000000cf34         db  0x83 ; '.'
000000000000cf35         db  0x02 ; '.'
000000000000cf36         db  0x6f ; 'o'
000000000000cf37         db  0x0a ; '.'
000000000000cf38         db  0x0e ; '.'
000000000000cf39         db  0x08 ; '.'
000000000000cf3a         db  0x48 ; 'H'
000000000000cf3b         db  0x0b ; '.'
000000000000cf3c         db  0x5a ; 'Z'
000000000000cf3d         db  0x0a ; '.'
000000000000cf3e         db  0x0e ; '.'
000000000000cf3f         db  0x08 ; '.'
000000000000cf40         db  0x46 ; 'F'
000000000000cf41         db  0x0b ; '.'
000000000000cf42         db  0x52 ; 'R'
000000000000cf43         db  0x0e ; '.'
000000000000cf44         db  0x08 ; '.'
000000000000cf45         db  0x00 ; '.'
000000000000cf46         db  0x00 ; '.'
000000000000cf47         db  0x00 ; '.'
000000000000cf48         dd         0x0000001c                                  ; Length of the record
000000000000cf4c         dd         0x00000d4c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cf50         db         0x40, 0x9c, 2 dup (0xff)                    ; begin 0x6b90
000000000000cf54         db         0x63, 3 dup (0x00)                          ; length 0x63 (end at 0x6bf3)
000000000000cf58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf59         db  0x47 ; 'G'
000000000000cf5a         db  0x0e ; '.'
000000000000cf5b         db  0x10 ; '.'
000000000000cf5c         db  0x83 ; '.'
000000000000cf5d         db  0x02 ; '.'
000000000000cf5e         db  0x70 ; 'p'
000000000000cf5f         db  0x0a ; '.'
000000000000cf60         db  0x0e ; '.'
000000000000cf61         db  0x08 ; '.'
000000000000cf62         db  0x49 ; 'I'
000000000000cf63         db  0x0b ; '.'
000000000000cf64         db  0x62 ; 'b'
000000000000cf65         db  0x0e ; '.'
000000000000cf66         db  0x08 ; '.'
000000000000cf67         db  0x00 ; '.'
000000000000cf68         dd         0x00000010                                  ; Length of the record
000000000000cf6c         dd         0x00000d6c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cf70         db         0x90, 0x9c, 2 dup (0xff)                    ; begin 0x6c00
000000000000cf74         db         0x3a, 3 dup (0x00)                          ; length 0x3a (end at 0x6c3a)
000000000000cf78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf79         align      4
000000000000cf7c         dd         0x0000004c                                  ; Length of the record
000000000000cf80         dd         0x00000d80                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cf84         db         0xbc, 0x9c, 2 dup (0xff)                    ; begin 0x6c40
000000000000cf88         db         0x7a, 0x02, 2 dup (0x00)                    ; length 0x27a (end at 0x6eba)
000000000000cf8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf8d         db  0x42 ; 'B'
000000000000cf8e         db  0x0e ; '.'
000000000000cf8f         db  0x10 ; '.'
000000000000cf90         db  0x8f ; '.'
000000000000cf91         db  0x02 ; '.'
000000000000cf92         db  0x42 ; 'B'
000000000000cf93         db  0x0e ; '.'
000000000000cf94         db  0x18 ; '.'
000000000000cf95         db  0x8e ; '.'
000000000000cf96         db  0x03 ; '.'
000000000000cf97         db  0x45 ; 'E'
000000000000cf98         db  0x0e ; '.'
000000000000cf99         db  0x20 ; ' '
000000000000cf9a         db  0x8d ; '.'
000000000000cf9b         db  0x04 ; '.'
000000000000cf9c         db  0x42 ; 'B'
000000000000cf9d         db  0x0e ; '.'
000000000000cf9e         db  0x28 ; '('
000000000000cf9f         db  0x8c ; '.'
000000000000cfa0         db  0x05 ; '.'
000000000000cfa1         db  0x44 ; 'D'
000000000000cfa2         db  0x0e ; '.'
000000000000cfa3         db  0x30 ; '0'
000000000000cfa4         db  0x86 ; '.'
000000000000cfa5         db  0x06 ; '.'
000000000000cfa6         db  0x41 ; 'A'
000000000000cfa7         db  0x0e ; '.'
000000000000cfa8         db  0x38 ; '8'
000000000000cfa9         db  0x83 ; '.'
000000000000cfaa         db  0x07 ; '.'
000000000000cfab         db  0x4d ; 'M'
000000000000cfac         db  0x0e ; '.'
000000000000cfad         db  0xf0 ; '.'
000000000000cfae         db  0x01 ; '.'
000000000000cfaf         db  0x03 ; '.'
000000000000cfb0         db  0x08 ; '.'
000000000000cfb1         db  0x01 ; '.'
000000000000cfb2         db  0x0a ; '.'
000000000000cfb3         db  0x0e ; '.'
000000000000cfb4         db  0x38 ; '8'
000000000000cfb5         db  0x41 ; 'A'
000000000000cfb6         db  0x0e ; '.'
000000000000cfb7         db  0x30 ; '0'
000000000000cfb8         db  0x41 ; 'A'
000000000000cfb9         db  0x0e ; '.'
000000000000cfba         db  0x28 ; '('
000000000000cfbb         db  0x42 ; 'B'
000000000000cfbc         db  0x0e ; '.'
000000000000cfbd         db  0x20 ; ' '
000000000000cfbe         db  0x42 ; 'B'
000000000000cfbf         db  0x0e ; '.'
000000000000cfc0         db  0x18 ; '.'
000000000000cfc1         db  0x42 ; 'B'
000000000000cfc2         db  0x0e ; '.'
000000000000cfc3         db  0x10 ; '.'
000000000000cfc4         db  0x42 ; 'B'
000000000000cfc5         db  0x0e ; '.'
000000000000cfc6         db  0x08 ; '.'
000000000000cfc7         db  0x41 ; 'A'
000000000000cfc8         db  0x0b ; '.'
000000000000cfc9         db  0x00 ; '.'
000000000000cfca         db  0x00 ; '.'
000000000000cfcb         db  0x00 ; '.'
000000000000cfcc         dd         0x00000040                                  ; Length of the record
000000000000cfd0         dd         0x00000dd0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000cfd4         db         0xec, 0x9e, 2 dup (0xff)                    ; begin 0x6ec0
000000000000cfd8         db         0xaf, 3 dup (0x00)                          ; length 0xaf (end at 0x6f6f)
000000000000cfdc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cfdd         db  0x48 ; 'H'
000000000000cfde         db  0x0e ; '.'
000000000000cfdf         db  0x10 ; '.'
000000000000cfe0         db  0x8c ; '.'
000000000000cfe1         db  0x02 ; '.'
000000000000cfe2         db  0x44 ; 'D'
000000000000cfe3         db  0x0e ; '.'
000000000000cfe4         db  0x18 ; '.'
000000000000cfe5         db  0x86 ; '.'
000000000000cfe6         db  0x03 ; '.'
000000000000cfe7         db  0x41 ; 'A'
000000000000cfe8         db  0x0e ; '.'
000000000000cfe9         db  0x20 ; ' '
000000000000cfea         db  0x83 ; '.'
000000000000cfeb         db  0x04 ; '.'
000000000000cfec         db  0x02 ; '.'
000000000000cfed         db  0x65 ; 'e'
000000000000cfee         db  0x0a ; '.'
000000000000cfef         db  0x0e ; '.'
000000000000cff0         db  0x18 ; '.'
000000000000cff1         db  0x46 ; 'F'
000000000000cff2         db  0x0e ; '.'
000000000000cff3         db  0x10 ; '.'
000000000000cff4         db  0x42 ; 'B'
000000000000cff5         db  0x0e ; '.'
000000000000cff6         db  0x08 ; '.'
000000000000cff7         db  0x46 ; 'F'
000000000000cff8         db  0x0b ; '.'
000000000000cff9         db  0x5e ; '^'
000000000000cffa         db  0x0a ; '.'
000000000000cffb         db  0x0e ; '.'
000000000000cffc         db  0x18 ; '.'
000000000000cffd         db  0x41 ; 'A'
000000000000cffe         db  0x0e ; '.'
000000000000cfff         db  0x10 ; '.'
000000000000d000         db  0x42 ; 'B'
000000000000d001         db  0x0e ; '.'
000000000000d002         db  0x08 ; '.'
000000000000d003         db  0x47 ; 'G'
000000000000d004         db  0x0b ; '.'
000000000000d005         db  0x41 ; 'A'
000000000000d006         db  0x0e ; '.'
000000000000d007         db  0x18 ; '.'
000000000000d008         db  0x43 ; 'C'
000000000000d009         db  0x0e ; '.'
000000000000d00a         db  0x10 ; '.'
000000000000d00b         db  0x42 ; 'B'
000000000000d00c         db  0x0e ; '.'
000000000000d00d         db  0x08 ; '.'
000000000000d00e         db  0x00 ; '.'
000000000000d00f         db  0x00 ; '.'
000000000000d010         dd         0x00000018                                  ; Length of the record
000000000000d014         dd         0x00000e14                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d018         db         0x58, 0x9f, 2 dup (0xff)                    ; begin 0x6f70
000000000000d01c         db         0xb8, 3 dup (0x00)                          ; length 0xb8 (end at 0x7028)
000000000000d020         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d021         db  0x44 ; 'D'
000000000000d022         db  0x0e ; '.'
000000000000d023         db  0x30 ; '0'
000000000000d024         db  0x02 ; '.'
000000000000d025         db  0x55 ; 'U'
000000000000d026         db  0x0a ; '.'
000000000000d027         db  0x0e ; '.'
000000000000d028         db  0x08 ; '.'
000000000000d029         db  0x47 ; 'G'
000000000000d02a         db  0x0b ; '.'
000000000000d02b         db  0x00 ; '.'
000000000000d02c         dd         0x0000004c                                  ; Length of the record
000000000000d030         dd         0x00000e30                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d034         db         0xfc, 0x9f, 2 dup (0xff)                    ; begin 0x7030
000000000000d038         db         0xd1, 0x09, 2 dup (0x00)                    ; length 0x9d1 (end at 0x7a01)
000000000000d03c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d03d         db  0x42 ; 'B'
000000000000d03e         db  0x0e ; '.'
000000000000d03f         db  0x10 ; '.'
000000000000d040         db  0x8f ; '.'
000000000000d041         db  0x02 ; '.'
000000000000d042         db  0x42 ; 'B'
000000000000d043         db  0x0e ; '.'
000000000000d044         db  0x18 ; '.'
000000000000d045         db  0x8e ; '.'
000000000000d046         db  0x03 ; '.'
000000000000d047         db  0x45 ; 'E'
000000000000d048         db  0x0e ; '.'
000000000000d049         db  0x20 ; ' '
000000000000d04a         db  0x8d ; '.'
000000000000d04b         db  0x04 ; '.'
000000000000d04c         db  0x42 ; 'B'
000000000000d04d         db  0x0e ; '.'
000000000000d04e         db  0x28 ; '('
000000000000d04f         db  0x8c ; '.'
000000000000d050         db  0x05 ; '.'
000000000000d051         db  0x41 ; 'A'
000000000000d052         db  0x0e ; '.'
000000000000d053         db  0x30 ; '0'
000000000000d054         db  0x86 ; '.'
000000000000d055         db  0x06 ; '.'
000000000000d056         db  0x41 ; 'A'
000000000000d057         db  0x0e ; '.'
000000000000d058         db  0x38 ; '8'
000000000000d059         db  0x83 ; '.'
000000000000d05a         db  0x07 ; '.'
000000000000d05b         db  0x44 ; 'D'
000000000000d05c         db  0x0e ; '.'
000000000000d05d         db  0xb0 ; '.'
000000000000d05e         db  0x01 ; '.'
000000000000d05f         db  0x03 ; '.'
000000000000d060         db  0xd1 ; '.'
000000000000d061         db  0x05 ; '.'
000000000000d062         db  0x0a ; '.'
000000000000d063         db  0x0e ; '.'
000000000000d064         db  0x38 ; '8'
000000000000d065         db  0x41 ; 'A'
000000000000d066         db  0x0e ; '.'
000000000000d067         db  0x30 ; '0'
000000000000d068         db  0x41 ; 'A'
000000000000d069         db  0x0e ; '.'
000000000000d06a         db  0x28 ; '('
000000000000d06b         db  0x42 ; 'B'
000000000000d06c         db  0x0e ; '.'
000000000000d06d         db  0x20 ; ' '
000000000000d06e         db  0x42 ; 'B'
000000000000d06f         db  0x0e ; '.'
000000000000d070         db  0x18 ; '.'
000000000000d071         db  0x42 ; 'B'
000000000000d072         db  0x0e ; '.'
000000000000d073         db  0x10 ; '.'
000000000000d074         db  0x42 ; 'B'
000000000000d075         db  0x0e ; '.'
000000000000d076         db  0x08 ; '.'
000000000000d077         db  0x44 ; 'D'
000000000000d078         db  0x0b ; '.'
000000000000d079         db  0x00 ; '.'
000000000000d07a         db  0x00 ; '.'
000000000000d07b         db  0x00 ; '.'
000000000000d07c         dd         0x00000048                                  ; Length of the record
000000000000d080         dd         0x00000e80                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d084         db         0x8c, 0xa9, 2 dup (0xff)                    ; begin 0x7a10
000000000000d088         db         0xaa, 0x03, 2 dup (0x00)                    ; length 0x3aa (end at 0x7dba)
000000000000d08c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d08d         db  0x42 ; 'B'
000000000000d08e         db  0x0e ; '.'
000000000000d08f         db  0x10 ; '.'
000000000000d090         db  0x8f ; '.'
000000000000d091         db  0x02 ; '.'
000000000000d092         db  0x42 ; 'B'
000000000000d093         db  0x0e ; '.'
000000000000d094         db  0x18 ; '.'
000000000000d095         db  0x8e ; '.'
000000000000d096         db  0x03 ; '.'
000000000000d097         db  0x42 ; 'B'
000000000000d098         db  0x0e ; '.'
000000000000d099         db  0x20 ; ' '
000000000000d09a         db  0x8d ; '.'
000000000000d09b         db  0x04 ; '.'
000000000000d09c         db  0x42 ; 'B'
000000000000d09d         db  0x0e ; '.'
000000000000d09e         db  0x28 ; '('
000000000000d09f         db  0x8c ; '.'
000000000000d0a0         db  0x05 ; '.'
000000000000d0a1         db  0x41 ; 'A'
000000000000d0a2         db  0x0e ; '.'
000000000000d0a3         db  0x30 ; '0'
000000000000d0a4         db  0x86 ; '.'
000000000000d0a5         db  0x06 ; '.'
000000000000d0a6         db  0x41 ; 'A'
000000000000d0a7         db  0x0e ; '.'
000000000000d0a8         db  0x38 ; '8'
000000000000d0a9         db  0x83 ; '.'
000000000000d0aa         db  0x07 ; '.'
000000000000d0ab         db  0x44 ; 'D'
000000000000d0ac         db  0x0e ; '.'
000000000000d0ad         db  0x60 ; '`'
000000000000d0ae         db  0x03 ; '.'
000000000000d0af         db  0xa4 ; '.'
000000000000d0b0         db  0x02 ; '.'
000000000000d0b1         db  0x0a ; '.'
000000000000d0b2         db  0x0e ; '.'
000000000000d0b3         db  0x38 ; '8'
000000000000d0b4         db  0x44 ; 'D'
000000000000d0b5         db  0x0e ; '.'
000000000000d0b6         db  0x30 ; '0'
000000000000d0b7         db  0x41 ; 'A'
000000000000d0b8         db  0x0e ; '.'
000000000000d0b9         db  0x28 ; '('
000000000000d0ba         db  0x42 ; 'B'
000000000000d0bb         db  0x0e ; '.'
000000000000d0bc         db  0x20 ; ' '
000000000000d0bd         db  0x42 ; 'B'
000000000000d0be         db  0x0e ; '.'
000000000000d0bf         db  0x18 ; '.'
000000000000d0c0         db  0x42 ; 'B'
000000000000d0c1         db  0x0e ; '.'
000000000000d0c2         db  0x10 ; '.'
000000000000d0c3         db  0x42 ; 'B'
000000000000d0c4         db  0x0e ; '.'
000000000000d0c5         db  0x08 ; '.'
000000000000d0c6         db  0x41 ; 'A'
000000000000d0c7         db  0x0b ; '.'
000000000000d0c8         dd         0x0000002c                                  ; Length of the record
000000000000d0cc         dd         0x00000ecc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d0d0         db         0xf0, 0xac, 2 dup (0xff)                    ; begin 0x7dc0
000000000000d0d4         db         0x82, 0x01, 2 dup (0x00)                    ; length 0x182 (end at 0x7f42)
000000000000d0d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d0d9         db  0x42 ; 'B'
000000000000d0da         db  0x0e ; '.'
000000000000d0db         db  0x10 ; '.'
000000000000d0dc         db  0x8c ; '.'
000000000000d0dd         db  0x02 ; '.'
000000000000d0de         db  0x41 ; 'A'
000000000000d0df         db  0x0e ; '.'
000000000000d0e0         db  0x18 ; '.'
000000000000d0e1         db  0x86 ; '.'
000000000000d0e2         db  0x03 ; '.'
000000000000d0e3         db  0x44 ; 'D'
000000000000d0e4         db  0x0e ; '.'
000000000000d0e5         db  0x20 ; ' '
000000000000d0e6         db  0x83 ; '.'
000000000000d0e7         db  0x04 ; '.'
000000000000d0e8         db  0x02 ; '.'
000000000000d0e9         db  0xc2 ; '.'
000000000000d0ea         db  0x0a ; '.'
000000000000d0eb         db  0x0e ; '.'
000000000000d0ec         db  0x18 ; '.'
000000000000d0ed         db  0x41 ; 'A'
000000000000d0ee         db  0x0e ; '.'
000000000000d0ef         db  0x10 ; '.'
000000000000d0f0         db  0x42 ; 'B'
000000000000d0f1         db  0x0e ; '.'
000000000000d0f2         db  0x08 ; '.'
000000000000d0f3         db  0x44 ; 'D'
000000000000d0f4         db  0x0b ; '.'
000000000000d0f5         db  0x00 ; '.'
000000000000d0f6         db  0x00 ; '.'
000000000000d0f7         db  0x00 ; '.'
000000000000d0f8         dd         0x00000060                                  ; Length of the record
000000000000d0fc         dd         0x00000efc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d100         db         0x50, 0xae, 2 dup (0xff)                    ; begin 0x7f50
000000000000d104         db         0x78, 0x07, 2 dup (0x00)                    ; length 0x778 (end at 0x86c8)
000000000000d108         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d109         db  0x42 ; 'B'
000000000000d10a         db  0x0e ; '.'
000000000000d10b         db  0x10 ; '.'
000000000000d10c         db  0x8e ; '.'
000000000000d10d         db  0x02 ; '.'
000000000000d10e         db  0x42 ; 'B'
000000000000d10f         db  0x0e ; '.'
000000000000d110         db  0x18 ; '.'
000000000000d111         db  0x8d ; '.'
000000000000d112         db  0x03 ; '.'
000000000000d113         db  0x42 ; 'B'
000000000000d114         db  0x0e ; '.'
000000000000d115         db  0x20 ; ' '
000000000000d116         db  0x8c ; '.'
000000000000d117         db  0x04 ; '.'
000000000000d118         db  0x41 ; 'A'
000000000000d119         db  0x0e ; '.'
000000000000d11a         db  0x28 ; '('
000000000000d11b         db  0x86 ; '.'
000000000000d11c         db  0x05 ; '.'
000000000000d11d         db  0x41 ; 'A'
000000000000d11e         db  0x0e ; '.'
000000000000d11f         db  0x30 ; '0'
000000000000d120         db  0x83 ; '.'
000000000000d121         db  0x06 ; '.'
000000000000d122         db  0x03 ; '.'
000000000000d123         db  0x19 ; '.'
000000000000d124         db  0x01 ; '.'
000000000000d125         db  0x0a ; '.'
000000000000d126         db  0x0e ; '.'
000000000000d127         db  0x28 ; '('
000000000000d128         db  0x44 ; 'D'
000000000000d129         db  0x0e ; '.'
000000000000d12a         db  0x20 ; ' '
000000000000d12b         db  0x42 ; 'B'
000000000000d12c         db  0x0e ; '.'
000000000000d12d         db  0x18 ; '.'
000000000000d12e         db  0x42 ; 'B'
000000000000d12f         db  0x0e ; '.'
000000000000d130         db  0x10 ; '.'
000000000000d131         db  0x42 ; 'B'
000000000000d132         db  0x0e ; '.'
000000000000d133         db  0x08 ; '.'
000000000000d134         db  0x45 ; 'E'
000000000000d135         db  0x0b ; '.'
000000000000d136         db  0x02 ; '.'
000000000000d137         db  0x6b ; 'k'
000000000000d138         db  0x0a ; '.'
000000000000d139         db  0x0e ; '.'
000000000000d13a         db  0x28 ; '('
000000000000d13b         db  0x44 ; 'D'
000000000000d13c         db  0x0e ; '.'
000000000000d13d         db  0x20 ; ' '
000000000000d13e         db  0x42 ; 'B'
000000000000d13f         db  0x0e ; '.'
000000000000d140         db  0x18 ; '.'
000000000000d141         db  0x42 ; 'B'
000000000000d142         db  0x0e ; '.'
000000000000d143         db  0x10 ; '.'
000000000000d144         db  0x42 ; 'B'
000000000000d145         db  0x0e ; '.'
000000000000d146         db  0x08 ; '.'
000000000000d147         db  0x4b ; 'K'
000000000000d148         db  0x0b ; '.'
000000000000d149         db  0x02 ; '.'
000000000000d14a         db  0xe2 ; '.'
000000000000d14b         db  0x0a ; '.'
000000000000d14c         db  0x0e ; '.'
000000000000d14d         db  0x28 ; '('
000000000000d14e         db  0x41 ; 'A'
000000000000d14f         db  0x0e ; '.'
000000000000d150         db  0x20 ; ' '
000000000000d151         db  0x42 ; 'B'
000000000000d152         db  0x0e ; '.'
000000000000d153         db  0x18 ; '.'
000000000000d154         db  0x42 ; 'B'
000000000000d155         db  0x0e ; '.'
000000000000d156         db  0x10 ; '.'
000000000000d157         db  0x42 ; 'B'
000000000000d158         db  0x0e ; '.'
000000000000d159         db  0x08 ; '.'
000000000000d15a         db  0x47 ; 'G'
000000000000d15b         db  0x0b ; '.'
000000000000d15c         dd         0x00000014                                  ; Length of the record
000000000000d160         dd         0x00000f60                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d164         db         0x6c, 0xb5, 2 dup (0xff)                    ; begin 0x86d0
000000000000d168         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x86f9)
000000000000d16c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d16d         db  0x54 ; 'T'
000000000000d16e         db  0x0e ; '.'
000000000000d16f         db  0x10 ; '.'
000000000000d170         db  0x54 ; 'T'
000000000000d171         db  0x0e ; '.'
000000000000d172         db  0x08 ; '.'
000000000000d173         db  0x00 ; '.'
000000000000d174         dd         0x00000060                                  ; Length of the record
000000000000d178         dd         0x00000f78                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d17c         db         0x84, 0xb5, 2 dup (0xff)                    ; begin 0x8700
000000000000d180         db         0x4e, 0x01, 2 dup (0x00)                    ; length 0x14e (end at 0x884e)
000000000000d184         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d185         db  0x42 ; 'B'
000000000000d186         db  0x0e ; '.'
000000000000d187         db  0x10 ; '.'
000000000000d188         db  0x8e ; '.'
000000000000d189         db  0x02 ; '.'
000000000000d18a         db  0x42 ; 'B'
000000000000d18b         db  0x0e ; '.'
000000000000d18c         db  0x18 ; '.'
000000000000d18d         db  0x8d ; '.'
000000000000d18e         db  0x03 ; '.'
000000000000d18f         db  0x42 ; 'B'
000000000000d190         db  0x0e ; '.'
000000000000d191         db  0x20 ; ' '
000000000000d192         db  0x8c ; '.'
000000000000d193         db  0x04 ; '.'
000000000000d194         db  0x41 ; 'A'
000000000000d195         db  0x0e ; '.'
000000000000d196         db  0x28 ; '('
000000000000d197         db  0x86 ; '.'
000000000000d198         db  0x05 ; '.'
000000000000d199         db  0x44 ; 'D'
000000000000d19a         db  0x0e ; '.'
000000000000d19b         db  0x30 ; '0'
000000000000d19c         db  0x83 ; '.'
000000000000d19d         db  0x06 ; '.'
000000000000d19e         db  0x02 ; '.'
000000000000d19f         db  0x8a ; '.'
000000000000d1a0         db  0x0a ; '.'
000000000000d1a1         db  0x0e ; '.'
000000000000d1a2         db  0x28 ; '('
000000000000d1a3         db  0x41 ; 'A'
000000000000d1a4         db  0x0e ; '.'
000000000000d1a5         db  0x20 ; ' '
000000000000d1a6         db  0x42 ; 'B'
000000000000d1a7         db  0x0e ; '.'
000000000000d1a8         db  0x18 ; '.'
000000000000d1a9         db  0x42 ; 'B'
000000000000d1aa         db  0x0e ; '.'
000000000000d1ab         db  0x10 ; '.'
000000000000d1ac         db  0x42 ; 'B'
000000000000d1ad         db  0x0e ; '.'
000000000000d1ae         db  0x08 ; '.'
000000000000d1af         db  0x44 ; 'D'
000000000000d1b0         db  0x0b ; '.'
000000000000d1b1         db  0x41 ; 'A'
000000000000d1b2         db  0x0a ; '.'
000000000000d1b3         db  0x0e ; '.'
000000000000d1b4         db  0x28 ; '('
000000000000d1b5         db  0x45 ; 'E'
000000000000d1b6         db  0x0e ; '.'
000000000000d1b7         db  0x20 ; ' '
000000000000d1b8         db  0x42 ; 'B'
000000000000d1b9         db  0x0e ; '.'
000000000000d1ba         db  0x18 ; '.'
000000000000d1bb         db  0x42 ; 'B'
000000000000d1bc         db  0x0e ; '.'
000000000000d1bd         db  0x10 ; '.'
000000000000d1be         db  0x42 ; 'B'
000000000000d1bf         db  0x0e ; '.'
000000000000d1c0         db  0x08 ; '.'
000000000000d1c1         db  0x44 ; 'D'
000000000000d1c2         db  0x0b ; '.'
000000000000d1c3         db  0x41 ; 'A'
000000000000d1c4         db  0x0a ; '.'
000000000000d1c5         db  0x0e ; '.'
000000000000d1c6         db  0x28 ; '('
000000000000d1c7         db  0x43 ; 'C'
000000000000d1c8         db  0x0e ; '.'
000000000000d1c9         db  0x20 ; ' '
000000000000d1ca         db  0x42 ; 'B'
000000000000d1cb         db  0x0e ; '.'
000000000000d1cc         db  0x18 ; '.'
000000000000d1cd         db  0x42 ; 'B'
000000000000d1ce         db  0x0e ; '.'
000000000000d1cf         db  0x10 ; '.'
000000000000d1d0         db  0x42 ; 'B'
000000000000d1d1         db  0x0e ; '.'
000000000000d1d2         db  0x08 ; '.'
000000000000d1d3         db  0x46 ; 'F'
000000000000d1d4         db  0x0b ; '.'
000000000000d1d5         db  0x00 ; '.'
000000000000d1d6         db  0x00 ; '.'
000000000000d1d7         db  0x00 ; '.'
000000000000d1d8         dd         0x0000003c                                  ; Length of the record
000000000000d1dc         dd         0x00000fdc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d1e0         db         0x70, 0xb6, 2 dup (0xff)                    ; begin 0x8850
000000000000d1e4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x88d3)
000000000000d1e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d1e9         db  0x42 ; 'B'
000000000000d1ea         db  0x0e ; '.'
000000000000d1eb         db  0x10 ; '.'
000000000000d1ec         db  0x8d ; '.'
000000000000d1ed         db  0x02 ; '.'
000000000000d1ee         db  0x42 ; 'B'
000000000000d1ef         db  0x0e ; '.'
000000000000d1f0         db  0x18 ; '.'
000000000000d1f1         db  0x8c ; '.'
000000000000d1f2         db  0x03 ; '.'
000000000000d1f3         db  0x44 ; 'D'
000000000000d1f4         db  0x0e ; '.'
000000000000d1f5         db  0x20 ; ' '
000000000000d1f6         db  0x86 ; '.'
000000000000d1f7         db  0x04 ; '.'
000000000000d1f8         db  0x41 ; 'A'
000000000000d1f9         db  0x0e ; '.'
000000000000d1fa         db  0x28 ; '('
000000000000d1fb         db  0x83 ; '.'
000000000000d1fc         db  0x05 ; '.'
000000000000d1fd         db  0x4a ; 'J'
000000000000d1fe         db  0x0e ; '.'
000000000000d1ff         db  0x40 ; '@'
000000000000d200         db  0x02 ; '.'
000000000000d201         db  0x64 ; 'd'
000000000000d202         db  0x0a ; '.'
000000000000d203         db  0x0e ; '.'
000000000000d204         db  0x28 ; '('
000000000000d205         db  0x41 ; 'A'
000000000000d206         db  0x0e ; '.'
000000000000d207         db  0x20 ; ' '
000000000000d208         db  0x41 ; 'A'
000000000000d209         db  0x0e ; '.'
000000000000d20a         db  0x18 ; '.'
000000000000d20b         db  0x42 ; 'B'
000000000000d20c         db  0x0e ; '.'
000000000000d20d         db  0x10 ; '.'
000000000000d20e         db  0x42 ; 'B'
000000000000d20f         db  0x0e ; '.'
000000000000d210         db  0x08 ; '.'
000000000000d211         db  0x41 ; 'A'
000000000000d212         db  0x0b ; '.'
000000000000d213         db  0x00 ; '.'
000000000000d214         db  0x00 ; '.'
000000000000d215         db  0x00 ; '.'
000000000000d216         db  0x00 ; '.'
000000000000d217         db  0x00 ; '.'
000000000000d218         dd         0x0000004c                                  ; Length of the record
000000000000d21c         dd         0x0000101c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d220         db         0xc0, 0xb6, 2 dup (0xff)                    ; begin 0x88e0
000000000000d224         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x895d)
000000000000d228         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d229         db  0x42 ; 'B'
000000000000d22a         db  0x0e ; '.'
000000000000d22b         db  0x10 ; '.'
000000000000d22c         db  0x8c ; '.'
000000000000d22d         db  0x02 ; '.'
000000000000d22e         db  0x41 ; 'A'
000000000000d22f         db  0x0e ; '.'
000000000000d230         db  0x18 ; '.'
000000000000d231         db  0x86 ; '.'
000000000000d232         db  0x03 ; '.'
000000000000d233         db  0x44 ; 'D'
000000000000d234         db  0x0e ; '.'
000000000000d235         db  0x20 ; ' '
000000000000d236         db  0x83 ; '.'
000000000000d237         db  0x04 ; '.'
000000000000d238         db  0x69 ; 'i'
000000000000d239         db  0x0a ; '.'
000000000000d23a         db  0x0e ; '.'
000000000000d23b         db  0x18 ; '.'
000000000000d23c         db  0x41 ; 'A'
000000000000d23d         db  0x0e ; '.'
000000000000d23e         db  0x10 ; '.'
000000000000d23f         db  0x42 ; 'B'
000000000000d240         db  0x0e ; '.'
000000000000d241         db  0x08 ; '.'
000000000000d242         db  0x45 ; 'E'
000000000000d243         db  0x0b ; '.'
000000000000d244         db  0x55 ; 'U'
000000000000d245         db  0x0a ; '.'
000000000000d246         db  0x0e ; '.'
000000000000d247         db  0x18 ; '.'
000000000000d248         db  0x41 ; 'A'
000000000000d249         db  0x0e ; '.'
000000000000d24a         db  0x10 ; '.'
000000000000d24b         db  0x42 ; 'B'
000000000000d24c         db  0x0e ; '.'
000000000000d24d         db  0x08 ; '.'
000000000000d24e         db  0x48 ; 'H'
000000000000d24f         db  0x0b ; '.'
000000000000d250         db  0x41 ; 'A'
000000000000d251         db  0x0a ; '.'
000000000000d252         db  0x0e ; '.'
000000000000d253         db  0x18 ; '.'
000000000000d254         db  0x46 ; 'F'
000000000000d255         db  0x0e ; '.'
000000000000d256         db  0x10 ; '.'
000000000000d257         db  0x42 ; 'B'
000000000000d258         db  0x0e ; '.'
000000000000d259         db  0x08 ; '.'
000000000000d25a         db  0x47 ; 'G'
000000000000d25b         db  0x0b ; '.'
000000000000d25c         db  0x49 ; 'I'
000000000000d25d         db  0x0e ; '.'
000000000000d25e         db  0x18 ; '.'
000000000000d25f         db  0x41 ; 'A'
000000000000d260         db  0x0e ; '.'
000000000000d261         db  0x10 ; '.'
000000000000d262         db  0x42 ; 'B'
000000000000d263         db  0x0e ; '.'
000000000000d264         db  0x08 ; '.'
000000000000d265         db  0x00 ; '.'
000000000000d266         db  0x00 ; '.'
000000000000d267         db  0x00 ; '.'
000000000000d268         dd         0x00000010                                  ; Length of the record
000000000000d26c         dd         0x0000106c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d270         db         0xf0, 0xb6, 2 dup (0xff)                    ; begin 0x8960
000000000000d274         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x8970)
000000000000d278         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d279         align      4
000000000000d27c         dd         0x00000018                                  ; Length of the record
000000000000d280         dd         0x00001080                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d284         db         0xec, 0xb6, 2 dup (0xff)                    ; begin 0x8970
000000000000d288         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x89fa)
000000000000d28c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d28d         db  0x02 ; '.'
000000000000d28e         db  0x80 ; '.'
000000000000d28f         db  0x0e ; '.'
000000000000d290         db  0x10 ; '.'
000000000000d291         db  0x00 ; '.'
000000000000d292         db  0x00 ; '.'
000000000000d293         db  0x00 ; '.'
000000000000d294         db  0x00 ; '.'
000000000000d295         db  0x00 ; '.'
000000000000d296         db  0x00 ; '.'
000000000000d297         db  0x00 ; '.'
000000000000d298         dd         0x0000001c                                  ; Length of the record
000000000000d29c         dd         0x0000109c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d2a0         db         0x60, 0xb7, 2 dup (0xff)                    ; begin 0x8a00
000000000000d2a4         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x8a6e)
000000000000d2a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d2a9         db  0x44 ; 'D'
000000000000d2aa         db  0x0e ; '.'
000000000000d2ab         db  0x60 ; '`'
000000000000d2ac         db  0x7f ; '.'
000000000000d2ad         db  0x0a ; '.'
000000000000d2ae         db  0x0e ; '.'
000000000000d2af         db  0x08 ; '.'
000000000000d2b0         db  0x45 ; 'E'
000000000000d2b1         db  0x0b ; '.'
000000000000d2b2         db  0x00 ; '.'
000000000000d2b3         db  0x00 ; '.'
000000000000d2b4         db  0x00 ; '.'
000000000000d2b5         db  0x00 ; '.'
000000000000d2b6         db  0x00 ; '.'
000000000000d2b7         db  0x00 ; '.'
000000000000d2b8         dd         0x0000001c                                  ; Length of the record
000000000000d2bc         dd         0x000010bc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d2c0         db         0xb0, 0xb7, 2 dup (0xff)                    ; begin 0x8a70
000000000000d2c4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x8ad0)
000000000000d2c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d2c9         db  0x44 ; 'D'
000000000000d2ca         db  0x0e ; '.'
000000000000d2cb         db  0x10 ; '.'
000000000000d2cc         db  0x75 ; 'u'
000000000000d2cd         db  0x0a ; '.'
000000000000d2ce         db  0x0e ; '.'
000000000000d2cf         db  0x08 ; '.'
000000000000d2d0         db  0x47 ; 'G'
000000000000d2d1         db  0x0b ; '.'
000000000000d2d2         db  0x5f ; '_'
000000000000d2d3         db  0x0e ; '.'
000000000000d2d4         db  0x08 ; '.'
000000000000d2d5         db  0x00 ; '.'
000000000000d2d6         db  0x00 ; '.'
000000000000d2d7         db  0x00 ; '.'
000000000000d2d8         dd         0x00000010                                  ; Length of the record
000000000000d2dc         dd         0x000010dc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d2e0         db         0xf0, 0xb7, 2 dup (0xff)                    ; begin 0x8ad0
000000000000d2e4         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x8b63)
000000000000d2e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d2e9         align      4
000000000000d2ec         dd         0x00000010                                  ; Length of the record
000000000000d2f0         dd         0x000010f0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d2f4         db         0x7c, 0xb8, 2 dup (0xff)                    ; begin 0x8b70
000000000000d2f8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x8b80)
000000000000d2fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d2fd         align      256
000000000000d300         dd         0x00000010                                  ; Length of the record
000000000000d304         dd         0x00001104                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d308         db         0x78, 0xb8, 2 dup (0xff)                    ; begin 0x8b80
000000000000d30c         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x8b87)
000000000000d310         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d311         align      4
000000000000d314         dd         0x00000018                                  ; Length of the record
000000000000d318         dd         0x00001118                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d31c         db         0x74, 0xb8, 2 dup (0xff)                    ; begin 0x8b90
000000000000d320         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x8bb2)
000000000000d324         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d325         db  0x41 ; 'A'
000000000000d326         db  0x0e ; '.'
000000000000d327         db  0x10 ; '.'
000000000000d328         db  0x83 ; '.'
000000000000d329         db  0x02 ; '.'
000000000000d32a         db  0x5b ; '['
000000000000d32b         db  0x0a ; '.'
000000000000d32c         db  0x0e ; '.'
000000000000d32d         db  0x08 ; '.'
000000000000d32e         db  0x41 ; 'A'
000000000000d32f         db  0x0b ; '.'
000000000000d330         dd         0x0000005c                                  ; Length of the record
000000000000d334         dd         0x00001134                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d338         db         0x88, 0xb8, 2 dup (0xff)                    ; begin 0x8bc0
000000000000d33c         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x8cde)
000000000000d340         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d341         db  0x42 ; 'B'
000000000000d342         db  0x0e ; '.'
000000000000d343         db  0x10 ; '.'
000000000000d344         db  0x8e ; '.'
000000000000d345         db  0x02 ; '.'
000000000000d346         db  0x42 ; 'B'
000000000000d347         db  0x0e ; '.'
000000000000d348         db  0x18 ; '.'
000000000000d349         db  0x8d ; '.'
000000000000d34a         db  0x03 ; '.'
000000000000d34b         db  0x45 ; 'E'
000000000000d34c         db  0x0e ; '.'
000000000000d34d         db  0x20 ; ' '
000000000000d34e         db  0x8c ; '.'
000000000000d34f         db  0x04 ; '.'
000000000000d350         db  0x41 ; 'A'
000000000000d351         db  0x0e ; '.'
000000000000d352         db  0x28 ; '('
000000000000d353         db  0x86 ; '.'
000000000000d354         db  0x05 ; '.'
000000000000d355         db  0x44 ; 'D'
000000000000d356         db  0x0e ; '.'
000000000000d357         db  0x30 ; '0'
000000000000d358         db  0x83 ; '.'
000000000000d359         db  0x06 ; '.'
000000000000d35a         db  0x02 ; '.'
000000000000d35b         db  0xa1 ; '.'
000000000000d35c         db  0x0a ; '.'
000000000000d35d         db  0x0e ; '.'
000000000000d35e         db  0x28 ; '('
000000000000d35f         db  0x44 ; 'D'
000000000000d360         db  0x0e ; '.'
000000000000d361         db  0x20 ; ' '
000000000000d362         db  0x42 ; 'B'
000000000000d363         db  0x0e ; '.'
000000000000d364         db  0x18 ; '.'
000000000000d365         db  0x42 ; 'B'
000000000000d366         db  0x0e ; '.'
000000000000d367         db  0x10 ; '.'
000000000000d368         db  0x42 ; 'B'
000000000000d369         db  0x0e ; '.'
000000000000d36a         db  0x08 ; '.'
000000000000d36b         db  0x47 ; 'G'
000000000000d36c         db  0x0b ; '.'
000000000000d36d         db  0x71 ; 'q'
000000000000d36e         db  0x0a ; '.'
000000000000d36f         db  0x0e ; '.'
000000000000d370         db  0x28 ; '('
000000000000d371         db  0x41 ; 'A'
000000000000d372         db  0x0e ; '.'
000000000000d373         db  0x20 ; ' '
000000000000d374         db  0x42 ; 'B'
000000000000d375         db  0x0e ; '.'
000000000000d376         db  0x18 ; '.'
000000000000d377         db  0x42 ; 'B'
000000000000d378         db  0x0e ; '.'
000000000000d379         db  0x10 ; '.'
000000000000d37a         db  0x42 ; 'B'
000000000000d37b         db  0x0e ; '.'
000000000000d37c         db  0x08 ; '.'
000000000000d37d         db  0x48 ; 'H'
000000000000d37e         db  0x0b ; '.'
000000000000d37f         db  0x53 ; 'S'
000000000000d380         db  0x0e ; '.'
000000000000d381         db  0x28 ; '('
000000000000d382         db  0x44 ; 'D'
000000000000d383         db  0x0e ; '.'
000000000000d384         db  0x20 ; ' '
000000000000d385         db  0x42 ; 'B'
000000000000d386         db  0x0e ; '.'
000000000000d387         db  0x18 ; '.'
000000000000d388         db  0x42 ; 'B'
000000000000d389         db  0x0e ; '.'
000000000000d38a         db  0x10 ; '.'
000000000000d38b         db  0x42 ; 'B'
000000000000d38c         db  0x0e ; '.'
000000000000d38d         db  0x08 ; '.'
000000000000d38e         db  0x00 ; '.'
000000000000d38f         db  0x00 ; '.'
000000000000d390         dd         0x00000010                                  ; Length of the record
000000000000d394         dd         0x00001194                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d398         db         0x48, 0xb9, 2 dup (0xff)                    ; begin 0x8ce0
000000000000d39c         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x8d57)
000000000000d3a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d3a1         align      4
000000000000d3a4         dd         0x0000005c                                  ; Length of the record
000000000000d3a8         dd         0x000011a8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d3ac         db         0xb4, 0xb9, 2 dup (0xff)                    ; begin 0x8d60
000000000000d3b0         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x8ea0)
000000000000d3b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d3b5         db  0x42 ; 'B'
000000000000d3b6         db  0x0e ; '.'
000000000000d3b7         db  0x10 ; '.'
000000000000d3b8         db  0x8f ; '.'
000000000000d3b9         db  0x02 ; '.'
000000000000d3ba         db  0x42 ; 'B'
000000000000d3bb         db  0x0e ; '.'
000000000000d3bc         db  0x18 ; '.'
000000000000d3bd         db  0x8e ; '.'
000000000000d3be         db  0x03 ; '.'
000000000000d3bf         db  0x42 ; 'B'
000000000000d3c0         db  0x0e ; '.'
000000000000d3c1         db  0x20 ; ' '
000000000000d3c2         db  0x8d ; '.'
000000000000d3c3         db  0x04 ; '.'
000000000000d3c4         db  0x42 ; 'B'
000000000000d3c5         db  0x0e ; '.'
000000000000d3c6         db  0x28 ; '('
000000000000d3c7         db  0x8c ; '.'
000000000000d3c8         db  0x05 ; '.'
000000000000d3c9         db  0x41 ; 'A'
000000000000d3ca         db  0x0e ; '.'
000000000000d3cb         db  0x30 ; '0'
000000000000d3cc         db  0x86 ; '.'
000000000000d3cd         db  0x06 ; '.'
000000000000d3ce         db  0x41 ; 'A'
000000000000d3cf         db  0x0e ; '.'
000000000000d3d0         db  0x38 ; '8'
000000000000d3d1         db  0x83 ; '.'
000000000000d3d2         db  0x07 ; '.'
000000000000d3d3         db  0x44 ; 'D'
000000000000d3d4         db  0x0e ; '.'
000000000000d3d5         db  0x40 ; '@'
000000000000d3d6         db  0x02 ; '.'
000000000000d3d7         db  0xee ; '.'
000000000000d3d8         db  0x0a ; '.'
000000000000d3d9         db  0x0e ; '.'
000000000000d3da         db  0x38 ; '8'
000000000000d3db         db  0x46 ; 'F'
000000000000d3dc         db  0x0e ; '.'
000000000000d3dd         db  0x30 ; '0'
000000000000d3de         db  0x41 ; 'A'
000000000000d3df         db  0x0e ; '.'
000000000000d3e0         db  0x28 ; '('
000000000000d3e1         db  0x42 ; 'B'
000000000000d3e2         db  0x0e ; '.'
000000000000d3e3         db  0x20 ; ' '
000000000000d3e4         db  0x42 ; 'B'
000000000000d3e5         db  0x0e ; '.'
000000000000d3e6         db  0x18 ; '.'
000000000000d3e7         db  0x42 ; 'B'
000000000000d3e8         db  0x0e ; '.'
000000000000d3e9         db  0x10 ; '.'
000000000000d3ea         db  0x42 ; 'B'
000000000000d3eb         db  0x0e ; '.'
000000000000d3ec         db  0x08 ; '.'
000000000000d3ed         db  0x45 ; 'E'
000000000000d3ee         db  0x0b ; '.'
000000000000d3ef         db  0x63 ; 'c'
000000000000d3f0         db  0x0e ; '.'
000000000000d3f1         db  0x38 ; '8'
000000000000d3f2         db  0x43 ; 'C'
000000000000d3f3         db  0x0e ; '.'
000000000000d3f4         db  0x30 ; '0'
000000000000d3f5         db  0x41 ; 'A'
000000000000d3f6         db  0x0e ; '.'
000000000000d3f7         db  0x28 ; '('
000000000000d3f8         db  0x42 ; 'B'
000000000000d3f9         db  0x0e ; '.'
000000000000d3fa         db  0x20 ; ' '
000000000000d3fb         db  0x42 ; 'B'
000000000000d3fc         db  0x0e ; '.'
000000000000d3fd         db  0x18 ; '.'
000000000000d3fe         db  0x42 ; 'B'
000000000000d3ff         db  0x0e ; '.'
000000000000d400         db  0x10 ; '.'
000000000000d401         db  0x42 ; 'B'
000000000000d402         db  0x0e ; '.'
000000000000d403         db  0x08 ; '.'
000000000000d404         dd         0x00000010                                  ; Length of the record
000000000000d408         dd         0x00001208                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d40c         db         0x94, 0xba, 2 dup (0xff)                    ; begin 0x8ea0
000000000000d410         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8ea5)
000000000000d414         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d415         align      8
000000000000d418         dd         0x00000010                                  ; Length of the record
000000000000d41c         dd         0x0000121c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d420         db         0x90, 0xba, 2 dup (0xff)                    ; begin 0x8eb0
000000000000d424         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8eb5)
000000000000d428         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d429         align      4
000000000000d42c         dd         0x00000010                                  ; Length of the record
000000000000d430         dd         0x00001230                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d434         db         0x8c, 0xba, 2 dup (0xff)                    ; begin 0x8ec0
000000000000d438         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8ec5)
000000000000d43c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d43d         align      64
000000000000d440         dd         0x00000010                                  ; Length of the record
000000000000d444         dd         0x00001244                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d448         db         0x88, 0xba, 2 dup (0xff)                    ; begin 0x8ed0
000000000000d44c         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x8f19)
000000000000d450         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d451         align      4
000000000000d454         dd         0x00000010                                  ; Length of the record
000000000000d458         dd         0x00001258                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d45c         db         0xc4, 0xba, 2 dup (0xff)                    ; begin 0x8f20
000000000000d460         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x8f78)
000000000000d464         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d465         align      8
000000000000d468         dd         0x00000038                                  ; Length of the record
000000000000d46c         dd         0x0000126c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d470         db         0x10, 0xbb, 2 dup (0xff)                    ; begin 0x8f80
000000000000d474         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x90c7)
000000000000d478         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d479         db  0x42 ; 'B'
000000000000d47a         db  0x0e ; '.'
000000000000d47b         db  0x10 ; '.'
000000000000d47c         db  0x8d ; '.'
000000000000d47d         db  0x02 ; '.'
000000000000d47e         db  0x42 ; 'B'
000000000000d47f         db  0x0e ; '.'
000000000000d480         db  0x18 ; '.'
000000000000d481         db  0x8c ; '.'
000000000000d482         db  0x03 ; '.'
000000000000d483         db  0x44 ; 'D'
000000000000d484         db  0x0e ; '.'
000000000000d485         db  0x20 ; ' '
000000000000d486         db  0x86 ; '.'
000000000000d487         db  0x04 ; '.'
000000000000d488         db  0x41 ; 'A'
000000000000d489         db  0x0e ; '.'
000000000000d48a         db  0x28 ; '('
000000000000d48b         db  0x83 ; '.'
000000000000d48c         db  0x05 ; '.'
000000000000d48d         db  0x46 ; 'F'
000000000000d48e         db  0x0e ; '.'
000000000000d48f         db  0x30 ; '0'
000000000000d490         db  0x02 ; '.'
000000000000d491         db  0xcd ; '.'
000000000000d492         db  0x0a ; '.'
000000000000d493         db  0x0e ; '.'
000000000000d494         db  0x28 ; '('
000000000000d495         db  0x47 ; 'G'
000000000000d496         db  0x0e ; '.'
000000000000d497         db  0x20 ; ' '
000000000000d498         db  0x41 ; 'A'
000000000000d499         db  0x0e ; '.'
000000000000d49a         db  0x18 ; '.'
000000000000d49b         db  0x42 ; 'B'
000000000000d49c         db  0x0e ; '.'
000000000000d49d         db  0x10 ; '.'
000000000000d49e         db  0x42 ; 'B'
000000000000d49f         db  0x0e ; '.'
000000000000d4a0         db  0x08 ; '.'
000000000000d4a1         db  0x58 ; 'X'
000000000000d4a2         db  0x0b ; '.'
000000000000d4a3         db  0x00 ; '.'
000000000000d4a4         dd         0x00000034                                  ; Length of the record
000000000000d4a8         dd         0x000012a8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d4ac         db         0x24, 0xbc, 2 dup (0xff)                    ; begin 0x90d0
000000000000d4b0         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x912b)
000000000000d4b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d4b5         db  0x42 ; 'B'
000000000000d4b6         db  0x0e ; '.'
000000000000d4b7         db  0x10 ; '.'
000000000000d4b8         db  0x8c ; '.'
000000000000d4b9         db  0x02 ; '.'
000000000000d4ba         db  0x41 ; 'A'
000000000000d4bb         db  0x0e ; '.'
000000000000d4bc         db  0x18 ; '.'
000000000000d4bd         db  0x86 ; '.'
000000000000d4be         db  0x03 ; '.'
000000000000d4bf         db  0x44 ; 'D'
000000000000d4c0         db  0x0e ; '.'
000000000000d4c1         db  0x20 ; ' '
000000000000d4c2         db  0x83 ; '.'
000000000000d4c3         db  0x04 ; '.'
000000000000d4c4         db  0x79 ; 'y'
000000000000d4c5         db  0x0a ; '.'
000000000000d4c6         db  0x0e ; '.'
000000000000d4c7         db  0x18 ; '.'
000000000000d4c8         db  0x44 ; 'D'
000000000000d4c9         db  0x0e ; '.'
000000000000d4ca         db  0x10 ; '.'
000000000000d4cb         db  0x42 ; 'B'
000000000000d4cc         db  0x0e ; '.'
000000000000d4cd         db  0x08 ; '.'
000000000000d4ce         db  0x4a ; 'J'
000000000000d4cf         db  0x0b ; '.'
000000000000d4d0         db  0x44 ; 'D'
000000000000d4d1         db  0x0e ; '.'
000000000000d4d2         db  0x18 ; '.'
000000000000d4d3         db  0x41 ; 'A'
000000000000d4d4         db  0x0e ; '.'
000000000000d4d5         db  0x10 ; '.'
000000000000d4d6         db  0x45 ; 'E'
000000000000d4d7         db  0x0e ; '.'
000000000000d4d8         db  0x08 ; '.'
000000000000d4d9         db  0x00 ; '.'
000000000000d4da         db  0x00 ; '.'
000000000000d4db         db  0x00 ; '.'
000000000000d4dc         dd         0x00000010                                  ; Length of the record
000000000000d4e0         dd         0x000012e0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d4e4         db         0x4c, 0xbc, 2 dup (0xff)                    ; begin 0x9130
000000000000d4e8         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x9171)
000000000000d4ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d4ed         db  0x7c ; '|'
000000000000d4ee         db  0x0e ; '.'
000000000000d4ef         db  0x10 ; '.'
000000000000d4f0         dd         0x00000030                                  ; Length of the record
000000000000d4f4         dd         0x000012f4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d4f8         db         0x88, 0xbc, 2 dup (0xff)                    ; begin 0x9180
000000000000d4fc         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x91f2)
000000000000d500         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d501         db  0x41 ; 'A'
000000000000d502         db  0x0e ; '.'
000000000000d503         db  0x10 ; '.'
000000000000d504         db  0x86 ; '.'
000000000000d505         db  0x02 ; '.'
000000000000d506         db  0x41 ; 'A'
000000000000d507         db  0x0e ; '.'
000000000000d508         db  0x18 ; '.'
000000000000d509         db  0x83 ; '.'
000000000000d50a         db  0x03 ; '.'
000000000000d50b         db  0x4a ; 'J'
000000000000d50c         db  0x0e ; '.'
000000000000d50d         db  0x20 ; ' '
000000000000d50e         db  0x02 ; '.'
000000000000d50f         db  0x53 ; 'S'
000000000000d510         db  0x0a ; '.'
000000000000d511         db  0x0e ; '.'
000000000000d512         db  0x18 ; '.'
000000000000d513         db  0x41 ; 'A'
000000000000d514         db  0x0e ; '.'
000000000000d515         db  0x10 ; '.'
000000000000d516         db  0x41 ; 'A'
000000000000d517         db  0x0e ; '.'
000000000000d518         db  0x08 ; '.'
000000000000d519         db  0x47 ; 'G'
000000000000d51a         db  0x0b ; '.'
000000000000d51b         db  0x47 ; 'G'
000000000000d51c         db  0x0e ; '.'
000000000000d51d         db  0x18 ; '.'
000000000000d51e         db  0x41 ; 'A'
000000000000d51f         db  0x0e ; '.'
000000000000d520         db  0x10 ; '.'
000000000000d521         db  0x41 ; 'A'
000000000000d522         db  0x0e ; '.'
000000000000d523         db  0x08 ; '.'
000000000000d524         dd         0x00000010                                  ; Length of the record
000000000000d528         dd         0x00001328                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d52c         db         0xd4, 0xbc, 2 dup (0xff)                    ; begin 0x9200
000000000000d530         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x9265)
000000000000d534         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d535         align      8
000000000000d538         dd         0x00000048                                  ; Length of the record
000000000000d53c         dd         0x0000133c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d540         db         0x30, 0xbd, 2 dup (0xff)                    ; begin 0x9270
000000000000d544         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x92da)
000000000000d548         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d549         db  0x42 ; 'B'
000000000000d54a         db  0x0e ; '.'
000000000000d54b         db  0x10 ; '.'
000000000000d54c         db  0x8f ; '.'
000000000000d54d         db  0x02 ; '.'
000000000000d54e         db  0x42 ; 'B'
000000000000d54f         db  0x0e ; '.'
000000000000d550         db  0x18 ; '.'
000000000000d551         db  0x8e ; '.'
000000000000d552         db  0x03 ; '.'
000000000000d553         db  0x42 ; 'B'
000000000000d554         db  0x0e ; '.'
000000000000d555         db  0x20 ; ' '
000000000000d556         db  0x8d ; '.'
000000000000d557         db  0x04 ; '.'
000000000000d558         db  0x42 ; 'B'
000000000000d559         db  0x0e ; '.'
000000000000d55a         db  0x28 ; '('
000000000000d55b         db  0x8c ; '.'
000000000000d55c         db  0x05 ; '.'
000000000000d55d         db  0x41 ; 'A'
000000000000d55e         db  0x0e ; '.'
000000000000d55f         db  0x30 ; '0'
000000000000d560         db  0x86 ; '.'
000000000000d561         db  0x06 ; '.'
000000000000d562         db  0x41 ; 'A'
000000000000d563         db  0x0e ; '.'
000000000000d564         db  0x38 ; '8'
000000000000d565         db  0x83 ; '.'
000000000000d566         db  0x07 ; '.'
000000000000d567         db  0x44 ; 'D'
000000000000d568         db  0x0e ; '.'
000000000000d569         db  0x40 ; '@'
000000000000d56a         db  0x02 ; '.'
000000000000d56b         db  0x4a ; 'J'
000000000000d56c         db  0x0a ; '.'
000000000000d56d         db  0x0e ; '.'
000000000000d56e         db  0x38 ; '8'
000000000000d56f         db  0x44 ; 'D'
000000000000d570         db  0x0e ; '.'
000000000000d571         db  0x30 ; '0'
000000000000d572         db  0x41 ; 'A'
000000000000d573         db  0x0e ; '.'
000000000000d574         db  0x28 ; '('
000000000000d575         db  0x42 ; 'B'
000000000000d576         db  0x0e ; '.'
000000000000d577         db  0x20 ; ' '
000000000000d578         db  0x42 ; 'B'
000000000000d579         db  0x0e ; '.'
000000000000d57a         db  0x18 ; '.'
000000000000d57b         db  0x42 ; 'B'
000000000000d57c         db  0x0e ; '.'
000000000000d57d         db  0x10 ; '.'
000000000000d57e         db  0x42 ; 'B'
000000000000d57f         db  0x0e ; '.'
000000000000d580         db  0x08 ; '.'
000000000000d581         db  0x41 ; 'A'
000000000000d582         db  0x0b ; '.'
000000000000d583         db  0x00 ; '.'
000000000000d584         dd         0x00000010                                  ; Length of the record
000000000000d588         dd         0x00001388                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d58c         db         0x54, 0xbd, 2 dup (0xff)                    ; begin 0x92e0
000000000000d590         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x9311)
000000000000d594         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d595         align      8
000000000000d598         dd         0x00000010                                  ; Length of the record
000000000000d59c         dd         0x0000139c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d5a0         db         0x80, 0xbd, 2 dup (0xff)                    ; begin 0x9320
000000000000d5a4         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x9340)
000000000000d5a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d5a9         align      4
000000000000d5ac         dd         0x00000048                                  ; Length of the record
000000000000d5b0         dd         0x000013b0                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d5b4         db         0x8c, 0xbd, 2 dup (0xff)                    ; begin 0x9340
000000000000d5b8         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x94f4)
000000000000d5bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d5bd         db  0x42 ; 'B'
000000000000d5be         db  0x0e ; '.'
000000000000d5bf         db  0x10 ; '.'
000000000000d5c0         db  0x8f ; '.'
000000000000d5c1         db  0x02 ; '.'
000000000000d5c2         db  0x42 ; 'B'
000000000000d5c3         db  0x0e ; '.'
000000000000d5c4         db  0x18 ; '.'
000000000000d5c5         db  0x8e ; '.'
000000000000d5c6         db  0x03 ; '.'
000000000000d5c7         db  0x49 ; 'I'
000000000000d5c8         db  0x0e ; '.'
000000000000d5c9         db  0x20 ; ' '
000000000000d5ca         db  0x8d ; '.'
000000000000d5cb         db  0x04 ; '.'
000000000000d5cc         db  0x42 ; 'B'
000000000000d5cd         db  0x0e ; '.'
000000000000d5ce         db  0x28 ; '('
000000000000d5cf         db  0x8c ; '.'
000000000000d5d0         db  0x05 ; '.'
000000000000d5d1         db  0x44 ; 'D'
000000000000d5d2         db  0x0e ; '.'
000000000000d5d3         db  0x30 ; '0'
000000000000d5d4         db  0x86 ; '.'
000000000000d5d5         db  0x06 ; '.'
000000000000d5d6         db  0x41 ; 'A'
000000000000d5d7         db  0x0e ; '.'
000000000000d5d8         db  0x38 ; '8'
000000000000d5d9         db  0x83 ; '.'
000000000000d5da         db  0x07 ; '.'
000000000000d5db         db  0x52 ; 'R'
000000000000d5dc         db  0x0e ; '.'
000000000000d5dd         db  0x40 ; '@'
000000000000d5de         db  0x02 ; '.'
000000000000d5df         db  0xd8 ; '.'
000000000000d5e0         db  0x0a ; '.'
000000000000d5e1         db  0x0e ; '.'
000000000000d5e2         db  0x38 ; '8'
000000000000d5e3         db  0x44 ; 'D'
000000000000d5e4         db  0x0e ; '.'
000000000000d5e5         db  0x30 ; '0'
000000000000d5e6         db  0x41 ; 'A'
000000000000d5e7         db  0x0e ; '.'
000000000000d5e8         db  0x28 ; '('
000000000000d5e9         db  0x42 ; 'B'
000000000000d5ea         db  0x0e ; '.'
000000000000d5eb         db  0x20 ; ' '
000000000000d5ec         db  0x42 ; 'B'
000000000000d5ed         db  0x0e ; '.'
000000000000d5ee         db  0x18 ; '.'
000000000000d5ef         db  0x42 ; 'B'
000000000000d5f0         db  0x0e ; '.'
000000000000d5f1         db  0x10 ; '.'
000000000000d5f2         db  0x42 ; 'B'
000000000000d5f3         db  0x0e ; '.'
000000000000d5f4         db  0x08 ; '.'
000000000000d5f5         db  0x45 ; 'E'
000000000000d5f6         db  0x0b ; '.'
000000000000d5f7         db  0x00 ; '.'
000000000000d5f8         dd         0x00000028                                  ; Length of the record
000000000000d5fc         dd         0x000013fc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d600         db         0x00, 0xbf, 2 dup (0xff)                    ; begin 0x9500
000000000000d604         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x9590)
000000000000d608         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d609         db  0x42 ; 'B'
000000000000d60a         db  0x0e ; '.'
000000000000d60b         db  0x10 ; '.'
000000000000d60c         db  0x8c ; '.'
000000000000d60d         db  0x02 ; '.'
000000000000d60e         db  0x41 ; 'A'
000000000000d60f         db  0x0e ; '.'
000000000000d610         db  0x18 ; '.'
000000000000d611         db  0x86 ; '.'
000000000000d612         db  0x03 ; '.'
000000000000d613         db  0x44 ; 'D'
000000000000d614         db  0x0e ; '.'
000000000000d615         db  0x20 ; ' '
000000000000d616         db  0x83 ; '.'
000000000000d617         db  0x04 ; '.'
000000000000d618         db  0x02 ; '.'
000000000000d619         db  0x85 ; '.'
000000000000d61a         db  0x0e ; '.'
000000000000d61b         db  0x18 ; '.'
000000000000d61c         db  0x41 ; 'A'
000000000000d61d         db  0x0e ; '.'
000000000000d61e         db  0x10 ; '.'
000000000000d61f         db  0x42 ; 'B'
000000000000d620         db  0x0e ; '.'
000000000000d621         db  0x08 ; '.'
000000000000d622         db  0x00 ; '.'
000000000000d623         db  0x00 ; '.'
000000000000d624         dd         0x00000028                                  ; Length of the record
000000000000d628         dd         0x00001428                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d62c         db         0x64, 0xbf, 2 dup (0xff)                    ; begin 0x9590
000000000000d630         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x9666)
000000000000d634         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d635         db  0x42 ; 'B'
000000000000d636         db  0x0e ; '.'
000000000000d637         db  0x10 ; '.'
000000000000d638         db  0x8c ; '.'
000000000000d639         db  0x02 ; '.'
000000000000d63a         db  0x41 ; 'A'
000000000000d63b         db  0x0e ; '.'
000000000000d63c         db  0x18 ; '.'
000000000000d63d         db  0x86 ; '.'
000000000000d63e         db  0x03 ; '.'
000000000000d63f         db  0x44 ; 'D'
000000000000d640         db  0x0e ; '.'
000000000000d641         db  0x20 ; ' '
000000000000d642         db  0x83 ; '.'
000000000000d643         db  0x04 ; '.'
000000000000d644         db  0x02 ; '.'
000000000000d645         db  0xc4 ; '.'
000000000000d646         db  0x0e ; '.'
000000000000d647         db  0x18 ; '.'
000000000000d648         db  0x44 ; 'D'
000000000000d649         db  0x0e ; '.'
000000000000d64a         db  0x10 ; '.'
000000000000d64b         db  0x42 ; 'B'
000000000000d64c         db  0x0e ; '.'
000000000000d64d         db  0x08 ; '.'
000000000000d64e         db  0x00 ; '.'
000000000000d64f         db  0x00 ; '.'
000000000000d650         dd         0x00000034                                  ; Length of the record
000000000000d654         dd         0x00001454                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d658         db         0x18, 0xc0, 2 dup (0xff)                    ; begin 0x9670
000000000000d65c         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x98ae)
000000000000d660         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d661         db  0x42 ; 'B'
000000000000d662         db  0x0e ; '.'
000000000000d663         db  0x10 ; '.'
000000000000d664         db  0x8c ; '.'
000000000000d665         db  0x02 ; '.'
000000000000d666         db  0x41 ; 'A'
000000000000d667         db  0x0e ; '.'
000000000000d668         db  0x18 ; '.'
000000000000d669         db  0x86 ; '.'
000000000000d66a         db  0x03 ; '.'
000000000000d66b         db  0x44 ; 'D'
000000000000d66c         db  0x0e ; '.'
000000000000d66d         db  0x20 ; ' '
000000000000d66e         db  0x83 ; '.'
000000000000d66f         db  0x04 ; '.'
000000000000d670         db  0x44 ; 'D'
000000000000d671         db  0x0e ; '.'
000000000000d672         db  0x80 ; '.'
000000000000d673         db  0x01 ; '.'
000000000000d674         db  0x03 ; '.'
000000000000d675         db  0x91 ; '.'
000000000000d676         db  0x01 ; '.'
000000000000d677         db  0x0a ; '.'
000000000000d678         db  0x0e ; '.'
000000000000d679         db  0x20 ; ' '
000000000000d67a         db  0x41 ; 'A'
000000000000d67b         db  0x0e ; '.'
000000000000d67c         db  0x18 ; '.'
000000000000d67d         db  0x41 ; 'A'
000000000000d67e         db  0x0e ; '.'
000000000000d67f         db  0x10 ; '.'
000000000000d680         db  0x42 ; 'B'
000000000000d681         db  0x0e ; '.'
000000000000d682         db  0x08 ; '.'
000000000000d683         db  0x48 ; 'H'
000000000000d684         db  0x0b ; '.'
000000000000d685         db  0x00 ; '.'
000000000000d686         db  0x00 ; '.'
000000000000d687         db  0x00 ; '.'
000000000000d688         dd         0x00000038                                  ; Length of the record
000000000000d68c         dd         0x0000148c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d690         db         0x20, 0xc2, 2 dup (0xff)                    ; begin 0x98b0
000000000000d694         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x9b34)
000000000000d698         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d699         db  0x42 ; 'B'
000000000000d69a         db  0x0e ; '.'
000000000000d69b         db  0x10 ; '.'
000000000000d69c         db  0x8d ; '.'
000000000000d69d         db  0x02 ; '.'
000000000000d69e         db  0x42 ; 'B'
000000000000d69f         db  0x0e ; '.'
000000000000d6a0         db  0x18 ; '.'
000000000000d6a1         db  0x8c ; '.'
000000000000d6a2         db  0x03 ; '.'
000000000000d6a3         db  0x41 ; 'A'
000000000000d6a4         db  0x0e ; '.'
000000000000d6a5         db  0x20 ; ' '
000000000000d6a6         db  0x86 ; '.'
000000000000d6a7         db  0x04 ; '.'
000000000000d6a8         db  0x41 ; 'A'
000000000000d6a9         db  0x0e ; '.'
000000000000d6aa         db  0x28 ; '('
000000000000d6ab         db  0x83 ; '.'
000000000000d6ac         db  0x05 ; '.'
000000000000d6ad         db  0x44 ; 'D'
000000000000d6ae         db  0x0e ; '.'
000000000000d6af         db  0x40 ; '@'
000000000000d6b0         db  0x02 ; '.'
000000000000d6b1         db  0x5a ; 'Z'
000000000000d6b2         db  0x0a ; '.'
000000000000d6b3         db  0x0e ; '.'
000000000000d6b4         db  0x28 ; '('
000000000000d6b5         db  0x41 ; 'A'
000000000000d6b6         db  0x0e ; '.'
000000000000d6b7         db  0x20 ; ' '
000000000000d6b8         db  0x41 ; 'A'
000000000000d6b9         db  0x0e ; '.'
000000000000d6ba         db  0x18 ; '.'
000000000000d6bb         db  0x42 ; 'B'
000000000000d6bc         db  0x0e ; '.'
000000000000d6bd         db  0x10 ; '.'
000000000000d6be         db  0x42 ; 'B'
000000000000d6bf         db  0x0e ; '.'
000000000000d6c0         db  0x08 ; '.'
000000000000d6c1         db  0x46 ; 'F'
000000000000d6c2         db  0x0b ; '.'
000000000000d6c3         db  0x00 ; '.'
000000000000d6c4         dd         0x00000020                                  ; Length of the record
000000000000d6c8         dd         0x000014c8                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d6cc         db         0x74, 0xc4, 2 dup (0xff)                    ; begin 0x9b40
000000000000d6d0         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x9b99)
000000000000d6d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d6d5         db  0x41 ; 'A'
000000000000d6d6         db  0x0e ; '.'
000000000000d6d7         db  0x10 ; '.'
000000000000d6d8         db  0x83 ; '.'
000000000000d6d9         db  0x02 ; '.'
000000000000d6da         db  0x47 ; 'G'
000000000000d6db         db  0x0e ; '.'
000000000000d6dc         db  0x20 ; ' '
000000000000d6dd         db  0x7c ; '|'
000000000000d6de         db  0x0a ; '.'
000000000000d6df         db  0x0e ; '.'
000000000000d6e0         db  0x10 ; '.'
000000000000d6e1         db  0x41 ; 'A'
000000000000d6e2         db  0x0e ; '.'
000000000000d6e3         db  0x08 ; '.'
000000000000d6e4         db  0x4b ; 'K'
000000000000d6e5         db  0x0b ; '.'
000000000000d6e6         db  0x00 ; '.'
000000000000d6e7         db  0x00 ; '.'
000000000000d6e8         dd         0x00000034                                  ; Length of the record
000000000000d6ec         dd         0x000014ec                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d6f0         db         0xb0, 0xc4, 2 dup (0xff)                    ; begin 0x9ba0
000000000000d6f4         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x9da3)
000000000000d6f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d6f9         db  0x42 ; 'B'
000000000000d6fa         db  0x0e ; '.'
000000000000d6fb         db  0x10 ; '.'
000000000000d6fc         db  0x8c ; '.'
000000000000d6fd         db  0x02 ; '.'
000000000000d6fe         db  0x41 ; 'A'
000000000000d6ff         db  0x0e ; '.'
000000000000d700         db  0x18 ; '.'
000000000000d701         db  0x86 ; '.'
000000000000d702         db  0x03 ; '.'
000000000000d703         db  0x46 ; 'F'
000000000000d704         db  0x0e ; '.'
000000000000d705         db  0x20 ; ' '
000000000000d706         db  0x83 ; '.'
000000000000d707         db  0x04 ; '.'
000000000000d708         db  0x47 ; 'G'
000000000000d709         db  0x0e ; '.'
000000000000d70a         db  0x30 ; '0'
000000000000d70b         db  0x02 ; '.'
000000000000d70c         db  0x4a ; 'J'
000000000000d70d         db  0x0a ; '.'
000000000000d70e         db  0x0e ; '.'
000000000000d70f         db  0x20 ; ' '
000000000000d710         db  0x41 ; 'A'
000000000000d711         db  0x0e ; '.'
000000000000d712         db  0x18 ; '.'
000000000000d713         db  0x41 ; 'A'
000000000000d714         db  0x0e ; '.'
000000000000d715         db  0x10 ; '.'
000000000000d716         db  0x42 ; 'B'
000000000000d717         db  0x0e ; '.'
000000000000d718         db  0x08 ; '.'
000000000000d719         db  0x42 ; 'B'
000000000000d71a         db  0x0b ; '.'
000000000000d71b         db  0x00 ; '.'
000000000000d71c         db  0x00 ; '.'
000000000000d71d         db  0x00 ; '.'
000000000000d71e         db  0x00 ; '.'
000000000000d71f         db  0x00 ; '.'
000000000000d720         dd         0x00000010                                  ; Length of the record
000000000000d724         dd         0x00001524                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d728         db         0x88, 0xc6, 2 dup (0xff)                    ; begin 0x9db0
000000000000d72c         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x9dcb)
000000000000d730         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d731         align      4
000000000000d734         dd         0x00000010                                  ; Length of the record
000000000000d738         dd         0x00001538                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d73c         db         0x94, 0xc6, 2 dup (0xff)                    ; begin 0x9dd0
000000000000d740         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x9dd5)
000000000000d744         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d745         align      8
000000000000d748         dd         0x00000010                                  ; Length of the record
000000000000d74c         dd         0x0000154c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d750         db         0x90, 0xc6, 2 dup (0xff)                    ; begin 0x9de0
000000000000d754         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x9e15)
000000000000d758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d759         align      4
000000000000d75c         dd         0x00000010                                  ; Length of the record
000000000000d760         dd         0x00001560                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d764         db         0xbc, 0xc6, 2 dup (0xff)                    ; begin 0x9e20
000000000000d768         db         0x3e, 3 dup (0x00)                          ; length 0x3e (end at 0x9e5e)
000000000000d76c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d76d         db  0x79 ; 'y'
000000000000d76e         db  0x0e ; '.'
000000000000d76f         db  0x10 ; '.'
000000000000d770         dd         0x0000001c                                  ; Length of the record
000000000000d774         dd         0x00001574                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d778         db         0xe8, 0xc6, 2 dup (0xff)                    ; begin 0x9e60
000000000000d77c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x9e9c)
000000000000d780         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d781         db  0x44 ; 'D'
000000000000d782         db  0x0e ; '.'
000000000000d783         db  0x10 ; '.'
000000000000d784         db  0x61 ; 'a'
000000000000d785         db  0x0a ; '.'
000000000000d786         db  0x0e ; '.'
000000000000d787         db  0x08 ; '.'
000000000000d788         db  0x4b ; 'K'
000000000000d789         db  0x0b ; '.'
000000000000d78a         db  0x4b ; 'K'
000000000000d78b         db  0x0e ; '.'
000000000000d78c         db  0x08 ; '.'
000000000000d78d         db  0x00 ; '.'
000000000000d78e         db  0x00 ; '.'
000000000000d78f         db  0x00 ; '.'
000000000000d790         dd         0x0000001c                                  ; Length of the record
000000000000d794         dd         0x00001594                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d798         db         0x08, 0xc7, 2 dup (0xff)                    ; begin 0x9ea0
000000000000d79c         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x9f0e)
000000000000d7a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d7a1         db  0x44 ; 'D'
000000000000d7a2         db  0x0e ; '.'
000000000000d7a3         db  0x60 ; '`'
000000000000d7a4         db  0x7e ; '~'
000000000000d7a5         db  0x0a ; '.'
000000000000d7a6         db  0x0e ; '.'
000000000000d7a7         db  0x08 ; '.'
000000000000d7a8         db  0x46 ; 'F'
000000000000d7a9         db  0x0b ; '.'
000000000000d7aa         db  0x00 ; '.'
000000000000d7ab         db  0x00 ; '.'
000000000000d7ac         db  0x00 ; '.'
000000000000d7ad         db  0x00 ; '.'
000000000000d7ae         db  0x00 ; '.'
000000000000d7af         db  0x00 ; '.'
000000000000d7b0         dd         0x0000005c                                  ; Length of the record
000000000000d7b4         dd         0x000015b4                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d7b8         db         0x58, 0xc7, 2 dup (0xff)                    ; begin 0x9f10
000000000000d7bc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x9f90)
000000000000d7c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d7c1         db  0x42 ; 'B'
000000000000d7c2         db  0x0e ; '.'
000000000000d7c3         db  0x10 ; '.'
000000000000d7c4         db  0x8d ; '.'
000000000000d7c5         db  0x02 ; '.'
000000000000d7c6         db  0x42 ; 'B'
000000000000d7c7         db  0x0e ; '.'
000000000000d7c8         db  0x18 ; '.'
000000000000d7c9         db  0x8c ; '.'
000000000000d7ca         db  0x03 ; '.'
000000000000d7cb         db  0x47 ; 'G'
000000000000d7cc         db  0x0e ; '.'
000000000000d7cd         db  0x20 ; ' '
000000000000d7ce         db  0x86 ; '.'
000000000000d7cf         db  0x04 ; '.'
000000000000d7d0         db  0x41 ; 'A'
000000000000d7d1         db  0x0e ; '.'
000000000000d7d2         db  0x28 ; '('
000000000000d7d3         db  0x83 ; '.'
000000000000d7d4         db  0x05 ; '.'
000000000000d7d5         db  0x49 ; 'I'
000000000000d7d6         db  0x0e ; '.'
000000000000d7d7         db  0x30 ; '0'
000000000000d7d8         db  0x62 ; 'b'
000000000000d7d9         db  0x0a ; '.'
000000000000d7da         db  0x0e ; '.'
000000000000d7db         db  0x28 ; '('
000000000000d7dc         db  0x44 ; 'D'
000000000000d7dd         db  0x0e ; '.'
000000000000d7de         db  0x20 ; ' '
000000000000d7df         db  0x41 ; 'A'
000000000000d7e0         db  0x0e ; '.'
000000000000d7e1         db  0x18 ; '.'
000000000000d7e2         db  0x42 ; 'B'
000000000000d7e3         db  0x0e ; '.'
000000000000d7e4         db  0x10 ; '.'
000000000000d7e5         db  0x42 ; 'B'
000000000000d7e6         db  0x0e ; '.'
000000000000d7e7         db  0x08 ; '.'
000000000000d7e8         db  0x48 ; 'H'
000000000000d7e9         db  0x0b ; '.'
000000000000d7ea         db  0x5d ; ']'
000000000000d7eb         db  0x0a ; '.'
000000000000d7ec         db  0x0e ; '.'
000000000000d7ed         db  0x28 ; '('
000000000000d7ee         db  0x41 ; 'A'
000000000000d7ef         db  0x0e ; '.'
000000000000d7f0         db  0x20 ; ' '
000000000000d7f1         db  0x41 ; 'A'
000000000000d7f2         db  0x0e ; '.'
000000000000d7f3         db  0x18 ; '.'
000000000000d7f4         db  0x42 ; 'B'
000000000000d7f5         db  0x0e ; '.'
000000000000d7f6         db  0x10 ; '.'
000000000000d7f7         db  0x42 ; 'B'
000000000000d7f8         db  0x0e ; '.'
000000000000d7f9         db  0x08 ; '.'
000000000000d7fa         db  0x45 ; 'E'
000000000000d7fb         db  0x0b ; '.'
000000000000d7fc         db  0x44 ; 'D'
000000000000d7fd         db  0x0e ; '.'
000000000000d7fe         db  0x28 ; '('
000000000000d7ff         db  0x43 ; 'C'
000000000000d800         db  0x0e ; '.'
000000000000d801         db  0x20 ; ' '
000000000000d802         db  0x44 ; 'D'
000000000000d803         db  0x0e ; '.'
000000000000d804         db  0x18 ; '.'
000000000000d805         db  0x42 ; 'B'
000000000000d806         db  0x0e ; '.'
000000000000d807         db  0x10 ; '.'
000000000000d808         db  0x42 ; 'B'
000000000000d809         db  0x0e ; '.'
000000000000d80a         db  0x08 ; '.'
000000000000d80b         db  0x00 ; '.'
000000000000d80c         db  0x00 ; '.'
000000000000d80d         db  0x00 ; '.'
000000000000d80e         db  0x00 ; '.'
000000000000d80f         db  0x00 ; '.'
000000000000d810         dd         0x00000034                                  ; Length of the record
000000000000d814         dd         0x00001614                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d818         db         0x78, 0xc7, 2 dup (0xff)                    ; begin 0x9f90
000000000000d81c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x9fcf)
000000000000d820         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d821         db  0x42 ; 'B'
000000000000d822         db  0x0e ; '.'
000000000000d823         db  0x10 ; '.'
000000000000d824         db  0x8d ; '.'
000000000000d825         db  0x02 ; '.'
000000000000d826         db  0x42 ; 'B'
000000000000d827         db  0x0e ; '.'
000000000000d828         db  0x18 ; '.'
000000000000d829         db  0x8c ; '.'
000000000000d82a         db  0x03 ; '.'
000000000000d82b         db  0x41 ; 'A'
000000000000d82c         db  0x0e ; '.'
000000000000d82d         db  0x20 ; ' '
000000000000d82e         db  0x86 ; '.'
000000000000d82f         db  0x04 ; '.'
000000000000d830         db  0x41 ; 'A'
000000000000d831         db  0x0e ; '.'
000000000000d832         db  0x28 ; '('
000000000000d833         db  0x83 ; '.'
000000000000d834         db  0x05 ; '.'
000000000000d835         db  0x46 ; 'F'
000000000000d836         db  0x0e ; '.'
000000000000d837         db  0x30 ; '0'
000000000000d838         db  0x6a ; 'j'
000000000000d839         db  0x0e ; '.'
000000000000d83a         db  0x28 ; '('
000000000000d83b         db  0x43 ; 'C'
000000000000d83c         db  0x0e ; '.'
000000000000d83d         db  0x20 ; ' '
000000000000d83e         db  0x41 ; 'A'
000000000000d83f         db  0x0e ; '.'
000000000000d840         db  0x18 ; '.'
000000000000d841         db  0x42 ; 'B'
000000000000d842         db  0x0e ; '.'
000000000000d843         db  0x10 ; '.'
000000000000d844         db  0x42 ; 'B'
000000000000d845         db  0x0e ; '.'
000000000000d846         db  0x08 ; '.'
000000000000d847         db  0x00 ; '.'
000000000000d848         dd         0x00000034                                  ; Length of the record
000000000000d84c         dd         0x0000164c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d850         db         0x80, 0xc7, 2 dup (0xff)                    ; begin 0x9fd0
000000000000d854         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0xa04b)
000000000000d858         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d859         db  0x42 ; 'B'
000000000000d85a         db  0x0e ; '.'
000000000000d85b         db  0x10 ; '.'
000000000000d85c         db  0x8c ; '.'
000000000000d85d         db  0x02 ; '.'
000000000000d85e         db  0x41 ; 'A'
000000000000d85f         db  0x0e ; '.'
000000000000d860         db  0x18 ; '.'
000000000000d861         db  0x86 ; '.'
000000000000d862         db  0x03 ; '.'
000000000000d863         db  0x41 ; 'A'
000000000000d864         db  0x0e ; '.'
000000000000d865         db  0x20 ; ' '
000000000000d866         db  0x83 ; '.'
000000000000d867         db  0x04 ; '.'
000000000000d868         db  0x7d ; '}'
000000000000d869         db  0x0a ; '.'
000000000000d86a         db  0x0e ; '.'
000000000000d86b         db  0x18 ; '.'
000000000000d86c         db  0x41 ; 'A'
000000000000d86d         db  0x0e ; '.'
000000000000d86e         db  0x10 ; '.'
000000000000d86f         db  0x42 ; 'B'
000000000000d870         db  0x0e ; '.'
000000000000d871         db  0x08 ; '.'
000000000000d872         db  0x44 ; 'D'
000000000000d873         db  0x0b ; '.'
000000000000d874         db  0x60 ; '`'
000000000000d875         db  0x0a ; '.'
000000000000d876         db  0x0e ; '.'
000000000000d877         db  0x18 ; '.'
000000000000d878         db  0x41 ; 'A'
000000000000d879         db  0x0e ; '.'
000000000000d87a         db  0x10 ; '.'
000000000000d87b         db  0x42 ; 'B'
000000000000d87c         db  0x0e ; '.'
000000000000d87d         db  0x08 ; '.'
000000000000d87e         db  0x45 ; 'E'
000000000000d87f         db  0x0b ; '.'
000000000000d880         dd         0x00000034                                  ; Length of the record
000000000000d884         dd         0x00001684                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d888         db         0xc8, 0xc7, 2 dup (0xff)                    ; begin 0xa050
000000000000d88c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0xa2ce)
000000000000d890         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d891         db  0x42 ; 'B'
000000000000d892         db  0x0e ; '.'
000000000000d893         db  0x10 ; '.'
000000000000d894         db  0x8c ; '.'
000000000000d895         db  0x02 ; '.'
000000000000d896         db  0x41 ; 'A'
000000000000d897         db  0x0e ; '.'
000000000000d898         db  0x18 ; '.'
000000000000d899         db  0x86 ; '.'
000000000000d89a         db  0x03 ; '.'
000000000000d89b         db  0x43 ; 'C'
000000000000d89c         db  0x0e ; '.'
000000000000d89d         db  0x20 ; ' '
000000000000d89e         db  0x83 ; '.'
000000000000d89f         db  0x04 ; '.'
000000000000d8a0         db  0x44 ; 'D'
000000000000d8a1         db  0x0e ; '.'
000000000000d8a2         db  0x70 ; 'p'
000000000000d8a3         db  0x02 ; '.'
000000000000d8a4         db  0xf0 ; '.'
000000000000d8a5         db  0x0a ; '.'
000000000000d8a6         db  0x0e ; '.'
000000000000d8a7         db  0x20 ; ' '
000000000000d8a8         db  0x41 ; 'A'
000000000000d8a9         db  0x0e ; '.'
000000000000d8aa         db  0x18 ; '.'
000000000000d8ab         db  0x41 ; 'A'
000000000000d8ac         db  0x0e ; '.'
000000000000d8ad         db  0x10 ; '.'
000000000000d8ae         db  0x42 ; 'B'
000000000000d8af         db  0x0e ; '.'
000000000000d8b0         db  0x08 ; '.'
000000000000d8b1         db  0x42 ; 'B'
000000000000d8b2         db  0x0b ; '.'
000000000000d8b3         db  0x00 ; '.'
000000000000d8b4         db  0x00 ; '.'
000000000000d8b5         db  0x00 ; '.'
000000000000d8b6         db  0x00 ; '.'
000000000000d8b7         db  0x00 ; '.'
000000000000d8b8         dd         0x0000001c                                  ; Length of the record
000000000000d8bc         dd         0x000016bc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d8c0         db         0x10, 0xca, 2 dup (0xff)                    ; begin 0xa2d0
000000000000d8c4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0xa310)
000000000000d8c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d8c9         db  0x44 ; 'D'
000000000000d8ca         db  0x0e ; '.'
000000000000d8cb         db  0x10 ; '.'
000000000000d8cc         db  0x83 ; '.'
000000000000d8cd         db  0x02 ; '.'
000000000000d8ce         db  0x5a ; 'Z'
000000000000d8cf         db  0x0a ; '.'
000000000000d8d0         db  0x0e ; '.'
000000000000d8d1         db  0x08 ; '.'
000000000000d8d2         db  0x4a ; 'J'
000000000000d8d3         db  0x0b ; '.'
000000000000d8d4         db  0x53 ; 'S'
000000000000d8d5         db  0x0e ; '.'
000000000000d8d6         db  0x08 ; '.'
000000000000d8d7         db  0x00 ; '.'
000000000000d8d8         dd         0x0000002c                                  ; Length of the record
000000000000d8dc         dd         0x000016dc                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d8e0         db         0x30, 0xca, 2 dup (0xff)                    ; begin 0xa310
000000000000d8e4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0xa367)
000000000000d8e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d8e9         db  0x63 ; 'c'
000000000000d8ea         db  0x0e ; '.'
000000000000d8eb         db  0x10 ; '.'
000000000000d8ec         db  0x8c ; '.'
000000000000d8ed         db  0x02 ; '.'
000000000000d8ee         db  0x41 ; 'A'
000000000000d8ef         db  0x0e ; '.'
000000000000d8f0         db  0x18 ; '.'
000000000000d8f1         db  0x86 ; '.'
000000000000d8f2         db  0x03 ; '.'
000000000000d8f3         db  0x44 ; 'D'
000000000000d8f4         db  0x0e ; '.'
000000000000d8f5         db  0x20 ; ' '
000000000000d8f6         db  0x83 ; '.'
000000000000d8f7         db  0x04 ; '.'
000000000000d8f8         db  0x6b ; 'k'
000000000000d8f9         db  0x0e ; '.'
000000000000d8fa         db  0x18 ; '.'
000000000000d8fb         db  0x41 ; 'A'
000000000000d8fc         db  0x0e ; '.'
000000000000d8fd         db  0x10 ; '.'
000000000000d8fe         db  0x42 ; 'B'
000000000000d8ff         db  0x0e ; '.'
000000000000d900         db  0x08 ; '.'
000000000000d901         db  0x00 ; '.'
000000000000d902         db  0x00 ; '.'
000000000000d903         db  0x00 ; '.'
000000000000d904         db  0x00 ; '.'
000000000000d905         db  0x00 ; '.'
000000000000d906         db  0x00 ; '.'
000000000000d907         db  0x00 ; '.'
000000000000d908         dd         0x00000014                                  ; Length of the record
000000000000d90c         dd         0x0000170c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d910         db         0x60, 0xca, 2 dup (0xff)                    ; begin 0xa370
000000000000d914         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0xa37e)
000000000000d918         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d919         align      32
000000000000d920         dd         0x00000044                                  ; Length of the record
000000000000d924         dd         0x00001724                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d928         db         0x58, 0xca, 2 dup (0xff)                    ; begin 0xa380
000000000000d92c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xa3e5)
000000000000d930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d931         db  0x42 ; 'B'
000000000000d932         db  0x0e ; '.'
000000000000d933         db  0x10 ; '.'
000000000000d934         db  0x8f ; '.'
000000000000d935         db  0x02 ; '.'
000000000000d936         db  0x42 ; 'B'
000000000000d937         db  0x0e ; '.'
000000000000d938         db  0x18 ; '.'
000000000000d939         db  0x8e ; '.'
000000000000d93a         db  0x03 ; '.'
000000000000d93b         db  0x45 ; 'E'
000000000000d93c         db  0x0e ; '.'
000000000000d93d         db  0x20 ; ' '
000000000000d93e         db  0x8d ; '.'
000000000000d93f         db  0x04 ; '.'
000000000000d940         db  0x42 ; 'B'
000000000000d941         db  0x0e ; '.'
000000000000d942         db  0x28 ; '('
000000000000d943         db  0x8c ; '.'
000000000000d944         db  0x05 ; '.'
000000000000d945         db  0x48 ; 'H'
000000000000d946         db  0x0e ; '.'
000000000000d947         db  0x30 ; '0'
000000000000d948         db  0x86 ; '.'
000000000000d949         db  0x06 ; '.'
000000000000d94a         db  0x48 ; 'H'
000000000000d94b         db  0x0e ; '.'
000000000000d94c         db  0x38 ; '8'
000000000000d94d         db  0x83 ; '.'
000000000000d94e         db  0x07 ; '.'
000000000000d94f         db  0x4d ; 'M'
000000000000d950         db  0x0e ; '.'
000000000000d951         db  0x40 ; '@'
000000000000d952         db  0x72 ; 'r'
000000000000d953         db  0x0e ; '.'
000000000000d954         db  0x38 ; '8'
000000000000d955         db  0x41 ; 'A'
000000000000d956         db  0x0e ; '.'
000000000000d957         db  0x30 ; '0'
000000000000d958         db  0x41 ; 'A'
000000000000d959         db  0x0e ; '.'
000000000000d95a         db  0x28 ; '('
000000000000d95b         db  0x42 ; 'B'
000000000000d95c         db  0x0e ; '.'
000000000000d95d         db  0x20 ; ' '
000000000000d95e         db  0x42 ; 'B'
000000000000d95f         db  0x0e ; '.'
000000000000d960         db  0x18 ; '.'
000000000000d961         db  0x42 ; 'B'
000000000000d962         db  0x0e ; '.'
000000000000d963         db  0x10 ; '.'
000000000000d964         db  0x42 ; 'B'
000000000000d965         db  0x0e ; '.'
000000000000d966         db  0x08 ; '.'
000000000000d967         db  0x00 ; '.'
000000000000d968         dd         0x00000014                                  ; Length of the record
000000000000d96c         dd         0x0000176c                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d970         db         0x80, 0xca, 2 dup (0xff)                    ; begin 0xa3f0
000000000000d974         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0xa3f2)
000000000000d978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d979         align      128
000000000000d980         dd         0x00000010                                  ; Length of the record
000000000000d984         dd         0x00001784                                  ; FDE: parent CIE at 0xc200 (FDE encoding = 0x1B)
000000000000d988         db         0x78, 0xca, 2 dup (0xff)                    ; begin 0xa400
000000000000d98c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0xa40e)
000000000000d990         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d991         align      8


        ; Segment Segment 3
        ; Range: [0x20d9b0; 0x20e240[ (2192 bytes)
        ; File offset : [55728; 57472[ (1744 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20d9b0; 0x20d9b8[ (8 bytes)
        ; File offset : [55728; 55736[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020d9b0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20d9b8; 0x20d9c0[ (8 bytes)
        ; File offset : [55736; 55744[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020d9b8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20d9c0; 0x20dbb8[ (504 bytes)
        ; File offset : [55744; 56248[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000020d9c0         db  0x46 ; 'F'                                         ; DATA XREF=main+152
000000000020d9c1         db  0xa5 ; '.'
000000000020d9c2         db  0x00 ; '.'
000000000020d9c3         db  0x00 ; '.'
000000000020d9c4         db  0x00 ; '.'
000000000020d9c5         db  0x00 ; '.'
000000000020d9c6         db  0x00 ; '.'
000000000020d9c7         db  0x00 ; '.'
000000000020d9c8         db  0x00 ; '.'
000000000020d9c9         db  0x00 ; '.'
000000000020d9ca         db  0x00 ; '.'
000000000020d9cb         db  0x00 ; '.'
000000000020d9cc         db  0x00 ; '.'
000000000020d9cd         db  0x00 ; '.'
000000000020d9ce         db  0x00 ; '.'
000000000020d9cf         db  0x00 ; '.'
000000000020d9d0         db  0x00 ; '.'
000000000020d9d1         db  0x00 ; '.'
000000000020d9d2         db  0x00 ; '.'
000000000020d9d3         db  0x00 ; '.'
000000000020d9d4         db  0x00 ; '.'
000000000020d9d5         db  0x00 ; '.'
000000000020d9d6         db  0x00 ; '.'
000000000020d9d7         db  0x00 ; '.'
000000000020d9d8         db  0x52 ; 'R'
000000000020d9d9         db  0x00 ; '.'
000000000020d9da         db  0x00 ; '.'
000000000020d9db         db  0x00 ; '.'
000000000020d9dc         db  0x00 ; '.'
000000000020d9dd         db  0x00 ; '.'
000000000020d9de         db  0x00 ; '.'
000000000020d9df         db  0x00 ; '.'
000000000020d9e0         db  0x50 ; 'P'
000000000020d9e1         db  0xa5 ; '.'
000000000020d9e2         db  0x00 ; '.'
000000000020d9e3         db  0x00 ; '.'
000000000020d9e4         db  0x00 ; '.'
000000000020d9e5         db  0x00 ; '.'
000000000020d9e6         db  0x00 ; '.'
000000000020d9e7         db  0x00 ; '.'
000000000020d9e8         db  0x00 ; '.'
000000000020d9e9         db  0x00 ; '.'
000000000020d9ea         db  0x00 ; '.'
000000000020d9eb         db  0x00 ; '.'
000000000020d9ec         db  0x00 ; '.'
000000000020d9ed         db  0x00 ; '.'
000000000020d9ee         db  0x00 ; '.'
000000000020d9ef         db  0x00 ; '.'
000000000020d9f0         db  0x00 ; '.'
000000000020d9f1         db  0x00 ; '.'
000000000020d9f2         db  0x00 ; '.'
000000000020d9f3         db  0x00 ; '.'
000000000020d9f4         db  0x00 ; '.'
000000000020d9f5         db  0x00 ; '.'
000000000020d9f6         db  0x00 ; '.'
000000000020d9f7         db  0x00 ; '.'
000000000020d9f8         db  0x63 ; 'c'
000000000020d9f9         db  0x00 ; '.'
000000000020d9fa         db  0x00 ; '.'
000000000020d9fb         db  0x00 ; '.'
000000000020d9fc         db  0x00 ; '.'
000000000020d9fd         db  0x00 ; '.'
000000000020d9fe         db  0x00 ; '.'
000000000020d9ff         db  0x00 ; '.'
000000000020da00         db  0x5b ; '['
000000000020da01         db  0xa5 ; '.'
000000000020da02         db  0x00 ; '.'
000000000020da03         db  0x00 ; '.'
000000000020da04         db  0x00 ; '.'
000000000020da05         db  0x00 ; '.'
000000000020da06         db  0x00 ; '.'
000000000020da07         db  0x00 ; '.'
000000000020da08         db  0x00 ; '.'
000000000020da09         db  0x00 ; '.'
000000000020da0a         db  0x00 ; '.'
000000000020da0b         db  0x00 ; '.'
000000000020da0c         db  0x00 ; '.'
000000000020da0d         db  0x00 ; '.'
000000000020da0e         db  0x00 ; '.'
000000000020da0f         db  0x00 ; '.'
000000000020da10         db  0x00 ; '.'
000000000020da11         db  0x00 ; '.'
000000000020da12         db  0x00 ; '.'
000000000020da13         db  0x00 ; '.'
000000000020da14         db  0x00 ; '.'
000000000020da15         db  0x00 ; '.'
000000000020da16         db  0x00 ; '.'
000000000020da17         db  0x00 ; '.'
000000000020da18         db  0x80 ; '.'
000000000020da19         db  0x00 ; '.'
000000000020da1a         db  0x00 ; '.'
000000000020da1b         db  0x00 ; '.'
000000000020da1c         db  0x00 ; '.'
000000000020da1d         db  0x00 ; '.'
000000000020da1e         db  0x00 ; '.'
000000000020da1f         db  0x00 ; '.'
000000000020da20         db  0x58 ; 'X'
000000000020da21         db  0xa5 ; '.'
000000000020da22         db  0x00 ; '.'
000000000020da23         db  0x00 ; '.'
000000000020da24         db  0x00 ; '.'
000000000020da25         db  0x00 ; '.'
000000000020da26         db  0x00 ; '.'
000000000020da27         db  0x00 ; '.'
000000000020da28         db  0x00 ; '.'
000000000020da29         db  0x00 ; '.'
000000000020da2a         db  0x00 ; '.'
000000000020da2b         db  0x00 ; '.'
000000000020da2c         db  0x00 ; '.'
000000000020da2d         db  0x00 ; '.'
000000000020da2e         db  0x00 ; '.'
000000000020da2f         db  0x00 ; '.'
000000000020da30         db  0x00 ; '.'
000000000020da31         db  0x00 ; '.'
000000000020da32         db  0x00 ; '.'
000000000020da33         db  0x00 ; '.'
000000000020da34         db  0x00 ; '.'
000000000020da35         db  0x00 ; '.'
000000000020da36         db  0x00 ; '.'
000000000020da37         db  0x00 ; '.'
000000000020da38         db  0x68 ; 'h'
000000000020da39         db  0x00 ; '.'
000000000020da3a         db  0x00 ; '.'
000000000020da3b         db  0x00 ; '.'
000000000020da3c         db  0x00 ; '.'
000000000020da3d         db  0x00 ; '.'
000000000020da3e         db  0x00 ; '.'
000000000020da3f         db  0x00 ; '.'
000000000020da40         db  0x67 ; 'g'
000000000020da41         db  0xa5 ; '.'
000000000020da42         db  0x00 ; '.'
000000000020da43         db  0x00 ; '.'
000000000020da44         db  0x00 ; '.'
000000000020da45         db  0x00 ; '.'
000000000020da46         db  0x00 ; '.'
000000000020da47         db  0x00 ; '.'
000000000020da48         db  0x00 ; '.'
000000000020da49         db  0x00 ; '.'
000000000020da4a         db  0x00 ; '.'
000000000020da4b         db  0x00 ; '.'
000000000020da4c         db  0x00 ; '.'
000000000020da4d         db  0x00 ; '.'
000000000020da4e         db  0x00 ; '.'
000000000020da4f         db  0x00 ; '.'
000000000020da50         db  0x00 ; '.'
000000000020da51         db  0x00 ; '.'
000000000020da52         db  0x00 ; '.'
000000000020da53         db  0x00 ; '.'
000000000020da54         db  0x00 ; '.'
000000000020da55         db  0x00 ; '.'
000000000020da56         db  0x00 ; '.'
000000000020da57         db  0x00 ; '.'
000000000020da58         db  0x81 ; '.'
000000000020da59         db  0x00 ; '.'
000000000020da5a         db  0x00 ; '.'
000000000020da5b         db  0x00 ; '.'
000000000020da5c         db  0x00 ; '.'
000000000020da5d         db  0x00 ; '.'
000000000020da5e         db  0x00 ; '.'
000000000020da5f         db  0x00 ; '.'
000000000020da60         db  0x6a ; 'j'
000000000020da61         db  0xa5 ; '.'
000000000020da62         db  0x00 ; '.'
000000000020da63         db  0x00 ; '.'
000000000020da64         db  0x00 ; '.'
000000000020da65         db  0x00 ; '.'
000000000020da66         db  0x00 ; '.'
000000000020da67         db  0x00 ; '.'
000000000020da68         db  0x00 ; '.'
000000000020da69         db  0x00 ; '.'
000000000020da6a         db  0x00 ; '.'
000000000020da6b         db  0x00 ; '.'
000000000020da6c         db  0x00 ; '.'
000000000020da6d         db  0x00 ; '.'
000000000020da6e         db  0x00 ; '.'
000000000020da6f         db  0x00 ; '.'
000000000020da70         db  0x00 ; '.'
000000000020da71         db  0x00 ; '.'
000000000020da72         db  0x00 ; '.'
000000000020da73         db  0x00 ; '.'
000000000020da74         db  0x00 ; '.'
000000000020da75         db  0x00 ; '.'
000000000020da76         db  0x00 ; '.'
000000000020da77         db  0x00 ; '.'
000000000020da78         db  0x82 ; '.'
000000000020da79         db  0x00 ; '.'
000000000020da7a         db  0x00 ; '.'
000000000020da7b         db  0x00 ; '.'
000000000020da7c         db  0x00 ; '.'
000000000020da7d         db  0x00 ; '.'
000000000020da7e         db  0x00 ; '.'
000000000020da7f         db  0x00 ; '.'
000000000020da80         db  0x78 ; 'x'
000000000020da81         db  0xa5 ; '.'
000000000020da82         db  0x00 ; '.'
000000000020da83         db  0x00 ; '.'
000000000020da84         db  0x00 ; '.'
000000000020da85         db  0x00 ; '.'
000000000020da86         db  0x00 ; '.'
000000000020da87         db  0x00 ; '.'
000000000020da88         db  0x00 ; '.'
000000000020da89         db  0x00 ; '.'
000000000020da8a         db  0x00 ; '.'
000000000020da8b         db  0x00 ; '.'
000000000020da8c         db  0x00 ; '.'
000000000020da8d         db  0x00 ; '.'
000000000020da8e         db  0x00 ; '.'
000000000020da8f         db  0x00 ; '.'
000000000020da90         db  0x00 ; '.'
000000000020da91         db  0x00 ; '.'
000000000020da92         db  0x00 ; '.'
000000000020da93         db  0x00 ; '.'
000000000020da94         db  0x00 ; '.'
000000000020da95         db  0x00 ; '.'
000000000020da96         db  0x00 ; '.'
000000000020da97         db  0x00 ; '.'
000000000020da98         db  0x66 ; 'f'
000000000020da99         db  0x00 ; '.'
000000000020da9a         db  0x00 ; '.'
000000000020da9b         db  0x00 ; '.'
000000000020da9c         db  0x00 ; '.'
000000000020da9d         db  0x00 ; '.'
000000000020da9e         db  0x00 ; '.'
000000000020da9f         db  0x00 ; '.'
000000000020daa0         db  0x7e ; '~'
000000000020daa1         db  0xa5 ; '.'
000000000020daa2         db  0x00 ; '.'
000000000020daa3         db  0x00 ; '.'
000000000020daa4         db  0x00 ; '.'
000000000020daa5         db  0x00 ; '.'
000000000020daa6         db  0x00 ; '.'
000000000020daa7         db  0x00 ; '.'
000000000020daa8         db  0x00 ; '.'
000000000020daa9         db  0x00 ; '.'
000000000020daaa         db  0x00 ; '.'
000000000020daab         db  0x00 ; '.'
000000000020daac         db  0x00 ; '.'
000000000020daad         db  0x00 ; '.'
000000000020daae         db  0x00 ; '.'
000000000020daaf         db  0x00 ; '.'
000000000020dab0         db  0x00 ; '.'
000000000020dab1         db  0x00 ; '.'
000000000020dab2         db  0x00 ; '.'
000000000020dab3         db  0x00 ; '.'
000000000020dab4         db  0x00 ; '.'
000000000020dab5         db  0x00 ; '.'
000000000020dab6         db  0x00 ; '.'
000000000020dab7         db  0x00 ; '.'
000000000020dab8         db  0x66 ; 'f'
000000000020dab9         db  0x00 ; '.'
000000000020daba         db  0x00 ; '.'
000000000020dabb         db  0x00 ; '.'
000000000020dabc         db  0x00 ; '.'
000000000020dabd         db  0x00 ; '.'
000000000020dabe         db  0x00 ; '.'
000000000020dabf         db  0x00 ; '.'
000000000020dac0         db  0x5d ; ']'
000000000020dac1         db  0xa5 ; '.'
000000000020dac2         db  0x00 ; '.'
000000000020dac3         db  0x00 ; '.'
000000000020dac4         db  0x00 ; '.'
000000000020dac5         db  0x00 ; '.'
000000000020dac6         db  0x00 ; '.'
000000000020dac7         db  0x00 ; '.'
000000000020dac8         db  0x01 ; '.'
000000000020dac9         db  0x00 ; '.'
000000000020daca         db  0x00 ; '.'
000000000020dacb         db  0x00 ; '.'
000000000020dacc         db  0x00 ; '.'
000000000020dacd         db  0x00 ; '.'
000000000020dace         db  0x00 ; '.'
000000000020dacf         db  0x00 ; '.'
000000000020dad0         db  0x00 ; '.'
000000000020dad1         db  0x00 ; '.'
000000000020dad2         db  0x00 ; '.'
000000000020dad3         db  0x00 ; '.'
000000000020dad4         db  0x00 ; '.'
000000000020dad5         db  0x00 ; '.'
000000000020dad6         db  0x00 ; '.'
000000000020dad7         db  0x00 ; '.'
000000000020dad8         db  0x83 ; '.'
000000000020dad9         db  0x00 ; '.'
000000000020dada         db  0x00 ; '.'
000000000020dadb         db  0x00 ; '.'
000000000020dadc         db  0x00 ; '.'
000000000020dadd         db  0x00 ; '.'
000000000020dade         db  0x00 ; '.'
000000000020dadf         db  0x00 ; '.'
000000000020dae0         db  0x85 ; '.'
000000000020dae1         db  0xa5 ; '.'
000000000020dae2         db  0x00 ; '.'
000000000020dae3         db  0x00 ; '.'
000000000020dae4         db  0x00 ; '.'
000000000020dae5         db  0x00 ; '.'
000000000020dae6         db  0x00 ; '.'
000000000020dae7         db  0x00 ; '.'
000000000020dae8         db  0x00 ; '.'
000000000020dae9         db  0x00 ; '.'
000000000020daea         db  0x00 ; '.'
000000000020daeb         db  0x00 ; '.'
000000000020daec         db  0x00 ; '.'
000000000020daed         db  0x00 ; '.'
000000000020daee         db  0x00 ; '.'
000000000020daef         db  0x00 ; '.'
000000000020daf0         db  0x00 ; '.'
000000000020daf1         db  0x00 ; '.'
000000000020daf2         db  0x00 ; '.'
000000000020daf3         db  0x00 ; '.'
000000000020daf4         db  0x00 ; '.'
000000000020daf5         db  0x00 ; '.'
000000000020daf6         db  0x00 ; '.'
000000000020daf7         db  0x00 ; '.'
000000000020daf8         db  0x76 ; 'v'
000000000020daf9         db  0x00 ; '.'
000000000020dafa         db  0x00 ; '.'
000000000020dafb         db  0x00 ; '.'
000000000020dafc         db  0x00 ; '.'
000000000020dafd         db  0x00 ; '.'
000000000020dafe         db  0x00 ; '.'
000000000020daff         db  0x00 ; '.'
000000000020db00         db  0x8d ; '.'
000000000020db01         db  0xa5 ; '.'
000000000020db02         db  0x00 ; '.'
000000000020db03         db  0x00 ; '.'
000000000020db04         db  0x00 ; '.'
000000000020db05         db  0x00 ; '.'
000000000020db06         db  0x00 ; '.'
000000000020db07         db  0x00 ; '.'
000000000020db08         db  0x00 ; '.'
000000000020db09         db  0x00 ; '.'
000000000020db0a         db  0x00 ; '.'
000000000020db0b         db  0x00 ; '.'
000000000020db0c         db  0x00 ; '.'
000000000020db0d         db  0x00 ; '.'
000000000020db0e         db  0x00 ; '.'
000000000020db0f         db  0x00 ; '.'
000000000020db10         db  0x00 ; '.'
000000000020db11         db  0x00 ; '.'
000000000020db12         db  0x00 ; '.'
000000000020db13         db  0x00 ; '.'
000000000020db14         db  0x00 ; '.'
000000000020db15         db  0x00 ; '.'
000000000020db16         db  0x00 ; '.'
000000000020db17         db  0x00 ; '.'
000000000020db18         db  0x7e ; '~'
000000000020db19         db  0xff ; '.'
000000000020db1a         db  0xff ; '.'
000000000020db1b         db  0xff ; '.'
000000000020db1c         db  0x00 ; '.'
000000000020db1d         db  0x00 ; '.'
000000000020db1e         db  0x00 ; '.'
000000000020db1f         db  0x00 ; '.'
000000000020db20         db  0x92 ; '.'
000000000020db21         db  0xa5 ; '.'
000000000020db22         db  0x00 ; '.'
000000000020db23         db  0x00 ; '.'
000000000020db24         db  0x00 ; '.'
000000000020db25         db  0x00 ; '.'
000000000020db26         db  0x00 ; '.'
000000000020db27         db  0x00 ; '.'
000000000020db28         db  0x00 ; '.'
000000000020db29         db  0x00 ; '.'
000000000020db2a         db  0x00 ; '.'
000000000020db2b         db  0x00 ; '.'
000000000020db2c         db  0x00 ; '.'
000000000020db2d         db  0x00 ; '.'
000000000020db2e         db  0x00 ; '.'
000000000020db2f         db  0x00 ; '.'
000000000020db30         db  0x00 ; '.'
000000000020db31         db  0x00 ; '.'
000000000020db32         db  0x00 ; '.'
000000000020db33         db  0x00 ; '.'
000000000020db34         db  0x00 ; '.'
000000000020db35         db  0x00 ; '.'
000000000020db36         db  0x00 ; '.'
000000000020db37         db  0x00 ; '.'
000000000020db38         db  0x7d ; '}'
000000000020db39         db  0xff ; '.'
000000000020db3a         db  0xff ; '.'
000000000020db3b         db  0xff ; '.'
000000000020db3c         db  0x00 ; '.'
000000000020db3d         db  0x00 ; '.'
000000000020db3e         db  0x00 ; '.'
000000000020db3f         db  0x00 ; '.'
000000000020db40         db  0x00 ; '.'
000000000020db41         db  0x00 ; '.'
000000000020db42         db  0x00 ; '.'
000000000020db43         db  0x00 ; '.'
000000000020db44         db  0x00 ; '.'
000000000020db45         db  0x00 ; '.'
000000000020db46         db  0x00 ; '.'
000000000020db47         db  0x00 ; '.'
000000000020db48         db  0x00 ; '.'
000000000020db49         db  0x00 ; '.'
000000000020db4a         db  0x00 ; '.'
000000000020db4b         db  0x00 ; '.'
000000000020db4c         db  0x00 ; '.'
000000000020db4d         db  0x00 ; '.'
000000000020db4e         db  0x00 ; '.'
000000000020db4f         db  0x00 ; '.'
000000000020db50         db  0x00 ; '.'
000000000020db51         db  0x00 ; '.'
000000000020db52         db  0x00 ; '.'
000000000020db53         db  0x00 ; '.'
000000000020db54         db  0x00 ; '.'
000000000020db55         db  0x00 ; '.'
000000000020db56         db  0x00 ; '.'
000000000020db57         db  0x00 ; '.'
000000000020db58         db  0x00 ; '.'
000000000020db59         db  0x00 ; '.'
000000000020db5a         db  0x00 ; '.'
000000000020db5b         db  0x00 ; '.'
000000000020db5c         db  0x00 ; '.'
000000000020db5d         db  0x00 ; '.'
000000000020db5e         db  0x00 ; '.'
000000000020db5f         db  0x00 ; '.'
                     quoting_style_args:
000000000020db60         db  0x29 ; ')'
000000000020db61         db  0xb2 ; '.'
000000000020db62         db  0x00 ; '.'
000000000020db63         db  0x00 ; '.'
000000000020db64         db  0x00 ; '.'
000000000020db65         db  0x00 ; '.'
000000000020db66         db  0x00 ; '.'
000000000020db67         db  0x00 ; '.'
000000000020db68         db  0x31 ; '1'
000000000020db69         db  0xb2 ; '.'
000000000020db6a         db  0x00 ; '.'
000000000020db6b         db  0x00 ; '.'
000000000020db6c         db  0x00 ; '.'
000000000020db6d         db  0x00 ; '.'
000000000020db6e         db  0x00 ; '.'
000000000020db6f         db  0x00 ; '.'
000000000020db70         db  0x37 ; '7'
000000000020db71         db  0xb2 ; '.'
000000000020db72         db  0x00 ; '.'
000000000020db73         db  0x00 ; '.'
000000000020db74         db  0x00 ; '.'
000000000020db75         db  0x00 ; '.'
000000000020db76         db  0x00 ; '.'
000000000020db77         db  0x00 ; '.'
000000000020db78         db  0x44 ; 'D'
000000000020db79         db  0xb2 ; '.'
000000000020db7a         db  0x00 ; '.'
000000000020db7b         db  0x00 ; '.'
000000000020db7c         db  0x00 ; '.'
000000000020db7d         db  0x00 ; '.'
000000000020db7e         db  0x00 ; '.'
000000000020db7f         db  0x00 ; '.'
000000000020db80         db  0x51 ; 'Q'
000000000020db81         db  0xb2 ; '.'
000000000020db82         db  0x00 ; '.'
000000000020db83         db  0x00 ; '.'
000000000020db84         db  0x00 ; '.'
000000000020db85         db  0x00 ; '.'
000000000020db86         db  0x00 ; '.'
000000000020db87         db  0x00 ; '.'
000000000020db88         db  0x7b ; '{'
000000000020db89         db  0xba ; '.'
000000000020db8a         db  0x00 ; '.'
000000000020db8b         db  0x00 ; '.'
000000000020db8c         db  0x00 ; '.'
000000000020db8d         db  0x00 ; '.'
000000000020db8e         db  0x00 ; '.'
000000000020db8f         db  0x00 ; '.'
000000000020db90         db  0x65 ; 'e'
000000000020db91         db  0xb2 ; '.'
000000000020db92         db  0x00 ; '.'
000000000020db93         db  0x00 ; '.'
000000000020db94         db  0x00 ; '.'
000000000020db95         db  0x00 ; '.'
000000000020db96         db  0x00 ; '.'
000000000020db97         db  0x00 ; '.'
000000000020db98         db  0x4a ; 'J'
000000000020db99         db  0xb2 ; '.'
000000000020db9a         db  0x00 ; '.'
000000000020db9b         db  0x00 ; '.'
000000000020db9c         db  0x00 ; '.'
000000000020db9d         db  0x00 ; '.'
000000000020db9e         db  0x00 ; '.'
000000000020db9f         db  0x00 ; '.'
000000000020dba0         db  0xde ; '.'
000000000020dba1         db  0xa4 ; '.'
000000000020dba2         db  0x00 ; '.'
000000000020dba3         db  0x00 ; '.'
000000000020dba4         db  0x00 ; '.'
000000000020dba5         db  0x00 ; '.'
000000000020dba6         db  0x00 ; '.'
000000000020dba7         db  0x00 ; '.'
000000000020dba8         db  0x6d ; 'm'
000000000020dba9         db  0xb2 ; '.'
000000000020dbaa         db  0x00 ; '.'
000000000020dbab         db  0x00 ; '.'
000000000020dbac         db  0x00 ; '.'
000000000020dbad         db  0x00 ; '.'
000000000020dbae         db  0x00 ; '.'
000000000020dbaf         db  0x00 ; '.'
000000000020dbb0         db  0x00 ; '.'
000000000020dbb1         db  0x00 ; '.'
000000000020dbb2         db  0x00 ; '.'
000000000020dbb3         db  0x00 ; '.'
000000000020dbb4         db  0x00 ; '.'
000000000020dbb5         db  0x00 ; '.'
000000000020dbb6         db  0x00 ; '.'
000000000020dbb7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20dbb8; 0x20dda8[ (496 bytes)
        ; File offset : [56248; 56744[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020dbb8         db  0x01 ; '.'
000000000020dbb9         db  0x00 ; '.'
000000000020dbba         db  0x00 ; '.'
000000000020dbbb         db  0x00 ; '.'
000000000020dbbc         db  0x00 ; '.'
000000000020dbbd         db  0x00 ; '.'
000000000020dbbe         db  0x00 ; '.'
000000000020dbbf         db  0x00 ; '.'
000000000020dbc0         db  0x01 ; '.'
000000000020dbc1         db  0x00 ; '.'
000000000020dbc2         db  0x00 ; '.'
000000000020dbc3         db  0x00 ; '.'
000000000020dbc4         db  0x00 ; '.'
000000000020dbc5         db  0x00 ; '.'
000000000020dbc6         db  0x00 ; '.'
000000000020dbc7         db  0x00 ; '.'
000000000020dbc8         db  0x0c ; '.'
000000000020dbc9         db  0x00 ; '.'
000000000020dbca         db  0x00 ; '.'
000000000020dbcb         db  0x00 ; '.'
000000000020dbcc         db  0x00 ; '.'
000000000020dbcd         db  0x00 ; '.'
000000000020dbce         db  0x00 ; '.'
000000000020dbcf         db  0x00 ; '.'
000000000020dbd0         db  0xe8 ; '.'
000000000020dbd1         db  0x18 ; '.'
000000000020dbd2         db  0x00 ; '.'
000000000020dbd3         db  0x00 ; '.'
000000000020dbd4         db  0x00 ; '.'
000000000020dbd5         db  0x00 ; '.'
000000000020dbd6         db  0x00 ; '.'
000000000020dbd7         db  0x00 ; '.'
000000000020dbd8         db  0x0d ; '.'
000000000020dbd9         db  0x00 ; '.'
000000000020dbda         db  0x00 ; '.'
000000000020dbdb         db  0x00 ; '.'
000000000020dbdc         db  0x00 ; '.'
000000000020dbdd         db  0x00 ; '.'
000000000020dbde         db  0x00 ; '.'
000000000020dbdf         db  0x00 ; '.'
000000000020dbe0         db  0x10 ; '.'
000000000020dbe1         db  0xa4 ; '.'
000000000020dbe2         db  0x00 ; '.'
000000000020dbe3         db  0x00 ; '.'
000000000020dbe4         db  0x00 ; '.'
000000000020dbe5         db  0x00 ; '.'
000000000020dbe6         db  0x00 ; '.'
000000000020dbe7         db  0x00 ; '.'
000000000020dbe8         db  0x19 ; '.'
000000000020dbe9         db  0x00 ; '.'
000000000020dbea         db  0x00 ; '.'
000000000020dbeb         db  0x00 ; '.'
000000000020dbec         db  0x00 ; '.'
000000000020dbed         db  0x00 ; '.'
000000000020dbee         db  0x00 ; '.'
000000000020dbef         db  0x00 ; '.'
000000000020dbf0         db  0xb0 ; '.'
000000000020dbf1         db  0xd9 ; '.'
000000000020dbf2         db  0x20 ; ' '
000000000020dbf3         db  0x00 ; '.'
000000000020dbf4         db  0x00 ; '.'
000000000020dbf5         db  0x00 ; '.'
000000000020dbf6         db  0x00 ; '.'
000000000020dbf7         db  0x00 ; '.'
000000000020dbf8         db  0x1b ; '.'
000000000020dbf9         db  0x00 ; '.'
000000000020dbfa         db  0x00 ; '.'
000000000020dbfb         db  0x00 ; '.'
000000000020dbfc         db  0x00 ; '.'
000000000020dbfd         db  0x00 ; '.'
000000000020dbfe         db  0x00 ; '.'
000000000020dbff         db  0x00 ; '.'
000000000020dc00         db  0x08 ; '.'
000000000020dc01         db  0x00 ; '.'
000000000020dc02         db  0x00 ; '.'
000000000020dc03         db  0x00 ; '.'
000000000020dc04         db  0x00 ; '.'
000000000020dc05         db  0x00 ; '.'
000000000020dc06         db  0x00 ; '.'
000000000020dc07         db  0x00 ; '.'
000000000020dc08         db  0x1a ; '.'
000000000020dc09         db  0x00 ; '.'
000000000020dc0a         db  0x00 ; '.'
000000000020dc0b         db  0x00 ; '.'
000000000020dc0c         db  0x00 ; '.'
000000000020dc0d         db  0x00 ; '.'
000000000020dc0e         db  0x00 ; '.'
000000000020dc0f         db  0x00 ; '.'
000000000020dc10         db  0xb8 ; '.'
000000000020dc11         db  0xd9 ; '.'
000000000020dc12         db  0x20 ; ' '
000000000020dc13         db  0x00 ; '.'
000000000020dc14         db  0x00 ; '.'
000000000020dc15         db  0x00 ; '.'
000000000020dc16         db  0x00 ; '.'
000000000020dc17         db  0x00 ; '.'
000000000020dc18         db  0x1c ; '.'
000000000020dc19         db  0x00 ; '.'
000000000020dc1a         db  0x00 ; '.'
000000000020dc1b         db  0x00 ; '.'
000000000020dc1c         db  0x00 ; '.'
000000000020dc1d         db  0x00 ; '.'
000000000020dc1e         db  0x00 ; '.'
000000000020dc1f         db  0x00 ; '.'
000000000020dc20         db  0x08 ; '.'
000000000020dc21         db  0x00 ; '.'
000000000020dc22         db  0x00 ; '.'
000000000020dc23         db  0x00 ; '.'
000000000020dc24         db  0x00 ; '.'
000000000020dc25         db  0x00 ; '.'
000000000020dc26         db  0x00 ; '.'
000000000020dc27         db  0x00 ; '.'
000000000020dc28         db  0xf5 ; '.'
000000000020dc29         db  0xfe ; '.'
000000000020dc2a         db  0xff ; '.'
000000000020dc2b         db  0x6f ; 'o'
000000000020dc2c         db  0x00 ; '.'
000000000020dc2d         db  0x00 ; '.'
000000000020dc2e         db  0x00 ; '.'
000000000020dc2f         db  0x00 ; '.'
000000000020dc30         db  0x98 ; '.'
000000000020dc31         db  0x02 ; '.'
000000000020dc32         db  0x00 ; '.'
000000000020dc33         db  0x00 ; '.'
000000000020dc34         db  0x00 ; '.'
000000000020dc35         db  0x00 ; '.'
000000000020dc36         db  0x00 ; '.'
000000000020dc37         db  0x00 ; '.'
000000000020dc38         db  0x05 ; '.'
000000000020dc39         db  0x00 ; '.'
000000000020dc3a         db  0x00 ; '.'
000000000020dc3b         db  0x00 ; '.'
000000000020dc3c         db  0x00 ; '.'
000000000020dc3d         db  0x00 ; '.'
000000000020dc3e         db  0x00 ; '.'
000000000020dc3f         db  0x00 ; '.'
000000000020dc40         db  0x78 ; 'x'
000000000020dc41         db  0x0a ; '.'
000000000020dc42         db  0x00 ; '.'
000000000020dc43         db  0x00 ; '.'
000000000020dc44         db  0x00 ; '.'
000000000020dc45         db  0x00 ; '.'
000000000020dc46         db  0x00 ; '.'
000000000020dc47         db  0x00 ; '.'
000000000020dc48         db  0x06 ; '.'
000000000020dc49         db  0x00 ; '.'
000000000020dc4a         db  0x00 ; '.'
000000000020dc4b         db  0x00 ; '.'
000000000020dc4c         db  0x00 ; '.'
000000000020dc4d         db  0x00 ; '.'
000000000020dc4e         db  0x00 ; '.'
000000000020dc4f         db  0x00 ; '.'
000000000020dc50         db  0xe0 ; '.'
000000000020dc51         db  0x02 ; '.'
000000000020dc52         db  0x00 ; '.'
000000000020dc53         db  0x00 ; '.'
000000000020dc54         db  0x00 ; '.'
000000000020dc55         db  0x00 ; '.'
000000000020dc56         db  0x00 ; '.'
000000000020dc57         db  0x00 ; '.'
000000000020dc58         db  0x0a ; '.'
000000000020dc59         db  0x00 ; '.'
000000000020dc5a         db  0x00 ; '.'
000000000020dc5b         db  0x00 ; '.'
000000000020dc5c         db  0x00 ; '.'
000000000020dc5d         db  0x00 ; '.'
000000000020dc5e         db  0x00 ; '.'
000000000020dc5f         db  0x00 ; '.'
000000000020dc60         db  0x68 ; 'h'
000000000020dc61         db  0x03 ; '.'
000000000020dc62         db  0x00 ; '.'
000000000020dc63         db  0x00 ; '.'
000000000020dc64         db  0x00 ; '.'
000000000020dc65         db  0x00 ; '.'
000000000020dc66         db  0x00 ; '.'
000000000020dc67         db  0x00 ; '.'
000000000020dc68         db  0x0b ; '.'
000000000020dc69         db  0x00 ; '.'
000000000020dc6a         db  0x00 ; '.'
000000000020dc6b         db  0x00 ; '.'
000000000020dc6c         db  0x00 ; '.'
000000000020dc6d         db  0x00 ; '.'
000000000020dc6e         db  0x00 ; '.'
000000000020dc6f         db  0x00 ; '.'
000000000020dc70         db  0x18 ; '.'
000000000020dc71         db  0x00 ; '.'
000000000020dc72         db  0x00 ; '.'
000000000020dc73         db  0x00 ; '.'
000000000020dc74         db  0x00 ; '.'
000000000020dc75         db  0x00 ; '.'
000000000020dc76         db  0x00 ; '.'
000000000020dc77         db  0x00 ; '.'
000000000020dc78         db  0x15 ; '.'
000000000020dc79         db  0x00 ; '.'
000000000020dc7a         db  0x00 ; '.'
000000000020dc7b         db  0x00 ; '.'
000000000020dc7c         db  0x00 ; '.'
000000000020dc7d         db  0x00 ; '.'
000000000020dc7e         db  0x00 ; '.'
000000000020dc7f         db  0x00 ; '.'
000000000020dc80         db  0x00 ; '.'
000000000020dc81         db  0x00 ; '.'
000000000020dc82         db  0x00 ; '.'
000000000020dc83         db  0x00 ; '.'
000000000020dc84         db  0x00 ; '.'
000000000020dc85         db  0x00 ; '.'
000000000020dc86         db  0x00 ; '.'
000000000020dc87         db  0x00 ; '.'
000000000020dc88         db  0x03 ; '.'
000000000020dc89         db  0x00 ; '.'
000000000020dc8a         db  0x00 ; '.'
000000000020dc8b         db  0x00 ; '.'
000000000020dc8c         db  0x00 ; '.'
000000000020dc8d         db  0x00 ; '.'
000000000020dc8e         db  0x00 ; '.'
000000000020dc8f         db  0x00 ; '.'
000000000020dc90         db  0xa8 ; '.'
000000000020dc91         db  0xdd ; '.'
000000000020dc92         db  0x20 ; ' '
000000000020dc93         db  0x00 ; '.'
000000000020dc94         db  0x00 ; '.'
000000000020dc95         db  0x00 ; '.'
000000000020dc96         db  0x00 ; '.'
000000000020dc97         db  0x00 ; '.'
000000000020dc98         db  0x02 ; '.'
000000000020dc99         db  0x00 ; '.'
000000000020dc9a         db  0x00 ; '.'
000000000020dc9b         db  0x00 ; '.'
000000000020dc9c         db  0x00 ; '.'
000000000020dc9d         db  0x00 ; '.'
000000000020dc9e         db  0x00 ; '.'
000000000020dc9f         db  0x00 ; '.'
000000000020dca0         db  0x30 ; '0'
000000000020dca1         db  0x06 ; '.'
000000000020dca2         db  0x00 ; '.'
000000000020dca3         db  0x00 ; '.'
000000000020dca4         db  0x00 ; '.'
000000000020dca5         db  0x00 ; '.'
000000000020dca6         db  0x00 ; '.'
000000000020dca7         db  0x00 ; '.'
000000000020dca8         db  0x14 ; '.'
000000000020dca9         db  0x00 ; '.'
000000000020dcaa         db  0x00 ; '.'
000000000020dcab         db  0x00 ; '.'
000000000020dcac         db  0x00 ; '.'
000000000020dcad         db  0x00 ; '.'
000000000020dcae         db  0x00 ; '.'
000000000020dcaf         db  0x00 ; '.'
000000000020dcb0         db  0x07 ; '.'
000000000020dcb1         db  0x00 ; '.'
000000000020dcb2         db  0x00 ; '.'
000000000020dcb3         db  0x00 ; '.'
000000000020dcb4         db  0x00 ; '.'
000000000020dcb5         db  0x00 ; '.'
000000000020dcb6         db  0x00 ; '.'
000000000020dcb7         db  0x00 ; '.'
000000000020dcb8         db  0x17 ; '.'
000000000020dcb9         db  0x00 ; '.'
000000000020dcba         db  0x00 ; '.'
000000000020dcbb         db  0x00 ; '.'
000000000020dcbc         db  0x00 ; '.'
000000000020dcbd         db  0x00 ; '.'
000000000020dcbe         db  0x00 ; '.'
000000000020dcbf         db  0x00 ; '.'
000000000020dcc0         db  0xb8 ; '.'
000000000020dcc1         db  0x12 ; '.'
000000000020dcc2         db  0x00 ; '.'
000000000020dcc3         db  0x00 ; '.'
000000000020dcc4         db  0x00 ; '.'
000000000020dcc5         db  0x00 ; '.'
000000000020dcc6         db  0x00 ; '.'
000000000020dcc7         db  0x00 ; '.'
000000000020dcc8         db  0x07 ; '.'
000000000020dcc9         db  0x00 ; '.'
000000000020dcca         db  0x00 ; '.'
000000000020dccb         db  0x00 ; '.'
000000000020dccc         db  0x00 ; '.'
000000000020dccd         db  0x00 ; '.'
000000000020dcce         db  0x00 ; '.'
000000000020dccf         db  0x00 ; '.'
000000000020dcd0         db  0xf8 ; '.'
000000000020dcd1         db  0x0e ; '.'
000000000020dcd2         db  0x00 ; '.'
000000000020dcd3         db  0x00 ; '.'
000000000020dcd4         db  0x00 ; '.'
000000000020dcd5         db  0x00 ; '.'
000000000020dcd6         db  0x00 ; '.'
000000000020dcd7         db  0x00 ; '.'
000000000020dcd8         db  0x08 ; '.'
000000000020dcd9         db  0x00 ; '.'
000000000020dcda         db  0x00 ; '.'
000000000020dcdb         db  0x00 ; '.'
000000000020dcdc         db  0x00 ; '.'
000000000020dcdd         db  0x00 ; '.'
000000000020dcde         db  0x00 ; '.'
000000000020dcdf         db  0x00 ; '.'
000000000020dce0         db  0xc0 ; '.'
000000000020dce1         db  0x03 ; '.'
000000000020dce2         db  0x00 ; '.'
000000000020dce3         db  0x00 ; '.'
000000000020dce4         db  0x00 ; '.'
000000000020dce5         db  0x00 ; '.'
000000000020dce6         db  0x00 ; '.'
000000000020dce7         db  0x00 ; '.'
000000000020dce8         db  0x09 ; '.'
000000000020dce9         db  0x00 ; '.'
000000000020dcea         db  0x00 ; '.'
000000000020dceb         db  0x00 ; '.'
000000000020dcec         db  0x00 ; '.'
000000000020dced         db  0x00 ; '.'
000000000020dcee         db  0x00 ; '.'
000000000020dcef         db  0x00 ; '.'
000000000020dcf0         db  0x18 ; '.'
000000000020dcf1         db  0x00 ; '.'
000000000020dcf2         db  0x00 ; '.'
000000000020dcf3         db  0x00 ; '.'
000000000020dcf4         db  0x00 ; '.'
000000000020dcf5         db  0x00 ; '.'
000000000020dcf6         db  0x00 ; '.'
000000000020dcf7         db  0x00 ; '.'
000000000020dcf8         db  0x1e ; '.'
000000000020dcf9         db  0x00 ; '.'
000000000020dcfa         db  0x00 ; '.'
000000000020dcfb         db  0x00 ; '.'
000000000020dcfc         db  0x00 ; '.'
000000000020dcfd         db  0x00 ; '.'
000000000020dcfe         db  0x00 ; '.'
000000000020dcff         db  0x00 ; '.'
000000000020dd00         db  0x08 ; '.'
000000000020dd01         db  0x00 ; '.'
000000000020dd02         db  0x00 ; '.'
000000000020dd03         db  0x00 ; '.'
000000000020dd04         db  0x00 ; '.'
000000000020dd05         db  0x00 ; '.'
000000000020dd06         db  0x00 ; '.'
000000000020dd07         db  0x00 ; '.'
000000000020dd08         db  0xfb ; '.'
000000000020dd09         db  0xff ; '.'
000000000020dd0a         db  0xff ; '.'
000000000020dd0b         db  0x6f ; 'o'
000000000020dd0c         db  0x00 ; '.'
000000000020dd0d         db  0x00 ; '.'
000000000020dd0e         db  0x00 ; '.'
000000000020dd0f         db  0x00 ; '.'
000000000020dd10         db  0x01 ; '.'
000000000020dd11         db  0x00 ; '.'
000000000020dd12         db  0x00 ; '.'
000000000020dd13         db  0x08 ; '.'
000000000020dd14         db  0x00 ; '.'
000000000020dd15         db  0x00 ; '.'
000000000020dd16         db  0x00 ; '.'
000000000020dd17         db  0x00 ; '.'
000000000020dd18         db  0xfe ; '.'
000000000020dd19         db  0xff ; '.'
000000000020dd1a         db  0xff ; '.'
000000000020dd1b         db  0x6f ; 'o'
000000000020dd1c         db  0x00 ; '.'
000000000020dd1d         db  0x00 ; '.'
000000000020dd1e         db  0x00 ; '.'
000000000020dd1f         db  0x00 ; '.'
000000000020dd20         db  0x88 ; '.'
000000000020dd21         db  0x0e ; '.'
000000000020dd22         db  0x00 ; '.'
000000000020dd23         db  0x00 ; '.'
000000000020dd24         db  0x00 ; '.'
000000000020dd25         db  0x00 ; '.'
000000000020dd26         db  0x00 ; '.'
000000000020dd27         db  0x00 ; '.'
000000000020dd28         db  0xff ; '.'
000000000020dd29         db  0xff ; '.'
000000000020dd2a         db  0xff ; '.'
000000000020dd2b         db  0x6f ; 'o'
000000000020dd2c         db  0x00 ; '.'
000000000020dd2d         db  0x00 ; '.'
000000000020dd2e         db  0x00 ; '.'
000000000020dd2f         db  0x00 ; '.'
000000000020dd30         db  0x01 ; '.'
000000000020dd31         db  0x00 ; '.'
000000000020dd32         db  0x00 ; '.'
000000000020dd33         db  0x00 ; '.'
000000000020dd34         db  0x00 ; '.'
000000000020dd35         db  0x00 ; '.'
000000000020dd36         db  0x00 ; '.'
000000000020dd37         db  0x00 ; '.'
000000000020dd38         db  0xf0 ; '.'
000000000020dd39         db  0xff ; '.'
000000000020dd3a         db  0xff ; '.'
000000000020dd3b         db  0x6f ; 'o'
000000000020dd3c         db  0x00 ; '.'
000000000020dd3d         db  0x00 ; '.'
000000000020dd3e         db  0x00 ; '.'
000000000020dd3f         db  0x00 ; '.'
000000000020dd40         db  0xe0 ; '.'
000000000020dd41         db  0x0d ; '.'
000000000020dd42         db  0x00 ; '.'
000000000020dd43         db  0x00 ; '.'
000000000020dd44         db  0x00 ; '.'
000000000020dd45         db  0x00 ; '.'
000000000020dd46         db  0x00 ; '.'
000000000020dd47         db  0x00 ; '.'
000000000020dd48         db  0xf9 ; '.'
000000000020dd49         db  0xff ; '.'
000000000020dd4a         db  0xff ; '.'
000000000020dd4b         db  0x6f ; 'o'
000000000020dd4c         db  0x00 ; '.'
000000000020dd4d         db  0x00 ; '.'
000000000020dd4e         db  0x00 ; '.'
000000000020dd4f         db  0x00 ; '.'
000000000020dd50         db  0x1c ; '.'
000000000020dd51         db  0x00 ; '.'
000000000020dd52         db  0x00 ; '.'
000000000020dd53         db  0x00 ; '.'
000000000020dd54         db  0x00 ; '.'
000000000020dd55         db  0x00 ; '.'
000000000020dd56         db  0x00 ; '.'
000000000020dd57         db  0x00 ; '.'
000000000020dd58         db  0x00 ; '.'
000000000020dd59         db  0x00 ; '.'
000000000020dd5a         db  0x00 ; '.'
000000000020dd5b         db  0x00 ; '.'
000000000020dd5c         db  0x00 ; '.'
000000000020dd5d         db  0x00 ; '.'
000000000020dd5e         db  0x00 ; '.'
000000000020dd5f         db  0x00 ; '.'
000000000020dd60         db  0x00 ; '.'
000000000020dd61         db  0x00 ; '.'
000000000020dd62         db  0x00 ; '.'
000000000020dd63         db  0x00 ; '.'
000000000020dd64         db  0x00 ; '.'
000000000020dd65         db  0x00 ; '.'
000000000020dd66         db  0x00 ; '.'
000000000020dd67         db  0x00 ; '.'
000000000020dd68         db  0x00 ; '.'
000000000020dd69         db  0x00 ; '.'
000000000020dd6a         db  0x00 ; '.'
000000000020dd6b         db  0x00 ; '.'
000000000020dd6c         db  0x00 ; '.'
000000000020dd6d         db  0x00 ; '.'
000000000020dd6e         db  0x00 ; '.'
000000000020dd6f         db  0x00 ; '.'
000000000020dd70         db  0x00 ; '.'
000000000020dd71         db  0x00 ; '.'
000000000020dd72         db  0x00 ; '.'
000000000020dd73         db  0x00 ; '.'
000000000020dd74         db  0x00 ; '.'
000000000020dd75         db  0x00 ; '.'
000000000020dd76         db  0x00 ; '.'
000000000020dd77         db  0x00 ; '.'
000000000020dd78         db  0x00 ; '.'
000000000020dd79         db  0x00 ; '.'
000000000020dd7a         db  0x00 ; '.'
000000000020dd7b         db  0x00 ; '.'
000000000020dd7c         db  0x00 ; '.'
000000000020dd7d         db  0x00 ; '.'
000000000020dd7e         db  0x00 ; '.'
000000000020dd7f         db  0x00 ; '.'
000000000020dd80         db  0x00 ; '.'
000000000020dd81         db  0x00 ; '.'
000000000020dd82         db  0x00 ; '.'
000000000020dd83         db  0x00 ; '.'
000000000020dd84         db  0x00 ; '.'
000000000020dd85         db  0x00 ; '.'
000000000020dd86         db  0x00 ; '.'
000000000020dd87         db  0x00 ; '.'
000000000020dd88         db  0x00 ; '.'
000000000020dd89         db  0x00 ; '.'
000000000020dd8a         db  0x00 ; '.'
000000000020dd8b         db  0x00 ; '.'
000000000020dd8c         db  0x00 ; '.'
000000000020dd8d         db  0x00 ; '.'
000000000020dd8e         db  0x00 ; '.'
000000000020dd8f         db  0x00 ; '.'
000000000020dd90         db  0x00 ; '.'
000000000020dd91         db  0x00 ; '.'
000000000020dd92         db  0x00 ; '.'
000000000020dd93         db  0x00 ; '.'
000000000020dd94         db  0x00 ; '.'
000000000020dd95         db  0x00 ; '.'
000000000020dd96         db  0x00 ; '.'
000000000020dd97         db  0x00 ; '.'
000000000020dd98         db  0x00 ; '.'
000000000020dd99         db  0x00 ; '.'
000000000020dd9a         db  0x00 ; '.'
000000000020dd9b         db  0x00 ; '.'
000000000020dd9c         db  0x00 ; '.'
000000000020dd9d         db  0x00 ; '.'
000000000020dd9e         db  0x00 ; '.'
000000000020dd9f         db  0x00 ; '.'
000000000020dda0         db  0x00 ; '.'
000000000020dda1         db  0x00 ; '.'
000000000020dda2         db  0x00 ; '.'
000000000020dda3         db  0x00 ; '.'
000000000020dda4         db  0x00 ; '.'
000000000020dda5         db  0x00 ; '.'
000000000020dda6         db  0x00 ; '.'
000000000020dda7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20dda8; 0x20e000[ (600 bytes)
        ; File offset : [56744; 57344[ (600 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020dda8         db  0xb8 ; '.'
000000000020dda9         db  0xdb ; '.'
000000000020ddaa         db  0x20 ; ' '
000000000020ddab         db  0x00 ; '.'
000000000020ddac         db  0x00 ; '.'
000000000020ddad         db  0x00 ; '.'
000000000020ddae         db  0x00 ; '.'
000000000020ddaf         db  0x00 ; '.'
                     qword_20ddb0:
000000000020ddb0         dq         0x0000000000000000                          ; DATA XREF=0x1900
000000000020ddb8         db  0x00 ; '.'                                         ; DATA XREF=0x1906
000000000020ddb9         db  0x00 ; '.'
000000000020ddba         db  0x00 ; '.'
000000000020ddbb         db  0x00 ; '.'
000000000020ddbc         db  0x00 ; '.'
000000000020ddbd         db  0x00 ; '.'
000000000020ddbe         db  0x00 ; '.'
000000000020ddbf         db  0x00 ; '.'
                     endgrent@GOT:        // endgrent
000000000020ddc0         dq         0x000000000020e250                          ; DATA XREF=j_endgrent
                     abort@GOT:        // abort
000000000020ddc8         dq         0x000000000020e260                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ddd0         dq         0x000000000020e268                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020ddd8         dq         0x000000000020e270                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020dde0         dq         0x000000000020e280                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000020dde8         dq         0x000000000020e288                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000020ddf0         dq         0x000000000020e290                          ; DATA XREF=j___fpending
                     qsort@GOT:        // qsort
000000000020ddf8         dq         0x000000000020e298                          ; DATA XREF=j_qsort
                     fcntl@GOT:        // fcntl
000000000020de00         dq         0x000000000020e2a0                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
000000000020de08         dq         0x000000000020e2a8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020de10         dq         0x000000000020e2b0                          ; DATA XREF=j_fclose
                     getpwuid@GOT:        // getpwuid
000000000020de18         dq         0x000000000020e2b8                          ; DATA XREF=j_getpwuid
                     bindtextdomain@GOT:        // bindtextdomain
000000000020de20         dq         0x000000000020e2c0                          ; DATA XREF=j_bindtextdomain
                     stpcpy@GOT:        // stpcpy
000000000020de28         dq         0x000000000020e2c8                          ; DATA XREF=j_stpcpy
                     dcgettext@GOT:        // dcgettext
000000000020de30         dq         0x000000000020e2d0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020de38         dq         0x000000000020e2d8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020de40         dq         0x000000000020e2e0                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000020de48         dq         0x000000000020e2e8                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
000000000020de50         dq         0x000000000020e2f0                          ; DATA XREF=j_openat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020de58         dq         0x000000000020e2f8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020de60         dq         0x000000000020e300                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020de68         dq         0x000000000020e308                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020de70         dq         0x000000000020e310                          ; DATA XREF=j_strchr
                     getgrgid@GOT:        // getgrgid
000000000020de78         dq         0x000000000020e318                          ; DATA XREF=j_getgrgid
                     __fxstatat@GOT:        // __fxstatat
000000000020de80         dq         0x000000000020e320                          ; DATA XREF=j___fxstatat
                     strrchr@GOT:        // strrchr
000000000020de88         dq         0x000000000020e328                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020de90         dq         0x000000000020e330                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020de98         dq         0x000000000020e338                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020dea0         dq         0x000000000020e340                          ; DATA XREF=j_memset
                     close@GOT:        // close
000000000020dea8         dq         0x000000000020e348                          ; DATA XREF=j_close
                     __openat_2@GOT:        // __openat_2
000000000020deb0         dq         0x000000000020e350                          ; DATA XREF=j___openat_2
                     closedir@GOT:        // closedir
000000000020deb8         dq         0x000000000020e358                          ; DATA XREF=j_closedir
                     memcmp@GOT:        // memcmp
000000000020dec0         dq         0x000000000020e368                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020dec8         dq         0x000000000020e370                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020ded0         dq         0x000000000020e378                          ; DATA XREF=j_calloc
                     dirfd@GOT:        // dirfd
000000000020ded8         dq         0x000000000020e380                          ; DATA XREF=j_dirfd
                     memcpy@GOT:        // memcpy
000000000020dee0         dq         0x000000000020e390                          ; DATA XREF=j_memcpy
                     getgrnam@GOT:        // getgrnam
000000000020dee8         dq         0x000000000020e398                          ; DATA XREF=j_getgrnam
                     fileno@GOT:        // fileno
000000000020def0         dq         0x000000000020e3a0                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020def8         dq         0x000000000020e3a8                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000020df00         dq         0x000000000020e3b0                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
000000000020df08         dq         0x000000000020e3b8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020df10         dq         0x000000000020e3c0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020df18         dq         0x000000000020e3c8                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020df20         dq         0x000000000020e3d0                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
000000000020df28         dq         0x000000000020e3d8                          ; DATA XREF=j___freading
                     fchdir@GOT:        // fchdir
000000000020df30         dq         0x000000000020e3e0                          ; DATA XREF=j_fchdir
                     realloc@GOT:        // realloc
000000000020df38         dq         0x000000000020e3e8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020df40         dq         0x000000000020e3f0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020df48         dq         0x000000000020e3f8                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
000000000020df50         dq         0x000000000020e400                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020df58         dq         0x000000000020e408                          ; DATA XREF=j_error
                     open@GOT:        // open
000000000020df60         dq         0x000000000020e410                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020df68         dq         0x000000000020e418                          ; DATA XREF=j_fseeko
                     fchown@GOT:        // fchown
000000000020df70         dq         0x000000000020e420                          ; DATA XREF=j_fchown
                     fdopendir@GOT:        // fdopendir
000000000020df78         dq         0x000000000020e428                          ; DATA XREF=j_fdopendir
                     strtoul@GOT:        // strtoul
000000000020df80         dq         0x000000000020e430                          ; DATA XREF=j_strtoul
                     fstatfs@GOT:        // fstatfs
000000000020df88         dq         0x000000000020e438                          ; DATA XREF=j_fstatfs
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020df90         dq         0x000000000020e440                          ; DATA XREF=j___cxa_atexit
                     fchownat@GOT:        // fchownat
000000000020df98         dq         0x000000000020e448                          ; DATA XREF=j_fchownat
                     exit@GOT:        // exit
000000000020dfa0         dq         0x000000000020e450                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020dfa8         dq         0x000000000020e458                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020dfb0         dq         0x000000000020e460                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020dfb8         dq         0x000000000020e470                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020dfc0         dq         0x000000000020e478                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020dfc8         dq         0x000000000020e488                          ; DATA XREF=j___ctype_b_loc
                     qword_20dfd0:
000000000020dfd0         dq         0x0000000000000000                          ; DATA XREF=sub_1d30, filesystem_type+96, setup_dir.isra.4+12
                     qword_20dfd8:
000000000020dfd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020dfe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020dfe1         db  0x00 ; '.'
000000000020dfe2         db  0x00 ; '.'
000000000020dfe3         db  0x00 ; '.'
000000000020dfe4         db  0x00 ; '.'
000000000020dfe5         db  0x00 ; '.'
000000000020dfe6         db  0x00 ; '.'
000000000020dfe7         db  0x00 ; '.'
                     qword_20dfe8:
000000000020dfe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20dff0:
000000000020dff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20dff8:
000000000020dff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20dff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20e000; 0x20e080[ (128 bytes)
        ; File offset : [57344; 57472[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020e000         align      8
                     __dso_handle:
000000000020e008         dq         0x000000000020e008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020e010         dq         0x000000000000b1b4                          ; "8.31", DATA XREF=main+374
                     exit_failure:
000000000020e018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020e01c         db  0x00 ; '.'
000000000020e01d         db  0x00 ; '.'
000000000020e01e         db  0x00 ; '.'
000000000020e01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020e020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020e021         db  0x00 ; '.'
000000000020e022         db  0x00 ; '.'
000000000020e023         db  0x00 ; '.'
000000000020e024         db  0x00 ; '.'
000000000020e025         db  0x00 ; '.'
000000000020e026         db  0x00 ; '.'
000000000020e027         db  0x00 ; '.'
000000000020e028         db  0x00 ; '.'
000000000020e029         db  0x00 ; '.'
000000000020e02a         db  0x00 ; '.'
000000000020e02b         db  0x00 ; '.'
000000000020e02c         db  0x00 ; '.'
000000000020e02d         db  0x00 ; '.'
000000000020e02e         db  0x00 ; '.'
000000000020e02f         db  0x00 ; '.'
000000000020e030         db  0x00 ; '.'
000000000020e031         db  0x00 ; '.'
000000000020e032         db  0x00 ; '.'
000000000020e033         db  0x00 ; '.'
000000000020e034         db  0x00 ; '.'
000000000020e035         db  0x00 ; '.'
000000000020e036         db  0x00 ; '.'
000000000020e037         db  0x00 ; '.'
000000000020e038         db  0x00 ; '.'
000000000020e039         db  0x00 ; '.'
000000000020e03a         db  0x00 ; '.'
000000000020e03b         db  0x00 ; '.'
000000000020e03c         db  0x00 ; '.'
000000000020e03d         db  0x00 ; '.'
000000000020e03e         db  0x00 ; '.'
000000000020e03f         db  0x00 ; '.'
000000000020e040         db  0x00 ; '.'
000000000020e041         db  0x00 ; '.'
000000000020e042         db  0x00 ; '.'
000000000020e043         db  0x00 ; '.'
000000000020e044         db  0x00 ; '.'
000000000020e045         db  0x00 ; '.'
000000000020e046         db  0x00 ; '.'
000000000020e047         db  0x00 ; '.'
000000000020e048         db  0x00 ; '.'
000000000020e049         db  0x00 ; '.'
000000000020e04a         db  0x00 ; '.'
000000000020e04b         db  0x00 ; '.'
000000000020e04c         db  0x00 ; '.'
000000000020e04d         db  0x00 ; '.'
000000000020e04e         db  0x00 ; '.'
000000000020e04f         db  0x00 ; '.'
000000000020e050         db  0x00 ; '.'
000000000020e051         db  0x00 ; '.'
000000000020e052         db  0x00 ; '.'
000000000020e053         db  0x00 ; '.'
000000000020e054         db  0x00 ; '.'
000000000020e055         db  0x00 ; '.'
000000000020e056         db  0x00 ; '.'
000000000020e057         db  0x00 ; '.'
                     nslots:
000000000020e058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020e05c         align      32
                     slotvec:
000000000020e060         dq         0x000000000020e070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020e068         db  0x00 ; '.'
000000000020e069         db  0x00 ; '.'
000000000020e06a         db  0x00 ; '.'
000000000020e06b         db  0x00 ; '.'
000000000020e06c         db  0x00 ; '.'
000000000020e06d         db  0x00 ; '.'
000000000020e06e         db  0x00 ; '.'
000000000020e06f         db  0x00 ; '.'
                     slotvec0:
000000000020e070         dq         1.26481e-321, 1.06459e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20e080; 0x20e240[ (448 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020e080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020e081         db  0x00 ; '.'
000000000020e082         db  0x00 ; '.'
000000000020e083         db  0x00 ; '.'
000000000020e084         db  0x00 ; '.'
000000000020e085         db  0x00 ; '.'
000000000020e086         db  0x00 ; '.'
000000000020e087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020e088         db  0x00 ; '.'                                         ; DATA XREF=main+367, usage+128, usage+165, usage+202, usage+239, usage+276, usage+313, usage+350, usage+387, usage+424, usage+461
000000000020e089         db  0x00 ; '.'
000000000020e08a         db  0x00 ; '.'
000000000020e08b         db  0x00 ; '.'
000000000020e08c         db  0x00 ; '.'
000000000020e08d         db  0x00 ; '.'
000000000020e08e         db  0x00 ; '.'
000000000020e08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020e090         db  0x00 ; '.'                                         ; DATA XREF=main+538, main+639, main+777
000000000020e091         db  0x00 ; '.'
000000000020e092         db  0x00 ; '.'
000000000020e093         db  0x00 ; '.'
000000000020e094         db  0x00 ; '.'
000000000020e095         db  0x00 ; '.'
000000000020e096         db  0x00 ; '.'
000000000020e097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020e098         db  0x00 ; '.'                                         ; DATA XREF=main+328
000000000020e099         db  0x00 ; '.'
000000000020e09a         db  0x00 ; '.'
000000000020e09b         db  0x00 ; '.'
000000000020e09c         db  0x00 ; '.'
000000000020e09d         db  0x00 ; '.'
000000000020e09e         db  0x00 ; '.'
000000000020e09f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020e0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020e0a1         db  0x00 ; '.'
000000000020e0a2         db  0x00 ; '.'
000000000020e0a3         db  0x00 ; '.'
000000000020e0a4         db  0x00 ; '.'
000000000020e0a5         db  0x00 ; '.'
000000000020e0a6         db  0x00 ; '.'
000000000020e0a7         db  0x00 ; '.'
000000000020e0a8         db  0x00 ; '.'
000000000020e0a9         db  0x00 ; '.'
000000000020e0aa         db  0x00 ; '.'
000000000020e0ab         db  0x00 ; '.'
000000000020e0ac         db  0x00 ; '.'
000000000020e0ad         db  0x00 ; '.'
000000000020e0ae         db  0x00 ; '.'
000000000020e0af         db  0x00 ; '.'
000000000020e0b0         db  0x00 ; '.'
000000000020e0b1         db  0x00 ; '.'
000000000020e0b2         db  0x00 ; '.'
000000000020e0b3         db  0x00 ; '.'
000000000020e0b4         db  0x00 ; '.'
000000000020e0b5         db  0x00 ; '.'
000000000020e0b6         db  0x00 ; '.'
000000000020e0b7         db  0x00 ; '.'
000000000020e0b8         db  0x00 ; '.'
000000000020e0b9         db  0x00 ; '.'
000000000020e0ba         db  0x00 ; '.'
000000000020e0bb         db  0x00 ; '.'
000000000020e0bc         db  0x00 ; '.'
000000000020e0bd         db  0x00 ; '.'
000000000020e0be         db  0x00 ; '.'
000000000020e0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020e0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020e0c1         db  0x00 ; '.'
000000000020e0c2         db  0x00 ; '.'
000000000020e0c3         db  0x00 ; '.'
000000000020e0c4         db  0x00 ; '.'
000000000020e0c5         db  0x00 ; '.'
000000000020e0c6         db  0x00 ; '.'
000000000020e0c7         db  0x00 ; '.'
                     completed.7697:
000000000020e0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020e0c9         db  0x00 ; '.'
000000000020e0ca         db  0x00 ; '.'
000000000020e0cb         db  0x00 ; '.'
000000000020e0cc         db  0x00 ; '.'
000000000020e0cd         db  0x00 ; '.'
000000000020e0ce         db  0x00 ; '.'
000000000020e0cf         db  0x00 ; '.'
                     dev_ino_buf.7117:
000000000020e0d0         db  0x00 ; '.'                                         ; DATA XREF=main+834
000000000020e0d1         db  0x00 ; '.'
000000000020e0d2         db  0x00 ; '.'
000000000020e0d3         db  0x00 ; '.'
000000000020e0d4         db  0x00 ; '.'
000000000020e0d5         db  0x00 ; '.'
000000000020e0d6         db  0x00 ; '.'
000000000020e0d7         db  0x00 ; '.'
000000000020e0d8         db  0x00 ; '.'
000000000020e0d9         db  0x00 ; '.'
000000000020e0da         db  0x00 ; '.'
000000000020e0db         db  0x00 ; '.'
000000000020e0dc         db  0x00 ; '.'
000000000020e0dd         db  0x00 ; '.'
000000000020e0de         db  0x00 ; '.'
000000000020e0df         db  0x00 ; '.'
                     reference_file:
000000000020e0e0         db  0x00 ; '.'                                         ; DATA XREF=main+335, main+548
000000000020e0e1         db  0x00 ; '.'
000000000020e0e2         db  0x00 ; '.'
000000000020e0e3         db  0x00 ; '.'
000000000020e0e4         db  0x00 ; '.'
000000000020e0e5         db  0x00 ; '.'
000000000020e0e6         db  0x00 ; '.'
000000000020e0e7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020e0e8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020e0e9         db  0x00 ; '.'
000000000020e0ea         db  0x00 ; '.'
000000000020e0eb         db  0x00 ; '.'
000000000020e0ec         db  0x00 ; '.'
000000000020e0ed         db  0x00 ; '.'
000000000020e0ee         db  0x00 ; '.'
000000000020e0ef         db  0x00 ; '.'
                     file_name:
000000000020e0f0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020e0f1         db  0x00 ; '.'
000000000020e0f2         db  0x00 ; '.'
000000000020e0f3         db  0x00 ; '.'
000000000020e0f4         db  0x00 ; '.'
000000000020e0f5         db  0x00 ; '.'
000000000020e0f6         db  0x00 ; '.'
000000000020e0f7         db  0x00 ; '.'
                     program_name:
000000000020e0f8         db  0x00 ; '.'                                         ; DATA XREF=usage+20, usage+498, set_program_name+109
000000000020e0f9         db  0x00 ; '.'
000000000020e0fa         db  0x00 ; '.'
000000000020e0fb         db  0x00 ; '.'
000000000020e0fc         db  0x00 ; '.'
000000000020e0fd         db  0x00 ; '.'
000000000020e0fe         db  0x00 ; '.'
000000000020e0ff         db  0x00 ; '.'
                     slot0:
000000000020e100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020e101         db  0x00 ; '.'
000000000020e102         db  0x00 ; '.'
000000000020e103         db  0x00 ; '.'
000000000020e104         db  0x00 ; '.'
000000000020e105         db  0x00 ; '.'
000000000020e106         db  0x00 ; '.'
000000000020e107         db  0x00 ; '.'
000000000020e108         db  0x00 ; '.'
000000000020e109         db  0x00 ; '.'
000000000020e10a         db  0x00 ; '.'
000000000020e10b         db  0x00 ; '.'
000000000020e10c         db  0x00 ; '.'
000000000020e10d         db  0x00 ; '.'
000000000020e10e         db  0x00 ; '.'
000000000020e10f         db  0x00 ; '.'
000000000020e110         db  0x00 ; '.'
000000000020e111         db  0x00 ; '.'
000000000020e112         db  0x00 ; '.'
000000000020e113         db  0x00 ; '.'
000000000020e114         db  0x00 ; '.'
000000000020e115         db  0x00 ; '.'
000000000020e116         db  0x00 ; '.'
000000000020e117         db  0x00 ; '.'
000000000020e118         db  0x00 ; '.'
000000000020e119         db  0x00 ; '.'
000000000020e11a         db  0x00 ; '.'
000000000020e11b         db  0x00 ; '.'
000000000020e11c         db  0x00 ; '.'
000000000020e11d         db  0x00 ; '.'
000000000020e11e         db  0x00 ; '.'
000000000020e11f         db  0x00 ; '.'
000000000020e120         db  0x00 ; '.'
000000000020e121         db  0x00 ; '.'
000000000020e122         db  0x00 ; '.'
000000000020e123         db  0x00 ; '.'
000000000020e124         db  0x00 ; '.'
000000000020e125         db  0x00 ; '.'
000000000020e126         db  0x00 ; '.'
000000000020e127         db  0x00 ; '.'
000000000020e128         db  0x00 ; '.'
000000000020e129         db  0x00 ; '.'
000000000020e12a         db  0x00 ; '.'
000000000020e12b         db  0x00 ; '.'
000000000020e12c         db  0x00 ; '.'
000000000020e12d         db  0x00 ; '.'
000000000020e12e         db  0x00 ; '.'
000000000020e12f         db  0x00 ; '.'
000000000020e130         db  0x00 ; '.'
000000000020e131         db  0x00 ; '.'
000000000020e132         db  0x00 ; '.'
000000000020e133         db  0x00 ; '.'
000000000020e134         db  0x00 ; '.'
000000000020e135         db  0x00 ; '.'
000000000020e136         db  0x00 ; '.'
000000000020e137         db  0x00 ; '.'
000000000020e138         db  0x00 ; '.'
000000000020e139         db  0x00 ; '.'
000000000020e13a         db  0x00 ; '.'
000000000020e13b         db  0x00 ; '.'
000000000020e13c         db  0x00 ; '.'
000000000020e13d         db  0x00 ; '.'
000000000020e13e         db  0x00 ; '.'
000000000020e13f         db  0x00 ; '.'
000000000020e140         db  0x00 ; '.'
000000000020e141         db  0x00 ; '.'
000000000020e142         db  0x00 ; '.'
000000000020e143         db  0x00 ; '.'
000000000020e144         db  0x00 ; '.'
000000000020e145         db  0x00 ; '.'
000000000020e146         db  0x00 ; '.'
000000000020e147         db  0x00 ; '.'
000000000020e148         db  0x00 ; '.'
000000000020e149         db  0x00 ; '.'
000000000020e14a         db  0x00 ; '.'
000000000020e14b         db  0x00 ; '.'
000000000020e14c         db  0x00 ; '.'
000000000020e14d         db  0x00 ; '.'
000000000020e14e         db  0x00 ; '.'
000000000020e14f         db  0x00 ; '.'
000000000020e150         db  0x00 ; '.'
000000000020e151         db  0x00 ; '.'
000000000020e152         db  0x00 ; '.'
000000000020e153         db  0x00 ; '.'
000000000020e154         db  0x00 ; '.'
000000000020e155         db  0x00 ; '.'
000000000020e156         db  0x00 ; '.'
000000000020e157         db  0x00 ; '.'
000000000020e158         db  0x00 ; '.'
000000000020e159         db  0x00 ; '.'
000000000020e15a         db  0x00 ; '.'
000000000020e15b         db  0x00 ; '.'
000000000020e15c         db  0x00 ; '.'
000000000020e15d         db  0x00 ; '.'
000000000020e15e         db  0x00 ; '.'
000000000020e15f         db  0x00 ; '.'
000000000020e160         db  0x00 ; '.'
000000000020e161         db  0x00 ; '.'
000000000020e162         db  0x00 ; '.'
000000000020e163         db  0x00 ; '.'
000000000020e164         db  0x00 ; '.'
000000000020e165         db  0x00 ; '.'
000000000020e166         db  0x00 ; '.'
000000000020e167         db  0x00 ; '.'
000000000020e168         db  0x00 ; '.'
000000000020e169         db  0x00 ; '.'
000000000020e16a         db  0x00 ; '.'
000000000020e16b         db  0x00 ; '.'
000000000020e16c         db  0x00 ; '.'
000000000020e16d         db  0x00 ; '.'
000000000020e16e         db  0x00 ; '.'
000000000020e16f         db  0x00 ; '.'
000000000020e170         db  0x00 ; '.'
000000000020e171         db  0x00 ; '.'
000000000020e172         db  0x00 ; '.'
000000000020e173         db  0x00 ; '.'
000000000020e174         db  0x00 ; '.'
000000000020e175         db  0x00 ; '.'
000000000020e176         db  0x00 ; '.'
000000000020e177         db  0x00 ; '.'
000000000020e178         db  0x00 ; '.'
000000000020e179         db  0x00 ; '.'
000000000020e17a         db  0x00 ; '.'
000000000020e17b         db  0x00 ; '.'
000000000020e17c         db  0x00 ; '.'
000000000020e17d         db  0x00 ; '.'
000000000020e17e         db  0x00 ; '.'
000000000020e17f         db  0x00 ; '.'
000000000020e180         db  0x00 ; '.'
000000000020e181         db  0x00 ; '.'
000000000020e182         db  0x00 ; '.'
000000000020e183         db  0x00 ; '.'
000000000020e184         db  0x00 ; '.'
000000000020e185         db  0x00 ; '.'
000000000020e186         db  0x00 ; '.'
000000000020e187         db  0x00 ; '.'
000000000020e188         db  0x00 ; '.'
000000000020e189         db  0x00 ; '.'
000000000020e18a         db  0x00 ; '.'
000000000020e18b         db  0x00 ; '.'
000000000020e18c         db  0x00 ; '.'
000000000020e18d         db  0x00 ; '.'
000000000020e18e         db  0x00 ; '.'
000000000020e18f         db  0x00 ; '.'
000000000020e190         db  0x00 ; '.'
000000000020e191         db  0x00 ; '.'
000000000020e192         db  0x00 ; '.'
000000000020e193         db  0x00 ; '.'
000000000020e194         db  0x00 ; '.'
000000000020e195         db  0x00 ; '.'
000000000020e196         db  0x00 ; '.'
000000000020e197         db  0x00 ; '.'
000000000020e198         db  0x00 ; '.'
000000000020e199         db  0x00 ; '.'
000000000020e19a         db  0x00 ; '.'
000000000020e19b         db  0x00 ; '.'
000000000020e19c         db  0x00 ; '.'
000000000020e19d         db  0x00 ; '.'
000000000020e19e         db  0x00 ; '.'
000000000020e19f         db  0x00 ; '.'
000000000020e1a0         db  0x00 ; '.'
000000000020e1a1         db  0x00 ; '.'
000000000020e1a2         db  0x00 ; '.'
000000000020e1a3         db  0x00 ; '.'
000000000020e1a4         db  0x00 ; '.'
000000000020e1a5         db  0x00 ; '.'
000000000020e1a6         db  0x00 ; '.'
000000000020e1a7         db  0x00 ; '.'
000000000020e1a8         db  0x00 ; '.'
000000000020e1a9         db  0x00 ; '.'
000000000020e1aa         db  0x00 ; '.'
000000000020e1ab         db  0x00 ; '.'
000000000020e1ac         db  0x00 ; '.'
000000000020e1ad         db  0x00 ; '.'
000000000020e1ae         db  0x00 ; '.'
000000000020e1af         db  0x00 ; '.'
000000000020e1b0         db  0x00 ; '.'
000000000020e1b1         db  0x00 ; '.'
000000000020e1b2         db  0x00 ; '.'
000000000020e1b3         db  0x00 ; '.'
000000000020e1b4         db  0x00 ; '.'
000000000020e1b5         db  0x00 ; '.'
000000000020e1b6         db  0x00 ; '.'
000000000020e1b7         db  0x00 ; '.'
000000000020e1b8         db  0x00 ; '.'
000000000020e1b9         db  0x00 ; '.'
000000000020e1ba         db  0x00 ; '.'
000000000020e1bb         db  0x00 ; '.'
000000000020e1bc         db  0x00 ; '.'
000000000020e1bd         db  0x00 ; '.'
000000000020e1be         db  0x00 ; '.'
000000000020e1bf         db  0x00 ; '.'
000000000020e1c0         db  0x00 ; '.'
000000000020e1c1         db  0x00 ; '.'
000000000020e1c2         db  0x00 ; '.'
000000000020e1c3         db  0x00 ; '.'
000000000020e1c4         db  0x00 ; '.'
000000000020e1c5         db  0x00 ; '.'
000000000020e1c6         db  0x00 ; '.'
000000000020e1c7         db  0x00 ; '.'
000000000020e1c8         db  0x00 ; '.'
000000000020e1c9         db  0x00 ; '.'
000000000020e1ca         db  0x00 ; '.'
000000000020e1cb         db  0x00 ; '.'
000000000020e1cc         db  0x00 ; '.'
000000000020e1cd         db  0x00 ; '.'
000000000020e1ce         db  0x00 ; '.'
000000000020e1cf         db  0x00 ; '.'
000000000020e1d0         db  0x00 ; '.'
000000000020e1d1         db  0x00 ; '.'
000000000020e1d2         db  0x00 ; '.'
000000000020e1d3         db  0x00 ; '.'
000000000020e1d4         db  0x00 ; '.'
000000000020e1d5         db  0x00 ; '.'
000000000020e1d6         db  0x00 ; '.'
000000000020e1d7         db  0x00 ; '.'
000000000020e1d8         db  0x00 ; '.'
000000000020e1d9         db  0x00 ; '.'
000000000020e1da         db  0x00 ; '.'
000000000020e1db         db  0x00 ; '.'
000000000020e1dc         db  0x00 ; '.'
000000000020e1dd         db  0x00 ; '.'
000000000020e1de         db  0x00 ; '.'
000000000020e1df         db  0x00 ; '.'
000000000020e1e0         db  0x00 ; '.'
000000000020e1e1         db  0x00 ; '.'
000000000020e1e2         db  0x00 ; '.'
000000000020e1e3         db  0x00 ; '.'
000000000020e1e4         db  0x00 ; '.'
000000000020e1e5         db  0x00 ; '.'
000000000020e1e6         db  0x00 ; '.'
000000000020e1e7         db  0x00 ; '.'
000000000020e1e8         db  0x00 ; '.'
000000000020e1e9         db  0x00 ; '.'
000000000020e1ea         db  0x00 ; '.'
000000000020e1eb         db  0x00 ; '.'
000000000020e1ec         db  0x00 ; '.'
000000000020e1ed         db  0x00 ; '.'
000000000020e1ee         db  0x00 ; '.'
000000000020e1ef         db  0x00 ; '.'
000000000020e1f0         db  0x00 ; '.'
000000000020e1f1         db  0x00 ; '.'
000000000020e1f2         db  0x00 ; '.'
000000000020e1f3         db  0x00 ; '.'
000000000020e1f4         db  0x00 ; '.'
000000000020e1f5         db  0x00 ; '.'
000000000020e1f6         db  0x00 ; '.'
000000000020e1f7         db  0x00 ; '.'
000000000020e1f8         db  0x00 ; '.'
000000000020e1f9         db  0x00 ; '.'
000000000020e1fa         db  0x00 ; '.'
000000000020e1fb         db  0x00 ; '.'
000000000020e1fc         db  0x00 ; '.'
000000000020e1fd         db  0x00 ; '.'
000000000020e1fe         db  0x00 ; '.'
000000000020e1ff         db  0x00 ; '.'
                     default_quoting_options:
000000000020e200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020e201         db  0x00 ; '.'
000000000020e202         db  0x00 ; '.'
000000000020e203         db  0x00 ; '.'
000000000020e204         db  0x00 ; '.'
000000000020e205         db  0x00 ; '.'
000000000020e206         db  0x00 ; '.'
000000000020e207         db  0x00 ; '.'
000000000020e208         db  0x00 ; '.'
000000000020e209         db  0x00 ; '.'
000000000020e20a         db  0x00 ; '.'
000000000020e20b         db  0x00 ; '.'
000000000020e20c         db  0x00 ; '.'
000000000020e20d         db  0x00 ; '.'
000000000020e20e         db  0x00 ; '.'
000000000020e20f         db  0x00 ; '.'
000000000020e210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020e211         db  0x00 ; '.'
000000000020e212         db  0x00 ; '.'
000000000020e213         db  0x00 ; '.'
000000000020e214         db  0x00 ; '.'
000000000020e215         db  0x00 ; '.'
000000000020e216         db  0x00 ; '.'
000000000020e217         db  0x00 ; '.'
000000000020e218         db  0x00 ; '.'
000000000020e219         db  0x00 ; '.'
000000000020e21a         db  0x00 ; '.'
000000000020e21b         db  0x00 ; '.'
000000000020e21c         db  0x00 ; '.'
000000000020e21d         db  0x00 ; '.'
000000000020e21e         db  0x00 ; '.'
000000000020e21f         db  0x00 ; '.'
000000000020e220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020e221         db  0x00 ; '.'
000000000020e222         db  0x00 ; '.'
000000000020e223         db  0x00 ; '.'
000000000020e224         db  0x00 ; '.'
000000000020e225         db  0x00 ; '.'
000000000020e226         db  0x00 ; '.'
000000000020e227         db  0x00 ; '.'
000000000020e228         db  0x00 ; '.'
000000000020e229         db  0x00 ; '.'
000000000020e22a         db  0x00 ; '.'
000000000020e22b         db  0x00 ; '.'
000000000020e22c         db  0x00 ; '.'
000000000020e22d         db  0x00 ; '.'
000000000020e22e         db  0x00 ; '.'
000000000020e22f         db  0x00 ; '.'
                     qword_20e230:
000000000020e230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020e231         db  0x00 ; '.'
000000000020e232         db  0x00 ; '.'
000000000020e233         db  0x00 ; '.'
000000000020e234         db  0x00 ; '.'
000000000020e235         db  0x00 ; '.'
000000000020e236         db  0x00 ; '.'
000000000020e237         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020e238         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020e239         db  0x00 ; '.'
000000000020e23a         db  0x00 ; '.'
000000000020e23b         db  0x00 ; '.'
000000000020e23c         db  0x00 ; '.'
000000000020e23d         db  0x00 ; '.'
000000000020e23e         db  0x00 ; '.'
000000000020e23f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20e250; 0x20e6d0[ (1152 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20e250; 0x41c920[ (2156240 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     endgrent:
000000000020e250         extern function code                                   ; DATA XREF=endgrent@GOT
                     free:
000000000020e258         extern function code
                     abort:
000000000020e260         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020e268         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020e270         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020e278         extern function code
                     _exit:
000000000020e280         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000020e288         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000020e290         extern function code                                   ; DATA XREF=__fpending@GOT
                     qsort:
000000000020e298         extern function code                                   ; DATA XREF=qsort@GOT
                     fcntl:
000000000020e2a0         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
000000000020e2a8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020e2b0         extern function code                                   ; DATA XREF=fclose@GOT
                     getpwuid:
000000000020e2b8         extern function code                                   ; DATA XREF=getpwuid@GOT
                     bindtextdomain:
000000000020e2c0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     stpcpy:
000000000020e2c8         extern function code                                   ; DATA XREF=stpcpy@GOT
                     dcgettext:
000000000020e2d0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020e2d8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020e2e0         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020e2e8         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
000000000020e2f0         extern function code                                   ; DATA XREF=openat@GOT
                     __stack_chk_fail:
000000000020e2f8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020e300         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020e308         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020e310         extern function code                                   ; DATA XREF=strchr@GOT
                     getgrgid:
000000000020e318         extern function code                                   ; DATA XREF=getgrgid@GOT
                     __fxstatat:
000000000020e320         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     strrchr:
000000000020e328         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020e330         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020e338         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020e340         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020e348         extern function code                                   ; DATA XREF=close@GOT
                     __openat_2:
000000000020e350         extern function code                                   ; DATA XREF=__openat_2@GOT
                     closedir:
000000000020e358         extern function code                                   ; DATA XREF=closedir@GOT
                     __libc_start_main:
000000000020e360         extern function code
                     memcmp:
000000000020e368         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020e370         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020e378         extern function code                                   ; DATA XREF=calloc@GOT
                     dirfd:
000000000020e380         extern function code                                   ; DATA XREF=dirfd@GOT
                     __gmon_start__:
000000000020e388         extern function code
                     memcpy:
000000000020e390         extern function code                                   ; DATA XREF=memcpy@GOT
                     getgrnam:
000000000020e398         extern function code                                   ; DATA XREF=getgrnam@GOT
                     fileno:
000000000020e3a0         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020e3a8         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
000000000020e3b0         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000020e3b8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020e3c0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020e3c8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020e3d0         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020e3d8         extern function code                                   ; DATA XREF=__freading@GOT
                     fchdir:
000000000020e3e0         extern function code                                   ; DATA XREF=fchdir@GOT
                     realloc:
000000000020e3e8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020e3f0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020e3f8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020e400         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020e408         extern function code                                   ; DATA XREF=error@GOT
                     open:
000000000020e410         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020e418         extern function code                                   ; DATA XREF=fseeko@GOT
                     fchown:
000000000020e420         extern function code                                   ; DATA XREF=fchown@GOT
                     fdopendir:
000000000020e428         extern function code                                   ; DATA XREF=fdopendir@GOT
                     strtoul:
000000000020e430         extern function code                                   ; DATA XREF=strtoul@GOT
                     fstatfs:
000000000020e438         extern function code                                   ; DATA XREF=fstatfs@GOT
                     __cxa_atexit:
000000000020e440         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     fchownat:
000000000020e448         extern function code                                   ; DATA XREF=fchownat@GOT
                     exit:
000000000020e450         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020e458         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020e460         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020e468         extern function code
                     mbsinit:
000000000020e470         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020e478         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020e480         extern function code
                     __ctype_b_loc:
000000000020e488         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     endgrent@@GLIBC_2.2.5:
000000000020e490         extern function code
                     free@@GLIBC_2.2.5:
000000000020e498         extern function code
                     abort@@GLIBC_2.2.5:
000000000020e4a0         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020e4a8         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020e4b0         extern function code
                     _ITM_deregisterTMCloneTable_20e4b8:        // _ITM_deregisterTMCloneTable
000000000020e4b8         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020e4c0         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000020e4c8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020e4d0         extern function code
                     qsort@@GLIBC_2.2.5:
000000000020e4d8         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020e4e0         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020e4e8         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020e4f0         extern function code
                     getpwuid@@GLIBC_2.2.5:
000000000020e4f8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020e500         extern function code
                     stpcpy@@GLIBC_2.2.5:
000000000020e508         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020e510         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020e518         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020e520         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020e528         extern function code
                     openat@@GLIBC_2.4:
000000000020e530         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020e538         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020e540         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020e548         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020e550         extern function code
                     getgrgid@@GLIBC_2.2.5:
000000000020e558         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020e560         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020e568         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020e570         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020e578         extern function code
                     memset@@GLIBC_2.2.5:
000000000020e580         extern function code
                     close@@GLIBC_2.2.5:
000000000020e588         extern function code
                     __openat_2@@GLIBC_2.7:
000000000020e590         extern function code
                     closedir@@GLIBC_2.2.5:
000000000020e598         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020e5a0         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020e5a8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020e5b0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020e5b8         extern function code
                     dirfd@@GLIBC_2.2.5:
000000000020e5c0         extern function code
                     __gmon_start___20e5c8:        // __gmon_start__
000000000020e5c8         extern function code
                     memcpy@@GLIBC_2.14:
000000000020e5d0         extern function code
                     getgrnam@@GLIBC_2.2.5:
000000000020e5d8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020e5e0         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020e5e8         extern function code
                     readdir@@GLIBC_2.2.5:
000000000020e5f0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020e5f8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020e600         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020e608         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020e610         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020e618         extern function code
                     fchdir@@GLIBC_2.2.5:
000000000020e620         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020e628         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020e630         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020e638         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020e640         extern function code
                     error@@GLIBC_2.2.5:
000000000020e648         extern function code
                     open@@GLIBC_2.2.5:
000000000020e650         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020e658         extern function code
                     fchown@@GLIBC_2.2.5:
000000000020e660         extern function code
                     fdopendir@@GLIBC_2.4:
000000000020e668         extern function code
                     strtoul@@GLIBC_2.2.5:
000000000020e670         extern function code
                     fstatfs@@GLIBC_2.2.5:
000000000020e678         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020e680         extern function code
                     fchownat@@GLIBC_2.4:
000000000020e688         extern function code
                     exit@@GLIBC_2.2.5:
000000000020e690         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020e698         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020e6a0         extern function code
                     _ITM_registerTMCloneTable_20e6a8:        // _ITM_registerTMCloneTable
000000000020e6a8         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020e6b0         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020e6b8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020e6c0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020e6c8         extern function code
