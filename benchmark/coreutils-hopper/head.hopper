
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/head
        UUID: F1AF9887-F376-8DDB-2C76-57692863AD3D
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8b28[ (35624 bytes)
        ; File offset : [0; 35624[ (35624 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x60 ; '`'
0000000000000019         db  0x29 ; ')'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x98 ; '.'
0000000000000029         db  0x21 ; '!'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x28 ; '('
00000000000000d1         db  0x8b ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x28 ; '('
00000000000000d9         db  0x8b ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x70 ; 'p'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x70 ; 'p'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x70 ; 'p'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x30 ; '0'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xe8 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'                                         ; DATA XREF=main+15, main+1869
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x7c ; '|'
0000000000000199         db  0x7a ; 'z'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x7c ; '|'
00000000000001a1         db  0x7a ; 'z'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x7c ; '|'
00000000000001a9         db  0x7a ; 'z'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xb4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xb4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=main+3088, main+4291, xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x70 ; 'p'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x70 ; 'p'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x70 ; 'p'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x90 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x90 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xf1 ; '.'
0000000000000285         db  0xaf ; '.'
0000000000000286         db  0x98 ; '.'
0000000000000287         db  0x87 ; '.'
0000000000000288         db  0xf3 ; '.'
0000000000000289         db  0x76 ; 'v'
000000000000028a         db  0x8d ; '.'
000000000000028b         db  0xdb ; '.'
000000000000028c         db  0x2c ; ','
000000000000028d         db  0x76 ; 'v'
000000000000028e         db  0x57 ; 'W'
000000000000028f         db  0x69 ; 'i'
0000000000000290         db  0x28 ; '('
0000000000000291         db  0x63 ; 'c'
0000000000000292         db  0xad ; '.'
0000000000000293         db  0x3d ; '='
0000000000000294         db  0xa8 ; '.'
0000000000000295         db  0x19 ; '.'
0000000000000296         db  0xa4 ; '.'
0000000000000297         db  0x3f ; '?'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x38 ; '8'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x38 ; '8'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x39 ; '9'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3e ; '>'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8e0[ (1536 bytes)
        ; File offset : [736; 2272[ (1536 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x42 ; 'B'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x8c ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xf9 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x43 ; 'C'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xa6 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x92 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xa4 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x1f ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xec ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x38 ; '8'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xe8 ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x5a ; 'Z'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xcd ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xeb ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x6a ; 'j'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x81 ; '.'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x3b ; ';'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xb4 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x52 ; 'R'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x2b ; '+'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xbf ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x20 ; ' '
00000000000004f1         db  0x02 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xf2 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x39 ; '9'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x98 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x0a ; '.'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x07 ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x0f ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x33 ; '3'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe4 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xc2 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x20 ; ' '
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x31 ; '1'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x96 ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x3f ; '?'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0b ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x4e ; 'N'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x8d ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x6f ; 'o'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xf7 ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x84 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x31 ; '1'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x64 ; 'd'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x9f ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0xaf ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x19 ; '.'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x62 ; 'b'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x93 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x9d ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x16 ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xd1 ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x20 ; ' '
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x46 ; 'F'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x7b ; '{'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd9 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x22 ; '"'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x5a ; 'Z'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x24 ; '$'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xa8 ; '.'
0000000000000829         db  0xa0 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x47 ; 'G'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xa0 ; '.'
0000000000000841         db  0xa0 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xa7 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x21 ; '!'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xc0 ; '.'
0000000000000859         db  0xa0 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x52 ; 'R'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xc0 ; '.'
0000000000000871         db  0xa0 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xbb ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x21 ; '!'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xa0 ; '.'
0000000000000889         db  0xa0 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x7a ; 'z'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xe0 ; '.'
00000000000008a1         db  0xa0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x4b ; 'K'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xb0 ; '.'
00000000000008b9         db  0xa0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x04 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x68 ; 'h'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xb8 ; '.'
00000000000008d1         db  0xa0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8e0; 0xbcb[ (747 bytes)
        ; File offset : [2272; 3019[ (747 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x6c ; 'l'
00000000000008e2         db  0x69 ; 'i'
00000000000008e3         db  0x62 ; 'b'
00000000000008e4         db  0x63 ; 'c'
00000000000008e5         db  0x2e ; '.'
00000000000008e6         db  0x73 ; 's'
00000000000008e7         db  0x6f ; 'o'
00000000000008e8         db  0x2e ; '.'
00000000000008e9         db  0x36 ; '6'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x66 ; 'f'
00000000000008ec         db  0x66 ; 'f'
00000000000008ed         db  0x6c ; 'l'
00000000000008ee         db  0x75 ; 'u'
00000000000008ef         db  0x73 ; 's'
00000000000008f0         db  0x68 ; 'h'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x5f ; '_'
00000000000008f3         db  0x5f ; '_'
00000000000008f4         db  0x70 ; 'p'
00000000000008f5         db  0x72 ; 'r'
00000000000008f6         db  0x69 ; 'i'
00000000000008f7         db  0x6e ; 'n'
00000000000008f8         db  0x74 ; 't'
00000000000008f9         db  0x66 ; 'f'
00000000000008fa         db  0x5f ; '_'
00000000000008fb         db  0x63 ; 'c'
00000000000008fc         db  0x68 ; 'h'
00000000000008fd         db  0x6b ; 'k'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x63 ; 'c'
                     aLearerrunlocke:
0000000000000900         db         "learerr_unlocked", 0
0000000000000911         db  0x73 ; 's'
0000000000000912         db  0x65 ; 'e'
0000000000000913         db  0x74 ; 't'
0000000000000914         db  0x6c ; 'l'
0000000000000915         db  0x6f ; 'o'
0000000000000916         db  0x63 ; 'c'
0000000000000917         db  0x61 ; 'a'
0000000000000918         db  0x6c ; 'l'
0000000000000919         db  0x65 ; 'e'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x6d ; 'm'
000000000000091c         db  0x62 ; 'b'
000000000000091d         db  0x72 ; 'r'
000000000000091e         db  0x74 ; 't'
000000000000091f         db  0x6f ; 'o'
0000000000000920         db  0x77 ; 'w'
0000000000000921         db  0x63 ; 'c'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x73 ; 's'
0000000000000924         db  0x74 ; 't'
0000000000000925         db  0x72 ; 'r'
0000000000000926         db  0x6e ; 'n'
0000000000000927         db  0x63 ; 'c'
0000000000000928         db  0x6d ; 'm'
0000000000000929         db  0x70 ; 'p'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x6f ; 'o'
000000000000092c         db  0x70 ; 'p'
000000000000092d         db  0x74 ; 't'
000000000000092e         db  0x69 ; 'i'
000000000000092f         db  0x6e ; 'n'
0000000000000930         db  0x64 ; 'd'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x73 ; 's'
0000000000000933         db  0x74 ; 't'
0000000000000934         db  0x72 ; 'r'
0000000000000935         db  0x72 ; 'r'
0000000000000936         db  0x63 ; 'c'
0000000000000937         db  0x68 ; 'h'
0000000000000938         db  0x72 ; 'r'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x64 ; 'd'
000000000000093b         db  0x63 ; 'c'
000000000000093c         db  0x67 ; 'g'
000000000000093d         db  0x65 ; 'e'
000000000000093e         db  0x74 ; 't'
000000000000093f         db  0x74 ; 't'
0000000000000940         db  0x65 ; 'e'
0000000000000941         db  0x78 ; 'x'
0000000000000942         db  0x74 ; 't'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x65 ; 'e'
0000000000000945         db  0x72 ; 'r'
0000000000000946         db  0x72 ; 'r'
0000000000000947         db  0x6f ; 'o'
0000000000000948         db  0x72 ; 'r'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x5f ; '_'
000000000000094b         db  0x5f ; '_'
000000000000094c         db  0x73 ; 's'
000000000000094d         db  0x74 ; 't'
000000000000094e         db  0x61 ; 'a'
000000000000094f         db  0x63 ; 'c'
0000000000000950         db  0x6b ; 'k'
0000000000000951         db  0x5f ; '_'
0000000000000952         db  0x63 ; 'c'
0000000000000953         db  0x68 ; 'h'
0000000000000954         db  0x6b ; 'k'
0000000000000955         db  0x5f ; '_'
0000000000000956         db  0x66 ; 'f'
0000000000000957         db  0x61 ; 'a'
0000000000000958         db  0x69 ; 'i'
0000000000000959         db  0x6c ; 'l'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x69 ; 'i'
000000000000095c         db  0x73 ; 's'
000000000000095d         db  0x77 ; 'w'
000000000000095e         db  0x70 ; 'p'
000000000000095f         db  0x72 ; 'r'
0000000000000960         db  0x69 ; 'i'
0000000000000961         db  0x6e ; 'n'
0000000000000962         db  0x74 ; 't'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x72 ; 'r'
0000000000000965         db  0x65 ; 'e'
0000000000000966         db  0x61 ; 'a'
0000000000000967         db  0x6c ; 'l'
0000000000000968         db  0x6c ; 'l'
0000000000000969         db  0x6f ; 'o'
000000000000096a         db  0x63 ; 'c'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x61 ; 'a'
000000000000096d         db  0x62 ; 'b'
000000000000096e         db  0x6f ; 'o'
000000000000096f         db  0x72 ; 'r'
0000000000000970         db  0x74 ; 't'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x65 ; 'e'
0000000000000974         db  0x78 ; 'x'
0000000000000975         db  0x69 ; 'i'
0000000000000976         db  0x74 ; 't'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x6d ; 'm'
0000000000000979         db  0x65 ; 'e'
000000000000097a         db  0x6d ; 'm'
000000000000097b         db  0x63 ; 'c'
000000000000097c         db  0x68 ; 'h'
000000000000097d         db  0x72 ; 'r'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x6d ; 'm'
0000000000000980         db  0x65 ; 'e'
0000000000000981         db  0x6d ; 'm'
0000000000000982         db  0x72 ; 'r'
0000000000000983         db  0x63 ; 'c'
0000000000000984         db  0x68 ; 'h'
0000000000000985         db  0x72 ; 'r'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x70 ; 'p'
0000000000000988         db  0x72 ; 'r'
0000000000000989         db  0x6f ; 'o'
000000000000098a         db  0x67 ; 'g'
000000000000098b         db  0x72 ; 'r'
000000000000098c         db  0x61 ; 'a'
000000000000098d         db  0x6d ; 'm'
000000000000098e         db  0x5f ; '_'
000000000000098f         db  0x69 ; 'i'
0000000000000990         db  0x6e ; 'n'
0000000000000991         db  0x76 ; 'v'
0000000000000992         db  0x6f ; 'o'
0000000000000993         db  0x63 ; 'c'
0000000000000994         db  0x61 ; 'a'
0000000000000995         db  0x74 ; 't'
0000000000000996         db  0x69 ; 'i'
0000000000000997         db  0x6f ; 'o'
0000000000000998         db  0x6e ; 'n'
0000000000000999         db  0x5f ; '_'
000000000000099a         db  0x6e ; 'n'
000000000000099b         db  0x61 ; 'a'
000000000000099c         db  0x6d ; 'm'
000000000000099d         db  0x65 ; 'e'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x5f ; '_'
00000000000009a0         db  0x5f ; '_'
00000000000009a1         db  0x61 ; 'a'
00000000000009a2         db  0x73 ; 's'
00000000000009a3         db  0x73 ; 's'
00000000000009a4         db  0x65 ; 'e'
00000000000009a5         db  0x72 ; 'r'
00000000000009a6         db  0x74 ; 't'
00000000000009a7         db  0x5f ; '_'
00000000000009a8         db  0x66 ; 'f'
00000000000009a9         db  0x61 ; 'a'
00000000000009aa         db  0x69 ; 'i'
00000000000009ab         db  0x6c ; 'l'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x5f ; '_'
00000000000009ae         db  0x5f ; '_'
00000000000009af         db  0x63 ; 'c'
00000000000009b0         db  0x74 ; 't'
00000000000009b1         db  0x79 ; 'y'
00000000000009b2         db  0x70 ; 'p'
00000000000009b3         db  0x65 ; 'e'
00000000000009b4         db  0x5f ; '_'
00000000000009b5         db  0x67 ; 'g'
00000000000009b6         db  0x65 ; 'e'
00000000000009b7         db  0x74 ; 't'
00000000000009b8         db  0x5f ; '_'
00000000000009b9         db  0x6d ; 'm'
00000000000009ba         db  0x62 ; 'b'
00000000000009bb         db  0x5f ; '_'
00000000000009bc         db  0x63 ; 'c'
00000000000009bd         db  0x75 ; 'u'
00000000000009be         db  0x72 ; 'r'
00000000000009bf         db  0x5f ; '_'
00000000000009c0         db  0x6d ; 'm'
00000000000009c1         db  0x61 ; 'a'
00000000000009c2         db  0x78 ; 'x'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x63 ; 'c'
00000000000009c5         db  0x61 ; 'a'
00000000000009c6         db  0x6c ; 'l'
00000000000009c7         db  0x6c ; 'l'
00000000000009c8         db  0x6f ; 'o'
00000000000009c9         db  0x63 ; 'c'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x73 ; 's'
00000000000009cc         db  0x74 ; 't'
00000000000009cd         db  0x72 ; 'r'
00000000000009ce         db  0x6c ; 'l'
00000000000009cf         db  0x65 ; 'e'
00000000000009d0         db  0x6e ; 'n'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x6d ; 'm'
00000000000009d3         db  0x65 ; 'e'
00000000000009d4         db  0x6d ; 'm'
00000000000009d5         db  0x73 ; 's'
00000000000009d6         db  0x65 ; 'e'
00000000000009d7         db  0x74 ; 't'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x5f ; '_'
00000000000009da         db  0x5f ; '_'
00000000000009db         db  0x65 ; 'e'
00000000000009dc         db  0x72 ; 'r'
00000000000009dd         db  0x72 ; 'r'
00000000000009de         db  0x6e ; 'n'
00000000000009df         db  0x6f ; 'o'
00000000000009e0         db  0x5f ; '_'
00000000000009e1         db  0x6c ; 'l'
00000000000009e2         db  0x6f ; 'o'
00000000000009e3         db  0x63 ; 'c'
00000000000009e4         db  0x61 ; 'a'
00000000000009e5         db  0x74 ; 't'
00000000000009e6         db  0x69 ; 'i'
00000000000009e7         db  0x6f ; 'o'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x72 ; 'r'
00000000000009eb         db  0x65 ; 'e'
00000000000009ec         db  0x61 ; 'a'
00000000000009ed         db  0x64 ; 'd'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x6d ; 'm'
00000000000009f0         db  0x65 ; 'e'
00000000000009f1         db  0x6d ; 'm'
00000000000009f2         db  0x63 ; 'c'
00000000000009f3         db  0x6d ; 'm'
00000000000009f4         db  0x70 ; 'p'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x5f ; '_'
00000000000009f7         db  0x5f ; '_'
00000000000009f8         db  0x66 ; 'f'
00000000000009f9         db  0x70 ; 'p'
00000000000009fa         db  0x72 ; 'r'
00000000000009fb         db  0x69 ; 'i'
00000000000009fc         db  0x6e ; 'n'
00000000000009fd         db  0x74 ; 't'
00000000000009fe         db  0x66 ; 'f'
00000000000009ff         db  0x5f ; '_'
0000000000000a00         db  0x63 ; 'c'
0000000000000a01         db  0x68 ; 'h'
0000000000000a02         db  0x6b ; 'k'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x73 ; 's'
0000000000000a05         db  0x74 ; 't'
0000000000000a06         db  0x64 ; 'd'
0000000000000a07         db  0x6f ; 'o'
0000000000000a08         db  0x75 ; 'u'
0000000000000a09         db  0x74 ; 't'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x6c ; 'l'
0000000000000a0c         db  0x73 ; 's'
0000000000000a0d         db  0x65 ; 'e'
0000000000000a0e         db  0x65 ; 'e'
0000000000000a0f         db  0x6b ; 'k'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x6d ; 'm'
0000000000000a12         db  0x65 ; 'e'
0000000000000a13         db  0x6d ; 'm'
0000000000000a14         db  0x63 ; 'c'
0000000000000a15         db  0x70 ; 'p'
0000000000000a16         db  0x79 ; 'y'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x66 ; 'f'
0000000000000a19         db  0x63 ; 'c'
0000000000000a1a         db  0x6c ; 'l'
0000000000000a1b         db  0x6f ; 'o'
0000000000000a1c         db  0x73 ; 's'
0000000000000a1d         db  0x65 ; 'e'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x6d ; 'm'
0000000000000a20         db  0x61 ; 'a'
0000000000000a21         db  0x6c ; 'l'
0000000000000a22         db  0x6c ; 'l'
0000000000000a23         db  0x6f ; 'o'
0000000000000a24         db  0x63 ; 'c'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x6d ; 'm'
0000000000000a27         db  0x62 ; 'b'
0000000000000a28         db  0x73 ; 's'
0000000000000a29         db  0x69 ; 'i'
0000000000000a2a         db  0x6e ; 'n'
0000000000000a2b         db  0x69 ; 'i'
0000000000000a2c         db  0x74 ; 't'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x6e ; 'n'
0000000000000a2f         db  0x6c ; 'l'
0000000000000a30         db  0x5f ; '_'
0000000000000a31         db  0x6c ; 'l'
0000000000000a32         db  0x61 ; 'a'
0000000000000a33         db  0x6e ; 'n'
0000000000000a34         db  0x67 ; 'g'
0000000000000a35         db  0x69 ; 'i'
0000000000000a36         db  0x6e ; 'n'
0000000000000a37         db  0x66 ; 'f'
0000000000000a38         db  0x6f ; 'o'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x5f ; '_'
0000000000000a3b         db  0x5f ; '_'
0000000000000a3c         db  0x63 ; 'c'
0000000000000a3d         db  0x74 ; 't'
0000000000000a3e         db  0x79 ; 'y'
0000000000000a3f         db  0x70 ; 'p'
0000000000000a40         db  0x65 ; 'e'
0000000000000a41         db  0x5f ; '_'
0000000000000a42         db  0x62 ; 'b'
0000000000000a43         db  0x5f ; '_'
0000000000000a44         db  0x6c ; 'l'
0000000000000a45         db  0x6f ; 'o'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x6f ; 'o'
0000000000000a49         db  0x70 ; 'p'
0000000000000a4a         db  0x74 ; 't'
0000000000000a4b         db  0x61 ; 'a'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x67 ; 'g'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x5f ; '_'
0000000000000a50         db  0x5f ; '_'
0000000000000a51         db  0x66 ; 'f'
0000000000000a52         db  0x72 ; 'r'
0000000000000a53         db  0x65 ; 'e'
0000000000000a54         db  0x61 ; 'a'
0000000000000a55         db  0x64 ; 'd'
0000000000000a56         db  0x69 ; 'i'
0000000000000a57         db  0x6e ; 'n'
0000000000000a58         db  0x67 ; 'g'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x73 ; 's'
0000000000000a5b         db  0x74 ; 't'
0000000000000a5c         db  0x64 ; 'd'
0000000000000a5d         db  0x65 ; 'e'
0000000000000a5e         db  0x72 ; 'r'
0000000000000a5f         db  0x72 ; 'r'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x67 ; 'g'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x74 ; 't'
0000000000000a64         db  0x6f ; 'o'
0000000000000a65         db  0x70 ; 'p'
0000000000000a66         db  0x74 ; 't'
0000000000000a67         db  0x5f ; '_'
0000000000000a68         db  0x6c ; 'l'
0000000000000a69         db  0x6f ; 'o'
0000000000000a6a         db  0x6e ; 'n'
0000000000000a6b         db  0x67 ; 'g'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x5f ; '_'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x66 ; 'f'
0000000000000a70         db  0x78 ; 'x'
0000000000000a71         db  0x73 ; 's'
0000000000000a72         db  0x74 ; 't'
0000000000000a73         db  0x61 ; 'a'
0000000000000a74         db  0x74 ; 't'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x66 ; 'f'
0000000000000a77         db  0x69 ; 'i'
0000000000000a78         db  0x6c ; 'l'
0000000000000a79         db  0x65 ; 'e'
0000000000000a7a         db  0x6e ; 'n'
0000000000000a7b         db  0x6f ; 'o'
0000000000000a7c         db  0x00 ; '.'
0000000000000a7d         db  0x66 ; 'f'
0000000000000a7e         db  0x77 ; 'w'
0000000000000a7f         db  0x72 ; 'r'
0000000000000a80         db  0x69 ; 'i'
0000000000000a81         db  0x74 ; 't'
0000000000000a82         db  0x65 ; 'e'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x5f ; '_'
0000000000000a85         db  0x5f ; '_'
0000000000000a86         db  0x66 ; 'f'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x65 ; 'e'
0000000000000a89         db  0x6e ; 'n'
0000000000000a8a         db  0x64 ; 'd'
0000000000000a8b         db  0x69 ; 'i'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x67 ; 'g'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x6f ; 'o'
0000000000000a90         db  0x70 ; 'p'
0000000000000a91         db  0x65 ; 'e'
0000000000000a92         db  0x6e ; 'n'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x73 ; 's'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x72 ; 'r'
0000000000000a97         db  0x63 ; 'c'
0000000000000a98         db  0x68 ; 'h'
0000000000000a99         db  0x72 ; 'r'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x70 ; 'p'
0000000000000a9c         db  0x72 ; 'r'
0000000000000a9d         db  0x6f ; 'o'
0000000000000a9e         db  0x67 ; 'g'
0000000000000a9f         db  0x72 ; 'r'
0000000000000aa0         db  0x61 ; 'a'
0000000000000aa1         db  0x6d ; 'm'
0000000000000aa2         db  0x5f ; '_'
0000000000000aa3         db  0x69 ; 'i'
0000000000000aa4         db  0x6e ; 'n'
0000000000000aa5         db  0x76 ; 'v'
0000000000000aa6         db  0x6f ; 'o'
0000000000000aa7         db  0x63 ; 'c'
0000000000000aa8         db  0x61 ; 'a'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x69 ; 'i'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x6e ; 'n'
0000000000000aad         db  0x5f ; '_'
0000000000000aae         db  0x73 ; 's'
0000000000000aaf         db  0x68 ; 'h'
0000000000000ab0         db  0x6f ; 'o'
0000000000000ab1         db  0x72 ; 'r'
0000000000000ab2         db  0x74 ; 't'
0000000000000ab3         db  0x5f ; '_'
0000000000000ab4         db  0x6e ; 'n'
0000000000000ab5         db  0x61 ; 'a'
0000000000000ab6         db  0x6d ; 'm'
0000000000000ab7         db  0x65 ; 'e'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x5f ; '_'
0000000000000aba         db  0x5f ; '_'
0000000000000abb         db  0x63 ; 'c'
0000000000000abc         db  0x78 ; 'x'
0000000000000abd         db  0x61 ; 'a'
0000000000000abe         db  0x5f ; '_'
0000000000000abf         db  0x66 ; 'f'
0000000000000ac0         db  0x69 ; 'i'
0000000000000ac1         db  0x6e ; 'n'
0000000000000ac2         db  0x61 ; 'a'
0000000000000ac3         db  0x6c ; 'l'
0000000000000ac4         db  0x69 ; 'i'
0000000000000ac5         db  0x7a ; 'z'
0000000000000ac6         db  0x65 ; 'e'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x62 ; 'b'
0000000000000ac9         db  0x69 ; 'i'
0000000000000aca         db  0x6e ; 'n'
0000000000000acb         db  0x64 ; 'd'
0000000000000acc         db  0x74 ; 't'
0000000000000acd         db  0x65 ; 'e'
0000000000000ace         db  0x78 ; 'x'
0000000000000acf         db  0x74 ; 't'
0000000000000ad0         db  0x64 ; 'd'
0000000000000ad1         db  0x6f ; 'o'
0000000000000ad2         db  0x6d ; 'm'
0000000000000ad3         db  0x61 ; 'a'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6e ; 'n'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x66 ; 'f'
0000000000000ad8         db  0x77 ; 'w'
0000000000000ad9         db  0x72 ; 'r'
0000000000000ada         db  0x69 ; 'i'
0000000000000adb         db  0x74 ; 't'
0000000000000adc         db  0x65 ; 'e'
0000000000000add         db  0x5f ; '_'
0000000000000ade         db  0x75 ; 'u'
0000000000000adf         db  0x6e ; 'n'
0000000000000ae0         db  0x6c ; 'l'
0000000000000ae1         db  0x6f ; 'o'
0000000000000ae2         db  0x63 ; 'c'
0000000000000ae3         db  0x6b ; 'k'
0000000000000ae4         db  0x65 ; 'e'
0000000000000ae5         db  0x64 ; 'd'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x5f ; '_'
0000000000000ae9         db  0x6c ; 'l'
0000000000000aea         db  0x69 ; 'i'
0000000000000aeb         db  0x62 ; 'b'
0000000000000aec         db  0x63 ; 'c'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x73 ; 's'
0000000000000aef         db  0x74 ; 't'
0000000000000af0         db  0x61 ; 'a'
0000000000000af1         db  0x72 ; 'r'
0000000000000af2         db  0x74 ; 't'
0000000000000af3         db  0x5f ; '_'
0000000000000af4         db  0x6d ; 'm'
0000000000000af5         db  0x61 ; 'a'
0000000000000af6         db  0x69 ; 'i'
0000000000000af7         db  0x6e ; 'n'
0000000000000af8         db  0x00 ; '.'
0000000000000af9         db  0x66 ; 'f'
0000000000000afa         db  0x73 ; 's'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x65 ; 'e'
0000000000000afd         db  0x6b ; 'k'
0000000000000afe         db  0x6f ; 'o'
0000000000000aff         db  0x00 ; '.'
                     aStrtoulinterna:
0000000000000b00         db         "__strtoul_internal", 0
0000000000000b13         db  0x66 ; 'f'
0000000000000b14         db  0x70 ; 'p'
0000000000000b15         db  0x75 ; 'u'
0000000000000b16         db  0x74 ; 't'
0000000000000b17         db  0x73 ; 's'
0000000000000b18         db  0x5f ; '_'
0000000000000b19         db  0x75 ; 'u'
0000000000000b1a         db  0x6e ; 'n'
0000000000000b1b         db  0x6c ; 'l'
0000000000000b1c         db  0x6f ; 'o'
0000000000000b1d         db  0x63 ; 'c'
0000000000000b1e         db  0x6b ; 'k'
0000000000000b1f         db  0x65 ; 'e'
0000000000000b20         db  0x64 ; 'd'
0000000000000b21         db  0x00 ; '.'
0000000000000b22         db  0x66 ; 'f'
0000000000000b23         db  0x72 ; 'r'
0000000000000b24         db  0x65 ; 'e'
0000000000000b25         db  0x65 ; 'e'
0000000000000b26         db  0x00 ; '.'
0000000000000b27         db  0x5f ; '_'
0000000000000b28         db  0x5f ; '_'
0000000000000b29         db  0x70 ; 'p'
0000000000000b2a         db  0x72 ; 'r'
0000000000000b2b         db  0x6f ; 'o'
0000000000000b2c         db  0x67 ; 'g'
0000000000000b2d         db  0x6e ; 'n'
0000000000000b2e         db  0x61 ; 'a'
0000000000000b2f         db  0x6d ; 'm'
0000000000000b30         db  0x65 ; 'e'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x5f ; '_'
0000000000000b34         db  0x70 ; 'p'
0000000000000b35         db  0x72 ; 'r'
0000000000000b36         db  0x6f ; 'o'
0000000000000b37         db  0x67 ; 'g'
0000000000000b38         db  0x6e ; 'n'
0000000000000b39         db  0x61 ; 'a'
0000000000000b3a         db  0x6d ; 'm'
0000000000000b3b         db  0x65 ; 'e'
0000000000000b3c         db  0x5f ; '_'
0000000000000b3d         db  0x66 ; 'f'
0000000000000b3e         db  0x75 ; 'u'
0000000000000b3f         db  0x6c ; 'l'
0000000000000b40         db  0x6c ; 'l'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x5f ; '_'
0000000000000b43         db  0x5f ; '_'
0000000000000b44         db  0x63 ; 'c'
0000000000000b45         db  0x78 ; 'x'
0000000000000b46         db  0x61 ; 'a'
0000000000000b47         db  0x5f ; '_'
0000000000000b48         db  0x61 ; 'a'
0000000000000b49         db  0x74 ; 't'
0000000000000b4a         db  0x65 ; 'e'
0000000000000b4b         db  0x78 ; 'x'
0000000000000b4c         db  0x69 ; 'i'
0000000000000b4d         db  0x74 ; 't'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x47 ; 'G'
0000000000000b50         db  0x4c ; 'L'
0000000000000b51         db  0x49 ; 'I'
0000000000000b52         db  0x42 ; 'B'
0000000000000b53         db  0x43 ; 'C'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x32 ; '2'
0000000000000b56         db  0x2e ; '.'
0000000000000b57         db  0x33 ; '3'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x47 ; 'G'
0000000000000b5a         db  0x4c ; 'L'
0000000000000b5b         db  0x49 ; 'I'
0000000000000b5c         db  0x42 ; 'B'
0000000000000b5d         db  0x43 ; 'C'
0000000000000b5e         db  0x5f ; '_'
0000000000000b5f         db  0x32 ; '2'
0000000000000b60         db  0x2e ; '.'
0000000000000b61         db  0x33 ; '3'
0000000000000b62         db  0x2e ; '.'
0000000000000b63         db  0x34 ; '4'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x47 ; 'G'
0000000000000b66         db  0x4c ; 'L'
0000000000000b67         db  0x49 ; 'I'
0000000000000b68         db  0x42 ; 'B'
0000000000000b69         db  0x43 ; 'C'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x32 ; '2'
0000000000000b6c         db  0x2e ; '.'
0000000000000b6d         db  0x31 ; '1'
0000000000000b6e         db  0x34 ; '4'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x47 ; 'G'
0000000000000b71         db  0x4c ; 'L'
0000000000000b72         db  0x49 ; 'I'
0000000000000b73         db  0x42 ; 'B'
0000000000000b74         db  0x43 ; 'C'
0000000000000b75         db  0x5f ; '_'
0000000000000b76         db  0x32 ; '2'
0000000000000b77         db  0x2e ; '.'
0000000000000b78         db  0x34 ; '4'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x47 ; 'G'
0000000000000b7b         db  0x4c ; 'L'
0000000000000b7c         db  0x49 ; 'I'
0000000000000b7d         db  0x42 ; 'B'
0000000000000b7e         db  0x43 ; 'C'
0000000000000b7f         db  0x5f ; '_'
0000000000000b80         db  0x32 ; '2'
0000000000000b81         db  0x2e ; '.'
0000000000000b82         db  0x32 ; '2'
0000000000000b83         db  0x2e ; '.'
0000000000000b84         db  0x35 ; '5'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x5f ; '_'
0000000000000b87         db  0x49 ; 'I'
0000000000000b88         db  0x54 ; 'T'
0000000000000b89         db  0x4d ; 'M'
0000000000000b8a         db  0x5f ; '_'
0000000000000b8b         db  0x64 ; 'd'
0000000000000b8c         db  0x65 ; 'e'
0000000000000b8d         db  0x72 ; 'r'
0000000000000b8e         db  0x65 ; 'e'
0000000000000b8f         db  0x67 ; 'g'
0000000000000b90         db  0x69 ; 'i'
0000000000000b91         db  0x73 ; 's'
0000000000000b92         db  0x74 ; 't'
0000000000000b93         db  0x65 ; 'e'
0000000000000b94         db  0x72 ; 'r'
0000000000000b95         db  0x54 ; 'T'
0000000000000b96         db  0x4d ; 'M'
0000000000000b97         db  0x43 ; 'C'
0000000000000b98         db  0x6c ; 'l'
0000000000000b99         db  0x6f ; 'o'
0000000000000b9a         db  0x6e ; 'n'
0000000000000b9b         db  0x65 ; 'e'
0000000000000b9c         db  0x54 ; 'T'
0000000000000b9d         db  0x61 ; 'a'
0000000000000b9e         db  0x62 ; 'b'
0000000000000b9f         db  0x6c ; 'l'
0000000000000ba0         db  0x65 ; 'e'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x5f ; '_'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x67 ; 'g'
0000000000000ba5         db  0x6d ; 'm'
0000000000000ba6         db  0x6f ; 'o'
0000000000000ba7         db  0x6e ; 'n'
0000000000000ba8         db  0x5f ; '_'
0000000000000ba9         db  0x73 ; 's'
0000000000000baa         db  0x74 ; 't'
0000000000000bab         db  0x61 ; 'a'
0000000000000bac         db  0x72 ; 'r'
0000000000000bad         db  0x74 ; 't'
0000000000000bae         db  0x5f ; '_'
0000000000000baf         db  0x5f ; '_'
0000000000000bb0         db  0x00 ; '.'
0000000000000bb1         db  0x5f ; '_'
0000000000000bb2         db  0x49 ; 'I'
0000000000000bb3         db  0x54 ; 'T'
0000000000000bb4         db  0x4d ; 'M'
0000000000000bb5         db  0x5f ; '_'
0000000000000bb6         db  0x72 ; 'r'
0000000000000bb7         db  0x65 ; 'e'
0000000000000bb8         db  0x67 ; 'g'
0000000000000bb9         db  0x69 ; 'i'
0000000000000bba         db  0x73 ; 's'
0000000000000bbb         db  0x74 ; 't'
0000000000000bbc         db  0x65 ; 'e'
0000000000000bbd         db  0x72 ; 'r'
0000000000000bbe         db  0x54 ; 'T'
0000000000000bbf         db  0x4d ; 'M'
0000000000000bc0         db  0x43 ; 'C'
0000000000000bc1         db  0x6c ; 'l'
0000000000000bc2         db  0x6f ; 'o'
0000000000000bc3         db  0x6e ; 'n'
0000000000000bc4         db  0x65 ; 'e'
0000000000000bc5         db  0x54 ; 'T'
0000000000000bc6         db  0x61 ; 'a'
0000000000000bc7         db  0x62 ; 'b'
0000000000000bc8         db  0x6c ; 'l'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbcc; 0xc4c[ (128 bytes)
        ; File offset : [3020; 3148[ (128 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bcc         db  0x00 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x03 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x02 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x02 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x02 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x02 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x02 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x04 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x02 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x02 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x02 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x05 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x05 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x02 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x02 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x06 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x02 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x02 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x02 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x02 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x02 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x02 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x02 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x02 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc50; 0xcb0[ (96 bytes)
        ; File offset : [3152; 3248[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c50         db  0x01 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x05 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x01 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x10 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x13 ; '.'
0000000000000c61         db  0x69 ; 'i'
0000000000000c62         db  0x69 ; 'i'
0000000000000c63         db  0x0d ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x06 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x6f ; 'o'
0000000000000c69         db  0x02 ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x10 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x74 ; 't'
0000000000000c71         db  0x19 ; '.'
0000000000000c72         db  0x69 ; 'i'
0000000000000c73         db  0x09 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x05 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x79 ; 'y'
0000000000000c79         db  0x02 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x10 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x94 ; '.'
0000000000000c81         db  0x91 ; '.'
0000000000000c82         db  0x96 ; '.'
0000000000000c83         db  0x06 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x04 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x85 ; '.'
0000000000000c89         db  0x02 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x10 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x14 ; '.'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x69 ; 'i'
0000000000000c93         db  0x0d ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x03 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x90 ; '.'
0000000000000c99         db  0x02 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x10 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x75 ; 'u'
0000000000000ca1         db  0x1a ; '.'
0000000000000ca2         db  0x69 ; 'i'
0000000000000ca3         db  0x09 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x02 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x9a ; '.'
0000000000000ca9         db  0x02 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xcb0; 0x1028[ (888 bytes)
        ; File offset : [3248; 4136[ (888 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000cb0         db  0x70 ; 'p'
0000000000000cb1         db  0x9a ; '.'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x60 ; '`'
0000000000000cc1         db  0x2a ; '*'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x78 ; 'x'
0000000000000cc9         db  0x9a ; '.'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x20 ; ' '
0000000000000cd9         db  0x2a ; '*'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x80 ; '.'
0000000000000ce1         db  0x9a ; '.'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0xea ; '.'
0000000000000cf1         db  0x70 ; 'p'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0xa0 ; '.'
0000000000000cf9         db  0x9a ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x2e ; '.'
0000000000000d09         db  0x68 ; 'h'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xc0 ; '.'
0000000000000d11         db  0x9a ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x16 ; '.'
0000000000000d21         db  0x68 ; 'h'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xe0 ; '.'
0000000000000d29         db  0x9a ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x1c ; '.'
0000000000000d39         db  0x6a ; 'j'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x00 ; '.'
0000000000000d41         db  0x9b ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x30 ; '0'
0000000000000d51         db  0x6a ; 'j'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x20 ; ' '
0000000000000d59         db  0x9b ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x36 ; '6'
0000000000000d69         db  0x6a ; 'j'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x40 ; '@'
0000000000000d71         db  0x9b ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x3d ; '='
0000000000000d81         db  0x6a ; 'j'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x60 ; '`'
0000000000000d89         db  0x9b ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x45 ; 'E'
0000000000000d99         db  0x6a ; 'j'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x80 ; '.'
0000000000000da1         db  0x9b ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x55 ; 'U'
0000000000000db1         db  0x6a ; 'j'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xa0 ; '.'
0000000000000db9         db  0x9b ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x5a ; 'Z'
0000000000000dc9         db  0x6a ; 'j'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xe0 ; '.'
0000000000000dd1         db  0x9b ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x01 ; '.'
0000000000000de1         db  0x71 ; 'q'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xe8 ; '.'
0000000000000de9         db  0x9b ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x09 ; '.'
0000000000000df9         db  0x71 ; 'q'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xf0 ; '.'
0000000000000e01         db  0x9b ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x0f ; '.'
0000000000000e11         db  0x71 ; 'q'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xf8 ; '.'
0000000000000e19         db  0x9b ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x1c ; '.'
0000000000000e29         db  0x71 ; 'q'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x9c ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x29 ; ')'
0000000000000e41         db  0x71 ; 'q'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x9c ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x89 ; '.'
0000000000000e59         db  0x69 ; 'i'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x10 ; '.'
0000000000000e61         db  0x9c ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x3d ; '='
0000000000000e71         db  0x71 ; 'q'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x18 ; '.'
0000000000000e79         db  0x9c ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x22 ; '"'
0000000000000e89         db  0x71 ; 'q'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x20 ; ' '
0000000000000e91         db  0x9c ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x66 ; 'f'
0000000000000ea1         db  0x69 ; 'i'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x28 ; '('
0000000000000ea9         db  0x9c ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x45 ; 'E'
0000000000000eb9         db  0x71 ; 'q'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0xa0 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0xa0 ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x18 ; '.'
0000000000000ed9         db  0xa0 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x90 ; '.'
0000000000000ee9         db  0x70 ; 'p'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x80 ; '.'
0000000000000ef1         db  0xa0 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x90 ; '.'
0000000000000f01         db  0xa0 ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x98 ; '.'
0000000000000f09         db  0xa0 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x20 ; ' '
0000000000000f19         db  0xa1 ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xd0 ; '.'
0000000000000f21         db  0x9f ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x06 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x05 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xd8 ; '.'
0000000000000f39         db  0x9f ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x06 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x1b ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xe0 ; '.'
0000000000000f51         db  0x9f ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x06 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x1f ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xe8 ; '.'
0000000000000f69         db  0x9f ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x06 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x33 ; '3'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xf0 ; '.'
0000000000000f81         db  0x9f ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x06 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x36 ; '6'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xa0 ; '.'
0000000000000f99         db  0xa0 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x05 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x39 ; '9'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xa8 ; '.'
0000000000000fb1         db  0xa0 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x05 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x38 ; '8'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xb0 ; '.'
0000000000000fc9         db  0xa0 ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x05 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x3e ; '>'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xb8 ; '.'
0000000000000fe1         db  0xa0 ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x05 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x3f ; '?'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0xc0 ; '.'
0000000000000ff9         db  0xa0 ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x05 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x3b ; ';'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xe0 ; '.'
0000000000001011         db  0xa0 ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x05 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x3d ; '='
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1028; 0x14d8[ (1200 bytes)
        ; File offset : [4136; 5336[ (1200 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001028         db  0x40 ; '@'
0000000000001029         db  0x9e ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x01 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x48 ; 'H'
0000000000001041         db  0x9e ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x02 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x50 ; 'P'
0000000000001059         db  0x9e ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x03 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x58 ; 'X'
0000000000001071         db  0x9e ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x04 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x60 ; '`'
0000000000001089         db  0x9e ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x06 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x68 ; 'h'
00000000000010a1         db  0x9e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x07 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x70 ; 'p'
00000000000010b9         db  0x9e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x08 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x78 ; 'x'
00000000000010d1         db  0x9e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x09 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x80 ; '.'
00000000000010e9         db  0x9e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x0a ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x88 ; '.'
0000000000001101         db  0x9e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x0b ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x90 ; '.'
0000000000001119         db  0x9e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x0c ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x98 ; '.'
0000000000001131         db  0x9e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x0d ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xa0 ; '.'
0000000000001149         db  0x9e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x0e ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xa8 ; '.'
0000000000001161         db  0x9e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x0f ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xb0 ; '.'
0000000000001179         db  0x9e ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x10 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xb8 ; '.'
0000000000001191         db  0x9e ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x11 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xc0 ; '.'
00000000000011a9         db  0x9e ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x12 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xc8 ; '.'
00000000000011c1         db  0x9e ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x13 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xd0 ; '.'
00000000000011d9         db  0x9e ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x14 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xd8 ; '.'
00000000000011f1         db  0x9e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x15 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0xe0 ; '.'
0000000000001209         db  0x9e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x16 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xe8 ; '.'
0000000000001221         db  0x9e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x17 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xf0 ; '.'
0000000000001239         db  0x9e ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x18 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0xf8 ; '.'
0000000000001251         db  0x9e ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x19 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x9f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x1a ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x08 ; '.'
0000000000001281         db  0x9f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x1c ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x10 ; '.'
0000000000001299         db  0x9f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x1d ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x18 ; '.'
00000000000012b1         db  0x9f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x1e ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x20 ; ' '
00000000000012c9         db  0x9f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x20 ; ' '
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x28 ; '('
00000000000012e1         db  0x9f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x21 ; '!'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x30 ; '0'
00000000000012f9         db  0x9f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x22 ; '"'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x38 ; '8'
0000000000001311         db  0x9f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x23 ; '#'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x40 ; '@'
0000000000001329         db  0x9f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x24 ; '$'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x48 ; 'H'
0000000000001341         db  0x9f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x25 ; '%'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x50 ; 'P'
0000000000001359         db  0x9f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x26 ; '&'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x58 ; 'X'
0000000000001371         db  0x9f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x27 ; '''
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x60 ; '`'
0000000000001389         db  0x9f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x28 ; '('
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x68 ; 'h'
00000000000013a1         db  0x9f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x29 ; ')'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x70 ; 'p'
00000000000013b9         db  0x9f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x2a ; '*'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x78 ; 'x'
00000000000013d1         db  0x9f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x2b ; '+'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x80 ; '.'
00000000000013e9         db  0x9f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x2c ; ','
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x88 ; '.'
0000000000001401         db  0x9f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x2d ; '-'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x90 ; '.'
0000000000001419         db  0x9f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x2e ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x98 ; '.'
0000000000001431         db  0x9f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x2f ; '/'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xa0 ; '.'
0000000000001449         db  0x9f ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x30 ; '0'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xa8 ; '.'
0000000000001461         db  0x9f ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x31 ; '1'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xb0 ; '.'
0000000000001479         db  0x9f ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x32 ; '2'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0xb8 ; '.'
0000000000001491         db  0x9f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x34 ; '4'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0xc0 ; '.'
00000000000014a9         db  0x9f ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x35 ; '5'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0xc8 ; '.'
00000000000014c1         db  0x9f ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x37 ; '7'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x14d8; 0x14ef[ (23 bytes)
        ; File offset : [5336; 5359[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000014d8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000014dc         mov        rax, qword [qword_209fe0]                   ; qword_209fe0
00000000000014e3         test       rax, rax
00000000000014e6         je         loc_14ea

00000000000014e8         call       rax

                     loc_14ea:
00000000000014ea         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000014ee         ret
                        ; endp
00000000000014ef         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x14f0; 0x1820[ (816 bytes)
        ; File offset : [5360; 6176[ (816 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_14f0:
00000000000014f0         push       qword [qword_209e30]                        ; Begin of unwind block (FDE at 0x7d7c), qword_209e30, CODE XREF=sub_1506+5
00000000000014f6         jmp        qword [qword_209e30+8]                      ; 0x209e38
                        ; endp
00000000000014fc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001500         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+2458, main+2875, main+3274, main+3287, main+3536, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x0
000000000000150b         jmp        loc_14f0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001510         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=diagnose_copy_fd_failure+115, set_program_name+154, sub_41c0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x1
000000000000151b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001520         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1198, main+1756, main+2001, main+2668, main+3455, main+3867, elseek+147, xwrite_stdout.part.6+95, head_lines+286, head_bytes+161, diagnose_copy_fd_failure+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x2
000000000000152b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001530         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+740, usage+933
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x3
000000000000153b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001540         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x4
000000000000154b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001550         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x5
000000000000155b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
0000000000001560         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=xwrite_stdout.part.6+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x6
000000000000156b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001570         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+92
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x7
000000000000157b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001580         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x8
000000000000158b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001590         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x9
000000000000159b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000015a0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+932, main+1190, main+1993, main+3797, main+3859, main+4003, main+4105, main+4155, main+4207, string_to_integer+23, string_to_integer+73
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0xa
00000000000015ab         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000015b0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0xb
00000000000015bb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000015c0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_41c0+411, sub_41c0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0xc
00000000000015cb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000015d0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+4086, elseek+174, copy_fd+199, head_lines+386, head_bytes+234, elide_tail_lines_seekable+667, sub_41c0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0xd
00000000000015db         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000015e0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0xe
00000000000015eb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000015f0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0xf
00000000000015fb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001600         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x10
000000000000160b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001610         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x11
000000000000161b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001620         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=elseek+34, head_lines+158, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x12
000000000000162b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001630         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x13
000000000000163b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001640         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x14
000000000000164b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001650         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x15
000000000000165b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001660         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+1365, main+2655
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x16
000000000000166b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001670         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=main+2303, main+2777
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x17
000000000000167b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000001680         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x18
000000000000168b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001690         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x19
000000000000169b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000016a0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+196, usage+233, usage+309, usage+346, usage+383, usage+420, usage+464, usage+1048, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x1a
00000000000016ab         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000016b0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x1b
00000000000016bb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000016c0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=main+2592, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x1c
00000000000016cb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000016d0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x1d
00000000000016db         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000016e0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x1e
00000000000016eb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000016f0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x1f
00000000000016fb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001700         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x20
000000000000170b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001710         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=main+1425, head_lines+333
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x21
000000000000171b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001720         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x22
000000000000172b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001730         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=xwrite_stdout.part.6+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x23
000000000000173b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001740         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x24
000000000000174b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001750         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+61, usage+715, usage+908, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x25
000000000000175b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001760         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+999, usage+120, usage+159, usage+272, usage+703, usage+796, usage+857, usage+896, usage+999, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x26
000000000000176b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001770         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1215, main+2018, main+2689, main+3819, main+3887, main+4026, main+4122, main+4237, elseek+167, xwrite_stdout.part.6+115, head_lines+303
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x27
000000000000177b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memrchr:        // memrchr
0000000000001780         jmp        qword [memrchr@GOT]                         ; memrchr, memrchr@GOT, CODE XREF=elide_tail_lines_seekable+263
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x28
000000000000178b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001790         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=main+1140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x29
000000000000179b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000017a0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x2a
00000000000017ab         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
00000000000017b0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x2b
00000000000017bb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000017c0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+393, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x2c
00000000000017cb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000017d0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x2d
00000000000017db         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000017e0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x2e
00000000000017eb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000017f0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_41c0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x2f
00000000000017fb         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001800         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_41c0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x30
000000000000180b         jmp        0x14f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001810         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3f60+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x31
000000000000181b         jmp        0x14f0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1820; 0x1828[ (8 bytes)
        ; File offset : [6176; 6184[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209ff0:        // qword_209ff0
0000000000001820         jmp        qword [qword_209ff0]                        ; qword, End of unwind block (FDE at 0x7d7c), Begin of unwind block (FDE at 0x7da4), qword_209ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001826         align      8
0000000000001828         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7da4)
0000000000001829         db  0x00 ; '.'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1830; 0x67de[ (20398 bytes)
        ; File offset : [6192; 26590[ (20398 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_D0: int32_t, -208
        ;    var_E8: int8_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int32_t, -252
        ;    var_FD: int8_t, -253
        ;    var_FE: int8_t, -254
        ;    var_FF: int8_t, -255
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_148: int64_t, -328
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int64_t, -360
        ;    var_170: int64_t, -368
        ;    var_178: int64_t, -376
        ;    var_17C: int32_t, -380


                     main:
0000000000001830         push       r15                                         ; Begin of unwind block (FDE at 0x7fbc), DATA XREF=_start+29
0000000000001832         push       r14
0000000000001834         push       r13
0000000000001836         push       r12
0000000000001838         push       rbp
0000000000001839         push       rbx
000000000000183a         mov        ebp, edi
000000000000183c         mov        rbx, rsi
000000000000183f         sub        rsp, 0x158
0000000000001846         mov        rdi, qword [rsi]
0000000000001849         mov        rax, qword [fs:0x28]
0000000000001852         mov        qword [rsp+0x188+var_40], rax
000000000000185a         xor        eax, eax
000000000000185c         call       set_program_name                            ; set_program_name
0000000000001861         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7621
0000000000001868         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000186d         call       j_setlocale                                 ; setlocale
0000000000001872         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001879         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001880         call       j_bindtextdomain                            ; bindtextdomain
0000000000001885         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000188c         call       j_textdomain                                ; textdomain
0000000000001891         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001898         call       atexit                                      ; atexit
000000000000189d         cmp        ebp, 0x1
00000000000018a0         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000018a7         mov        byte [print_headers], 0x0                   ; print_headers
00000000000018ae         mov        byte [line_end], 0xa                        ; line_end
00000000000018b5         jle        loc_18c4

00000000000018b7         mov        rsi, qword [rbx+8]
00000000000018bb         cmp        byte [rsi], 0x2d
00000000000018be         je         loc_1a73

                     loc_18c4:
00000000000018c4         mov        byte [rsp+0x188+var_FE], 0x1                ; CODE XREF=main+133, main+589
00000000000018cc         mov        r15d, 0xa
00000000000018d2         xor        r12d, r12d

                     loc_18d5:
00000000000018d5         mov        byte [rsp+0x188+var_FF], 0x0                ; CODE XREF=main+1316
00000000000018dd         mov        r13d, 0x1
00000000000018e3         nop        dword [rax+rax]

                     loc_18e8:
00000000000018e8         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+273, main+451, main+518, main+535, main+559, main+574
00000000000018ef         lea        rdx, qword [aCnqvz012345678]                ; argument "__shortopts" for method j_getopt_long, "c:n:qvz0123456789"
00000000000018f6         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000018f9         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000018fc         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
00000000000018fe         call       j_getopt_long                               ; getopt_long
0000000000001903         cmp        eax, 0xffffffff
0000000000001906         je         loc_1ae8

000000000000190c         cmp        eax, 0x6e
000000000000190f         je         loc_1a00

0000000000001915         jle        loc_1948

0000000000001917         cmp        eax, 0x76
000000000000191a         je         loc_1a68

0000000000001920         jle        loc_1a50

0000000000001926         cmp        eax, 0x7a
0000000000001929         je         loc_1a40

000000000000192f         cmp        eax, 0x80
0000000000001934         jne        loc_281e

000000000000193a         mov        byte [presume_input_pipe], r13b             ; presume_input_pipe
0000000000001941         jmp        loc_18e8
0000000000001943         align      8

                     loc_1948:
0000000000001948         cmp        eax, 0xffffff7e                             ; CODE XREF=main+229
000000000000194d         je         loc_2817

0000000000001953         cmp        eax, 0x63
0000000000001956         je         loc_19c0

0000000000001958         cmp        eax, 0xffffff7d
000000000000195d         mov        r14d, eax
0000000000001960         je         loc_1980

                     loc_1962:
0000000000001962         lea        eax, dword [r14-0x30]                       ; CODE XREF=main+4081
0000000000001966         cmp        eax, 0x9
0000000000001969         jbe        loc_282b

                     loc_196f:
000000000000196f         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+4127
0000000000001974         call       usage                                       ; usage
0000000000001979         nop        dword [rax]

                     loc_1980:
0000000000001980         sub        rsp, 0x8                                    ; CODE XREF=main+304
0000000000001984         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000198b         mov        rcx, qword [Version]                        ; Version
0000000000001992         push       0x0
0000000000001994         lea        r9, qword [aJimMeyering]                    ; "Jim Meyering"
000000000000199b         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000019a2         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6928
00000000000019a9         lea        rsi, qword [aSFileHasShrunk+29]             ; 0x68ad
00000000000019b0         xor        eax, eax
00000000000019b2         call       version_etc                                 ; version_etc
00000000000019b7         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000019b9         call       j_exit                                      ; exit
                        ; endp
00000000000019be         align      64

                     loc_19c0:
00000000000019c0         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+294
00000000000019c7         movzx      eax, byte [rsi]
00000000000019ca         cmp        al, 0x2d
00000000000019cc         sete       byte [rsp+0x188+var_FF]
00000000000019d4         jne        loc_19e1

00000000000019d6         add        rsi, 0x1
00000000000019da         mov        qword [optarg@@GLIBC_2.2.5], rsi            ; optarg@@GLIBC_2.2.5

                     loc_19e1:
00000000000019e1         xor        edi, edi                                    ; CODE XREF=main+420
00000000000019e3         call       string_to_integer                           ; string_to_integer
00000000000019e8         mov        byte [rsp+0x188+var_FE], 0x0
00000000000019f0         mov        r15, rax
00000000000019f3         jmp        loc_18e8
00000000000019f8         align      512

                     loc_1a00:
0000000000001a00         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+223
0000000000001a07         movzx      eax, byte [rsi]
0000000000001a0a         cmp        al, 0x2d
0000000000001a0c         sete       byte [rsp+0x188+var_FF]
0000000000001a14         jne        loc_1a21

0000000000001a16         add        rsi, 0x1
0000000000001a1a         mov        qword [optarg@@GLIBC_2.2.5], rsi            ; optarg@@GLIBC_2.2.5

                     loc_1a21:
0000000000001a21         mov        edi, 0x1                                    ; CODE XREF=main+484
0000000000001a26         call       string_to_integer                           ; string_to_integer
0000000000001a2b         mov        byte [rsp+0x188+var_FE], 0x1
0000000000001a33         mov        r15, rax
0000000000001a36         jmp        loc_18e8
0000000000001a3b         align      64

                     loc_1a40:
0000000000001a40         mov        byte [line_end], 0x0                        ; line_end, CODE XREF=main+249
0000000000001a47         jmp        loc_18e8
0000000000001a4c         align      16

                     loc_1a50:
0000000000001a50         cmp        eax, 0x71                                   ; CODE XREF=main+240
0000000000001a53         jne        loc_281e

0000000000001a59         mov        r12d, 0x2
0000000000001a5f         jmp        loc_18e8
0000000000001a64         align      8

                     loc_1a68:
0000000000001a68         mov        r12d, 0x1                                   ; CODE XREF=main+234
0000000000001a6e         jmp        loc_18e8

                     loc_1a73:
0000000000001a73         movsx      eax, byte [rsi+1]                           ; CODE XREF=main+142
0000000000001a77         sub        eax, 0x30
0000000000001a7a         cmp        eax, 0x9
0000000000001a7d         ja         loc_18c4

0000000000001a83         add        rsi, 0x1
0000000000001a87         mov        rdi, rsi
0000000000001a8a         nop        word [rax+rax]

                     loc_1a90:
0000000000001a90         add        rdi, 0x1                                    ; CODE XREF=main+624
0000000000001a94         movsx      eax, byte [rdi]
0000000000001a97         mov        r13d, eax
0000000000001a9a         sub        eax, 0x30
0000000000001a9d         cmp        eax, 0x9
0000000000001aa0         jbe        loc_1a90

0000000000001aa2         test       r13b, r13b
0000000000001aa5         je         loc_27f4

0000000000001aab         lea        rcx, qword [switch_table_702c]              ; switch_table_702c
0000000000001ab2         mov        rdx, rdi
0000000000001ab5         xor        r9d, r9d
0000000000001ab8         mov        r10d, 0xa
0000000000001abe         xor        r8d, r8d
0000000000001ac1         mov        r11d, 0x1
0000000000001ac7         xor        r12d, r12d
0000000000001aca         nop        word [rax+rax]

                     loc_1ad0:
0000000000001ad0         lea        eax, dword [r13-0x62]                       ; CODE XREF=main+1251
0000000000001ad4         cmp        al, 0x18
0000000000001ad6         ja         loc_2854

0000000000001adc         movzx      eax, al
0000000000001adf         movsxd     rax, dword [rcx+rax*4]
0000000000001ae3         add        rax, rcx
0000000000001ae6         jmp        rax                                         ; switch statement using table at 0x702c, with 25 cases, 0x1cf9,0x1d59,0x1d61,0x1d69,0x1d71,0x1d79,0x2854

                     loc_1ae8:
0000000000001ae8         cmp        r12d, 0x1                                   ; CODE XREF=main+214
0000000000001aec         je         loc_1afe

0000000000001aee         test       r12d, r12d
0000000000001af1         jne        loc_1b05

0000000000001af3         lea        eax, dword [rbp-1]
0000000000001af6         cmp        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001afc         jle        loc_1b05

                     loc_1afe:
0000000000001afe         mov        byte [print_headers], 0x1                   ; print_headers, CODE XREF=main+700

                     loc_1b05:
0000000000001b05         cmp        byte [rsp+0x188+var_FE], 0x0                ; CODE XREF=main+705, main+716
0000000000001b0d         jne        loc_1b22

0000000000001b0f         cmp        byte [rsp+0x188+var_FF], 0x0
0000000000001b17         je         loc_1b22

0000000000001b19         test       r15, r15
0000000000001b1c         js         loc_2876

                     loc_1b22:
0000000000001b22         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+733, main+743
0000000000001b29         cmp        eax, ebp
0000000000001b2b         jge        loc_201c

0000000000001b31         lea        rdx, qword [rbx+rax*8]
0000000000001b35         mov        rbp, qword [rdx]
0000000000001b38         test       rbp, rbp
0000000000001b3b         je         loc_1f43

0000000000001b41         lea        rax, qword [aLibs+10]                       ; 0x70ea
0000000000001b48         mov        qword [rsp+0x188+var_168], rax

                     loc_1b4d:
0000000000001b4d         mov        rcx, r15                                    ; CODE XREF=main+2050
0000000000001b50         mov        eax, 0x2000
0000000000001b55         mov        qword [rsp+0x188+var_170], r15
0000000000001b5a         and        ecx, 0x1fff
0000000000001b60         mov        byte [rsp+0x188+var_FD], 0x1
0000000000001b68         sub        rax, rcx
0000000000001b6b         mov        qword [rsp+0x188+var_110], rcx
0000000000001b70         mov        qword [rsp+0x188+var_128], rax
0000000000001b75         add        rax, r15
0000000000001b78         shr        rax, 0xd
0000000000001b7c         add        rax, 0x1
0000000000001b80         mov        qword [rsp+0x188+var_160], rax
0000000000001b85         shr        rax, 0x1
0000000000001b88         mov        qword [rsp+0x188+var_130], rax
0000000000001b8d         lea        rax, qword [r15+0x2000]
0000000000001b94         mov        r15, rbp
0000000000001b97         mov        qword [rsp+0x188+var_120], rax
0000000000001b9c         add        rax, rax
0000000000001b9f         mov        qword [rsp+0x188+var_118], rax
0000000000001ba4         lea        rax, qword [rdx+8]
0000000000001ba8         mov        qword [rsp+0x188+var_178], rax
0000000000001bad         lea        rax, qword [rsp+0x188+var_E8]
0000000000001bb5         mov        qword [rsp+0x188+var_138], rax
0000000000001bba         jmp        loc_1c7c

                     loc_1bbf:
0000000000001bbf         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input", CODE XREF=main+1127
0000000000001bc6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001bcb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001bcd         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
0000000000001bd4         call       j_dcgettext                                 ; dcgettext
0000000000001bd9         mov        dword [rsp+0x188+var_17C], 0x0
0000000000001be1         mov        r15, rax

                     loc_1be4:
0000000000001be4         cmp        byte [print_headers], 0x0                   ; print_headers, CODE XREF=main+1151
0000000000001beb         je         loc_1c23

0000000000001bed         cmp        byte [first_file.6927], 0x0                 ; first_file.6927
0000000000001bf4         lea        rax, qword [aWrittenBySSAnd+26]             ; 0x7620
0000000000001bfb         lea        rdx, qword [aWrittenBySSAnd+27]             ; 0x7621
0000000000001c02         lea        rsi, qword [aCannotOpenSFor+27]             ; 0x69eb
0000000000001c09         mov        rcx, r15
0000000000001c0c         mov        edi, 0x1
0000000000001c11         cmove      rdx, rax
0000000000001c15         xor        eax, eax
0000000000001c17         call       j___printf_chk                              ; __printf_chk
0000000000001c1c         mov        byte [first_file.6927], 0x0                 ; first_file.6927

                     loc_1c23:
0000000000001c23         cmp        byte [rsp+0x188+var_FF], 0x0                ; CODE XREF=main+955
0000000000001c2b         jne        loc_1db3

0000000000001c31         cmp        byte [rsp+0x188+var_FE], 0x0
0000000000001c39         mov        rdx, qword [rsp+0x188+var_170]
0000000000001c3e         mov        rdi, r15
0000000000001c41         mov        esi, dword [rsp+0x188+var_17C]
0000000000001c45         jne        loc_1eff

0000000000001c4b         call       head_bytes                                  ; head_bytes
0000000000001c50         mov        r12d, eax

                     loc_1c53:
0000000000001c53         test       r13d, r13d                                  ; CODE XREF=main+1751, main+2023, main+2894, main+2922, main+2931, main+3130, main+3298, main+3326, main+4339, main+4375
0000000000001c56         jne        loc_1d81

                     loc_1c5c:
0000000000001c5c         add        qword [rsp+0x188+var_178], 0x8              ; CODE XREF=main+1220, main+1372
0000000000001c62         and        byte [rsp+0x188+var_FD], r12b
0000000000001c6a         mov        rax, qword [rsp+0x188+var_178]
0000000000001c6f         mov        r15, qword [rax-8]
0000000000001c73         test       r15, r15
0000000000001c76         je         loc_1f4b

                     loc_1c7c:
0000000000001c7c         mov        rdi, qword [rsp+0x188+var_168]              ; CODE XREF=main+906
0000000000001c81         mov        ecx, 0x2
0000000000001c86         mov        rsi, r15
0000000000001c89         rep  cmpsb byte [rsi], byte [rdi]
0000000000001c8b         seta       al
0000000000001c8e         sbb        al, 0x0
0000000000001c90         movsx      r13d, al
0000000000001c94         test       r13d, r13d
0000000000001c97         je         loc_1bbf

0000000000001c9d         xor        esi, esi                                    ; argument "__oflag" for method j_open
0000000000001c9f         xor        eax, eax
0000000000001ca1         mov        rdi, r15                                    ; argument "__file" for method j_open
0000000000001ca4         call       j_open                                      ; open
0000000000001ca9         test       eax, eax
0000000000001cab         mov        dword [rsp+0x188+var_17C], eax
0000000000001caf         jns        loc_1be4

0000000000001cb5         mov        rsi, r15
0000000000001cb8         mov        edi, 0x4
0000000000001cbd         call       quotearg_style                              ; quotearg_style
0000000000001cc2         lea        rsi, qword [aCannotOpenSFor]                ; "cannot open %s for reading"
0000000000001cc9         mov        rbx, rax
0000000000001ccc         mov        edx, 0x5

                     loc_1cd1:
0000000000001cd1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1406
0000000000001cd3         xor        r12d, r12d
0000000000001cd6         call       j_dcgettext                                 ; dcgettext
0000000000001cdb         mov        rbp, rax
0000000000001cde         call       j___errno_location                          ; __errno_location
0000000000001ce3         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001ce5         mov        rcx, rbx
0000000000001ce8         mov        rdx, rbp                                    ; argument "__format" for method j_error
0000000000001ceb         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001ced         xor        eax, eax
0000000000001cef         call       j_error                                     ; error
0000000000001cf4         jmp        loc_1c5c

                     loc_1cf9:
0000000000001cf9         mov        r9d, 0x1                                    ; case 24, CODE XREF=main+694
0000000000001cff         xor        r10d, r10d
0000000000001d02         nop        word [rax+rax]

                     loc_1d08:
0000000000001d08         add        rdx, 0x1                                    ; CODE XREF=main+1327, main+1335, main+1343, main+1351, main+1359
0000000000001d0c         movzx      r13d, byte [rdx]
0000000000001d10         test       r13b, r13b
0000000000001d13         jne        loc_1ad0

0000000000001d19         test       r9b, r9b
0000000000001d1c         mov        byte [rsp+0x188+var_FE], r11b
0000000000001d24         jne        loc_28c2

                     loc_1d2a:
0000000000001d2a         test       r8b, r8b                                    ; CODE XREF=main+4249
0000000000001d2d         mov        byte [rdi], r8b
0000000000001d30         je         loc_1d36

0000000000001d32         mov        byte [rdi+1], 0x0

                     loc_1d36:
0000000000001d36         movzx      edi, byte [rsp+0x188+var_FE]                ; CODE XREF=main+1280, main+4047
0000000000001d3e         add        rbx, 0x8
0000000000001d42         sub        ebp, 0x1
0000000000001d45         call       string_to_integer                           ; string_to_integer
0000000000001d4a         mov        r15, rax
0000000000001d4d         mov        rax, qword [rbx-8]
0000000000001d51         mov        qword [rbx], rax
0000000000001d54         jmp        loc_18d5

                     loc_1d59:
0000000000001d59         mov        r12d, 0x1                                   ; case 20, CODE XREF=main+694
0000000000001d5f         jmp        loc_1d08

                     loc_1d61:
0000000000001d61         mov        r12d, 0x2                                   ; case 15, CODE XREF=main+694
0000000000001d67         jmp        loc_1d08

                     loc_1d69:
0000000000001d69         mov        r11d, 0x1                                   ; case 10, CODE XREF=main+694
0000000000001d6f         jmp        loc_1d08

                     loc_1d71:
0000000000001d71         xor        r8d, r8d                                    ; case 1, CODE XREF=main+694
0000000000001d74         xor        r11d, r11d
0000000000001d77         jmp        loc_1d08

                     loc_1d79:
0000000000001d79         mov        r8d, r13d                                   ; case 11, CODE XREF=main+694
0000000000001d7c         xor        r11d, r11d
0000000000001d7f         jmp        loc_1d08

                     loc_1d81:
0000000000001d81         mov        edi, dword [rsp+0x188+var_17C]              ; argument "__fd" for method j_close, CODE XREF=main+1062
0000000000001d85         call       j_close                                     ; close
0000000000001d8a         test       eax, eax
0000000000001d8c         je         loc_1c5c

0000000000001d92         mov        rsi, r15
0000000000001d95         mov        edi, 0x4
0000000000001d9a         call       quotearg_style                              ; quotearg_style
0000000000001d9f         mov        edx, 0x5
0000000000001da4         mov        rbx, rax
0000000000001da7         lea        rsi, qword [aFailedToCloseS]                ; "failed to close %s"
0000000000001dae         jmp        loc_1cd1

                     loc_1db3:
0000000000001db3         mov        rdx, qword [rsp+0x188+var_138]              ; argument "__stat_buf" for method j___fxstat, CODE XREF=main+1019
0000000000001db8         mov        esi, dword [rsp+0x188+var_17C]              ; argument "__fildes" for method j___fxstat
0000000000001dbc         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000001dc1         call       j___fxstat                                  ; __fxstat
0000000000001dc6         test       eax, eax
0000000000001dc8         jne        loc_1fd8

0000000000001dce         cmp        byte [presume_input_pipe], 0x0              ; presume_input_pipe
0000000000001dd5         jne        loc_1dee

0000000000001dd7         mov        eax, dword [rsp+0x188+var_D0]
0000000000001dde         and        eax, 0xd000
0000000000001de3         cmp        eax, 0x8000
0000000000001de8         je         loc_23e3

                     loc_1dee:
0000000000001dee         cmp        byte [rsp+0x188+var_FE], 0x0                ; CODE XREF=main+1445
0000000000001df6         mov        qword [rsp+0x188+var_148], 0xffffffffffffffff
0000000000001dff         jne        loc_2045

                     loc_1e05:
0000000000001e05         cmp        qword [rsp+0x188+var_170], 0x100000         ; CODE XREF=main+4260, main+4303
0000000000001e0e         mov        rax, qword [rsp+0x188+var_148]
0000000000001e13         mov        qword [rsp+0x188+var_158], rax
0000000000001e18         jbe        loc_2546

0000000000001e1e         mov        r10d, 0x1
0000000000001e24         mov        dword [rsp+0x188+var_FC], r13d
0000000000001e2c         mov        qword [rsp+0x188+var_140], 0x0
0000000000001e35         xor        ebp, ebp
0000000000001e37         xor        r14d, r14d
0000000000001e3a         xor        r12d, r12d
0000000000001e3d         xor        ebx, ebx
0000000000001e3f         mov        qword [rsp+0x188+var_108], r15
0000000000001e47         mov        r13, r10

                     loc_1e4a:
0000000000001e4a         test       r12, r12                                    ; CODE XREF=main+2064
0000000000001e4d         jne        loc_2276

0000000000001e53         mov        rax, qword [rsp+0x188+var_160]
0000000000001e58         mov        r12d, 0x10
0000000000001e5e         cmp        rax, 0x10
0000000000001e62         cmovbe     r12, rax

                     loc_1e66:
0000000000001e66         lea        rsi, qword [r12*8]                          ; CODE XREF=main+2648
0000000000001e6e         mov        rdi, r14
0000000000001e71         mov        r15, rbx
0000000000001e74         mov        rbx, r12
0000000000001e77         mov        r12, r13
0000000000001e7a         call       xrealloc                                    ; xrealloc
0000000000001e7f         mov        r14, rax

                     loc_1e82:
0000000000001e82         test       bpl, bpl                                    ; CODE XREF=main+1741
0000000000001e85         lea        r13, qword [r14+r15*8]
0000000000001e89         je         loc_1f8f

0000000000001e8f         mov        rsi, qword [r13]
0000000000001e93         mov        edi, dword [rsp+0x188+var_17C]
0000000000001e97         mov        edx, 0x2000
0000000000001e9c         call       full_read                                   ; full_read
0000000000001ea1         cmp        rax, 0x1fff
0000000000001ea7         mov        r13, rax
0000000000001eaa         jbe        loc_1f0c

0000000000001eac         add        qword [rsp+0x188+var_158], rax
0000000000001eb1         xor        r9d, r9d

                     loc_1eb4:
0000000000001eb4         mov        rdi, qword [r14+r12*8]                      ; CODE XREF=main+1806
0000000000001eb8         mov        rsi, r13
0000000000001ebb         mov        byte [rsp+0x188+var_150], r9b
0000000000001ec0         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000001ec5         movzx      ebp, byte [rsp+0x188+var_FF]
0000000000001ecd         movzx      r9d, byte [rsp+0x188+var_150]

                     loc_1ed3:
0000000000001ed3         lea        rsi, qword [r12+1]                          ; CODE XREF=main+1794, main+1804
0000000000001ed8         xor        edx, edx
0000000000001eda         mov        rax, rsi
0000000000001edd         div        qword [rsp+0x188+var_160]
0000000000001ee2         test       r9b, r9b
0000000000001ee5         mov        r10, rdx
0000000000001ee8         jne        loc_246f

0000000000001eee         cmp        rbx, r12
0000000000001ef1         mov        r15, r12
0000000000001ef4         je         loc_2037

0000000000001efa         mov        r12, rdx
0000000000001efd         jmp        loc_1e82

                     loc_1eff:
0000000000001eff         call       head_lines                                  ; head_lines, CODE XREF=main+1045
0000000000001f04         mov        r12d, eax
0000000000001f07         jmp        loc_1c53

                     loc_1f0c:
0000000000001f0c         call       j___errno_location                          ; __errno_location, CODE XREF=main+1658, main+1946
0000000000001f11         cmp        dword [rax], 0x0
0000000000001f14         jne        loc_26d4

0000000000001f1a         movzx      r9d, byte [rsp+0x188+var_FF]
0000000000001f23         lea        r10, qword [r15+1]

                     loc_1f27:
0000000000001f27         cmp        r10, qword [rsp+0x188+var_160]              ; CODE XREF=main+1955
0000000000001f2c         sete       al
0000000000001f2f         or         bpl, al
0000000000001f32         je         loc_1ed3

0000000000001f34         add        qword [rsp+0x188+var_158], r13
0000000000001f39         test       r13, r13
0000000000001f3c         je         loc_1ed3

0000000000001f3e         jmp        loc_1eb4

                     loc_1f43:
0000000000001f43         mov        byte [rsp+0x188+var_FD], 0x1                ; CODE XREF=main+779

                     loc_1f4b:
0000000000001f4b         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin, CODE XREF=main+1094
0000000000001f52         jne        loc_228d

                     loc_1f58:
0000000000001f58         movzx      eax, byte [rsp+0x188+var_FD]                ; CODE XREF=main+2662
0000000000001f60         xor        eax, 0x1
0000000000001f63         mov        rcx, qword [rsp+0x188+var_40]
0000000000001f6b         xor        rcx, qword [fs:0x28]
0000000000001f74         movzx      eax, al
0000000000001f77         jne        loc_2826

0000000000001f7d         add        rsp, 0x158
0000000000001f84         pop        rbx
0000000000001f85         pop        rbp
0000000000001f86         pop        r12
0000000000001f88         pop        r13
0000000000001f8a         pop        r14
0000000000001f8c         pop        r15
0000000000001f8e         ret
                        ; endp

                     loc_1f8f:
0000000000001f8f         mov        edi, 0x2000                                 ; CODE XREF=main+1625
0000000000001f94         call       xmalloc                                     ; xmalloc
0000000000001f99         mov        edi, dword [rsp+0x188+var_17C]
0000000000001f9d         lea        r10, qword [r15+1]
0000000000001fa1         mov        qword [r13], rax
0000000000001fa5         mov        edx, 0x2000
0000000000001faa         mov        rsi, rax
0000000000001fad         mov        qword [rsp+0x188+var_140], r10
0000000000001fb2         mov        qword [rsp+0x188+var_150], r10
0000000000001fb7         call       full_read                                   ; full_read
0000000000001fbc         cmp        rax, 0x1fff
0000000000001fc2         mov        r13, rax
0000000000001fc5         mov        r10, qword [rsp+0x188+var_150]
0000000000001fca         jbe        loc_1f0c

0000000000001fd0         xor        r9d, r9d
0000000000001fd3         jmp        loc_1f27

                     loc_1fd8:
0000000000001fd8         mov        rsi, r15                                    ; CODE XREF=main+1432
0000000000001fdb         mov        edi, 0x4
0000000000001fe0         xor        r12d, r12d
0000000000001fe3         call       quotearg_style                              ; quotearg_style
0000000000001fe8         lea        rsi, qword [aCannotFstatS]                  ; argument "msgid" for method j_dcgettext, "cannot fstat %s"
0000000000001fef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ff4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ff6         mov        rbx, rax
0000000000001ff9         call       j_dcgettext                                 ; dcgettext
0000000000001ffe         mov        rbp, rax
0000000000002001         call       j___errno_location                          ; __errno_location
0000000000002006         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002008         mov        rcx, rbx
000000000000200b         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000200e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002010         xor        eax, eax
0000000000002012         call       j_error                                     ; error
0000000000002017         jmp        loc_1c53

                     loc_201c:
000000000000201c         lea        rax, qword [aLibs+10]                       ; 0x70ea, CODE XREF=main+763
0000000000002023         lea        rdx, qword [default_file_list.7140]         ; default_file_list.7140
000000000000202a         mov        qword [rsp+0x188+var_168], rax
000000000000202f         mov        rbp, rax
0000000000002032         jmp        loc_1b4d

                     loc_2037:
0000000000002037         mov        r12, rbx                                    ; CODE XREF=main+1732
000000000000203a         mov        r13, r10
000000000000203d         mov        rbx, r15
0000000000002040         jmp        loc_1e4a

                     loc_2045:
0000000000002045         mov        rax, qword [rsp+0x188+var_148]              ; CODE XREF=main+1487, main+3057, main+3100
000000000000204a         mov        edi, 0x2018
000000000000204f         mov        qword [rsp+0x188+var_140], rax
0000000000002054         call       xmalloc                                     ; xmalloc
0000000000002059         mov        edi, 0x2018
000000000000205e         mov        qword [rax+0x2008], 0x0
0000000000002069         mov        qword [rax+0x2000], 0x0
0000000000002074         mov        qword [rax+0x2010], 0x0
000000000000207f         mov        rbp, rax
0000000000002082         mov        qword [rsp+0x188+var_158], rax
0000000000002087         call       xmalloc                                     ; xmalloc
000000000000208c         mov        qword [rsp+0x188+var_150], 0x0
0000000000002095         mov        rbx, rax
0000000000002098         mov        qword [rsp+0x188+var_108], r15
00000000000020a0         mov        dword [rsp+0x188+var_FC], r13d

                     loc_20a8:
00000000000020a8         mov        edi, dword [rsp+0x188+var_17C]              ; CODE XREF=main+2226, main+2434, main+2625, main+2954, DATA XREF=head_lines+10, head_lines+211
00000000000020ac         mov        edx, 0x2000
00000000000020b1         mov        rsi, rbx
00000000000020b4         call       safe_read                                   ; safe_read
00000000000020b9         mov        r12, rax
00000000000020bc         lea        rax, qword [rax-1]
00000000000020c0         cmp        rax, 0xfffffffffffffffd
00000000000020c4         ja         loc_21b7

00000000000020ca         cmp        qword [rsp+0x188+var_170], 0x0
00000000000020d0         jne        loc_20e4

00000000000020d2         mov        rsi, r12
00000000000020d5         mov        rdi, rbx
00000000000020d8         add        qword [rsp+0x188+var_140], r12
00000000000020dd         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
00000000000020e2         jmp        loc_20a8

                     loc_20e4:
00000000000020e4         mov        qword [rbx+0x2000], r12                     ; CODE XREF=main+2208
00000000000020eb         mov        qword [rbx+0x2008], 0x0
00000000000020f6         lea        r14, qword [rbx+r12]
00000000000020fa         mov        qword [rbx+0x2010], 0x0
0000000000002105         movsx      r15d, byte [line_end]                       ; line_end
000000000000210d         mov        rdi, rbx
0000000000002110         xor        r13d, r13d
0000000000002113         jmp        loc_2126
0000000000002115         align      8

                     loc_2118:
0000000000002118         lea        rdi, qword [rax+1]                          ; CODE XREF=main+2315
000000000000211c         mov        qword [rbx+0x2008], rdx
0000000000002123         mov        r13, rdx

                     loc_2126:
0000000000002126         mov        rdx, r14                                    ; CODE XREF=main+2275
0000000000002129         mov        esi, r15d                                   ; argument "__c" for method j_memchr
000000000000212c         sub        rdx, rdi                                    ; argument "__n" for method j_memchr
000000000000212f         call       j_memchr                                    ; memchr
0000000000002134         test       rax, rax
0000000000002137         lea        rdx, qword [r13+1]
000000000000213b         jne        loc_2118

000000000000213d         mov        rax, qword [rsp+0x188+var_158]
0000000000002142         add        qword [rsp+0x188+var_150], r13
0000000000002147         mov        rax, qword [rax+0x2000]
000000000000214e         lea        rdx, qword [r12+rax]
0000000000002152         cmp        rdx, 0x1fff
0000000000002159         jbe        loc_2241

000000000000215f         mov        rax, qword [rsp+0x188+var_158]
0000000000002164         mov        qword [rax+0x2010], rbx
000000000000216b         mov        rax, qword [rsp+0x188+var_150]
0000000000002170         sub        rax, qword [rbp+0x2008]
0000000000002177         cmp        qword [rsp+0x188+var_170], rax
000000000000217c         jae        loc_23a8

0000000000002182         mov        rsi, qword [rbp+0x2000]
0000000000002189         add        qword [rsp+0x188+var_140], rsi
000000000000218e         test       rsi, rsi
0000000000002191         jne        loc_2539

                     loc_2197:
0000000000002197         mov        rcx, qword [rbp+0x2008]                     ; CODE XREF=main+3345
000000000000219e         mov        qword [rsp+0x188+var_158], rbx
00000000000021a3         mov        rbx, rbp
00000000000021a6         sub        qword [rsp+0x188+var_150], rcx
00000000000021ab         mov        rbp, qword [rbp+0x2010]
00000000000021b2         jmp        loc_20a8

                     loc_21b7:
00000000000021b7         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=main+2196
00000000000021ba         mov        r15, qword [rsp+0x188+var_108]
00000000000021c2         mov        r13d, dword [rsp+0x188+var_FC]
00000000000021ca         call       j_free                                      ; free
00000000000021cf         add        r12, 0x1
00000000000021d3         je         loc_2725

00000000000021d9         mov        rcx, qword [rsp+0x188+var_158]
00000000000021de         mov        rax, qword [rcx+0x2000]
00000000000021e5         test       rax, rax
00000000000021e8         jne        loc_23bf

                     loc_21ee:
00000000000021ee         mov        r14, rbp                                    ; CODE XREF=main+2970, main+2990
00000000000021f1         mov        qword [rsp+0x188+var_158], rbp
00000000000021f6         mov        rbx, qword [rsp+0x188+var_170]
00000000000021fb         mov        r12, qword [rsp+0x188+var_150]
0000000000002200         mov        rbp, qword [rsp+0x188+var_140]
0000000000002205         jmp        loc_2215

                     loc_2207:
0000000000002207         sub        r12, qword [r14+0x2008]                     ; CODE XREF=main+2565, main+2575
000000000000220e         mov        r14, qword [r14+0x2010]

                     loc_2215:
0000000000002215         mov        rax, r12                                    ; CODE XREF=main+2517
0000000000002218         sub        rax, qword [r14+0x2008]
000000000000221f         cmp        rbx, rax
0000000000002222         jae        loc_22b6

0000000000002228         mov        rsi, qword [r14+0x2000]
000000000000222f         add        rbp, rsi
0000000000002232         test       rsi, rsi
0000000000002235         je         loc_2207

0000000000002237         mov        rdi, r14
000000000000223a         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
000000000000223f         jmp        loc_2207

                     loc_2241:
0000000000002241         mov        r14, qword [rsp+0x188+var_158]              ; CODE XREF=main+2345
0000000000002246         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
0000000000002249         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
000000000000224c         lea        rdi, qword [r14+rax]                        ; argument "__dest" for method j_memcpy
0000000000002250         call       j_memcpy                                    ; memcpy
0000000000002255         mov        rax, qword [rbx+0x2000]
000000000000225c         add        qword [r14+0x2000], rax
0000000000002263         mov        rax, qword [rbx+0x2008]
000000000000226a         add        qword [r14+0x2008], rax
0000000000002271         jmp        loc_20a8

                     loc_2276:
0000000000002276         cmp        qword [rsp+0x188+var_130], r12              ; CODE XREF=main+1565
000000000000227b         lea        rax, qword [r12+r12]
000000000000227f         cmovb      rax, qword [rsp+0x188+var_160]
0000000000002285         mov        r12, rax
0000000000002288         jmp        loc_1e66

                     loc_228d:
000000000000228d         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=main+1826
000000000000228f         call       j_close                                     ; close
0000000000002294         test       eax, eax
0000000000002296         jns        loc_1f58

000000000000229c         call       j___errno_location                          ; __errno_location
00000000000022a1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022a3         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x70ea
00000000000022aa         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000022af         xor        eax, eax
00000000000022b1         call       j_error                                     ; error

                     loc_22b6:
00000000000022b6         mov        rcx, qword [rsp+0x188+var_170]              ; CODE XREF=main+2546
00000000000022bb         mov        rax, r12
00000000000022be         mov        qword [rsp+0x188+var_140], rbp
00000000000022c3         movzx      r12d, byte [rsp+0x188+var_FF]
00000000000022cc         mov        rbp, qword [rsp+0x188+var_158]
00000000000022d1         cmp        rcx, rax
00000000000022d4         jae        loc_235f

00000000000022da         mov        rbx, rax
00000000000022dd         mov        r12, qword [r14+0x2000]
00000000000022e4         mov        rax, r14
00000000000022e7         sub        rbx, rcx
00000000000022ea         movsx      ecx, byte [line_end]                        ; line_end
00000000000022f1         mov        rbp, r14
00000000000022f4         add        r12, r14
00000000000022f7         mov        r14, rbx
00000000000022fa         mov        ebx, ecx
00000000000022fc         jmp        loc_2323

                     loc_22fe:
00000000000022fe         mov        rdx, r12                                    ; CODE XREF=main+2806
0000000000002301         mov        esi, ebx                                    ; argument "__c" for method j_memchr
0000000000002303         mov        rdi, rax                                    ; argument "__s" for method j_memchr
0000000000002306         sub        rdx, rax                                    ; argument "__n" for method j_memchr
0000000000002309         call       j_memchr                                    ; memchr
000000000000230e         test       rax, rax
0000000000002311         je         loc_2328

0000000000002313         add        qword [rbp+0x2008], 0x1
000000000000231b         add        rax, 0x1
000000000000231f         sub        r14, 0x1

                     loc_2323:
0000000000002323         test       r14, r14                                    ; CODE XREF=main+2764
0000000000002326         jne        loc_22fe

                     loc_2328:
0000000000002328         mov        r14, rbp                                    ; CODE XREF=main+2785
000000000000232b         movzx      r12d, byte [rsp+0x188+var_FF]
0000000000002334         mov        rbp, qword [rsp+0x188+var_158]
0000000000002339         sub        rax, r14
000000000000233c         add        qword [rsp+0x188+var_140], rax
0000000000002341         test       rax, rax
0000000000002344         je         loc_235f

0000000000002346         mov        rdi, r14
0000000000002349         mov        rsi, rax
000000000000234c         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002351         movzx      r12d, byte [rsp+0x188+var_FF]
000000000000235a         mov        rdi, rbp
000000000000235d         jmp        loc_2373

                     loc_235f:
000000000000235f         mov        rdi, rbp                                    ; CODE XREF=main+2724, main+2836
0000000000002362         jmp        loc_2373

                     loc_2364:
0000000000002364         mov        rbx, qword [rdi+0x2010]                     ; CODE XREF=main+2886
000000000000236b         call       j_free                                      ; free
0000000000002370         mov        rdi, rbx

                     loc_2373:
0000000000002373         test       rdi, rdi                                    ; CODE XREF=main+2861, main+2866, main+3895
0000000000002376         jne        loc_2364

0000000000002378         cmp        qword [rsp+0x188+var_148], 0xffffffffffffffff
000000000000237e         je         loc_1c53

0000000000002384         mov        rsi, qword [rsp+0x188+var_140]
0000000000002389         mov        edi, dword [rsp+0x188+var_17C]
000000000000238d         xor        edx, edx
000000000000238f         mov        rcx, r15
0000000000002392         call       elseek                                      ; elseek
0000000000002397         test       rax, rax
000000000000239a         jns        loc_1c53

                     loc_23a0:
00000000000023a0         xor        r12d, r12d                                  ; CODE XREF=main+3022, main+3332
00000000000023a3         jmp        loc_1c53

                     loc_23a8:
00000000000023a8         mov        edi, 0x2018                                 ; CODE XREF=main+2380
00000000000023ad         call       xmalloc                                     ; xmalloc
00000000000023b2         mov        qword [rsp+0x188+var_158], rbx
00000000000023b7         mov        rbx, rax
00000000000023ba         jmp        loc_20a8

                     loc_23bf:
00000000000023bf         movzx      ebx, byte [line_end]                        ; line_end, CODE XREF=main+2488
00000000000023c6         cmp        byte [rcx+rax-1], bl
00000000000023ca         je         loc_21ee

00000000000023d0         add        qword [rcx+0x2008], 0x1
00000000000023d8         add        qword [rsp+0x188+var_150], 0x1
00000000000023de         jmp        loc_21ee

                     loc_23e3:
00000000000023e3         mov        edi, dword [rsp+0x188+var_17C]              ; CODE XREF=main+1464
00000000000023e7         xor        esi, esi
00000000000023e9         mov        rcx, r15
00000000000023ec         mov        edx, 0x1
00000000000023f1         call       elseek                                      ; elseek
00000000000023f6         test       rax, rax
00000000000023f9         mov        qword [rsp+0x188+var_148], rax
00000000000023fe         js         loc_23a0

0000000000002400         cmp        byte [rsp+0x188+var_FE], 0x0
0000000000002408         mov        r8, qword [rsp+0x188+var_B8]
0000000000002410         movzx      r9d, byte [presume_input_pipe]              ; presume_input_pipe
0000000000002418         je         loc_28ce

000000000000241e         test       r9b, r9b
0000000000002421         jne        loc_2045

0000000000002427         mov        rax, qword [rsp+0x188+var_B0]
000000000000242f         movabs     rcx, 0x1fffffffffffffff
0000000000002439         lea        rdx, qword [rax-1]
000000000000243d         cmp        rdx, rcx
0000000000002440         mov        edx, 0x200
0000000000002445         cmova      rax, rdx
0000000000002449         cmp        rax, r8
000000000000244c         jge        loc_2045

0000000000002452         cmp        qword [rsp+0x188+var_148], r8
0000000000002457         mov        r9d, 0x1
000000000000245d         jl         loc_276c

                     loc_2463:
0000000000002463         mov        r12d, r9d                                   ; CODE XREF=main+3926
0000000000002466         and        r12d, 0x1
000000000000246a         jmp        loc_1c53

                     loc_246f:
000000000000246f         test       bpl, bpl                                    ; CODE XREF=main+1720
0000000000002472         mov        r8, r13
0000000000002475         mov        rbx, r12
0000000000002478         mov        r15, qword [rsp+0x188+var_108]
0000000000002480         mov        byte [rsp+0x188+var_150], bpl
0000000000002485         mov        r12d, r9d
0000000000002488         mov        r13d, dword [rsp+0x188+var_FC]
0000000000002490         je         loc_26a5

0000000000002496         mov        rcx, qword [rsp+0x188+var_128]
000000000000249b         mov        rdi, qword [r14+rbx*8]
000000000000249f         mov        ebp, 0x2000
00000000000024a4         sub        rbp, r8
00000000000024a7         add        qword [rsp+0x188+var_158], rcx
00000000000024ac         add        rdi, r8
00000000000024af         cmp        rcx, rbp
00000000000024b2         jb         loc_2804

00000000000024b8         test       rbp, rbp
00000000000024bb         je         loc_24d5

00000000000024bd         mov        rsi, rbp
00000000000024c0         mov        qword [rsp+0x188+var_108], rdx
00000000000024c8         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
00000000000024cd         mov        rdx, qword [rsp+0x188+var_108]

                     loc_24d5:
00000000000024d5         mov        rsi, qword [rsp+0x188+var_128]              ; CODE XREF=main+3211
00000000000024da         movzx      r12d, byte [rsp+0x188+var_150]
00000000000024e0         sub        rsi, rbp
00000000000024e3         jne        loc_26c6

                     loc_24e9:
00000000000024e9         xor        ebx, ebx                                    ; CODE XREF=main+3706, main+3728, main+3743, main+3824, main+4066
00000000000024eb         mov        rbp, qword [rsp+0x188+var_140]
00000000000024f0         jmp        loc_24ff

                     loc_24f2:
00000000000024f2         mov        rdi, qword [r14+rbx*8]                      ; argument "__ptr" for method j_free, CODE XREF=main+3282
00000000000024f6         add        rbx, 0x1
00000000000024fa         call       j_free                                      ; free

                     loc_24ff:
00000000000024ff         cmp        rbx, rbp                                    ; CODE XREF=main+3264
0000000000002502         jne        loc_24f2

0000000000002504         mov        rdi, r14                                    ; argument "__ptr" for method j_free
0000000000002507         call       j_free                                      ; free

                     loc_250c:
000000000000250c         cmp        qword [rsp+0x188+var_148], 0xffffffffffffffff ; CODE XREF=main+3541
0000000000002512         je         loc_1c53

0000000000002518         mov        rsi, qword [rsp+0x188+var_158]
000000000000251d         mov        edi, dword [rsp+0x188+var_17C]
0000000000002521         xor        edx, edx
0000000000002523         mov        rcx, r15
0000000000002526         call       elseek                                      ; elseek
000000000000252b         test       rax, rax
000000000000252e         jns        loc_1c53

0000000000002534         jmp        loc_23a0

                     loc_2539:
0000000000002539         mov        rdi, rbp                                    ; CODE XREF=main+2401
000000000000253c         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002541         jmp        loc_2197

                     loc_2546:
0000000000002546         mov        rdi, qword [rsp+0x188+var_118]              ; CODE XREF=main+1512
000000000000254b         xor        ebx, ebx
000000000000254d         call       xmalloc                                     ; xmalloc
0000000000002552         mov        rcx, qword [rsp+0x188+var_120]
0000000000002557         movzx      r12d, byte [rsp+0x188+var_FF]
0000000000002560         mov        rbp, qword [rsp+0x188+var_170]
0000000000002565         mov        qword [rsp+0x188+var_108], rax
000000000000256d         mov        qword [rsp+0x188+var_F8], rax
0000000000002575         mov        dword [rsp+0x188+var_140], r13d
000000000000257a         add        rax, rcx
000000000000257d         mov        qword [rsp+0x188+var_150], r15
0000000000002582         mov        r13, rcx
0000000000002585         mov        qword [rsp+0x188+var_F0], rax

                     loc_258d:
000000000000258d         movzx      eax, bl                                     ; CODE XREF=main+3596
0000000000002590         mov        edi, dword [rsp+0x188+var_17C]
0000000000002594         mov        rdx, r13
0000000000002597         mov        r14, qword [rsp+rax*8+0x188+var_F8]
000000000000259f         mov        rsi, r14
00000000000025a2         call       full_read                                   ; full_read
00000000000025a7         cmp        r13, rax
00000000000025aa         mov        r15, rax
00000000000025ad         jbe        loc_260a

00000000000025af         call       j___errno_location                          ; __errno_location
00000000000025b4         cmp        dword [rax], 0x0
00000000000025b7         jne        loc_27a3

00000000000025bd         cmp        rbp, r15
00000000000025c0         jb         loc_2641

00000000000025c2         test       r12b, r12b
00000000000025c5         jne        loc_25e5

00000000000025c7         mov        eax, ebx
00000000000025c9         add        qword [rsp+0x188+var_158], r15
00000000000025ce         xor        eax, 0x1
00000000000025d1         test       r15, r15
00000000000025d4         movzx      eax, al
00000000000025d7         mov        rax, qword [rsp+rax*8+0x188+var_F8]
00000000000025df         jne        loc_278b

                     loc_25e5:
00000000000025e5         movzx      r12d, byte [rsp+0x188+var_FF]               ; CODE XREF=main+3477
00000000000025ee         mov        r15, qword [rsp+0x188+var_150]
00000000000025f3         mov        r13d, dword [rsp+0x188+var_140]

                     loc_25f8:
00000000000025f8         mov        rdi, qword [rsp+0x188+var_108]              ; argument "__ptr" for method j_free, CODE XREF=main+3691, main+4031
0000000000002600         call       j_free                                      ; free
0000000000002605         jmp        loc_250c

                     loc_260a:
000000000000260a         test       r12b, r12b                                  ; CODE XREF=main+3453
000000000000260d         je         loc_264f

000000000000260f         xor        r12d, r12d
0000000000002612         cmp        rbp, rax
0000000000002615         jae        loc_26a0

                     loc_261b:
000000000000261b         mov        rdx, r15                                    ; CODE XREF=main+3644
000000000000261e         sub        rdx, rbp
0000000000002621         add        qword [rsp+0x188+var_158], rdx

                     loc_2626:
0000000000002626         mov        rsi, rdx                                    ; CODE XREF=main+3679
0000000000002629         mov        rdi, r14
000000000000262c         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6

                     loc_2631:
0000000000002631         xor        ebx, 0x1                                    ; CODE XREF=main+3646
0000000000002634         test       r12b, r12b
0000000000002637         jne        loc_2691

                     loc_2639:
0000000000002639         xor        r12d, r12d                                  ; CODE XREF=main+3699
000000000000263c         jmp        loc_258d

                     loc_2641:
0000000000002641         test       r12b, r12b                                  ; CODE XREF=main+3472
0000000000002644         jne        loc_2681

0000000000002646         movzx      r12d, byte [rsp+0x188+var_FF]

                     loc_264f:
000000000000264f         mov        eax, ebx                                    ; CODE XREF=main+3549
0000000000002651         add        qword [rsp+0x188+var_158], rbp
0000000000002656         xor        eax, 0x1
0000000000002659         test       rbp, rbp
000000000000265c         movzx      eax, al
000000000000265f         mov        rax, qword [rsp+rax*8+0x188+var_F8]
0000000000002667         jne        loc_2670

                     loc_2669:
0000000000002669         cmp        rbp, r15                                    ; CODE XREF=main+3663
000000000000266c         jb         loc_261b

000000000000266e         jmp        loc_2631

                     loc_2670:
0000000000002670         lea        rdi, qword [rax+0x2000]                     ; CODE XREF=main+3639
0000000000002677         mov        rsi, rbp

                     loc_267a:
000000000000267a         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6, CODE XREF=main+3950
000000000000267f         jmp        loc_2669

                     loc_2681:
0000000000002681         mov        rdx, r15                                    ; CODE XREF=main+3604
0000000000002684         sub        rdx, rbp
0000000000002687         add        qword [rsp+0x188+var_158], rdx
000000000000268c         test       rdx, rdx
000000000000268f         jne        loc_2626

                     loc_2691:
0000000000002691         mov        r15, qword [rsp+0x188+var_150]              ; CODE XREF=main+3591
0000000000002696         mov        r13d, dword [rsp+0x188+var_140]
000000000000269b         jmp        loc_25f8

                     loc_26a0:
00000000000026a0         xor        ebx, 0x1                                    ; CODE XREF=main+3557
00000000000026a3         jmp        loc_2639

                     loc_26a5:
00000000000026a5         cmp        qword [rsp+0x188+var_160], rsi              ; CODE XREF=main+3168
00000000000026aa         jne        loc_24e9

00000000000026b0         mov        rsi, r8
00000000000026b3         sub        rsi, qword [rsp+0x188+var_110]
00000000000026b8         add        qword [rsp+0x188+var_158], rsi
00000000000026bd         test       rsi, rsi
00000000000026c0         je         loc_24e9

                     loc_26c6:
00000000000026c6         mov        rdi, qword [r14+rdx*8]                      ; CODE XREF=main+3251
00000000000026ca         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
00000000000026cf         jmp        loc_24e9

                     loc_26d4:
00000000000026d4         mov        r15, qword [rsp+0x188+var_108]              ; CODE XREF=main+1764
00000000000026dc         mov        edi, 0x4
00000000000026e1         mov        r12, rax
00000000000026e4         mov        r13d, dword [rsp+0x188+var_FC]
00000000000026ec         mov        rsi, r15
00000000000026ef         call       quotearg_style                              ; quotearg_style
00000000000026f4         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
00000000000026fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002700         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002702         mov        rbx, rax
0000000000002705         call       j_dcgettext                                 ; dcgettext
000000000000270a         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
000000000000270e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002711         mov        rcx, rbx
0000000000002714         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002716         xor        eax, eax
0000000000002718         xor        r12d, r12d
000000000000271b         call       j_error                                     ; error
0000000000002720         jmp        loc_24e9

                     loc_2725:
0000000000002725         mov        rsi, r15                                    ; CODE XREF=main+2467
0000000000002728         mov        edi, 0x4
000000000000272d         call       quotearg_style                              ; quotearg_style
0000000000002732         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
0000000000002739         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000273e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002740         mov        rbx, rax
0000000000002743         call       j_dcgettext                                 ; dcgettext
0000000000002748         mov        r12, rax
000000000000274b         call       j___errno_location                          ; __errno_location
0000000000002750         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002752         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000002755         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002757         mov        rcx, rbx
000000000000275a         xor        eax, eax
000000000000275c         xor        r12d, r12d
000000000000275f         call       j_error                                     ; error
0000000000002764         mov        rdi, rbp
0000000000002767         jmp        loc_2373

                     loc_276c:
000000000000276c         mov        rcx, qword [rsp+0x188+var_148]              ; CODE XREF=main+3117
0000000000002771         mov        rdx, qword [rsp+0x188+var_170]
0000000000002776         mov        rdi, r15
0000000000002779         mov        esi, dword [rsp+0x188+var_17C]
000000000000277d         call       elide_tail_lines_seekable                   ; elide_tail_lines_seekable
0000000000002782         movzx      r9d, al
0000000000002786         jmp        loc_2463

                     loc_278b:
000000000000278b         lea        rdi, qword [rax+0x2000]                     ; CODE XREF=main+3503
0000000000002792         movzx      r12d, byte [rsp+0x188+var_FF]
000000000000279b         mov        rsi, r15
000000000000279e         jmp        loc_267a

                     loc_27a3:
00000000000027a3         mov        r15, qword [rsp+0x188+var_150]              ; CODE XREF=main+3463
00000000000027a8         mov        edi, 0x4
00000000000027ad         mov        r13d, dword [rsp+0x188+var_140]
00000000000027b2         mov        qword [rsp+0x188+var_150], rax
00000000000027b7         xor        r12d, r12d
00000000000027ba         mov        rsi, r15
00000000000027bd         call       quotearg_style                              ; quotearg_style
00000000000027c2         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
00000000000027c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027d0         mov        rbx, rax
00000000000027d3         call       j_dcgettext                                 ; dcgettext
00000000000027d8         mov        r8, qword [rsp+0x188+var_150]
00000000000027dd         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027e0         mov        rcx, rbx
00000000000027e3         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000027e5         xor        eax, eax
00000000000027e7         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
00000000000027ea         call       j_error                                     ; error
00000000000027ef         jmp        loc_25f8

                     loc_27f4:
00000000000027f4         xor        r12d, r12d                                  ; CODE XREF=main+629
00000000000027f7         mov        byte [rsp+0x188+var_FE], 0x1
00000000000027ff         jmp        loc_1d36

                     loc_2804:
0000000000002804         mov        rsi, rcx                                    ; CODE XREF=main+3202
0000000000002807         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
000000000000280c         movzx      r12d, byte [rsp+0x188+var_150]
0000000000002812         jmp        loc_24e9

                     loc_2817:
0000000000002817         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+285
0000000000002819         call       usage                                       ; usage

                     loc_281e:
000000000000281e         mov        r14d, eax                                   ; CODE XREF=main+260, main+547
0000000000002821         jmp        loc_1962

                     loc_2826:
0000000000002826         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1863
                        ; endp

                     loc_282b:
000000000000282b         lea        rsi, qword [aInvalidTrailin]                ; argument "msgid" for method j_dcgettext, "invalid trailing option -- %c", CODE XREF=main+313
0000000000002832         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002837         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002839         call       j_dcgettext                                 ; dcgettext
000000000000283e         mov        ecx, r14d

                     loc_2841:
0000000000002841         mov        rdx, rax                                    ; argument "__format" for method j_error, CODE XREF=main+4164
0000000000002844         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002846         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002848         xor        eax, eax
000000000000284a         call       j_error                                     ; error
000000000000284f         jmp        loc_196f

                     loc_2854:
0000000000002854         test       r9b, r9b                                    ; case 23, CODE XREF=main+678, main+694
0000000000002857         jne        loc_294c

                     loc_285d:
000000000000285d         lea        rsi, qword [aInvalidTrailin]                ; argument "msgid" for method j_dcgettext, "invalid trailing option -- %c", CODE XREF=main+4387
0000000000002864         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002869         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000286b         call       j_dcgettext                                 ; dcgettext
0000000000002870         movsx      ecx, r13b
0000000000002874         jmp        loc_2841

                     loc_2876:
0000000000002876         lea        rsi, qword [rsp+0x188+var_58]               ; CODE XREF=main+748
000000000000287e         mov        rdi, r15
0000000000002881         call       umaxtostr                                   ; umaxtostr
0000000000002886         mov        rdi, rax
0000000000002889         call       quote                                       ; quote
000000000000288e         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of bytes"
0000000000002895         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000289a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000289c         mov        rbx, rax
000000000000289f         call       j_dcgettext                                 ; dcgettext
00000000000028a4         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000028ab         mov        rcx, rax
00000000000028ae         mov        r8, rbx
00000000000028b1         mov        esi, 0x4b                                   ; argument "__errnum" for method j_error
00000000000028b6         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000028bb         xor        eax, eax
00000000000028bd         call       j_error                                     ; error

                     loc_28c2:
00000000000028c2         mov        byte [line_end], r10b                       ; line_end, CODE XREF=main+1268
00000000000028c9         jmp        loc_1d2a

                     loc_28ce:
00000000000028ce         test       r9b, r9b                                    ; CODE XREF=main+3048
00000000000028d1         mov        r12d, r9d
00000000000028d4         jne        loc_1e05

00000000000028da         mov        rax, qword [rsp+0x188+var_B0]
00000000000028e2         movabs     rcx, 0x1fffffffffffffff
00000000000028ec         lea        rdx, qword [rax-1]
00000000000028f0         cmp        rdx, rcx
00000000000028f3         mov        edx, 0x200
00000000000028f8         cmova      rax, rdx
00000000000028fc         cmp        r8, rax
00000000000028ff         jle        loc_1e05

0000000000002905         sub        r8, qword [rsp+0x188+var_148]
000000000000290a         mov        eax, 0x0
000000000000290f         cmovs      r8, rax
0000000000002913         cmp        qword [rsp+0x188+var_170], r8
0000000000002918         jb         loc_2928

                     loc_291a:
000000000000291a         movzx      r12d, byte [rsp+0x188+var_FF]               ; CODE XREF=main+4363
0000000000002923         jmp        loc_1c53

                     loc_2928:
0000000000002928         mov        rsi, r8                                     ; CODE XREF=main+4328
000000000000292b         sub        rsi, qword [rsp+0x188+var_170]
0000000000002930         mov        edi, dword [rsp+0x188+var_17C]
0000000000002934         call       copy_fd                                     ; copy_fd
0000000000002939         test       eax, eax
000000000000293b         je         loc_291a

000000000000293d         mov        rsi, r15
0000000000002940         mov        edi, eax
0000000000002942         call       diagnose_copy_fd_failure                    ; diagnose_copy_fd_failure
0000000000002947         jmp        loc_1c53

                     loc_294c:
000000000000294c         mov        byte [line_end], r10b                       ; line_end, CODE XREF=main+4135
0000000000002953         jmp        loc_285d
0000000000002958         align      32                                          ; End of unwind block (FDE at 0x7fbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002960         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7d4c)
0000000000002962         mov        r9, rdx
0000000000002965         pop        rsi
0000000000002966         mov        rdx, rsp
0000000000002969         and        rsp, 0xfffffffffffffff0
000000000000296d         push       rax
000000000000296e         push       rsp
000000000000296f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002976         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000297d         lea        rdi, qword [main]                           ; main
0000000000002984         call       qword [qword_209fd0+8]                      ; 0x209fd8
000000000000298a         hlt
                        ; endp
000000000000298b         align      16                                          ; End of unwind block (FDE at 0x7d4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002990         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002997         push       rbp
0000000000002998         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000299f         cmp        rax, rdi
00000000000029a2         mov        rbp, rsp
00000000000029a5         je         loc_29c0

00000000000029a7         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
00000000000029ae         test       rax, rax
00000000000029b1         je         loc_29c0

00000000000029b3         pop        rbp
00000000000029b4         jmp        rax
                        ; endp
00000000000029b6         align      64

                     loc_29c0:
00000000000029c0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000029c1         ret
                        ; endp
00000000000029c2         align      16

                     register_tm_clones:
00000000000029d0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
00000000000029d7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000029de         push       rbp
00000000000029df         sub        rsi, rdi
00000000000029e2         mov        rbp, rsp
00000000000029e5         sar        rsi, 0x3
00000000000029e9         mov        rax, rsi
00000000000029ec         shr        rax, 0x3f
00000000000029f0         add        rsi, rax
00000000000029f3         sar        rsi, 0x1
00000000000029f6         je         loc_2a10

00000000000029f8         mov        rax, qword [qword_209fe8]                   ; qword_209fe8
00000000000029ff         test       rax, rax
0000000000002a02         je         loc_2a10

0000000000002a04         pop        rbp
0000000000002a05         jmp        rax
                        ; endp
0000000000002a07         align      16

                     loc_2a10:
0000000000002a10         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002a11         ret
                        ; endp
0000000000002a12         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002a20         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002a27         jne        loc_2a58

0000000000002a29         cmp        qword [qword_209ff0], 0x0                   ; qword_209ff0
0000000000002a31         push       rbp
0000000000002a32         mov        rbp, rsp
0000000000002a35         je         loc_2a43

0000000000002a37         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000002a3e         call       j_qword_209ff0                              ; qword_209ff0

                     loc_2a43:
0000000000002a43         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002a48         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000002a4f         pop        rbp
0000000000002a50         ret
                        ; endp
0000000000002a51         align      8

                     loc_2a58:
0000000000002a58         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000002a5a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002a60         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002a61         mov        rbp, rsp
0000000000002a64         pop        rbp
0000000000002a65         jmp        register_tm_clones                          ; register_tm_clones
0000000000002a6a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     string_to_integer:
0000000000002a70         test       dil, dil                                    ; Begin of unwind block (FDE at 0x7dbc), CODE XREF=main+435, main+502, main+1301
0000000000002a73         push       rbx
0000000000002a74         mov        edx, 0x5
0000000000002a79         mov        rbx, rsi
0000000000002a7c         jne        loc_2ab0

0000000000002a7e         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of bytes"
0000000000002a85         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a87         call       j_dcgettext                                 ; dcgettext
0000000000002a8c         mov        r8, rax

                     loc_2a8f:
0000000000002a8f         mov        rdi, rbx                                    ; CODE XREF=string_to_integer+81
0000000000002a92         lea        rcx, qword [aBkkmmgtpezy0]                  ; "bkKmMGTPEZY0"
0000000000002a99         xor        r9d, r9d
0000000000002a9c         pop        rbx
0000000000002a9d         mov        rdx, 0xffffffffffffffff
0000000000002aa4         xor        esi, esi
0000000000002aa6         jmp        xdectoumax                                  ; xdectoumax
0000000000002aab         align      16

                     loc_2ab0:
0000000000002ab0         lea        rsi, qword [aInvalidNumberO_6804]           ; argument "msgid" for method j_dcgettext, "invalid number of lines", CODE XREF=string_to_integer+12
0000000000002ab7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ab9         call       j_dcgettext                                 ; dcgettext
0000000000002abe         mov        r8, rax
0000000000002ac1         jmp        loc_2a8f
0000000000002ac3         align      16                                          ; End of unwind block (FDE at 0x7dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48


                     elseek:
0000000000002ad0         push       r13                                         ; Begin of unwind block (FDE at 0x7dd8), CODE XREF=main+2914, main+3009, main+3318, head_lines+376, elide_tail_lines_seekable+111, elide_tail_lines_seekable+326, elide_tail_lines_seekable+419, elide_tail_lines_seekable+607
0000000000002ad2         push       r12
0000000000002ad4         mov        r13, rcx
0000000000002ad7         push       rbp
0000000000002ad8         push       rbx
0000000000002ad9         mov        r12, rsi
0000000000002adc         mov        ebp, edx
0000000000002ade         sub        rsp, 0x28
0000000000002ae2         mov        rax, qword [fs:0x28]
0000000000002aeb         mov        qword [rsp+0x48+var_30], rax
0000000000002af0         xor        eax, eax
0000000000002af2         call       j_lseek                                     ; lseek
0000000000002af7         test       rax, rax
0000000000002afa         mov        rbx, rax
0000000000002afd         js         loc_2b20

                     loc_2aff:
0000000000002aff         mov        rcx, qword [rsp+0x48+var_30]                ; CODE XREF=elseek+172
0000000000002b04         xor        rcx, qword [fs:0x28]
0000000000002b0d         mov        rax, rbx
0000000000002b10         jne        loc_2b7e

0000000000002b12         add        rsp, 0x28
0000000000002b16         pop        rbx
0000000000002b17         pop        rbp
0000000000002b18         pop        r12
0000000000002b1a         pop        r13
0000000000002b1c         ret
                        ; endp
0000000000002b1d         align      32

                     loc_2b20:
0000000000002b20         mov        rsi, rsp                                    ; CODE XREF=elseek+45
0000000000002b23         mov        rdi, r12
0000000000002b26         call       offtostr                                    ; offtostr
0000000000002b2b         mov        rdx, r13
0000000000002b2e         xor        edi, edi
0000000000002b30         mov        esi, 0x3
0000000000002b35         mov        r12, rax
0000000000002b38         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002b3d         lea        rsi, qword [aSCannotSeekToO]                ; "%s: cannot seek to offset %s"
0000000000002b44         mov        r13, rax
0000000000002b47         lea        rax, qword [aSCannotSeekToR]                ; "%s: cannot seek to relative offset %s"
0000000000002b4e         test       ebp, ebp
0000000000002b50         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b55         cmovne     rsi, rax                                    ; argument "msgid" for method j_dcgettext
0000000000002b59         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b5b         call       j_dcgettext                                 ; dcgettext
0000000000002b60         mov        rbp, rax
0000000000002b63         call       j___errno_location                          ; __errno_location
0000000000002b68         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002b6a         mov        r8, r12
0000000000002b6d         mov        rcx, r13
0000000000002b70         mov        rdx, rbp                                    ; argument "__format" for method j_error
0000000000002b73         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002b75         xor        eax, eax
0000000000002b77         call       j_error                                     ; error
0000000000002b7c         jmp        loc_2aff

                     loc_2b7e:
0000000000002b7e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=elseek+64
                        ; endp
0000000000002b83         align      16                                          ; End of unwind block (FDE at 0x7dd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_48: int64_t, -72


                     xwrite_stdout.part.6:
0000000000002b90         push       rbp                                         ; Begin of unwind block (FDE at 0x7e14), CODE XREF=main+1680, main+2221, main+2570, main+2844, main+3224, main+3340, main+3580, main+3658, main+3738, main+4055, copy_fd+124
0000000000002b91         push       rbx
0000000000002b92         mov        rdx, rsi                                    ; argument "__n" for method j_fwrite_unlocked
0000000000002b95         mov        rbx, rsi
0000000000002b98         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002b9d         sub        rsp, 0x8
0000000000002ba1         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000002ba8         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002bad         cmp        rbx, rax
0000000000002bb0         ja         loc_2bb9

0000000000002bb2         add        rsp, 0x8
0000000000002bb6         pop        rbx
0000000000002bb7         pop        rbp
0000000000002bb8         ret
                        ; endp

                     loc_2bb9:
0000000000002bb9         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_clearerr_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=xwrite_stdout.part.6+32
0000000000002bc0         call       j_clearerr_unlocked                         ; clearerr_unlocked
0000000000002bc5         lea        rsi, qword [aStandardOutput]                ; "standard output"
0000000000002bcc         mov        edi, 0x4
0000000000002bd1         call       quotearg_style                              ; quotearg_style
0000000000002bd6         lea        rsi, qword [aErrorWritingS]                 ; argument "msgid" for method j_dcgettext, "error writing %s"
0000000000002bdd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002be2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002be4         mov        rbp, rax
0000000000002be7         call       j_dcgettext                                 ; dcgettext
0000000000002bec         mov        rbx, rax
0000000000002bef         call       j___errno_location                          ; __errno_location
0000000000002bf4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002bf6         mov        rcx, rbp
0000000000002bf9         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002bfc         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002c01         xor        eax, eax
0000000000002c03         call       j_error                                     ; error
0000000000002c08         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7e14)
                     copy_fd:
0000000000002c10         push       r13                                         ; Begin of unwind block (FDE at 0x7e40), CODE XREF=main+4356, elide_tail_lines_seekable+630
0000000000002c12         push       r12
0000000000002c14         push       rbp
0000000000002c15         push       rbx
0000000000002c16         sub        rsp, 0x2018
0000000000002c1d         mov        rax, qword [fs:0x28]
0000000000002c26         mov        qword [rsp+0x2050+var_48], rax
0000000000002c2e         xor        eax, eax
0000000000002c30         test       rsi, rsi
0000000000002c33         je         loc_2c96

0000000000002c35         mov        r12d, edi
0000000000002c38         mov        rbx, rsi
0000000000002c3b         mov        rbp, rsp
0000000000002c3e         mov        r13d, 0x2000
0000000000002c44         jmp        loc_2c55
0000000000002c46         align      16

                     loc_2c50:
0000000000002c50         test       rbx, rbx                                    ; CODE XREF=copy_fd+116
0000000000002c53         je         loc_2c96

                     loc_2c55:
0000000000002c55         cmp        rbx, 0x2000                                 ; CODE XREF=copy_fd+52, copy_fd+132
0000000000002c5c         mov        rdx, r13
0000000000002c5f         mov        rsi, rbp
0000000000002c62         cmovbe     rdx, rbx
0000000000002c66         mov        edi, r12d
0000000000002c69         call       safe_read                                   ; safe_read
0000000000002c6e         cmp        rax, 0xffffffffffffffff
0000000000002c72         je         loc_2cc0

0000000000002c74         sub        rbx, rax
0000000000002c77         test       rax, rax
0000000000002c7a         jne        loc_2c81

0000000000002c7c         test       rbx, rbx
0000000000002c7f         jne        loc_2cd0

                     loc_2c81:
0000000000002c81         test       rax, rax                                    ; CODE XREF=copy_fd+106
0000000000002c84         je         loc_2c50

0000000000002c86         mov        rsi, rax
0000000000002c89         mov        rdi, rbp
0000000000002c8c         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002c91         test       rbx, rbx
0000000000002c94         jne        loc_2c55

                     loc_2c96:
0000000000002c96         xor        eax, eax                                    ; CODE XREF=copy_fd+35, copy_fd+67

                     loc_2c98:
0000000000002c98         mov        rcx, qword [rsp+0x2050+var_48]              ; CODE XREF=copy_fd+181, copy_fd+197
0000000000002ca0         xor        rcx, qword [fs:0x28]
0000000000002ca9         jne        loc_2cd7

0000000000002cab         add        rsp, 0x2018
0000000000002cb2         pop        rbx
0000000000002cb3         pop        rbp
0000000000002cb4         pop        r12
0000000000002cb6         pop        r13
0000000000002cb8         ret
                        ; endp
0000000000002cb9         align      64

                     loc_2cc0:
0000000000002cc0         mov        eax, 0x1                                    ; CODE XREF=copy_fd+98
0000000000002cc5         jmp        loc_2c98
0000000000002cc7         align      16

                     loc_2cd0:
0000000000002cd0         mov        eax, 0x2                                    ; CODE XREF=copy_fd+111
0000000000002cd5         jmp        loc_2c98

                     loc_2cd7:
0000000000002cd7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=copy_fd+153
                        ; endp
0000000000002cdc         align      32                                          ; End of unwind block (FDE at 0x7e40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_2048: int8_t, -8264
        ;    var_2049: int8_t, -8265
        ;    var_20C0: int32_t, -8384


                     head_lines:
0000000000002ce0         push       r15                                         ; Begin of unwind block (FDE at 0x7e7c), CODE XREF=main+1743
0000000000002ce2         push       r14
0000000000002ce4         push       r13
0000000000002ce6         push       r12
0000000000002ce8         push       rbp
0000000000002ce9         push       rbx
0000000000002cea         sub        rsp, 0x20a8
0000000000002cf1         mov        rax, qword [fs:0x28]
0000000000002cfa         mov        qword [rsp+0x20d8+var_40], rax
0000000000002d02         xor        eax, eax
0000000000002d04         test       rdx, rdx
0000000000002d07         je         loc_2e18

0000000000002d0d         lea        rbp, qword [rsp+0x20d8+var_2048]
0000000000002d15         lea        r15, qword [rsp+0x20d8+var_2049]
0000000000002d1d         mov        r13, rdi
0000000000002d20         mov        r12d, esi
0000000000002d23         mov        r14, rdx

                     loc_2d26:
0000000000002d26         mov        edx, 0x2000                                 ; CODE XREF=head_lines+243
0000000000002d2b         mov        rsi, rbp
0000000000002d2e         mov        edi, r12d
0000000000002d31         call       safe_read                                   ; safe_read
0000000000002d36         cmp        rax, 0xffffffffffffffff
0000000000002d3a         je         loc_2dd8

0000000000002d40         test       rax, rax
0000000000002d43         je         loc_2e18

0000000000002d49         movzx      edx, byte [line_end]                        ; line_end
0000000000002d50         xor        ebx, ebx
0000000000002d52         jmp        loc_2d5d
0000000000002d54         align      8

                     loc_2d58:
0000000000002d58         cmp        rax, rbx                                    ; CODE XREF=head_lines+133, head_lines+139
0000000000002d5b         je         loc_2dc8

                     loc_2d5d:
0000000000002d5d         add        rbx, 0x1                                    ; CODE XREF=head_lines+114
0000000000002d61         cmp        byte [r15+rbx], dl
0000000000002d65         jne        loc_2d58

0000000000002d67         sub        r14, 0x1
0000000000002d6b         jne        loc_2d58

0000000000002d6d         mov        r14, rbx
0000000000002d70         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000002d75         mov        edi, r12d                                   ; argument "__fd" for method j_lseek
0000000000002d78         sub        r14, rax
0000000000002d7b         mov        rsi, r14                                    ; argument "__offset" for method j_lseek
0000000000002d7e         call       j_lseek                                     ; lseek
0000000000002d83         test       rax, rax
0000000000002d86         js         loc_2e22

                     loc_2d8c:
0000000000002d8c         mov        rsi, rbx                                    ; CODE XREF=head_lines+356, head_lines+381
0000000000002d8f         mov        rdi, rbp
0000000000002d92         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002d97         mov        eax, 0x1

                     loc_2d9c:
0000000000002d9c         mov        rcx, qword [rsp+0x20d8+var_40]              ; CODE XREF=head_lines+310, head_lines+317
0000000000002da4         xor        rcx, qword [fs:0x28]
0000000000002dad         jne        loc_2e62

0000000000002db3         add        rsp, 0x20a8
0000000000002dba         pop        rbx
0000000000002dbb         pop        rbp
0000000000002dbc         pop        r12
0000000000002dbe         pop        r13
0000000000002dc0         pop        r14
0000000000002dc2         pop        r15
0000000000002dc4         ret
                        ; endp
0000000000002dc5         align      8

                     loc_2dc8:
0000000000002dc8         mov        rsi, rax                                    ; CODE XREF=head_lines+123
0000000000002dcb         mov        rdi, rbp
0000000000002dce         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002dd3         jmp        loc_2d26

                     loc_2dd8:
0000000000002dd8         mov        rsi, r13                                    ; CODE XREF=head_lines+90
0000000000002ddb         mov        edi, 0x4
0000000000002de0         call       quotearg_style                              ; quotearg_style
0000000000002de5         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
0000000000002dec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002df1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002df3         mov        rbp, rax
0000000000002df6         call       j_dcgettext                                 ; dcgettext
0000000000002dfb         mov        rbx, rax
0000000000002dfe         call       j___errno_location                          ; __errno_location
0000000000002e03         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002e05         mov        rcx, rbp
0000000000002e08         xor        eax, eax
0000000000002e0a         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002e0d         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002e0f         call       j_error                                     ; error
0000000000002e14         xor        eax, eax
0000000000002e16         jmp        loc_2d9c

                     loc_2e18:
0000000000002e18         mov        eax, 0x1                                    ; CODE XREF=head_lines+39, head_lines+99
0000000000002e1d         jmp        loc_2d9c

                     loc_2e22:
0000000000002e22         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___fxstat, CODE XREF=head_lines+166
0000000000002e25         mov        esi, r12d                                   ; argument "__fildes" for method j___fxstat
0000000000002e28         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000002e2d         call       j___fxstat                                  ; __fxstat
0000000000002e32         test       eax, eax
0000000000002e34         jne        loc_2e4a

0000000000002e36         mov        eax, dword [rsp+0x20d8+var_20C0]
0000000000002e3a         and        eax, 0xf000
0000000000002e3f         cmp        eax, 0x8000
0000000000002e44         jne        loc_2d8c

                     loc_2e4a:
0000000000002e4a         mov        rcx, r13                                    ; CODE XREF=head_lines+340
0000000000002e4d         mov        edx, 0x1
0000000000002e52         mov        rsi, r14
0000000000002e55         mov        edi, r12d
0000000000002e58         call       elseek                                      ; elseek
0000000000002e5d         jmp        loc_2d8c

                     loc_2e62:
0000000000002e62         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=head_lines+205
                        ; endp
0000000000002e67         align      16                                          ; End of unwind block (FDE at 0x7e7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     head_bytes:
0000000000002e70         push       r15                                         ; Begin of unwind block (FDE at 0x7ec8), CODE XREF=main+1051
0000000000002e72         push       r14
0000000000002e74         push       r13
0000000000002e76         push       r12
0000000000002e78         push       rbp
0000000000002e79         push       rbx
0000000000002e7a         sub        rsp, 0x2018
0000000000002e81         mov        rax, qword [fs:0x28]
0000000000002e8a         mov        qword [rsp+0x2048+var_40], rax
0000000000002e92         xor        eax, eax
0000000000002e94         test       rdx, rdx
0000000000002e97         je         loc_2f30

0000000000002e9d         mov        r15, rdi
0000000000002ea0         mov        r14d, esi
0000000000002ea3         mov        rbp, rdx
0000000000002ea6         mov        r12d, 0x2000
0000000000002eac         mov        r13, rsp
0000000000002eaf         jmp        loc_2ecd
0000000000002eb1         align      8

                     loc_2eb8:
0000000000002eb8         test       rax, rax                                    ; CODE XREF=head_bytes+121
0000000000002ebb         je         loc_2f30

0000000000002ebd         mov        rsi, rax
0000000000002ec0         mov        rdi, r13
0000000000002ec3         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
0000000000002ec8         sub        rbp, rbx
0000000000002ecb         je         loc_2f30

                     loc_2ecd:
0000000000002ecd         cmp        r12, rbp                                    ; CODE XREF=head_bytes+63
0000000000002ed0         mov        rsi, r13
0000000000002ed3         mov        edi, r14d
0000000000002ed6         cmova      r12, rbp
0000000000002eda         mov        rdx, r12
0000000000002edd         call       safe_read                                   ; safe_read
0000000000002ee2         cmp        rax, 0xffffffffffffffff
0000000000002ee6         mov        rbx, rax
0000000000002ee9         jne        loc_2eb8

0000000000002eeb         mov        rsi, r15
0000000000002eee         mov        edi, 0x4
0000000000002ef3         call       quotearg_style                              ; quotearg_style
0000000000002ef8         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
0000000000002eff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f04         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f06         mov        rbp, rax
0000000000002f09         call       j_dcgettext                                 ; dcgettext
0000000000002f0e         mov        rbx, rax
0000000000002f11         call       j___errno_location                          ; __errno_location
0000000000002f16         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002f18         mov        rcx, rbp
0000000000002f1b         xor        eax, eax
0000000000002f1d         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002f20         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002f22         call       j_error                                     ; error
0000000000002f27         xor        eax, eax
0000000000002f29         jmp        loc_2f35
0000000000002f2b         align      16

                     loc_2f30:
0000000000002f30         mov        eax, 0x1                                    ; CODE XREF=head_bytes+39, head_bytes+75, head_bytes+91

                     loc_2f35:
0000000000002f35         mov        rcx, qword [rsp+0x2048+var_40]              ; CODE XREF=head_bytes+185
0000000000002f3d         xor        rcx, qword [fs:0x28]
0000000000002f46         jne        loc_2f5a

0000000000002f48         add        rsp, 0x2018
0000000000002f4f         pop        rbx
0000000000002f50         pop        rbp
0000000000002f51         pop        r12
0000000000002f53         pop        r13
0000000000002f55         pop        r14
0000000000002f57         pop        r15
0000000000002f59         ret
                        ; endp

                     loc_2f5a:
0000000000002f5a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=head_bytes+214
                        ; endp
0000000000002f5f         align      32                                          ; End of unwind block (FDE at 0x7ec8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     diagnose_copy_fd_failure:
0000000000002f60         push       rbp                                         ; Begin of unwind block (FDE at 0x7f14), CODE XREF=main+4370, elide_tail_lines_seekable+655
0000000000002f61         push       rbx
0000000000002f62         sub        rsp, 0x8
0000000000002f66         cmp        edi, 0x1
0000000000002f69         je         loc_2fb8

0000000000002f6b         cmp        edi, 0x2
0000000000002f6e         jne        loc_2fd3

0000000000002f70         mov        rdx, rsi
0000000000002f73         xor        edi, edi
0000000000002f75         mov        esi, 0x3
0000000000002f7a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002f7f         lea        rsi, qword [aSFileHasShrunk]                ; "%s: file has shrunk too much"
0000000000002f86         mov        rbp, rax
0000000000002f89         mov        edx, 0x5

                     loc_2f8e:
0000000000002f8e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=diagnose_copy_fd_failure+113
0000000000002f90         call       j_dcgettext                                 ; dcgettext
0000000000002f95         mov        rbx, rax
0000000000002f98         call       j___errno_location                          ; __errno_location
0000000000002f9d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002f9f         add        rsp, 0x8
0000000000002fa3         mov        rcx, rbp
0000000000002fa6         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002fa9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002fab         xor        eax, eax
0000000000002fad         pop        rbx
0000000000002fae         pop        rbp
0000000000002faf         jmp        j_error                                     ; error
                        ; endp
0000000000002fb4         align      8

                     loc_2fb8:
0000000000002fb8         mov        edi, 0x4                                    ; CODE XREF=diagnose_copy_fd_failure+9
0000000000002fbd         call       quotearg_style                              ; quotearg_style
0000000000002fc2         mov        edx, 0x5
0000000000002fc7         mov        rbp, rax
0000000000002fca         lea        rsi, qword [aErrorReadingS]                 ; "error reading %s"
0000000000002fd1         jmp        loc_2f8e

                     loc_2fd3:
0000000000002fd3         call       j_abort                                     ; abort, CODE XREF=diagnose_copy_fd_failure+14
                        ; endp
0000000000002fd8         align      32                                          ; End of unwind block (FDE at 0x7f14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_2048: int8_t, -8264
        ;    var_2049: int8_t, -8265
        ;    var_2050: int64_t, -8272
        ;    var_2058: int64_t, -8280
        ;    var_2060: int64_t, -8288


                     elide_tail_lines_seekable:
0000000000002fe0         push       r15                                         ; Begin of unwind block (FDE at 0x7f40), CODE XREF=main+3917
0000000000002fe2         mov        rax, rcx
0000000000002fe5         push       r14
0000000000002fe7         push       r13
0000000000002fe9         push       r12
0000000000002feb         mov        r13d, 0x2000
0000000000002ff1         push       rbp
0000000000002ff2         push       rbx
0000000000002ff3         mov        rbx, rdx
0000000000002ff6         mov        rdx, r8
0000000000002ff9         mov        r14d, esi
0000000000002ffc         sub        rdx, rax
0000000000002fff         sub        rsp, 0x2038
0000000000003006         mov        rax, rdx
0000000000003009         mov        qword [rsp+0x2068+var_2058], rcx
000000000000300e         mov        qword [rsp+0x2068+var_2060], rdi
0000000000003013         sar        rax, 0x3f
0000000000003017         shr        rax, 0x33
000000000000301b         add        rdx, rax
000000000000301e         and        edx, 0x1fff
0000000000003024         mov        rcx, qword [fs:0x28]
000000000000302d         mov        qword [rsp+0x2068+var_40], rcx
0000000000003035         xor        ecx, ecx
0000000000003037         sub        rdx, rax
000000000000303a         mov        rcx, rdi
000000000000303d         mov        edi, r14d
0000000000003040         cmovne     r13, rdx
0000000000003044         xor        edx, edx
0000000000003046         sub        r8, r13
0000000000003049         mov        rsi, r8
000000000000304c         mov        r12, r8
000000000000304f         call       elseek                                      ; elseek
0000000000003054         test       rax, rax
0000000000003057         js         loc_3138

000000000000305d         lea        rbp, qword [rsp+0x2068+var_2048]
0000000000003062         mov        rdx, r13
0000000000003065         mov        edi, r14d
0000000000003068         mov        rsi, rbp
000000000000306b         call       safe_read                                   ; safe_read
0000000000003070         cmp        rax, 0xffffffffffffffff
0000000000003074         mov        r8, rax
0000000000003077         je         loc_31e0

000000000000307d         test       rbx, rbx
0000000000003080         je         loc_31c0

0000000000003086         test       rax, rax
0000000000003089         je         loc_31c0

000000000000308f         movzx      eax, byte [line_end]                        ; line_end
0000000000003096         mov        r15, rbx
0000000000003099         cmp        byte [rsp+r8+0x2068+var_2049], al
000000000000309e         setne      al
00000000000030a1         movzx      eax, al
00000000000030a4         sub        r15, rax

                     loc_30a7:
00000000000030a7         test       r8, r8                                      ; CODE XREF=elide_tail_lines_seekable+457, elide_tail_lines_seekable+483
00000000000030aa         je         loc_3168

00000000000030b0         movsx      r13d, byte [line_end]                       ; line_end
00000000000030b8         jmp        loc_30d9
00000000000030ba         align      64

                     loc_30c0:
00000000000030c0         sub        r8, 0x1                                     ; CODE XREF=elide_tail_lines_seekable+252
00000000000030c4         test       r15, r15
00000000000030c7         lea        rax, qword [r15-1]
00000000000030cb         je         loc_3100

                     loc_30cd:
00000000000030cd         test       r8, r8                                      ; CODE XREF=elide_tail_lines_seekable+286
00000000000030d0         mov        r15, rax
00000000000030d3         je         loc_3168

                     loc_30d9:
00000000000030d9         test       rbx, rbx                                    ; CODE XREF=elide_tail_lines_seekable+216
00000000000030dc         je         loc_30c0

00000000000030de         mov        rdx, r8                                     ; argument "__n" for method j_memrchr
00000000000030e1         mov        esi, r13d                                   ; argument "__c" for method j_memrchr
00000000000030e4         mov        rdi, rbp                                    ; argument "__s" for method j_memrchr
00000000000030e7         call       j_memrchr                                   ; memrchr
00000000000030ec         test       rax, rax
00000000000030ef         je         loc_3168

00000000000030f1         sub        rax, rbp
00000000000030f4         test       r15, r15
00000000000030f7         mov        r8, rax
00000000000030fa         lea        rax, qword [r15-1]
00000000000030fe         jne        loc_30cd

                     loc_3100:
0000000000003100         cmp        r12, qword [rsp+0x2068+var_2058]            ; CODE XREF=elide_tail_lines_seekable+235
0000000000003105         jg         loc_3228

                     loc_310b:
000000000000310b         mov        rbx, r8                                     ; CODE XREF=elide_tail_lines_seekable+642
000000000000310e         add        rbx, 0x1
0000000000003112         jne        loc_31d0

                     loc_3118:
0000000000003118         mov        rcx, qword [rsp+0x2068+var_2060]            ; CODE XREF=elide_tail_lines_seekable+507
000000000000311d         lea        rsi, qword [r12+rbx]
0000000000003121         xor        edx, edx
0000000000003123         mov        edi, r14d
0000000000003126         call       elseek                                      ; elseek
000000000000312b         not        rax
000000000000312e         shr        rax, 0x3f
0000000000003132         jmp        loc_313a
0000000000003134         align      8

                     loc_3138:
0000000000003138         xor        eax, eax                                    ; CODE XREF=elide_tail_lines_seekable+119, elide_tail_lines_seekable+427, elide_tail_lines_seekable+615

                     loc_313a:
000000000000313a         mov        rcx, qword [rsp+0x2068+var_40]              ; CODE XREF=elide_tail_lines_seekable+338, elide_tail_lines_seekable+468, elide_tail_lines_seekable+576, elide_tail_lines_seekable+662
0000000000003142         xor        rcx, qword [fs:0x28]
000000000000314b         jne        loc_327b

0000000000003151         add        rsp, 0x2038
0000000000003158         pop        rbx
0000000000003159         pop        rbp
000000000000315a         pop        r12
000000000000315c         pop        r13
000000000000315e         pop        r14
0000000000003160         pop        r15
0000000000003162         ret
                        ; endp
0000000000003163         align      8

                     loc_3168:
0000000000003168         cmp        r12, qword [rsp+0x2068+var_2058]            ; CODE XREF=elide_tail_lines_seekable+202, elide_tail_lines_seekable+243, elide_tail_lines_seekable+271
000000000000316d         je         loc_31af

000000000000316f         mov        rcx, qword [rsp+0x2068+var_2060]
0000000000003174         sub        r12, 0x2000
000000000000317b         xor        edx, edx
000000000000317d         mov        rsi, r12
0000000000003180         mov        edi, r14d
0000000000003183         call       elseek                                      ; elseek
0000000000003188         test       rax, rax
000000000000318b         js         loc_3138

000000000000318d         mov        edx, 0x2000
0000000000003192         mov        rsi, rbp
0000000000003195         mov        edi, r14d
0000000000003198         call       safe_read                                   ; safe_read
000000000000319d         cmp        rax, 0xffffffffffffffff
00000000000031a1         mov        r8, rax
00000000000031a4         je         loc_31e0

00000000000031a6         test       rax, rax
00000000000031a9         jne        loc_30a7

                     loc_31af:
00000000000031af         mov        eax, 0x1                                    ; CODE XREF=elide_tail_lines_seekable+397
00000000000031b4         jmp        loc_313a
00000000000031b6         align      64

                     loc_31c0:
00000000000031c0         mov        r15, rbx                                    ; CODE XREF=elide_tail_lines_seekable+160, elide_tail_lines_seekable+169
00000000000031c3         jmp        loc_30a7
00000000000031c8         align      16

                     loc_31d0:
00000000000031d0         mov        rsi, rbx                                    ; CODE XREF=elide_tail_lines_seekable+306
00000000000031d3         mov        rdi, rbp
00000000000031d6         call       xwrite_stdout.part.6                        ; xwrite_stdout.part.6
00000000000031db         jmp        loc_3118

                     loc_31e0:
00000000000031e0         mov        rsi, qword [rsp+0x2068+var_2060]            ; CODE XREF=elide_tail_lines_seekable+151, elide_tail_lines_seekable+452
00000000000031e5         mov        edi, 0x4
00000000000031ea         call       quotearg_style                              ; quotearg_style
00000000000031ef         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
00000000000031f6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031fd         mov        rbp, rax
0000000000003200         call       j_dcgettext                                 ; dcgettext
0000000000003205         mov        rbx, rax
0000000000003208         call       j___errno_location                          ; __errno_location
000000000000320d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000320f         mov        rcx, rbp
0000000000003212         xor        eax, eax
0000000000003214         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003217         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003219         call       j_error                                     ; error
000000000000321e         xor        eax, eax
0000000000003220         jmp        loc_313a
0000000000003225         align      8

                     loc_3228:
0000000000003228         mov        rbx, qword [rsp+0x2068+var_2058]            ; CODE XREF=elide_tail_lines_seekable+293
000000000000322d         mov        rcx, qword [rsp+0x2068+var_2060]
0000000000003232         xor        edx, edx
0000000000003234         mov        edi, r14d
0000000000003237         mov        qword [rsp+0x2068+var_2050], r8
000000000000323c         mov        rsi, rbx
000000000000323f         call       elseek                                      ; elseek
0000000000003244         test       rax, rax
0000000000003247         js         loc_3138

000000000000324d         mov        rsi, r12
0000000000003250         mov        edi, r14d
0000000000003253         sub        rsi, rbx
0000000000003256         call       copy_fd                                     ; copy_fd
000000000000325b         test       eax, eax
000000000000325d         mov        r8, qword [rsp+0x2068+var_2050]
0000000000003262         je         loc_310b

0000000000003268         mov        rsi, qword [rsp+0x2068+var_2060]
000000000000326d         mov        edi, eax
000000000000326f         call       diagnose_copy_fd_failure                    ; diagnose_copy_fd_failure
0000000000003274         xor        eax, eax
0000000000003276         jmp        loc_313a

                     loc_327b:
000000000000327b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=elide_tail_lines_seekable+363
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000003280         push       r13                                         ; End of unwind block (FDE at 0x7f40), Begin of unwind block (FDE at 0x7f90), CODE XREF=main+324, main+4073
0000000000003282         push       r12
0000000000003284         mov        edx, 0x5
0000000000003289         push       rbp
000000000000328a         push       rbx
000000000000328b         mov        ebp, edi
000000000000328d         sub        rsp, 0x88
0000000000003294         mov        rbx, qword [program_name]                   ; program_name
000000000000329b         mov        rax, qword [fs:0x28]
00000000000032a4         mov        qword [rsp+0xa8+var_30], rax
00000000000032a9         xor        eax, eax
00000000000032ab         test       edi, edi
00000000000032ad         je         loc_32dd

00000000000032af         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000032b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032b8         call       j_dcgettext                                 ; dcgettext
00000000000032bd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000032c4         mov        rdx, rax
00000000000032c7         mov        rcx, rbx
00000000000032ca         mov        esi, 0x1
00000000000032cf         xor        eax, eax
00000000000032d1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_32d6:
00000000000032d6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+862
00000000000032d8         call       j_exit                                      ; exit
                        ; endp

                     loc_32dd:
00000000000032dd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
00000000000032e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032e6         call       j_dcgettext                                 ; dcgettext
00000000000032eb         mov        rdx, rbx
00000000000032ee         mov        rsi, rax
00000000000032f1         mov        edi, 0x1
00000000000032f6         xor        eax, eax
00000000000032f8         call       j___printf_chk                              ; __printf_chk
00000000000032fd         lea        rsi, qword [aPrintTheFirstD]                ; argument "msgid" for method j_dcgettext, "Print the first %d lines of each FILE to standard output.\\nWith more than one FILE, precede each with a header giving the file name.\\n"
0000000000003304         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003306         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000330b         call       j_dcgettext                                 ; dcgettext
0000000000003310         mov        edx, 0xa
0000000000003315         mov        rsi, rax
0000000000003318         mov        edi, 0x1
000000000000331d         xor        eax, eax
000000000000331f         call       j___printf_chk                              ; __printf_chk
0000000000003324         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000332b         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000003332         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003337         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003339         call       j_dcgettext                                 ; dcgettext
000000000000333e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003341         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003344         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003349         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003350         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003357         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000335c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000335e         call       j_dcgettext                                 ; dcgettext
0000000000003363         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003366         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003369         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000336e         lea        rsi, qword [aCBytesnumPrint]                ; argument "msgid" for method j_dcgettext, "  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\\n                             with the leading '-', print all but the last\\n                             NUM bytes of each file\\n  -n, --lines=[-]NUM       print the first NUM lines instead of…"
0000000000003375         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003377         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000337c         call       j_dcgettext                                 ; dcgettext
0000000000003381         mov        edx, 0xa
0000000000003386         mov        rsi, rax
0000000000003389         mov        edi, 0x1
000000000000338e         xor        eax, eax
0000000000003390         call       j___printf_chk                              ; __printf_chk
0000000000003395         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000339c         lea        rsi, qword [aQQuietSilentNe]                ; argument "msgid" for method j_dcgettext, "  -q, --quiet, --silent    never print headers giving file names\\n  -v, --verbose            always print headers giving file names\\n"
00000000000033a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033aa         call       j_dcgettext                                 ; dcgettext
00000000000033af         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000033b2         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000033b5         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000033ba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000033c1         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated    line delimiter is NUL, not newline\\n"
00000000000033c8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033cf         call       j_dcgettext                                 ; dcgettext
00000000000033d4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000033d7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000033da         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000033df         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000033e6         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000033ed         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033f2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033f4         call       j_dcgettext                                 ; dcgettext
00000000000033f9         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000033fc         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000033ff         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003404         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000340b         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003412         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003417         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003419         call       j_dcgettext                                 ; dcgettext
000000000000341e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003421         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003424         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003429         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003430         lea        rsi, qword [aNnumMayHaveAMu]                ; argument "msgid" for method j_dcgettext, "\\nNUM may have a multiplier suffix:\\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\\n"
0000000000003437         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000343c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000343e         call       j_dcgettext                                 ; dcgettext
0000000000003443         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003446         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003449         lea        rbx, qword [aSFileHasShrunk+29]             ; 0x68ad
0000000000003450         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003455         lea        rax, qword [aSFileHasShrunk+34]             ; 0x68b2
000000000000345c         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000003463         mov        qword [rsp+0xa8+var_48], 0x0
000000000000346c         mov        qword [rsp+0xa8+var_40], 0x0
0000000000003475         mov        rdx, rsp
0000000000003478         mov        qword [rsp+0xa8+var_A8], rax
000000000000347c         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000003483         mov        qword [rsp+0xa8+var_78], rcx
0000000000003488         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000348f         mov        qword [rsp+0xa8+var_A0], rax
0000000000003494         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000349b         mov        qword [rsp+0xa8+var_68], rcx
00000000000034a0         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000034a7         mov        qword [rsp+0xa8+var_98], rax
00000000000034ac         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000034b3         mov        qword [rsp+0xa8+var_58], rcx
00000000000034b8         mov        qword [rsp+0xa8+var_90], rax
00000000000034bd         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000034c4         mov        qword [rsp+0xa8+var_88], rax
00000000000034c9         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000034d0         mov        qword [rsp+0xa8+var_80], rax
00000000000034d5         mov        qword [rsp+0xa8+var_70], rax
00000000000034da         mov        qword [rsp+0xa8+var_60], rax
00000000000034df         mov        qword [rsp+0xa8+var_50], rax
00000000000034e4         nop        dword [rax]

                     loc_34e8:
00000000000034e8         add        rdx, 0x10                                   ; CODE XREF=usage+645
00000000000034ec         mov        rdi, qword [rdx]
00000000000034ef         test       rdi, rdi
00000000000034f2         je         loc_3507

00000000000034f4         mov        ecx, 0x5
00000000000034f9         mov        rsi, rbx
00000000000034fc         rep  cmpsb byte [rsi], byte [rdi]
00000000000034fe         seta       al
0000000000003501         sbb        al, 0x0
0000000000003503         test       al, al
0000000000003505         jne        loc_34e8

                     loc_3507:
0000000000003507         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+626
000000000000350b         xor        edi, edi
000000000000350d         mov        edx, 0x5
0000000000003512         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003519         test       r12, r12
000000000000351c         je         loc_35e3

0000000000003522         call       j_dcgettext                                 ; dcgettext
0000000000003527         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000352e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6928
0000000000003535         mov        rsi, rax
0000000000003538         mov        edi, 0x1
000000000000353d         xor        eax, eax
000000000000353f         call       j___printf_chk                              ; __printf_chk
0000000000003544         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003546         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000354b         call       j_setlocale                                 ; setlocale
0000000000003550         test       rax, rax
0000000000003553         je         loc_3571

0000000000003555         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6936
000000000000355c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003561         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003564         call       j_strncmp                                   ; strncmp
0000000000003569         test       eax, eax
000000000000356b         jne        loc_3678

                     loc_3571:
0000000000003571         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+723, usage+1053
0000000000003578         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000357a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000357f         call       j_dcgettext                                 ; dcgettext
0000000000003584         lea        rcx, qword [aSFileHasShrunk+29]             ; 0x68ad
000000000000358b         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003592         mov        rsi, rax
0000000000003595         mov        edi, 0x1
000000000000359a         xor        eax, eax
000000000000359c         call       j___printf_chk                              ; __printf_chk
00000000000035a1         cmp        r12, rbx
00000000000035a4         lea        rcx, qword [aMulticallInvoc+10]             ; 0x68ce
00000000000035ab         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7621
00000000000035b2         cmove      rbx, rcx

                     loc_35b6:
00000000000035b6         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1004
00000000000035bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035c4         call       j_dcgettext                                 ; dcgettext
00000000000035c9         mov        rcx, rbx
00000000000035cc         mov        rsi, rax
00000000000035cf         mov        rdx, r12
00000000000035d2         mov        edi, 0x1
00000000000035d7         xor        eax, eax
00000000000035d9         call       j___printf_chk                              ; __printf_chk
00000000000035de         jmp        loc_32d6

                     loc_35e3:
00000000000035e3         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+668
00000000000035e8         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000035ef         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6928
00000000000035f6         mov        rsi, rax
00000000000035f9         mov        edi, 0x1
00000000000035fe         xor        eax, eax
0000000000003600         call       j___printf_chk                              ; __printf_chk
0000000000003605         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003607         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000360c         call       j_setlocale                                 ; setlocale
0000000000003611         test       rax, rax
0000000000003614         je         loc_362e

0000000000003616         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6936
000000000000361d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003622         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003625         call       j_strncmp                                   ; strncmp
000000000000362a         test       eax, eax
000000000000362c         jne        loc_3671

                     loc_362e:
000000000000362e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+916
0000000000003635         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000363a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000363c         lea        r12, qword [aSFileHasShrunk+29]             ; 0x68ad
0000000000003643         lea        rbx, qword [aMulticallInvoc+10]             ; 0x68ce
000000000000364a         call       j_dcgettext                                 ; dcgettext
000000000000364f         lea        rcx, qword [aSFileHasShrunk+29]             ; 0x68ad
0000000000003656         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000365d         mov        rsi, rax
0000000000003660         mov        edi, 0x1
0000000000003665         xor        eax, eax
0000000000003667         call       j___printf_chk                              ; __printf_chk
000000000000366c         jmp        loc_35b6

                     loc_3671:
0000000000003671         lea        r12, qword [aSFileHasShrunk+29]             ; 0x68ad, CODE XREF=usage+940

                     loc_3678:
0000000000003678         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+747
000000000000367f         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000003686         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003688         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000368d         call       j_dcgettext                                 ; dcgettext
0000000000003692         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003695         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003698         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000369d         jmp        loc_3571
00000000000036a2         align      16                                          ; End of unwind block (FDE at 0x7f90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000036b0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x801c), file_name
00000000000036b7         ret
                        ; endp
00000000000036b8         align      64                                          ; End of unwind block (FDE at 0x801c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000036c0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x8030), ignore_EPIPE
00000000000036c7         ret
                        ; endp
00000000000036c8         align      16                                          ; End of unwind block (FDE at 0x8030)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000036d0         push       rbp                                         ; Begin of unwind block (FDE at 0x8044), DATA XREF=main+97
00000000000036d1         push       rbx
00000000000036d2         sub        rsp, 0x8
00000000000036d6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036dd         call       close_stream                                ; close_stream
00000000000036e2         test       eax, eax
00000000000036e4         je         loc_36fc

00000000000036e6         call       j___errno_location                          ; __errno_location
00000000000036eb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000036f2         mov        rbx, rax
00000000000036f5         je         loc_3713

00000000000036f7         cmp        dword [rax], 0x20
00000000000036fa         jne        loc_3713

                     loc_36fc:
00000000000036fc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003703         call       close_stream                                ; close_stream
0000000000003708         test       eax, eax
000000000000370a         jne        loc_3752

000000000000370c         add        rsp, 0x8
0000000000003710         pop        rbx
0000000000003711         pop        rbp
0000000000003712         ret
                        ; endp

                     loc_3713:
0000000000003713         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000371a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000371c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003721         call       j_dcgettext                                 ; dcgettext
0000000000003726         mov        rdi, qword [file_name]                      ; file_name
000000000000372d         mov        rbp, rax
0000000000003730         test       rdi, rdi
0000000000003733         je         loc_375d

0000000000003735         call       quotearg_colon                              ; quotearg_colon
000000000000373a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000373c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003743         mov        rcx, rax
0000000000003746         mov        r8, rbp
0000000000003749         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000374b         xor        eax, eax
000000000000374d         call       j_error                                     ; error

                     loc_3752:
0000000000003752         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003758         call       j__exit                                     ; _exit
                        ; endp

                     loc_375d:
000000000000375d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000375f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x69be
0000000000003766         mov        rcx, rax
0000000000003769         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000376b         xor        eax, eax
000000000000376d         call       j_error                                     ; error
0000000000003772         jmp        loc_3752
0000000000003774         align      128                                         ; End of unwind block (FDE at 0x8044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_read:
0000000000003780         push       r13                                         ; Begin of unwind block (FDE at 0x8074), CODE XREF=main+1644, main+1927, main+3442
0000000000003782         push       r12
0000000000003784         push       rbp
0000000000003785         push       rbx
0000000000003786         sub        rsp, 0x8
000000000000378a         test       rdx, rdx
000000000000378d         je         loc_37f1

000000000000378f         mov        r13d, edi
0000000000003792         mov        rbp, rsi
0000000000003795         mov        rbx, rdx
0000000000003798         xor        r12d, r12d
000000000000379b         jmp        loc_37b0
000000000000379d         align      32

                     loc_37a0:
00000000000037a0         test       rax, rax                                    ; CODE XREF=full_read+66
00000000000037a3         je         loc_37d8

00000000000037a5         add        r12, rax
00000000000037a8         add        rbp, rax
00000000000037ab         sub        rbx, rax
00000000000037ae         je         loc_37c4

                     loc_37b0:
00000000000037b0         mov        rdx, rbx                                    ; CODE XREF=full_read+27
00000000000037b3         mov        rsi, rbp
00000000000037b6         mov        edi, r13d
00000000000037b9         call       safe_read                                   ; safe_read
00000000000037be         cmp        rax, 0xffffffffffffffff
00000000000037c2         jne        loc_37a0

                     loc_37c4:
00000000000037c4         add        rsp, 0x8                                    ; CODE XREF=full_read+46, full_read+116
00000000000037c8         mov        rax, r12
00000000000037cb         pop        rbx
00000000000037cc         pop        rbp
00000000000037cd         pop        r12
00000000000037cf         pop        r13
00000000000037d1         ret
                        ; endp
00000000000037d2         align      8

                     loc_37d8:
00000000000037d8         call       j___errno_location                          ; __errno_location, CODE XREF=full_read+35
00000000000037dd         mov        dword [rax], 0x0
00000000000037e3         add        rsp, 0x8
00000000000037e7         mov        rax, r12
00000000000037ea         pop        rbx
00000000000037eb         pop        rbp
00000000000037ec         pop        r12
00000000000037ee         pop        r13
00000000000037f0         ret
                        ; endp

                     loc_37f1:
00000000000037f1         xor        r12d, r12d                                  ; CODE XREF=full_read+13
00000000000037f4         jmp        loc_37c4
00000000000037f6         align      2048                                        ; End of unwind block (FDE at 0x8074)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     offtostr:
0000000000003800         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x80c4), CODE XREF=elseek+86
0000000000003803         lea        rcx, qword [rsi+0x14]
0000000000003807         mov        byte [rsi+0x14], 0x0
000000000000380b         movabs     r9, 0x6666666666666667
0000000000003815         movabs     rsi, 0xcccccccccccccccd
000000000000381f         mov        r8d, 0x30
0000000000003825         js         loc_3863

0000000000003827         nop        word [rax+rax]

                     loc_3830:
0000000000003830         mov        rax, rdi                                    ; CODE XREF=offtostr+84
0000000000003833         sub        rcx, 0x1
0000000000003837         mul        rsi
000000000000383a         shr        rdx, 0x3
000000000000383e         lea        rax, qword [rdx+rdx*4]
0000000000003842         add        rax, rax
0000000000003845         sub        rdi, rax
0000000000003848         add        edi, 0x30
000000000000384b         test       rdx, rdx
000000000000384e         mov        byte [rcx], dil
0000000000003851         mov        rdi, rdx
0000000000003854         jne        loc_3830

0000000000003856         mov        rax, rcx
0000000000003859         ret
                        ; endp
000000000000385a         align      32

                     loc_3860:
0000000000003860         mov        rcx, rsi                                    ; CODE XREF=offtostr+142

                     loc_3863:
0000000000003863         mov        rax, rdi                                    ; CODE XREF=offtostr+37
0000000000003866         lea        rsi, qword [rcx-1]
000000000000386a         imul       r9
000000000000386d         mov        rax, rdi
0000000000003870         sar        rax, 0x3f
0000000000003874         sar        rdx, 0x2
0000000000003878         sub        rdx, rax
000000000000387b         lea        rax, qword [rdx+rdx*4]
000000000000387f         lea        eax, dword [r8+rax*2]
0000000000003883         sub        eax, edi
0000000000003885         test       rdx, rdx
0000000000003888         mov        rdi, rdx
000000000000388b         mov        byte [rcx-1], al
000000000000388e         jne        loc_3860

0000000000003890         sub        rcx, 0x2
0000000000003894         mov        byte [rsi-1], 0x2d
0000000000003898         mov        rax, rcx
000000000000389b         ret
                        ; endp
000000000000389c         align      32                                          ; End of unwind block (FDE at 0x80c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
00000000000038a0         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0x80dc), CODE XREF=main+4177
00000000000038a4         mov        byte [rsi+0x14], 0x0
00000000000038a8         movabs     rsi, 0xcccccccccccccccd
00000000000038b2         nop        word [rax+rax]

                     loc_38b8:
00000000000038b8         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
00000000000038bb         sub        rcx, 0x1
00000000000038bf         mul        rsi
00000000000038c2         shr        rdx, 0x3
00000000000038c6         lea        rax, qword [rdx+rdx*4]
00000000000038ca         add        rax, rax
00000000000038cd         sub        rdi, rax
00000000000038d0         add        edi, 0x30
00000000000038d3         test       rdx, rdx
00000000000038d6         mov        byte [rcx], dil
00000000000038d9         mov        rdi, rdx
00000000000038dc         jne        loc_38b8

00000000000038de         mov        rax, rcx
00000000000038e1         ret
                        ; endp
00000000000038e2         align      16                                          ; End of unwind block (FDE at 0x80dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
00000000000038f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x80f4), CODE XREF=main+44
00000000000038f3         push       rbx
00000000000038f4         je         loc_396d

00000000000038f6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000038fb         mov        rbx, rdi
00000000000038fe         call       j_strrchr                                   ; strrchr
0000000000003903         test       rax, rax
0000000000003906         je         loc_395d

0000000000003908         lea        r8, qword [rax+1]
000000000000390c         mov        rdx, r8
000000000000390f         sub        rdx, rbx
0000000000003912         cmp        rdx, 0x6
0000000000003916         jle        loc_395d

0000000000003918         lea        rsi, qword [rax-6]
000000000000391c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003923         mov        ecx, 0x7
0000000000003928         rep  cmpsb byte [rsi], byte [rdi]
000000000000392a         seta       dl
000000000000392d         sbb        dl, 0x0
0000000000003930         test       dl, dl
0000000000003932         jne        loc_395d

0000000000003934         lea        rdi, qword [aLibs+8]                        ; 0x70e8
000000000000393b         mov        ecx, 0x3
0000000000003940         mov        rsi, r8
0000000000003943         mov        rbx, r8
0000000000003946         rep  cmpsb byte [rsi], byte [rdi]
0000000000003948         seta       dl
000000000000394b         sbb        dl, 0x0
000000000000394e         test       dl, dl
0000000000003950         jne        loc_395d

0000000000003952         lea        rbx, qword [rax+4]
0000000000003956         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_395d:
000000000000395d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003964         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000396b         pop        rbx
000000000000396c         ret
                        ; endp

                     loc_396d:
000000000000396d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000003974         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000397b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000003980         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000003985         call       j_fwrite                                    ; fwrite
000000000000398a         call       j_abort                                     ; abort
                        ; endp
000000000000398f         align      16                                          ; End of unwind block (FDE at 0x80f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000003990         push       rbp                                         ; Begin of unwind block (FDE at 0x8114), CODE XREF=sub_41c0+2597, sub_41c0+2619
0000000000003991         push       rbx
0000000000003992         mov        rbp, rdi
0000000000003995         mov        ebx, esi
0000000000003997         sub        rsp, 0x8
000000000000399b         call       locale_charset                              ; locale_charset
00000000000039a0         movzx      edx, byte [rax]
00000000000039a3         and        edx, 0xffffffdf
00000000000039a6         cmp        dl, 0x55
00000000000039a9         je         loc_3a20

00000000000039ab         cmp        dl, 0x47
00000000000039ae         je         loc_39d0

                     loc_39b0:
00000000000039b0         lea        rax, qword [aLibs+27]                       ; 0x70fb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000039b7         lea        rdx, qword [aLibs+29]                       ; 0x70fd
00000000000039be         cmp        ebx, 0x9
00000000000039c1         cmovne     rax, rdx
00000000000039c5         add        rsp, 0x8
00000000000039c9         pop        rbx
00000000000039ca         pop        rbp
00000000000039cb         ret
                        ; endp
00000000000039cc         align      16

                     loc_39d0:
00000000000039d0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000039d4         and        edx, 0xffffffdf
00000000000039d7         cmp        dl, 0x42
00000000000039da         jne        loc_39b0

00000000000039dc         cmp        byte [rax+2], 0x31
00000000000039e0         jne        loc_39b0

00000000000039e2         cmp        byte [rax+3], 0x38
00000000000039e6         jne        loc_39b0

00000000000039e8         cmp        byte [rax+4], 0x30
00000000000039ec         jne        loc_39b0

00000000000039ee         cmp        byte [rax+5], 0x33
00000000000039f2         jne        loc_39b0

00000000000039f4         cmp        byte [rax+6], 0x30
00000000000039f8         jne        loc_39b0

00000000000039fa         cmp        byte [rax+7], 0x0
00000000000039fe         jne        loc_39b0

0000000000003a00         cmp        byte [rbp], 0x60
0000000000003a04         lea        rax, qword [aLibs+20]                       ; 0x70f4
0000000000003a0b         lea        rdx, qword [aLibs+24]                       ; 0x70f8
0000000000003a12         cmovne     rax, rdx
0000000000003a16         add        rsp, 0x8
0000000000003a1a         pop        rbx
0000000000003a1b         pop        rbp
0000000000003a1c         ret
                        ; endp
0000000000003a1d         align      32

                     loc_3a20:
0000000000003a20         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003a24         and        edx, 0xffffffdf
0000000000003a27         cmp        dl, 0x54
0000000000003a2a         jne        loc_39b0

0000000000003a2c         movzx      edx, byte [rax+2]
0000000000003a30         and        edx, 0xffffffdf
0000000000003a33         cmp        dl, 0x46
0000000000003a36         jne        loc_39b0

0000000000003a3c         cmp        byte [rax+3], 0x2d
0000000000003a40         jne        loc_39b0

0000000000003a46         cmp        byte [rax+4], 0x38
0000000000003a4a         jne        loc_39b0

0000000000003a50         cmp        byte [rax+5], 0x0
0000000000003a54         jne        loc_39b0

0000000000003a5a         cmp        byte [rbp], 0x60
0000000000003a5e         lea        rax, qword [aLibs+12]                       ; 0x70ec
0000000000003a65         lea        rdx, qword [aLibs+16]                       ; 0x70f0
0000000000003a6c         cmovne     rax, rdx
0000000000003a70         add        rsp, 0x8
0000000000003a74         pop        rbx
0000000000003a75         pop        rbp
0000000000003a76         ret
                        ; endp
0000000000003a77         align      128                                         ; End of unwind block (FDE at 0x8114)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003a80         push       r15                                         ; Begin of unwind block (FDE at 0x8158), CODE XREF=sub_41c0+1165, sub_41c0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003a82         push       r14
0000000000003a84         mov        r15d, r8d
0000000000003a87         push       r13
0000000000003a89         push       r12
0000000000003a8b         mov        r14, rdi
0000000000003a8e         push       rbp
0000000000003a8f         push       rbx
0000000000003a90         mov        ebx, r9d
0000000000003a93         mov        r13, rsi
0000000000003a96         mov        rbp, rcx
0000000000003a99         and        ebx, 0x2
0000000000003a9c         sub        rsp, 0xb8
0000000000003aa3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000003aab         mov        qword [rsp+0xe8+var_D8], rdx
0000000000003ab0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000003ab5         mov        dword [rsp+0xe8+var_70], r9d
0000000000003aba         mov        qword [rsp+0xe8+var_C8], rax
0000000000003abf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000003ac7         mov        qword [rsp+0xe8+var_80], rax
0000000000003acc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003ad4         mov        qword [rsp+0xe8+var_88], rax
0000000000003ad9         mov        rax, qword [fs:0x28]
0000000000003ae2         mov        qword [rsp+0xe8+var_40], rax
0000000000003aea         xor        eax, eax
0000000000003aec         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003af1         cmp        r15d, 0xa
0000000000003af5         mov        qword [rsp+0xe8+var_90], rax
0000000000003afa         ja         loc_4caf

0000000000003b00         lea        rcx, qword [switch_table_7160]              ; switch_table_7160
0000000000003b07         mov        edx, r15d
0000000000003b0a         movsxd     rax, dword [rcx+rdx*4]
0000000000003b0e         add        rax, rcx
0000000000003b11         jmp        rax                                         ; switch statement using table at 0x7160, with 11 cases, 0x3b13,0x46e4,0x4740,0x4795,0x47da,0x4814,0x48ba,0x48f4,0x4ae8

                     loc_3b13:
0000000000003b13         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_41c0+1318
0000000000003b18         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b1d         xor        r12d, r12d
0000000000003b20         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b29         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b2e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3b33:
0000000000003b33         lea        rax, qword [aLibs+29]                       ; 0x70fd, CODE XREF=sub_41c0+1876
0000000000003b3a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b43         xor        r15d, r15d
0000000000003b46         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b4e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3b53:
0000000000003b53         xor        r11d, r11d                                  ; CODE XREF=sub_41c0+180, sub_41c0+1400, sub_41c0+1488, sub_41c0+1557, sub_41c0+1615, sub_41c0+1781, sub_41c0+1839, sub_41c0+2408, sub_41c0+2485
0000000000003b56         mov        rax, rbp
0000000000003b59         mov        r8d, r12d
0000000000003b5c         mov        rbp, r11
0000000000003b5f         mov        r11, rax
0000000000003b62         nop        word [rax+rax]

                     loc_3b68:
0000000000003b68         cmp        r11, rbp                                    ; CODE XREF=sub_3c70+194
0000000000003b6b         setne      r12b
0000000000003b6f         cmp        r11, 0xffffffffffffffff
0000000000003b73         jne        loc_3b82

0000000000003b75         mov        rax, qword [rsp+0xe8+var_D8]
0000000000003b7a         cmp        byte [rax+rbp], 0x0
0000000000003b7e         setne      r12b

                     loc_3b82:
0000000000003b82         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003b85         je         loc_41e0

0000000000003b8b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003b90         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003b95         lea        r9, qword [rdi+rbp]
0000000000003b99         setne      al
0000000000003b9c         and        al, byte [rsp+0xe8+var_DB]
0000000000003ba0         mov        r10d, eax
0000000000003ba3         je         loc_3c50

0000000000003ba9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000003bae         test       rax, rax
0000000000003bb1         je         loc_3fe0

0000000000003bb7         cmp        r11, 0xffffffffffffffff
0000000000003bbb         lea        rbx, qword [rbp+rax]
0000000000003bc0         jne        loc_3bf0

0000000000003bc2         cmp        rax, 0x1
0000000000003bc6         jbe        loc_3bf0

0000000000003bc8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003bcd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003bd2         mov        qword [rsp+0xe8+var_C0], r9
0000000000003bd7         call       j_strlen                                    ; strlen
0000000000003bdc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003be2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003be8         mov        r11, rax
0000000000003beb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3bf0:
0000000000003bf0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003bf3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003bf8         ja         loc_41b0

0000000000003bfe         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003c03         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003c08         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003c0b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003c10         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003c15         mov        qword [rsp+0xe8+var_B8], r9
0000000000003c1a         call       j_memcmp                                    ; memcmp
0000000000003c1f         test       eax, eax
0000000000003c21         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003c26         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003c2c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003c31         jne        loc_41b0

0000000000003c37         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003c3c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003c42         jne        loc_4bc5

0000000000003c48         nop        dword [rax+rax]

                     loc_3c50:
0000000000003c50         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_41a0+19
0000000000003c54         cmp        bl, 0x7e
0000000000003c57         ja         loc_3f78

0000000000003c5d         lea        rcx, qword [switch_table_7160+44]           ; 0x718c
0000000000003c64         movzx      edx, bl
0000000000003c67         movsxd     rax, dword [rcx+rdx*4]
0000000000003c6b         add        rax, rcx
0000000000003c6e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3c70:
0000000000003c70         xor        r10d, r10d
0000000000003c73         cmp        r11, 0x1
0000000000003c77         setne      al
0000000000003c7a         cmp        r11, 0xffffffffffffffff
0000000000003c7e         jne        loc_3c8c

0000000000003c80         mov        rax, qword [rsp+arg_8]
0000000000003c85         cmp        byte [rax+1], 0x0
0000000000003c89         setne      al

                     loc_3c8c:
0000000000003c8c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3c70+14
0000000000003c91         sete       dl
0000000000003c94         test       al, al
0000000000003c96         je         loc_3ee8

                     loc_3c9c:
0000000000003c9c         xor        r12d, r12d                                  ; CODE XREF=sub_3ee0+11
0000000000003c9f         xor        eax, eax
0000000000003ca1         nop        dword [rax]
                        ; endp

                     loc_3ca8:
0000000000003ca8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3e90+50, sub_3f60+119
0000000000003cad         jne        loc_3dc2

0000000000003cb3         test       dl, dl
0000000000003cb5         jne        loc_3dc2

                     loc_3cbb:
0000000000003cbb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3d70+87
0000000000003cc0         test       rsi, rsi
0000000000003cc3         je         loc_3cd9

0000000000003cc5         mov        edx, ebx
0000000000003cc7         shr        dl, 0x5
0000000000003cca         movzx      edx, dl
0000000000003ccd         mov        edx, dword [rsi+rdx*4]
0000000000003cd0         bt         edx, ebx
0000000000003cd3         jb         loc_3e23

                     loc_3cd9:
0000000000003cd9         test       r10b, r10b                                  ; CODE XREF=sub_3c70+83, sub_3d70+93
0000000000003cdc         jne        loc_3e23

0000000000003ce2         xor        eax, 0x1
0000000000003ce5         add        rbp, 0x1
0000000000003ce9         and        eax, r8d

                     loc_3cec:
0000000000003cec         test       al, al                                      ; CODE XREF=sub_41c0+936
0000000000003cee         je         loc_3d10

0000000000003cf0         cmp        r13, r15
0000000000003cf3         jbe        loc_3cfa

0000000000003cf5         mov        byte [r14+r15], 0x27

                     loc_3cfa:
0000000000003cfa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3c70+131
0000000000003cfe         cmp        r13, rax
0000000000003d01         jbe        loc_3d09

0000000000003d03         mov        byte [r14+r15+1], 0x27

                     loc_3d09:
0000000000003d09         add        r15, 0x2                                    ; CODE XREF=sub_3c70+145
0000000000003d0d         xor        r8d, r8d

                     loc_3d10:
0000000000003d10         cmp        r15, r13                                    ; CODE XREF=sub_3c70+126, sub_3d70+275, sub_41c0+869
0000000000003d13         jae        loc_3d19

0000000000003d15         mov        byte [r14+r15], bl

                     loc_3d19:
0000000000003d19         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3c70+163
0000000000003d1e         add        r15, 0x1
0000000000003d22         mov        eax, 0x0
0000000000003d27         test       r12b, r12b
0000000000003d2a         cmove      edi, eax
0000000000003d2d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003d32         jmp        loc_3b68
0000000000003d37         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3d40:
0000000000003d40         xor        r10d, r10d
0000000000003d43         mov        eax, dword [rsp+arg_0]
0000000000003d47         cmp        eax, 0x2
0000000000003d4a         je         loc_4308

0000000000003d50         cmp        eax, 0x5
0000000000003d53         je         loc_42c8

0000000000003d59         cmp        eax, 0x2
0000000000003d5c         mov        ebx, 0x3f
0000000000003d61         sete       dl
0000000000003d64         xor        r12d, r12d
0000000000003d67         xor        eax, eax
0000000000003d69         jmp        sub_3c70+56
                        ; endp
0000000000003d6e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3d70:
0000000000003d70         xor        r10d, r10d
0000000000003d73         cmp        dword [rsp+arg_0], 0x2
0000000000003d78         je         loc_4280

0000000000003d7e         mov        byte [rsp+arg_74], r12b
0000000000003d83         xor        edx, edx
0000000000003d85         xor        eax, eax
0000000000003d87         mov        ebx, 0x27
0000000000003d8c         jmp        sub_3c70+56
                        ; endp
0000000000003d91         nop        dword [rax]
0000000000003d98         mov        edx, 0x9
0000000000003d9d         mov        ebx, 0x74

                     loc_3da2:
0000000000003da2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3f30+10, sub_4020+37, sub_4160+53
0000000000003da7         sete       al
0000000000003daa         and        al, byte [rsp+arg_7]
0000000000003dae         jne        sub_3ee0+30

0000000000003db4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3d70+114
0000000000003db9         jne        loc_3e20

                     loc_3dbb:
0000000000003dbb         mov        ebx, edx                                    ; CODE XREF=sub_3e90+18
0000000000003dbd         xor        r12d, r12d
0000000000003dc0         xor        eax, eax
                        ; endp

                     loc_3dc2:
0000000000003dc2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3c70+61, sub_3c70+69
0000000000003dc7         jne        loc_3cbb

0000000000003dcd         jmp        loc_3cd9
0000000000003dd2         nop        word [rax+rax]
0000000000003dd8         mov        edx, 0x8
0000000000003ddd         mov        ebx, 0x62
0000000000003de2         jmp        sub_3d70+68
0000000000003de4         nop        dword [rax]
0000000000003de8         cmp        dword [rsp+8], 0x2
0000000000003ded         je         sub_41c0                                    ; sub_41c0
0000000000003df3         cmp        byte [rsp+0xd], 0x0
0000000000003df8         je         sub_4000+16

                     loc_3dfe:
0000000000003dfe         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4000+8
0000000000003e03         je         loc_4010

0000000000003e09         cmp        qword [rsp+arg_10], 0x0
0000000000003e0f         jne        loc_41cb

0000000000003e15         mov        ebx, 0x5c
0000000000003e1a         nop        word [rax+rax]
                        ; endp

                     loc_3e20:
0000000000003e20         xor        r12d, r12d                                  ; CODE XREF=sub_3d70+73, sub_4160+29
                        ; endp

                     loc_3e23:
0000000000003e23         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3c70+99, sub_3c70+108
0000000000003e28         sete       dl
0000000000003e2b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003e30         mov        eax, edx
0000000000003e32         jne        loc_4688

0000000000003e38         mov        eax, r8d
0000000000003e3b         xor        eax, 0x1
0000000000003e3e         and        al, dl
0000000000003e40         je         loc_3e71

0000000000003e42         cmp        r13, r15
0000000000003e45         jbe        loc_3e4c

0000000000003e47         mov        byte [r14+r15], 0x27

                     loc_3e4c:
0000000000003e4c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3d70+213
0000000000003e50         cmp        r13, rdx
0000000000003e53         jbe        loc_3e5b

0000000000003e55         mov        byte [r14+r15+1], 0x24

                     loc_3e5b:
0000000000003e5b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3d70+227
0000000000003e5f         cmp        r13, rdx
0000000000003e62         jbe        loc_3e6a

0000000000003e64         mov        byte [r14+r15+2], 0x27

                     loc_3e6a:
0000000000003e6a         add        r15, 0x3                                    ; CODE XREF=sub_3d70+242
0000000000003e6e         mov        r8d, eax

                     loc_3e71:
0000000000003e71         cmp        r13, r15                                    ; CODE XREF=sub_3d70+208
0000000000003e74         jbe        loc_3e7b

0000000000003e76         mov        byte [r14+r15], 0x5c

                     loc_3e7b:
0000000000003e7b         add        r15, 0x1                                    ; CODE XREF=sub_3d70+260
0000000000003e7f         add        rbp, 0x1
0000000000003e83         jmp        loc_3d10
0000000000003e88         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3e90:
0000000000003e90         cmp        byte [rsp+arg_5], 0x0
0000000000003e95         jne        loc_4063

0000000000003e9b         xor        edx, edx
0000000000003e9d         test       byte [rsp+arg_70], 0x1
0000000000003ea2         je         loc_3dbb

0000000000003ea8         add        rbp, 0x1
0000000000003eac         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003eb1         nop        dword [rax]
0000000000003eb8         cmp        dword [rsp+8], 0x2
0000000000003ebd         sete       dl
0000000000003ec0         xor        eax, eax
0000000000003ec2         jmp        sub_3c70+56
0000000000003ec7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3ed0:
0000000000003ed0         mov        edx, 0x7
0000000000003ed5         mov        ebx, 0x61
0000000000003eda         jmp        sub_3d70+68
                        ; endp
0000000000003edf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3ee0:
0000000000003ee0         cmp        dword [rsp+8], 0x2
0000000000003ee5         sete       dl
                        ; endp

                     loc_3ee8:
0000000000003ee8         test       rbp, rbp                                    ; CODE XREF=sub_3c70+38, sub_4100+35
0000000000003eeb         jne        loc_3c9c

0000000000003ef1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4130+43
0000000000003ef6         and        al, dl
0000000000003ef8         je         sub_3c70+56

0000000000003efe         mov        rbp, r11
0000000000003f01         mov        dword [rsp+arg_0], 0x2
0000000000003f09         jmp        sub_41c0+1097
                        ; endp
0000000000003f0e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f10:
0000000000003f10         cmp        dword [rsp+arg_0], 0x2
0000000000003f15         sete       dl
0000000000003f18         xor        r12d, r12d
0000000000003f1b         jmp        sub_3ee0+17
                        ; endp
0000000000003f1d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f20:
0000000000003f20         cmp        dword [rsp+arg_0], 0x2
0000000000003f25         mov        ebx, 0x20
0000000000003f2a         sete       dl
0000000000003f2d         jmp        sub_3ee0+17
                        ; endp
0000000000003f2f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3f30:
0000000000003f30         mov        edx, 0xd
0000000000003f35         mov        ebx, 0x72
0000000000003f3a         jmp        loc_3da2
0000000000003f3f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f40:
0000000000003f40         mov        edx, 0xc
0000000000003f45         mov        ebx, 0x66
0000000000003f4a         jmp        sub_3d70+68
                        ; endp
0000000000003f4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f50:
0000000000003f50         mov        edx, 0xb
0000000000003f55         mov        ebx, 0x76
0000000000003f5a         jmp        sub_3d70+68
                        ; endp
0000000000003f5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f60:
0000000000003f60         mov        edx, 0xa
0000000000003f65         mov        ebx, 0x6e
0000000000003f6a         jmp        sub_3d70+50
                        ; endp
0000000000003f6f         align      16

                     loc_3f70:
0000000000003f70         xor        r10d, r10d                                  ; CODE XREF=sub_3f60+135
0000000000003f73         nop        dword [rax+rax]

                     loc_3f78:
0000000000003f78         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003f7e         jne        loc_4328

0000000000003f84         mov        qword [rsp+0xe8+var_B0], r11
0000000000003f89         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003f8e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003f93         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003f98         mov        rcx, qword [rax]
0000000000003f9b         movzx      edx, bl
0000000000003f9e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003fa4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003faa         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003faf         mov        edi, 0x1
0000000000003fb4         movzx      eax, word [rcx+rdx*2]
0000000000003fb8         and        ax, sub_4000
0000000000003fbc         setne      r12b
0000000000003fc0         sete       al
0000000000003fc3         and        al, byte [rsp+0xe8+var_DB]

                     loc_3fc7:
0000000000003fc7         test       al, al                                      ; CODE XREF=sub_41c0+2221
0000000000003fc9         jne        loc_4961

0000000000003fcf         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003fd4         sete       dl
0000000000003fd7         jmp        loc_3ca8
0000000000003fdc         align      32

                     loc_3fe0:
0000000000003fe0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003fe4         cmp        bl, 0x7e
0000000000003fe7         ja         loc_3f70

0000000000003fe9         lea        rcx, qword [switch_table_7160+552]          ; 0x7388
0000000000003ff0         movzx      edx, bl
0000000000003ff3         movsxd     rax, dword [rcx+rdx*4]
0000000000003ff7         add        rax, rcx
0000000000003ffa         jmp        rax
                        ; endp
0000000000003ffc         align      16384


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4000:
0000000000004000         xor        r10d, r10d                                  ; DATA XREF=sub_3f60+88
0000000000004003         cmp        byte [rsp+arg_5], 0x0
0000000000004008         jne        loc_3dfe

000000000000400e         nop

                     loc_4010:
0000000000004010         mov        edx, 0x5c                                   ; CODE XREF=sub_3d70+136, sub_3d70+147
0000000000004015         mov        ebx, 0x5c
000000000000401a         jmp        sub_3d70+68
                        ; endp
000000000000401f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4020:
0000000000004020         mov        edx, 0xc
0000000000004025         xor        r10d, r10d
0000000000004028         mov        ebx, 0x66
000000000000402d         jmp        sub_3d70+68
                        ; endp
0000000000004032         nop        word [rax+rax]
0000000000004038         mov        edx, 0xa
000000000000403d         xor        r10d, r10d
0000000000004040         mov        ebx, 0x6e
0000000000004045         jmp        sub_3d70+50
000000000000404a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4050:
0000000000004050         mov        ebx, 0x61
0000000000004055         jmp        sub_3d70+176
                        ; endp
000000000000405a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4060:
0000000000004060         xor        r10d, r10d
                        ; endp

                     loc_4063:
0000000000004063         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3e90+5
0000000000004068         sete       dl
000000000000406b         cmp        byte [rsp+arg_7], 0x0
0000000000004070         jne        loc_4c0a

0000000000004076         mov        eax, r8d
0000000000004079         mov        rcx, r15
000000000000407c         xor        eax, 0x1
000000000000407f         and        al, dl
0000000000004081         je         loc_40b0

0000000000004083         cmp        r13, r15
0000000000004086         jbe        loc_408d

0000000000004088         mov        byte [r14+r15], 0x27

                     loc_408d:
000000000000408d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_4060+38
0000000000004091         cmp        r13, rcx
0000000000004094         jbe        loc_409c

0000000000004096         mov        byte [r14+r15+1], 0x24

                     loc_409c:
000000000000409c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_4060+52
00000000000040a0         cmp        r13, rcx
00000000000040a3         ja         loc_46d9

                     loc_40a9:
00000000000040a9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_41c0+1311
00000000000040ad         mov        r8d, eax

                     loc_40b0:
00000000000040b0         cmp        r13, rcx                                    ; CODE XREF=sub_4060+33
00000000000040b3         jbe        loc_40ba

00000000000040b5         mov        byte [r14+rcx], 0x5c

                     loc_40ba:
00000000000040ba         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4060+83
00000000000040bf         lea        r15, qword [rcx+1]
00000000000040c3         je         loc_46c9

00000000000040c9         lea        rax, qword [rbp+1]
00000000000040cd         cmp        rax, r11
00000000000040d0         jae        loc_40eb

00000000000040d2         mov        rax, qword [rsp+arg_8]
00000000000040d7         movzx      eax, byte [rax+rbp+1]
00000000000040dc         mov        byte [rsp+arg_20], al
00000000000040e0         sub        eax, 0x30
00000000000040e3         cmp        al, 0x9
00000000000040e5         jbe        loc_4919

                     loc_40eb:
00000000000040eb         mov        eax, r12d                                   ; CODE XREF=sub_4060+112
00000000000040ee         mov        ebx, 0x30
00000000000040f3         xor        r12d, r12d
00000000000040f6         jmp        sub_3c70+56
                        ; endp
00000000000040fb         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4100:
0000000000004100         cmp        dword [rsp+arg_0], 0x2
0000000000004105         mov        r12d, r10d
0000000000004108         sete       dl
000000000000410b         xor        r10d, r10d
000000000000410e         xor        eax, eax
0000000000004110         jmp        sub_3c70+56
                        ; endp
0000000000004115         nop        dword [rax]
0000000000004118         cmp        dword [rsp+8], 0x2
000000000000411d         sete       dl
0000000000004120         xor        r10d, r10d
0000000000004123         jmp        sub_3ee0+8
0000000000004128         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4130:
0000000000004130         cmp        dword [rsp+8], 0x2
0000000000004135         sete       dl
0000000000004138         xor        r10d, r10d
000000000000413b         xor        r12d, r12d
000000000000413e         jmp        sub_3ee0+17
                        ; endp
0000000000004143         nop        dword [rax+rax]
0000000000004148         cmp        dword [rsp+8], 0x2
000000000000414d         mov        r12d, r10d
0000000000004150         mov        ebx, 0x20
0000000000004155         sete       dl
0000000000004158         xor        r10d, r10d
000000000000415b         jmp        sub_3ee0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4160:
0000000000004160         mov        edx, 0xd
0000000000004165         xor        r10d, r10d
0000000000004168         mov        ebx, 0x72
000000000000416d         jmp        sub_3d70+50
                        ; endp
0000000000004172         nop        word [rax+rax]
0000000000004178         mov        ebx, 0x76
000000000000417d         jmp        sub_3d70+176
0000000000004182         nop        word [rax+rax]
0000000000004188         mov        edx, 0x9
000000000000418d         xor        r10d, r10d
0000000000004190         mov        ebx, 0x74
0000000000004195         jmp        sub_3d70+50
000000000000419a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41a0:
00000000000041a0         mov        ebx, 0x62
00000000000041a5         jmp        sub_3d70+176
                        ; endp
00000000000041aa         nop        word [rax+rax]

                     loc_41b0:
00000000000041b0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000041b3         jmp        loc_3c50
00000000000041b8         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_41c0:
00000000000041c0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3d70+125
00000000000041c5         jne        sub_41c0+2416
                        ; endp

                     loc_41cb:
00000000000041cb         add        rbp, 0x1                                    ; CODE XREF=sub_3d70+159
00000000000041cf         mov        eax, r8d
00000000000041d2         xor        r12d, r12d
00000000000041d5         mov        ebx, 0x5c
00000000000041da         jmp        sub_3c70+124
                        ; endp
00000000000041df         align      32

                     loc_41e0:
00000000000041e0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000041e5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000041ea         mov        r12d, r8d
00000000000041ed         mov        rbp, r11
00000000000041f0         sete       dl
00000000000041f3         mov        eax, ebx
00000000000041f5         test       r15, r15
00000000000041f8         sete       cl
00000000000041fb         and        eax, edx
00000000000041fd         and        al, cl
00000000000041ff         jne        loc_4c66

0000000000004205         mov        eax, ebx
0000000000004207         xor        eax, 0x1
000000000000420a         and        dl, al
000000000000420c         je         loc_4b7c

0000000000004212         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004217         je         loc_4b7a

000000000000421d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004222         jne        loc_4c1d

0000000000004228         test       r13, r13
000000000000422b         sete       al
000000000000422e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004234         setne      dl
0000000000004237         and        al, dl
0000000000004239         je         loc_4c5c

000000000000423f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4244:
0000000000004244         lea        rbx, qword [aLibs+29]                       ; 0x70fd, CODE XREF=sub_41c0+2781
000000000000424b         mov        byte [r14], 0x27
000000000000424f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004257         mov        r15d, 0x1
000000000000425d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004266         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000426b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004270         mov        byte [rsp+0xe8+var_6C], al
0000000000004274         jmp        loc_3b53
0000000000004279         align      128

                     loc_4280:
0000000000004280         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3d70+8
0000000000004285         jne        sub_41c0+2416

000000000000428b         test       r13, r13
000000000000428e         je         loc_4690

0000000000004294         xor        edx, edx
0000000000004296         cmp        qword [rsp+arg_48], 0x0
000000000000429c         jne        loc_4690

                     loc_42a2:
00000000000042a2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_41c0+1284, sub_41c0+2794
00000000000042a7         add        r15, 0x3
00000000000042ab         xor        eax, eax
00000000000042ad         mov        byte [rsp+arg_74], r12b
00000000000042b2         xor        r8d, r8d
00000000000042b5         mov        r13, rdx
00000000000042b8         mov        ebx, 0x27
00000000000042bd         jmp        sub_3c70+105
                        ; endp
00000000000042c2         align      8

                     loc_42c8:
00000000000042c8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3d40+19
00000000000042cd         je         loc_42f0

00000000000042cf         lea        rcx, qword [rbp+2]
00000000000042d3         cmp        rcx, r11
00000000000042d6         jae        loc_42f0

00000000000042d8         mov        rax, qword [rsp+arg_8]
00000000000042dd         cmp        byte [rax+rbp+1], 0x3f
00000000000042e2         je         loc_4a72

00000000000042e8         nop        dword [rax+rax]

                     loc_42f0:
00000000000042f0         xor        edx, edx                                    ; CODE XREF=sub_41c0+269, sub_41c0+278, sub_41c0+2233, sub_41c0+2253
00000000000042f2         xor        r12d, r12d
00000000000042f5         xor        eax, eax
00000000000042f7         mov        ebx, 0x3f
00000000000042fc         jmp        sub_3c70+56
                        ; endp
0000000000004301         align      8

                     loc_4308:
0000000000004308         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3d40+10
000000000000430d         jne        loc_4b30

0000000000004313         xor        r12d, r12d
0000000000004316         xor        eax, eax
0000000000004318         mov        ebx, 0x3f
000000000000431d         jmp        sub_3c70+105
                        ; endp
0000000000004322         align      8

                     loc_4328:
0000000000004328         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3f60+30
0000000000004330         cmp        r11, 0xffffffffffffffff
0000000000004334         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004340         mov        qword [rsp+0xe8+var_C0], rax
0000000000004345         jne        loc_4374

0000000000004347         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000434c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004351         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004356         mov        qword [rsp+0xe8+var_B8], r9
000000000000435b         call       j_strlen                                    ; strlen
0000000000004360         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004366         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000436c         mov        r11, rax
000000000000436f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4374:
0000000000004374         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_41c0+389
000000000000437c         xor        ecx, ecx
000000000000437e         mov        byte [rsp+0xe8+var_6A], bl
0000000000004382         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004387         mov        rbx, rcx
000000000000438a         mov        qword [rsp+0xe8+var_60], r9
0000000000004392         mov        qword [rsp+0xe8+var_B0], rax
0000000000004397         mov        byte [rsp+0xe8+var_69], r10b
000000000000439c         mov        qword [rsp+0xe8+var_68], r15
00000000000043a4         mov        qword [rsp+0xe8+var_A8], r14
00000000000043a9         mov        qword [rsp+0xe8+var_78], r13
00000000000043ae         mov        qword [rsp+0xe8+var_B8], r11

                     loc_43b3:
00000000000043b3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_41c0+623
00000000000043b8         lea        r14, qword [rbp+rbx]
00000000000043bd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000043c2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000043c7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000043cc         lea        r13, qword [rax+r14]
00000000000043d0         sub        rdx, r14
00000000000043d3         mov        rsi, r13
00000000000043d6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000043db         test       rax, rax
00000000000043de         mov        r15, rax
00000000000043e1         je         loc_4431

00000000000043e3         cmp        rax, 0xffffffffffffffff
00000000000043e7         je         loc_4a05

00000000000043ed         cmp        rax, 0xfffffffffffffffe
00000000000043f1         je         loc_4991

00000000000043f7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000043fc         sete       al
00000000000043ff         and        al, byte [rsp+0xe8+var_D9]
0000000000004403         jne        loc_45a0

                     loc_4409:
0000000000004409         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_41c0+996, sub_41c0+1031
0000000000004410         call       j_iswprint                                  ; iswprint
0000000000004415         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000441a         test       eax, eax
000000000000441c         mov        eax, 0x0
0000000000004421         cmove      r12d, eax
0000000000004425         add        rbx, r15
0000000000004428         call       j_mbsinit                                   ; mbsinit
000000000000442d         test       eax, eax
000000000000442f         je         loc_43b3

                     loc_4431:
0000000000004431         mov        edx, r12d                                   ; CODE XREF=sub_41c0+545
0000000000004434         mov        rdi, rbx
0000000000004437         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000443d         xor        edx, 0x1
0000000000004440         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004445         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000444b         and        dl, byte [rsp+0xe8+var_DB]
000000000000444f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004457         mov        r14, qword [rsp+0xe8+var_A8]
000000000000445c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004461         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4466:
0000000000004466         cmp        rdi, 0x1                                    ; CODE XREF=sub_41c0+2112, sub_41c0+2168
000000000000446a         jbe        loc_4a6b

                     loc_4470:
0000000000004470         mov        rcx, rdi                                    ; CODE XREF=sub_41c0+1961
0000000000004473         xor        esi, esi
0000000000004475         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000447b         add        rcx, rbp
000000000000447e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004483         jmp        loc_453e
0000000000004488         align      16

                     loc_4490:
0000000000004490         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_41c0+896
0000000000004495         sete       al
0000000000004498         test       r9b, r9b
000000000000449b         jne        loc_4950

00000000000044a1         mov        esi, r8d
00000000000044a4         xor        esi, 0x1
00000000000044a7         and        al, sil
00000000000044aa         je         loc_44db

00000000000044ac         cmp        r13, r15
00000000000044af         jbe        loc_44b6

00000000000044b1         mov        byte [r14+r15], 0x27

                     loc_44b6:
00000000000044b6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_41c0+751
00000000000044ba         cmp        r13, rsi
00000000000044bd         jbe        loc_44c5

00000000000044bf         mov        byte [r14+r15+1], 0x24

                     loc_44c5:
00000000000044c5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_41c0+765
00000000000044c9         cmp        r13, rsi
00000000000044cc         jbe        loc_44d4

00000000000044ce         mov        byte [r14+r15+2], 0x27

                     loc_44d4:
00000000000044d4         add        r15, 0x3                                    ; CODE XREF=sub_41c0+780
00000000000044d8         mov        r8d, eax

                     loc_44db:
00000000000044db         cmp        r13, r15                                    ; CODE XREF=sub_41c0+746
00000000000044de         jbe        loc_44e5

00000000000044e0         mov        byte [r14+r15], 0x5c

                     loc_44e5:
00000000000044e5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_41c0+798
00000000000044e9         cmp        r13, rax
00000000000044ec         jbe        loc_44fb

00000000000044ee         mov        eax, ebx
00000000000044f0         shr        al, 0x6
00000000000044f3         add        eax, 0x30
00000000000044f6         mov        byte [r14+r15+1], al

                     loc_44fb:
00000000000044fb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_41c0+812
00000000000044ff         cmp        r13, rax
0000000000004502         jbe        loc_4514

0000000000004504         mov        eax, ebx
0000000000004506         shr        al, 0x3
0000000000004509         and        eax, 0x7
000000000000450c         add        eax, 0x30
000000000000450f         mov        byte [r14+r15+2], al

                     loc_4514:
0000000000004514         and        ebx, 0x7                                    ; CODE XREF=sub_41c0+834
0000000000004517         add        rbp, 0x1
000000000000451b         add        r15, 0x3
000000000000451f         add        ebx, 0x30
0000000000004522         cmp        rbp, rcx
0000000000004525         jae        loc_3d10

000000000000452b         mov        esi, edx

                     loc_452d:
000000000000452d         cmp        r13, r15                                    ; CODE XREF=sub_41c0+985, sub_41c0+1969
0000000000004530         jbe        loc_4536

0000000000004532         mov        byte [r14+r15], bl

                     loc_4536:
0000000000004536         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_41c0+880
000000000000453a         add        r15, 0x1

                     loc_453e:
000000000000453e         test       dl, dl                                      ; CODE XREF=sub_41c0+707
0000000000004540         jne        loc_4490

0000000000004546         mov        eax, esi
0000000000004548         xor        eax, 0x1
000000000000454b         and        eax, r8d
000000000000454e         test       r10b, r10b
0000000000004551         je         loc_4561

0000000000004553         cmp        r13, r15
0000000000004556         jbe        loc_455d

0000000000004558         mov        byte [r14+r15], 0x5c

                     loc_455d:
000000000000455d         add        r15, 0x1                                    ; CODE XREF=sub_41c0+918

                     loc_4561:
0000000000004561         add        rbp, 0x1                                    ; CODE XREF=sub_41c0+913
0000000000004565         cmp        rbp, rcx
0000000000004568         jae        loc_3cec

000000000000456e         test       al, al
0000000000004570         je         loc_496e

0000000000004576         cmp        r13, r15
0000000000004579         jbe        loc_4580

000000000000457b         mov        byte [r14+r15], 0x27

                     loc_4580:
0000000000004580         lea        rax, qword [r15+1]                          ; CODE XREF=sub_41c0+953
0000000000004584         cmp        r13, rax
0000000000004587         jbe        loc_458f

0000000000004589         mov        byte [r14+r15+1], 0x27

                     loc_458f:
000000000000458f         add        r15, 0x2                                    ; CODE XREF=sub_41c0+967
0000000000004593         xor        r10d, r10d
0000000000004596         xor        r8d, r8d
0000000000004599         jmp        loc_452d
000000000000459b         align      32

                     loc_45a0:
00000000000045a0         cmp        r15, 0x1                                    ; CODE XREF=sub_41c0+579
00000000000045a4         je         loc_4409

00000000000045aa         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000045af         lea        rcx, qword [rdi+r15]
00000000000045b3         lea        rdx, qword [rdi+r14+1]
00000000000045b8         lea        r8, qword [rcx+r14]
00000000000045bc         jmp        loc_45cd
00000000000045be         align      64

                     loc_45c0:
00000000000045c0         add        rdx, 0x1                                    ; CODE XREF=sub_41c0+1046, sub_41c0+1072
00000000000045c4         cmp        r8, rdx
00000000000045c7         je         loc_4409

                     loc_45cd:
00000000000045cd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_41c0+1020
00000000000045d0         sub        ecx, 0x5b
00000000000045d3         cmp        cl, 0x21
00000000000045d6         ja         loc_45c0

00000000000045d8         mov        esi, 0x1
00000000000045dd         shl        rsi, cl
00000000000045e0         mov        rcx, rsi
00000000000045e3         movabs     rsi, 0x20000002b
00000000000045ed         test       rcx, rsi
00000000000045f0         je         loc_45c0

00000000000045f2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000045f7         mov        r13, qword [rsp+0xe8+var_78]
00000000000045fc         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004601         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4609:
0000000000004609         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_41c0+1227, sub_41c0+1948, sub_41c0+2585, sub_41c0+2734
000000000000460e         je         loc_4620

0000000000004610         test       al, al
0000000000004612         mov        eax, 0x4
0000000000004617         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000461c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4620:
0000000000004620         sub        rsp, 0x8                                    ; CODE XREF=sub_41c0+1102
0000000000004624         mov        rcx, rbp
0000000000004627         mov        rsi, r13
000000000000462a         push       qword [rsp+0xf0+var_88]
000000000000462e         push       qword [rsp+0xf8+var_80]
0000000000004632         mov        rdi, r14
0000000000004635         push       0x0
0000000000004637         mov        r9d, dword [rsp+0x108+var_70]
000000000000463f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004644         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004649         and        r9d, 0xfffffffd
000000000000464d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004652         add        rsp, 0x20
0000000000004656         mov        r15, rax

                     loc_4659:
0000000000004659         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_41c0+2549, sub_41c0+2560, sub_41c0+2711
0000000000004661         xor        rbx, qword [fs:0x28]
000000000000466a         mov        rax, r15
000000000000466d         jne        loc_4c73

0000000000004673         add        rsp, 0xb8
000000000000467a         pop        rbx
000000000000467b         pop        rbp
000000000000467c         pop        r12
000000000000467e         pop        r13
0000000000004680         pop        r14
0000000000004682         pop        r15
0000000000004684         ret
                        ; endp
0000000000004685         align      8

                     loc_4688:
0000000000004688         mov        rbp, r11                                    ; CODE XREF=sub_3d70+194
000000000000468b         jmp        loc_4609

                     loc_4690:
0000000000004690         cmp        r13, r15                                    ; CODE XREF=sub_41c0+206, sub_41c0+220
0000000000004693         jbe        loc_469a

0000000000004695         mov        byte [r14+r15], 0x27

                     loc_469a:
000000000000469a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_41c0+1235
000000000000469e         cmp        r13, rax
00000000000046a1         jbe        loc_46a9

00000000000046a3         mov        byte [r14+r15+1], 0x5c

                     loc_46a9:
00000000000046a9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_41c0+1249
00000000000046ad         cmp        r13, rax
00000000000046b0         jbe        loc_4ca2

00000000000046b6         mov        rdx, r13
00000000000046b9         mov        byte [r14+r15+2], 0x27
00000000000046bf         mov        r13, qword [rsp+arg_48]
00000000000046c4         jmp        loc_42a2

                     loc_46c9:
00000000000046c9         mov        eax, r12d                                   ; CODE XREF=sub_4060+99
00000000000046cc         mov        ebx, 0x30
00000000000046d1         xor        r12d, r12d
00000000000046d4         jmp        sub_3c70+105
                        ; endp

                     loc_46d9:
00000000000046d9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_4060+67
00000000000046df         jmp        loc_40a9

                     loc_46e4:
00000000000046e4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000046e6         jne        loc_3b13

00000000000046ec         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_46f1:
00000000000046f1         test       r13, r13                                    ; CODE XREF=sub_41c0+2749
00000000000046f4         jne        loc_4c8a

00000000000046fa         lea        rax, qword [aLibs+29]                       ; 0x70fd
0000000000004701         mov        qword [rsp+0xe8+var_98], 0x0
000000000000470a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000470f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004714         xor        r12d, r12d
0000000000004717         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000471c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004725         mov        qword [rsp+0xe8+var_A0], rax
000000000000472a         mov        r15d, 0x1
0000000000004730         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004738         jmp        loc_3b53
000000000000473d         align      64

                     loc_4740:
0000000000004740         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004742         jne        loc_4b3d

0000000000004748         test       r13, r13
000000000000474b         je         loc_4976

0000000000004751         mov        byte [r14], 0x22
0000000000004755         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000475a         xor        r12d, r12d
000000000000475d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004762         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_476b:
000000000000476b         lea        rax, qword [aLibs+27]                       ; 0x70fb, CODE XREF=sub_41c0+1996
0000000000004772         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004777         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000477c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004785         mov        r15d, 0x1
000000000000478b         mov        qword [rsp+0xe8+var_A0], rax
0000000000004790         jmp        loc_3b53

                     loc_4795:
0000000000004795         lea        rax, qword [aLibs+27]                       ; case 6, 0x70fb, CODE XREF=quotearg_buffer_restyled+145
000000000000479c         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000047a1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047a6         xor        r12d, r12d
00000000000047a9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000047b2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000047b7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000047c5         xor        r15d, r15d
00000000000047c8         mov        qword [rsp+0xe8+var_A0], rax
00000000000047cd         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000047d5         jmp        loc_3b53

                     loc_47da:
00000000000047da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000047df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047e4         xor        r12d, r12d
00000000000047e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000047f0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000047f5         xor        r15d, r15d
00000000000047f8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047fd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004806         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000480f         jmp        loc_3b53

                     loc_4814:
0000000000004814         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004819         je         loc_4871

000000000000481b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x70ff
0000000000004822         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004824         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004829         call       j_dcgettext                                 ; dcgettext
000000000000482e         mov        rcx, rax
0000000000004831         mov        qword [rsp+0xe8+var_80], rax
0000000000004836         lea        rax, qword [aLibs+31]                       ; 0x70ff
000000000000483d         cmp        rcx, rax
0000000000004840         je         loc_4bde

                     loc_4846:
0000000000004846         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x70fd, CODE XREF=sub_41c0+2607
000000000000484d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000484f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004854         call       j_dcgettext                                 ; dcgettext
0000000000004859         mov        rcx, rax
000000000000485c         mov        qword [rsp+0xe8+var_88], rax
0000000000004861         lea        rax, qword [aLibs+29]                       ; 0x70fd
0000000000004868         cmp        rcx, rax
000000000000486b         je         loc_4bf4

                     loc_4871:
0000000000004871         xor        r15d, r15d                                  ; CODE XREF=sub_41c0+1625, sub_41c0+2629
0000000000004874         test       ebx, ebx
0000000000004876         je         loc_4a3d

                     loc_487c:
000000000000487c         test       ebx, ebx                                    ; CODE XREF=sub_41c0+2183, sub_41c0+2214
000000000000487e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004883         setne      byte [rsp+0xe8+var_D9]
0000000000004888         xor        r12d, r12d
000000000000488b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000488e         call       j_strlen                                    ; strlen
0000000000004893         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004898         mov        qword [rsp+0xe8+var_D0], rax
000000000000489d         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000048a2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048a7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000048b0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000048b5         jmp        loc_3b53

                     loc_48ba:
00000000000048ba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000048bf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048c4         xor        r12d, r12d
00000000000048c7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000048d0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000048d5         xor        r15d, r15d
00000000000048d8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000048dd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000048e6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000048ef         jmp        loc_3b53

                     loc_48f4:
00000000000048f4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
00000000000048f9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048fe         xor        r12d, r12d
0000000000004901         mov        qword [rsp+0xe8+var_98], 0x0
000000000000490a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000490f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004914         jmp        loc_3b33

                     loc_4919:
0000000000004919         cmp        r13, r15                                    ; CODE XREF=sub_4060+133
000000000000491c         jbe        loc_4923

000000000000491e         mov        byte [r14+r15], 0x30

                     loc_4923:
0000000000004923         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_41c0+1884
0000000000004927         cmp        r13, rax
000000000000492a         jbe        loc_4932

000000000000492c         mov        byte [r14+rcx+2], 0x30

                     loc_4932:
0000000000004932         mov        eax, r12d                                   ; CODE XREF=sub_41c0+1898
0000000000004935         lea        r15, qword [rcx+3]
0000000000004939         xor        r12d, r12d
000000000000493c         mov        ebx, 0x30
0000000000004941         jmp        sub_3c70+56
                        ; endp
0000000000004946         align      16

                     loc_4950:
0000000000004950         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_41c0+731
0000000000004955         mov        rbp, r11
0000000000004958         mov        byte [rsp+0xe8+var_DB], bl
000000000000495c         jmp        loc_4609

                     loc_4961:
0000000000004961         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3f60+105
0000000000004966         xor        r12d, r12d
0000000000004969         jmp        loc_4470

                     loc_496e:
000000000000496e         xor        r10d, r10d                                  ; CODE XREF=sub_41c0+944
0000000000004971         jmp        loc_452d

                     loc_4976:
0000000000004976         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_41c0+1419
000000000000497f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004984         xor        r12d, r12d
0000000000004987         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000498c         jmp        loc_476b

                     loc_4991:
0000000000004991         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_41c0+561
0000000000004996         mov        rsi, r14
0000000000004999         mov        rcx, r13
000000000000499c         mov        rax, rbx
000000000000499f         mov        rdi, rbx
00000000000049a2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000049a8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000049ad         mov        r9, qword [rsp+0xe8+var_60]
00000000000049b5         cmp        rsi, r11
00000000000049b8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000049be         mov        r15, qword [rsp+0xe8+var_68]
00000000000049c6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000049cb         mov        r13, qword [rsp+0xe8+var_78]
00000000000049d0         jae        loc_49f8

00000000000049d2         cmp        byte [rcx], 0x0
00000000000049d5         jne        loc_49e7

00000000000049d7         jmp        loc_49f8
00000000000049d9         align      32

                     loc_49e0:
00000000000049e0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_41c0+2099
00000000000049e5         je         loc_49f5

                     loc_49e7:
00000000000049e7         add        rax, 0x1                                    ; CODE XREF=sub_41c0+2069
00000000000049eb         lea        rdx, qword [rbp+rax]
00000000000049f0         cmp        r11, rdx
00000000000049f3         ja         loc_49e0

                     loc_49f5:
00000000000049f5         mov        rdi, rax                                    ; CODE XREF=sub_41c0+2085

                     loc_49f8:
00000000000049f8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_41c0+2064, sub_41c0+2071
00000000000049fd         xor        r12d, r12d
0000000000004a00         jmp        loc_4466

                     loc_4a05:
0000000000004a05         mov        rdi, rbx                                    ; CODE XREF=sub_41c0+551
0000000000004a08         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004a0e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004a13         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004a19         mov        r15, qword [rsp+0xe8+var_68]
0000000000004a21         xor        r12d, r12d
0000000000004a24         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004a29         mov        r13, qword [rsp+0xe8+var_78]
0000000000004a2e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004a33         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004a38         jmp        loc_4466

                     loc_4a3d:
0000000000004a3d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_41c0+1718
0000000000004a42         movzx      eax, byte [rdx]
0000000000004a45         test       al, al
0000000000004a47         je         loc_487c

0000000000004a4d         nop        dword [rax]

                     loc_4a50:
0000000000004a50         cmp        r13, r15                                    ; CODE XREF=sub_41c0+2212
0000000000004a53         jbe        loc_4a59

0000000000004a55         mov        byte [r14+r15], al

                     loc_4a59:
0000000000004a59         add        r15, 0x1                                    ; CODE XREF=sub_41c0+2195
0000000000004a5d         movzx      eax, byte [rdx+r15]
0000000000004a62         test       al, al
0000000000004a64         jne        loc_4a50

0000000000004a66         jmp        loc_487c

                     loc_4a6b:
0000000000004a6b         mov        eax, edx                                    ; CODE XREF=sub_41c0+682
0000000000004a6d         jmp        loc_3fc7

                     loc_4a72:
0000000000004a72         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_41c0+290
0000000000004a76         cmp        bl, 0x3e
0000000000004a79         ja         loc_42f0

0000000000004a7f         movabs     rax, 0x7000a38200000000
0000000000004a89         bt         rax, rbx
0000000000004a8d         jae        loc_42f0

0000000000004a93         cmp        byte [rsp+arg_7], 0x0
0000000000004a98         jne        loc_4c82

0000000000004a9e         cmp        r13, r15
0000000000004aa1         jbe        loc_4aa8

0000000000004aa3         mov        byte [r14+r15], 0x3f

                     loc_4aa8:
0000000000004aa8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_41c0+2273
0000000000004aac         cmp        r13, rax
0000000000004aaf         jbe        loc_4ab7

0000000000004ab1         mov        byte [r14+r15+1], 0x22

                     loc_4ab7:
0000000000004ab7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_41c0+2287
0000000000004abb         cmp        r13, rax
0000000000004abe         jbe        loc_4ac6

0000000000004ac0         mov        byte [r14+r15+2], 0x22

                     loc_4ac6:
0000000000004ac6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_41c0+2302
0000000000004aca         cmp        r13, rax
0000000000004acd         jbe        loc_4ad5

0000000000004acf         mov        byte [r14+r15+3], 0x3f

                     loc_4ad5:
0000000000004ad5         add        r15, 0x4                                    ; CODE XREF=sub_41c0+2317
0000000000004ad9         xor        edx, edx
0000000000004adb         xor        r12d, r12d
0000000000004ade         xor        eax, eax
0000000000004ae0         mov        rbp, rcx
0000000000004ae3         jmp        sub_3c70+56
                        ; endp

                     loc_4ae8:
0000000000004ae8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000004aea         je         loc_4c78

0000000000004af0         lea        rax, qword [aLibs+29]                       ; 0x70fd
0000000000004af7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004afc         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b01         xor        r12d, r12d
0000000000004b04         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b0d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b12         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004b17         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004b20         xor        r15d, r15d
0000000000004b23         mov        qword [rsp+0xe8+var_A0], rax
0000000000004b28         jmp        loc_3b53
0000000000004b2d         align      16

                     loc_4b30:
0000000000004b30         mov        rbp, r11                                    ; CODE XREF=sub_41c0+333
0000000000004b33         movzx      eax, byte [rsp+arg_7]
0000000000004b38         jmp        sub_41c0+1097
                        ; endp

                     loc_4b3d:
0000000000004b3d         lea        rax, qword [aLibs+27]                       ; 0x70fb, CODE XREF=sub_41c0+1410
0000000000004b44         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b49         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b4e         xor        r12d, r12d
0000000000004b51         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b5a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b5f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004b64         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004b6d         xor        r15d, r15d
0000000000004b70         mov        qword [rsp+0xe8+var_A0], rax
0000000000004b75         jmp        loc_3b53

                     loc_4b7a:
0000000000004b7a         mov        eax, edx                                    ; CODE XREF=sub_41c0+87

                     loc_4b7c:
0000000000004b7c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_41c0+76, sub_41c0+2721
0000000000004b81         test       rbx, rbx
0000000000004b84         je         loc_4bb2

0000000000004b86         test       al, al
0000000000004b88         je         loc_4bb2

0000000000004b8a         movzx      ecx, byte [rbx]
0000000000004b8d         mov        rax, rbx
0000000000004b90         test       cl, cl
0000000000004b92         je         loc_4bb2

0000000000004b94         mov        rdx, r15
0000000000004b97         sub        rax, r15

                     loc_4b9a:
0000000000004b9a         cmp        r13, rdx                                    ; CODE XREF=sub_41c0+2541
0000000000004b9d         jbe        loc_4ba3

0000000000004b9f         mov        byte [r14+rdx], cl

                     loc_4ba3:
0000000000004ba3         add        rdx, 0x1                                    ; CODE XREF=sub_41c0+2525
0000000000004ba7         movzx      ecx, byte [rax+rdx]
0000000000004bab         test       cl, cl
0000000000004bad         jne        loc_4b9a

0000000000004baf         mov        r15, rdx

                     loc_4bb2:
0000000000004bb2         cmp        r13, r15                                    ; CODE XREF=sub_41c0+2500, sub_41c0+2504, sub_41c0+2514
0000000000004bb5         jbe        loc_4659

0000000000004bbb         mov        byte [r14+r15], 0x0
0000000000004bc0         jmp        loc_4659

                     loc_4bc5:
0000000000004bc5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000004bca         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004bcf         mov        rbp, r11
0000000000004bd2         sete       al
0000000000004bd5         mov        byte [rsp+0xe8+var_DB], bl
0000000000004bd9         jmp        loc_4609

                     loc_4bde:
0000000000004bde         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_41c0+1664
0000000000004be2         mov        rdi, rcx
0000000000004be5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004bea         mov        qword [rsp+0xe8+var_80], rax
0000000000004bef         jmp        loc_4846

                     loc_4bf4:
0000000000004bf4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_41c0+1707
0000000000004bf8         mov        rdi, rcx
0000000000004bfb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004c00         mov        qword [rsp+0xe8+var_88], rax
0000000000004c05         jmp        loc_4871

                     loc_4c0a:
0000000000004c0a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_4060+16
0000000000004c0f         mov        rbp, r11
0000000000004c12         mov        eax, edx
0000000000004c14         mov        byte [rsp+arg_5], bl
0000000000004c18         jmp        sub_41c0+1097
                        ; endp

                     loc_4c1d:
0000000000004c1d         sub        rsp, 0x8                                    ; CODE XREF=sub_41c0+98
0000000000004c21         mov        r8d, 0x5
0000000000004c27         mov        rcx, r11
0000000000004c2a         push       qword [rsp+0xf0+var_88]
0000000000004c2e         push       qword [rsp+0xf8+var_80]
0000000000004c32         mov        rdi, r14
0000000000004c35         push       qword [rsp+0x100+var_C8]
0000000000004c39         mov        r9d, dword [rsp+0x108+var_70]
0000000000004c41         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004c46         mov        rsi, qword [rsp+0x108+var_98]
0000000000004c4b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c50         add        rsp, 0x20
0000000000004c54         mov        r15, rax
0000000000004c57         jmp        loc_4659

                     loc_4c5c:
0000000000004c5c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_41c0+121
0000000000004c61         jmp        loc_4b7c

                     loc_4c66:
0000000000004c66         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_41c0+63
0000000000004c6e         jmp        loc_4609

                     loc_4c73:
0000000000004c73         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_41c0+1197
                        ; endp

                     loc_4c78:
0000000000004c78         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_41c0+2346
0000000000004c7d         jmp        loc_46f1

                     loc_4c82:
0000000000004c82         mov        rbp, r11                                    ; CODE XREF=sub_41c0+2264
0000000000004c85         jmp        sub_41c0+1120
                        ; endp

                     loc_4c8a:
0000000000004c8a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_41c0+1332
0000000000004c8f         xor        eax, eax
0000000000004c91         xor        r12d, r12d
0000000000004c94         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004c9d         jmp        loc_4244

                     loc_4ca2:
0000000000004ca2         mov        rdx, r13                                    ; CODE XREF=sub_41c0+1264
0000000000004ca5         mov        r13, qword [rsp+arg_48]
0000000000004caa         jmp        loc_42a2

                     loc_4caf:
0000000000004caf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004cb4         align      64                                          ; End of unwind block (FDE at 0x8158)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004cc0         push       r15                                         ; Begin of unwind block (FDE at 0x81d0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004cc2         push       r14
0000000000004cc4         movsxd     r15, edi
0000000000004cc7         push       r13
0000000000004cc9         push       r12
0000000000004ccb         mov        r14, rdx
0000000000004cce         push       rbp
0000000000004ccf         push       rbx
0000000000004cd0         mov        rbp, rcx
0000000000004cd3         sub        rsp, 0x28
0000000000004cd7         mov        qword [rsp+0x58+var_50], rsi
0000000000004cdc         call       j___errno_location                          ; __errno_location
0000000000004ce1         mov        r13, rax
0000000000004ce4         mov        eax, dword [rax]
0000000000004ce6         test       r15d, r15d
0000000000004ce9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004cf0         mov        dword [rsp+0x58+var_40], eax
0000000000004cf4         js         loc_4e61

0000000000004cfa         cmp        dword [nslots], r15d                        ; nslots
0000000000004d01         jg         loc_4d65

0000000000004d03         cmp        r15d, 0x7fffffff
0000000000004d0a         je         loc_4e66

0000000000004d10         lea        r12d, dword [r15+1]
0000000000004d14         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004d1b         movsxd     rsi, r12d
0000000000004d1e         shl        rsi, 0x4
0000000000004d22         cmp        rbx, rax
0000000000004d25         je         loc_4e40

0000000000004d2b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004d2e         call       xrealloc                                    ; xrealloc
0000000000004d33         mov        rbx, rax
0000000000004d36         mov        qword [slotvec], rax                        ; slotvec

                     loc_4d3d:
0000000000004d3d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004d44         mov        edx, r12d
0000000000004d47         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004d49         sub        edx, edi
0000000000004d4b         shl        rdi, 0x4
0000000000004d4f         movsxd     rdx, edx
0000000000004d52         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004d55         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004d59         call       j_memset                                    ; memset
0000000000004d5e         mov        dword [nslots], r12d                        ; nslots

                     loc_4d65:
0000000000004d65         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004d68         shl        r15, 0x4
0000000000004d6c         sub        rsp, 0x8
0000000000004d70         add        rbx, r15
0000000000004d73         lea        r15, qword [rbp+8]
0000000000004d77         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004d7b         mov        r11, qword [rbx]
0000000000004d7e         mov        r12, qword [rbx+8]
0000000000004d82         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004d85         or         eax, 0x1
0000000000004d88         mov        dword [rsp+0x60+var_3C], eax
0000000000004d8c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004d8f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004d92         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004d95         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004d97         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000004d9a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004d9f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004da2         mov        qword [rsp+0x78+var_48], r11
0000000000004da7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004dac         add        rsp, 0x20
0000000000004db0         mov        r11, qword [rsp+0x58+var_48]
0000000000004db5         cmp        r11, rax
0000000000004db8         ja         loc_4e21

0000000000004dba         lea        rsi, qword [rax+1]
0000000000004dbe         lea        rax, qword [slot0]                          ; slot0
0000000000004dc5         cmp        r12, rax
0000000000004dc8         mov        qword [rbx], rsi
0000000000004dcb         je         loc_4ddf

0000000000004dcd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004dd0         mov        qword [rsp+0x58+var_48], rsi
0000000000004dd5         call       j_free                                      ; free
0000000000004dda         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4ddf:
0000000000004ddf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004de2         mov        qword [rsp+0x58+var_48], rsi
0000000000004de7         call       xmalloc                                     ; xmalloc
0000000000004dec         sub        rsp, 0x8
0000000000004df0         mov        qword [rbx+8], rax
0000000000004df4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004df8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004dfb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004dfe         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004e01         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004e03         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004e08         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004e0b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004e10         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004e15         mov        r12, rax
0000000000004e18         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004e1d         add        rsp, 0x20

                     loc_4e21:
0000000000004e21         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004e25         mov        dword [r13], eax
0000000000004e29         add        rsp, 0x28
0000000000004e2d         mov        rax, r12
0000000000004e30         pop        rbx
0000000000004e31         pop        rbp
0000000000004e32         pop        r12
0000000000004e34         pop        r13
0000000000004e36         pop        r14
0000000000004e38         pop        r15
0000000000004e3a         ret
                        ; endp
0000000000004e3b         align      64

                     loc_4e40:
0000000000004e40         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004e42         call       xrealloc                                    ; xrealloc
0000000000004e47         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004e4f         mov        rbx, rax
0000000000004e52         mov        qword [slotvec], rax                        ; slotvec
0000000000004e59         movups     xmmword [rax], xmm0
0000000000004e5c         jmp        loc_4d3d

                     loc_4e61:
0000000000004e61         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4e66:
0000000000004e66         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e6b:
0000000000004e6b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x81d0)
                     clone_quoting_options:
0000000000004e70         push       r12                                         ; Begin of unwind block (FDE at 0x823c)
0000000000004e72         push       rbp
0000000000004e73         push       rbx
0000000000004e74         mov        rbx, rdi
0000000000004e77         call       j___errno_location                          ; __errno_location
0000000000004e7c         mov        r12d, dword [rax]
0000000000004e7f         mov        rbp, rax
0000000000004e82         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004e89         test       rbx, rbx
0000000000004e8c         mov        esi, 0x38
0000000000004e91         cmove      rbx, rax
0000000000004e95         mov        rdi, rbx
0000000000004e98         call       xmemdup                                     ; xmemdup
0000000000004e9d         mov        dword [rbp], r12d
0000000000004ea1         pop        rbx
0000000000004ea2         pop        rbp
0000000000004ea3         pop        r12
0000000000004ea5         ret
                        ; endp
0000000000004ea6         align      16                                          ; End of unwind block (FDE at 0x823c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004eb0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8268), default_quoting_options
0000000000004eb7         test       rdi, rdi
0000000000004eba         cmove      rdi, rax
0000000000004ebe         mov        eax, dword [rdi]
0000000000004ec0         ret
                        ; endp
0000000000004ec1         align      16                                          ; End of unwind block (FDE at 0x8268)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004ed0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x827c), default_quoting_options
0000000000004ed7         test       rdi, rdi
0000000000004eda         cmove      rdi, rax
0000000000004ede         mov        dword [rdi], esi
0000000000004ee0         ret
                        ; endp
0000000000004ee1         align      16                                          ; End of unwind block (FDE at 0x827c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004ef0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8290), default_quoting_options
0000000000004ef7         test       rdi, rdi
0000000000004efa         mov        ecx, esi
0000000000004efc         cmove      rdi, rax
0000000000004f00         mov        eax, esi
0000000000004f02         and        ecx, 0x1f
0000000000004f05         shr        al, 0x5
0000000000004f08         movzx      eax, al
0000000000004f0b         lea        rdi, qword [rdi+rax*4+8]
0000000000004f10         mov        esi, dword [rdi]
0000000000004f12         mov        eax, esi
0000000000004f14         shr        eax, cl
0000000000004f16         xor        edx, eax
0000000000004f18         and        eax, 0x1
0000000000004f1b         and        edx, 0x1
0000000000004f1e         shl        edx, cl
0000000000004f20         xor        edx, esi
0000000000004f22         mov        dword [rdi], edx
0000000000004f24         ret
                        ; endp
0000000000004f25         align      16                                          ; End of unwind block (FDE at 0x8290)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004f30         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x82a4), default_quoting_options
0000000000004f37         test       rdi, rdi
0000000000004f3a         cmove      rdi, rax
0000000000004f3e         mov        eax, dword [rdi+4]
0000000000004f41         mov        dword [rdi+4], esi
0000000000004f44         ret
                        ; endp
0000000000004f45         align      16                                          ; End of unwind block (FDE at 0x82a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004f50         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x82b8), default_quoting_options
0000000000004f57         test       rdi, rdi
0000000000004f5a         cmove      rdi, rax
0000000000004f5e         test       rsi, rsi
0000000000004f61         mov        dword [rdi], 0xa
0000000000004f67         je         loc_4f77

0000000000004f69         test       rdx, rdx
0000000000004f6c         je         loc_4f77

0000000000004f6e         mov        qword [rdi+0x28], rsi
0000000000004f72         mov        qword [rdi+0x30], rdx
0000000000004f76         ret
                        ; endp

                     loc_4f77:
0000000000004f77         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004f7b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004f80         push       r15                                         ; End of unwind block (FDE at 0x82b8), Begin of unwind block (FDE at 0x82cc)
0000000000004f82         push       r14
0000000000004f84         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004f8b         push       r13
0000000000004f8d         push       r12
0000000000004f8f         mov        r13, rdi
0000000000004f92         push       rbp
0000000000004f93         push       rbx
0000000000004f94         mov        rbx, r8
0000000000004f97         mov        r14, rsi
0000000000004f9a         mov        r15, rdx
0000000000004f9d         sub        rsp, 0x18
0000000000004fa1         test       r8, r8
0000000000004fa4         cmove      rbx, rax
0000000000004fa8         mov        qword [rsp+0x48+var_40], rcx
0000000000004fad         call       j___errno_location                          ; __errno_location
0000000000004fb2         mov        r12d, dword [rax]
0000000000004fb5         mov        rbp, rax
0000000000004fb8         lea        rax, qword [rbx+8]
0000000000004fbc         sub        rsp, 0x8
0000000000004fc0         mov        r9d, dword [rbx+4]
0000000000004fc4         push       qword [rbx+0x30]
0000000000004fc7         mov        r8d, dword [rbx]
0000000000004fca         push       qword [rbx+0x28]
0000000000004fcd         mov        rdx, r15
0000000000004fd0         push       rax
0000000000004fd1         mov        rcx, qword [rsp+0x68+var_40]
0000000000004fd6         mov        rsi, r14
0000000000004fd9         mov        rdi, r13
0000000000004fdc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004fe1         mov        dword [rbp], r12d
0000000000004fe5         add        rsp, 0x38
0000000000004fe9         pop        rbx
0000000000004fea         pop        rbp
0000000000004feb         pop        r12
0000000000004fed         pop        r13
0000000000004fef         pop        r14
0000000000004ff1         pop        r15
0000000000004ff3         ret
                        ; endp
0000000000004ff4         align      4096                                        ; End of unwind block (FDE at 0x82cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005000         push       r15                                         ; Begin of unwind block (FDE at 0x8320), CODE XREF=quotearg_alloc+5
0000000000005002         push       r14
0000000000005004         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000500b         push       r13
000000000000500d         push       r12
000000000000500f         mov        r12, rdx
0000000000005012         push       rbp
0000000000005013         push       rbx
0000000000005014         mov        rbx, rcx
0000000000005017         mov        r14, rdi
000000000000501a         mov        r15, rsi
000000000000501d         sub        rsp, 0x38
0000000000005021         test       rcx, rcx
0000000000005024         cmove      rbx, rax
0000000000005028         xor        ebp, ebp
000000000000502a         call       j___errno_location                          ; __errno_location
000000000000502f         test       r12, r12
0000000000005032         mov        r13, rax
0000000000005035         mov        eax, dword [rax]
0000000000005037         sete       bpl
000000000000503b         or         ebp, dword [rbx+4]
000000000000503e         lea        r10, qword [rbx+8]
0000000000005042         sub        rsp, 0x8
0000000000005046         mov        r8d, dword [rbx]
0000000000005049         mov        rcx, r15
000000000000504c         mov        dword [rsp+0x70+var_5C], eax
0000000000005050         push       qword [rbx+0x30]
0000000000005053         mov        rdx, r14
0000000000005056         push       qword [rbx+0x28]
0000000000005059         push       r10
000000000000505b         xor        esi, esi
000000000000505d         mov        r9d, ebp
0000000000005060         xor        edi, edi
0000000000005062         mov        qword [rsp+0x88+var_48], r10
0000000000005067         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000506c         lea        rsi, qword [rax+1]
0000000000005070         mov        qword [rsp+0x88+var_40], rax
0000000000005075         add        rsp, 0x20
0000000000005079         mov        rdi, rsi
000000000000507c         mov        qword [rsp+0x68+var_50], rsi
0000000000005081         call       xmalloc                                     ; xmalloc
0000000000005086         mov        qword [rsp+0x68+var_58], rax
000000000000508b         sub        rsp, 0x8
000000000000508f         push       qword [rbx+0x30]
0000000000005092         push       qword [rbx+0x28]
0000000000005095         mov        r10, qword [rsp+0x80+var_48]
000000000000509a         mov        r9d, ebp
000000000000509d         mov        r8d, dword [rbx]
00000000000050a0         mov        rcx, r15
00000000000050a3         mov        rdx, r14
00000000000050a6         mov        rdi, rax
00000000000050a9         push       r10
00000000000050ab         mov        rsi, qword [rsp+0x88+var_50]
00000000000050b0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050b5         mov        eax, dword [rsp+0x88+var_5C]
00000000000050b9         add        rsp, 0x20
00000000000050bd         test       r12, r12
00000000000050c0         mov        dword [r13], eax
00000000000050c4         je         loc_50cf

00000000000050c6         mov        r11, qword [rsp+0x68+var_40]
00000000000050cb         mov        qword [r12], r11

                     loc_50cf:
00000000000050cf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000050d4         add        rsp, 0x38
00000000000050d8         pop        rbx
00000000000050d9         pop        rbp
00000000000050da         pop        r12
00000000000050dc         pop        r13
00000000000050de         pop        r14
00000000000050e0         pop        r15
00000000000050e2         ret
                        ; endp
00000000000050e3         align      16                                          ; End of unwind block (FDE at 0x8320)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000050f0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x838c)
00000000000050f3         xor        edx, edx
00000000000050f5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000050fa         align      256                                         ; End of unwind block (FDE at 0x838c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005100         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x83a0), nslots
0000000000005106         push       r12
0000000000005108         mov        r12, qword [slotvec]                        ; slotvec
000000000000510f         push       rbp
0000000000005110         push       rbx
0000000000005111         cmp        eax, 0x1
0000000000005114         jle        loc_5141

0000000000005116         sub        eax, 0x2
0000000000005119         lea        rbx, qword [r12+0x18]
000000000000511e         shl        rax, 0x4
0000000000005122         lea        rbp, qword [r12+rax+0x28]
0000000000005127         nop        word [rax+rax]

                     loc_5130:
0000000000005130         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005133         add        rbx, 0x10
0000000000005137         call       j_free                                      ; free
000000000000513c         cmp        rbx, rbp
000000000000513f         jne        loc_5130

                     loc_5141:
0000000000005141         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005146         lea        rbx, qword [slot0]                          ; slot0
000000000000514d         cmp        rdi, rbx
0000000000005150         je         loc_5169

0000000000005152         call       j_free                                      ; free
0000000000005157         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005162         mov        qword [slotvec0+8], rbx                     ; 0x20a098

                     loc_5169:
0000000000005169         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005170         cmp        r12, rbx
0000000000005173         je         loc_5184

0000000000005175         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005178         call       j_free                                      ; free
000000000000517d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_5184:
0000000000005184         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000005185         mov        dword [nslots], 0x1                         ; nslots
000000000000518f         pop        rbp
0000000000005190         pop        r12
0000000000005192         ret
                        ; endp
0000000000005193         align      32                                          ; End of unwind block (FDE at 0x83a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000051a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x83cc), default_quoting_options
00000000000051a7         mov        rdx, 0xffffffffffffffff
00000000000051ae         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051b3         align      64                                          ; End of unwind block (FDE at 0x83cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000051c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x83e0), default_quoting_options
00000000000051c7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051cc         align      16                                          ; End of unwind block (FDE at 0x83e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000051d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x83f4), default_quoting_options
00000000000051d7         mov        rsi, rdi
00000000000051da         mov        rdx, 0xffffffffffffffff
00000000000051e1         xor        edi, edi
00000000000051e3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051e8         align      16                                          ; End of unwind block (FDE at 0x83f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000051f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8408), default_quoting_options
00000000000051f7         mov        rdx, rsi
00000000000051fa         mov        rsi, rdi
00000000000051fd         xor        edi, edi
00000000000051ff         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005204         align      16                                          ; End of unwind block (FDE at 0x8408)

                     quotearg_n_style:
0000000000005210         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x841c), CODE XREF=quotearg_style+7
0000000000005214         mov        rax, rdx
0000000000005217         mov        rdx, qword [fs:0x28]
0000000000005220         mov        qword [rsp+0x48+var_10], rdx
0000000000005225         xor        edx, edx
0000000000005227         cmp        esi, 0xa
000000000000522a         je         loc_5294

000000000000522c         mov        dword [rsp+0x48+var_48], esi
000000000000522f         mov        rcx, rsp
0000000000005232         mov        rdx, 0xffffffffffffffff
0000000000005239         mov        rsi, rax
000000000000523c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005245         mov        qword [rsp+0x48+var_3C], 0x0
000000000000524e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005257         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005260         mov        qword [rsp+0x48+var_24], 0x0
0000000000005269         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005272         mov        dword [rsp+0x48+var_14], 0x0
000000000000527a         call       quotearg_n_options                          ; quotearg_n_options
000000000000527f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005284         xor        rcx, qword [fs:0x28]
000000000000528d         jne        loc_5299

000000000000528f         add        rsp, 0x48
0000000000005293         ret
                        ; endp

                     loc_5294:
0000000000005294         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5299:
0000000000005299         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000529e         align      32                                          ; End of unwind block (FDE at 0x841c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000052a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8438), CODE XREF=quotearg_style_mem+10
00000000000052a4         mov        rax, rdx
00000000000052a7         mov        rdx, rcx
00000000000052aa         mov        rcx, qword [fs:0x28]
00000000000052b3         mov        qword [rsp+0x48+var_10], rcx
00000000000052b8         xor        ecx, ecx
00000000000052ba         cmp        esi, 0xa
00000000000052bd         je         loc_5320

00000000000052bf         mov        dword [rsp+0x48+var_48], esi
00000000000052c2         mov        rcx, rsp
00000000000052c5         mov        rsi, rax
00000000000052c8         mov        qword [rsp+0x48+var_44], 0x0
00000000000052d1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000052da         mov        qword [rsp+0x48+var_34], 0x0
00000000000052e3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000052ec         mov        qword [rsp+0x48+var_24], 0x0
00000000000052f5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000052fe         mov        dword [rsp+0x48+var_14], 0x0
0000000000005306         call       quotearg_n_options                          ; quotearg_n_options
000000000000530b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005310         xor        rdx, qword [fs:0x28]
0000000000005319         jne        loc_5325

000000000000531b         add        rsp, 0x48
000000000000531f         ret
                        ; endp

                     loc_5320:
0000000000005320         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5325:
0000000000005325         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000532a         align      16                                          ; End of unwind block (FDE at 0x8438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_style:
0000000000005330         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x8454), CODE XREF=main+1165, main+1386, main+1971, main+3775, main+3837, main+3981, xwrite_stdout.part.6+65, head_lines+256, head_bytes+131, diagnose_copy_fd_failure+93, elide_tail_lines_seekable+522
0000000000005333         mov        esi, edi
0000000000005335         xor        edi, edi
0000000000005337         jmp        quotearg_n_style                            ; quotearg_n_style
000000000000533c         align      64                                          ; End of unwind block (FDE at 0x8454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005340         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8468)
0000000000005343         mov        rdx, rsi
0000000000005346         mov        esi, edi
0000000000005348         xor        edi, edi
000000000000534a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000534f         align      16                                          ; End of unwind block (FDE at 0x8468)

                     quotearg_char_mem:
0000000000005350         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x847c), CODE XREF=quotearg_char+11
0000000000005354         mov        ecx, edx
0000000000005356         mov        rax, qword [fs:0x28]
000000000000535f         mov        qword [rsp+0x48+var_10], rax
0000000000005364         xor        eax, eax
0000000000005366         mov        rax, qword [qword_20a250]                   ; qword_20a250
000000000000536d         mov        r8, rsp
0000000000005370         and        ecx, 0x1f
0000000000005373         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000537b         mov        qword [rsp+0x48+var_18], rax
0000000000005380         mov        eax, edx
0000000000005382         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005386         shr        al, 0x5
0000000000005389         movzx      eax, al
000000000000538c         lea        r9, qword [r8+rax*4+8]
0000000000005391         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a230
0000000000005399         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000539e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a240
00000000000053a6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000053ab         mov        edx, dword [r9]
00000000000053ae         mov        eax, edx
00000000000053b0         shr        eax, cl
00000000000053b2         not        eax
00000000000053b4         and        eax, 0x1
00000000000053b7         shl        eax, cl
00000000000053b9         mov        rcx, r8
00000000000053bc         xor        eax, edx
00000000000053be         mov        rdx, rsi
00000000000053c1         mov        rsi, rdi
00000000000053c4         mov        dword [r9], eax
00000000000053c7         xor        edi, edi
00000000000053c9         call       quotearg_n_options                          ; quotearg_n_options
00000000000053ce         mov        rsi, qword [rsp+0x48+var_10]
00000000000053d3         xor        rsi, qword [fs:0x28]
00000000000053dc         jne        loc_53e3

00000000000053de         add        rsp, 0x48
00000000000053e2         ret
                        ; endp

                     loc_53e3:
00000000000053e3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000053e8         align      16                                          ; End of unwind block (FDE at 0x847c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000053f0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8498)
00000000000053f4         mov        rsi, 0xffffffffffffffff
00000000000053fb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005400         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8498), Begin of unwind block (FDE at 0x84ac), CODE XREF=close_stdout+101
0000000000005405         mov        rsi, 0xffffffffffffffff
000000000000540c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005411         align      32                                          ; End of unwind block (FDE at 0x84ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005420         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x84c0)
0000000000005425         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000542a         align      16                                          ; End of unwind block (FDE at 0x84c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005430         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x84d4), CODE XREF=elseek+104, diagnose_copy_fd_failure+26
0000000000005434         mov        rax, rdx
0000000000005437         mov        rdx, qword [fs:0x28]
0000000000005440         mov        qword [rsp+0x48+var_10], rdx
0000000000005445         xor        edx, edx
0000000000005447         cmp        esi, 0xa
000000000000544a         je         loc_54b4

000000000000544c         mov        dword [rsp+0x48+var_48], esi
000000000000544f         mov        rcx, rsp
0000000000005452         mov        rdx, 0xffffffffffffffff
0000000000005459         mov        rsi, rax
000000000000545c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005465         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000546e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005477         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005480         mov        qword [rsp+0x48+var_24], 0x0
0000000000005489         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005492         mov        dword [rsp+0x48+var_14], 0x0
000000000000549a         call       quotearg_n_options                          ; quotearg_n_options
000000000000549f         mov        rcx, qword [rsp+0x48+var_10]
00000000000054a4         xor        rcx, qword [fs:0x28]
00000000000054ad         jne        loc_54b9

00000000000054af         add        rsp, 0x48
00000000000054b3         ret
                        ; endp

                     loc_54b4:
00000000000054b4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_54b9:
00000000000054b9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000054be         align      64                                          ; End of unwind block (FDE at 0x84d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
00000000000054c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x84f0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000054c4         mov        r9, rcx
00000000000054c7         mov        rcx, qword [qword_20a250]                   ; qword_20a250
00000000000054ce         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000054d6         mov        rax, qword [fs:0x28]
00000000000054df         mov        qword [rsp+0x48+var_10], rax
00000000000054e4         xor        eax, eax
00000000000054e6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000054ea         test       rsi, rsi
00000000000054ed         mov        qword [rsp+0x48+var_18], rcx
00000000000054f2         mov        dword [rsp+0x48+var_48], 0xa
00000000000054f9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a230
0000000000005501         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005506         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a240
000000000000550e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005513         je         loc_5547

0000000000005515         test       rdx, rdx
0000000000005518         je         loc_5547

000000000000551a         mov        qword [rsp+0x48+var_20], rsi
000000000000551f         mov        qword [rsp+0x48+var_18], rdx
0000000000005524         mov        rcx, rsp
0000000000005527         mov        rdx, r8
000000000000552a         mov        rsi, r9
000000000000552d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005532         mov        rdi, qword [rsp+0x48+var_10]
0000000000005537         xor        rdi, qword [fs:0x28]
0000000000005540         jne        loc_554c

0000000000005542         add        rsp, 0x48
0000000000005546         ret
                        ; endp

                     loc_5547:
0000000000005547         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_554c:
000000000000554c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005551         align      32                                          ; End of unwind block (FDE at 0x84f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000005560         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x850c)
0000000000005567         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000556c         align      16                                          ; End of unwind block (FDE at 0x850c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005570         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8520)
0000000000005573         mov        r8, 0xffffffffffffffff
000000000000557a         mov        rdx, rsi
000000000000557d         mov        rsi, rdi
0000000000005580         xor        edi, edi
0000000000005582         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005587         align      16                                          ; End of unwind block (FDE at 0x8520)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005590         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x8534)
0000000000005593         mov        rcx, rdx
0000000000005596         mov        rdx, rsi
0000000000005599         mov        rsi, rdi
000000000000559c         xor        edi, edi
000000000000559e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055a3         align      16                                          ; End of unwind block (FDE at 0x8534)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000055b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8548), quote_quoting_options
00000000000055b7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000055bc         align      64                                          ; End of unwind block (FDE at 0x8548)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000055c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x855c), quote_quoting_options
00000000000055c7         mov        rdx, rsi
00000000000055ca         mov        rsi, rdi
00000000000055cd         xor        edi, edi
00000000000055cf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000055d4         align      32                                          ; End of unwind block (FDE at 0x855c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000055e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8570), quote_quoting_options
00000000000055e7         mov        rdx, 0xffffffffffffffff
00000000000055ee         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000055f3         align      512                                         ; End of unwind block (FDE at 0x8570)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005600         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8584), quote_quoting_options, CODE XREF=main+4185, xnumtoumax+109
0000000000005607         mov        rsi, rdi
000000000000560a         mov        rdx, 0xffffffffffffffff
0000000000005611         xor        edi, edi
0000000000005613         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005618         align      32                                          ; End of unwind block (FDE at 0x8584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
0000000000005620         push       r13                                         ; Begin of unwind block (FDE at 0x859c), CODE XREF=main+2180, copy_fd+89, head_lines+81, head_bytes+109, elide_tail_lines_seekable+139, elide_tail_lines_seekable+440, full_read+57
0000000000005622         push       r12
0000000000005624         mov        r13d, edi
0000000000005627         push       rbp
0000000000005628         push       rbx
0000000000005629         mov        r12, rsi
000000000000562c         mov        rbx, rdx
000000000000562f         sub        rsp, 0x8
0000000000005633         nop        dword [rax+rax]

                     loc_5638:
0000000000005638         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
000000000000563b         mov        rsi, r12                                    ; argument "__buf" for method j_read
000000000000563e         mov        edi, r13d                                   ; argument "__fd" for method j_read
0000000000005641         call       j_read                                      ; read
0000000000005646         test       rax, rax
0000000000005649         mov        rbp, rax
000000000000564c         jns        loc_5670

000000000000564e         call       j___errno_location                          ; __errno_location
0000000000005653         mov        eax, dword [rax]
0000000000005655         cmp        eax, 0x4
0000000000005658         je         loc_5638

000000000000565a         cmp        rbx, 0x7ff00000
0000000000005661         jbe        loc_5670

0000000000005663         cmp        eax, 0x16
0000000000005666         jne        loc_5670

0000000000005668         mov        ebx, 0x7ff00000
000000000000566d         jmp        loc_5638
000000000000566f         align      16

                     loc_5670:
0000000000005670         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
0000000000005674         mov        rax, rbp
0000000000005677         pop        rbx
0000000000005678         pop        rbp
0000000000005679         pop        r12
000000000000567b         pop        r13
000000000000567d         ret
                        ; endp
000000000000567e         align      128                                         ; End of unwind block (FDE at 0x859c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005680         push       r15                                         ; Begin of unwind block (FDE at 0x85d4), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005682         push       r14
0000000000005684         push       r13
0000000000005686         push       r12
0000000000005688         mov        r12, r9
000000000000568b         push       rbp
000000000000568c         push       rbx
000000000000568d         mov        rbp, rdi
0000000000005690         mov        rbx, r8
0000000000005693         sub        rsp, 0x28
0000000000005697         test       rsi, rsi
000000000000569a         je         loc_57b8

00000000000056a0         mov        r8, rdx
00000000000056a3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000056aa         mov        r9, rcx
00000000000056ad         xor        eax, eax
00000000000056af         mov        rcx, rsi
00000000000056b2         mov        esi, 0x1
00000000000056b7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_56bc:
00000000000056bc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x75db, CODE XREF=version_etc_arn+337
00000000000056c3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056c5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056ca         call       j_dcgettext                                 ; dcgettext
00000000000056cf         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000056d6         mov        rcx, rax
00000000000056d9         mov        r8d, 0x7e3
00000000000056df         mov        esi, 0x1
00000000000056e4         mov        rdi, rbp
00000000000056e7         xor        eax, eax
00000000000056e9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000056ee         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000056f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056fc         call       j_dcgettext                                 ; dcgettext
0000000000005701         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005704         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005707         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000570c         cmp        r12, 0x9
0000000000005710         ja         loc_5a50

0000000000005716         lea        rdx, qword [switch_table_78c4]              ; switch_table_78c4
000000000000571d         movsxd     rax, dword [rdx+r12*4]
0000000000005721         add        rax, rdx
0000000000005724         jmp        rax                                         ; switch statement using table at 0x78c4, with 10 cases, 0x5730,0x57a6,0x57e0,0x5838,0x5878,0x58c0,0x5910,0x5968,0x5998,0x5a00
0000000000005726         align      16

                     loc_5730:
0000000000005730         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005734         mov        rax, qword [rbx+0x10]
0000000000005738         lea        rsi, qword [aWrittenBySSSns_77d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000573f         mov        r8, qword [rbx+8]
0000000000005743         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005748         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000574a         mov        r13, qword [rbx+0x30]
000000000000574e         mov        r12, qword [rbx+0x28]
0000000000005752         mov        qword [rsp+0x58+var_48], r9
0000000000005757         mov        r15, qword [rbx+0x20]
000000000000575b         mov        r14, qword [rbx+0x18]
000000000000575f         mov        qword [rsp+0x58+var_58], rax
0000000000005763         mov        qword [rsp+0x58+var_50], r8
0000000000005768         mov        rbx, qword [rbx]
000000000000576b         call       j_dcgettext                                 ; dcgettext
0000000000005770         sub        rsp, 0x8

                     loc_5774:
0000000000005774         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005779         mov        rdx, rax
000000000000577c         mov        rcx, rbx
000000000000577f         mov        esi, 0x1
0000000000005784         mov        rdi, rbp
0000000000005787         xor        eax, eax
0000000000005789         push       r9
000000000000578b         push       r13
000000000000578d         push       r12
000000000000578f         push       r15
0000000000005791         push       r14
0000000000005793         mov        r9, qword [rsp+0x88+var_58]
0000000000005798         mov        r8, qword [rsp+0x88+var_50]
000000000000579d         call       j___fprintf_chk                             ; __fprintf_chk
00000000000057a2         add        rsp, 0x30

                     loc_57a6:
00000000000057a6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000057aa         pop        rbx
00000000000057ab         pop        rbp
00000000000057ac         pop        r12
00000000000057ae         pop        r13
00000000000057b0         pop        r14
00000000000057b2         pop        r15
00000000000057b4         ret
                        ; endp
00000000000057b5         align      8

                     loc_57b8:
00000000000057b8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000057bb         mov        rcx, rdx
00000000000057be         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000057c5         mov        esi, 0x1
00000000000057ca         xor        eax, eax
00000000000057cc         call       j___fprintf_chk                             ; __fprintf_chk
00000000000057d1         jmp        loc_56bc
00000000000057d6         align      32

                     loc_57e0:
00000000000057e0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000057e4         mov        r9, qword [rbx+0x38]
00000000000057e8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000057ef         mov        rax, qword [rbx+0x10]
00000000000057f3         mov        r8, qword [rbx+8]
00000000000057f7         mov        edx, 0x5
00000000000057fc         mov        r13, qword [rbx+0x30]
0000000000005800         mov        r12, qword [rbx+0x28]
0000000000005804         mov        r15, qword [rbx+0x20]
0000000000005808         mov        r14, qword [rbx+0x18]
000000000000580c         mov        rbx, qword [rbx]
000000000000580f         mov        qword [rsp+0x58+var_40], r10
0000000000005814         mov        qword [rsp+0x58+var_48], r9
0000000000005819         mov        qword [rsp+0x58+var_58], rax
000000000000581d         mov        qword [rsp+0x58+var_50], r8

                     loc_5822:
0000000000005822         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005824         call       j_dcgettext                                 ; dcgettext
0000000000005829         mov        r10, qword [rsp+0x58+var_40]
000000000000582e         push       r10
0000000000005830         jmp        loc_5774
0000000000005835         align      8

                     loc_5838:
0000000000005838         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000583b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005842         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005847         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005849         call       j_dcgettext                                 ; dcgettext
000000000000584e         add        rsp, 0x28
0000000000005852         mov        rcx, rbx
0000000000005855         mov        rdi, rbp
0000000000005858         pop        rbx
0000000000005859         pop        rbp
000000000000585a         pop        r12
000000000000585c         pop        r13
000000000000585e         pop        r14
0000000000005860         pop        r15
0000000000005862         mov        rdx, rax
0000000000005865         mov        esi, 0x1
000000000000586a         xor        eax, eax
000000000000586c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005871         align      8

                     loc_5878:
0000000000005878         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000587c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005883         mov        rbx, qword [rbx]
0000000000005886         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000588b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000588d         call       j_dcgettext                                 ; dcgettext
0000000000005892         add        rsp, 0x28
0000000000005896         mov        r8, r12
0000000000005899         mov        rcx, rbx
000000000000589c         mov        rdi, rbp
000000000000589f         mov        rdx, rax
00000000000058a2         mov        esi, 0x1
00000000000058a7         pop        rbx
00000000000058a8         pop        rbp
00000000000058a9         pop        r12
00000000000058ab         pop        r13
00000000000058ad         pop        r14
00000000000058af         pop        r15
00000000000058b1         xor        eax, eax
00000000000058b3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000058b8         align      64

                     loc_58c0:
00000000000058c0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000058c4         mov        r12, qword [rbx+8]
00000000000058c8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000058cf         mov        rbx, qword [rbx]
00000000000058d2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058d7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058d9         call       j_dcgettext                                 ; dcgettext
00000000000058de         add        rsp, 0x28
00000000000058e2         mov        r9, r13
00000000000058e5         mov        r8, r12
00000000000058e8         mov        rcx, rbx
00000000000058eb         mov        rdi, rbp
00000000000058ee         mov        rdx, rax
00000000000058f1         pop        rbx
00000000000058f2         pop        rbp
00000000000058f3         pop        r12
00000000000058f5         pop        r13
00000000000058f7         pop        r14
00000000000058f9         pop        r15
00000000000058fb         mov        esi, 0x1
0000000000005900         xor        eax, eax
0000000000005902         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005907         align      16

                     loc_5910:
0000000000005910         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005917         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000591c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000591e         mov        r14, qword [rbx+0x18]
0000000000005922         mov        r13, qword [rbx+0x10]
0000000000005926         mov        r12, qword [rbx+8]
000000000000592a         mov        rbx, qword [rbx]
000000000000592d         call       j_dcgettext                                 ; dcgettext
0000000000005932         sub        rsp, 0x8

                     loc_5936:
0000000000005936         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005938         mov        rdx, rax
000000000000593b         mov        r9, r13
000000000000593e         mov        r8, r12
0000000000005941         mov        rcx, rbx
0000000000005944         mov        rdi, rbp
0000000000005947         mov        esi, 0x1
000000000000594c         xor        eax, eax
000000000000594e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005953         pop        rax
0000000000005954         pop        rdx
0000000000005955         add        rsp, 0x28
0000000000005959         pop        rbx
000000000000595a         pop        rbp
000000000000595b         pop        r12
000000000000595d         pop        r13
000000000000595f         pop        r14
0000000000005961         pop        r15
0000000000005963         ret
                        ; endp
0000000000005964         align      8

                     loc_5968:
0000000000005968         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000596c         lea        rsi, qword [aWrittenBySSSns_7758]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005973         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005978         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000597a         mov        r14, qword [rbx+0x18]
000000000000597e         mov        r13, qword [rbx+0x10]
0000000000005982         mov        r12, qword [rbx+8]
0000000000005986         mov        rbx, qword [rbx]
0000000000005989         call       j_dcgettext                                 ; dcgettext
000000000000598e         push       r15
0000000000005990         jmp        loc_5936
0000000000005992         align      8

                     loc_5998:
0000000000005998         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000599c         mov        r12, qword [rbx+0x28]
00000000000059a0         lea        rsi, qword [aWrittenBySSSns_7780]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000059a7         mov        r15, qword [rbx+0x20]
00000000000059ab         mov        r14, qword [rbx+0x18]
00000000000059af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059b4         mov        r13, qword [rbx+0x10]
00000000000059b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059ba         mov        rbx, qword [rbx]
00000000000059bd         mov        qword [rsp+0x58+var_58], r8
00000000000059c1         call       j_dcgettext                                 ; dcgettext
00000000000059c6         sub        rsp, 0x8
00000000000059ca         mov        r9, r13
00000000000059cd         push       r12
00000000000059cf         push       r15
00000000000059d1         push       r14

                     loc_59d3:
00000000000059d3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000059d8         mov        rcx, rbx
00000000000059db         mov        rdx, rax
00000000000059de         mov        rdi, rbp
00000000000059e1         mov        esi, 0x1
00000000000059e6         xor        eax, eax
00000000000059e8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000059ed         add        rsp, 0x20
00000000000059f1         add        rsp, 0x28
00000000000059f5         pop        rbx
00000000000059f6         pop        rbp
00000000000059f7         pop        r12
00000000000059f9         pop        r13
00000000000059fb         pop        r14
00000000000059fd         pop        r15
00000000000059ff         ret
                        ; endp

                     loc_5a00:
0000000000005a00         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000005a04         mov        r13, qword [rbx+0x30]
0000000000005a08         lea        rsi, qword [aWrittenBySSSns_77a8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000005a0f         mov        r12, qword [rbx+0x28]
0000000000005a13         mov        r15, qword [rbx+0x20]
0000000000005a17         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005a1c         mov        r14, qword [rbx+0x18]
0000000000005a20         mov        r8, qword [rbx+8]
0000000000005a24         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a26         mov        qword [rsp+0x58+var_50], r9
0000000000005a2b         mov        rbx, qword [rbx]
0000000000005a2e         mov        qword [rsp+0x58+var_58], r8
0000000000005a32         call       j_dcgettext                                 ; dcgettext
0000000000005a37         push       r13
0000000000005a39         push       r12
0000000000005a3b         push       r15
0000000000005a3d         push       r14
0000000000005a3f         mov        r9, qword [rsp+0x78+var_50]
0000000000005a44         jmp        loc_59d3
0000000000005a46         align      16

                     loc_5a50:
0000000000005a50         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005a54         mov        r9, qword [rbx+0x38]
0000000000005a58         mov        edx, 0x5
0000000000005a5d         mov        rax, qword [rbx+0x10]
0000000000005a61         mov        r8, qword [rbx+8]
0000000000005a65         lea        rsi, qword [aWrittenBySSSns_7840]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000005a6c         mov        r13, qword [rbx+0x30]
0000000000005a70         mov        r12, qword [rbx+0x28]
0000000000005a74         mov        r15, qword [rbx+0x20]
0000000000005a78         mov        r14, qword [rbx+0x18]
0000000000005a7c         mov        qword [rsp+0x58+var_40], r10
0000000000005a81         mov        qword [rsp+0x58+var_48], r9
0000000000005a86         mov        qword [rsp+0x58+var_58], rax
0000000000005a8a         mov        qword [rsp+0x58+var_50], r8
0000000000005a8f         mov        rbx, qword [rbx]
0000000000005a92         jmp        loc_5822
0000000000005a97         align      32                                          ; End of unwind block (FDE at 0x85d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005aa0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x86e8)
0000000000005aa3         cmp        qword [r8], 0x0
0000000000005aa7         je         j_version_etc_arn                           ; version_etc_arn

0000000000005aa9         nop        dword [rax]

                     loc_5ab0:
0000000000005ab0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005ab4         cmp        qword [r8+r9*8], 0x0
0000000000005ab9         jne        loc_5ab0

                     j_version_etc_arn:        // version_etc_arn
0000000000005abb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005ac0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x86e8), Begin of unwind block (FDE at 0x86fc)
0000000000005ac4         mov        r10, r8
0000000000005ac7         xor        r9d, r9d
0000000000005aca         mov        rax, qword [fs:0x28]
0000000000005ad3         mov        qword [rsp+0x68+var_10], rax
0000000000005ad8         xor        eax, eax
0000000000005ada         mov        r8, rsp
0000000000005add         nop        dword [rax]

                     loc_5ae0:
0000000000005ae0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005ae3         cmp        eax, 0x2f
0000000000005ae6         ja         loc_5b2a

0000000000005ae8         mov        r11d, eax
0000000000005aeb         add        r11, qword [r10+0x10]
0000000000005aef         add        eax, 0x8
0000000000005af2         mov        dword [r10], eax

                     loc_5af5:
0000000000005af5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005af8         test       rax, rax
0000000000005afb         mov        qword [r8+r9*8], rax
0000000000005aff         je         loc_5b0b

0000000000005b01         add        r9, 0x1
0000000000005b05         cmp        r9, 0xa
0000000000005b09         jne        loc_5ae0

                     loc_5b0b:
0000000000005b0b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005b10         mov        rax, qword [rsp+0x68+var_10]
0000000000005b15         xor        rax, qword [fs:0x28]
0000000000005b1e         jne        loc_5b25

0000000000005b20         add        rsp, 0x68
0000000000005b24         ret
                        ; endp

                     loc_5b25:
0000000000005b25         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_5b2a:
0000000000005b2a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000005b2e         lea        rax, qword [r11+8]
0000000000005b32         mov        qword [r10+8], rax
0000000000005b36         jmp        loc_5af5
0000000000005b38         align      64                                          ; End of unwind block (FDE at 0x86fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005b40         push       rbp                                         ; Begin of unwind block (FDE at 0x8718), CODE XREF=main+386
0000000000005b41         push       rbx
0000000000005b42         mov        r10d, 0x20
0000000000005b48         xor        r11d, r11d
0000000000005b4b         sub        rsp, 0xb8
0000000000005b52         mov        rax, qword [fs:0x28]
0000000000005b5b         mov        qword [rsp+0xc8+var_50], rax
0000000000005b60         xor        eax, eax
0000000000005b62         lea        rax, qword [rsp+0xc8+arg_0]
0000000000005b6a         mov        qword [rsp+0xc8+var_28], r8
0000000000005b72         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000005b7a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000005b7f         mov        qword [rsp+0xc8+var_20], r9
0000000000005b87         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000005b8f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005b94         lea        rax, qword [rsp+0xc8+var_48]
0000000000005b9c         xor        r9d, r9d
0000000000005b9f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005ba4         mov        rbp, rax
0000000000005ba7         nop        word [rax+rax]

                     loc_5bb0:
0000000000005bb0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005bb4         ja         loc_5c0c

0000000000005bb6         mov        eax, r10d
0000000000005bb9         mov        r11d, 0x1
0000000000005bbf         add        r10d, 0x8
0000000000005bc3         add        rax, rbp

                     loc_5bc6:
0000000000005bc6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005bc9         test       rax, rax
0000000000005bcc         mov        qword [r8+r9*8], rax
0000000000005bd0         je         loc_5bdc

0000000000005bd2         add        r9, 0x1
0000000000005bd6         cmp        r9, 0xa
0000000000005bda         jne        loc_5bb0

                     loc_5bdc:
0000000000005bdc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000005bdf         jne        loc_5c05

                     loc_5be1:
0000000000005be1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005be6         mov        rax, qword [rsp+0xc8+var_50]
0000000000005beb         xor        rax, qword [fs:0x28]
0000000000005bf4         jne        loc_5c00

0000000000005bf6         add        rsp, 0xb8
0000000000005bfd         pop        rbx
0000000000005bfe         pop        rbp
0000000000005bff         ret
                        ; endp

                     loc_5c00:
0000000000005c00         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5c05:
0000000000005c05         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000005c0a         jmp        loc_5be1

                     loc_5c0c:
0000000000005c0c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000005c0f         add        rbx, 0x8
0000000000005c13         jmp        loc_5bc6
0000000000005c15         align      32                                          ; End of unwind block (FDE at 0x8718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005c20         push       rbx                                         ; Begin of unwind block (FDE at 0x8744)
0000000000005c21         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005c28         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c2d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c2f         call       j_dcgettext                                 ; dcgettext
0000000000005c34         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000005c3b         mov        rsi, rax
0000000000005c3e         mov        edi, 0x1
0000000000005c43         xor        eax, eax
0000000000005c45         call       j___printf_chk                              ; __printf_chk
0000000000005c4a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005c51         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c56         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c58         call       j_dcgettext                                 ; dcgettext
0000000000005c5d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005c64         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6928
0000000000005c6b         mov        rsi, rax
0000000000005c6e         mov        edi, 0x1
0000000000005c73         xor        eax, eax
0000000000005c75         call       j___printf_chk                              ; __printf_chk
0000000000005c7a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005c81         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005c88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c8a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c8f         call       j_dcgettext                                 ; dcgettext
0000000000005c94         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005c97         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005c9a         pop        rbx
0000000000005c9b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005ca0         push       rbx                                         ; End of unwind block (FDE at 0x8744), Begin of unwind block (FDE at 0x8764), CODE XREF=main+1892, main+2084, main+2135, main+2941, main+3357, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005ca1         mov        rbx, rdi
0000000000005ca4         call       j_malloc                                    ; malloc
0000000000005ca9         test       rax, rax
0000000000005cac         jne        loc_5cb3

0000000000005cae         test       rbx, rbx
0000000000005cb1         jne        loc_5cb5

                     loc_5cb3:
0000000000005cb3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005cb4         ret
                        ; endp

                     loc_5cb5:
0000000000005cb5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5cba:
0000000000005cba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8764)
                     xnmalloc:
0000000000005cc0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8780)
0000000000005cc3         mul        rsi
0000000000005cc6         mov        rdi, rax
0000000000005cc9         seto       al
0000000000005ccc         test       rdi, rdi
0000000000005ccf         js         loc_5cdb

0000000000005cd1         movzx      eax, al
0000000000005cd4         test       rax, rax
0000000000005cd7         jne        loc_5cdb

0000000000005cd9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_5cdb:
0000000000005cdb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000005cdf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ce4:
0000000000005ce4         nop                                                    ; End of unwind block (FDE at 0x8780)
0000000000005ce6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005cf0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8794)
                        ; endp
0000000000005cf2         align      256                                         ; End of unwind block (FDE at 0x8794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005d00         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x87a8), CODE XREF=main+1610, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005d03         push       rbx
0000000000005d04         mov        rbx, rsi
0000000000005d07         jne        loc_5d0e

0000000000005d09         test       rdi, rdi
0000000000005d0c         jne        loc_5d28

                     loc_5d0e:
0000000000005d0e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005d11         call       j_realloc                                   ; realloc
0000000000005d16         test       rax, rax
0000000000005d19         jne        loc_5d20

0000000000005d1b         test       rbx, rbx
0000000000005d1e         jne        loc_5d31

                     loc_5d20:
0000000000005d20         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005d21         ret
                        ; endp
0000000000005d22         align      8

                     loc_5d28:
0000000000005d28         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000005d2d         xor        eax, eax
0000000000005d2f         pop        rbx
0000000000005d30         ret
                        ; endp

                     loc_5d31:
0000000000005d31         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d36:
0000000000005d36         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x87a8)
                     xnrealloc:
0000000000005d40         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x87cc)
0000000000005d43         mul        rdx
0000000000005d46         mov        rsi, rax
0000000000005d49         seto       al
0000000000005d4c         test       rsi, rsi
0000000000005d4f         js         loc_5d5b

0000000000005d51         movzx      eax, al
0000000000005d54         test       rax, rax
0000000000005d57         jne        loc_5d5b

0000000000005d59         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_5d5b:
0000000000005d5b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000005d5f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d64:
0000000000005d64         nop                                                    ; End of unwind block (FDE at 0x87cc)
0000000000005d66         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005d70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x87e0)
0000000000005d73         mov        r9, rdx
0000000000005d76         mov        rcx, qword [rsi]
0000000000005d79         je         loc_5db0

0000000000005d7b         xor        edx, edx
0000000000005d7d         movabs     rax, 0x5555555555555554
0000000000005d87         div        r9
0000000000005d8a         cmp        rax, rcx
0000000000005d8d         jbe        loc_5dcb

0000000000005d8f         mov        rax, rcx
0000000000005d92         shr        rax, 0x1
0000000000005d95         lea        rcx, qword [rax+rcx+1]

                     loc_5d9a:
0000000000005d9a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005d9d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005da1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005da4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005da9         align      16

                     loc_5db0:
0000000000005db0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005db3         je         loc_5dd8

                     loc_5db5:
0000000000005db5         mov        rax, rcx                                    ; CODE XREF=sub_5dd4+28
0000000000005db8         mul        r9
0000000000005dbb         seto       dl
0000000000005dbe         test       rax, rax
0000000000005dc1         movzx      edx, dl
0000000000005dc4         js         loc_5dcb

0000000000005dc6         test       rdx, rdx
0000000000005dc9         je         loc_5d9a

                     loc_5dcb:
0000000000005dcb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005dcf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5dd4:
0000000000005dd4         nop        dword [rax]
                        ; endp

                     loc_5dd8:
0000000000005dd8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005dda         mov        eax, 0x80
0000000000005ddf         xor        r8d, r8d
0000000000005de2         div        r9
0000000000005de5         test       rax, rax
0000000000005de8         sete       r8b
0000000000005dec         lea        rcx, qword [r8+rax]
0000000000005df0         jmp        loc_5db5
0000000000005df2         align      512                                         ; End of unwind block (FDE at 0x87e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005e00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x87f8)
0000000000005e03         mov        rax, qword [rsi]
0000000000005e06         je         loc_5e30

0000000000005e08         movabs     rdx, 0x5555555555555553
0000000000005e12         cmp        rax, rdx
0000000000005e15         ja         loc_5e41

0000000000005e17         mov        rdx, rax
0000000000005e1a         shr        rdx, 0x1
0000000000005e1d         lea        rax, qword [rdx+rax+1]

                     loc_5e22:
0000000000005e22         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005e25         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005e28         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005e2d         align      16

                     loc_5e30:
0000000000005e30         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005e33         mov        edx, 0x80
0000000000005e38         cmove      rax, rdx
0000000000005e3c         test       rax, rax
0000000000005e3f         jns        loc_5e22

                     loc_5e41:
0000000000005e41         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005e45         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e4a:
0000000000005e4a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x87f8)
                     xzalloc:
0000000000005e50         push       rbx                                         ; Begin of unwind block (FDE at 0x8810)
0000000000005e51         mov        rbx, rdi
0000000000005e54         call       xmalloc                                     ; xmalloc
0000000000005e59         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005e5c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005e5e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005e61         pop        rbx
0000000000005e62         jmp        j_memset                                    ; memset
                        ; endp
0000000000005e67         align      16                                          ; End of unwind block (FDE at 0x8810)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005e70         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x882c)
0000000000005e73         sub        rsp, 0x8
0000000000005e77         mul        rsi
0000000000005e7a         seto       dl
0000000000005e7d         test       rax, rax
0000000000005e80         js         loc_5e99

0000000000005e82         movzx      edx, dl
0000000000005e85         test       rdx, rdx
0000000000005e88         jne        loc_5e99

0000000000005e8a         call       j_calloc                                    ; calloc
0000000000005e8f         test       rax, rax
0000000000005e92         je         loc_5e99

0000000000005e94         add        rsp, 0x8
0000000000005e98         ret
                        ; endp

                     loc_5e99:
0000000000005e99         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e9e:
0000000000005e9e         nop                                                    ; End of unwind block (FDE at 0x882c)
                        ; endp

                     xmemdup:
0000000000005ea0         push       rbp                                         ; Begin of unwind block (FDE at 0x8848), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005ea1         push       rbx
0000000000005ea2         mov        rbp, rdi
0000000000005ea5         mov        rdi, rsi
0000000000005ea8         mov        rbx, rsi
0000000000005eab         sub        rsp, 0x8
0000000000005eaf         call       xmalloc                                     ; xmalloc
0000000000005eb4         add        rsp, 0x8
0000000000005eb8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005ebb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005ebe         pop        rbx
0000000000005ebf         pop        rbp
0000000000005ec0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005ec3         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005ec8         align      16                                          ; End of unwind block (FDE at 0x8848)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005ed0         push       rbx                                         ; Begin of unwind block (FDE at 0x8870)
0000000000005ed1         mov        rbx, rdi
0000000000005ed4         call       j_strlen                                    ; strlen
0000000000005ed9         mov        rdi, rbx
0000000000005edc         lea        rsi, qword [rax+1]
0000000000005ee0         pop        rbx
0000000000005ee1         jmp        xmemdup                                     ; xmemdup
0000000000005ee3         align      16                                          ; End of unwind block (FDE at 0x8870)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005ef0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x888c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005ef7         sub        rsp, 0x8
0000000000005efb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f00         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f02         call       j_dcgettext                                 ; dcgettext
0000000000005f07         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005f0d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x69be
0000000000005f14         mov        rcx, rax
0000000000005f17         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005f19         xor        eax, eax
0000000000005f1b         call       j_error                                     ; error
0000000000005f20         call       j_abort                                     ; abort
                        ; endp
0000000000005f25         align      16                                          ; End of unwind block (FDE at 0x888c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000005f30         push       r15                                         ; Begin of unwind block (FDE at 0x88a4), CODE XREF=xdectoumax+23
0000000000005f32         push       r14
0000000000005f34         mov        r15, rcx
0000000000005f37         push       r13
0000000000005f39         push       r12
0000000000005f3b         mov        r14, rdx
0000000000005f3e         push       rbp
0000000000005f3f         push       rbx
0000000000005f40         mov        edx, esi
0000000000005f42         xor        esi, esi
0000000000005f44         mov        r12, rdi
0000000000005f47         mov        r13, r9
0000000000005f4a         sub        rsp, 0x18
0000000000005f4e         mov        rcx, rsp
0000000000005f51         mov        ebx, dword [rsp+0x48+arg_0]
0000000000005f55         mov        rax, qword [fs:0x28]
0000000000005f5e         mov        qword [rsp+0x48+var_40], rax
0000000000005f63         xor        eax, eax
0000000000005f65         call       xstrtoumax                                  ; xstrtoumax
0000000000005f6a         test       eax, eax
0000000000005f6c         jne        loc_6000

0000000000005f72         mov        rbp, qword [rsp+0x48+var_48]
0000000000005f76         cmp        rbp, r14
0000000000005f79         jb         loc_5f80

0000000000005f7b         cmp        rbp, r15
0000000000005f7e         jbe        loc_5fd4

                     loc_5f80:
0000000000005f80         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000005f85         cmp        rbp, 0x40000000
0000000000005f8c         mov        r14, rax
0000000000005f8f         sbb        eax, eax
0000000000005f91         and        eax, 0xffffffd7
0000000000005f94         add        eax, 0x4b
0000000000005f97         mov        dword [r14], eax

                     loc_5f9a:
0000000000005f9a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
0000000000005f9d         call       quote                                       ; quote
0000000000005fa2         mov        esi, dword [r14]
0000000000005fa5         mov        r8, rax
0000000000005fa8         mov        eax, 0x0
0000000000005fad         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000005fb4         mov        rcx, r13
0000000000005fb7         cmp        esi, 0x16
0000000000005fba         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000005fbd         test       ebx, ebx
0000000000005fbf         mov        eax, 0x1
0000000000005fc4         cmove      ebx, eax
0000000000005fc7         xor        eax, eax
0000000000005fc9         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000005fcb         call       j_error                                     ; error
0000000000005fd0         mov        rbp, qword [rsp+0x48+var_48]

                     loc_5fd4:
0000000000005fd4         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000005fd9         xor        rdx, qword [fs:0x28]
0000000000005fe2         mov        rax, rbp
0000000000005fe5         jne        loc_602b

0000000000005fe7         add        rsp, 0x18
0000000000005feb         pop        rbx
0000000000005fec         pop        rbp
0000000000005fed         pop        r12
0000000000005fef         pop        r13
0000000000005ff1         pop        r14
0000000000005ff3         pop        r15
0000000000005ff5         ret
                        ; endp
0000000000005ff6         align      8192

                     loc_6000:
0000000000006000         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000006002         call       j___errno_location                          ; __errno_location
0000000000006007         cmp        ebp, 0x1
000000000000600a         mov        r14, rax
000000000000600d         je         loc_6020

000000000000600f         cmp        ebp, 0x3
0000000000006012         jne        loc_5f9a

0000000000006014         mov        dword [rax], 0x0
000000000000601a         jmp        loc_5f9a
000000000000601f         align      32

                     loc_6020:
0000000000006020         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000006026         jmp        loc_5f9a

                     loc_602b:
000000000000602b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp

                     xdectoumax:
0000000000006030         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x88a4), Begin of unwind block (FDE at 0x88f0), CODE XREF=string_to_integer+54
0000000000006034         push       r9
0000000000006036         mov        r9, r8
0000000000006039         mov        r8, rcx
000000000000603c         mov        rcx, rdx
000000000000603f         mov        rdx, rsi
0000000000006042         mov        esi, 0xa
0000000000006047         call       xnumtoumax                                  ; xnumtoumax
000000000000604c         add        rsp, 0x18
0000000000006050         ret
                        ; endp
0000000000006051         align      32                                          ; End of unwind block (FDE at 0x88f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000006060         push       r15                                         ; Begin of unwind block (FDE at 0x890c), CODE XREF=xnumtoumax+53
0000000000006062         push       r14
0000000000006064         push       r13
0000000000006066         push       r12
0000000000006068         push       rbp
0000000000006069         push       rbx
000000000000606a         sub        rsp, 0x28
000000000000606e         mov        rax, qword [fs:0x28]
0000000000006077         mov        qword [rsp+0x58+var_40], rax
000000000000607c         xor        eax, eax
000000000000607e         cmp        edx, 0x24
0000000000006081         ja         loc_63e5

0000000000006087         lea        rax, qword [rsp+0x58+var_48]
000000000000608c         mov        r15, rsi
000000000000608f         test       rsi, rsi
0000000000006092         mov        rbp, rdi
0000000000006095         mov        dword [rsp+0x58+var_50], edx
0000000000006099         mov        r14, rcx
000000000000609c         mov        r13, r8
000000000000609f         cmove      r15, rax
00000000000060a3         call       j___errno_location                          ; __errno_location
00000000000060a8         mov        dword [rax], 0x0
00000000000060ae         mov        r12, rax
00000000000060b1         movzx      ebx, byte [rbp]
00000000000060b5         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000060ba         mov        edx, dword [rsp+0x58+var_50]
00000000000060be         mov        rsi, qword [rax]
00000000000060c1         mov        rax, rbp
00000000000060c4         jmp        loc_60d7
00000000000060c6         align      16

                     loc_60d0:
00000000000060d0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
00000000000060d4         movzx      ebx, byte [rax]

                     loc_60d7:
00000000000060d7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
00000000000060da         test       byte [rsi+rcx*2+1], 0x20
00000000000060df         jne        loc_60d0

00000000000060e1         cmp        bl, 0x2d
00000000000060e4         je         loc_6138

00000000000060e6         xor        ecx, ecx
00000000000060e8         mov        rsi, r15
00000000000060eb         mov        rdi, rbp
00000000000060ee         call       j___strtoul_internal                        ; __strtoul_internal
00000000000060f3         mov        rcx, qword [r15]
00000000000060f6         mov        rbx, rax
00000000000060f9         cmp        rcx, rbp
00000000000060fc         je         loc_6128

00000000000060fe         mov        eax, dword [r12]
0000000000006102         test       eax, eax
0000000000006104         je         loc_6168

0000000000006106         cmp        eax, 0x22
0000000000006109         mov        ebp, 0x1
000000000000610e         jne        loc_6138

                     loc_6110:
0000000000006110         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000006113         je         loc_611e

0000000000006115         movzx      r12d, byte [rcx]
0000000000006119         test       r12b, r12b
000000000000611c         jne        loc_6197

                     loc_611e:
000000000000611e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000006121         jmp        loc_613d
0000000000006123         align      8

                     loc_6128:
0000000000006128         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
000000000000612b         mov        qword [rsp+0x58+var_50], rcx
0000000000006130         jne        loc_6170

0000000000006132         nop        word [rax+rax]

                     loc_6138:
0000000000006138         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_613d:
000000000000613d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000006142         xor        rdi, qword [fs:0x28]
000000000000614b         mov        eax, ebp
000000000000614d         jne        loc_63e0

0000000000006153         add        rsp, 0x28
0000000000006157         pop        rbx
0000000000006158         pop        rbp
0000000000006159         pop        r12
000000000000615b         pop        r13
000000000000615d         pop        r14
000000000000615f         pop        r15
0000000000006161         ret
                        ; endp
0000000000006162         align      8

                     loc_6168:
0000000000006168         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000000616a         jmp        loc_6110
000000000000616c         align      16

                     loc_6170:
0000000000006170         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000006175         test       r12b, r12b
0000000000006178         je         loc_6138

000000000000617a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000617e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006181         xor        ebp, ebp
0000000000006183         call       j_strchr                                    ; strchr
0000000000006188         test       rax, rax
000000000000618b         mov        ebx, 0x1
0000000000006190         mov        rcx, qword [rsp+0x58+var_50]
0000000000006195         je         loc_6138

                     loc_6197:
0000000000006197         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000619b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000619e         mov        qword [rsp+0x58+var_50], rcx
00000000000061a3         call       j_strchr                                    ; strchr
00000000000061a8         test       rax, rax
00000000000061ab         mov        rcx, qword [rsp+0x58+var_50]
00000000000061b0         je         loc_627c

00000000000061b6         lea        eax, dword [r12-0x45]
00000000000061bb         cmp        al, 0x2f
00000000000061bd         ja         loc_6210

00000000000061bf         movabs     rdx, 0x814400308945
00000000000061c9         bt         rdx, rax
00000000000061cd         jae        loc_6210

00000000000061cf         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
00000000000061d4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000061d7         mov        qword [rsp+0x58+var_50], rcx
00000000000061dc         call       j_strchr                                    ; strchr
00000000000061e1         test       rax, rax
00000000000061e4         mov        rcx, qword [rsp+0x58+var_50]
00000000000061e9         je         loc_6210

00000000000061eb         movzx      eax, byte [rcx+1]
00000000000061ef         cmp        al, 0x44
00000000000061f1         je         loc_61ff

00000000000061f3         cmp        al, 0x69
00000000000061f5         je         loc_63c8

00000000000061fb         cmp        al, 0x42
00000000000061fd         jne        loc_6210

                     loc_61ff:
00000000000061ff         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000006204         mov        esi, 0x3e8
0000000000006209         jmp        loc_621a
000000000000620b         align      16

                     loc_6210:
0000000000006210         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000006215         mov        esi, 0x400

                     loc_621a:
000000000000621a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
000000000000621e         cmp        r12b, 0x35
0000000000006222         ja         loc_627c

0000000000006224         lea        rdx, qword [switch_table_7988]              ; switch_table_7988
000000000000622b         movzx      r12d, r12b
000000000000622f         movsxd     rax, dword [rdx+r12*4]
0000000000006233         add        rax, rdx
0000000000006236         jmp        rax                                         ; switch statement using table at 0x7988, with 54 cases, 0x6238,0x6260,0x627c,0x6287,0x629d,0x62b4,0x62da,0x62ff,0x631f,0x6340,0x6363,0x6386,0x639c

                     loc_6238:
0000000000006238         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
000000000000623b         mul        rsi
000000000000623e         jo         loc_6431

0000000000006244         xor        r8d, r8d

                     loc_6247:
0000000000006247         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
000000000000624a         jo         loc_6422

0000000000006250         mov        rbx, rax

                     loc_6253:
0000000000006253         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000006256         nop        word [cs:rax+rax]

                     loc_6260:
0000000000006260         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000006263         mov        eax, ebp
0000000000006265         add        rcx, rdi
0000000000006268         or         eax, 0x2
000000000000626b         mov        qword [r15], rcx
000000000000626e         cmp        byte [rcx], 0x0
0000000000006271         mov        qword [r14], rbx
0000000000006274         cmovne     ebp, eax
0000000000006277         jmp        loc_613d

                     loc_627c:
000000000000627c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000000627f         or         ebp, 0x2
0000000000006282         jmp        loc_613d

                     loc_6287:
0000000000006287         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000628c         mov        rax, rdx
000000000000628f         mul        rbx
0000000000006292         jo         loc_632e

0000000000006298         add        rbx, rbx
000000000000629b         jmp        loc_6260

                     loc_629d:
000000000000629d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
00000000000062a2         mov        rax, rdx
00000000000062a5         mul        rbx
00000000000062a8         jo         loc_632e

00000000000062ae         shl        rbx, 0x9
00000000000062b2         jmp        loc_6260

                     loc_62b4:
00000000000062b4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
00000000000062ba         xor        r9d, r9d
00000000000062bd         nop        dword [rax]

                     loc_62c0:
00000000000062c0         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
00000000000062c3         mul        rsi
00000000000062c6         mov        rbx, rax
00000000000062c9         jo         loc_645e

                     loc_62cf:
00000000000062cf         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
00000000000062d3         jne        loc_62c0

                     loc_62d5:
00000000000062d5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
00000000000062d8         jmp        loc_6260

                     loc_62da:
00000000000062da         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
00000000000062e0         xor        r9d, r9d
00000000000062e3         nop        dword [rax+rax]

                     loc_62e8:
00000000000062e8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
00000000000062eb         mul        rsi
00000000000062ee         mov        rbx, rax
00000000000062f1         jo         loc_6440

                     loc_62f7:
00000000000062f7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
00000000000062fb         jne        loc_62e8

00000000000062fd         jmp        loc_62d5

                     loc_62ff:
00000000000062ff         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000006305         xor        r9d, r9d

                     loc_6308:
0000000000006308         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
000000000000630b         mul        rsi
000000000000630e         mov        rbx, rax
0000000000006311         jo         loc_6413

                     loc_6317:
0000000000006317         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
000000000000631b         jne        loc_6308

000000000000631d         jmp        loc_62d5

                     loc_631f:
000000000000631f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000006322         mul        rsi
0000000000006325         mov        rbx, rax
0000000000006328         jno        loc_6260

                     loc_632e:
000000000000632e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000006333         or         rbx, 0xffffffffffffffff
0000000000006337         jmp        loc_6260
000000000000633c         align      64

                     loc_6340:
0000000000006340         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000006346         xor        r9d, r9d

                     loc_6349:
0000000000006349         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
000000000000634c         mul        rsi
000000000000634f         mov        rbx, rax
0000000000006352         jo         loc_644f

                     loc_6358:
0000000000006358         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000000635c         jne        loc_6349

000000000000635e         jmp        loc_62d5

                     loc_6363:
0000000000006363         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000006369         xor        r9d, r9d

                     loc_636c:
000000000000636c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000000636f         mul        rsi
0000000000006372         mov        rbx, rax
0000000000006375         jo         loc_6404

                     loc_637b:
000000000000637b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000000637f         jne        loc_636c

0000000000006381         jmp        loc_62d5

                     loc_6386:
0000000000006386         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000638b         mov        rax, rdx
000000000000638e         mul        rbx
0000000000006391         jo         loc_632e

0000000000006393         shl        rbx, 0xa
0000000000006397         jmp        loc_6260

                     loc_639c:
000000000000639c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000000639f         mul        rsi
00000000000063a2         jo         loc_646d

00000000000063a8         xor        r8d, r8d

                     loc_63ab:
00000000000063ab         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
00000000000063ae         jno        loc_6247

00000000000063b4         mov        r8d, 0x1
00000000000063ba         or         rax, 0xffffffffffffffff
00000000000063be         jmp        loc_6247
00000000000063c3         align      8

                     loc_63c8:
00000000000063c8         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
00000000000063ca         cmp        byte [rcx+2], 0x42
00000000000063ce         mov        esi, 0x400
00000000000063d3         sete       dil
00000000000063d7         lea        edi, dword [rdi+rdi+1]
00000000000063db         jmp        loc_621a

                     loc_63e0:
00000000000063e0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_63e5:
00000000000063e5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
00000000000063ec         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000063f3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000063fa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000063ff         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_6404:
0000000000006404         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
000000000000640a         or         rbx, 0xffffffffffffffff
000000000000640e         jmp        loc_637b

                     loc_6413:
0000000000006413         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000006419         or         rbx, 0xffffffffffffffff
000000000000641d         jmp        loc_6317

                     loc_6422:
0000000000006422         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000006428         or         rbx, 0xffffffffffffffff
000000000000642c         jmp        loc_6253

                     loc_6431:
0000000000006431         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000006435         mov        r8d, 0x1
000000000000643b         jmp        loc_6247

                     loc_6440:
0000000000006440         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000006446         or         rbx, 0xffffffffffffffff
000000000000644a         jmp        loc_62f7

                     loc_644f:
000000000000644f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000006455         or         rbx, 0xffffffffffffffff
0000000000006459         jmp        loc_6358

                     loc_645e:
000000000000645e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000006464         or         rbx, 0xffffffffffffffff
0000000000006468         jmp        loc_62cf

                     loc_646d:
000000000000646d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000006473         or         rax, 0xffffffffffffffff
0000000000006477         jmp        loc_63ab
000000000000647c         align      128                                         ; End of unwind block (FDE at 0x890c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006480         push       r13                                         ; Begin of unwind block (FDE at 0x895c), CODE XREF=sub_41c0+534
0000000000006482         push       r12
0000000000006484         mov        r13, rsi
0000000000006487         push       rbp
0000000000006488         push       rbx
0000000000006489         mov        rbx, rdi
000000000000648c         mov        r12, rdx
000000000000648f         sub        rsp, 0x18
0000000000006493         mov        rax, qword [fs:0x28]
000000000000649c         mov        qword [rsp+0x38+var_30], rax
00000000000064a1         xor        eax, eax
00000000000064a3         lea        rax, qword [rsp+0x38+var_34]
00000000000064a8         test       rdi, rdi
00000000000064ab         cmove      rbx, rax
00000000000064af         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000064b2         call       j_mbrtowc                                   ; mbrtowc
00000000000064b7         cmp        rax, 0xfffffffffffffffd
00000000000064bb         mov        rbp, rax
00000000000064be         jbe        loc_64e0

00000000000064c0         test       r12, r12
00000000000064c3         je         loc_64e0

00000000000064c5         xor        edi, edi
00000000000064c7         call       hard_locale                                 ; hard_locale
00000000000064cc         test       al, al
00000000000064ce         jne        loc_64e0

00000000000064d0         movzx      eax, byte [r13]
00000000000064d5         mov        ebp, 0x1
00000000000064da         mov        dword [rbx], eax
00000000000064dc         nop        dword [rax]

                     loc_64e0:
00000000000064e0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000064e5         xor        rdx, qword [fs:0x28]
00000000000064ee         mov        rax, rbp
00000000000064f1         jne        loc_64fe

00000000000064f3         add        rsp, 0x18
00000000000064f7         pop        rbx
00000000000064f8         pop        rbp
00000000000064f9         pop        r12
00000000000064fb         pop        r13
00000000000064fd         ret
                        ; endp

                     loc_64fe:
00000000000064fe         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006503         align      16                                          ; End of unwind block (FDE at 0x895c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006510         push       r12                                         ; Begin of unwind block (FDE at 0x899c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006512         push       rbp
0000000000006513         mov        rbp, rdi
0000000000006516         push       rbx
0000000000006517         call       j___fpending                                ; __fpending
000000000000651c         mov        ebx, dword [rbp]
000000000000651f         mov        rdi, rbp
0000000000006522         mov        r12, rax
0000000000006525         call       rpl_fclose                                  ; rpl_fclose
000000000000652a         and        ebx, 0x20
000000000000652d         test       ebx, ebx
000000000000652f         jne        loc_6548

0000000000006531         test       eax, eax
0000000000006533         je         loc_653f

0000000000006535         test       r12, r12
0000000000006538         mov        eax, 0xffffffff
000000000000653d         je         loc_6578

                     loc_653f:
000000000000653f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006540         pop        rbp
0000000000006541         pop        r12
0000000000006543         ret
                        ; endp
0000000000006544         align      8

                     loc_6548:
0000000000006548         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000654a         jne        loc_6568

000000000000654c         call       j___errno_location                          ; __errno_location
0000000000006551         mov        dword [rax], 0x0
0000000000006557         mov        eax, 0xffffffff
000000000000655c         pop        rbx
000000000000655d         pop        rbp
000000000000655e         pop        r12
0000000000006560         ret
                        ; endp
0000000000006561         align      8

                     loc_6568:
0000000000006568         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006569         mov        eax, 0xffffffff
000000000000656e         pop        rbp
000000000000656f         pop        r12
0000000000006571         ret
                        ; endp
0000000000006572         align      8

                     loc_6578:
0000000000006578         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000657d         cmp        dword [rax], 0x9
0000000000006580         pop        rbx
0000000000006581         pop        rbp
0000000000006582         pop        r12
0000000000006584         setne      al
0000000000006587         movzx      eax, al
000000000000658a         neg        eax
000000000000658c         ret
                        ; endp
000000000000658d         align      16                                          ; End of unwind block (FDE at 0x899c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006590         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x89ec), CODE XREF=rpl_mbrtowc+71
0000000000006594         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006596         call       j_setlocale                                 ; setlocale
000000000000659b         mov        rdx, rax
000000000000659e         mov        eax, 0x1
00000000000065a3         test       rdx, rdx
00000000000065a6         je         loc_65c5

00000000000065a8         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x7a6b
00000000000065af         mov        ecx, 0x2
00000000000065b4         mov        rsi, rdx
00000000000065b7         rep  cmpsb byte [rsi], byte [rdi]
00000000000065b9         seta       cl
00000000000065bc         sbb        cl, 0x0
00000000000065bf         xor        eax, eax
00000000000065c1         test       cl, cl
00000000000065c3         jne        loc_65d0

                     loc_65c5:
00000000000065c5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000065c9         ret
                        ; endp
00000000000065ca         align      16

                     loc_65d0:
00000000000065d0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000065d7         mov        ecx, 0x6
00000000000065dc         mov        rsi, rdx
00000000000065df         rep  cmpsb byte [rsi], byte [rdi]
00000000000065e1         seta       al
00000000000065e4         sbb        al, 0x0
00000000000065e6         test       al, al
00000000000065e8         setne      al
00000000000065eb         add        rsp, 0x8
00000000000065ef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000065f0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x89ec), Begin of unwind block (FDE at 0x8a0c), CODE XREF=gettext_quote.part.1+11
00000000000065f4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000065f9         call       j_nl_langinfo                               ; nl_langinfo
00000000000065fe         test       rax, rax
0000000000006601         je         loc_6620

0000000000006603         cmp        byte [rax], 0x0
0000000000006606         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000660d         cmove      rax, rdx
0000000000006611         add        rsp, 0x8
0000000000006615         ret
                        ; endp
0000000000006616         align      32

                     loc_6620:
0000000000006620         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006627         add        rsp, 0x8
000000000000662b         ret
                        ; endp
000000000000662c         align      16                                          ; End of unwind block (FDE at 0x8a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006630         push       r12                                         ; Begin of unwind block (FDE at 0x8a2c), CODE XREF=close_stream+21
0000000000006632         push       rbp
0000000000006633         push       rbx
0000000000006634         mov        rbx, rdi
0000000000006637         call       j_fileno                                    ; fileno
000000000000663c         test       eax, eax
000000000000663e         mov        rdi, rbx
0000000000006641         js         loc_6697

0000000000006643         call       j___freading                                ; __freading
0000000000006648         test       eax, eax
000000000000664a         jne        loc_6678

                     loc_664c:
000000000000664c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000664f         call       rpl_fflush                                  ; rpl_fflush
0000000000006654         test       eax, eax
0000000000006656         je         loc_6694

0000000000006658         call       j___errno_location                          ; __errno_location
000000000000665d         mov        r12d, dword [rax]
0000000000006660         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006663         mov        rbp, rax
0000000000006666         call       j_fclose                                    ; fclose
000000000000666b         test       r12d, r12d
000000000000666e         jne        loc_66a0

                     loc_6670:
0000000000006670         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006671         pop        rbp
0000000000006672         pop        r12
0000000000006674         ret
                        ; endp
0000000000006675         align      8

                     loc_6678:
0000000000006678         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000667b         call       j_fileno                                    ; fileno
0000000000006680         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006682         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006687         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006689         call       j_lseek                                     ; lseek
000000000000668e         cmp        rax, 0xffffffffffffffff
0000000000006692         jne        loc_664c

                     loc_6694:
0000000000006694         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6697:
0000000000006697         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006698         pop        rbp
0000000000006699         pop        r12
000000000000669b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_66a0:
00000000000066a0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000066a4         mov        eax, 0xffffffff
00000000000066a9         jmp        loc_6670
00000000000066ab         align      16                                          ; End of unwind block (FDE at 0x8a2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000066b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8a64), CODE XREF=rpl_fclose+31
00000000000066b3         push       rbx
00000000000066b4         mov        rbx, rdi
00000000000066b7         je         loc_66ca

00000000000066b9         call       j___freading                                ; __freading
00000000000066be         test       eax, eax
00000000000066c0         je         loc_66ca

00000000000066c2         test       dword [rbx], 0x100
00000000000066c8         jne        loc_66d8

                     loc_66ca:
00000000000066ca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000066cd         pop        rbx
00000000000066ce         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000066d3         align      8

                     loc_66d8:
00000000000066d8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000066db         mov        edx, 0x1
00000000000066e0         xor        esi, esi
00000000000066e2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000066e7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000066ea         pop        rbx
00000000000066eb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000066f0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x8a64), Begin of unwind block (FDE at 0x8a84), CODE XREF=rpl_fflush+50
00000000000066f4         cmp        qword [rdi+0x10], rax
00000000000066f8         je         loc_6700

                     j_j_fseeko:        // fseeko
00000000000066fa         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000066ff         align      256

                     loc_6700:
0000000000006700         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006704         cmp        qword [rdi+0x28], rax
0000000000006708         jne        j_j_fseeko                                  ; fseeko

000000000000670a         cmp        qword [rdi+0x48], 0x0
000000000000670f         jne        j_j_fseeko                                  ; fseeko

0000000000006711         push       r12
0000000000006713         push       rbp
0000000000006714         mov        r12d, edx
0000000000006717         push       rbx
0000000000006718         mov        rbp, rsi
000000000000671b         mov        rbx, rdi
000000000000671e         call       j_fileno                                    ; fileno
0000000000006723         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006726         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006729         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000672b         call       j_lseek                                     ; lseek
0000000000006730         cmp        rax, 0xffffffffffffffff
0000000000006734         je         loc_6742

0000000000006736         and        dword [rbx], 0xffffffef
0000000000006739         mov        qword [rbx+0x90], rax
0000000000006740         xor        eax, eax

                     loc_6742:
0000000000006742         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006743         pop        rbp
0000000000006744         pop        r12
0000000000006746         ret
                        ; endp
0000000000006747         align      16                                          ; End of unwind block (FDE at 0x8a84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006750         push       r15                                         ; Begin of unwind block (FDE at 0x8ab4), DATA XREF=_start+22
0000000000006752         push       r14
0000000000006754         mov        r15, rdx
0000000000006757         push       r13
0000000000006759         push       r12
000000000000675b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006762         push       rbp
0000000000006763         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000676a         push       rbx
000000000000676b         mov        r13d, edi
000000000000676e         mov        r14, rsi
0000000000006771         sub        rbp, r12
0000000000006774         sub        rsp, 0x8
0000000000006778         sar        rbp, 0x3
000000000000677c         call       _init                                       ; _init
0000000000006781         test       rbp, rbp
0000000000006784         je         loc_67a6

0000000000006786         xor        ebx, ebx
0000000000006788         nop        dword [rax+rax]

                     loc_6790:
0000000000006790         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006793         mov        rsi, r14
0000000000006796         mov        edi, r13d
0000000000006799         call       qword [r12+rbx*8]
000000000000679d         add        rbx, 0x1
00000000000067a1         cmp        rbp, rbx
00000000000067a4         jne        loc_6790

                     loc_67a6:
00000000000067a6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000067aa         pop        rbx
00000000000067ab         pop        rbp
00000000000067ac         pop        r12
00000000000067ae         pop        r13
00000000000067b0         pop        r14
00000000000067b2         pop        r15
00000000000067b4         ret
                        ; endp
00000000000067b5         align      64                                          ; End of unwind block (FDE at 0x8ab4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000067c0         ret                                                    ; Begin of unwind block (FDE at 0x8afc), DATA XREF=_start+15
                        ; endp
00000000000067c2         align      16                                          ; End of unwind block (FDE at 0x8afc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000067d0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8b14), __dso_handle, CODE XREF=main+104
00000000000067d7         xor        esi, esi
00000000000067d9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000067de         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8b14)
00000000000067df         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x67e0; 0x67e9[ (9 bytes)
        ; File offset : [26592; 26601[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000067e0         sub        rsp, 0x8
00000000000067e4         add        rsp, 0x8
00000000000067e8         ret
                        ; endp
00000000000067e9         db  0x00 ; '.'
00000000000067ea         db  0x00 ; '.'
00000000000067eb         db  0x00 ; '.'
00000000000067ec         db  0x00 ; '.'
00000000000067ed         db  0x00 ; '.'
00000000000067ee         db  0x00 ; '.'
00000000000067ef         db  0x00 ; '.'
00000000000067f0         db  0x00 ; '.'
00000000000067f1         db  0x00 ; '.'
00000000000067f2         db  0x00 ; '.'
00000000000067f3         db  0x00 ; '.'
00000000000067f4         db  0x00 ; '.'
00000000000067f5         db  0x00 ; '.'
00000000000067f6         db  0x00 ; '.'
00000000000067f7         db  0x00 ; '.'
00000000000067f8         db  0x00 ; '.'
00000000000067f9         db  0x00 ; '.'
00000000000067fa         db  0x00 ; '.'
00000000000067fb         db  0x00 ; '.'
00000000000067fc         db  0x00 ; '.'
00000000000067fd         db  0x00 ; '.'
00000000000067fe         db  0x00 ; '.'
00000000000067ff         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6800; 0x7a79[ (4729 bytes)
        ; File offset : [26624; 31353[ (4729 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006800         db  0x01 ; '.'
0000000000006801         db  0x00 ; '.'
0000000000006802         db  0x02 ; '.'
0000000000006803         db  0x00 ; '.'
                     aInvalidNumberO_6804:        // aInvalidNumberO
0000000000006804         db         "invalid number of lines", 0                ; DATA XREF=string_to_integer+64
                     aInvalidNumberO:
000000000000681c         db         "invalid number of bytes", 0                ; DATA XREF=main+4190, string_to_integer+14
                     aBkkmmgtpezy0:
0000000000006834         db         "bkKmMGTPEZY0", 0                           ; DATA XREF=string_to_integer+34
                     aSCannotSeekToO:
0000000000006841         db         "%s: cannot seek to offset %s", 0           ; DATA XREF=elseek+109
                     aStandardOutput:
000000000000685e         db         "standard output", 0                        ; DATA XREF=xwrite_stdout.part.6+53
                     aErrorWritingS:
000000000000686e         db         "error writing %s", 0                       ; DATA XREF=xwrite_stdout.part.6+70
                     aErrorReadingS:
000000000000687f         db         "error reading %s", 0                       ; DATA XREF=main+3780, main+3842, main+3986, head_lines+261, head_bytes+136, diagnose_copy_fd_failure+106, elide_tail_lines_seekable+527
                     aSFileHasShrunk:
0000000000006890         db         "%s: file has shrunk too much", 0           ; DATA XREF=diagnose_copy_fd_failure+31
00000000000068ad         db  0x68 ; 'h'                                         ; DATA XREF=main+377, usage+457, usage+772, usage+956, usage+975, usage+1009
00000000000068ae         db  0x65 ; 'e'
00000000000068af         db  0x61 ; 'a'
00000000000068b0         db  0x64 ; 'd'
00000000000068b1         db  0x00 ; '.'
00000000000068b2         db  0x5b ; '['                                         ; DATA XREF=usage+469
00000000000068b3         db  0x00 ; '.'
                     aTestInvocation:
00000000000068b4         db         "test invocation", 0                        ; DATA XREF=usage+508
                     aMulticallInvoc:
00000000000068c4         db         "Multi-call invocation", 0                  ; DATA XREF=usage+556
                     aSha224sum:
00000000000068da         db         "sha224sum", 0                              ; DATA XREF=usage+573
                     aSha2Utilities:
00000000000068e4         db         "sha2 utilities", 0                         ; DATA XREF=usage+585
                     aSha256sum:
00000000000068f3         db         "sha256sum", 0                              ; DATA XREF=usage+476
                     aSha384sum:
00000000000068fd         db         "sha384sum", 0                              ; DATA XREF=usage+520
                     aSha512sum:
0000000000006907         db         "sha512sum", 0                              ; DATA XREF=usage+544
                     aNsOnlineHelpSn:
0000000000006911         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+658
0000000000006928         db  0x47 ; 'G'                                         ; DATA XREF=main+370, usage+686, usage+879, emit_bug_reporting_address+68
0000000000006929         db  0x4e ; 'N'
000000000000692a         db  0x55 ; 'U'
000000000000692b         db  0x20 ; ' '
                     aCoreutils:
000000000000692c         db         "coreutils", 0                              ; DATA XREF=main+73, main+85, usage+532
0000000000006936         db  0x65 ; 'e'                                         ; DATA XREF=usage+725, usage+918
0000000000006937         db  0x6e ; 'n'
0000000000006938         db  0x5f ; '_'
0000000000006939         db  0x00 ; '.'
                     aFullDocumentat:
000000000000693a         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+753, usage+942
                     aUsrlocalsharel:
0000000000006955         db         "/usr/local/share/locale", 0                ; DATA XREF=main+66
                     aInvalidTrailin:
000000000000696d         db         "invalid trailing option -- %c", 0          ; DATA XREF=main+4091, main+4141
                     aJimMeyering:
000000000000698b         db         "Jim Meyering", 0                           ; DATA XREF=main+356
                     aDavidMackenzie:
0000000000006998         db         "David MacKenzie", 0                        ; DATA XREF=main+363
                     aCnqvz012345678:
00000000000069a8         db         "c:n:qvz0123456789", 0                      ; DATA XREF=main+191
                     aSS:
00000000000069ba         db         "%s: %s", 0                                 ; DATA XREF=main+4212, close_stdout+108, xnumtoumax+125
                     aStandardInput:
00000000000069c1         db         "standard input", 0                         ; DATA XREF=main+911
                     aCannotOpenSFor:
00000000000069d0         db         "cannot open %s for reading", 0             ; DATA XREF=main+1170
00000000000069eb         db  0x25 ; '%'                                         ; DATA XREF=main+978
00000000000069ec         db  0x73 ; 's'
00000000000069ed         db  0x3d ; '='
00000000000069ee         db  0x3d ; '='
00000000000069ef         db  0x3e ; '>'
00000000000069f0         db  0x20 ; ' '
00000000000069f1         db  0x25 ; '%'
00000000000069f2         db  0x73 ; 's'
00000000000069f3         db  0x20 ; ' '
00000000000069f4         db  0x3c ; '<'
00000000000069f5         db  0x3d ; '='
00000000000069f6         db  0x3d ; '='
00000000000069f7         db  0x0a ; '.'
00000000000069f8         db  0x00 ; '.'
                     aCannotFstatS:
00000000000069f9         db         "cannot fstat %s", 0                        ; DATA XREF=main+1976
                     aFailedToCloseS:
0000000000006a09         db         "failed to close %s", 0                     ; DATA XREF=main+1399
                     aPresumeinputpi:
0000000000006a1c         db         "-presume-input-pipe", 0
                     aQuiet:
0000000000006a30         db         "quiet", 0
                     aSilent:
0000000000006a36         db         "silent", 0
                     aVerbose:
0000000000006a3d         db         "verbose", 0
                     aZeroterminated:
0000000000006a45         db         "zero-terminated", 0
                     aHelp:
0000000000006a55         db         "help", 0
                     aVersion:
0000000000006a5a         db         "version", 0
0000000000006a62         align      8
                     aSCannotSeekToR:
0000000000006a68         db         "%s: cannot seek to relative offset %s", 0  ; DATA XREF=elseek+119
0000000000006a8e         align      16
                     aTrySHelpForMor:
0000000000006a90         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000006ab7         align      8
                     aUsageSOptionFi:
0000000000006ab8         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
0000000000006ad9         align      32
                     aPrintTheFirstD:
0000000000006ae0         db         "Print the first %d lines of each FILE to standard output.\nWith more than one FILE, precede each with a header giving the file name.\n", 0 ; DATA XREF=usage+125
0000000000006b65         align      8
                     aNwithNoFileOrW:
0000000000006b68         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+171
                     aNmandatoryArgu:
0000000000006ba0         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+208
0000000000006beb         align      16
                     aCBytesnumPrint:
0000000000006bf0         db         "  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\n                             with the leading '-', print all but the last\n                             NUM bytes of each file\n  -n, --lines=[-]NUM       print the first NUM lines instead of" ; DATA XREF=usage+238
0000000000006cf0         db         " the first %d;\n                             with the leading '-', print all but the last\n                             NUM lines of each file\n", 0
0000000000006d7e         align      128
                     aQQuietSilentNe:
0000000000006d80         db         "  -q, --quiet, --silent    never print headers giving file names\n  -v, --verbose            always print headers giving file names\n", 0 ; DATA XREF=usage+284
0000000000006e04         align      8
                     aZZeroterminate:
0000000000006e08         db         "  -z, --zero-terminated    line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+321
0000000000006e47         align      8
                     aHelpDisplayThi:
0000000000006e48         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+358
0000000000006e75         align      8
                     aVersionOutputV:
0000000000006e78         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+395
0000000000006eae         align      16
                     aNnumMayHaveAMu:
0000000000006eb0         db         "\nNUM may have a multiplier suffix:\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n", 0 ; DATA XREF=usage+432
0000000000006f84         align      8
                     aHttpswwwgnuorg:
0000000000006f88         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+679, usage+779, usage+872, usage+982, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006fb0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1023
0000000000006ff7         align      8
                     aOrAvailableLoc:
0000000000006ff8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+822
000000000000702b         align      4
                     switch_table_702c:        // switch_table
000000000000702c         dd         main.loc_1d79-switch_table_702c, main.loc_1d71-switch_table_702c, 7 dup (main.loc_2854-switch_table_702c), main.loc_1d79-switch_table_702c ; switch table used at 0x1ae6 containing 25 entries, DATA XREF=main+635
0000000000007054         dd         main.loc_1d69-switch_table_702c, main.loc_1d79-switch_table_702c, 3 dup (main.loc_2854-switch_table_702c), main.loc_1d61-switch_table_702c
000000000000706c         dd         4 dup (main.loc_2854-switch_table_702c), main.loc_1d59-switch_table_702c, 3 dup (main.loc_2854-switch_table_702c), main.loc_1cf9-switch_table_702c
                     a831:
0000000000007090         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000007095         db         "write error", 0                            ; DATA XREF=close_stdout+67
00000000000070a1         align      8
                     aANullArgv0WasP:
00000000000070a8         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000070e0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000070e8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000070e9         db  0x74 ; 't'
00000000000070ea         db  0x2d ; '-'                                         ; DATA XREF=main+785, main+2028, main+2675
00000000000070eb         db  0x00 ; '.'
00000000000070ec         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000070ed         db  0x80 ; '.'
00000000000070ee         db  0x98 ; '.'
00000000000070ef         db  0x00 ; '.'
00000000000070f0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000070f1         db  0x80 ; '.'
00000000000070f2         db  0x99 ; '.'
00000000000070f3         db  0x00 ; '.'
00000000000070f4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000070f5         db  0x07 ; '.'
00000000000070f6         db  0x65 ; 'e'
00000000000070f7         db  0x00 ; '.'
00000000000070f8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000070f9         db  0xaf ; '.'
00000000000070fa         db  0x00 ; '.'
00000000000070fb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_41c0+1451, sub_41c0+1493, sub_41c0+2429
00000000000070fc         db  0x00 ; '.'
00000000000070fd         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_41c0+132, sub_41c0+1338, sub_41c0+1670, sub_41c0+1697, sub_41c0+2352
00000000000070fe         db  0x00 ; '.'
00000000000070ff         db  0x60 ; '`'                                         ; DATA XREF=sub_41c0+1627, sub_41c0+1654
0000000000007100         db  0x00 ; '.'
                     aLiteral:
0000000000007101         db         "literal", 0
                     aShell:
0000000000007109         db         "shell", 0
                     aShellalways:
000000000000710f         db         "shell-always", 0
000000000000711c         db  0x73 ; 's'
000000000000711d         db  0x68 ; 'h'
000000000000711e         db  0x65 ; 'e'
000000000000711f         db  0x6c ; 'l'
0000000000007120         db  0x6c ; 'l'
0000000000007121         db  0x2d ; '-'
                     aEscape:
0000000000007122         db         "escape", 0
                     aShellescapealw:
0000000000007129         db         "shell-escape-always", 0
                     aCmaybe:
000000000000713d         db         "c-maybe", 0
                     aClocale:
0000000000007145         db         "clocale", 0
000000000000714d         align      32
                     switch_table_7160:        // switch_table
0000000000007160         dd         quotearg_buffer_restyled.loc_48ba-switch_table_7160, quotearg_buffer_restyled.loc_3b13-switch_table_7160, quotearg_buffer_restyled.loc_4ae8-switch_table_7160, quotearg_buffer_restyled.loc_48f4-switch_table_7160 ; switch table used at 0x3b11 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007170         dd         quotearg_buffer_restyled.loc_46e4-switch_table_7160, quotearg_buffer_restyled.loc_4740-switch_table_7160, quotearg_buffer_restyled.loc_4795-switch_table_7160, quotearg_buffer_restyled.loc_47da-switch_table_7160
0000000000007180         dd         3 dup (quotearg_buffer_restyled.loc_4814-switch_table_7160)
000000000000718c         db  0x04 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000718d         db  0xcd ; '.'
000000000000718e         db  0xff ; '.'
000000000000718f         db  0xff ; '.'
0000000000007190         db  0xec ; '.'
0000000000007191         db  0xcd ; '.'
0000000000007192         db  0xff ; '.'
0000000000007193         db  0xff ; '.'
0000000000007194         db  0xec ; '.'
0000000000007195         db  0xcd ; '.'
0000000000007196         db  0xff ; '.'
0000000000007197         db  0xff ; '.'
0000000000007198         db  0xec ; '.'
0000000000007199         db  0xcd ; '.'
000000000000719a         db  0xff ; '.'
000000000000719b         db  0xff ; '.'
000000000000719c         db  0xec ; '.'
000000000000719d         db  0xcd ; '.'
000000000000719e         db  0xff ; '.'
000000000000719f         db  0xff ; '.'
00000000000071a0         db  0xec ; '.'
00000000000071a1         db  0xcd ; '.'
00000000000071a2         db  0xff ; '.'
00000000000071a3         db  0xff ; '.'
00000000000071a4         db  0xec ; '.'
00000000000071a5         db  0xcd ; '.'
00000000000071a6         db  0xff ; '.'
00000000000071a7         db  0xff ; '.'
00000000000071a8         db  0x44 ; 'D'
00000000000071a9         db  0xcd ; '.'
00000000000071aa         db  0xff ; '.'
00000000000071ab         db  0xff ; '.'
00000000000071ac         db  0x4c ; 'L'
00000000000071ad         db  0xcc ; '.'
00000000000071ae         db  0xff ; '.'
00000000000071af         db  0xff ; '.'
00000000000071b0         db  0x0c ; '.'
00000000000071b1         db  0xcc ; '.'
00000000000071b2         db  0xff ; '.'
00000000000071b3         db  0xff ; '.'
00000000000071b4         db  0xd4 ; '.'
00000000000071b5         db  0xcd ; '.'
00000000000071b6         db  0xff ; '.'
00000000000071b7         db  0xff ; '.'
00000000000071b8         db  0xc4 ; '.'
00000000000071b9         db  0xcd ; '.'
00000000000071ba         db  0xff ; '.'
00000000000071bb         db  0xff ; '.'
00000000000071bc         db  0xb4 ; '.'
00000000000071bd         db  0xcd ; '.'
00000000000071be         db  0xff ; '.'
00000000000071bf         db  0xff ; '.'
00000000000071c0         db  0xa4 ; '.'
00000000000071c1         db  0xcd ; '.'
00000000000071c2         db  0xff ; '.'
00000000000071c3         db  0xff ; '.'
00000000000071c4         db  0xec ; '.'
00000000000071c5         db  0xcd ; '.'
00000000000071c6         db  0xff ; '.'
00000000000071c7         db  0xff ; '.'
00000000000071c8         db  0xec ; '.'
00000000000071c9         db  0xcd ; '.'
00000000000071ca         db  0xff ; '.'
00000000000071cb         db  0xff ; '.'
00000000000071cc         db  0xec ; '.'
00000000000071cd         db  0xcd ; '.'
00000000000071ce         db  0xff ; '.'
00000000000071cf         db  0xff ; '.'
00000000000071d0         db  0xec ; '.'
00000000000071d1         db  0xcd ; '.'
00000000000071d2         db  0xff ; '.'
00000000000071d3         db  0xff ; '.'
00000000000071d4         db  0xec ; '.'
00000000000071d5         db  0xcd ; '.'
00000000000071d6         db  0xff ; '.'
00000000000071d7         db  0xff ; '.'
00000000000071d8         db  0xec ; '.'
00000000000071d9         db  0xcd ; '.'
00000000000071da         db  0xff ; '.'
00000000000071db         db  0xff ; '.'
00000000000071dc         db  0xec ; '.'
00000000000071dd         db  0xcd ; '.'
00000000000071de         db  0xff ; '.'
00000000000071df         db  0xff ; '.'
00000000000071e0         db  0xec ; '.'
00000000000071e1         db  0xcd ; '.'
00000000000071e2         db  0xff ; '.'
00000000000071e3         db  0xff ; '.'
00000000000071e4         db  0xec ; '.'
00000000000071e5         db  0xcd ; '.'
00000000000071e6         db  0xff ; '.'
00000000000071e7         db  0xff ; '.'
00000000000071e8         db  0xec ; '.'
00000000000071e9         db  0xcd ; '.'
00000000000071ea         db  0xff ; '.'
00000000000071eb         db  0xff ; '.'
00000000000071ec         db  0xec ; '.'
00000000000071ed         db  0xcd ; '.'
00000000000071ee         db  0xff ; '.'
00000000000071ef         db  0xff ; '.'
00000000000071f0         db  0xec ; '.'
00000000000071f1         db  0xcd ; '.'
00000000000071f2         db  0xff ; '.'
00000000000071f3         db  0xff ; '.'
00000000000071f4         db  0xec ; '.'
00000000000071f5         db  0xcd ; '.'
00000000000071f6         db  0xff ; '.'
00000000000071f7         db  0xff ; '.'
00000000000071f8         db  0xec ; '.'
00000000000071f9         db  0xcd ; '.'
00000000000071fa         db  0xff ; '.'
00000000000071fb         db  0xff ; '.'
00000000000071fc         db  0xec ; '.'
00000000000071fd         db  0xcd ; '.'
00000000000071fe         db  0xff ; '.'
00000000000071ff         db  0xff ; '.'
0000000000007200         db  0xec ; '.'
0000000000007201         db  0xcd ; '.'
0000000000007202         db  0xff ; '.'
0000000000007203         db  0xff ; '.'
0000000000007204         db  0xec ; '.'
0000000000007205         db  0xcd ; '.'
0000000000007206         db  0xff ; '.'
0000000000007207         db  0xff ; '.'
0000000000007208         db  0xec ; '.'
0000000000007209         db  0xcd ; '.'
000000000000720a         db  0xff ; '.'
000000000000720b         db  0xff ; '.'
000000000000720c         db  0x94 ; '.'
000000000000720d         db  0xcd ; '.'
000000000000720e         db  0xff ; '.'
000000000000720f         db  0xff ; '.'
0000000000007210         db  0x84 ; '.'
0000000000007211         db  0xcd ; '.'
0000000000007212         db  0xff ; '.'
0000000000007213         db  0xff ; '.'
0000000000007214         db  0x84 ; '.'
0000000000007215         db  0xcd ; '.'
0000000000007216         db  0xff ; '.'
0000000000007217         db  0xff ; '.'
0000000000007218         db  0x54 ; 'T'
0000000000007219         db  0xcd ; '.'
000000000000721a         db  0xff ; '.'
000000000000721b         db  0xff ; '.'
000000000000721c         db  0x84 ; '.'
000000000000721d         db  0xcd ; '.'
000000000000721e         db  0xff ; '.'
000000000000721f         db  0xff ; '.'
0000000000007220         db  0x2c ; ','
0000000000007221         db  0xcd ; '.'
0000000000007222         db  0xff ; '.'
0000000000007223         db  0xff ; '.'
0000000000007224         db  0x84 ; '.'
0000000000007225         db  0xcd ; '.'
0000000000007226         db  0xff ; '.'
0000000000007227         db  0xff ; '.'
0000000000007228         db  0xe7 ; '.'
0000000000007229         db  0xcb ; '.'
000000000000722a         db  0xff ; '.'
000000000000722b         db  0xff ; '.'
000000000000722c         db  0x84 ; '.'
000000000000722d         db  0xcd ; '.'
000000000000722e         db  0xff ; '.'
000000000000722f         db  0xff ; '.'
0000000000007230         db  0x84 ; '.'
0000000000007231         db  0xcd ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0x84 ; '.'
0000000000007235         db  0xcd ; '.'
0000000000007236         db  0xff ; '.'
0000000000007237         db  0xff ; '.'
0000000000007238         db  0x2c ; ','
0000000000007239         db  0xcd ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0x2c ; ','
000000000000723d         db  0xcd ; '.'
000000000000723e         db  0xff ; '.'
000000000000723f         db  0xff ; '.'
0000000000007240         db  0x2c ; ','
0000000000007241         db  0xcd ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0x2c ; ','
0000000000007245         db  0xcd ; '.'
0000000000007246         db  0xff ; '.'
0000000000007247         db  0xff ; '.'
0000000000007248         db  0x2c ; ','
0000000000007249         db  0xcd ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0x2c ; ','
000000000000724d         db  0xcd ; '.'
000000000000724e         db  0xff ; '.'
000000000000724f         db  0xff ; '.'
0000000000007250         db  0x2c ; ','
0000000000007251         db  0xcd ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0x2c ; ','
0000000000007255         db  0xcd ; '.'
0000000000007256         db  0xff ; '.'
0000000000007257         db  0xff ; '.'
0000000000007258         db  0x2c ; ','
0000000000007259         db  0xcd ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0x2c ; ','
000000000000725d         db  0xcd ; '.'
000000000000725e         db  0xff ; '.'
000000000000725f         db  0xff ; '.'
0000000000007260         db  0x2c ; ','
0000000000007261         db  0xcd ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0x2c ; ','
0000000000007265         db  0xcd ; '.'
0000000000007266         db  0xff ; '.'
0000000000007267         db  0xff ; '.'
0000000000007268         db  0x2c ; ','
0000000000007269         db  0xcd ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0x2c ; ','
000000000000726d         db  0xcd ; '.'
000000000000726e         db  0xff ; '.'
000000000000726f         db  0xff ; '.'
0000000000007270         db  0x2c ; ','
0000000000007271         db  0xcd ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0x2c ; ','
0000000000007275         db  0xcd ; '.'
0000000000007276         db  0xff ; '.'
0000000000007277         db  0xff ; '.'
0000000000007278         db  0x84 ; '.'
0000000000007279         db  0xcd ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0x84 ; '.'
000000000000727d         db  0xcd ; '.'
000000000000727e         db  0xff ; '.'
000000000000727f         db  0xff ; '.'
0000000000007280         db  0x84 ; '.'
0000000000007281         db  0xcd ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0x84 ; '.'
0000000000007285         db  0xcd ; '.'
0000000000007286         db  0xff ; '.'
0000000000007287         db  0xff ; '.'
0000000000007288         db  0xb7 ; '.'
0000000000007289         db  0xcb ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0xec ; '.'
000000000000728d         db  0xcd ; '.'
000000000000728e         db  0xff ; '.'
000000000000728f         db  0xff ; '.'
0000000000007290         db  0x2c ; ','
0000000000007291         db  0xcd ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0x2c ; ','
0000000000007295         db  0xcd ; '.'
0000000000007296         db  0xff ; '.'
0000000000007297         db  0xff ; '.'
0000000000007298         db  0x2c ; ','
0000000000007299         db  0xcd ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0x2c ; ','
000000000000729d         db  0xcd ; '.'
000000000000729e         db  0xff ; '.'
000000000000729f         db  0xff ; '.'
00000000000072a0         db  0x2c ; ','
00000000000072a1         db  0xcd ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0x2c ; ','
00000000000072a5         db  0xcd ; '.'
00000000000072a6         db  0xff ; '.'
00000000000072a7         db  0xff ; '.'
00000000000072a8         db  0x2c ; ','
00000000000072a9         db  0xcd ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0x2c ; ','
00000000000072ad         db  0xcd ; '.'
00000000000072ae         db  0xff ; '.'
00000000000072af         db  0xff ; '.'
00000000000072b0         db  0x2c ; ','
00000000000072b1         db  0xcd ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0x2c ; ','
00000000000072b5         db  0xcd ; '.'
00000000000072b6         db  0xff ; '.'
00000000000072b7         db  0xff ; '.'
00000000000072b8         db  0x2c ; ','
00000000000072b9         db  0xcd ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0x2c ; ','
00000000000072bd         db  0xcd ; '.'
00000000000072be         db  0xff ; '.'
00000000000072bf         db  0xff ; '.'
00000000000072c0         db  0x2c ; ','
00000000000072c1         db  0xcd ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0x2c ; ','
00000000000072c5         db  0xcd ; '.'
00000000000072c6         db  0xff ; '.'
00000000000072c7         db  0xff ; '.'
00000000000072c8         db  0x2c ; ','
00000000000072c9         db  0xcd ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0x2c ; ','
00000000000072cd         db  0xcd ; '.'
00000000000072ce         db  0xff ; '.'
00000000000072cf         db  0xff ; '.'
00000000000072d0         db  0x2c ; ','
00000000000072d1         db  0xcd ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0x2c ; ','
00000000000072d5         db  0xcd ; '.'
00000000000072d6         db  0xff ; '.'
00000000000072d7         db  0xff ; '.'
00000000000072d8         db  0x2c ; ','
00000000000072d9         db  0xcd ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0x2c ; ','
00000000000072dd         db  0xcd ; '.'
00000000000072de         db  0xff ; '.'
00000000000072df         db  0xff ; '.'
00000000000072e0         db  0x2c ; ','
00000000000072e1         db  0xcd ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0x2c ; ','
00000000000072e5         db  0xcd ; '.'
00000000000072e6         db  0xff ; '.'
00000000000072e7         db  0xff ; '.'
00000000000072e8         db  0x2c ; ','
00000000000072e9         db  0xcd ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0x2c ; ','
00000000000072ed         db  0xcd ; '.'
00000000000072ee         db  0xff ; '.'
00000000000072ef         db  0xff ; '.'
00000000000072f0         db  0x2c ; ','
00000000000072f1         db  0xcd ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0x2c ; ','
00000000000072f5         db  0xcd ; '.'
00000000000072f6         db  0xff ; '.'
00000000000072f7         db  0xff ; '.'
00000000000072f8         db  0x84 ; '.'
00000000000072f9         db  0xcd ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0x5c ; '\'
00000000000072fd         db  0xcc ; '.'
00000000000072fe         db  0xff ; '.'
00000000000072ff         db  0xff ; '.'
0000000000007300         db  0x2c ; ','
0000000000007301         db  0xcd ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0x84 ; '.'
0000000000007305         db  0xcd ; '.'
0000000000007306         db  0xff ; '.'
0000000000007307         db  0xff ; '.'
0000000000007308         db  0x2c ; ','
0000000000007309         db  0xcd ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0x84 ; '.'
000000000000730d         db  0xcd ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0x2c ; ','
0000000000007311         db  0xcd ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0x2c ; ','
0000000000007315         db  0xcd ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0x2c ; ','
0000000000007319         db  0xcd ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0x2c ; ','
000000000000731d         db  0xcd ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0x2c ; ','
0000000000007321         db  0xcd ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0x2c ; ','
0000000000007325         db  0xcd ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0x2c ; ','
0000000000007329         db  0xcd ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0x2c ; ','
000000000000732d         db  0xcd ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0x2c ; ','
0000000000007331         db  0xcd ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0x2c ; ','
0000000000007335         db  0xcd ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0x2c ; ','
0000000000007339         db  0xcd ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0x2c ; ','
000000000000733d         db  0xcd ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0x2c ; ','
0000000000007341         db  0xcd ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0x2c ; ','
0000000000007345         db  0xcd ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0x2c ; ','
0000000000007349         db  0xcd ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0x2c ; ','
000000000000734d         db  0xcd ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0x2c ; ','
0000000000007351         db  0xcd ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0x2c ; ','
0000000000007355         db  0xcd ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0x2c ; ','
0000000000007359         db  0xcd ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0x2c ; ','
000000000000735d         db  0xcd ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0x2c ; ','
0000000000007361         db  0xcd ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0x2c ; ','
0000000000007365         db  0xcd ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0x2c ; ','
0000000000007369         db  0xcd ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0x2c ; ','
000000000000736d         db  0xcd ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0x2c ; ','
0000000000007371         db  0xcd ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0x2c ; ','
0000000000007375         db  0xcd ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0xe7 ; '.'
0000000000007379         db  0xca ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0x84 ; '.'
000000000000737d         db  0xcd ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0xe7 ; '.'
0000000000007381         db  0xca ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0x54 ; 'T'
0000000000007385         db  0xcd ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0xd8 ; '.'                                         ; DATA XREF=sub_3f60+137
0000000000007389         db  0xcc ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0xe8 ; '.'
000000000000738d         db  0xcb ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0xe8 ; '.'
0000000000007391         db  0xcb ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0xe8 ; '.'
0000000000007395         db  0xcb ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0xe8 ; '.'
0000000000007399         db  0xcb ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0xe8 ; '.'
000000000000739d         db  0xcb ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0xe8 ; '.'
00000000000073a1         db  0xcb ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0xc8 ; '.'
00000000000073a5         db  0xcc ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0x18 ; '.'
00000000000073a9         db  0xce ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0x00 ; '.'
00000000000073ad         db  0xce ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0xb0 ; '.'
00000000000073b1         db  0xcc ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0xf0 ; '.'
00000000000073b5         db  0xcd ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0x98 ; '.'
00000000000073b9         db  0xcc ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0xd8 ; '.'
00000000000073bd         db  0xcd ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0xe8 ; '.'
00000000000073c1         db  0xcb ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0xe8 ; '.'
00000000000073c5         db  0xcb ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0xe8 ; '.'
00000000000073c9         db  0xcb ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0xe8 ; '.'
00000000000073cd         db  0xcb ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0xe8 ; '.'
00000000000073d1         db  0xcb ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0xe8 ; '.'
00000000000073d5         db  0xcb ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0xe8 ; '.'
00000000000073d9         db  0xcb ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0xe8 ; '.'
00000000000073dd         db  0xcb ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0xe8 ; '.'
00000000000073e1         db  0xcb ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0xe8 ; '.'
00000000000073e5         db  0xcb ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0xe8 ; '.'
00000000000073e9         db  0xcb ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0xe8 ; '.'
00000000000073ed         db  0xcb ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0xe8 ; '.'
00000000000073f1         db  0xcb ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0xe8 ; '.'
00000000000073f5         db  0xcb ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0xe8 ; '.'
00000000000073f9         db  0xcb ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0xe8 ; '.'
00000000000073fd         db  0xcb ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0xe8 ; '.'
0000000000007401         db  0xcb ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0xe8 ; '.'
0000000000007405         db  0xcb ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0xc0 ; '.'
0000000000007409         db  0xcd ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0xa8 ; '.'
000000000000740d         db  0xcd ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0xa8 ; '.'
0000000000007411         db  0xcd ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0x90 ; '.'
0000000000007415         db  0xcd ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0xa8 ; '.'
0000000000007419         db  0xcd ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0x78 ; 'x'
000000000000741d         db  0xcd ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0xa8 ; '.'
0000000000007421         db  0xcd ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0xe8 ; '.'
0000000000007425         db  0xc9 ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0xa8 ; '.'
0000000000007429         db  0xcd ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0xa8 ; '.'
000000000000742d         db  0xcd ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0xa8 ; '.'
0000000000007431         db  0xcd ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0x78 ; 'x'
0000000000007435         db  0xcd ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0x78 ; 'x'
0000000000007439         db  0xcd ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0x78 ; 'x'
000000000000743d         db  0xcd ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0x78 ; 'x'
0000000000007441         db  0xcd ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0x78 ; 'x'
0000000000007445         db  0xcd ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0x78 ; 'x'
0000000000007449         db  0xcd ; '.'
000000000000744a         db  0xff ; '.'
000000000000744b         db  0xff ; '.'
000000000000744c         db  0x78 ; 'x'
000000000000744d         db  0xcd ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0x78 ; 'x'
0000000000007451         db  0xcd ; '.'
0000000000007452         db  0xff ; '.'
0000000000007453         db  0xff ; '.'
0000000000007454         db  0x78 ; 'x'
0000000000007455         db  0xcd ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0x78 ; 'x'
0000000000007459         db  0xcd ; '.'
000000000000745a         db  0xff ; '.'
000000000000745b         db  0xff ; '.'
000000000000745c         db  0x78 ; 'x'
000000000000745d         db  0xcd ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0x78 ; 'x'
0000000000007461         db  0xcd ; '.'
0000000000007462         db  0xff ; '.'
0000000000007463         db  0xff ; '.'
0000000000007464         db  0x78 ; 'x'
0000000000007465         db  0xcd ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0x78 ; 'x'
0000000000007469         db  0xcd ; '.'
000000000000746a         db  0xff ; '.'
000000000000746b         db  0xff ; '.'
000000000000746c         db  0x78 ; 'x'
000000000000746d         db  0xcd ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0x78 ; 'x'
0000000000007471         db  0xcd ; '.'
0000000000007472         db  0xff ; '.'
0000000000007473         db  0xff ; '.'
0000000000007474         db  0xa8 ; '.'
0000000000007475         db  0xcd ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0xa8 ; '.'
0000000000007479         db  0xcd ; '.'
000000000000747a         db  0xff ; '.'
000000000000747b         db  0xff ; '.'
000000000000747c         db  0xa8 ; '.'
000000000000747d         db  0xcd ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0xa8 ; '.'
0000000000007481         db  0xcd ; '.'
0000000000007482         db  0xff ; '.'
0000000000007483         db  0xff ; '.'
0000000000007484         db  0xb8 ; '.'
0000000000007485         db  0xc9 ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0xe8 ; '.'
0000000000007489         db  0xcb ; '.'
000000000000748a         db  0xff ; '.'
000000000000748b         db  0xff ; '.'
000000000000748c         db  0x78 ; 'x'
000000000000748d         db  0xcd ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0x78 ; 'x'
0000000000007491         db  0xcd ; '.'
0000000000007492         db  0xff ; '.'
0000000000007493         db  0xff ; '.'
0000000000007494         db  0x78 ; 'x'
0000000000007495         db  0xcd ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0x78 ; 'x'
0000000000007499         db  0xcd ; '.'
000000000000749a         db  0xff ; '.'
000000000000749b         db  0xff ; '.'
000000000000749c         db  0x78 ; 'x'
000000000000749d         db  0xcd ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0x78 ; 'x'
00000000000074a1         db  0xcd ; '.'
00000000000074a2         db  0xff ; '.'
00000000000074a3         db  0xff ; '.'
00000000000074a4         db  0x78 ; 'x'
00000000000074a5         db  0xcd ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0x78 ; 'x'
00000000000074a9         db  0xcd ; '.'
00000000000074aa         db  0xff ; '.'
00000000000074ab         db  0xff ; '.'
00000000000074ac         db  0x78 ; 'x'
00000000000074ad         db  0xcd ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0x78 ; 'x'
00000000000074b1         db  0xcd ; '.'
00000000000074b2         db  0xff ; '.'
00000000000074b3         db  0xff ; '.'
00000000000074b4         db  0x78 ; 'x'
00000000000074b5         db  0xcd ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0x78 ; 'x'
00000000000074b9         db  0xcd ; '.'
00000000000074ba         db  0xff ; '.'
00000000000074bb         db  0xff ; '.'
00000000000074bc         db  0x78 ; 'x'
00000000000074bd         db  0xcd ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0x78 ; 'x'
00000000000074c1         db  0xcd ; '.'
00000000000074c2         db  0xff ; '.'
00000000000074c3         db  0xff ; '.'
00000000000074c4         db  0x78 ; 'x'
00000000000074c5         db  0xcd ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0x78 ; 'x'
00000000000074c9         db  0xcd ; '.'
00000000000074ca         db  0xff ; '.'
00000000000074cb         db  0xff ; '.'
00000000000074cc         db  0x78 ; 'x'
00000000000074cd         db  0xcd ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0x78 ; 'x'
00000000000074d1         db  0xcd ; '.'
00000000000074d2         db  0xff ; '.'
00000000000074d3         db  0xff ; '.'
00000000000074d4         db  0x78 ; 'x'
00000000000074d5         db  0xcd ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0x78 ; 'x'
00000000000074d9         db  0xcd ; '.'
00000000000074da         db  0xff ; '.'
00000000000074db         db  0xff ; '.'
00000000000074dc         db  0x78 ; 'x'
00000000000074dd         db  0xcd ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0x78 ; 'x'
00000000000074e1         db  0xcd ; '.'
00000000000074e2         db  0xff ; '.'
00000000000074e3         db  0xff ; '.'
00000000000074e4         db  0x78 ; 'x'
00000000000074e5         db  0xcd ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0x78 ; 'x'
00000000000074e9         db  0xcd ; '.'
00000000000074ea         db  0xff ; '.'
00000000000074eb         db  0xff ; '.'
00000000000074ec         db  0x78 ; 'x'
00000000000074ed         db  0xcd ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0x78 ; 'x'
00000000000074f1         db  0xcd ; '.'
00000000000074f2         db  0xff ; '.'
00000000000074f3         db  0xff ; '.'
00000000000074f4         db  0xa8 ; '.'
00000000000074f5         db  0xcd ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x78 ; 'x'
00000000000074f9         db  0xcc ; '.'
00000000000074fa         db  0xff ; '.'
00000000000074fb         db  0xff ; '.'
00000000000074fc         db  0x78 ; 'x'
00000000000074fd         db  0xcd ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0xa8 ; '.'
0000000000007501         db  0xcd ; '.'
0000000000007502         db  0xff ; '.'
0000000000007503         db  0xff ; '.'
0000000000007504         db  0x78 ; 'x'
0000000000007505         db  0xcd ; '.'
0000000000007506         db  0xff ; '.'
0000000000007507         db  0xff ; '.'
0000000000007508         db  0xa8 ; '.'
0000000000007509         db  0xcd ; '.'
000000000000750a         db  0xff ; '.'
000000000000750b         db  0xff ; '.'
000000000000750c         db  0x78 ; 'x'
000000000000750d         db  0xcd ; '.'
000000000000750e         db  0xff ; '.'
000000000000750f         db  0xff ; '.'
0000000000007510         db  0x78 ; 'x'
0000000000007511         db  0xcd ; '.'
0000000000007512         db  0xff ; '.'
0000000000007513         db  0xff ; '.'
0000000000007514         db  0x78 ; 'x'
0000000000007515         db  0xcd ; '.'
0000000000007516         db  0xff ; '.'
0000000000007517         db  0xff ; '.'
0000000000007518         db  0x78 ; 'x'
0000000000007519         db  0xcd ; '.'
000000000000751a         db  0xff ; '.'
000000000000751b         db  0xff ; '.'
000000000000751c         db  0x78 ; 'x'
000000000000751d         db  0xcd ; '.'
000000000000751e         db  0xff ; '.'
000000000000751f         db  0xff ; '.'
0000000000007520         db  0x78 ; 'x'
0000000000007521         db  0xcd ; '.'
0000000000007522         db  0xff ; '.'
0000000000007523         db  0xff ; '.'
0000000000007524         db  0x78 ; 'x'
0000000000007525         db  0xcd ; '.'
0000000000007526         db  0xff ; '.'
0000000000007527         db  0xff ; '.'
0000000000007528         db  0x78 ; 'x'
0000000000007529         db  0xcd ; '.'
000000000000752a         db  0xff ; '.'
000000000000752b         db  0xff ; '.'
000000000000752c         db  0x78 ; 'x'
000000000000752d         db  0xcd ; '.'
000000000000752e         db  0xff ; '.'
000000000000752f         db  0xff ; '.'
0000000000007530         db  0x78 ; 'x'
0000000000007531         db  0xcd ; '.'
0000000000007532         db  0xff ; '.'
0000000000007533         db  0xff ; '.'
0000000000007534         db  0x78 ; 'x'
0000000000007535         db  0xcd ; '.'
0000000000007536         db  0xff ; '.'
0000000000007537         db  0xff ; '.'
0000000000007538         db  0x78 ; 'x'
0000000000007539         db  0xcd ; '.'
000000000000753a         db  0xff ; '.'
000000000000753b         db  0xff ; '.'
000000000000753c         db  0x78 ; 'x'
000000000000753d         db  0xcd ; '.'
000000000000753e         db  0xff ; '.'
000000000000753f         db  0xff ; '.'
0000000000007540         db  0x78 ; 'x'
0000000000007541         db  0xcd ; '.'
0000000000007542         db  0xff ; '.'
0000000000007543         db  0xff ; '.'
0000000000007544         db  0x78 ; 'x'
0000000000007545         db  0xcd ; '.'
0000000000007546         db  0xff ; '.'
0000000000007547         db  0xff ; '.'
0000000000007548         db  0x78 ; 'x'
0000000000007549         db  0xcd ; '.'
000000000000754a         db  0xff ; '.'
000000000000754b         db  0xff ; '.'
000000000000754c         db  0x78 ; 'x'
000000000000754d         db  0xcd ; '.'
000000000000754e         db  0xff ; '.'
000000000000754f         db  0xff ; '.'
0000000000007550         db  0x78 ; 'x'
0000000000007551         db  0xcd ; '.'
0000000000007552         db  0xff ; '.'
0000000000007553         db  0xff ; '.'
0000000000007554         db  0x78 ; 'x'
0000000000007555         db  0xcd ; '.'
0000000000007556         db  0xff ; '.'
0000000000007557         db  0xff ; '.'
0000000000007558         db  0x78 ; 'x'
0000000000007559         db  0xcd ; '.'
000000000000755a         db  0xff ; '.'
000000000000755b         db  0xff ; '.'
000000000000755c         db  0x78 ; 'x'
000000000000755d         db  0xcd ; '.'
000000000000755e         db  0xff ; '.'
000000000000755f         db  0xff ; '.'
0000000000007560         db  0x78 ; 'x'
0000000000007561         db  0xcd ; '.'
0000000000007562         db  0xff ; '.'
0000000000007563         db  0xff ; '.'
0000000000007564         db  0x78 ; 'x'
0000000000007565         db  0xcd ; '.'
0000000000007566         db  0xff ; '.'
0000000000007567         db  0xff ; '.'
0000000000007568         db  0x78 ; 'x'
0000000000007569         db  0xcd ; '.'
000000000000756a         db  0xff ; '.'
000000000000756b         db  0xff ; '.'
000000000000756c         db  0x78 ; 'x'
000000000000756d         db  0xcd ; '.'
000000000000756e         db  0xff ; '.'
000000000000756f         db  0xff ; '.'
0000000000007570         db  0x78 ; 'x'
0000000000007571         db  0xcd ; '.'
0000000000007572         db  0xff ; '.'
0000000000007573         db  0xff ; '.'
0000000000007574         db  0xe8 ; '.'
0000000000007575         db  0xc8 ; '.'
0000000000007576         db  0xff ; '.'
0000000000007577         db  0xff ; '.'
0000000000007578         db  0xa8 ; '.'
0000000000007579         db  0xcd ; '.'
000000000000757a         db  0xff ; '.'
000000000000757b         db  0xff ; '.'
000000000000757c         db  0xe8 ; '.'
000000000000757d         db  0xc8 ; '.'
000000000000757e         db  0xff ; '.'
000000000000757f         db  0xff ; '.'
0000000000007580         db  0x90 ; '.'
0000000000007581         db  0xcd ; '.'
0000000000007582         db  0xff ; '.'
0000000000007583         db  0xff ; '.'
0000000000007584         db  0x00 ; '.'
0000000000007585         db  0x00 ; '.'
0000000000007586         db  0x00 ; '.'
0000000000007587         db  0x00 ; '.'
0000000000007588         db  0x00 ; '.'
0000000000007589         db  0x00 ; '.'
000000000000758a         db  0x00 ; '.'
000000000000758b         db  0x00 ; '.'
000000000000758c         db  0x00 ; '.'
000000000000758d         db  0x00 ; '.'
000000000000758e         db  0x00 ; '.'
000000000000758f         db  0x00 ; '.'
0000000000007590         db  0x00 ; '.'
0000000000007591         db  0x00 ; '.'
0000000000007592         db  0x00 ; '.'
0000000000007593         db  0x00 ; '.'
0000000000007594         db  0x00 ; '.'
0000000000007595         db  0x00 ; '.'
0000000000007596         db  0x00 ; '.'
0000000000007597         db  0x00 ; '.'
0000000000007598         db  0x00 ; '.'
0000000000007599         db  0x00 ; '.'
000000000000759a         db  0x00 ; '.'
000000000000759b         db  0x00 ; '.'
000000000000759c         db  0x00 ; '.'
000000000000759d         db  0x00 ; '.'
000000000000759e         db  0x00 ; '.'
000000000000759f         db  0x00 ; '.'
                     quoting_style_vals:
00000000000075a0         db  0x00 ; '.'
00000000000075a1         db  0x00 ; '.'
00000000000075a2         db  0x00 ; '.'
00000000000075a3         db  0x00 ; '.'
00000000000075a4         db  0x01 ; '.'
00000000000075a5         db  0x00 ; '.'
00000000000075a6         db  0x00 ; '.'
00000000000075a7         db  0x00 ; '.'
00000000000075a8         db  0x02 ; '.'
00000000000075a9         db  0x00 ; '.'
00000000000075aa         db  0x00 ; '.'
00000000000075ab         db  0x00 ; '.'
00000000000075ac         db  0x03 ; '.'
00000000000075ad         db  0x00 ; '.'
00000000000075ae         db  0x00 ; '.'
00000000000075af         db  0x00 ; '.'
00000000000075b0         db  0x04 ; '.'
00000000000075b1         db  0x00 ; '.'
00000000000075b2         db  0x00 ; '.'
00000000000075b3         db  0x00 ; '.'
00000000000075b4         db  0x05 ; '.'
00000000000075b5         db  0x00 ; '.'
00000000000075b6         db  0x00 ; '.'
00000000000075b7         db  0x00 ; '.'
00000000000075b8         db  0x06 ; '.'
00000000000075b9         db  0x00 ; '.'
00000000000075ba         db  0x00 ; '.'
00000000000075bb         db  0x00 ; '.'
00000000000075bc         db  0x07 ; '.'
00000000000075bd         db  0x00 ; '.'
00000000000075be         db  0x00 ; '.'
00000000000075bf         db  0x00 ; '.'
00000000000075c0         db  0x08 ; '.'
00000000000075c1         db  0x00 ; '.'
00000000000075c2         db  0x00 ; '.'
00000000000075c3         db  0x00 ; '.'
00000000000075c4         db  0x09 ; '.'
00000000000075c5         db  0x00 ; '.'
00000000000075c6         db  0x00 ; '.'
00000000000075c7         db  0x00 ; '.'
                     aSSSn:
00000000000075c8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000075d4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000075db         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000075dc         db  0x43 ; 'C'
00000000000075dd         db  0x29 ; ')'
00000000000075de         db  0x00 ; '.'
                     aWrittenBySn:
00000000000075df         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000075ef         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007606         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007622         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000007637         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000764d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007661         align      8
                     aNlicenseGplv3G:
0000000000007668         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007734         align      8
                     aWrittenBySSSna:
0000000000007738         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7758:        // aWrittenBySSSns
0000000000007758         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000777c         align      128
                     aWrittenBySSSns_7780:        // aWrittenBySSSns
0000000000007780         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_77a8:        // aWrittenBySSSns
00000000000077a8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000077d4         align      8
                     aWrittenBySSSns_77d8:        // aWrittenBySSSns
00000000000077d8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007808         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000783c         align      64
                     aWrittenBySSSns_7840:        // aWrittenBySSSns
0000000000007840         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000787c         align      128
                     aGeneralHelpUsi:
0000000000007880         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000078c1         align      4
                     switch_table_78c4:        // switch_table
00000000000078c4         dd         version_etc_arn.loc_57a6-switch_table_78c4, version_etc_arn.loc_5838-switch_table_78c4, version_etc_arn.loc_5878-switch_table_78c4, version_etc_arn.loc_58c0-switch_table_78c4 ; switch table used at 0x5724 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000078d4         dd         version_etc_arn.loc_5910-switch_table_78c4, version_etc_arn.loc_5968-switch_table_78c4, version_etc_arn.loc_5998-switch_table_78c4, version_etc_arn.loc_5a00-switch_table_78c4
00000000000078e4         dd         version_etc_arn.loc_5730-switch_table_78c4, version_etc_arn.loc_57e0-switch_table_78c4
00000000000078ec         align      256
                     version_etc_copyright:
0000000000007900         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000792f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000007940         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000007960         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000007986         align      8
                     switch_table_7988:        // switch_table
0000000000007988         dd         xstrtoumax.loc_6386-switch_table_7988, 2 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_6363-switch_table_7988, xstrtoumax.loc_627c-switch_table_7988 ; switch table used at 0x6236 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000799c         dd         xstrtoumax.loc_639c-switch_table_7988, 3 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_631f-switch_table_7988, xstrtoumax.loc_627c-switch_table_7988
00000000000079b4         dd         xstrtoumax.loc_6238-switch_table_7988, 2 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_6340-switch_table_7988, 3 dup (xstrtoumax.loc_627c-switch_table_7988)
00000000000079d0         dd         xstrtoumax.loc_62ff-switch_table_7988, 4 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_62da-switch_table_7988, xstrtoumax.loc_62b4-switch_table_7988
00000000000079ec         dd         7 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_629d-switch_table_7988, xstrtoumax.loc_6260-switch_table_7988, 3 dup (xstrtoumax.loc_627c-switch_table_7988)
0000000000007a1c         dd         xstrtoumax.loc_639c-switch_table_7988, 3 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_631f-switch_table_7988, xstrtoumax.loc_627c-switch_table_7988
0000000000007a34         dd         xstrtoumax.loc_6238-switch_table_7988, 6 dup (xstrtoumax.loc_627c-switch_table_7988), xstrtoumax.loc_62ff-switch_table_7988, 2 dup (xstrtoumax.loc_627c-switch_table_7988)
0000000000007a5c         dd         xstrtoumax.loc_6287-switch_table_7988
                     __PRETTY_FUNCTION__.4162:
0000000000007a60         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
0000000000007a6b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007a6c         db  0x00 ; '.'
                     aPosix:
0000000000007a6d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007a73         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007a79         db  0x00 ; '.'
0000000000007a7a         db  0x00 ; '.'
0000000000007a7b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7a7c; 0x7d30[ (692 bytes)
        ; File offset : [31356; 32048[ (692 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007a7c         db  0x01 ; '.'
0000000000007a7d         db  0x1b ; '.'
0000000000007a7e         db  0x03 ; '.'
0000000000007a7f         db  0x3b ; ';'
0000000000007a80         db  0xb0 ; '.'
0000000000007a81         db  0x02 ; '.'
0000000000007a82         db  0x00 ; '.'
0000000000007a83         db  0x00 ; '.'
0000000000007a84         db  0x55 ; 'U'
0000000000007a85         db  0x00 ; '.'
0000000000007a86         db  0x00 ; '.'
0000000000007a87         db  0x00 ; '.'
0000000000007a88         db  0x74 ; 't'
0000000000007a89         db  0x9a ; '.'
0000000000007a8a         db  0xff ; '.'
0000000000007a8b         db  0xff ; '.'
0000000000007a8c         db  0xfc ; '.'
0000000000007a8d         db  0x02 ; '.'
0000000000007a8e         db  0x00 ; '.'
0000000000007a8f         db  0x00 ; '.'
0000000000007a90         db  0xa4 ; '.'
0000000000007a91         db  0x9d ; '.'
0000000000007a92         db  0xff ; '.'
0000000000007a93         db  0xff ; '.'
0000000000007a94         db  0x24 ; '$'
0000000000007a95         db  0x03 ; '.'
0000000000007a96         db  0x00 ; '.'
0000000000007a97         db  0x00 ; '.'
0000000000007a98         db  0xb4 ; '.'
0000000000007a99         db  0x9d ; '.'
0000000000007a9a         db  0xff ; '.'
0000000000007a9b         db  0xff ; '.'
0000000000007a9c         db  0x3c ; '<'
0000000000007a9d         db  0x05 ; '.'
0000000000007a9e         db  0x00 ; '.'
0000000000007a9f         db  0x00 ; '.'
0000000000007aa0         db  0xe4 ; '.'
0000000000007aa1         db  0xae ; '.'
0000000000007aa2         db  0xff ; '.'
0000000000007aa3         db  0xff ; '.'
0000000000007aa4         db  0xcc ; '.'
0000000000007aa5         db  0x02 ; '.'
0000000000007aa6         db  0x00 ; '.'
0000000000007aa7         db  0x00 ; '.'
0000000000007aa8         db  0xf4 ; '.'
0000000000007aa9         db  0xaf ; '.'
0000000000007aaa         db  0xff ; '.'
0000000000007aab         db  0xff ; '.'
0000000000007aac         db  0x3c ; '<'
0000000000007aad         db  0x03 ; '.'
0000000000007aae         db  0x00 ; '.'
0000000000007aaf         db  0x00 ; '.'
0000000000007ab0         db  0x54 ; 'T'
0000000000007ab1         db  0xb0 ; '.'
0000000000007ab2         db  0xff ; '.'
0000000000007ab3         db  0xff ; '.'
0000000000007ab4         db  0x58 ; 'X'
0000000000007ab5         db  0x03 ; '.'
0000000000007ab6         db  0x00 ; '.'
0000000000007ab7         db  0x00 ; '.'
0000000000007ab8         db  0x14 ; '.'
0000000000007ab9         db  0xb1 ; '.'
0000000000007aba         db  0xff ; '.'
0000000000007abb         db  0xff ; '.'
0000000000007abc         db  0x94 ; '.'
0000000000007abd         db  0x03 ; '.'
0000000000007abe         db  0x00 ; '.'
0000000000007abf         db  0x00 ; '.'
0000000000007ac0         db  0x94 ; '.'
0000000000007ac1         db  0xb1 ; '.'
0000000000007ac2         db  0xff ; '.'
0000000000007ac3         db  0xff ; '.'
0000000000007ac4         db  0xc0 ; '.'
0000000000007ac5         db  0x03 ; '.'
0000000000007ac6         db  0x00 ; '.'
0000000000007ac7         db  0x00 ; '.'
0000000000007ac8         db  0x64 ; 'd'
0000000000007ac9         db  0xb2 ; '.'
0000000000007aca         db  0xff ; '.'
0000000000007acb         db  0xff ; '.'
0000000000007acc         db  0xfc ; '.'
0000000000007acd         db  0x03 ; '.'
0000000000007ace         db  0x00 ; '.'
0000000000007acf         db  0x00 ; '.'
0000000000007ad0         db  0xf4 ; '.'
0000000000007ad1         db  0xb3 ; '.'
0000000000007ad2         db  0xff ; '.'
0000000000007ad3         db  0xff ; '.'
0000000000007ad4         db  0x48 ; 'H'
0000000000007ad5         db  0x04 ; '.'
0000000000007ad6         db  0x00 ; '.'
0000000000007ad7         db  0x00 ; '.'
0000000000007ad8         db  0xe4 ; '.'
0000000000007ad9         db  0xb4 ; '.'
0000000000007ada         db  0xff ; '.'
0000000000007adb         db  0xff ; '.'
0000000000007adc         db  0x94 ; '.'
0000000000007add         db  0x04 ; '.'
0000000000007ade         db  0x00 ; '.'
0000000000007adf         db  0x00 ; '.'
0000000000007ae0         db  0x64 ; 'd'
0000000000007ae1         db  0xb5 ; '.'
0000000000007ae2         db  0xff ; '.'
0000000000007ae3         db  0xff ; '.'
0000000000007ae4         db  0xc0 ; '.'
0000000000007ae5         db  0x04 ; '.'
0000000000007ae6         db  0x00 ; '.'
0000000000007ae7         db  0x00 ; '.'
0000000000007ae8         db  0x04 ; '.'
0000000000007ae9         db  0xb8 ; '.'
0000000000007aea         db  0xff ; '.'
0000000000007aeb         db  0xff ; '.'
0000000000007aec         db  0x10 ; '.'
0000000000007aed         db  0x05 ; '.'
0000000000007aee         db  0x00 ; '.'
0000000000007aef         db  0x00 ; '.'
0000000000007af0         db  0x34 ; '4'
0000000000007af1         db  0xbc ; '.'
0000000000007af2         db  0xff ; '.'
0000000000007af3         db  0xff ; '.'
0000000000007af4         db  0x9c ; '.'
0000000000007af5         db  0x05 ; '.'
0000000000007af6         db  0x00 ; '.'
0000000000007af7         db  0x00 ; '.'
0000000000007af8         db  0x44 ; 'D'
0000000000007af9         db  0xbc ; '.'
0000000000007afa         db  0xff ; '.'
0000000000007afb         db  0xff ; '.'
0000000000007afc         db  0xb0 ; '.'
0000000000007afd         db  0x05 ; '.'
0000000000007afe         db  0x00 ; '.'
0000000000007aff         db  0x00 ; '.'
0000000000007b00         db  0x54 ; 'T'
0000000000007b01         db  0xbc ; '.'
0000000000007b02         db  0xff ; '.'
0000000000007b03         db  0xff ; '.'
0000000000007b04         db  0xc4 ; '.'
0000000000007b05         db  0x05 ; '.'
0000000000007b06         db  0x00 ; '.'
0000000000007b07         db  0x00 ; '.'
0000000000007b08         db  0x04 ; '.'
0000000000007b09         db  0xbd ; '.'
0000000000007b0a         db  0xff ; '.'
0000000000007b0b         db  0xff ; '.'
0000000000007b0c         db  0xf4 ; '.'
0000000000007b0d         db  0x05 ; '.'
0000000000007b0e         db  0x00 ; '.'
0000000000007b0f         db  0x00 ; '.'
0000000000007b10         db  0x84 ; '.'
0000000000007b11         db  0xbd ; '.'
0000000000007b12         db  0xff ; '.'
0000000000007b13         db  0xff ; '.'
0000000000007b14         db  0x44 ; 'D'
0000000000007b15         db  0x06 ; '.'
0000000000007b16         db  0x00 ; '.'
0000000000007b17         db  0x00 ; '.'
0000000000007b18         db  0x24 ; '$'
0000000000007b19         db  0xbe ; '.'
0000000000007b1a         db  0xff ; '.'
0000000000007b1b         db  0xff ; '.'
0000000000007b1c         db  0x5c ; '\'
0000000000007b1d         db  0x06 ; '.'
0000000000007b1e         db  0x00 ; '.'
0000000000007b1f         db  0x00 ; '.'
0000000000007b20         db  0x74 ; 't'
0000000000007b21         db  0xbe ; '.'
0000000000007b22         db  0xff ; '.'
0000000000007b23         db  0xff ; '.'
0000000000007b24         db  0x74 ; 't'
0000000000007b25         db  0x06 ; '.'
0000000000007b26         db  0x00 ; '.'
0000000000007b27         db  0x00 ; '.'
0000000000007b28         db  0x14 ; '.'
0000000000007b29         db  0xbf ; '.'
0000000000007b2a         db  0xff ; '.'
0000000000007b2b         db  0xff ; '.'
0000000000007b2c         db  0x94 ; '.'
0000000000007b2d         db  0x06 ; '.'
0000000000007b2e         db  0x00 ; '.'
0000000000007b2f         db  0x00 ; '.'
0000000000007b30         db  0x04 ; '.'
0000000000007b31         db  0xc0 ; '.'
0000000000007b32         db  0xff ; '.'
0000000000007b33         db  0xff ; '.'
0000000000007b34         db  0xd8 ; '.'
0000000000007b35         db  0x06 ; '.'
0000000000007b36         db  0x00 ; '.'
0000000000007b37         db  0x00 ; '.'
0000000000007b38         db  0x44 ; 'D'
0000000000007b39         db  0xd2 ; '.'
0000000000007b3a         db  0xff ; '.'
0000000000007b3b         db  0xff ; '.'
0000000000007b3c         db  0x50 ; 'P'
0000000000007b3d         db  0x07 ; '.'
0000000000007b3e         db  0x00 ; '.'
0000000000007b3f         db  0x00 ; '.'
0000000000007b40         db  0xf4 ; '.'
0000000000007b41         db  0xd3 ; '.'
0000000000007b42         db  0xff ; '.'
0000000000007b43         db  0xff ; '.'
0000000000007b44         db  0xbc ; '.'
0000000000007b45         db  0x07 ; '.'
0000000000007b46         db  0x00 ; '.'
0000000000007b47         db  0x00 ; '.'
0000000000007b48         db  0x34 ; '4'
0000000000007b49         db  0xd4 ; '.'
0000000000007b4a         db  0xff ; '.'
0000000000007b4b         db  0xff ; '.'
0000000000007b4c         db  0xe8 ; '.'
0000000000007b4d         db  0x07 ; '.'
0000000000007b4e         db  0x00 ; '.'
0000000000007b4f         db  0x00 ; '.'
0000000000007b50         db  0x54 ; 'T'
0000000000007b51         db  0xd4 ; '.'
0000000000007b52         db  0xff ; '.'
0000000000007b53         db  0xff ; '.'
0000000000007b54         db  0xfc ; '.'
0000000000007b55         db  0x07 ; '.'
0000000000007b56         db  0x00 ; '.'
0000000000007b57         db  0x00 ; '.'
0000000000007b58         db  0x74 ; 't'
0000000000007b59         db  0xd4 ; '.'
0000000000007b5a         db  0xff ; '.'
0000000000007b5b         db  0xff ; '.'
0000000000007b5c         db  0x10 ; '.'
0000000000007b5d         db  0x08 ; '.'
0000000000007b5e         db  0x00 ; '.'
0000000000007b5f         db  0x00 ; '.'
0000000000007b60         db  0xb4 ; '.'
0000000000007b61         db  0xd4 ; '.'
0000000000007b62         db  0xff ; '.'
0000000000007b63         db  0xff ; '.'
0000000000007b64         db  0x24 ; '$'
0000000000007b65         db  0x08 ; '.'
0000000000007b66         db  0x00 ; '.'
0000000000007b67         db  0x00 ; '.'
0000000000007b68         db  0xd4 ; '.'
0000000000007b69         db  0xd4 ; '.'
0000000000007b6a         db  0xff ; '.'
0000000000007b6b         db  0xff ; '.'
0000000000007b6c         db  0x38 ; '8'
0000000000007b6d         db  0x08 ; '.'
0000000000007b6e         db  0x00 ; '.'
0000000000007b6f         db  0x00 ; '.'
0000000000007b70         db  0x04 ; '.'
0000000000007b71         db  0xd5 ; '.'
0000000000007b72         db  0xff ; '.'
0000000000007b73         db  0xff ; '.'
0000000000007b74         db  0x4c ; 'L'
0000000000007b75         db  0x08 ; '.'
0000000000007b76         db  0x00 ; '.'
0000000000007b77         db  0x00 ; '.'
0000000000007b78         db  0x84 ; '.'
0000000000007b79         db  0xd5 ; '.'
0000000000007b7a         db  0xff ; '.'
0000000000007b7b         db  0xff ; '.'
0000000000007b7c         db  0xa0 ; '.'
0000000000007b7d         db  0x08 ; '.'
0000000000007b7e         db  0x00 ; '.'
0000000000007b7f         db  0x00 ; '.'
0000000000007b80         db  0x74 ; 't'
0000000000007b81         db  0xd6 ; '.'
0000000000007b82         db  0xff ; '.'
0000000000007b83         db  0xff ; '.'
0000000000007b84         db  0x0c ; '.'
0000000000007b85         db  0x09 ; '.'
0000000000007b86         db  0x00 ; '.'
0000000000007b87         db  0x00 ; '.'
0000000000007b88         db  0x84 ; '.'
0000000000007b89         db  0xd6 ; '.'
0000000000007b8a         db  0xff ; '.'
0000000000007b8b         db  0xff ; '.'
0000000000007b8c         db  0x20 ; ' '
0000000000007b8d         db  0x09 ; '.'
0000000000007b8e         db  0x00 ; '.'
0000000000007b8f         db  0x00 ; '.'
0000000000007b90         db  0x24 ; '$'
0000000000007b91         db  0xd7 ; '.'
0000000000007b92         db  0xff ; '.'
0000000000007b93         db  0xff ; '.'
0000000000007b94         db  0x4c ; 'L'
0000000000007b95         db  0x09 ; '.'
0000000000007b96         db  0x00 ; '.'
0000000000007b97         db  0x00 ; '.'
0000000000007b98         db  0x44 ; 'D'
0000000000007b99         db  0xd7 ; '.'
0000000000007b9a         db  0xff ; '.'
0000000000007b9b         db  0xff ; '.'
0000000000007b9c         db  0x60 ; '`'
0000000000007b9d         db  0x09 ; '.'
0000000000007b9e         db  0x00 ; '.'
0000000000007b9f         db  0x00 ; '.'
0000000000007ba0         db  0x54 ; 'T'
0000000000007ba1         db  0xd7 ; '.'
0000000000007ba2         db  0xff ; '.'
0000000000007ba3         db  0xff ; '.'
0000000000007ba4         db  0x74 ; 't'
0000000000007ba5         db  0x09 ; '.'
0000000000007ba6         db  0x00 ; '.'
0000000000007ba7         db  0x00 ; '.'
0000000000007ba8         db  0x74 ; 't'
0000000000007ba9         db  0xd7 ; '.'
0000000000007baa         db  0xff ; '.'
0000000000007bab         db  0xff ; '.'
0000000000007bac         db  0x88 ; '.'
0000000000007bad         db  0x09 ; '.'
0000000000007bae         db  0x00 ; '.'
0000000000007baf         db  0x00 ; '.'
0000000000007bb0         db  0x94 ; '.'
0000000000007bb1         db  0xd7 ; '.'
0000000000007bb2         db  0xff ; '.'
0000000000007bb3         db  0xff ; '.'
0000000000007bb4         db  0x9c ; '.'
0000000000007bb5         db  0x09 ; '.'
0000000000007bb6         db  0x00 ; '.'
0000000000007bb7         db  0x00 ; '.'
0000000000007bb8         db  0x24 ; '$'
0000000000007bb9         db  0xd8 ; '.'
0000000000007bba         db  0xff ; '.'
0000000000007bbb         db  0xff ; '.'
0000000000007bbc         db  0xb8 ; '.'
0000000000007bbd         db  0x09 ; '.'
0000000000007bbe         db  0x00 ; '.'
0000000000007bbf         db  0x00 ; '.'
0000000000007bc0         db  0xb4 ; '.'
0000000000007bc1         db  0xd8 ; '.'
0000000000007bc2         db  0xff ; '.'
0000000000007bc3         db  0xff ; '.'
0000000000007bc4         db  0xd4 ; '.'
0000000000007bc5         db  0x09 ; '.'
0000000000007bc6         db  0x00 ; '.'
0000000000007bc7         db  0x00 ; '.'
0000000000007bc8         db  0xc4 ; '.'
0000000000007bc9         db  0xd8 ; '.'
0000000000007bca         db  0xff ; '.'
0000000000007bcb         db  0xff ; '.'
0000000000007bcc         db  0xe8 ; '.'
0000000000007bcd         db  0x09 ; '.'
0000000000007bce         db  0x00 ; '.'
0000000000007bcf         db  0x00 ; '.'
0000000000007bd0         db  0xd4 ; '.'
0000000000007bd1         db  0xd8 ; '.'
0000000000007bd2         db  0xff ; '.'
0000000000007bd3         db  0xff ; '.'
0000000000007bd4         db  0xfc ; '.'
0000000000007bd5         db  0x09 ; '.'
0000000000007bd6         db  0x00 ; '.'
0000000000007bd7         db  0x00 ; '.'
0000000000007bd8         db  0x74 ; 't'
0000000000007bd9         db  0xd9 ; '.'
0000000000007bda         db  0xff ; '.'
0000000000007bdb         db  0xff ; '.'
0000000000007bdc         db  0x18 ; '.'
0000000000007bdd         db  0x0a ; '.'
0000000000007bde         db  0x00 ; '.'
0000000000007bdf         db  0x00 ; '.'
0000000000007be0         db  0x84 ; '.'
0000000000007be1         db  0xd9 ; '.'
0000000000007be2         db  0xff ; '.'
0000000000007be3         db  0xff ; '.'
0000000000007be4         db  0x2c ; ','
0000000000007be5         db  0x0a ; '.'
0000000000007be6         db  0x00 ; '.'
0000000000007be7         db  0x00 ; '.'
0000000000007be8         db  0xa4 ; '.'
0000000000007be9         db  0xd9 ; '.'
0000000000007bea         db  0xff ; '.'
0000000000007beb         db  0xff ; '.'
0000000000007bec         db  0x40 ; '@'
0000000000007bed         db  0x0a ; '.'
0000000000007bee         db  0x00 ; '.'
0000000000007bef         db  0x00 ; '.'
0000000000007bf0         db  0xb4 ; '.'
0000000000007bf1         db  0xd9 ; '.'
0000000000007bf2         db  0xff ; '.'
0000000000007bf3         db  0xff ; '.'
0000000000007bf4         db  0x54 ; 'T'
0000000000007bf5         db  0x0a ; '.'
0000000000007bf6         db  0x00 ; '.'
0000000000007bf7         db  0x00 ; '.'
0000000000007bf8         db  0x44 ; 'D'
0000000000007bf9         db  0xda ; '.'
0000000000007bfa         db  0xff ; '.'
0000000000007bfb         db  0xff ; '.'
0000000000007bfc         db  0x70 ; 'p'
0000000000007bfd         db  0x0a ; '.'
0000000000007bfe         db  0x00 ; '.'
0000000000007bff         db  0x00 ; '.'
0000000000007c00         db  0xe4 ; '.'
0000000000007c01         db  0xda ; '.'
0000000000007c02         db  0xff ; '.'
0000000000007c03         db  0xff ; '.'
0000000000007c04         db  0x8c ; '.'
0000000000007c05         db  0x0a ; '.'
0000000000007c06         db  0x00 ; '.'
0000000000007c07         db  0x00 ; '.'
0000000000007c08         db  0xf4 ; '.'
0000000000007c09         db  0xda ; '.'
0000000000007c0a         db  0xff ; '.'
0000000000007c0b         db  0xff ; '.'
0000000000007c0c         db  0xa0 ; '.'
0000000000007c0d         db  0x0a ; '.'
0000000000007c0e         db  0x00 ; '.'
0000000000007c0f         db  0x00 ; '.'
0000000000007c10         db  0x14 ; '.'
0000000000007c11         db  0xdb ; '.'
0000000000007c12         db  0xff ; '.'
0000000000007c13         db  0xff ; '.'
0000000000007c14         db  0xb4 ; '.'
0000000000007c15         db  0x0a ; '.'
0000000000007c16         db  0x00 ; '.'
0000000000007c17         db  0x00 ; '.'
0000000000007c18         db  0x34 ; '4'
0000000000007c19         db  0xdb ; '.'
0000000000007c1a         db  0xff ; '.'
0000000000007c1b         db  0xff ; '.'
0000000000007c1c         db  0xc8 ; '.'
0000000000007c1d         db  0x0a ; '.'
0000000000007c1e         db  0x00 ; '.'
0000000000007c1f         db  0x00 ; '.'
0000000000007c20         db  0x44 ; 'D'
0000000000007c21         db  0xdb ; '.'
0000000000007c22         db  0xff ; '.'
0000000000007c23         db  0xff ; '.'
0000000000007c24         db  0xdc ; '.'
0000000000007c25         db  0x0a ; '.'
0000000000007c26         db  0x00 ; '.'
0000000000007c27         db  0x00 ; '.'
0000000000007c28         db  0x64 ; 'd'
0000000000007c29         db  0xdb ; '.'
0000000000007c2a         db  0xff ; '.'
0000000000007c2b         db  0xff ; '.'
0000000000007c2c         db  0xf0 ; '.'
0000000000007c2d         db  0x0a ; '.'
0000000000007c2e         db  0x00 ; '.'
0000000000007c2f         db  0x00 ; '.'
0000000000007c30         db  0x84 ; '.'
0000000000007c31         db  0xdb ; '.'
0000000000007c32         db  0xff ; '.'
0000000000007c33         db  0xff ; '.'
0000000000007c34         db  0x04 ; '.'
0000000000007c35         db  0x0b ; '.'
0000000000007c36         db  0x00 ; '.'
0000000000007c37         db  0x00 ; '.'
0000000000007c38         db  0xa4 ; '.'
0000000000007c39         db  0xdb ; '.'
0000000000007c3a         db  0xff ; '.'
0000000000007c3b         db  0xff ; '.'
0000000000007c3c         db  0x1c ; '.'
0000000000007c3d         db  0x0b ; '.'
0000000000007c3e         db  0x00 ; '.'
0000000000007c3f         db  0x00 ; '.'
0000000000007c40         db  0x04 ; '.'
0000000000007c41         db  0xdc ; '.'
0000000000007c42         db  0xff ; '.'
0000000000007c43         db  0xff ; '.'
0000000000007c44         db  0x54 ; 'T'
0000000000007c45         db  0x0b ; '.'
0000000000007c46         db  0x00 ; '.'
0000000000007c47         db  0x00 ; '.'
0000000000007c48         db  0x24 ; '$'
0000000000007c49         db  0xe0 ; '.'
0000000000007c4a         db  0xff ; '.'
0000000000007c4b         db  0xff ; '.'
0000000000007c4c         db  0x68 ; 'h'
0000000000007c4d         db  0x0c ; '.'
0000000000007c4e         db  0x00 ; '.'
0000000000007c4f         db  0x00 ; '.'
0000000000007c50         db  0x44 ; 'D'
0000000000007c51         db  0xe0 ; '.'
0000000000007c52         db  0xff ; '.'
0000000000007c53         db  0xff ; '.'
0000000000007c54         db  0x7c ; '|'
0000000000007c55         db  0x0c ; '.'
0000000000007c56         db  0x00 ; '.'
0000000000007c57         db  0x00 ; '.'
0000000000007c58         db  0xc4 ; '.'
0000000000007c59         db  0xe0 ; '.'
0000000000007c5a         db  0xff ; '.'
0000000000007c5b         db  0xff ; '.'
0000000000007c5c         db  0x98 ; '.'
0000000000007c5d         db  0x0c ; '.'
0000000000007c5e         db  0x00 ; '.'
0000000000007c5f         db  0x00 ; '.'
0000000000007c60         db  0xa4 ; '.'
0000000000007c61         db  0xe1 ; '.'
0000000000007c62         db  0xff ; '.'
0000000000007c63         db  0xff ; '.'
0000000000007c64         db  0xc4 ; '.'
0000000000007c65         db  0x0c ; '.'
0000000000007c66         db  0x00 ; '.'
0000000000007c67         db  0x00 ; '.'
0000000000007c68         db  0x24 ; '$'
0000000000007c69         db  0xe2 ; '.'
0000000000007c6a         db  0xff ; '.'
0000000000007c6b         db  0xff ; '.'
0000000000007c6c         db  0xe4 ; '.'
0000000000007c6d         db  0x0c ; '.'
0000000000007c6e         db  0x00 ; '.'
0000000000007c6f         db  0x00 ; '.'
0000000000007c70         db  0x44 ; 'D'
0000000000007c71         db  0xe2 ; '.'
0000000000007c72         db  0xff ; '.'
0000000000007c73         db  0xff ; '.'
0000000000007c74         db  0x00 ; '.'
0000000000007c75         db  0x0d ; '.'
0000000000007c76         db  0x00 ; '.'
0000000000007c77         db  0x00 ; '.'
0000000000007c78         db  0x74 ; 't'
0000000000007c79         db  0xe2 ; '.'
0000000000007c7a         db  0xff ; '.'
0000000000007c7b         db  0xff ; '.'
0000000000007c7c         db  0x14 ; '.'
0000000000007c7d         db  0x0d ; '.'
0000000000007c7e         db  0x00 ; '.'
0000000000007c7f         db  0x00 ; '.'
0000000000007c80         db  0x84 ; '.'
0000000000007c81         db  0xe2 ; '.'
0000000000007c82         db  0xff ; '.'
0000000000007c83         db  0xff ; '.'
0000000000007c84         db  0x28 ; '('
0000000000007c85         db  0x0d ; '.'
0000000000007c86         db  0x00 ; '.'
0000000000007c87         db  0x00 ; '.'
0000000000007c88         db  0xc4 ; '.'
0000000000007c89         db  0xe2 ; '.'
0000000000007c8a         db  0xff ; '.'
0000000000007c8b         db  0xff ; '.'
0000000000007c8c         db  0x4c ; 'L'
0000000000007c8d         db  0x0d ; '.'
0000000000007c8e         db  0x00 ; '.'
0000000000007c8f         db  0x00 ; '.'
0000000000007c90         db  0xf4 ; '.'
0000000000007c91         db  0xe2 ; '.'
0000000000007c92         db  0xff ; '.'
0000000000007c93         db  0xff ; '.'
0000000000007c94         db  0x60 ; '`'
0000000000007c95         db  0x0d ; '.'
0000000000007c96         db  0x00 ; '.'
0000000000007c97         db  0x00 ; '.'
0000000000007c98         db  0x84 ; '.'
0000000000007c99         db  0xe3 ; '.'
0000000000007c9a         db  0xff ; '.'
0000000000007c9b         db  0xff ; '.'
0000000000007c9c         db  0x78 ; 'x'
0000000000007c9d         db  0x0d ; '.'
0000000000007c9e         db  0x00 ; '.'
0000000000007c9f         db  0x00 ; '.'
0000000000007ca0         db  0xd4 ; '.'
0000000000007ca1         db  0xe3 ; '.'
0000000000007ca2         db  0xff ; '.'
0000000000007ca3         db  0xff ; '.'
0000000000007ca4         db  0x90 ; '.'
0000000000007ca5         db  0x0d ; '.'
0000000000007ca6         db  0x00 ; '.'
0000000000007ca7         db  0x00 ; '.'
0000000000007ca8         db  0xf4 ; '.'
0000000000007ca9         db  0xe3 ; '.'
0000000000007caa         db  0xff ; '.'
0000000000007cab         db  0xff ; '.'
0000000000007cac         db  0xac ; '.'
0000000000007cad         db  0x0d ; '.'
0000000000007cae         db  0x00 ; '.'
0000000000007caf         db  0x00 ; '.'
0000000000007cb0         db  0x24 ; '$'
0000000000007cb1         db  0xe4 ; '.'
0000000000007cb2         db  0xff ; '.'
0000000000007cb3         db  0xff ; '.'
0000000000007cb4         db  0xc8 ; '.'
0000000000007cb5         db  0x0d ; '.'
0000000000007cb6         db  0x00 ; '.'
0000000000007cb7         db  0x00 ; '.'
0000000000007cb8         db  0x54 ; 'T'
0000000000007cb9         db  0xe4 ; '.'
0000000000007cba         db  0xff ; '.'
0000000000007cbb         db  0xff ; '.'
0000000000007cbc         db  0xf0 ; '.'
0000000000007cbd         db  0x0d ; '.'
0000000000007cbe         db  0x00 ; '.'
0000000000007cbf         db  0x00 ; '.'
0000000000007cc0         db  0x74 ; 't'
0000000000007cc1         db  0xe4 ; '.'
0000000000007cc2         db  0xff ; '.'
0000000000007cc3         db  0xff ; '.'
0000000000007cc4         db  0x0c ; '.'
0000000000007cc5         db  0x0e ; '.'
0000000000007cc6         db  0x00 ; '.'
0000000000007cc7         db  0x00 ; '.'
0000000000007cc8         db  0xb4 ; '.'
0000000000007cc9         db  0xe4 ; '.'
0000000000007cca         db  0xff ; '.'
0000000000007ccb         db  0xff ; '.'
0000000000007ccc         db  0x24 ; '$'
0000000000007ccd         db  0x0e ; '.'
0000000000007cce         db  0x00 ; '.'
0000000000007ccf         db  0x00 ; '.'
0000000000007cd0         db  0xb4 ; '.'
0000000000007cd1         db  0xe5 ; '.'
0000000000007cd2         db  0xff ; '.'
0000000000007cd3         db  0xff ; '.'
0000000000007cd4         db  0x70 ; 'p'
0000000000007cd5         db  0x0e ; '.'
0000000000007cd6         db  0x00 ; '.'
0000000000007cd7         db  0x00 ; '.'
0000000000007cd8         db  0xe4 ; '.'
0000000000007cd9         db  0xe5 ; '.'
0000000000007cda         db  0xff ; '.'
0000000000007cdb         db  0xff ; '.'
0000000000007cdc         db  0x8c ; '.'
0000000000007cdd         db  0x0e ; '.'
0000000000007cde         db  0x00 ; '.'
0000000000007cdf         db  0x00 ; '.'
0000000000007ce0         db  0x04 ; '.'
0000000000007ce1         db  0xea ; '.'
0000000000007ce2         db  0xff ; '.'
0000000000007ce3         db  0xff ; '.'
0000000000007ce4         db  0xdc ; '.'
0000000000007ce5         db  0x0e ; '.'
0000000000007ce6         db  0x00 ; '.'
0000000000007ce7         db  0x00 ; '.'
0000000000007ce8         db  0x94 ; '.'
0000000000007ce9         db  0xea ; '.'
0000000000007cea         db  0xff ; '.'
0000000000007ceb         db  0xff ; '.'
0000000000007cec         db  0x1c ; '.'
0000000000007ced         db  0x0f ; '.'
0000000000007cee         db  0x00 ; '.'
0000000000007cef         db  0x00 ; '.'
0000000000007cf0         db  0x14 ; '.'
0000000000007cf1         db  0xeb ; '.'
0000000000007cf2         db  0xff ; '.'
0000000000007cf3         db  0xff ; '.'
0000000000007cf4         db  0x6c ; 'l'
0000000000007cf5         db  0x0f ; '.'
0000000000007cf6         db  0x00 ; '.'
0000000000007cf7         db  0x00 ; '.'
0000000000007cf8         db  0x74 ; 't'
0000000000007cf9         db  0xeb ; '.'
0000000000007cfa         db  0xff ; '.'
0000000000007cfb         db  0xff ; '.'
0000000000007cfc         db  0x8c ; '.'
0000000000007cfd         db  0x0f ; '.'
0000000000007cfe         db  0x00 ; '.'
0000000000007cff         db  0x00 ; '.'
0000000000007d00         db  0xb4 ; '.'
0000000000007d01         db  0xeb ; '.'
0000000000007d02         db  0xff ; '.'
0000000000007d03         db  0xff ; '.'
0000000000007d04         db  0xac ; '.'
0000000000007d05         db  0x0f ; '.'
0000000000007d06         db  0x00 ; '.'
0000000000007d07         db  0x00 ; '.'
0000000000007d08         db  0x34 ; '4'
0000000000007d09         db  0xec ; '.'
0000000000007d0a         db  0xff ; '.'
0000000000007d0b         db  0xff ; '.'
0000000000007d0c         db  0xe4 ; '.'
0000000000007d0d         db  0x0f ; '.'
0000000000007d0e         db  0x00 ; '.'
0000000000007d0f         db  0x00 ; '.'
0000000000007d10         db  0x74 ; 't'
0000000000007d11         db  0xec ; '.'
0000000000007d12         db  0xff ; '.'
0000000000007d13         db  0xff ; '.'
0000000000007d14         db  0x04 ; '.'
0000000000007d15         db  0x10 ; '.'
0000000000007d16         db  0x00 ; '.'
0000000000007d17         db  0x00 ; '.'
0000000000007d18         db  0xd4 ; '.'
0000000000007d19         db  0xec ; '.'
0000000000007d1a         db  0xff ; '.'
0000000000007d1b         db  0xff ; '.'
0000000000007d1c         db  0x34 ; '4'
0000000000007d1d         db  0x10 ; '.'
0000000000007d1e         db  0x00 ; '.'
0000000000007d1f         db  0x00 ; '.'
0000000000007d20         db  0x44 ; 'D'
0000000000007d21         db  0xed ; '.'
0000000000007d22         db  0xff ; '.'
0000000000007d23         db  0xff ; '.'
0000000000007d24         db  0x7c ; '|'
0000000000007d25         db  0x10 ; '.'
0000000000007d26         db  0x00 ; '.'
0000000000007d27         db  0x00 ; '.'
0000000000007d28         db  0x54 ; 'T'
0000000000007d29         db  0xed ; '.'
0000000000007d2a         db  0xff ; '.'
0000000000007d2b         db  0xff ; '.'
0000000000007d2c         db  0x94 ; '.'
0000000000007d2d         db  0x10 ; '.'
0000000000007d2e         db  0x00 ; '.'
0000000000007d2f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7d30; 0x8b28[ (3576 bytes)
        ; File offset : [32048; 35624[ (3576 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007d30         dd         0x00000014                                  ; Length of the record
0000000000007d34         dd         0x00000000                                  ; CIE ID
0000000000007d38         db         0x01                                        ; Version
0000000000007d39         db         "zR", 0                                     ; Augmentation String
0000000000007d3c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007d3d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007d3e         db         0x10                                        ; Return address register
0000000000007d3f         db         0x01                                        ; Augmentation data length
0000000000007d40         db         0x1b                                        ; FDE encoding
0000000000007d41         db  0x0c ; '.'
0000000000007d42         db  0x07 ; '.'
0000000000007d43         db  0x08 ; '.'
0000000000007d44         db  0x90 ; '.'
0000000000007d45         db  0x01 ; '.'
0000000000007d46         db  0x07 ; '.'
0000000000007d47         db  0x10 ; '.'
0000000000007d48         dd         0x00000014                                  ; Length of the record
0000000000007d4c         dd         0x0000001c                                  ; FDE: parent CIE at 0x7d30 (FDE encoding = 0x1B)
0000000000007d50         db         0x10, 0xac, 2 dup (0xff)                    ; begin 0x2960
0000000000007d54         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x298b)
0000000000007d58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d59         align      32
0000000000007d60         dd         0x00000014                                  ; Length of the record
0000000000007d64         dd         0x00000000                                  ; CIE ID
0000000000007d68         db         0x01                                        ; Version
0000000000007d69         db         "zR", 0                                     ; Augmentation String
0000000000007d6c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007d6d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007d6e         db         0x10                                        ; Return address register
0000000000007d6f         db         0x01                                        ; Augmentation data length
0000000000007d70         db         0x1b                                        ; FDE encoding
0000000000007d71         db  0x0c ; '.'
0000000000007d72         db  0x07 ; '.'
0000000000007d73         db  0x08 ; '.'
0000000000007d74         db  0x90 ; '.'
0000000000007d75         db  0x01 ; '.'
0000000000007d76         db  0x00 ; '.'
0000000000007d77         db  0x00 ; '.'
0000000000007d78         dd         0x00000024                                  ; Length of the record
0000000000007d7c         dd         0x0000001c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007d80         db         0x70, 0x97, 2 dup (0xff)                    ; begin 0x14f0
0000000000007d84         db         0x30, 0x03, 2 dup (0x00)                    ; length 0x330 (end at 0x1820)
0000000000007d88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d89         db  0x0e ; '.'
0000000000007d8a         db  0x10 ; '.'
0000000000007d8b         db  0x46 ; 'F'
0000000000007d8c         db  0x0e ; '.'
0000000000007d8d         db  0x18 ; '.'
0000000000007d8e         db  0x4a ; 'J'
0000000000007d8f         db  0x0f ; '.'
0000000000007d90         db  0x0b ; '.'
0000000000007d91         db  0x77 ; 'w'
0000000000007d92         db  0x08 ; '.'
0000000000007d93         db  0x80 ; '.'
0000000000007d94         db  0x00 ; '.'
0000000000007d95         db  0x3f ; '?'
0000000000007d96         db  0x1a ; '.'
0000000000007d97         db  0x3b ; ';'
0000000000007d98         db  0x2a ; '*'
0000000000007d99         db  0x33 ; '3'
0000000000007d9a         db  0x24 ; '$'
0000000000007d9b         db  0x22 ; '"'
0000000000007d9c         db  0x00 ; '.'
0000000000007d9d         db  0x00 ; '.'
0000000000007d9e         db  0x00 ; '.'
0000000000007d9f         db  0x00 ; '.'
0000000000007da0         dd         0x00000014                                  ; Length of the record
0000000000007da4         dd         0x00000044                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007da8         db         0x78, 0x9a, 2 dup (0xff)                    ; begin 0x1820
0000000000007dac         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1828)
0000000000007db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007db1         align      8
0000000000007db8         dd         0x00000018                                  ; Length of the record
0000000000007dbc         dd         0x0000005c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007dc0         db         0xb0, 0xac, 2 dup (0xff)                    ; begin 0x2a70
0000000000007dc4         db         0x53, 3 dup (0x00)                          ; length 0x53 (end at 0x2ac3)
0000000000007dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007dc9         db  0x44 ; 'D'
0000000000007dca         db  0x0e ; '.'
0000000000007dcb         db  0x10 ; '.'
0000000000007dcc         db  0x83 ; '.'
0000000000007dcd         db  0x02 ; '.'
0000000000007dce         db  0x69 ; 'i'
0000000000007dcf         db  0x0a ; '.'
0000000000007dd0         db  0x0e ; '.'
0000000000007dd1         db  0x08 ; '.'
0000000000007dd2         db  0x53 ; 'S'
0000000000007dd3         db  0x0b ; '.'
0000000000007dd4         dd         0x00000038                                  ; Length of the record
0000000000007dd8         dd         0x00000078                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007ddc         db         0xf4, 0xac, 2 dup (0xff)                    ; begin 0x2ad0
0000000000007de0         db         0xb3, 3 dup (0x00)                          ; length 0xb3 (end at 0x2b83)
0000000000007de4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007de5         db  0x42 ; 'B'
0000000000007de6         db  0x0e ; '.'
0000000000007de7         db  0x10 ; '.'
0000000000007de8         db  0x8d ; '.'
0000000000007de9         db  0x02 ; '.'
0000000000007dea         db  0x42 ; 'B'
0000000000007deb         db  0x0e ; '.'
0000000000007dec         db  0x18 ; '.'
0000000000007ded         db  0x8c ; '.'
0000000000007dee         db  0x03 ; '.'
0000000000007def         db  0x44 ; 'D'
0000000000007df0         db  0x0e ; '.'
0000000000007df1         db  0x20 ; ' '
0000000000007df2         db  0x86 ; '.'
0000000000007df3         db  0x04 ; '.'
0000000000007df4         db  0x41 ; 'A'
0000000000007df5         db  0x0e ; '.'
0000000000007df6         db  0x28 ; '('
0000000000007df7         db  0x83 ; '.'
0000000000007df8         db  0x05 ; '.'
0000000000007df9         db  0x49 ; 'I'
0000000000007dfa         db  0x0e ; '.'
0000000000007dfb         db  0x50 ; 'P'
0000000000007dfc         db  0x74 ; 't'
0000000000007dfd         db  0x0a ; '.'
0000000000007dfe         db  0x0e ; '.'
0000000000007dff         db  0x28 ; '('
0000000000007e00         db  0x41 ; 'A'
0000000000007e01         db  0x0e ; '.'
0000000000007e02         db  0x20 ; ' '
0000000000007e03         db  0x41 ; 'A'
0000000000007e04         db  0x0e ; '.'
0000000000007e05         db  0x18 ; '.'
0000000000007e06         db  0x42 ; 'B'
0000000000007e07         db  0x0e ; '.'
0000000000007e08         db  0x10 ; '.'
0000000000007e09         db  0x42 ; 'B'
0000000000007e0a         db  0x0e ; '.'
0000000000007e0b         db  0x08 ; '.'
0000000000007e0c         db  0x44 ; 'D'
0000000000007e0d         db  0x0b ; '.'
0000000000007e0e         db  0x00 ; '.'
0000000000007e0f         db  0x00 ; '.'
0000000000007e10         dd         0x00000028                                  ; Length of the record
0000000000007e14         dd         0x000000b4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007e18         db         0x78, 0xad, 2 dup (0xff)                    ; begin 0x2b90
0000000000007e1c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x2c08)
0000000000007e20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e21         db  0x41 ; 'A'
0000000000007e22         db  0x0e ; '.'
0000000000007e23         db  0x10 ; '.'
0000000000007e24         db  0x86 ; '.'
0000000000007e25         db  0x02 ; '.'
0000000000007e26         db  0x41 ; 'A'
0000000000007e27         db  0x0e ; '.'
0000000000007e28         db  0x18 ; '.'
0000000000007e29         db  0x83 ; '.'
0000000000007e2a         db  0x03 ; '.'
0000000000007e2b         db  0x4f ; 'O'
0000000000007e2c         db  0x0e ; '.'
0000000000007e2d         db  0x20 ; ' '
0000000000007e2e         db  0x55 ; 'U'
0000000000007e2f         db  0x0a ; '.'
0000000000007e30         db  0x0e ; '.'
0000000000007e31         db  0x18 ; '.'
0000000000007e32         db  0x41 ; 'A'
0000000000007e33         db  0x0e ; '.'
0000000000007e34         db  0x10 ; '.'
0000000000007e35         db  0x41 ; 'A'
0000000000007e36         db  0x0e ; '.'
0000000000007e37         db  0x08 ; '.'
0000000000007e38         db  0x41 ; 'A'
0000000000007e39         db  0x0b ; '.'
0000000000007e3a         db  0x00 ; '.'
0000000000007e3b         db  0x00 ; '.'
0000000000007e3c         dd         0x00000038                                  ; Length of the record
0000000000007e40         dd         0x000000e0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007e44         db         0xcc, 0xad, 2 dup (0xff)                    ; begin 0x2c10
0000000000007e48         db         0xcc, 3 dup (0x00)                          ; length 0xcc (end at 0x2cdc)
0000000000007e4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e4d         db  0x42 ; 'B'
0000000000007e4e         db  0x0e ; '.'
0000000000007e4f         db  0x10 ; '.'
0000000000007e50         db  0x8d ; '.'
0000000000007e51         db  0x02 ; '.'
0000000000007e52         db  0x42 ; 'B'
0000000000007e53         db  0x0e ; '.'
0000000000007e54         db  0x18 ; '.'
0000000000007e55         db  0x8c ; '.'
0000000000007e56         db  0x03 ; '.'
0000000000007e57         db  0x41 ; 'A'
0000000000007e58         db  0x0e ; '.'
0000000000007e59         db  0x20 ; ' '
0000000000007e5a         db  0x86 ; '.'
0000000000007e5b         db  0x04 ; '.'
0000000000007e5c         db  0x41 ; 'A'
0000000000007e5d         db  0x0e ; '.'
0000000000007e5e         db  0x28 ; '('
0000000000007e5f         db  0x83 ; '.'
0000000000007e60         db  0x05 ; '.'
0000000000007e61         db  0x47 ; 'G'
0000000000007e62         db  0x0e ; '.'
0000000000007e63         db  0xc0 ; '.'
0000000000007e64         db  0x40 ; '@'
0000000000007e65         db  0x02 ; '.'
0000000000007e66         db  0x95 ; '.'
0000000000007e67         db  0x0a ; '.'
0000000000007e68         db  0x0e ; '.'
0000000000007e69         db  0x28 ; '('
0000000000007e6a         db  0x41 ; 'A'
0000000000007e6b         db  0x0e ; '.'
0000000000007e6c         db  0x20 ; ' '
0000000000007e6d         db  0x41 ; 'A'
0000000000007e6e         db  0x0e ; '.'
0000000000007e6f         db  0x18 ; '.'
0000000000007e70         db  0x42 ; 'B'
0000000000007e71         db  0x0e ; '.'
0000000000007e72         db  0x10 ; '.'
0000000000007e73         db  0x42 ; 'B'
0000000000007e74         db  0x0e ; '.'
0000000000007e75         db  0x08 ; '.'
0000000000007e76         db  0x48 ; 'H'
0000000000007e77         db  0x0b ; '.'
0000000000007e78         dd         0x00000048                                  ; Length of the record
0000000000007e7c         dd         0x0000011c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007e80         db         0x60, 0xae, 2 dup (0xff)                    ; begin 0x2ce0
0000000000007e84         db         0x87, 0x01, 2 dup (0x00)                    ; length 0x187 (end at 0x2e67)
0000000000007e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e89         db  0x42 ; 'B'
0000000000007e8a         db  0x0e ; '.'
0000000000007e8b         db  0x10 ; '.'
0000000000007e8c         db  0x8f ; '.'
0000000000007e8d         db  0x02 ; '.'
0000000000007e8e         db  0x42 ; 'B'
0000000000007e8f         db  0x0e ; '.'
0000000000007e90         db  0x18 ; '.'
0000000000007e91         db  0x8e ; '.'
0000000000007e92         db  0x03 ; '.'
0000000000007e93         db  0x42 ; 'B'
0000000000007e94         db  0x0e ; '.'
0000000000007e95         db  0x20 ; ' '
0000000000007e96         db  0x8d ; '.'
0000000000007e97         db  0x04 ; '.'
0000000000007e98         db  0x42 ; 'B'
0000000000007e99         db  0x0e ; '.'
0000000000007e9a         db  0x28 ; '('
0000000000007e9b         db  0x8c ; '.'
0000000000007e9c         db  0x05 ; '.'
0000000000007e9d         db  0x41 ; 'A'
0000000000007e9e         db  0x0e ; '.'
0000000000007e9f         db  0x30 ; '0'
0000000000007ea0         db  0x86 ; '.'
0000000000007ea1         db  0x06 ; '.'
0000000000007ea2         db  0x41 ; 'A'
0000000000007ea3         db  0x0e ; '.'
0000000000007ea4         db  0x38 ; '8'
0000000000007ea5         db  0x83 ; '.'
0000000000007ea6         db  0x07 ; '.'
0000000000007ea7         db  0x47 ; 'G'
0000000000007ea8         db  0x0e ; '.'
0000000000007ea9         db  0xe0 ; '.'
0000000000007eaa         db  0x41 ; 'A'
0000000000007eab         db  0x02 ; '.'
0000000000007eac         db  0xc9 ; '.'
0000000000007ead         db  0x0a ; '.'
0000000000007eae         db  0x0e ; '.'
0000000000007eaf         db  0x38 ; '8'
0000000000007eb0         db  0x41 ; 'A'
0000000000007eb1         db  0x0e ; '.'
0000000000007eb2         db  0x30 ; '0'
0000000000007eb3         db  0x41 ; 'A'
0000000000007eb4         db  0x0e ; '.'
0000000000007eb5         db  0x28 ; '('
0000000000007eb6         db  0x42 ; 'B'
0000000000007eb7         db  0x0e ; '.'
0000000000007eb8         db  0x20 ; ' '
0000000000007eb9         db  0x42 ; 'B'
0000000000007eba         db  0x0e ; '.'
0000000000007ebb         db  0x18 ; '.'
0000000000007ebc         db  0x42 ; 'B'
0000000000007ebd         db  0x0e ; '.'
0000000000007ebe         db  0x10 ; '.'
0000000000007ebf         db  0x42 ; 'B'
0000000000007ec0         db  0x0e ; '.'
0000000000007ec1         db  0x08 ; '.'
0000000000007ec2         db  0x44 ; 'D'
0000000000007ec3         db  0x0b ; '.'
0000000000007ec4         dd         0x00000048                                  ; Length of the record
0000000000007ec8         dd         0x00000168                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007ecc         db         0xa4, 0xaf, 2 dup (0xff)                    ; begin 0x2e70
0000000000007ed0         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0x2f5f)
0000000000007ed4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ed5         db  0x42 ; 'B'
0000000000007ed6         db  0x0e ; '.'
0000000000007ed7         db  0x10 ; '.'
0000000000007ed8         db  0x8f ; '.'
0000000000007ed9         db  0x02 ; '.'
0000000000007eda         db  0x42 ; 'B'
0000000000007edb         db  0x0e ; '.'
0000000000007edc         db  0x18 ; '.'
0000000000007edd         db  0x8e ; '.'
0000000000007ede         db  0x03 ; '.'
0000000000007edf         db  0x42 ; 'B'
0000000000007ee0         db  0x0e ; '.'
0000000000007ee1         db  0x20 ; ' '
0000000000007ee2         db  0x8d ; '.'
0000000000007ee3         db  0x04 ; '.'
0000000000007ee4         db  0x42 ; 'B'
0000000000007ee5         db  0x0e ; '.'
0000000000007ee6         db  0x28 ; '('
0000000000007ee7         db  0x8c ; '.'
0000000000007ee8         db  0x05 ; '.'
0000000000007ee9         db  0x41 ; 'A'
0000000000007eea         db  0x0e ; '.'
0000000000007eeb         db  0x30 ; '0'
0000000000007eec         db  0x86 ; '.'
0000000000007eed         db  0x06 ; '.'
0000000000007eee         db  0x41 ; 'A'
0000000000007eef         db  0x0e ; '.'
0000000000007ef0         db  0x38 ; '8'
0000000000007ef1         db  0x83 ; '.'
0000000000007ef2         db  0x07 ; '.'
0000000000007ef3         db  0x47 ; 'G'
0000000000007ef4         db  0x0e ; '.'
0000000000007ef5         db  0xd0 ; '.'
0000000000007ef6         db  0x40 ; '@'
0000000000007ef7         db  0x02 ; '.'
0000000000007ef8         db  0xce ; '.'
0000000000007ef9         db  0x0a ; '.'
0000000000007efa         db  0x0e ; '.'
0000000000007efb         db  0x38 ; '8'
0000000000007efc         db  0x41 ; 'A'
0000000000007efd         db  0x0e ; '.'
0000000000007efe         db  0x30 ; '0'
0000000000007eff         db  0x41 ; 'A'
0000000000007f00         db  0x0e ; '.'
0000000000007f01         db  0x28 ; '('
0000000000007f02         db  0x42 ; 'B'
0000000000007f03         db  0x0e ; '.'
0000000000007f04         db  0x20 ; ' '
0000000000007f05         db  0x42 ; 'B'
0000000000007f06         db  0x0e ; '.'
0000000000007f07         db  0x18 ; '.'
0000000000007f08         db  0x42 ; 'B'
0000000000007f09         db  0x0e ; '.'
0000000000007f0a         db  0x10 ; '.'
0000000000007f0b         db  0x42 ; 'B'
0000000000007f0c         db  0x0e ; '.'
0000000000007f0d         db  0x08 ; '.'
0000000000007f0e         db  0x41 ; 'A'
0000000000007f0f         db  0x0b ; '.'
0000000000007f10         dd         0x00000028                                  ; Length of the record
0000000000007f14         dd         0x000001b4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007f18         db         0x48, 0xb0, 2 dup (0xff)                    ; begin 0x2f60
0000000000007f1c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x2fd8)
0000000000007f20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f21         db  0x41 ; 'A'
0000000000007f22         db  0x0e ; '.'
0000000000007f23         db  0x10 ; '.'
0000000000007f24         db  0x86 ; '.'
0000000000007f25         db  0x02 ; '.'
0000000000007f26         db  0x41 ; 'A'
0000000000007f27         db  0x0e ; '.'
0000000000007f28         db  0x18 ; '.'
0000000000007f29         db  0x83 ; '.'
0000000000007f2a         db  0x03 ; '.'
0000000000007f2b         db  0x44 ; 'D'
0000000000007f2c         db  0x0e ; '.'
0000000000007f2d         db  0x20 ; ' '
0000000000007f2e         db  0x7d ; '}'
0000000000007f2f         db  0x0a ; '.'
0000000000007f30         db  0x0e ; '.'
0000000000007f31         db  0x18 ; '.'
0000000000007f32         db  0x4b ; 'K'
0000000000007f33         db  0x0e ; '.'
0000000000007f34         db  0x10 ; '.'
0000000000007f35         db  0x41 ; 'A'
0000000000007f36         db  0x0e ; '.'
0000000000007f37         db  0x08 ; '.'
0000000000007f38         db  0x49 ; 'I'
0000000000007f39         db  0x0b ; '.'
0000000000007f3a         db  0x00 ; '.'
0000000000007f3b         db  0x00 ; '.'
0000000000007f3c         dd         0x0000004c                                  ; Length of the record
0000000000007f40         dd         0x000001e0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007f44         db         0x9c, 0xb0, 2 dup (0xff)                    ; begin 0x2fe0
0000000000007f48         db         0xa0, 0x02, 2 dup (0x00)                    ; length 0x2a0 (end at 0x3280)
0000000000007f4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f4d         db  0x42 ; 'B'
0000000000007f4e         db  0x0e ; '.'
0000000000007f4f         db  0x10 ; '.'
0000000000007f50         db  0x8f ; '.'
0000000000007f51         db  0x02 ; '.'
0000000000007f52         db  0x45 ; 'E'
0000000000007f53         db  0x0e ; '.'
0000000000007f54         db  0x18 ; '.'
0000000000007f55         db  0x8e ; '.'
0000000000007f56         db  0x03 ; '.'
0000000000007f57         db  0x42 ; 'B'
0000000000007f58         db  0x0e ; '.'
0000000000007f59         db  0x20 ; ' '
0000000000007f5a         db  0x8d ; '.'
0000000000007f5b         db  0x04 ; '.'
0000000000007f5c         db  0x42 ; 'B'
0000000000007f5d         db  0x0e ; '.'
0000000000007f5e         db  0x28 ; '('
0000000000007f5f         db  0x8c ; '.'
0000000000007f60         db  0x05 ; '.'
0000000000007f61         db  0x47 ; 'G'
0000000000007f62         db  0x0e ; '.'
0000000000007f63         db  0x30 ; '0'
0000000000007f64         db  0x86 ; '.'
0000000000007f65         db  0x06 ; '.'
0000000000007f66         db  0x41 ; 'A'
0000000000007f67         db  0x0e ; '.'
0000000000007f68         db  0x38 ; '8'
0000000000007f69         db  0x83 ; '.'
0000000000007f6a         db  0x07 ; '.'
0000000000007f6b         db  0x53 ; 'S'
0000000000007f6c         db  0x0e ; '.'
0000000000007f6d         db  0xf0 ; '.'
0000000000007f6e         db  0x40 ; '@'
0000000000007f6f         db  0x03 ; '.'
0000000000007f70         db  0x52 ; 'R'
0000000000007f71         db  0x01 ; '.'
0000000000007f72         db  0x0a ; '.'
0000000000007f73         db  0x0e ; '.'
0000000000007f74         db  0x38 ; '8'
0000000000007f75         db  0x41 ; 'A'
0000000000007f76         db  0x0e ; '.'
0000000000007f77         db  0x30 ; '0'
0000000000007f78         db  0x41 ; 'A'
0000000000007f79         db  0x0e ; '.'
0000000000007f7a         db  0x28 ; '('
0000000000007f7b         db  0x42 ; 'B'
0000000000007f7c         db  0x0e ; '.'
0000000000007f7d         db  0x20 ; ' '
0000000000007f7e         db  0x42 ; 'B'
0000000000007f7f         db  0x0e ; '.'
0000000000007f80         db  0x18 ; '.'
0000000000007f81         db  0x42 ; 'B'
0000000000007f82         db  0x0e ; '.'
0000000000007f83         db  0x10 ; '.'
0000000000007f84         db  0x42 ; 'B'
0000000000007f85         db  0x0e ; '.'
0000000000007f86         db  0x08 ; '.'
0000000000007f87         db  0x46 ; 'F'
0000000000007f88         db  0x0b ; '.'
0000000000007f89         db  0x00 ; '.'
0000000000007f8a         db  0x00 ; '.'
0000000000007f8b         db  0x00 ; '.'
0000000000007f8c         dd         0x00000028                                  ; Length of the record
0000000000007f90         dd         0x00000230                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007f94         db         0xec, 0xb2, 2 dup (0xff)                    ; begin 0x3280
0000000000007f98         db         0x22, 0x04, 2 dup (0x00)                    ; length 0x422 (end at 0x36a2)
0000000000007f9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f9d         db  0x42 ; 'B'
0000000000007f9e         db  0x0e ; '.'
0000000000007f9f         db  0x10 ; '.'
0000000000007fa0         db  0x8d ; '.'
0000000000007fa1         db  0x02 ; '.'
0000000000007fa2         db  0x42 ; 'B'
0000000000007fa3         db  0x0e ; '.'
0000000000007fa4         db  0x18 ; '.'
0000000000007fa5         db  0x8c ; '.'
0000000000007fa6         db  0x03 ; '.'
0000000000007fa7         db  0x46 ; 'F'
0000000000007fa8         db  0x0e ; '.'
0000000000007fa9         db  0x20 ; ' '
0000000000007faa         db  0x86 ; '.'
0000000000007fab         db  0x04 ; '.'
0000000000007fac         db  0x41 ; 'A'
0000000000007fad         db  0x0e ; '.'
0000000000007fae         db  0x28 ; '('
0000000000007faf         db  0x83 ; '.'
0000000000007fb0         db  0x05 ; '.'
0000000000007fb1         db  0x49 ; 'I'
0000000000007fb2         db  0x0e ; '.'
0000000000007fb3         db  0xb0 ; '.'
0000000000007fb4         db  0x01 ; '.'
0000000000007fb5         db  0x00 ; '.'
0000000000007fb6         db  0x00 ; '.'
0000000000007fb7         db  0x00 ; '.'
0000000000007fb8         dd         0x0000005c                                  ; Length of the record
0000000000007fbc         dd         0x0000025c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000007fc0         db         0x70, 0x98, 2 dup (0xff)                    ; begin 0x1830
0000000000007fc4         db         0x28, 0x11, 2 dup (0x00)                    ; length 0x1128 (end at 0x2958)
0000000000007fc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fc9         db  0x42 ; 'B'
0000000000007fca         db  0x0e ; '.'
0000000000007fcb         db  0x10 ; '.'
0000000000007fcc         db  0x8f ; '.'
0000000000007fcd         db  0x02 ; '.'
0000000000007fce         db  0x42 ; 'B'
0000000000007fcf         db  0x0e ; '.'
0000000000007fd0         db  0x18 ; '.'
0000000000007fd1         db  0x8e ; '.'
0000000000007fd2         db  0x03 ; '.'
0000000000007fd3         db  0x42 ; 'B'
0000000000007fd4         db  0x0e ; '.'
0000000000007fd5         db  0x20 ; ' '
0000000000007fd6         db  0x8d ; '.'
0000000000007fd7         db  0x04 ; '.'
0000000000007fd8         db  0x42 ; 'B'
0000000000007fd9         db  0x0e ; '.'
0000000000007fda         db  0x28 ; '('
0000000000007fdb         db  0x8c ; '.'
0000000000007fdc         db  0x05 ; '.'
0000000000007fdd         db  0x41 ; 'A'
0000000000007fde         db  0x0e ; '.'
0000000000007fdf         db  0x30 ; '0'
0000000000007fe0         db  0x86 ; '.'
0000000000007fe1         db  0x06 ; '.'
0000000000007fe2         db  0x41 ; 'A'
0000000000007fe3         db  0x0e ; '.'
0000000000007fe4         db  0x38 ; '8'
0000000000007fe5         db  0x83 ; '.'
0000000000007fe6         db  0x07 ; '.'
0000000000007fe7         db  0x4c ; 'L'
0000000000007fe8         db  0x0e ; '.'
0000000000007fe9         db  0x90 ; '.'
0000000000007fea         db  0x03 ; '.'
0000000000007feb         db  0x03 ; '.'
0000000000007fec         db  0x3e ; '>'
0000000000007fed         db  0x01 ; '.'
0000000000007fee         db  0x0a ; '.'
0000000000007fef         db  0x0e ; '.'
0000000000007ff0         db  0x98 ; '.'
0000000000007ff1         db  0x03 ; '.'
0000000000007ff2         db  0x50 ; 'P'
0000000000007ff3         db  0x0e ; '.'
0000000000007ff4         db  0xa0 ; '.'
0000000000007ff5         db  0x03 ; '.'
0000000000007ff6         db  0x6c ; 'l'
0000000000007ff7         db  0x0b ; '.'
0000000000007ff8         db  0x03 ; '.'
0000000000007ff9         db  0xc4 ; '.'
0000000000007ffa         db  0x05 ; '.'
0000000000007ffb         db  0x0a ; '.'
0000000000007ffc         db  0x0e ; '.'
0000000000007ffd         db  0x38 ; '8'
0000000000007ffe         db  0x41 ; 'A'
0000000000007fff         db  0x0e ; '.'
0000000000008000         db  0x30 ; '0'                                         ; DATA XREF=main+1459, head_lines+351
0000000000008001         db  0x41 ; 'A'
0000000000008002         db  0x0e ; '.'
0000000000008003         db  0x28 ; '('
0000000000008004         db  0x42 ; 'B'
0000000000008005         db  0x0e ; '.'
0000000000008006         db  0x20 ; ' '
0000000000008007         db  0x42 ; 'B'
0000000000008008         db  0x0e ; '.'
0000000000008009         db  0x18 ; '.'
000000000000800a         db  0x42 ; 'B'
000000000000800b         db  0x0e ; '.'
000000000000800c         db  0x10 ; '.'
000000000000800d         db  0x42 ; 'B'
000000000000800e         db  0x0e ; '.'
000000000000800f         db  0x08 ; '.'
0000000000008010         db  0x41 ; 'A'
0000000000008011         db  0x0b ; '.'
0000000000008012         db  0x00 ; '.'
0000000000008013         db  0x00 ; '.'
0000000000008014         db  0x00 ; '.'
0000000000008015         db  0x00 ; '.'
0000000000008016         db  0x00 ; '.'
0000000000008017         db  0x00 ; '.'
0000000000008018         dd         0x00000010                                  ; Length of the record
000000000000801c         dd         0x000002bc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008020         db         0x90, 0xb6, 2 dup (0xff)                    ; begin 0x36b0
0000000000008024         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x36b8)
0000000000008028         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008029         align      4
000000000000802c         dd         0x00000010                                  ; Length of the record
0000000000008030         dd         0x000002d0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008034         db         0x8c, 0xb6, 2 dup (0xff)                    ; begin 0x36c0
0000000000008038         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x36c8)
000000000000803c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000803d         align      64
0000000000008040         dd         0x0000002c                                  ; Length of the record
0000000000008044         dd         0x000002e4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008048         db         0x88, 0xb6, 2 dup (0xff)                    ; begin 0x36d0
000000000000804c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3774)
0000000000008050         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008051         db  0x41 ; 'A'
0000000000008052         db  0x0e ; '.'
0000000000008053         db  0x10 ; '.'
0000000000008054         db  0x86 ; '.'
0000000000008055         db  0x02 ; '.'
0000000000008056         db  0x41 ; 'A'
0000000000008057         db  0x0e ; '.'
0000000000008058         db  0x18 ; '.'
0000000000008059         db  0x83 ; '.'
000000000000805a         db  0x03 ; '.'
000000000000805b         db  0x44 ; 'D'
000000000000805c         db  0x0e ; '.'
000000000000805d         db  0x20 ; ' '
000000000000805e         db  0x7a ; 'z'
000000000000805f         db  0x0a ; '.'
0000000000008060         db  0x0e ; '.'
0000000000008061         db  0x18 ; '.'
0000000000008062         db  0x41 ; 'A'
0000000000008063         db  0x0e ; '.'
0000000000008064         db  0x10 ; '.'
0000000000008065         db  0x41 ; 'A'
0000000000008066         db  0x0e ; '.'
0000000000008067         db  0x08 ; '.'
0000000000008068         db  0x41 ; 'A'
0000000000008069         db  0x0b ; '.'
000000000000806a         db  0x00 ; '.'
000000000000806b         db  0x00 ; '.'
000000000000806c         db  0x00 ; '.'
000000000000806d         db  0x00 ; '.'
000000000000806e         db  0x00 ; '.'
000000000000806f         db  0x00 ; '.'
0000000000008070         dd         0x0000004c                                  ; Length of the record
0000000000008074         dd         0x00000314                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008078         db         0x08, 0xb7, 2 dup (0xff)                    ; begin 0x3780
000000000000807c         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0x37f6)
0000000000008080         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008081         db  0x42 ; 'B'
0000000000008082         db  0x0e ; '.'
0000000000008083         db  0x10 ; '.'
0000000000008084         db  0x8d ; '.'
0000000000008085         db  0x02 ; '.'
0000000000008086         db  0x42 ; 'B'
0000000000008087         db  0x0e ; '.'
0000000000008088         db  0x18 ; '.'
0000000000008089         db  0x8c ; '.'
000000000000808a         db  0x03 ; '.'
000000000000808b         db  0x41 ; 'A'
000000000000808c         db  0x0e ; '.'
000000000000808d         db  0x20 ; ' '
000000000000808e         db  0x86 ; '.'
000000000000808f         db  0x04 ; '.'
0000000000008090         db  0x41 ; 'A'
0000000000008091         db  0x0e ; '.'
0000000000008092         db  0x28 ; '('
0000000000008093         db  0x83 ; '.'
0000000000008094         db  0x05 ; '.'
0000000000008095         db  0x44 ; 'D'
0000000000008096         db  0x0e ; '.'
0000000000008097         db  0x30 ; '0'
0000000000008098         db  0x7e ; '~'
0000000000008099         db  0x0a ; '.'
000000000000809a         db  0x0e ; '.'
000000000000809b         db  0x28 ; '('
000000000000809c         db  0x44 ; 'D'
000000000000809d         db  0x0e ; '.'
000000000000809e         db  0x20 ; ' '
000000000000809f         db  0x41 ; 'A'
00000000000080a0         db  0x0e ; '.'
00000000000080a1         db  0x18 ; '.'
00000000000080a2         db  0x42 ; 'B'
00000000000080a3         db  0x0e ; '.'
00000000000080a4         db  0x10 ; '.'
00000000000080a5         db  0x42 ; 'B'
00000000000080a6         db  0x0e ; '.'
00000000000080a7         db  0x08 ; '.'
00000000000080a8         db  0x47 ; 'G'
00000000000080a9         db  0x0b ; '.'
00000000000080aa         db  0x4f ; 'O'
00000000000080ab         db  0x0a ; '.'
00000000000080ac         db  0x0e ; '.'
00000000000080ad         db  0x28 ; '('
00000000000080ae         db  0x44 ; 'D'
00000000000080af         db  0x0e ; '.'
00000000000080b0         db  0x20 ; ' '
00000000000080b1         db  0x41 ; 'A'
00000000000080b2         db  0x0e ; '.'
00000000000080b3         db  0x18 ; '.'
00000000000080b4         db  0x42 ; 'B'
00000000000080b5         db  0x0e ; '.'
00000000000080b6         db  0x10 ; '.'
00000000000080b7         db  0x42 ; 'B'
00000000000080b8         db  0x0e ; '.'
00000000000080b9         db  0x08 ; '.'
00000000000080ba         db  0x41 ; 'A'
00000000000080bb         db  0x0b ; '.'
00000000000080bc         db  0x00 ; '.'
00000000000080bd         db  0x00 ; '.'
00000000000080be         db  0x00 ; '.'
00000000000080bf         db  0x00 ; '.'
00000000000080c0         dd         0x00000014                                  ; Length of the record
00000000000080c4         dd         0x00000364                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000080c8         db         0x38, 0xb7, 2 dup (0xff)                    ; begin 0x3800
00000000000080cc         db         0x9c, 3 dup (0x00)                          ; length 0x9c (end at 0x389c)
00000000000080d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d1         align      8
00000000000080d8         dd         0x00000014                                  ; Length of the record
00000000000080dc         dd         0x0000037c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000080e0         db         0xc0, 0xb7, 2 dup (0xff)                    ; begin 0x38a0
00000000000080e4         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x38e2)
00000000000080e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080e9         align      16
00000000000080f0         dd         0x0000001c                                  ; Length of the record
00000000000080f4         dd         0x00000394                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000080f8         db         0xf8, 0xb7, 2 dup (0xff)                    ; begin 0x38f0
00000000000080fc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x398f)
0000000000008100         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008101         db  0x44 ; 'D'
0000000000008102         db  0x0e ; '.'
0000000000008103         db  0x10 ; '.'
0000000000008104         db  0x83 ; '.'
0000000000008105         db  0x02 ; '.'
0000000000008106         db  0x02 ; '.'
0000000000008107         db  0x78 ; 'x'
0000000000008108         db  0x0a ; '.'
0000000000008109         db  0x0e ; '.'
000000000000810a         db  0x08 ; '.'
000000000000810b         db  0x41 ; 'A'
000000000000810c         db  0x0b ; '.'
000000000000810d         db  0x00 ; '.'
000000000000810e         db  0x00 ; '.'
000000000000810f         db  0x00 ; '.'
0000000000008110         dd         0x00000040                                  ; Length of the record
0000000000008114         dd         0x000003b4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008118         db         0x78, 0xb8, 2 dup (0xff)                    ; begin 0x3990
000000000000811c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3a77)
0000000000008120         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008121         db  0x41 ; 'A'
0000000000008122         db  0x0e ; '.'
0000000000008123         db  0x10 ; '.'
0000000000008124         db  0x86 ; '.'
0000000000008125         db  0x02 ; '.'
0000000000008126         db  0x41 ; 'A'
0000000000008127         db  0x0e ; '.'
0000000000008128         db  0x18 ; '.'
0000000000008129         db  0x83 ; '.'
000000000000812a         db  0x03 ; '.'
000000000000812b         db  0x49 ; 'I'
000000000000812c         db  0x0e ; '.'
000000000000812d         db  0x20 ; ' '
000000000000812e         db  0x6e ; 'n'
000000000000812f         db  0x0a ; '.'
0000000000008130         db  0x0e ; '.'
0000000000008131         db  0x18 ; '.'
0000000000008132         db  0x41 ; 'A'
0000000000008133         db  0x0e ; '.'
0000000000008134         db  0x10 ; '.'
0000000000008135         db  0x41 ; 'A'
0000000000008136         db  0x0e ; '.'
0000000000008137         db  0x08 ; '.'
0000000000008138         db  0x45 ; 'E'
0000000000008139         db  0x0b ; '.'
000000000000813a         db  0x02 ; '.'
000000000000813b         db  0x4a ; 'J'
000000000000813c         db  0x0a ; '.'
000000000000813d         db  0x0e ; '.'
000000000000813e         db  0x18 ; '.'
000000000000813f         db  0x41 ; 'A'
0000000000008140         db  0x0e ; '.'
0000000000008141         db  0x10 ; '.'
0000000000008142         db  0x41 ; 'A'
0000000000008143         db  0x0e ; '.'
0000000000008144         db  0x08 ; '.'
0000000000008145         db  0x44 ; 'D'
0000000000008146         db  0x0b ; '.'
0000000000008147         db  0x02 ; '.'
0000000000008148         db  0x54 ; 'T'
0000000000008149         db  0x0e ; '.'
000000000000814a         db  0x18 ; '.'
000000000000814b         db  0x41 ; 'A'
000000000000814c         db  0x0e ; '.'
000000000000814d         db  0x10 ; '.'
000000000000814e         db  0x41 ; 'A'
000000000000814f         db  0x0e ; '.'
0000000000008150         db  0x08 ; '.'
0000000000008151         db  0x00 ; '.'
0000000000008152         db  0x00 ; '.'
0000000000008153         db  0x00 ; '.'
0000000000008154         dd         0x00000074                                  ; Length of the record
0000000000008158         dd         0x000003f8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000815c         db         0x24, 0xb9, 2 dup (0xff)                    ; begin 0x3a80
0000000000008160         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4cb4)
0000000000008164         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008165         db  0x42 ; 'B'
0000000000008166         db  0x0e ; '.'
0000000000008167         db  0x10 ; '.'
0000000000008168         db  0x8f ; '.'
0000000000008169         db  0x02 ; '.'
000000000000816a         db  0x42 ; 'B'
000000000000816b         db  0x0e ; '.'
000000000000816c         db  0x18 ; '.'
000000000000816d         db  0x8e ; '.'
000000000000816e         db  0x03 ; '.'
000000000000816f         db  0x45 ; 'E'
0000000000008170         db  0x0e ; '.'
0000000000008171         db  0x20 ; ' '
0000000000008172         db  0x8d ; '.'
0000000000008173         db  0x04 ; '.'
0000000000008174         db  0x42 ; 'B'
0000000000008175         db  0x0e ; '.'
0000000000008176         db  0x28 ; '('
0000000000008177         db  0x8c ; '.'
0000000000008178         db  0x05 ; '.'
0000000000008179         db  0x44 ; 'D'
000000000000817a         db  0x0e ; '.'
000000000000817b         db  0x30 ; '0'
000000000000817c         db  0x86 ; '.'
000000000000817d         db  0x06 ; '.'
000000000000817e         db  0x41 ; 'A'
000000000000817f         db  0x0e ; '.'
0000000000008180         db  0x38 ; '8'
0000000000008181         db  0x83 ; '.'
0000000000008182         db  0x07 ; '.'
0000000000008183         db  0x53 ; 'S'
0000000000008184         db  0x0e ; '.'
0000000000008185         db  0xf0 ; '.'
0000000000008186         db  0x01 ; '.'
0000000000008187         db  0x03 ; '.'
0000000000008188         db  0x81 ; '.'
0000000000008189         db  0x0b ; '.'
000000000000818a         db  0x0e ; '.'
000000000000818b         db  0xf8 ; '.'
000000000000818c         db  0x01 ; '.'
000000000000818d         db  0x4a ; 'J'
000000000000818e         db  0x0e ; '.'
000000000000818f         db  0x80 ; '.'
0000000000008190         db  0x02 ; '.'
0000000000008191         db  0x44 ; 'D'
0000000000008192         db  0x0e ; '.'
0000000000008193         db  0x88 ; '.'
0000000000008194         db  0x02 ; '.'
0000000000008195         db  0x45 ; 'E'
0000000000008196         db  0x0e ; '.'
0000000000008197         db  0x90 ; '.'
0000000000008198         db  0x02 ; '.'
0000000000008199         db  0x5f ; '_'
000000000000819a         db  0x0e ; '.'
000000000000819b         db  0xf0 ; '.'
000000000000819c         db  0x01 ; '.'
000000000000819d         db  0x64 ; 'd'
000000000000819e         db  0x0a ; '.'
000000000000819f         db  0x0e ; '.'
00000000000081a0         db  0x38 ; '8'
00000000000081a1         db  0x41 ; 'A'
00000000000081a2         db  0x0e ; '.'
00000000000081a3         db  0x30 ; '0'
00000000000081a4         db  0x41 ; 'A'
00000000000081a5         db  0x0e ; '.'
00000000000081a6         db  0x28 ; '('
00000000000081a7         db  0x42 ; 'B'
00000000000081a8         db  0x0e ; '.'
00000000000081a9         db  0x20 ; ' '
00000000000081aa         db  0x42 ; 'B'
00000000000081ab         db  0x0e ; '.'
00000000000081ac         db  0x18 ; '.'
00000000000081ad         db  0x42 ; 'B'
00000000000081ae         db  0x0e ; '.'
00000000000081af         db  0x10 ; '.'
00000000000081b0         db  0x42 ; 'B'
00000000000081b1         db  0x0e ; '.'
00000000000081b2         db  0x08 ; '.'
00000000000081b3         db  0x44 ; 'D'
00000000000081b4         db  0x0b ; '.'
00000000000081b5         db  0x03 ; '.'
00000000000081b6         db  0x99 ; '.'
00000000000081b7         db  0x05 ; '.'
00000000000081b8         db  0x0e ; '.'
00000000000081b9         db  0xf8 ; '.'
00000000000081ba         db  0x01 ; '.'
00000000000081bb         db  0x4d ; 'M'
00000000000081bc         db  0x0e ; '.'
00000000000081bd         db  0x80 ; '.'
00000000000081be         db  0x02 ; '.'
00000000000081bf         db  0x44 ; 'D'
00000000000081c0         db  0x0e ; '.'
00000000000081c1         db  0x88 ; '.'
00000000000081c2         db  0x02 ; '.'
00000000000081c3         db  0x47 ; 'G'
00000000000081c4         db  0x0e ; '.'
00000000000081c5         db  0x90 ; '.'
00000000000081c6         db  0x02 ; '.'
00000000000081c7         db  0x5b ; '['
00000000000081c8         db  0x0e ; '.'
00000000000081c9         db  0xf0 ; '.'
00000000000081ca         db  0x01 ; '.'
00000000000081cb         db  0x00 ; '.'
00000000000081cc         dd         0x00000068                                  ; Length of the record
00000000000081d0         dd         0x00000470                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000081d4         db         0xec, 0xca, 2 dup (0xff)                    ; begin 0x4cc0
00000000000081d8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4e6b)
00000000000081dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081dd         db  0x42 ; 'B'
00000000000081de         db  0x0e ; '.'
00000000000081df         db  0x10 ; '.'
00000000000081e0         db  0x8f ; '.'
00000000000081e1         db  0x02 ; '.'
00000000000081e2         db  0x42 ; 'B'
00000000000081e3         db  0x0e ; '.'
00000000000081e4         db  0x18 ; '.'
00000000000081e5         db  0x8e ; '.'
00000000000081e6         db  0x03 ; '.'
00000000000081e7         db  0x45 ; 'E'
00000000000081e8         db  0x0e ; '.'
00000000000081e9         db  0x20 ; ' '
00000000000081ea         db  0x8d ; '.'
00000000000081eb         db  0x04 ; '.'
00000000000081ec         db  0x42 ; 'B'
00000000000081ed         db  0x0e ; '.'
00000000000081ee         db  0x28 ; '('
00000000000081ef         db  0x8c ; '.'
00000000000081f0         db  0x05 ; '.'
00000000000081f1         db  0x44 ; 'D'
00000000000081f2         db  0x0e ; '.'
00000000000081f3         db  0x30 ; '0'
00000000000081f4         db  0x86 ; '.'
00000000000081f5         db  0x06 ; '.'
00000000000081f6         db  0x41 ; 'A'
00000000000081f7         db  0x0e ; '.'
00000000000081f8         db  0x38 ; '8'
00000000000081f9         db  0x83 ; '.'
00000000000081fa         db  0x07 ; '.'
00000000000081fb         db  0x47 ; 'G'
00000000000081fc         db  0x0e ; '.'
00000000000081fd         db  0x60 ; '`'
00000000000081fe         db  0x02 ; '.'
00000000000081ff         db  0x99 ; '.'
0000000000008200         db  0x0e ; '.'
0000000000008201         db  0x68 ; 'h'
0000000000008202         db  0x5f ; '_'
0000000000008203         db  0x0e ; '.'
0000000000008204         db  0x70 ; 'p'
0000000000008205         db  0x46 ; 'F'
0000000000008206         db  0x0e ; '.'
0000000000008207         db  0x78 ; 'x'
0000000000008208         db  0x42 ; 'B'
0000000000008209         db  0x0e ; '.'
000000000000820a         db  0x80 ; '.'
000000000000820b         db  0x01 ; '.'
000000000000820c         db  0x59 ; 'Y'
000000000000820d         db  0x0e ; '.'
000000000000820e         db  0x60 ; '`'
000000000000820f         db  0x02 ; '.'
0000000000008210         db  0x40 ; '@'
0000000000008211         db  0x0e ; '.'
0000000000008212         db  0x68 ; 'h'
0000000000008213         db  0x4b ; 'K'
0000000000008214         db  0x0e ; '.'
0000000000008215         db  0x70 ; 'p'
0000000000008216         db  0x43 ; 'C'
0000000000008217         db  0x0e ; '.'
0000000000008218         db  0x78 ; 'x'
0000000000008219         db  0x45 ; 'E'
000000000000821a         db  0x0e ; '.'
000000000000821b         db  0x80 ; '.'
000000000000821c         db  0x01 ; '.'
000000000000821d         db  0x5e ; '^'
000000000000821e         db  0x0e ; '.'
000000000000821f         db  0x60 ; '`'
0000000000008220         db  0x4c ; 'L'
0000000000008221         db  0x0a ; '.'
0000000000008222         db  0x0e ; '.'
0000000000008223         db  0x38 ; '8'
0000000000008224         db  0x44 ; 'D'
0000000000008225         db  0x0e ; '.'
0000000000008226         db  0x30 ; '0'
0000000000008227         db  0x41 ; 'A'
0000000000008228         db  0x0e ; '.'
0000000000008229         db  0x28 ; '('
000000000000822a         db  0x42 ; 'B'
000000000000822b         db  0x0e ; '.'
000000000000822c         db  0x20 ; ' '
000000000000822d         db  0x42 ; 'B'
000000000000822e         db  0x0e ; '.'
000000000000822f         db  0x18 ; '.'
0000000000008230         db  0x42 ; 'B'
0000000000008231         db  0x0e ; '.'
0000000000008232         db  0x10 ; '.'
0000000000008233         db  0x42 ; 'B'
0000000000008234         db  0x0e ; '.'
0000000000008235         db  0x08 ; '.'
0000000000008236         db  0x46 ; 'F'
0000000000008237         db  0x0b ; '.'
0000000000008238         dd         0x00000028                                  ; Length of the record
000000000000823c         dd         0x000004dc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008240         db         0x30, 0xcc, 2 dup (0xff)                    ; begin 0x4e70
0000000000008244         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4ea6)
0000000000008248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008249         db  0x42 ; 'B'
000000000000824a         db  0x0e ; '.'
000000000000824b         db  0x10 ; '.'
000000000000824c         db  0x8c ; '.'
000000000000824d         db  0x02 ; '.'
000000000000824e         db  0x41 ; 'A'
000000000000824f         db  0x0e ; '.'
0000000000008250         db  0x18 ; '.'
0000000000008251         db  0x86 ; '.'
0000000000008252         db  0x03 ; '.'
0000000000008253         db  0x41 ; 'A'
0000000000008254         db  0x0e ; '.'
0000000000008255         db  0x20 ; ' '
0000000000008256         db  0x83 ; '.'
0000000000008257         db  0x04 ; '.'
0000000000008258         db  0x6e ; 'n'
0000000000008259         db  0x0e ; '.'
000000000000825a         db  0x18 ; '.'
000000000000825b         db  0x41 ; 'A'
000000000000825c         db  0x0e ; '.'
000000000000825d         db  0x10 ; '.'
000000000000825e         db  0x42 ; 'B'
000000000000825f         db  0x0e ; '.'
0000000000008260         db  0x08 ; '.'
0000000000008261         db  0x00 ; '.'
0000000000008262         db  0x00 ; '.'
0000000000008263         db  0x00 ; '.'
0000000000008264         dd         0x00000010                                  ; Length of the record
0000000000008268         dd         0x00000508                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000826c         db         0x44, 0xcc, 2 dup (0xff)                    ; begin 0x4eb0
0000000000008270         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4ec1)
0000000000008274         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008275         align      8
0000000000008278         dd         0x00000010                                  ; Length of the record
000000000000827c         dd         0x0000051c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008280         db         0x50, 0xcc, 2 dup (0xff)                    ; begin 0x4ed0
0000000000008284         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4ee1)
0000000000008288         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008289         align      4
000000000000828c         dd         0x00000010                                  ; Length of the record
0000000000008290         dd         0x00000530                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008294         db         0x5c, 0xcc, 2 dup (0xff)                    ; begin 0x4ef0
0000000000008298         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4f25)
000000000000829c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000829d         align      32
00000000000082a0         dd         0x00000010                                  ; Length of the record
00000000000082a4         dd         0x00000544                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000082a8         db         0x88, 0xcc, 2 dup (0xff)                    ; begin 0x4f30
00000000000082ac         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4f45)
00000000000082b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082b1         align      4
00000000000082b4         dd         0x00000010                                  ; Length of the record
00000000000082b8         dd         0x00000558                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000082bc         db         0x94, 0xcc, 2 dup (0xff)                    ; begin 0x4f50
00000000000082c0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4f80)
00000000000082c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082c5         db  0x6b ; 'k'
00000000000082c6         db  0x0e ; '.'
00000000000082c7         db  0x10 ; '.'
00000000000082c8         dd         0x00000050                                  ; Length of the record
00000000000082cc         dd         0x0000056c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000082d0         db         0xb0, 0xcc, 2 dup (0xff)                    ; begin 0x4f80
00000000000082d4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4ff4)
00000000000082d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082d9         db  0x42 ; 'B'
00000000000082da         db  0x0e ; '.'
00000000000082db         db  0x10 ; '.'
00000000000082dc         db  0x8f ; '.'
00000000000082dd         db  0x02 ; '.'
00000000000082de         db  0x42 ; 'B'
00000000000082df         db  0x0e ; '.'
00000000000082e0         db  0x18 ; '.'
00000000000082e1         db  0x8e ; '.'
00000000000082e2         db  0x03 ; '.'
00000000000082e3         db  0x49 ; 'I'
00000000000082e4         db  0x0e ; '.'
00000000000082e5         db  0x20 ; ' '
00000000000082e6         db  0x8d ; '.'
00000000000082e7         db  0x04 ; '.'
00000000000082e8         db  0x42 ; 'B'
00000000000082e9         db  0x0e ; '.'
00000000000082ea         db  0x28 ; '('
00000000000082eb         db  0x8c ; '.'
00000000000082ec         db  0x05 ; '.'
00000000000082ed         db  0x44 ; 'D'
00000000000082ee         db  0x0e ; '.'
00000000000082ef         db  0x30 ; '0'
00000000000082f0         db  0x86 ; '.'
00000000000082f1         db  0x06 ; '.'
00000000000082f2         db  0x41 ; 'A'
00000000000082f3         db  0x0e ; '.'
00000000000082f4         db  0x38 ; '8'
00000000000082f5         db  0x83 ; '.'
00000000000082f6         db  0x07 ; '.'
00000000000082f7         db  0x4d ; 'M'
00000000000082f8         db  0x0e ; '.'
00000000000082f9         db  0x50 ; 'P'
00000000000082fa         db  0x5f ; '_'
00000000000082fb         db  0x0e ; '.'
00000000000082fc         db  0x58 ; 'X'
00000000000082fd         db  0x47 ; 'G'
00000000000082fe         db  0x0e ; '.'
00000000000082ff         db  0x60 ; '`'
0000000000008300         db  0x46 ; 'F'
0000000000008301         db  0x0e ; '.'
0000000000008302         db  0x68 ; 'h'
0000000000008303         db  0x44 ; 'D'
0000000000008304         db  0x0e ; '.'
0000000000008305         db  0x70 ; 'p'
0000000000008306         db  0x58 ; 'X'
0000000000008307         db  0x0e ; '.'
0000000000008308         db  0x38 ; '8'
0000000000008309         db  0x41 ; 'A'
000000000000830a         db  0x0e ; '.'
000000000000830b         db  0x30 ; '0'
000000000000830c         db  0x41 ; 'A'
000000000000830d         db  0x0e ; '.'
000000000000830e         db  0x28 ; '('
000000000000830f         db  0x42 ; 'B'
0000000000008310         db  0x0e ; '.'
0000000000008311         db  0x20 ; ' '
0000000000008312         db  0x42 ; 'B'
0000000000008313         db  0x0e ; '.'
0000000000008314         db  0x18 ; '.'
0000000000008315         db  0x42 ; 'B'
0000000000008316         db  0x0e ; '.'
0000000000008317         db  0x10 ; '.'
0000000000008318         db  0x42 ; 'B'
0000000000008319         db  0x0e ; '.'
000000000000831a         db  0x08 ; '.'
000000000000831b         db  0x00 ; '.'
000000000000831c         dd         0x00000068                                  ; Length of the record
0000000000008320         dd         0x000005c0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008324         db         0xdc, 0xcc, 2 dup (0xff)                    ; begin 0x5000
0000000000008328         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x50e3)
000000000000832c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000832d         db  0x42 ; 'B'
000000000000832e         db  0x0e ; '.'
000000000000832f         db  0x10 ; '.'
0000000000008330         db  0x8f ; '.'
0000000000008331         db  0x02 ; '.'
0000000000008332         db  0x42 ; 'B'
0000000000008333         db  0x0e ; '.'
0000000000008334         db  0x18 ; '.'
0000000000008335         db  0x8e ; '.'
0000000000008336         db  0x03 ; '.'
0000000000008337         db  0x49 ; 'I'
0000000000008338         db  0x0e ; '.'
0000000000008339         db  0x20 ; ' '
000000000000833a         db  0x8d ; '.'
000000000000833b         db  0x04 ; '.'
000000000000833c         db  0x42 ; 'B'
000000000000833d         db  0x0e ; '.'
000000000000833e         db  0x28 ; '('
000000000000833f         db  0x8c ; '.'
0000000000008340         db  0x05 ; '.'
0000000000008341         db  0x44 ; 'D'
0000000000008342         db  0x0e ; '.'
0000000000008343         db  0x30 ; '0'
0000000000008344         db  0x86 ; '.'
0000000000008345         db  0x06 ; '.'
0000000000008346         db  0x41 ; 'A'
0000000000008347         db  0x0e ; '.'
0000000000008348         db  0x38 ; '8'
0000000000008349         db  0x83 ; '.'
000000000000834a         db  0x07 ; '.'
000000000000834b         db  0x4d ; 'M'
000000000000834c         db  0x0e ; '.'
000000000000834d         db  0x70 ; 'p'
000000000000834e         db  0x65 ; 'e'
000000000000834f         db  0x0e ; '.'
0000000000008350         db  0x78 ; 'x'
0000000000008351         db  0x4d ; 'M'
0000000000008352         db  0x0e ; '.'
0000000000008353         db  0x80 ; '.'
0000000000008354         db  0x01 ; '.'
0000000000008355         db  0x46 ; 'F'
0000000000008356         db  0x0e ; '.'
0000000000008357         db  0x88 ; '.'
0000000000008358         db  0x01 ; '.'
0000000000008359         db  0x42 ; 'B'
000000000000835a         db  0x0e ; '.'
000000000000835b         db  0x90 ; '.'
000000000000835c         db  0x01 ; '.'
000000000000835d         db  0x5e ; '^'
000000000000835e         db  0x0e ; '.'
000000000000835f         db  0x70 ; 'p'
0000000000008360         db  0x56 ; 'V'
0000000000008361         db  0x0e ; '.'
0000000000008362         db  0x78 ; 'x'
0000000000008363         db  0x43 ; 'C'
0000000000008364         db  0x0e ; '.'
0000000000008365         db  0x80 ; '.'
0000000000008366         db  0x01 ; '.'
0000000000008367         db  0x43 ; 'C'
0000000000008368         db  0x0e ; '.'
0000000000008369         db  0x88 ; '.'
000000000000836a         db  0x01 ; '.'
000000000000836b         db  0x56 ; 'V'
000000000000836c         db  0x0e ; '.'
000000000000836d         db  0x90 ; '.'
000000000000836e         db  0x01 ; '.'
000000000000836f         db  0x52 ; 'R'
0000000000008370         db  0x0e ; '.'
0000000000008371         db  0x70 ; 'p'
0000000000008372         db  0x5b ; '['
0000000000008373         db  0x0e ; '.'
0000000000008374         db  0x38 ; '8'
0000000000008375         db  0x41 ; 'A'
0000000000008376         db  0x0e ; '.'
0000000000008377         db  0x30 ; '0'
0000000000008378         db  0x41 ; 'A'
0000000000008379         db  0x0e ; '.'
000000000000837a         db  0x28 ; '('
000000000000837b         db  0x42 ; 'B'
000000000000837c         db  0x0e ; '.'
000000000000837d         db  0x20 ; ' '
000000000000837e         db  0x42 ; 'B'
000000000000837f         db  0x0e ; '.'
0000000000008380         db  0x18 ; '.'
0000000000008381         db  0x42 ; 'B'
0000000000008382         db  0x0e ; '.'
0000000000008383         db  0x10 ; '.'
0000000000008384         db  0x42 ; 'B'
0000000000008385         db  0x0e ; '.'
0000000000008386         db  0x08 ; '.'
0000000000008387         db  0x00 ; '.'
0000000000008388         dd         0x00000010                                  ; Length of the record
000000000000838c         dd         0x0000062c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008390         db         0x60, 0xcd, 2 dup (0xff)                    ; begin 0x50f0
0000000000008394         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x50fa)
0000000000008398         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008399         align      4
000000000000839c         dd         0x00000028                                  ; Length of the record
00000000000083a0         dd         0x00000640                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000083a4         db         0x5c, 0xcd, 2 dup (0xff)                    ; begin 0x5100
00000000000083a8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5193)
00000000000083ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083ad         db  0x48 ; 'H'
00000000000083ae         db  0x0e ; '.'
00000000000083af         db  0x10 ; '.'
00000000000083b0         db  0x8c ; '.'
00000000000083b1         db  0x02 ; '.'
00000000000083b2         db  0x48 ; 'H'
00000000000083b3         db  0x0e ; '.'
00000000000083b4         db  0x18 ; '.'
00000000000083b5         db  0x86 ; '.'
00000000000083b6         db  0x03 ; '.'
00000000000083b7         db  0x41 ; 'A'
00000000000083b8         db  0x0e ; '.'
00000000000083b9         db  0x20 ; ' '
00000000000083ba         db  0x83 ; '.'
00000000000083bb         db  0x04 ; '.'
00000000000083bc         db  0x02 ; '.'
00000000000083bd         db  0x74 ; 't'
00000000000083be         db  0x0e ; '.'
00000000000083bf         db  0x18 ; '.'
00000000000083c0         db  0x4b ; 'K'
00000000000083c1         db  0x0e ; '.'
00000000000083c2         db  0x10 ; '.'
00000000000083c3         db  0x42 ; 'B'
00000000000083c4         db  0x0e ; '.'
00000000000083c5         db  0x08 ; '.'
00000000000083c6         db  0x00 ; '.'
00000000000083c7         db  0x00 ; '.'
00000000000083c8         dd         0x00000010                                  ; Length of the record
00000000000083cc         dd         0x0000066c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000083d0         db         0xd0, 0xcd, 2 dup (0xff)                    ; begin 0x51a0
00000000000083d4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x51b3)
00000000000083d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083d9         align      4
00000000000083dc         dd         0x00000010                                  ; Length of the record
00000000000083e0         dd         0x00000680                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000083e4         db         0xdc, 0xcd, 2 dup (0xff)                    ; begin 0x51c0
00000000000083e8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x51cc)
00000000000083ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083ed         align      16
00000000000083f0         dd         0x00000010                                  ; Length of the record
00000000000083f4         dd         0x00000694                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000083f8         db         0xd8, 0xcd, 2 dup (0xff)                    ; begin 0x51d0
00000000000083fc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x51e8)
0000000000008400         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008401         align      4
0000000000008404         dd         0x00000010                                  ; Length of the record
0000000000008408         dd         0x000006a8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000840c         db         0xe4, 0xcd, 2 dup (0xff)                    ; begin 0x51f0
0000000000008410         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5204)
0000000000008414         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008415         align      8
0000000000008418         dd         0x00000018                                  ; Length of the record
000000000000841c         dd         0x000006bc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008420         db         0xf0, 0xcd, 2 dup (0xff)                    ; begin 0x5210
0000000000008424         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x529e)
0000000000008428         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008429         db  0x44 ; 'D'
000000000000842a         db  0x0e ; '.'
000000000000842b         db  0x50 ; 'P'
000000000000842c         db  0x02 ; '.'
000000000000842d         db  0x7f ; '.'
000000000000842e         db  0x0a ; '.'
000000000000842f         db  0x0e ; '.'
0000000000008430         db  0x08 ; '.'
0000000000008431         db  0x41 ; 'A'
0000000000008432         db  0x0b ; '.'
0000000000008433         db  0x00 ; '.'
0000000000008434         dd         0x00000018                                  ; Length of the record
0000000000008438         dd         0x000006d8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000843c         db         0x64, 0xce, 2 dup (0xff)                    ; begin 0x52a0
0000000000008440         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x532a)
0000000000008444         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008445         db  0x44 ; 'D'
0000000000008446         db  0x0e ; '.'
0000000000008447         db  0x50 ; 'P'
0000000000008448         db  0x02 ; '.'
0000000000008449         db  0x7b ; '{'
000000000000844a         db  0x0a ; '.'
000000000000844b         db  0x0e ; '.'
000000000000844c         db  0x08 ; '.'
000000000000844d         db  0x41 ; 'A'
000000000000844e         db  0x0b ; '.'
000000000000844f         db  0x00 ; '.'
0000000000008450         dd         0x00000010                                  ; Length of the record
0000000000008454         dd         0x000006f4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008458         db         0xd8, 0xce, 2 dup (0xff)                    ; begin 0x5330
000000000000845c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x533c)
0000000000008460         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008461         align      4
0000000000008464         dd         0x00000010                                  ; Length of the record
0000000000008468         dd         0x00000708                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000846c         db         0xd4, 0xce, 2 dup (0xff)                    ; begin 0x5340
0000000000008470         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x534f)
0000000000008474         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008475         align      8
0000000000008478         dd         0x00000018                                  ; Length of the record
000000000000847c         dd         0x0000071c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008480         db         0xd0, 0xce, 2 dup (0xff)                    ; begin 0x5350
0000000000008484         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x53e8)
0000000000008488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008489         db  0x44 ; 'D'
000000000000848a         db  0x0e ; '.'
000000000000848b         db  0x50 ; 'P'
000000000000848c         db  0x02 ; '.'
000000000000848d         db  0x8e ; '.'
000000000000848e         db  0x0a ; '.'
000000000000848f         db  0x0e ; '.'
0000000000008490         db  0x08 ; '.'
0000000000008491         db  0x41 ; 'A'
0000000000008492         db  0x0b ; '.'
0000000000008493         db  0x00 ; '.'
0000000000008494         dd         0x00000010                                  ; Length of the record
0000000000008498         dd         0x00000738                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000849c         db         0x54, 0xcf, 2 dup (0xff)                    ; begin 0x53f0
00000000000084a0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5400)
00000000000084a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084a5         align      8
00000000000084a8         dd         0x00000010                                  ; Length of the record
00000000000084ac         dd         0x0000074c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000084b0         db         0x50, 0xcf, 2 dup (0xff)                    ; begin 0x5400
00000000000084b4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5411)
00000000000084b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084b9         align      4
00000000000084bc         dd         0x00000010                                  ; Length of the record
00000000000084c0         dd         0x00000760                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000084c4         db         0x5c, 0xcf, 2 dup (0xff)                    ; begin 0x5420
00000000000084c8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x542a)
00000000000084cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084cd         align      16
00000000000084d0         dd         0x00000018                                  ; Length of the record
00000000000084d4         dd         0x00000774                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000084d8         db         0x58, 0xcf, 2 dup (0xff)                    ; begin 0x5430
00000000000084dc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x54be)
00000000000084e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084e1         db  0x44 ; 'D'
00000000000084e2         db  0x0e ; '.'
00000000000084e3         db  0x50 ; 'P'
00000000000084e4         db  0x02 ; '.'
00000000000084e5         db  0x7f ; '.'
00000000000084e6         db  0x0a ; '.'
00000000000084e7         db  0x0e ; '.'
00000000000084e8         db  0x08 ; '.'
00000000000084e9         db  0x41 ; 'A'
00000000000084ea         db  0x0b ; '.'
00000000000084eb         db  0x00 ; '.'
00000000000084ec         dd         0x00000018                                  ; Length of the record
00000000000084f0         dd         0x00000790                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000084f4         db         0xcc, 0xcf, 2 dup (0xff)                    ; begin 0x54c0
00000000000084f8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5551)
00000000000084fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084fd         db  0x44 ; 'D'
00000000000084fe         db  0x0e ; '.'
00000000000084ff         db  0x50 ; 'P'
0000000000008500         db  0x02 ; '.'
0000000000008501         db  0x82 ; '.'
0000000000008502         db  0x0a ; '.'
0000000000008503         db  0x0e ; '.'
0000000000008504         db  0x08 ; '.'
0000000000008505         db  0x41 ; 'A'
0000000000008506         db  0x0b ; '.'
0000000000008507         db  0x00 ; '.'
0000000000008508         dd         0x00000010                                  ; Length of the record
000000000000850c         dd         0x000007ac                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008510         db         0x50, 0xd0, 2 dup (0xff)                    ; begin 0x5560
0000000000008514         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x556c)
0000000000008518         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008519         align      4
000000000000851c         dd         0x00000010                                  ; Length of the record
0000000000008520         dd         0x000007c0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008524         db         0x4c, 0xd0, 2 dup (0xff)                    ; begin 0x5570
0000000000008528         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5587)
000000000000852c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000852d         align      16
0000000000008530         dd         0x00000010                                  ; Length of the record
0000000000008534         dd         0x000007d4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008538         db         0x58, 0xd0, 2 dup (0xff)                    ; begin 0x5590
000000000000853c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x55a3)
0000000000008540         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008541         align      4
0000000000008544         dd         0x00000010                                  ; Length of the record
0000000000008548         dd         0x000007e8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000854c         db         0x64, 0xd0, 2 dup (0xff)                    ; begin 0x55b0
0000000000008550         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55bc)
0000000000008554         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008555         align      8
0000000000008558         dd         0x00000010                                  ; Length of the record
000000000000855c         dd         0x000007fc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008560         db         0x60, 0xd0, 2 dup (0xff)                    ; begin 0x55c0
0000000000008564         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x55d4)
0000000000008568         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008569         align      4
000000000000856c         dd         0x00000010                                  ; Length of the record
0000000000008570         dd         0x00000810                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008574         db         0x6c, 0xd0, 2 dup (0xff)                    ; begin 0x55e0
0000000000008578         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x55f3)
000000000000857c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000857d         align      128
0000000000008580         dd         0x00000014                                  ; Length of the record
0000000000008584         dd         0x00000824                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008588         db         0x78, 0xd0, 2 dup (0xff)                    ; begin 0x5600
000000000000858c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5618)
0000000000008590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008591         align      8
0000000000008598         dd         0x00000034                                  ; Length of the record
000000000000859c         dd         0x0000083c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000085a0         db         0x80, 0xd0, 2 dup (0xff)                    ; begin 0x5620
00000000000085a4         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x567e)
00000000000085a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085a9         db  0x42 ; 'B'
00000000000085aa         db  0x0e ; '.'
00000000000085ab         db  0x10 ; '.'
00000000000085ac         db  0x8d ; '.'
00000000000085ad         db  0x02 ; '.'
00000000000085ae         db  0x42 ; 'B'
00000000000085af         db  0x0e ; '.'
00000000000085b0         db  0x18 ; '.'
00000000000085b1         db  0x8c ; '.'
00000000000085b2         db  0x03 ; '.'
00000000000085b3         db  0x44 ; 'D'
00000000000085b4         db  0x0e ; '.'
00000000000085b5         db  0x20 ; ' '
00000000000085b6         db  0x86 ; '.'
00000000000085b7         db  0x04 ; '.'
00000000000085b8         db  0x41 ; 'A'
00000000000085b9         db  0x0e ; '.'
00000000000085ba         db  0x28 ; '('
00000000000085bb         db  0x83 ; '.'
00000000000085bc         db  0x05 ; '.'
00000000000085bd         db  0x4a ; 'J'
00000000000085be         db  0x0e ; '.'
00000000000085bf         db  0x30 ; '0'
00000000000085c0         db  0x02 ; '.'
00000000000085c1         db  0x41 ; 'A'
00000000000085c2         db  0x0e ; '.'
00000000000085c3         db  0x28 ; '('
00000000000085c4         db  0x44 ; 'D'
00000000000085c5         db  0x0e ; '.'
00000000000085c6         db  0x20 ; ' '
00000000000085c7         db  0x41 ; 'A'
00000000000085c8         db  0x0e ; '.'
00000000000085c9         db  0x18 ; '.'
00000000000085ca         db  0x42 ; 'B'
00000000000085cb         db  0x0e ; '.'
00000000000085cc         db  0x10 ; '.'
00000000000085cd         db  0x42 ; 'B'
00000000000085ce         db  0x0e ; '.'
00000000000085cf         db  0x08 ; '.'
00000000000085d0         dd         0x00000110                                  ; Length of the record
00000000000085d4         dd         0x00000874                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000085d8         db         0xa8, 0xd0, 2 dup (0xff)                    ; begin 0x5680
00000000000085dc         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5a97)
00000000000085e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085e1         db  0x42 ; 'B'
00000000000085e2         db  0x0e ; '.'
00000000000085e3         db  0x10 ; '.'
00000000000085e4         db  0x8f ; '.'
00000000000085e5         db  0x02 ; '.'
00000000000085e6         db  0x42 ; 'B'
00000000000085e7         db  0x0e ; '.'
00000000000085e8         db  0x18 ; '.'
00000000000085e9         db  0x8e ; '.'
00000000000085ea         db  0x03 ; '.'
00000000000085eb         db  0x42 ; 'B'
00000000000085ec         db  0x0e ; '.'
00000000000085ed         db  0x20 ; ' '
00000000000085ee         db  0x8d ; '.'
00000000000085ef         db  0x04 ; '.'
00000000000085f0         db  0x42 ; 'B'
00000000000085f1         db  0x0e ; '.'
00000000000085f2         db  0x28 ; '('
00000000000085f3         db  0x8c ; '.'
00000000000085f4         db  0x05 ; '.'
00000000000085f5         db  0x44 ; 'D'
00000000000085f6         db  0x0e ; '.'
00000000000085f7         db  0x30 ; '0'
00000000000085f8         db  0x86 ; '.'
00000000000085f9         db  0x06 ; '.'
00000000000085fa         db  0x41 ; 'A'
00000000000085fb         db  0x0e ; '.'
00000000000085fc         db  0x38 ; '8'
00000000000085fd         db  0x83 ; '.'
00000000000085fe         db  0x07 ; '.'
00000000000085ff         db  0x4a ; 'J'
0000000000008600         db  0x0e ; '.'
0000000000008601         db  0x60 ; '`'
0000000000008602         db  0x02 ; '.'
0000000000008603         db  0xdd ; '.'
0000000000008604         db  0x0e ; '.'
0000000000008605         db  0x68 ; 'h'
0000000000008606         db  0x57 ; 'W'
0000000000008607         db  0x0e ; '.'
0000000000008608         db  0x70 ; 'p'
0000000000008609         db  0x42 ; 'B'
000000000000860a         db  0x0e ; '.'
000000000000860b         db  0x78 ; 'x'
000000000000860c         db  0x42 ; 'B'
000000000000860d         db  0x0e ; '.'
000000000000860e         db  0x80 ; '.'
000000000000860f         db  0x01 ; '.'
0000000000008610         db  0x42 ; 'B'
0000000000008611         db  0x0e ; '.'
0000000000008612         db  0x88 ; '.'
0000000000008613         db  0x01 ; '.'
0000000000008614         db  0x42 ; 'B'
0000000000008615         db  0x0e ; '.'
0000000000008616         db  0x90 ; '.'
0000000000008617         db  0x01 ; '.'
0000000000008618         db  0x53 ; 'S'
0000000000008619         db  0x0e ; '.'
000000000000861a         db  0x60 ; '`'
000000000000861b         db  0x44 ; 'D'
000000000000861c         db  0x0a ; '.'
000000000000861d         db  0x0e ; '.'
000000000000861e         db  0x38 ; '8'
000000000000861f         db  0x41 ; 'A'
0000000000008620         db  0x0e ; '.'
0000000000008621         db  0x30 ; '0'
0000000000008622         db  0x41 ; 'A'
0000000000008623         db  0x0e ; '.'
0000000000008624         db  0x28 ; '('
0000000000008625         db  0x42 ; 'B'
0000000000008626         db  0x0e ; '.'
0000000000008627         db  0x20 ; ' '
0000000000008628         db  0x42 ; 'B'
0000000000008629         db  0x0e ; '.'
000000000000862a         db  0x18 ; '.'
000000000000862b         db  0x42 ; 'B'
000000000000862c         db  0x0e ; '.'
000000000000862d         db  0x10 ; '.'
000000000000862e         db  0x42 ; 'B'
000000000000862f         db  0x0e ; '.'
0000000000008630         db  0x08 ; '.'
0000000000008631         db  0x44 ; 'D'
0000000000008632         db  0x0b ; '.'
0000000000008633         db  0x02 ; '.'
0000000000008634         db  0x78 ; 'x'
0000000000008635         db  0x0a ; '.'
0000000000008636         db  0x0e ; '.'
0000000000008637         db  0x68 ; 'h'
0000000000008638         db  0x48 ; 'H'
0000000000008639         db  0x0b ; '.'
000000000000863a         db  0x5a ; 'Z'
000000000000863b         db  0x0a ; '.'
000000000000863c         db  0x0e ; '.'
000000000000863d         db  0x38 ; '8'
000000000000863e         db  0x47 ; 'G'
000000000000863f         db  0x0e ; '.'
0000000000008640         db  0x30 ; '0'
0000000000008641         db  0x41 ; 'A'
0000000000008642         db  0x0e ; '.'
0000000000008643         db  0x28 ; '('
0000000000008644         db  0x42 ; 'B'
0000000000008645         db  0x0e ; '.'
0000000000008646         db  0x20 ; ' '
0000000000008647         db  0x42 ; 'B'
0000000000008648         db  0x0e ; '.'
0000000000008649         db  0x18 ; '.'
000000000000864a         db  0x42 ; 'B'
000000000000864b         db  0x0e ; '.'
000000000000864c         db  0x10 ; '.'
000000000000864d         db  0x42 ; 'B'
000000000000864e         db  0x0e ; '.'
000000000000864f         db  0x08 ; '.'
0000000000008650         db  0x56 ; 'V'
0000000000008651         db  0x0b ; '.'
0000000000008652         db  0x5e ; '^'
0000000000008653         db  0x0a ; '.'
0000000000008654         db  0x0e ; '.'
0000000000008655         db  0x38 ; '8'
0000000000008656         db  0x52 ; 'R'
0000000000008657         db  0x0e ; '.'
0000000000008658         db  0x30 ; '0'
0000000000008659         db  0x41 ; 'A'
000000000000865a         db  0x0e ; '.'
000000000000865b         db  0x28 ; '('
000000000000865c         db  0x42 ; 'B'
000000000000865d         db  0x0e ; '.'
000000000000865e         db  0x20 ; ' '
000000000000865f         db  0x42 ; 'B'
0000000000008660         db  0x0e ; '.'
0000000000008661         db  0x18 ; '.'
0000000000008662         db  0x42 ; 'B'
0000000000008663         db  0x0e ; '.'
0000000000008664         db  0x10 ; '.'
0000000000008665         db  0x42 ; 'B'
0000000000008666         db  0x0e ; '.'
0000000000008667         db  0x08 ; '.'
0000000000008668         db  0x4f ; 'O'
0000000000008669         db  0x0b ; '.'
000000000000866a         db  0x62 ; 'b'
000000000000866b         db  0x0a ; '.'
000000000000866c         db  0x0e ; '.'
000000000000866d         db  0x38 ; '8'
000000000000866e         db  0x50 ; 'P'
000000000000866f         db  0x0e ; '.'
0000000000008670         db  0x30 ; '0'
0000000000008671         db  0x41 ; 'A'
0000000000008672         db  0x0e ; '.'
0000000000008673         db  0x28 ; '('
0000000000008674         db  0x42 ; 'B'
0000000000008675         db  0x0e ; '.'
0000000000008676         db  0x20 ; ' '
0000000000008677         db  0x42 ; 'B'
0000000000008678         db  0x0e ; '.'
0000000000008679         db  0x18 ; '.'
000000000000867a         db  0x42 ; 'B'
000000000000867b         db  0x0e ; '.'
000000000000867c         db  0x10 ; '.'
000000000000867d         db  0x42 ; 'B'
000000000000867e         db  0x0e ; '.'
000000000000867f         db  0x08 ; '.'
0000000000008680         db  0x55 ; 'U'
0000000000008681         db  0x0b ; '.'
0000000000008682         db  0x66 ; 'f'
0000000000008683         db  0x0e ; '.'
0000000000008684         db  0x68 ; 'h'
0000000000008685         db  0x42 ; 'B'
0000000000008686         db  0x0e ; '.'
0000000000008687         db  0x70 ; 'p'
0000000000008688         db  0x5c ; '\'
0000000000008689         db  0x0e ; '.'
000000000000868a         db  0x68 ; 'h'
000000000000868b         db  0x41 ; 'A'
000000000000868c         db  0x0e ; '.'
000000000000868d         db  0x60 ; '`'
000000000000868e         db  0x44 ; 'D'
000000000000868f         db  0x0a ; '.'
0000000000008690         db  0x0e ; '.'
0000000000008691         db  0x38 ; '8'
0000000000008692         db  0x41 ; 'A'
0000000000008693         db  0x0e ; '.'
0000000000008694         db  0x30 ; '0'
0000000000008695         db  0x41 ; 'A'
0000000000008696         db  0x0e ; '.'
0000000000008697         db  0x28 ; '('
0000000000008698         db  0x42 ; 'B'
0000000000008699         db  0x0e ; '.'
000000000000869a         db  0x20 ; ' '
000000000000869b         db  0x42 ; 'B'
000000000000869c         db  0x0e ; '.'
000000000000869d         db  0x18 ; '.'
000000000000869e         db  0x42 ; 'B'
000000000000869f         db  0x0e ; '.'
00000000000086a0         db  0x10 ; '.'
00000000000086a1         db  0x42 ; 'B'
00000000000086a2         db  0x0e ; '.'
00000000000086a3         db  0x08 ; '.'
00000000000086a4         db  0x45 ; 'E'
00000000000086a5         db  0x0b ; '.'
00000000000086a6         db  0x68 ; 'h'
00000000000086a7         db  0x0a ; '.'
00000000000086a8         db  0x0e ; '.'
00000000000086a9         db  0x68 ; 'h'
00000000000086aa         db  0x48 ; 'H'
00000000000086ab         db  0x0b ; '.'
00000000000086ac         db  0x72 ; 'r'
00000000000086ad         db  0x0e ; '.'
00000000000086ae         db  0x68 ; 'h'
00000000000086af         db  0x45 ; 'E'
00000000000086b0         db  0x0e ; '.'
00000000000086b1         db  0x70 ; 'p'
00000000000086b2         db  0x42 ; 'B'
00000000000086b3         db  0x0e ; '.'
00000000000086b4         db  0x78 ; 'x'
00000000000086b5         db  0x42 ; 'B'
00000000000086b6         db  0x0e ; '.'
00000000000086b7         db  0x80 ; '.'
00000000000086b8         db  0x01 ; '.'
00000000000086b9         db  0x5e ; '^'
00000000000086ba         db  0x0e ; '.'
00000000000086bb         db  0x60 ; '`'
00000000000086bc         db  0x44 ; 'D'
00000000000086bd         db  0x0a ; '.'
00000000000086be         db  0x0e ; '.'
00000000000086bf         db  0x38 ; '8'
00000000000086c0         db  0x41 ; 'A'
00000000000086c1         db  0x0e ; '.'
00000000000086c2         db  0x30 ; '0'
00000000000086c3         db  0x41 ; 'A'
00000000000086c4         db  0x0e ; '.'
00000000000086c5         db  0x28 ; '('
00000000000086c6         db  0x42 ; 'B'
00000000000086c7         db  0x0e ; '.'
00000000000086c8         db  0x20 ; ' '
00000000000086c9         db  0x42 ; 'B'
00000000000086ca         db  0x0e ; '.'
00000000000086cb         db  0x18 ; '.'
00000000000086cc         db  0x42 ; 'B'
00000000000086cd         db  0x0e ; '.'
00000000000086ce         db  0x10 ; '.'
00000000000086cf         db  0x42 ; 'B'
00000000000086d0         db  0x0e ; '.'
00000000000086d1         db  0x08 ; '.'
00000000000086d2         db  0x41 ; 'A'
00000000000086d3         db  0x0b ; '.'
00000000000086d4         db  0x79 ; 'y'
00000000000086d5         db  0x0a ; '.'
00000000000086d6         db  0x0e ; '.'
00000000000086d7         db  0x68 ; 'h'
00000000000086d8         db  0x42 ; 'B'
00000000000086d9         db  0x0e ; '.'
00000000000086da         db  0x70 ; 'p'
00000000000086db         db  0x42 ; 'B'
00000000000086dc         db  0x0e ; '.'
00000000000086dd         db  0x78 ; 'x'
00000000000086de         db  0x42 ; 'B'
00000000000086df         db  0x0e ; '.'
00000000000086e0         db  0x80 ; '.'
00000000000086e1         db  0x01 ; '.'
00000000000086e2         db  0x51 ; 'Q'
00000000000086e3         db  0x0b ; '.'
00000000000086e4         dd         0x00000010                                  ; Length of the record
00000000000086e8         dd         0x00000988                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000086ec         db         0xb4, 0xd3, 2 dup (0xff)                    ; begin 0x5aa0
00000000000086f0         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5ac0)
00000000000086f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086f5         align      8
00000000000086f8         dd         0x00000018                                  ; Length of the record
00000000000086fc         dd         0x0000099c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008700         db         0xc0, 0xd3, 2 dup (0xff)                    ; begin 0x5ac0
0000000000008704         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5b38)
0000000000008708         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008709         db  0x44 ; 'D'
000000000000870a         db  0x0e ; '.'
000000000000870b         db  0x70 ; 'p'
000000000000870c         db  0x02 ; '.'
000000000000870d         db  0x60 ; '`'
000000000000870e         db  0x0a ; '.'
000000000000870f         db  0x0e ; '.'
0000000000008710         db  0x08 ; '.'
0000000000008711         db  0x41 ; 'A'
0000000000008712         db  0x0b ; '.'
0000000000008713         db  0x00 ; '.'
0000000000008714         dd         0x00000028                                  ; Length of the record
0000000000008718         dd         0x000009b8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000871c         db         0x24, 0xd4, 2 dup (0xff)                    ; begin 0x5b40
0000000000008720         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5c15)
0000000000008724         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008725         db  0x41 ; 'A'
0000000000008726         db  0x0e ; '.'
0000000000008727         db  0x10 ; '.'
0000000000008728         db  0x86 ; '.'
0000000000008729         db  0x02 ; '.'
000000000000872a         db  0x41 ; 'A'
000000000000872b         db  0x0e ; '.'
000000000000872c         db  0x18 ; '.'
000000000000872d         db  0x83 ; '.'
000000000000872e         db  0x03 ; '.'
000000000000872f         db  0x50 ; 'P'
0000000000008730         db  0x0e ; '.'
0000000000008731         db  0xd0 ; '.'
0000000000008732         db  0x01 ; '.'
0000000000008733         db  0x02 ; '.'
0000000000008734         db  0xab ; '.'
0000000000008735         db  0x0a ; '.'
0000000000008736         db  0x0e ; '.'
0000000000008737         db  0x18 ; '.'
0000000000008738         db  0x41 ; 'A'
0000000000008739         db  0x0e ; '.'
000000000000873a         db  0x10 ; '.'
000000000000873b         db  0x41 ; 'A'
000000000000873c         db  0x0e ; '.'
000000000000873d         db  0x08 ; '.'
000000000000873e         db  0x41 ; 'A'
000000000000873f         db  0x0b ; '.'
0000000000008740         dd         0x0000001c                                  ; Length of the record
0000000000008744         dd         0x000009e4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008748         db         0xd8, 0xd4, 2 dup (0xff)                    ; begin 0x5c20
000000000000874c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5ca0)
0000000000008750         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008751         db  0x41 ; 'A'
0000000000008752         db  0x0e ; '.'
0000000000008753         db  0x10 ; '.'
0000000000008754         db  0x83 ; '.'
0000000000008755         db  0x02 ; '.'
0000000000008756         db  0x02 ; '.'
0000000000008757         db  0x7a ; 'z'
0000000000008758         db  0x0e ; '.'
0000000000008759         db  0x08 ; '.'
000000000000875a         db  0x00 ; '.'
000000000000875b         db  0x00 ; '.'
000000000000875c         db  0x00 ; '.'
000000000000875d         db  0x00 ; '.'
000000000000875e         db  0x00 ; '.'
000000000000875f         db  0x00 ; '.'
0000000000008760         dd         0x00000018                                  ; Length of the record
0000000000008764         dd         0x00000a04                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008768         db         0x38, 0xd5, 2 dup (0xff)                    ; begin 0x5ca0
000000000000876c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5cba)
0000000000008770         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008771         db  0x41 ; 'A'
0000000000008772         db  0x0e ; '.'
0000000000008773         db  0x10 ; '.'
0000000000008774         db  0x83 ; '.'
0000000000008775         db  0x02 ; '.'
0000000000008776         db  0x53 ; 'S'
0000000000008777         db  0x0a ; '.'
0000000000008778         db  0x0e ; '.'
0000000000008779         db  0x08 ; '.'
000000000000877a         db  0x41 ; 'A'
000000000000877b         db  0x0b ; '.'
000000000000877c         dd         0x00000010                                  ; Length of the record
0000000000008780         dd         0x00000a20                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008784         db         0x3c, 0xd5, 2 dup (0xff)                    ; begin 0x5cc0
0000000000008788         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5ce4)
000000000000878c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000878d         db  0x5f ; '_'
000000000000878e         db  0x0e ; '.'
000000000000878f         db  0x10 ; '.'
0000000000008790         dd         0x00000010                                  ; Length of the record
0000000000008794         dd         0x00000a34                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008798         db         0x58, 0xd5, 2 dup (0xff)                    ; begin 0x5cf0
000000000000879c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5cf2)
00000000000087a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087a1         align      4
00000000000087a4         dd         0x00000020                                  ; Length of the record
00000000000087a8         dd         0x00000a48                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000087ac         db         0x54, 0xd5, 2 dup (0xff)                    ; begin 0x5d00
00000000000087b0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5d36)
00000000000087b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087b5         db  0x44 ; 'D'
00000000000087b6         db  0x0e ; '.'
00000000000087b7         db  0x10 ; '.'
00000000000087b8         db  0x83 ; '.'
00000000000087b9         db  0x02 ; '.'
00000000000087ba         db  0x5d ; ']'
00000000000087bb         db  0x0a ; '.'
00000000000087bc         db  0x0e ; '.'
00000000000087bd         db  0x08 ; '.'
00000000000087be         db  0x47 ; 'G'
00000000000087bf         db  0x0b ; '.'
00000000000087c0         db  0x48 ; 'H'
00000000000087c1         db  0x0a ; '.'
00000000000087c2         db  0x0e ; '.'
00000000000087c3         db  0x08 ; '.'
00000000000087c4         db  0x41 ; 'A'
00000000000087c5         db  0x0b ; '.'
00000000000087c6         db  0x00 ; '.'
00000000000087c7         db  0x00 ; '.'
00000000000087c8         dd         0x00000010                                  ; Length of the record
00000000000087cc         dd         0x00000a6c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000087d0         db         0x70, 0xd5, 2 dup (0xff)                    ; begin 0x5d40
00000000000087d4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5d64)
00000000000087d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087d9         db  0x5f ; '_'
00000000000087da         db  0x0e ; '.'
00000000000087db         db  0x10 ; '.'
00000000000087dc         dd         0x00000014                                  ; Length of the record
00000000000087e0         dd         0x00000a80                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000087e4         db         0x8c, 0xd5, 2 dup (0xff)                    ; begin 0x5d70
00000000000087e8         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5df2)
00000000000087ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087ed         db  0x02 ; '.'
00000000000087ee         db  0x5f ; '_'
00000000000087ef         db  0x0e ; '.'
00000000000087f0         db  0x10 ; '.'
00000000000087f1         db  0x49 ; 'I'
00000000000087f2         db  0x0e ; '.'
00000000000087f3         db  0x08 ; '.'
00000000000087f4         dd         0x00000014                                  ; Length of the record
00000000000087f8         dd         0x00000a98                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000087fc         db         0x04, 0xd6, 2 dup (0xff)                    ; begin 0x5e00
0000000000008800         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5e4a)
0000000000008804         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008805         db  0x02 ; '.'
0000000000008806         db  0x45 ; 'E'
0000000000008807         db  0x0e ; '.'
0000000000008808         db  0x10 ; '.'
0000000000008809         db  0x00 ; '.'
000000000000880a         db  0x00 ; '.'
000000000000880b         db  0x00 ; '.'
000000000000880c         dd         0x00000018                                  ; Length of the record
0000000000008810         dd         0x00000ab0                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008814         db         0x3c, 0xd6, 2 dup (0xff)                    ; begin 0x5e50
0000000000008818         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5e67)
000000000000881c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000881d         db  0x41 ; 'A'
000000000000881e         db  0x0e ; '.'
000000000000881f         db  0x10 ; '.'
0000000000008820         db  0x83 ; '.'
0000000000008821         db  0x02 ; '.'
0000000000008822         db  0x51 ; 'Q'
0000000000008823         db  0x0e ; '.'
0000000000008824         db  0x08 ; '.'
0000000000008825         db  0x00 ; '.'
0000000000008826         db  0x00 ; '.'
0000000000008827         db  0x00 ; '.'
0000000000008828         dd         0x00000018                                  ; Length of the record
000000000000882c         dd         0x00000acc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008830         db         0x40, 0xd6, 2 dup (0xff)                    ; begin 0x5e70
0000000000008834         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5e9e)
0000000000008838         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008839         db  0x47 ; 'G'
000000000000883a         db  0x0e ; '.'
000000000000883b         db  0x10 ; '.'
000000000000883c         db  0x61 ; 'a'
000000000000883d         db  0x0a ; '.'
000000000000883e         db  0x0e ; '.'
000000000000883f         db  0x08 ; '.'
0000000000008840         db  0x41 ; 'A'
0000000000008841         db  0x0b ; '.'
0000000000008842         db  0x00 ; '.'
0000000000008843         db  0x00 ; '.'
0000000000008844         dd         0x00000024                                  ; Length of the record
0000000000008848         dd         0x00000ae8                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
000000000000884c         db         0x54, 0xd6, 2 dup (0xff)                    ; begin 0x5ea0
0000000000008850         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5ec8)
0000000000008854         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008855         db  0x41 ; 'A'
0000000000008856         db  0x0e ; '.'
0000000000008857         db  0x10 ; '.'
0000000000008858         db  0x86 ; '.'
0000000000008859         db  0x02 ; '.'
000000000000885a         db  0x41 ; 'A'
000000000000885b         db  0x0e ; '.'
000000000000885c         db  0x18 ; '.'
000000000000885d         db  0x83 ; '.'
000000000000885e         db  0x03 ; '.'
000000000000885f         db  0x4d ; 'M'
0000000000008860         db  0x0e ; '.'
0000000000008861         db  0x20 ; ' '
0000000000008862         db  0x49 ; 'I'
0000000000008863         db  0x0e ; '.'
0000000000008864         db  0x18 ; '.'
0000000000008865         db  0x47 ; 'G'
0000000000008866         db  0x0e ; '.'
0000000000008867         db  0x10 ; '.'
0000000000008868         db  0x41 ; 'A'
0000000000008869         db  0x0e ; '.'
000000000000886a         db  0x08 ; '.'
000000000000886b         db  0x00 ; '.'
000000000000886c         dd         0x00000018                                  ; Length of the record
0000000000008870         dd         0x00000b10                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008874         db         0x5c, 0xd6, 2 dup (0xff)                    ; begin 0x5ed0
0000000000008878         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5ee3)
000000000000887c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000887d         db  0x41 ; 'A'
000000000000887e         db  0x0e ; '.'
000000000000887f         db  0x10 ; '.'
0000000000008880         db  0x83 ; '.'
0000000000008881         db  0x02 ; '.'
0000000000008882         db  0x50 ; 'P'
0000000000008883         db  0x0e ; '.'
0000000000008884         db  0x08 ; '.'
0000000000008885         db  0x00 ; '.'
0000000000008886         db  0x00 ; '.'
0000000000008887         db  0x00 ; '.'
0000000000008888         dd         0x00000014                                  ; Length of the record
000000000000888c         dd         0x00000b2c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008890         db         0x60, 0xd6, 2 dup (0xff)                    ; begin 0x5ef0
0000000000008894         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5f25)
0000000000008898         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008899         db  0x4b ; 'K'
000000000000889a         db  0x0e ; '.'
000000000000889b         db  0x10 ; '.'
000000000000889c         db  0x00 ; '.'
000000000000889d         db  0x00 ; '.'
000000000000889e         db  0x00 ; '.'
000000000000889f         db  0x00 ; '.'
00000000000088a0         dd         0x00000048                                  ; Length of the record
00000000000088a4         dd         0x00000b44                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000088a8         db         0x88, 0xd6, 2 dup (0xff)                    ; begin 0x5f30
00000000000088ac         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x6030)
00000000000088b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b1         db  0x42 ; 'B'
00000000000088b2         db  0x0e ; '.'
00000000000088b3         db  0x10 ; '.'
00000000000088b4         db  0x8f ; '.'
00000000000088b5         db  0x02 ; '.'
00000000000088b6         db  0x42 ; 'B'
00000000000088b7         db  0x0e ; '.'
00000000000088b8         db  0x18 ; '.'
00000000000088b9         db  0x8e ; '.'
00000000000088ba         db  0x03 ; '.'
00000000000088bb         db  0x45 ; 'E'
00000000000088bc         db  0x0e ; '.'
00000000000088bd         db  0x20 ; ' '
00000000000088be         db  0x8d ; '.'
00000000000088bf         db  0x04 ; '.'
00000000000088c0         db  0x42 ; 'B'
00000000000088c1         db  0x0e ; '.'
00000000000088c2         db  0x28 ; '('
00000000000088c3         db  0x8c ; '.'
00000000000088c4         db  0x05 ; '.'
00000000000088c5         db  0x44 ; 'D'
00000000000088c6         db  0x0e ; '.'
00000000000088c7         db  0x30 ; '0'
00000000000088c8         db  0x86 ; '.'
00000000000088c9         db  0x06 ; '.'
00000000000088ca         db  0x41 ; 'A'
00000000000088cb         db  0x0e ; '.'
00000000000088cc         db  0x38 ; '8'
00000000000088cd         db  0x83 ; '.'
00000000000088ce         db  0x07 ; '.'
00000000000088cf         db  0x4e ; 'N'
00000000000088d0         db  0x0e ; '.'
00000000000088d1         db  0x50 ; 'P'
00000000000088d2         db  0x02 ; '.'
00000000000088d3         db  0x9d ; '.'
00000000000088d4         db  0x0a ; '.'
00000000000088d5         db  0x0e ; '.'
00000000000088d6         db  0x38 ; '8'
00000000000088d7         db  0x41 ; 'A'
00000000000088d8         db  0x0e ; '.'
00000000000088d9         db  0x30 ; '0'
00000000000088da         db  0x41 ; 'A'
00000000000088db         db  0x0e ; '.'
00000000000088dc         db  0x28 ; '('
00000000000088dd         db  0x42 ; 'B'
00000000000088de         db  0x0e ; '.'
00000000000088df         db  0x20 ; ' '
00000000000088e0         db  0x42 ; 'B'
00000000000088e1         db  0x0e ; '.'
00000000000088e2         db  0x18 ; '.'
00000000000088e3         db  0x42 ; 'B'
00000000000088e4         db  0x0e ; '.'
00000000000088e5         db  0x10 ; '.'
00000000000088e6         db  0x42 ; 'B'
00000000000088e7         db  0x0e ; '.'
00000000000088e8         db  0x08 ; '.'
00000000000088e9         db  0x4b ; 'K'
00000000000088ea         db  0x0b ; '.'
00000000000088eb         db  0x00 ; '.'
00000000000088ec         dd         0x00000018                                  ; Length of the record
00000000000088f0         dd         0x00000b90                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000088f4         db         0x3c, 0xd7, 2 dup (0xff)                    ; begin 0x6030
00000000000088f8         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x6051)
00000000000088fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088fd         db  0x44 ; 'D'
00000000000088fe         db  0x0e ; '.'
00000000000088ff         db  0x18 ; '.'
0000000000008900         db  0x42 ; 'B'
0000000000008901         db  0x0e ; '.'
0000000000008902         db  0x20 ; ' '
0000000000008903         db  0x5a ; 'Z'
0000000000008904         db  0x0e ; '.'
0000000000008905         db  0x08 ; '.'
0000000000008906         db  0x00 ; '.'
0000000000008907         db  0x00 ; '.'
0000000000008908         dd         0x0000004c                                  ; Length of the record
000000000000890c         dd         0x00000bac                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008910         db         0x50, 0xd7, 2 dup (0xff)                    ; begin 0x6060
0000000000008914         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x647c)
0000000000008918         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008919         db  0x42 ; 'B'
000000000000891a         db  0x0e ; '.'
000000000000891b         db  0x10 ; '.'
000000000000891c         db  0x8f ; '.'
000000000000891d         db  0x02 ; '.'
000000000000891e         db  0x42 ; 'B'
000000000000891f         db  0x0e ; '.'
0000000000008920         db  0x18 ; '.'
0000000000008921         db  0x8e ; '.'
0000000000008922         db  0x03 ; '.'
0000000000008923         db  0x42 ; 'B'
0000000000008924         db  0x0e ; '.'
0000000000008925         db  0x20 ; ' '
0000000000008926         db  0x8d ; '.'
0000000000008927         db  0x04 ; '.'
0000000000008928         db  0x42 ; 'B'
0000000000008929         db  0x0e ; '.'
000000000000892a         db  0x28 ; '('
000000000000892b         db  0x8c ; '.'
000000000000892c         db  0x05 ; '.'
000000000000892d         db  0x41 ; 'A'
000000000000892e         db  0x0e ; '.'
000000000000892f         db  0x30 ; '0'
0000000000008930         db  0x86 ; '.'
0000000000008931         db  0x06 ; '.'
0000000000008932         db  0x41 ; 'A'
0000000000008933         db  0x0e ; '.'
0000000000008934         db  0x38 ; '8'
0000000000008935         db  0x83 ; '.'
0000000000008936         db  0x07 ; '.'
0000000000008937         db  0x44 ; 'D'
0000000000008938         db  0x0e ; '.'
0000000000008939         db  0x60 ; '`'
000000000000893a         db  0x02 ; '.'
000000000000893b         db  0xe9 ; '.'
000000000000893c         db  0x0a ; '.'
000000000000893d         db  0x0e ; '.'
000000000000893e         db  0x38 ; '8'
000000000000893f         db  0x41 ; 'A'
0000000000008940         db  0x0e ; '.'
0000000000008941         db  0x30 ; '0'
0000000000008942         db  0x41 ; 'A'
0000000000008943         db  0x0e ; '.'
0000000000008944         db  0x28 ; '('
0000000000008945         db  0x42 ; 'B'
0000000000008946         db  0x0e ; '.'
0000000000008947         db  0x20 ; ' '
0000000000008948         db  0x42 ; 'B'
0000000000008949         db  0x0e ; '.'
000000000000894a         db  0x18 ; '.'
000000000000894b         db  0x42 ; 'B'
000000000000894c         db  0x0e ; '.'
000000000000894d         db  0x10 ; '.'
000000000000894e         db  0x42 ; 'B'
000000000000894f         db  0x0e ; '.'
0000000000008950         db  0x08 ; '.'
0000000000008951         db  0x47 ; 'G'
0000000000008952         db  0x0b ; '.'
0000000000008953         db  0x00 ; '.'
0000000000008954         db  0x00 ; '.'
0000000000008955         db  0x00 ; '.'
0000000000008956         db  0x00 ; '.'
0000000000008957         db  0x00 ; '.'
0000000000008958         dd         0x0000003c                                  ; Length of the record
000000000000895c         dd         0x00000bfc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008960         db         0x20, 0xdb, 2 dup (0xff)                    ; begin 0x6480
0000000000008964         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6503)
0000000000008968         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008969         db  0x42 ; 'B'
000000000000896a         db  0x0e ; '.'
000000000000896b         db  0x10 ; '.'
000000000000896c         db  0x8d ; '.'
000000000000896d         db  0x02 ; '.'
000000000000896e         db  0x42 ; 'B'
000000000000896f         db  0x0e ; '.'
0000000000008970         db  0x18 ; '.'
0000000000008971         db  0x8c ; '.'
0000000000008972         db  0x03 ; '.'
0000000000008973         db  0x44 ; 'D'
0000000000008974         db  0x0e ; '.'
0000000000008975         db  0x20 ; ' '
0000000000008976         db  0x86 ; '.'
0000000000008977         db  0x04 ; '.'
0000000000008978         db  0x41 ; 'A'
0000000000008979         db  0x0e ; '.'
000000000000897a         db  0x28 ; '('
000000000000897b         db  0x83 ; '.'
000000000000897c         db  0x05 ; '.'
000000000000897d         db  0x4a ; 'J'
000000000000897e         db  0x0e ; '.'
000000000000897f         db  0x40 ; '@'
0000000000008980         db  0x02 ; '.'
0000000000008981         db  0x64 ; 'd'
0000000000008982         db  0x0a ; '.'
0000000000008983         db  0x0e ; '.'
0000000000008984         db  0x28 ; '('
0000000000008985         db  0x41 ; 'A'
0000000000008986         db  0x0e ; '.'
0000000000008987         db  0x20 ; ' '
0000000000008988         db  0x41 ; 'A'
0000000000008989         db  0x0e ; '.'
000000000000898a         db  0x18 ; '.'
000000000000898b         db  0x42 ; 'B'
000000000000898c         db  0x0e ; '.'
000000000000898d         db  0x10 ; '.'
000000000000898e         db  0x42 ; 'B'
000000000000898f         db  0x0e ; '.'
0000000000008990         db  0x08 ; '.'
0000000000008991         db  0x41 ; 'A'
0000000000008992         db  0x0b ; '.'
0000000000008993         db  0x00 ; '.'
0000000000008994         db  0x00 ; '.'
0000000000008995         db  0x00 ; '.'
0000000000008996         db  0x00 ; '.'
0000000000008997         db  0x00 ; '.'
0000000000008998         dd         0x0000004c                                  ; Length of the record
000000000000899c         dd         0x00000c3c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000089a0         db         0x70, 0xdb, 2 dup (0xff)                    ; begin 0x6510
00000000000089a4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x658d)
00000000000089a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089a9         db  0x42 ; 'B'
00000000000089aa         db  0x0e ; '.'
00000000000089ab         db  0x10 ; '.'
00000000000089ac         db  0x8c ; '.'
00000000000089ad         db  0x02 ; '.'
00000000000089ae         db  0x41 ; 'A'
00000000000089af         db  0x0e ; '.'
00000000000089b0         db  0x18 ; '.'
00000000000089b1         db  0x86 ; '.'
00000000000089b2         db  0x03 ; '.'
00000000000089b3         db  0x44 ; 'D'
00000000000089b4         db  0x0e ; '.'
00000000000089b5         db  0x20 ; ' '
00000000000089b6         db  0x83 ; '.'
00000000000089b7         db  0x04 ; '.'
00000000000089b8         db  0x69 ; 'i'
00000000000089b9         db  0x0a ; '.'
00000000000089ba         db  0x0e ; '.'
00000000000089bb         db  0x18 ; '.'
00000000000089bc         db  0x41 ; 'A'
00000000000089bd         db  0x0e ; '.'
00000000000089be         db  0x10 ; '.'
00000000000089bf         db  0x42 ; 'B'
00000000000089c0         db  0x0e ; '.'
00000000000089c1         db  0x08 ; '.'
00000000000089c2         db  0x45 ; 'E'
00000000000089c3         db  0x0b ; '.'
00000000000089c4         db  0x55 ; 'U'
00000000000089c5         db  0x0a ; '.'
00000000000089c6         db  0x0e ; '.'
00000000000089c7         db  0x18 ; '.'
00000000000089c8         db  0x41 ; 'A'
00000000000089c9         db  0x0e ; '.'
00000000000089ca         db  0x10 ; '.'
00000000000089cb         db  0x42 ; 'B'
00000000000089cc         db  0x0e ; '.'
00000000000089cd         db  0x08 ; '.'
00000000000089ce         db  0x48 ; 'H'
00000000000089cf         db  0x0b ; '.'
00000000000089d0         db  0x41 ; 'A'
00000000000089d1         db  0x0a ; '.'
00000000000089d2         db  0x0e ; '.'
00000000000089d3         db  0x18 ; '.'
00000000000089d4         db  0x46 ; 'F'
00000000000089d5         db  0x0e ; '.'
00000000000089d6         db  0x10 ; '.'
00000000000089d7         db  0x42 ; 'B'
00000000000089d8         db  0x0e ; '.'
00000000000089d9         db  0x08 ; '.'
00000000000089da         db  0x47 ; 'G'
00000000000089db         db  0x0b ; '.'
00000000000089dc         db  0x49 ; 'I'
00000000000089dd         db  0x0e ; '.'
00000000000089de         db  0x18 ; '.'
00000000000089df         db  0x41 ; 'A'
00000000000089e0         db  0x0e ; '.'
00000000000089e1         db  0x10 ; '.'
00000000000089e2         db  0x42 ; 'B'
00000000000089e3         db  0x0e ; '.'
00000000000089e4         db  0x08 ; '.'
00000000000089e5         db  0x00 ; '.'
00000000000089e6         db  0x00 ; '.'
00000000000089e7         db  0x00 ; '.'
00000000000089e8         dd         0x0000001c                                  ; Length of the record
00000000000089ec         dd         0x00000c8c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
00000000000089f0         db         0xa0, 0xdb, 2 dup (0xff)                    ; begin 0x6590
00000000000089f4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x65f0)
00000000000089f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089f9         db  0x44 ; 'D'
00000000000089fa         db  0x0e ; '.'
00000000000089fb         db  0x10 ; '.'
00000000000089fc         db  0x75 ; 'u'
00000000000089fd         db  0x0a ; '.'
00000000000089fe         db  0x0e ; '.'
00000000000089ff         db  0x08 ; '.'
0000000000008a00         db  0x47 ; 'G'
0000000000008a01         db  0x0b ; '.'
0000000000008a02         db  0x5f ; '_'
0000000000008a03         db  0x0e ; '.'
0000000000008a04         db  0x08 ; '.'
0000000000008a05         db  0x00 ; '.'
0000000000008a06         db  0x00 ; '.'
0000000000008a07         db  0x00 ; '.'
0000000000008a08         dd         0x0000001c                                  ; Length of the record
0000000000008a0c         dd         0x00000cac                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008a10         db         0xe0, 0xdb, 2 dup (0xff)                    ; begin 0x65f0
0000000000008a14         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x662c)
0000000000008a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a19         db  0x44 ; 'D'
0000000000008a1a         db  0x0e ; '.'
0000000000008a1b         db  0x10 ; '.'
0000000000008a1c         db  0x61 ; 'a'
0000000000008a1d         db  0x0a ; '.'
0000000000008a1e         db  0x0e ; '.'
0000000000008a1f         db  0x08 ; '.'
0000000000008a20         db  0x4b ; 'K'
0000000000008a21         db  0x0b ; '.'
0000000000008a22         db  0x4b ; 'K'
0000000000008a23         db  0x0e ; '.'
0000000000008a24         db  0x08 ; '.'
0000000000008a25         db  0x00 ; '.'
0000000000008a26         db  0x00 ; '.'
0000000000008a27         db  0x00 ; '.'
0000000000008a28         dd         0x00000034                                  ; Length of the record
0000000000008a2c         dd         0x00000ccc                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008a30         db         0x00, 0xdc, 2 dup (0xff)                    ; begin 0x6630
0000000000008a34         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x66ab)
0000000000008a38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a39         db  0x42 ; 'B'
0000000000008a3a         db  0x0e ; '.'
0000000000008a3b         db  0x10 ; '.'
0000000000008a3c         db  0x8c ; '.'
0000000000008a3d         db  0x02 ; '.'
0000000000008a3e         db  0x41 ; 'A'
0000000000008a3f         db  0x0e ; '.'
0000000000008a40         db  0x18 ; '.'
0000000000008a41         db  0x86 ; '.'
0000000000008a42         db  0x03 ; '.'
0000000000008a43         db  0x41 ; 'A'
0000000000008a44         db  0x0e ; '.'
0000000000008a45         db  0x20 ; ' '
0000000000008a46         db  0x83 ; '.'
0000000000008a47         db  0x04 ; '.'
0000000000008a48         db  0x7d ; '}'
0000000000008a49         db  0x0a ; '.'
0000000000008a4a         db  0x0e ; '.'
0000000000008a4b         db  0x18 ; '.'
0000000000008a4c         db  0x41 ; 'A'
0000000000008a4d         db  0x0e ; '.'
0000000000008a4e         db  0x10 ; '.'
0000000000008a4f         db  0x42 ; 'B'
0000000000008a50         db  0x0e ; '.'
0000000000008a51         db  0x08 ; '.'
0000000000008a52         db  0x44 ; 'D'
0000000000008a53         db  0x0b ; '.'
0000000000008a54         db  0x60 ; '`'
0000000000008a55         db  0x0a ; '.'
0000000000008a56         db  0x0e ; '.'
0000000000008a57         db  0x18 ; '.'
0000000000008a58         db  0x41 ; 'A'
0000000000008a59         db  0x0e ; '.'
0000000000008a5a         db  0x10 ; '.'
0000000000008a5b         db  0x42 ; 'B'
0000000000008a5c         db  0x0e ; '.'
0000000000008a5d         db  0x08 ; '.'
0000000000008a5e         db  0x45 ; 'E'
0000000000008a5f         db  0x0b ; '.'
0000000000008a60         dd         0x0000001c                                  ; Length of the record
0000000000008a64         dd         0x00000d04                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008a68         db         0x48, 0xdc, 2 dup (0xff)                    ; begin 0x66b0
0000000000008a6c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x66f0)
0000000000008a70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a71         db  0x44 ; 'D'
0000000000008a72         db  0x0e ; '.'
0000000000008a73         db  0x10 ; '.'
0000000000008a74         db  0x83 ; '.'
0000000000008a75         db  0x02 ; '.'
0000000000008a76         db  0x5a ; 'Z'
0000000000008a77         db  0x0a ; '.'
0000000000008a78         db  0x0e ; '.'
0000000000008a79         db  0x08 ; '.'
0000000000008a7a         db  0x4a ; 'J'
0000000000008a7b         db  0x0b ; '.'
0000000000008a7c         db  0x53 ; 'S'
0000000000008a7d         db  0x0e ; '.'
0000000000008a7e         db  0x08 ; '.'
0000000000008a7f         db  0x00 ; '.'
0000000000008a80         dd         0x0000002c                                  ; Length of the record
0000000000008a84         dd         0x00000d24                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008a88         db         0x68, 0xdc, 2 dup (0xff)                    ; begin 0x66f0
0000000000008a8c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6747)
0000000000008a90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a91         db  0x63 ; 'c'
0000000000008a92         db  0x0e ; '.'
0000000000008a93         db  0x10 ; '.'
0000000000008a94         db  0x8c ; '.'
0000000000008a95         db  0x02 ; '.'
0000000000008a96         db  0x41 ; 'A'
0000000000008a97         db  0x0e ; '.'
0000000000008a98         db  0x18 ; '.'
0000000000008a99         db  0x86 ; '.'
0000000000008a9a         db  0x03 ; '.'
0000000000008a9b         db  0x44 ; 'D'
0000000000008a9c         db  0x0e ; '.'
0000000000008a9d         db  0x20 ; ' '
0000000000008a9e         db  0x83 ; '.'
0000000000008a9f         db  0x04 ; '.'
0000000000008aa0         db  0x6b ; 'k'
0000000000008aa1         db  0x0e ; '.'
0000000000008aa2         db  0x18 ; '.'
0000000000008aa3         db  0x41 ; 'A'
0000000000008aa4         db  0x0e ; '.'
0000000000008aa5         db  0x10 ; '.'
0000000000008aa6         db  0x42 ; 'B'
0000000000008aa7         db  0x0e ; '.'
0000000000008aa8         db  0x08 ; '.'
0000000000008aa9         db  0x00 ; '.'
0000000000008aaa         db  0x00 ; '.'
0000000000008aab         db  0x00 ; '.'
0000000000008aac         db  0x00 ; '.'
0000000000008aad         db  0x00 ; '.'
0000000000008aae         db  0x00 ; '.'
0000000000008aaf         db  0x00 ; '.'
0000000000008ab0         dd         0x00000044                                  ; Length of the record
0000000000008ab4         dd         0x00000d54                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008ab8         db         0x98, 0xdc, 2 dup (0xff)                    ; begin 0x6750
0000000000008abc         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x67b5)
0000000000008ac0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ac1         db  0x42 ; 'B'
0000000000008ac2         db  0x0e ; '.'
0000000000008ac3         db  0x10 ; '.'
0000000000008ac4         db  0x8f ; '.'
0000000000008ac5         db  0x02 ; '.'
0000000000008ac6         db  0x42 ; 'B'
0000000000008ac7         db  0x0e ; '.'
0000000000008ac8         db  0x18 ; '.'
0000000000008ac9         db  0x8e ; '.'
0000000000008aca         db  0x03 ; '.'
0000000000008acb         db  0x45 ; 'E'
0000000000008acc         db  0x0e ; '.'
0000000000008acd         db  0x20 ; ' '
0000000000008ace         db  0x8d ; '.'
0000000000008acf         db  0x04 ; '.'
0000000000008ad0         db  0x42 ; 'B'
0000000000008ad1         db  0x0e ; '.'
0000000000008ad2         db  0x28 ; '('
0000000000008ad3         db  0x8c ; '.'
0000000000008ad4         db  0x05 ; '.'
0000000000008ad5         db  0x48 ; 'H'
0000000000008ad6         db  0x0e ; '.'
0000000000008ad7         db  0x30 ; '0'
0000000000008ad8         db  0x86 ; '.'
0000000000008ad9         db  0x06 ; '.'
0000000000008ada         db  0x48 ; 'H'
0000000000008adb         db  0x0e ; '.'
0000000000008adc         db  0x38 ; '8'
0000000000008add         db  0x83 ; '.'
0000000000008ade         db  0x07 ; '.'
0000000000008adf         db  0x4d ; 'M'
0000000000008ae0         db  0x0e ; '.'
0000000000008ae1         db  0x40 ; '@'
0000000000008ae2         db  0x72 ; 'r'
0000000000008ae3         db  0x0e ; '.'
0000000000008ae4         db  0x38 ; '8'
0000000000008ae5         db  0x41 ; 'A'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x30 ; '0'
0000000000008ae8         db  0x41 ; 'A'
0000000000008ae9         db  0x0e ; '.'
0000000000008aea         db  0x28 ; '('
0000000000008aeb         db  0x42 ; 'B'
0000000000008aec         db  0x0e ; '.'
0000000000008aed         db  0x20 ; ' '
0000000000008aee         db  0x42 ; 'B'
0000000000008aef         db  0x0e ; '.'
0000000000008af0         db  0x18 ; '.'
0000000000008af1         db  0x42 ; 'B'
0000000000008af2         db  0x0e ; '.'
0000000000008af3         db  0x10 ; '.'
0000000000008af4         db  0x42 ; 'B'
0000000000008af5         db  0x0e ; '.'
0000000000008af6         db  0x08 ; '.'
0000000000008af7         db  0x00 ; '.'
0000000000008af8         dd         0x00000014                                  ; Length of the record
0000000000008afc         dd         0x00000d9c                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008b00         db         0xc0, 0xdc, 2 dup (0xff)                    ; begin 0x67c0
0000000000008b04         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x67c2)
0000000000008b08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b09         align      16
0000000000008b10         dd         0x00000010                                  ; Length of the record
0000000000008b14         dd         0x00000db4                                  ; FDE: parent CIE at 0x7d60 (FDE encoding = 0x1B)
0000000000008b18         db         0xb8, 0xdc, 2 dup (0xff)                    ; begin 0x67d0
0000000000008b1c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x67de)
0000000000008b20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b21         align      8


        ; Segment Segment 3
        ; Range: [0x209a70; 0x20a258[ (2024 bytes)
        ; File offset : [39536; 41120[ (1584 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a70; 0x209a78[ (8 bytes)
        ; File offset : [39536; 39544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a70         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a78; 0x209a80[ (8 bytes)
        ; File offset : [39544; 39552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a78         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a80; 0x209c38[ (440 bytes)
        ; File offset : [39552; 39992[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     default_file_list.7140:
0000000000209a80         db  0xea ; '.'                                         ; DATA XREF=main+2035
0000000000209a81         db  0x70 ; 'p'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x00 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x00 ; '.'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
                     long_options:
0000000000209aa0         db  0x2e ; '.'                                         ; DATA XREF=main+184
0000000000209aa1         db  0x68 ; 'h'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x01 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x63 ; 'c'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0x16 ; '.'
0000000000209ac1         db  0x68 ; 'h'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x01 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x6e ; 'n'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x1c ; '.'
0000000000209ae1         db  0x6a ; 'j'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x80 ; '.'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x30 ; '0'
0000000000209b01         db  0x6a ; 'j'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x71 ; 'q'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x36 ; '6'
0000000000209b21         db  0x6a ; 'j'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x71 ; 'q'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x3d ; '='
0000000000209b41         db  0x6a ; 'j'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x76 ; 'v'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0x45 ; 'E'
0000000000209b61         db  0x6a ; 'j'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x7a ; 'z'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x55 ; 'U'
0000000000209b81         db  0x6a ; 'j'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x7e ; '~'
0000000000209b99         db  0xff ; '.'
0000000000209b9a         db  0xff ; '.'
0000000000209b9b         db  0xff ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0x5a ; 'Z'
0000000000209ba1         db  0x6a ; 'j'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x00 ; '.'
0000000000209ba9         db  0x00 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x7d ; '}'
0000000000209bb9         db  0xff ; '.'
0000000000209bba         db  0xff ; '.'
0000000000209bbb         db  0xff ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x00 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x00 ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x00 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209be0         db  0x01 ; '.'
0000000000209be1         db  0x71 ; 'q'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x09 ; '.'
0000000000209be9         db  0x71 ; 'q'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0x0f ; '.'
0000000000209bf1         db  0x71 ; 'q'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x1c ; '.'
0000000000209bf9         db  0x71 ; 'q'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x29 ; ')'
0000000000209c01         db  0x71 ; 'q'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x89 ; '.'
0000000000209c09         db  0x69 ; 'i'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x3d ; '='
0000000000209c11         db  0x71 ; 'q'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x22 ; '"'
0000000000209c19         db  0x71 ; 'q'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x66 ; 'f'
0000000000209c21         db  0x69 ; 'i'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x45 ; 'E'
0000000000209c29         db  0x71 ; 'q'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x00 ; '.'
0000000000209c31         db  0x00 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c38; 0x209e28[ (496 bytes)
        ; File offset : [39992; 40488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c38         db  0x01 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x01 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x0c ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0xd8 ; '.'
0000000000209c51         db  0x14 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0d ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0xe0 ; '.'
0000000000209c61         db  0x67 ; 'g'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x19 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x70 ; 'p'
0000000000209c71         db  0x9a ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1b ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x1a ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x78 ; 'x'
0000000000209c91         db  0x9a ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x1c ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x08 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0xf5 ; '.'
0000000000209ca9         db  0xfe ; '.'
0000000000209caa         db  0xff ; '.'
0000000000209cab         db  0x6f ; 'o'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x98 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x05 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xe0 ; '.'
0000000000209cc1         db  0x08 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x06 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0xe0 ; '.'
0000000000209cd1         db  0x02 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x0a ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xeb ; '.'
0000000000209ce1         db  0x02 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x0b ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x15 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x00 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x03 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x28 ; '('
0000000000209d11         db  0x9e ; '.'
0000000000209d12         db  0x20 ; ' '
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x02 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0xb0 ; '.'
0000000000209d21         db  0x04 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x14 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x07 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x17 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x28 ; '('
0000000000209d41         db  0x10 ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x07 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0xb0 ; '.'
0000000000209d51         db  0x0c ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x08 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x78 ; 'x'
0000000000209d61         db  0x03 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x09 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x18 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x1e ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x08 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xfb ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x08 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xfe ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x50 ; 'P'
0000000000209da1         db  0x0c ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xff ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x01 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0xf0 ; '.'
0000000000209db9         db  0xff ; '.'
0000000000209dba         db  0xff ; '.'
0000000000209dbb         db  0x6f ; 'o'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0xcc ; '.'
0000000000209dc1         db  0x0b ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0xf9 ; '.'
0000000000209dc9         db  0xff ; '.'
0000000000209dca         db  0xff ; '.'
0000000000209dcb         db  0x6f ; 'o'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x1a ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'
0000000000209e08         db  0x00 ; '.'
0000000000209e09         db  0x00 ; '.'
0000000000209e0a         db  0x00 ; '.'
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
0000000000209e10         db  0x00 ; '.'
0000000000209e11         db  0x00 ; '.'
0000000000209e12         db  0x00 ; '.'
0000000000209e13         db  0x00 ; '.'
0000000000209e14         db  0x00 ; '.'
0000000000209e15         db  0x00 ; '.'
0000000000209e16         db  0x00 ; '.'
0000000000209e17         db  0x00 ; '.'
0000000000209e18         db  0x00 ; '.'
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
0000000000209e20         db  0x00 ; '.'
0000000000209e21         db  0x00 ; '.'
0000000000209e22         db  0x00 ; '.'
0000000000209e23         db  0x00 ; '.'
0000000000209e24         db  0x00 ; '.'
0000000000209e25         db  0x00 ; '.'
0000000000209e26         db  0x00 ; '.'
0000000000209e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e28; 0x209ff8[ (464 bytes)
        ; File offset : [40488; 40952[ (464 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e28         db  0x38 ; '8'
0000000000209e29         db  0x9c ; '.'
0000000000209e2a         db  0x20 ; ' '
0000000000209e2b         db  0x00 ; '.'
0000000000209e2c         db  0x00 ; '.'
0000000000209e2d         db  0x00 ; '.'
0000000000209e2e         db  0x00 ; '.'
0000000000209e2f         db  0x00 ; '.'
                     qword_209e30:
0000000000209e30         dq         0x0000000000000000                          ; DATA XREF=0x14f0
0000000000209e38         db  0x00 ; '.'                                         ; DATA XREF=0x14f6
0000000000209e39         db  0x00 ; '.'
0000000000209e3a         db  0x00 ; '.'
0000000000209e3b         db  0x00 ; '.'
0000000000209e3c         db  0x00 ; '.'
0000000000209e3d         db  0x00 ; '.'
0000000000209e3e         db  0x00 ; '.'
0000000000209e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000209e40         dq         0x000000000020a260                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e48         dq         0x000000000020a268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e50         dq         0x000000000020a270                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e58         dq         0x000000000020a278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e60         dq         0x000000000020a288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e68         dq         0x000000000020a290                          ; DATA XREF=j___fpending
                     clearerr_unlocked@GOT:        // clearerr_unlocked
0000000000209e70         dq         0x000000000020a298                          ; DATA XREF=j_clearerr_unlocked
                     textdomain@GOT:        // textdomain
0000000000209e78         dq         0x000000000020a2a0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e80         dq         0x000000000020a2a8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e88         dq         0x000000000020a2b0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e90         dq         0x000000000020a2b8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e98         dq         0x000000000020a2c0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209ea0         dq         0x000000000020a2c8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209ea8         dq         0x000000000020a2d0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209eb0         dq         0x000000000020a2d8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209eb8         dq         0x000000000020a2e0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000209ec0         dq         0x000000000020a2e8                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
0000000000209ec8         dq         0x000000000020a2f0                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ed0         dq         0x000000000020a2f8                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000209ed8         dq         0x000000000020a300                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000209ee0         dq         0x000000000020a308                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000209ee8         dq         0x000000000020a310                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000209ef0         dq         0x000000000020a318                          ; DATA XREF=j_close
                     memchr@GOT:        // memchr
0000000000209ef8         dq         0x000000000020a320                          ; DATA XREF=j_memchr
                     read@GOT:        // read
0000000000209f00         dq         0x000000000020a328                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
0000000000209f08         dq         0x000000000020a338                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209f10         dq         0x000000000020a340                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209f18         dq         0x000000000020a348                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000209f20         dq         0x000000000020a358                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f28         dq         0x000000000020a360                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000209f30         dq         0x000000000020a368                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f38         dq         0x000000000020a370                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f40         dq         0x000000000020a378                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
0000000000209f48         dq         0x000000000020a380                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
0000000000209f50         dq         0x000000000020a388                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000209f58         dq         0x000000000020a390                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000209f60         dq         0x000000000020a398                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f68         dq         0x000000000020a3a0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f70         dq         0x000000000020a3a8                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000209f78         dq         0x000000000020a3b0                          ; DATA XREF=j_error
                     memrchr@GOT:        // memrchr
0000000000209f80         dq         0x000000000020a3b8                          ; DATA XREF=j_memrchr
                     open@GOT:        // open
0000000000209f88         dq         0x000000000020a3c0                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000209f90         dq         0x000000000020a3c8                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f98         dq         0x000000000020a3d0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209fa0         dq         0x000000000020a3d8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209fa8         dq         0x000000000020a3e0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fb0         dq         0x000000000020a3e8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fb8         dq         0x000000000020a3f8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fc0         dq         0x000000000020a400                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fc8         dq         0x000000000020a410                          ; DATA XREF=j___ctype_b_loc
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fd9         db  0x00 ; '.'
0000000000209fda         db  0x00 ; '.'
0000000000209fdb         db  0x00 ; '.'
0000000000209fdc         db  0x00 ; '.'
0000000000209fdd         db  0x00 ; '.'
0000000000209fde         db  0x00 ; '.'
0000000000209fdf         db  0x00 ; '.'
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209ff0:
0000000000209ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209ff0, __do_global_dtors_aux+9
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a0a0[ (160 bytes)
        ; File offset : [40960; 41120[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     first_file.6927:
000000000020a010         db         0x01                                        ; DATA XREF=main+957, main+1004
000000000020a011         db  0x00 ; '.'
000000000020a012         db  0x00 ; '.'
000000000020a013         db  0x00 ; '.'
000000000020a014         db  0x00 ; '.'
000000000020a015         db  0x00 ; '.'
000000000020a016         db  0x00 ; '.'
000000000020a017         db  0x00 ; '.'
                     Version:
000000000020a018         dq         0x0000000000007090                          ; "8.31", DATA XREF=main+347
                     exit_failure:
000000000020a020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
000000000020a058         db  0x00 ; '.'
000000000020a059         db  0x00 ; '.'
000000000020a05a         db  0x00 ; '.'
000000000020a05b         db  0x00 ; '.'
000000000020a05c         db  0x00 ; '.'
000000000020a05d         db  0x00 ; '.'
000000000020a05e         db  0x00 ; '.'
000000000020a05f         db  0x00 ; '.'
000000000020a060         db  0x00 ; '.'
000000000020a061         db  0x00 ; '.'
000000000020a062         db  0x00 ; '.'
000000000020a063         db  0x00 ; '.'
000000000020a064         db  0x00 ; '.'
000000000020a065         db  0x00 ; '.'
000000000020a066         db  0x00 ; '.'
000000000020a067         db  0x00 ; '.'
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
000000000020a070         db  0x00 ; '.'
000000000020a071         db  0x00 ; '.'
000000000020a072         db  0x00 ; '.'
000000000020a073         db  0x00 ; '.'
000000000020a074         db  0x00 ; '.'
000000000020a075         db  0x00 ; '.'
000000000020a076         db  0x00 ; '.'
000000000020a077         db  0x00 ; '.'
                     nslots:
000000000020a078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a07c         db  0x00 ; '.'
000000000020a07d         db  0x00 ; '.'
000000000020a07e         db  0x00 ; '.'
000000000020a07f         db  0x00 ; '.'
                     slotvec:
000000000020a080         dq         0x000000000020a090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a088         db  0x00 ; '.'
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     slotvec0:
000000000020a090         dq         1.26481e-321, 1.05651e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a0a0; 0x20a258[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+340, xwrite_stdout.part.6+17, xwrite_stdout.part.6+41, usage+164, usage+201, usage+277, usage+314, usage+351, usage+388, usage+425, usage+1016
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=main+710, main+754
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+400, main+426, main+464, main+490
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x00 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     completed.7697:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
                     have_read_stdin:
000000000020a0e9         db  0x00 ; '.'                                         ; DATA XREF=main+112, main+925, main+1819
                     line_end:
000000000020a0ea         db  0x00 ; '.'                                         ; DATA XREF=main+126, main+528, main+2261, main+2746, main+2959, main+4242, main+4380, head_lines+105, elide_tail_lines_seekable+175, elide_tail_lines_seekable+208
                     print_headers:
000000000020a0eb         db  0x00 ; '.'                                         ; DATA XREF=main+119, main+718, main+948
                     presume_input_pipe:
000000000020a0ec         db  0x00 ; '.'                                         ; DATA XREF=main+266, main+1438, main+3040
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a0f0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
                     file_name:
000000000020a0f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     program_name:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x00 ; '.'
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x00 ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
                     slot0:
000000000020a120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'
000000000020a240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
000000000020a248         db  0x00 ; '.'
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
                     qword_20a250:
000000000020a250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a260; 0x20a5d0[ (880 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a260; 0x414830[ (2139600 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020a260         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a280         extern function code
                     _exit:
000000000020a288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a290         extern function code                                   ; DATA XREF=__fpending@GOT
                     clearerr_unlocked:
000000000020a298         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     textdomain:
000000000020a2a0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2a8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a2b0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2b8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2c0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a2c8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020a2d0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a2d8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a2e0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020a2e8         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
000000000020a2f0         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a2f8         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020a300         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
000000000020a308         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
000000000020a310         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020a318         extern function code                                   ; DATA XREF=close@GOT
                     memchr:
000000000020a320         extern function code                                   ; DATA XREF=memchr@GOT
                     read:
000000000020a328         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
000000000020a330         extern function code
                     memcmp:
000000000020a338         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a340         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a348         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
000000000020a350         extern function code
                     memcpy:
000000000020a358         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a360         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020a368         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a370         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a378         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020a380         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020a388         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020a390         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020a398         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a3a0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3a8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
000000000020a3b0         extern function code                                   ; DATA XREF=error@GOT
                     memrchr:
000000000020a3b8         extern function code                                   ; DATA XREF=memrchr@GOT
                     open:
000000000020a3c0         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020a3c8         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
000000000020a3d0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a3d8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a3e0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a3e8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a3f0         extern function code
                     mbsinit:
000000000020a3f8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a400         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a408         extern function code
                     __ctype_b_loc:
000000000020a410         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020a418         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a420         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a428         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a430         extern function code
                     _ITM_deregisterTMCloneTable_20a438:        // _ITM_deregisterTMCloneTable
000000000020a438         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a440         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a448         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
000000000020a450         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a458         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a460         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a468         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a470         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a478         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a480         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a488         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a490         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a498         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     close@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     read@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a500         extern function code
                     __gmon_start___20a508:        // __gmon_start__
000000000020a508         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a510         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a518         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a520         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a528         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a530         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020a538         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a540         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020a548         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a550         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a558         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a560         extern function code
                     error@@GLIBC_2.2.5:
000000000020a568         extern function code
                     memrchr@@GLIBC_2.2.5:
000000000020a570         extern function code
                     open@@GLIBC_2.2.5:
000000000020a578         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a580         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a588         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a590         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a598         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a5a0         extern function code
                     _ITM_registerTMCloneTable_20a5a8:        // _ITM_registerTMCloneTable
000000000020a5a8         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a5b8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a5c0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a5c8         extern function code
