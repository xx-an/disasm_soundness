
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/readlink
        UUID: C1E73EEE-FEE4-1033-099B-17C6B9D075F1
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8f18[ (36632 bytes)
        ; File offset : [0; 36632[ (36632 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x60 ; '`'
0000000000000019         db  0x1a ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x88 ; '.'
0000000000000029         db  0x26 ; '&'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x18 ; '.'
00000000000000d1         db  0x8f ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x18 ; '.'
00000000000000d9         db  0x8f ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x70 ; 'p'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x70 ; 'p'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x70 ; 'p'                                         ; DATA XREF=quotearg_free+87, same_nameat.part.0+51, same_nameat.part.0+108, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x10 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xa8 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'                                         ; DATA XREF=same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x30 ; '0'
0000000000000199         db  0x79 ; 'y'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x30 ; '0'
00000000000001a1         db  0x79 ; 'y'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x30 ; '0'
00000000000001a9         db  0x79 ; 'y'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xac ; '.'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xac ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x70 ; 'p'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x70 ; 'p'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x70 ; 'p'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x90 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x90 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xc1 ; '.'
0000000000000285         db  0xe7 ; '.'
0000000000000286         db  0x3e ; '>'
0000000000000287         db  0xee ; '.'
0000000000000288         db  0xfe ; '.'
0000000000000289         db  0xe4 ; '.'
000000000000028a         db  0x10 ; '.'
000000000000028b         db  0x33 ; '3'
000000000000028c         db  0x09 ; '.'
000000000000028d         db  0x9b ; '.'
000000000000028e         db  0x17 ; '.'
000000000000028f         db  0xc6 ; '.'
0000000000000290         db  0xb9 ; '.'
0000000000000291         db  0xd0 ; '.'
0000000000000292         db  0x75 ; 'u'
0000000000000293         db  0xf1 ; '.'
0000000000000294         db  0x31 ; '1'
0000000000000295         db  0x8b ; '.'
0000000000000296         db  0x8a ; '.'
0000000000000297         db  0x27 ; '''


        ; Section .gnu.hash
        ; Range: [0x298; 0x2d8[ (64 bytes)
        ; File offset : [664; 728[ (64 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3c ; '<'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x33 ; '3'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2d8; 0x890[ (1464 bytes)
        ; File offset : [728; 2192[ (1464 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002d8         db  0x00 ; '.'
00000000000002d9         db  0x00 ; '.'
00000000000002da         db  0x00 ; '.'
00000000000002db         db  0x00 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'
00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x1c ; '.'
00000000000002f1         db  0x02 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x12 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x83 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x12 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0xda ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x31 ; '1'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x80 ; '.'
0000000000000351         db  0x02 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x20 ; ' '
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x89 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x12 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x80 ; '.'
0000000000000381         db  0x01 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x12 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x56 ; 'V'
0000000000000399         db  0x01 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x12 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0xcc ; '.'
00000000000003b1         db  0x01 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x12 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x14 ; '.'
00000000000003c9         db  0x01 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0xc8 ; '.'
00000000000003e1         db  0x01 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x48 ; 'H'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0xae ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0xcc ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x69 ; 'i'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x58 ; 'X'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x5f ; '_'
0000000000000471         db  0x01 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x29 ; ')'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0xd7 ; '.'
00000000000004a1         db  0x01 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x02 ; '.'
00000000000004b9         db  0x02 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x40 ; '@'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x07 ; '.'
00000000000004e9         db  0x01 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0xd3 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x72 ; 'r'
0000000000000519         db  0x01 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x8f ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0xe9 ; '.'
0000000000000549         db  0x01 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0xeb ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x0d ; '.'
0000000000000579         db  0x02 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0xc5 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0xe2 ; '.'
00000000000005a9         db  0x01 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x12 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x9c ; '.'
00000000000005c1         db  0x02 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x20 ; ' '
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x0d ; '.'
00000000000005d9         db  0x01 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x6b ; 'k'
00000000000005f1         db  0x01 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0xb8 ; '.'
0000000000000609         db  0x01 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x12 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x1b ; '.'
0000000000000621         db  0x01 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x0b ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x12 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x2a ; '*'
0000000000000651         db  0x01 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x44 ; 'D'
0000000000000669         db  0x01 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x7b ; '{'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x1f ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x12 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x12 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0xc0 ; '.'
00000000000006c9         db  0x01 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x52 ; 'R'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0xfb ; '.'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x3c ; '<'
0000000000000711         db  0x02 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x8a ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x79 ; 'y'
0000000000000741         db  0x01 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0xf2 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0xab ; '.'
0000000000000771         db  0x02 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x20 ; ' '
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x22 ; '"'
0000000000000789         db  0x01 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x12 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x72 ; 'r'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0xa9 ; '.'
00000000000007b9         db  0x01 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x22 ; '"'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x36 ; '6'
00000000000007d1         db  0x01 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x12 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x01 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x11 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x19 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x88 ; '.'
00000000000007f1         db  0xa0 ; '.'
00000000000007f2         db  0x20 ; ' '
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x08 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x21 ; '!'
0000000000000801         db  0x02 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x11 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x19 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x80 ; '.'
0000000000000809         db  0xa0 ; '.'
000000000000080a         db  0x20 ; ' '
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x08 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x96 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x21 ; '!'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x19 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x98 ; '.'
0000000000000821         db  0xa0 ; '.'
0000000000000822         db  0x20 ; ' '
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x08 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x2c ; ','
0000000000000831         db  0x02 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x11 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x19 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x98 ; '.'
0000000000000839         db  0xa0 ; '.'
000000000000083a         db  0x20 ; ' '
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x08 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x8b ; '.'
0000000000000849         db  0x01 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x21 ; '!'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x19 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x80 ; '.'
0000000000000851         db  0xa0 ; '.'
0000000000000852         db  0x20 ; ' '
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x08 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x4f ; 'O'
0000000000000861         db  0x01 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x11 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x19 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xa0 ; '.'
0000000000000869         db  0xa0 ; '.'
000000000000086a         db  0x20 ; ' '
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x08 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x39 ; '9'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x11 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x19 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x90 ; '.'
0000000000000881         db  0xa0 ; '.'
0000000000000882         db  0x20 ; ' '
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x04 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x890; 0xb55[ (709 bytes)
        ; File offset : [2192; 2901[ (709 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x6c ; 'l'
0000000000000892         db  0x69 ; 'i'
0000000000000893         db  0x62 ; 'b'
0000000000000894         db  0x63 ; 'c'
0000000000000895         db  0x2e ; '.'
0000000000000896         db  0x73 ; 's'
0000000000000897         db  0x6f ; 'o'
0000000000000898         db  0x2e ; '.'
0000000000000899         db  0x36 ; '6'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x66 ; 'f'
000000000000089c         db  0x66 ; 'f'
000000000000089d         db  0x6c ; 'l'
000000000000089e         db  0x75 ; 'u'
000000000000089f         db  0x73 ; 's'
00000000000008a0         db  0x68 ; 'h'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x5f ; '_'
00000000000008a3         db  0x5f ; '_'
00000000000008a4         db  0x70 ; 'p'
00000000000008a5         db  0x72 ; 'r'
00000000000008a6         db  0x69 ; 'i'
00000000000008a7         db  0x6e ; 'n'
00000000000008a8         db  0x74 ; 't'
00000000000008a9         db  0x66 ; 'f'
00000000000008aa         db  0x5f ; '_'
00000000000008ab         db  0x63 ; 'c'
00000000000008ac         db  0x68 ; 'h'
00000000000008ad         db  0x6b ; 'k'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x73 ; 's'
00000000000008b0         db  0x65 ; 'e'
00000000000008b1         db  0x74 ; 't'
00000000000008b2         db  0x6c ; 'l'
00000000000008b3         db  0x6f ; 'o'
00000000000008b4         db  0x63 ; 'c'
00000000000008b5         db  0x61 ; 'a'
00000000000008b6         db  0x6c ; 'l'
00000000000008b7         db  0x65 ; 'e'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x6d ; 'm'
00000000000008ba         db  0x62 ; 'b'
00000000000008bb         db  0x72 ; 'r'
00000000000008bc         db  0x74 ; 't'
00000000000008bd         db  0x6f ; 'o'
00000000000008be         db  0x77 ; 'w'
00000000000008bf         db  0x63 ; 'c'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x73 ; 's'
00000000000008c2         db  0x74 ; 't'
00000000000008c3         db  0x72 ; 'r'
00000000000008c4         db  0x6e ; 'n'
00000000000008c5         db  0x63 ; 'c'
00000000000008c6         db  0x6d ; 'm'
00000000000008c7         db  0x70 ; 'p'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x6f ; 'o'
00000000000008ca         db  0x70 ; 'p'
00000000000008cb         db  0x74 ; 't'
00000000000008cc         db  0x69 ; 'i'
00000000000008cd         db  0x6e ; 'n'
00000000000008ce         db  0x64 ; 'd'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x73 ; 's'
00000000000008d1         db  0x74 ; 't'
00000000000008d2         db  0x72 ; 'r'
00000000000008d3         db  0x72 ; 'r'
00000000000008d4         db  0x63 ; 'c'
00000000000008d5         db  0x68 ; 'h'
00000000000008d6         db  0x72 ; 'r'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x64 ; 'd'
00000000000008d9         db  0x63 ; 'c'
00000000000008da         db  0x67 ; 'g'
00000000000008db         db  0x65 ; 'e'
00000000000008dc         db  0x74 ; 't'
00000000000008dd         db  0x74 ; 't'
00000000000008de         db  0x65 ; 'e'
00000000000008df         db  0x78 ; 'x'
00000000000008e0         db  0x74 ; 't'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x65 ; 'e'
00000000000008e3         db  0x72 ; 'r'
00000000000008e4         db  0x72 ; 'r'
00000000000008e5         db  0x6f ; 'o'
00000000000008e6         db  0x72 ; 'r'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x5f ; '_'
00000000000008e9         db  0x5f ; '_'
00000000000008ea         db  0x73 ; 's'
00000000000008eb         db  0x74 ; 't'
00000000000008ec         db  0x61 ; 'a'
00000000000008ed         db  0x63 ; 'c'
00000000000008ee         db  0x6b ; 'k'
00000000000008ef         db  0x5f ; '_'
00000000000008f0         db  0x63 ; 'c'
00000000000008f1         db  0x68 ; 'h'
00000000000008f2         db  0x6b ; 'k'
00000000000008f3         db  0x5f ; '_'
00000000000008f4         db  0x66 ; 'f'
00000000000008f5         db  0x61 ; 'a'
00000000000008f6         db  0x69 ; 'i'
00000000000008f7         db  0x6c ; 'l'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x5f ; '_'
00000000000008fa         db  0x5f ; '_'
00000000000008fb         db  0x6c ; 'l'
00000000000008fc         db  0x78 ; 'x'
00000000000008fd         db  0x73 ; 's'
00000000000008fe         db  0x74 ; 't'
00000000000008ff         db  0x61 ; 'a'
0000000000000900         db  0x74 ; 't'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x69 ; 'i'
0000000000000903         db  0x73 ; 's'
0000000000000904         db  0x77 ; 'w'
0000000000000905         db  0x70 ; 'p'
0000000000000906         db  0x72 ; 'r'
0000000000000907         db  0x69 ; 'i'
0000000000000908         db  0x6e ; 'n'
0000000000000909         db  0x74 ; 't'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x72 ; 'r'
000000000000090c         db  0x65 ; 'e'
000000000000090d         db  0x61 ; 'a'
000000000000090e         db  0x6c ; 'l'
000000000000090f         db  0x6c ; 'l'
0000000000000910         db  0x6f ; 'o'
0000000000000911         db  0x63 ; 'c'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x61 ; 'a'
0000000000000914         db  0x62 ; 'b'
0000000000000915         db  0x6f ; 'o'
0000000000000916         db  0x72 ; 'r'
0000000000000917         db  0x74 ; 't'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x5f ; '_'
000000000000091a         db  0x65 ; 'e'
000000000000091b         db  0x78 ; 'x'
000000000000091c         db  0x69 ; 'i'
000000000000091d         db  0x74 ; 't'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x73 ; 's'
0000000000000920         db  0x74 ; 't'
0000000000000921         db  0x72 ; 'r'
0000000000000922         db  0x73 ; 's'
0000000000000923         db  0x70 ; 'p'
0000000000000924         db  0x6e ; 'n'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x70 ; 'p'
0000000000000927         db  0x72 ; 'r'
0000000000000928         db  0x6f ; 'o'
0000000000000929         db  0x67 ; 'g'
000000000000092a         db  0x72 ; 'r'
000000000000092b         db  0x61 ; 'a'
000000000000092c         db  0x6d ; 'm'
000000000000092d         db  0x5f ; '_'
000000000000092e         db  0x69 ; 'i'
000000000000092f         db  0x6e ; 'n'
0000000000000930         db  0x76 ; 'v'
0000000000000931         db  0x6f ; 'o'
0000000000000932         db  0x63 ; 'c'
0000000000000933         db  0x61 ; 'a'
0000000000000934         db  0x74 ; 't'
0000000000000935         db  0x69 ; 'i'
0000000000000936         db  0x6f ; 'o'
0000000000000937         db  0x6e ; 'n'
0000000000000938         db  0x5f ; '_'
0000000000000939         db  0x6e ; 'n'
000000000000093a         db  0x61 ; 'a'
000000000000093b         db  0x6d ; 'm'
000000000000093c         db  0x65 ; 'e'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x5f ; '_'
000000000000093f         db  0x5f ; '_'
0000000000000940         db  0x63 ; 'c'
0000000000000941         db  0x74 ; 't'
0000000000000942         db  0x79 ; 'y'
0000000000000943         db  0x70 ; 'p'
0000000000000944         db  0x65 ; 'e'
0000000000000945         db  0x5f ; '_'
0000000000000946         db  0x67 ; 'g'
0000000000000947         db  0x65 ; 'e'
0000000000000948         db  0x74 ; 't'
0000000000000949         db  0x5f ; '_'
000000000000094a         db  0x6d ; 'm'
000000000000094b         db  0x62 ; 'b'
000000000000094c         db  0x5f ; '_'
000000000000094d         db  0x63 ; 'c'
000000000000094e         db  0x75 ; 'u'
000000000000094f         db  0x72 ; 'r'
0000000000000950         db  0x5f ; '_'
0000000000000951         db  0x6d ; 'm'
0000000000000952         db  0x61 ; 'a'
0000000000000953         db  0x78 ; 'x'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x63 ; 'c'
0000000000000956         db  0x61 ; 'a'
0000000000000957         db  0x6c ; 'l'
0000000000000958         db  0x6c ; 'l'
0000000000000959         db  0x6f ; 'o'
000000000000095a         db  0x63 ; 'c'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x73 ; 's'
000000000000095d         db  0x74 ; 't'
000000000000095e         db  0x72 ; 'r'
000000000000095f         db  0x6c ; 'l'
0000000000000960         db  0x65 ; 'e'
0000000000000961         db  0x6e ; 'n'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x6d ; 'm'
0000000000000964         db  0x65 ; 'e'
0000000000000965         db  0x6d ; 'm'
0000000000000966         db  0x73 ; 's'
0000000000000967         db  0x65 ; 'e'
0000000000000968         db  0x74 ; 't'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x5f ; '_'
000000000000096b         db  0x5f ; '_'
000000000000096c         db  0x65 ; 'e'
000000000000096d         db  0x72 ; 'r'
000000000000096e         db  0x72 ; 'r'
000000000000096f         db  0x6e ; 'n'
0000000000000970         db  0x6f ; 'o'
0000000000000971         db  0x5f ; '_'
0000000000000972         db  0x6c ; 'l'
0000000000000973         db  0x6f ; 'o'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x61 ; 'a'
0000000000000976         db  0x74 ; 't'
0000000000000977         db  0x69 ; 'i'
0000000000000978         db  0x6f ; 'o'
0000000000000979         db  0x6e ; 'n'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x6d ; 'm'
000000000000097c         db  0x65 ; 'e'
000000000000097d         db  0x6d ; 'm'
000000000000097e         db  0x63 ; 'c'
000000000000097f         db  0x6d ; 'm'
0000000000000980         db  0x70 ; 'p'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x5f ; '_'
0000000000000983         db  0x5f ; '_'
0000000000000984         db  0x66 ; 'f'
0000000000000985         db  0x70 ; 'p'
0000000000000986         db  0x72 ; 'r'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x6e ; 'n'
0000000000000989         db  0x74 ; 't'
000000000000098a         db  0x66 ; 'f'
000000000000098b         db  0x5f ; '_'
000000000000098c         db  0x63 ; 'c'
000000000000098d         db  0x68 ; 'h'
000000000000098e         db  0x6b ; 'k'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x73 ; 's'
0000000000000991         db  0x74 ; 't'
0000000000000992         db  0x64 ; 'd'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x75 ; 'u'
0000000000000995         db  0x74 ; 't'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x6c ; 'l'
0000000000000998         db  0x73 ; 's'
0000000000000999         db  0x65 ; 'e'
000000000000099a         db  0x65 ; 'e'
000000000000099b         db  0x6b ; 'k'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x6d ; 'm'
000000000000099e         db  0x65 ; 'e'
000000000000099f         db  0x6d ; 'm'
00000000000009a0         db  0x63 ; 'c'
00000000000009a1         db  0x70 ; 'p'
00000000000009a2         db  0x79 ; 'y'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x66 ; 'f'
00000000000009a5         db  0x63 ; 'c'
00000000000009a6         db  0x6c ; 'l'
00000000000009a7         db  0x6f ; 'o'
00000000000009a8         db  0x73 ; 's'
00000000000009a9         db  0x65 ; 'e'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x6d ; 'm'
00000000000009ac         db  0x61 ; 'a'
00000000000009ad         db  0x6c ; 'l'
00000000000009ae         db  0x6c ; 'l'
00000000000009af         db  0x6f ; 'o'
00000000000009b0         db  0x63 ; 'c'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x6d ; 'm'
00000000000009b3         db  0x62 ; 'b'
00000000000009b4         db  0x73 ; 's'
00000000000009b5         db  0x69 ; 'i'
00000000000009b6         db  0x6e ; 'n'
00000000000009b7         db  0x69 ; 'i'
00000000000009b8         db  0x74 ; 't'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x6e ; 'n'
00000000000009bb         db  0x6c ; 'l'
00000000000009bc         db  0x5f ; '_'
00000000000009bd         db  0x6c ; 'l'
00000000000009be         db  0x61 ; 'a'
00000000000009bf         db  0x6e ; 'n'
00000000000009c0         db  0x67 ; 'g'
00000000000009c1         db  0x69 ; 'i'
00000000000009c2         db  0x6e ; 'n'
00000000000009c3         db  0x66 ; 'f'
00000000000009c4         db  0x6f ; 'o'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x5f ; '_'
00000000000009c7         db  0x5f ; '_'
00000000000009c8         db  0x63 ; 'c'
00000000000009c9         db  0x74 ; 't'
00000000000009ca         db  0x79 ; 'y'
00000000000009cb         db  0x70 ; 'p'
00000000000009cc         db  0x65 ; 'e'
00000000000009cd         db  0x5f ; '_'
00000000000009ce         db  0x62 ; 'b'
00000000000009cf         db  0x5f ; '_'
00000000000009d0         db  0x6c ; 'l'
00000000000009d1         db  0x6f ; 'o'
00000000000009d2         db  0x63 ; 'c'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x5f ; '_'
00000000000009d5         db  0x5f ; '_'
00000000000009d6         db  0x66 ; 'f'
00000000000009d7         db  0x72 ; 'r'
00000000000009d8         db  0x65 ; 'e'
00000000000009d9         db  0x61 ; 'a'
00000000000009da         db  0x64 ; 'd'
00000000000009db         db  0x69 ; 'i'
00000000000009dc         db  0x6e ; 'n'
00000000000009dd         db  0x67 ; 'g'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x73 ; 's'
00000000000009e0         db  0x74 ; 't'
00000000000009e1         db  0x64 ; 'd'
00000000000009e2         db  0x65 ; 'e'
00000000000009e3         db  0x72 ; 'r'
00000000000009e4         db  0x72 ; 'r'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x72 ; 'r'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x61 ; 'a'
00000000000009e9         db  0x64 ; 'd'
00000000000009ea         db  0x6c ; 'l'
00000000000009eb         db  0x69 ; 'i'
00000000000009ec         db  0x6e ; 'n'
00000000000009ed         db  0x6b ; 'k'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x67 ; 'g'
00000000000009f0         db  0x65 ; 'e'
00000000000009f1         db  0x74 ; 't'
00000000000009f2         db  0x6f ; 'o'
00000000000009f3         db  0x70 ; 'p'
00000000000009f4         db  0x74 ; 't'
00000000000009f5         db  0x5f ; '_'
00000000000009f6         db  0x6c ; 'l'
00000000000009f7         db  0x6f ; 'o'
00000000000009f8         db  0x6e ; 'n'
00000000000009f9         db  0x67 ; 'g'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x66 ; 'f'
00000000000009fc         db  0x69 ; 'i'
00000000000009fd         db  0x6c ; 'l'
00000000000009fe         db  0x65 ; 'e'
00000000000009ff         db  0x6e ; 'n'
0000000000000a00         db  0x6f ; 'o'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x67 ; 'g'
0000000000000a03         db  0x65 ; 'e'
0000000000000a04         db  0x74 ; 't'
0000000000000a05         db  0x63 ; 'c'
0000000000000a06         db  0x77 ; 'w'
0000000000000a07         db  0x64 ; 'd'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x66 ; 'f'
0000000000000a0a         db  0x77 ; 'w'
0000000000000a0b         db  0x72 ; 'r'
0000000000000a0c         db  0x69 ; 'i'
0000000000000a0d         db  0x74 ; 't'
0000000000000a0e         db  0x65 ; 'e'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x5f ; '_'
0000000000000a11         db  0x5f ; '_'
0000000000000a12         db  0x66 ; 'f'
0000000000000a13         db  0x70 ; 'p'
0000000000000a14         db  0x65 ; 'e'
0000000000000a15         db  0x6e ; 'n'
0000000000000a16         db  0x64 ; 'd'
0000000000000a17         db  0x69 ; 'i'
0000000000000a18         db  0x6e ; 'n'
0000000000000a19         db  0x67 ; 'g'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x70 ; 'p'
0000000000000a1c         db  0x72 ; 'r'
0000000000000a1d         db  0x6f ; 'o'
0000000000000a1e         db  0x67 ; 'g'
0000000000000a1f         db  0x72 ; 'r'
0000000000000a20         db  0x61 ; 'a'
0000000000000a21         db  0x6d ; 'm'
0000000000000a22         db  0x5f ; '_'
0000000000000a23         db  0x69 ; 'i'
0000000000000a24         db  0x6e ; 'n'
0000000000000a25         db  0x76 ; 'v'
0000000000000a26         db  0x6f ; 'o'
0000000000000a27         db  0x63 ; 'c'
0000000000000a28         db  0x61 ; 'a'
0000000000000a29         db  0x74 ; 't'
0000000000000a2a         db  0x69 ; 'i'
0000000000000a2b         db  0x6f ; 'o'
0000000000000a2c         db  0x6e ; 'n'
0000000000000a2d         db  0x5f ; '_'
0000000000000a2e         db  0x73 ; 's'
0000000000000a2f         db  0x68 ; 'h'
0000000000000a30         db  0x6f ; 'o'
0000000000000a31         db  0x72 ; 'r'
0000000000000a32         db  0x74 ; 't'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x6e ; 'n'
0000000000000a35         db  0x61 ; 'a'
0000000000000a36         db  0x6d ; 'm'
0000000000000a37         db  0x65 ; 'e'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x5f ; '_'
0000000000000a3a         db  0x5f ; '_'
0000000000000a3b         db  0x63 ; 'c'
0000000000000a3c         db  0x78 ; 'x'
0000000000000a3d         db  0x61 ; 'a'
0000000000000a3e         db  0x5f ; '_'
0000000000000a3f         db  0x66 ; 'f'
0000000000000a40         db  0x69 ; 'i'
0000000000000a41         db  0x6e ; 'n'
0000000000000a42         db  0x61 ; 'a'
0000000000000a43         db  0x6c ; 'l'
0000000000000a44         db  0x69 ; 'i'
0000000000000a45         db  0x7a ; 'z'
0000000000000a46         db  0x65 ; 'e'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x5f ; '_'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x78 ; 'x'
0000000000000a4b         db  0x73 ; 's'
0000000000000a4c         db  0x74 ; 't'
0000000000000a4d         db  0x61 ; 'a'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x6d ; 'm'
0000000000000a51         db  0x65 ; 'e'
0000000000000a52         db  0x6d ; 'm'
0000000000000a53         db  0x6d ; 'm'
0000000000000a54         db  0x6f ; 'o'
0000000000000a55         db  0x76 ; 'v'
0000000000000a56         db  0x65 ; 'e'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x62 ; 'b'
0000000000000a59         db  0x69 ; 'i'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x64 ; 'd'
0000000000000a5c         db  0x74 ; 't'
0000000000000a5d         db  0x65 ; 'e'
0000000000000a5e         db  0x78 ; 'x'
0000000000000a5f         db  0x74 ; 't'
0000000000000a60         db  0x64 ; 'd'
0000000000000a61         db  0x6f ; 'o'
0000000000000a62         db  0x6d ; 'm'
0000000000000a63         db  0x61 ; 'a'
0000000000000a64         db  0x69 ; 'i'
0000000000000a65         db  0x6e ; 'n'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x5f ; '_'
0000000000000a68         db  0x5f ; '_'
0000000000000a69         db  0x66 ; 'f'
0000000000000a6a         db  0x78 ; 'x'
0000000000000a6b         db  0x73 ; 's'
0000000000000a6c         db  0x74 ; 't'
0000000000000a6d         db  0x61 ; 'a'
0000000000000a6e         db  0x74 ; 't'
0000000000000a6f         db  0x61 ; 'a'
0000000000000a70         db  0x74 ; 't'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x73 ; 's'
0000000000000a73         db  0x74 ; 't'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x63 ; 'c'
0000000000000a76         db  0x6d ; 'm'
0000000000000a77         db  0x70 ; 'p'
0000000000000a78         db  0x00 ; '.'
0000000000000a79         db  0x5f ; '_'
0000000000000a7a         db  0x5f ; '_'
0000000000000a7b         db  0x6c ; 'l'
0000000000000a7c         db  0x69 ; 'i'
0000000000000a7d         db  0x62 ; 'b'
0000000000000a7e         db  0x63 ; 'c'
0000000000000a7f         db  0x5f ; '_'
0000000000000a80         db  0x73 ; 's'
0000000000000a81         db  0x74 ; 't'
0000000000000a82         db  0x61 ; 'a'
0000000000000a83         db  0x72 ; 'r'
0000000000000a84         db  0x74 ; 't'
0000000000000a85         db  0x5f ; '_'
0000000000000a86         db  0x6d ; 'm'
0000000000000a87         db  0x61 ; 'a'
0000000000000a88         db  0x69 ; 'i'
0000000000000a89         db  0x6e ; 'n'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x66 ; 'f'
0000000000000a8c         db  0x73 ; 's'
0000000000000a8d         db  0x65 ; 'e'
0000000000000a8e         db  0x65 ; 'e'
0000000000000a8f         db  0x6b ; 'k'
0000000000000a90         db  0x6f ; 'o'
0000000000000a91         db  0x00 ; '.'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x5f ; '_'
0000000000000a94         db  0x6f ; 'o'
0000000000000a95         db  0x76 ; 'v'
0000000000000a96         db  0x65 ; 'e'
0000000000000a97         db  0x72 ; 'r'
0000000000000a98         db  0x66 ; 'f'
0000000000000a99         db  0x6c ; 'l'
0000000000000a9a         db  0x6f ; 'o'
0000000000000a9b         db  0x77 ; 'w'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x66 ; 'f'
0000000000000a9e         db  0x70 ; 'p'
0000000000000a9f         db  0x75 ; 'u'
0000000000000aa0         db  0x74 ; 't'
0000000000000aa1         db  0x73 ; 's'
0000000000000aa2         db  0x5f ; '_'
0000000000000aa3         db  0x75 ; 'u'
0000000000000aa4         db  0x6e ; 'n'
0000000000000aa5         db  0x6c ; 'l'
0000000000000aa6         db  0x6f ; 'o'
0000000000000aa7         db  0x63 ; 'c'
0000000000000aa8         db  0x6b ; 'k'
0000000000000aa9         db  0x65 ; 'e'
0000000000000aaa         db  0x64 ; 'd'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x66 ; 'f'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x65 ; 'e'
0000000000000aaf         db  0x65 ; 'e'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x5f ; '_'
0000000000000ab2         db  0x5f ; '_'
0000000000000ab3         db  0x70 ; 'p'
0000000000000ab4         db  0x72 ; 'r'
0000000000000ab5         db  0x6f ; 'o'
0000000000000ab6         db  0x67 ; 'g'
0000000000000ab7         db  0x6e ; 'n'
0000000000000ab8         db  0x61 ; 'a'
0000000000000ab9         db  0x6d ; 'm'
0000000000000aba         db  0x65 ; 'e'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x5f ; '_'
0000000000000abd         db  0x5f ; '_'
0000000000000abe         db  0x70 ; 'p'
0000000000000abf         db  0x72 ; 'r'
0000000000000ac0         db  0x6f ; 'o'
0000000000000ac1         db  0x67 ; 'g'
0000000000000ac2         db  0x6e ; 'n'
0000000000000ac3         db  0x61 ; 'a'
0000000000000ac4         db  0x6d ; 'm'
0000000000000ac5         db  0x65 ; 'e'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x66 ; 'f'
0000000000000ac8         db  0x75 ; 'u'
0000000000000ac9         db  0x6c ; 'l'
0000000000000aca         db  0x6c ; 'l'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x5f ; '_'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x63 ; 'c'
0000000000000acf         db  0x78 ; 'x'
0000000000000ad0         db  0x61 ; 'a'
0000000000000ad1         db  0x5f ; '_'
0000000000000ad2         db  0x61 ; 'a'
0000000000000ad3         db  0x74 ; 't'
0000000000000ad4         db  0x65 ; 'e'
0000000000000ad5         db  0x78 ; 'x'
0000000000000ad6         db  0x69 ; 'i'
0000000000000ad7         db  0x74 ; 't'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x47 ; 'G'
0000000000000ada         db  0x4c ; 'L'
0000000000000adb         db  0x49 ; 'I'
0000000000000adc         db  0x42 ; 'B'
0000000000000add         db  0x43 ; 'C'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x32 ; '2'
0000000000000ae0         db  0x2e ; '.'
0000000000000ae1         db  0x33 ; '3'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x47 ; 'G'
0000000000000ae4         db  0x4c ; 'L'
0000000000000ae5         db  0x49 ; 'I'
0000000000000ae6         db  0x42 ; 'B'
0000000000000ae7         db  0x43 ; 'C'
0000000000000ae8         db  0x5f ; '_'
0000000000000ae9         db  0x32 ; '2'
0000000000000aea         db  0x2e ; '.'
0000000000000aeb         db  0x33 ; '3'
0000000000000aec         db  0x2e ; '.'
0000000000000aed         db  0x34 ; '4'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x47 ; 'G'
0000000000000af0         db  0x4c ; 'L'
0000000000000af1         db  0x49 ; 'I'
0000000000000af2         db  0x42 ; 'B'
0000000000000af3         db  0x43 ; 'C'
0000000000000af4         db  0x5f ; '_'
0000000000000af5         db  0x32 ; '2'
0000000000000af6         db  0x2e ; '.'
0000000000000af7         db  0x31 ; '1'
0000000000000af8         db  0x34 ; '4'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x47 ; 'G'
0000000000000afb         db  0x4c ; 'L'
0000000000000afc         db  0x49 ; 'I'
0000000000000afd         db  0x42 ; 'B'
0000000000000afe         db  0x43 ; 'C'
0000000000000aff         db  0x5f ; '_'
0000000000000b00         db  0x32 ; '2'
0000000000000b01         db  0x2e ; '.'
0000000000000b02         db  0x34 ; '4'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x47 ; 'G'
0000000000000b05         db  0x4c ; 'L'
0000000000000b06         db  0x49 ; 'I'
0000000000000b07         db  0x42 ; 'B'
0000000000000b08         db  0x43 ; 'C'
0000000000000b09         db  0x5f ; '_'
0000000000000b0a         db  0x32 ; '2'
0000000000000b0b         db  0x2e ; '.'
0000000000000b0c         db  0x32 ; '2'
0000000000000b0d         db  0x2e ; '.'
0000000000000b0e         db  0x35 ; '5'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x49 ; 'I'
0000000000000b12         db  0x54 ; 'T'
0000000000000b13         db  0x4d ; 'M'
0000000000000b14         db  0x5f ; '_'
0000000000000b15         db  0x64 ; 'd'
0000000000000b16         db  0x65 ; 'e'
0000000000000b17         db  0x72 ; 'r'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x67 ; 'g'
0000000000000b1a         db  0x69 ; 'i'
0000000000000b1b         db  0x73 ; 's'
0000000000000b1c         db  0x74 ; 't'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x72 ; 'r'
0000000000000b1f         db  0x54 ; 'T'
0000000000000b20         db  0x4d ; 'M'
0000000000000b21         db  0x43 ; 'C'
0000000000000b22         db  0x6c ; 'l'
0000000000000b23         db  0x6f ; 'o'
0000000000000b24         db  0x6e ; 'n'
0000000000000b25         db  0x65 ; 'e'
0000000000000b26         db  0x54 ; 'T'
0000000000000b27         db  0x61 ; 'a'
0000000000000b28         db  0x62 ; 'b'
0000000000000b29         db  0x6c ; 'l'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x5f ; '_'
0000000000000b2e         db  0x67 ; 'g'
0000000000000b2f         db  0x6d ; 'm'
0000000000000b30         db  0x6f ; 'o'
0000000000000b31         db  0x6e ; 'n'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x73 ; 's'
0000000000000b34         db  0x74 ; 't'
0000000000000b35         db  0x61 ; 'a'
0000000000000b36         db  0x72 ; 'r'
0000000000000b37         db  0x74 ; 't'
0000000000000b38         db  0x5f ; '_'
0000000000000b39         db  0x5f ; '_'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x49 ; 'I'
0000000000000b3d         db  0x54 ; 'T'
0000000000000b3e         db  0x4d ; 'M'
0000000000000b3f         db  0x5f ; '_'
0000000000000b40         db  0x72 ; 'r'
                     aEgistertmclone:
0000000000000b41         db         "egisterTMCloneTable", 0
0000000000000b55         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb56; 0xbd0[ (122 bytes)
        ; File offset : [2902; 3024[ (122 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b56         db  0x00 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x02 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x02 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x02 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x02 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x02 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x02 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x03 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x02 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x03 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x04 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x05 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x05 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x06 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbd0; 0xc30[ (96 bytes)
        ; File offset : [3024; 3120[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bd0         db  0x01 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x05 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x01 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x10 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x13 ; '.'
0000000000000be1         db  0x69 ; 'i'
0000000000000be2         db  0x69 ; 'i'
0000000000000be3         db  0x0d ; '.'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x06 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x49 ; 'I'
0000000000000be9         db  0x02 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x10 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x74 ; 't'
0000000000000bf1         db  0x19 ; '.'
0000000000000bf2         db  0x69 ; 'i'
0000000000000bf3         db  0x09 ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x05 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x53 ; 'S'
0000000000000bf9         db  0x02 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x10 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x94 ; '.'
0000000000000c01         db  0x91 ; '.'
0000000000000c02         db  0x96 ; '.'
0000000000000c03         db  0x06 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x04 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x5f ; '_'
0000000000000c09         db  0x02 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x10 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x14 ; '.'
0000000000000c11         db  0x69 ; 'i'
0000000000000c12         db  0x69 ; 'i'
0000000000000c13         db  0x0d ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x03 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x6a ; 'j'
0000000000000c19         db  0x02 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x10 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x75 ; 'u'
0000000000000c21         db  0x1a ; '.'
0000000000000c22         db  0x69 ; 'i'
0000000000000c23         db  0x09 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x74 ; 't'
0000000000000c29         db  0x02 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc30; 0xf90[ (864 bytes)
        ; File offset : [3120; 3984[ (864 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c30         db  0x70 ; 'p'
0000000000000c31         db  0x9a ; '.'
0000000000000c32         db  0x20 ; ' '
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x08 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x60 ; '`'
0000000000000c41         db  0x1b ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x78 ; 'x'
0000000000000c49         db  0x9a ; '.'
0000000000000c4a         db  0x20 ; ' '
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x08 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x20 ; ' '
0000000000000c59         db  0x1b ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x80 ; '.'
0000000000000c61         db  0x9a ; '.'
0000000000000c62         db  0x20 ; ' '
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x08 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0xd1 ; '.'
0000000000000c71         db  0x69 ; 'i'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0xa0 ; '.'
0000000000000c79         db  0x9a ; '.'
0000000000000c7a         db  0x20 ; ' '
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x08 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0xde ; '.'
0000000000000c89         db  0x69 ; 'i'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0xc0 ; '.'
0000000000000c91         db  0x9a ; '.'
0000000000000c92         db  0x20 ; ' '
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x08 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xf4 ; '.'
0000000000000ca1         db  0x69 ; 'i'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xe0 ; '.'
0000000000000ca9         db  0x9a ; '.'
0000000000000caa         db  0x20 ; ' '
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x08 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x09 ; '.'
0000000000000cb9         db  0x6a ; 'j'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x9b ; '.'
0000000000000cc2         db  0x20 ; ' '
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x08 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x14 ; '.'
0000000000000cd1         db  0x6a ; 'j'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x20 ; ' '
0000000000000cd9         db  0x9b ; '.'
0000000000000cda         db  0x20 ; ' '
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x08 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x1a ; '.'
0000000000000ce9         db  0x6a ; 'j'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x40 ; '@'
0000000000000cf1         db  0x9b ; '.'
0000000000000cf2         db  0x20 ; ' '
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x08 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x21 ; '!'
0000000000000d01         db  0x6a ; 'j'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x60 ; '`'
0000000000000d09         db  0x9b ; '.'
0000000000000d0a         db  0x20 ; ' '
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x08 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x29 ; ')'
0000000000000d19         db  0x6a ; 'j'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x80 ; '.'
0000000000000d21         db  0x9b ; '.'
0000000000000d22         db  0x20 ; ' '
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x08 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x2e ; '.'
0000000000000d31         db  0x6a ; 'j'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xa0 ; '.'
0000000000000d39         db  0x9b ; '.'
0000000000000d3a         db  0x20 ; ' '
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x08 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x33 ; '3'
0000000000000d49         db  0x6a ; 'j'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xe0 ; '.'
0000000000000d51         db  0x9b ; '.'
0000000000000d52         db  0x20 ; ' '
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x08 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0xe9 ; '.'
0000000000000d61         db  0x70 ; 'p'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xe8 ; '.'
0000000000000d69         db  0x9b ; '.'
0000000000000d6a         db  0x20 ; ' '
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x08 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0xf1 ; '.'
0000000000000d79         db  0x70 ; 'p'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xf0 ; '.'
0000000000000d81         db  0x9b ; '.'
0000000000000d82         db  0x20 ; ' '
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x08 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xf7 ; '.'
0000000000000d91         db  0x70 ; 'p'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xf8 ; '.'
0000000000000d99         db  0x9b ; '.'
0000000000000d9a         db  0x20 ; ' '
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x08 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x04 ; '.'
0000000000000da9         db  0x71 ; 'q'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x00 ; '.'
0000000000000db1         db  0x9c ; '.'
0000000000000db2         db  0x20 ; ' '
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x11 ; '.'
0000000000000dc1         db  0x71 ; 'q'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x9c ; '.'
0000000000000dca         db  0x20 ; ' '
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x25 ; '%'
0000000000000dd9         db  0x71 ; 'q'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x10 ; '.'
0000000000000de1         db  0x9c ; '.'
0000000000000de2         db  0x20 ; ' '
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x27 ; '''
0000000000000df1         db  0x71 ; 'q'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x18 ; '.'
0000000000000df9         db  0x9c ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x0a ; '.'
0000000000000e09         db  0x71 ; 'q'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x20 ; ' '
0000000000000e11         db  0x9c ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xa1 ; '.'
0000000000000e21         db  0x69 ; 'i'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x28 ; '('
0000000000000e29         db  0x9c ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x2f ; '/'
0000000000000e39         db  0x71 ; 'q'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0xa0 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0xa0 ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x10 ; '.'
0000000000000e59         db  0xa0 ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xc6 ; '.'
0000000000000e69         db  0x6f ; 'o'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x60 ; '`'
0000000000000e71         db  0xa0 ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x70 ; 'p'
0000000000000e81         db  0xa0 ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x78 ; 'x'
0000000000000e89         db  0xa0 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xe0 ; '.'
0000000000000e99         db  0xa0 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xc0 ; '.'
0000000000000ea1         db  0x9f ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x06 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x05 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x00 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc8 ; '.'
0000000000000eb9         db  0x9f ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x06 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x1a ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x00 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xd0 ; '.'
0000000000000ed1         db  0x9f ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x06 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x1f ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x00 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xd8 ; '.'
0000000000000ee9         db  0x9f ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x06 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x31 ; '1'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x00 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xe0 ; '.'
0000000000000f01         db  0x9f ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x06 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x34 ; '4'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x00 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x80 ; '.'
0000000000000f19         db  0xa0 ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x05 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x37 ; '7'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x00 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x88 ; '.'
0000000000000f31         db  0xa0 ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x05 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x36 ; '6'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x00 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x90 ; '.'
0000000000000f49         db  0xa0 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x05 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x3c ; '<'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x00 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x98 ; '.'
0000000000000f61         db  0xa0 ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x05 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x39 ; '9'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x00 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xa0 ; '.'
0000000000000f79         db  0xa0 ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x05 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x3b ; ';'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x00 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf90; 0x1410[ (1152 bytes)
        ; File offset : [3984; 5136[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f90         db  0x40 ; '@'
0000000000000f91         db  0x9e ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x07 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x01 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x00 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x48 ; 'H'
0000000000000fa9         db  0x9e ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x07 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x02 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x00 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x50 ; 'P'
0000000000000fc1         db  0x9e ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x07 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x03 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x00 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x58 ; 'X'
0000000000000fd9         db  0x9e ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x07 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x04 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x00 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x60 ; '`'
0000000000000ff1         db  0x9e ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x07 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x06 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=canonicalize_filename_mode+124
0000000000001000         db  0x00 ; '.'                                         ; DATA XREF=canonicalize_filename_mode+343, canonicalize_filename_mode+350, sub_250a+6, sub_250a+41, sub_250a+69, sub_250a+76
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x68 ; 'h'
0000000000001009         db  0x9e ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x07 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x07 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x00 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x70 ; 'p'
0000000000001021         db  0x9e ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x07 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x08 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x00 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x78 ; 'x'
0000000000001039         db  0x9e ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x07 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x09 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x80 ; '.'
0000000000001051         db  0x9e ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x07 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x0a ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x00 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x88 ; '.'
0000000000001069         db  0x9e ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x07 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x0b ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x90 ; '.'
0000000000001081         db  0x9e ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x07 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x0c ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x98 ; '.'
0000000000001099         db  0x9e ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x07 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x0d ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0xa0 ; '.'
00000000000010b1         db  0x9e ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x07 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x0e ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0xa8 ; '.'
00000000000010c9         db  0x9e ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x07 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x0f ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0xb0 ; '.'
00000000000010e1         db  0x9e ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x07 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x10 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0xb8 ; '.'
00000000000010f9         db  0x9e ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x07 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x11 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xc0 ; '.'
0000000000001111         db  0x9e ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x07 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x12 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0xc8 ; '.'
0000000000001129         db  0x9e ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x07 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x13 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xd0 ; '.'
0000000000001141         db  0x9e ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x07 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x14 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xd8 ; '.'
0000000000001159         db  0x9e ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x07 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x15 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xe0 ; '.'
0000000000001171         db  0x9e ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x07 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x16 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0xe8 ; '.'
0000000000001189         db  0x9e ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x17 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0xf0 ; '.'
00000000000011a1         db  0x9e ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x18 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0xf8 ; '.'
00000000000011b9         db  0x9e ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x19 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x9f ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x1b ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x08 ; '.'
00000000000011e9         db  0x9f ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x1c ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x10 ; '.'
0000000000001201         db  0x9f ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x1d ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x18 ; '.'
0000000000001219         db  0x9f ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x1e ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x20 ; ' '
0000000000001231         db  0x9f ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x20 ; ' '
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x28 ; '('
0000000000001249         db  0x9f ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x21 ; '!'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x30 ; '0'
0000000000001261         db  0x9f ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x22 ; '"'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x38 ; '8'
0000000000001279         db  0x9f ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x23 ; '#'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x40 ; '@'
0000000000001291         db  0x9f ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x24 ; '$'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x48 ; 'H'
00000000000012a9         db  0x9f ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x25 ; '%'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x50 ; 'P'
00000000000012c1         db  0x9f ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x26 ; '&'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x58 ; 'X'
00000000000012d9         db  0x9f ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x27 ; '''
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x60 ; '`'
00000000000012f1         db  0x9f ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x28 ; '('
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x68 ; 'h'
0000000000001309         db  0x9f ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x29 ; ')'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x70 ; 'p'
0000000000001321         db  0x9f ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x2a ; '*'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x78 ; 'x'
0000000000001339         db  0x9f ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x2b ; '+'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x80 ; '.'
0000000000001351         db  0x9f ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x2c ; ','
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x88 ; '.'
0000000000001369         db  0x9f ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x2d ; '-'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x90 ; '.'
0000000000001381         db  0x9f ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x2e ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x98 ; '.'
0000000000001399         db  0x9f ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x2f ; '/'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0xa0 ; '.'
00000000000013b1         db  0x9f ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x30 ; '0'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0xa8 ; '.'
00000000000013c9         db  0x9f ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x32 ; '2'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0xb0 ; '.'
00000000000013e1         db  0x9f ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x33 ; '3'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0xb8 ; '.'
00000000000013f9         db  0x9f ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x35 ; '5'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1410; 0x1427[ (23 bytes)
        ; File offset : [5136; 5159[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001410         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001414         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
000000000000141b         test       rax, rax
000000000000141e         je         loc_1422

0000000000001420         call       rax

                     loc_1422:
0000000000001422         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001426         ret
                        ; endp
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1430; 0x1740[ (784 bytes)
        ; File offset : [5168; 5952[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1430:
0000000000001430         push       qword [qword_209e30]                        ; Begin of unwind block (FDE at 0x7d2c), qword_209e30, CODE XREF=sub_1446+5
0000000000001436         jmp        qword [qword_209e30+8]                      ; 0x209e38
                        ; endp
000000000000143c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001440         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+511, areadlink_with_size+110, areadlink_with_size+199, canonicalize_filename_mode+519, canonicalize_filename_mode+714, canonicalize_filename_mode+722, canonicalize_filename_mode+889, canonicalize_filename_mode+897, canonicalize_filename_mode+1244, hash_initialize+245, hash_free+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x0
000000000000144b         jmp        loc_1430


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001450         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_4470+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x1
000000000000145b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001460         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+599, areadlink_with_size+184, areadlink_with_size+224, canonicalize_filename_mode+635, canonicalize_filename_mode+867, sub_250a+118, sub_250a+136, sub_250a+182, sub_250a+253, close_stdout+22, quotearg_n_options+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x2
000000000000146b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001470         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+588, usage+781
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x3
000000000000147b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001480         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x4
000000000000148b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001490         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x5
000000000000149b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
00000000000014a0         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x6
00000000000014ab         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000014b0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+79
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x7
00000000000014bb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000014c0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x8
00000000000014cb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000014d0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+67
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x9
00000000000014db         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000014e0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+680, main+724, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294, usage+522, usage+615
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0xa
00000000000014eb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000014f0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0xb
00000000000014fb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001500         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=canonicalize_filename_mode+119, canonicalize_filename_mode+1088, canonicalize_filename_mode+1104, quotearg_buffer_restyled+343, sub_4470+411, sub_4470+1742, xstrdup+4, base_len+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0xc
000000000000150b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000001510         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=canonicalize_filename_mode+800
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0xd
000000000000151b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001520         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sub_250a+279, seen_file+81, hash_rehash+554, hash_insert_if_absent+639, hash_insert+84, hash_delete+510, sub_4470+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0xe
000000000000152b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001530         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0xf
000000000000153b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001540         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x10
000000000000154b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000001550         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=same_nameat.part.0+71, same_nameat.part.0+127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x11
000000000000155b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001560         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+757
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x12
000000000000156b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001570         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x13
000000000000157b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001580         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x14
000000000000158b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001590         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x15
000000000000159b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getcwd:        // getcwd
00000000000015a0         jmp        qword [getcwd@GOT]                          ; getcwd, getcwd@GOT, CODE XREF=xgetcwd+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x16
00000000000015ab         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
00000000000015b0         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=canonicalize_filename_mode+676
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x17
00000000000015bb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000015c0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410, same_nameat+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x18
00000000000015cb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000015d0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=main+458, usage+157, usage+194, usage+231, usage+268, usage+312, usage+896, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x19
00000000000015db         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000015e0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x1a
00000000000015eb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
00000000000015f0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=triple_compare_ino_str+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x1b
00000000000015fb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001600         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=canonicalize_filename_mode+387, canonicalize_filename_mode+1208, xmemdup+35, mdir_name+53
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x1c
000000000000160b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001610         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x1d
000000000000161b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001620         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=canonicalize_filename_mode+617
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x1e
000000000000162b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001630         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=areadlink_with_size+67, areadlink_with_size+126, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, xmalloc+4, mdir_name+31
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x1f
000000000000163b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001640         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x20
000000000000164b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001650         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x21
000000000000165b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001660         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x22
000000000000166b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001670         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x23
000000000000167b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001680         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+48, usage+563, usage+756, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x24
000000000000168b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001690         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+551, usage+644, usage+705, usage+744, usage+847, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x25
000000000000169b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
00000000000016a0         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=canonicalize_filename_mode+1192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x26
00000000000016ab         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000016b0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+620, main+694, main+738, close_stdout+125, close_stdout+157, same_nameat.part.0+240, same_nameat.part.0+280, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x27
00000000000016bb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000016c0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x28
00000000000016cb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
00000000000016d0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x29
00000000000016db         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000016e0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+362, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x2a
00000000000016eb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000016f0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x2b
00000000000016fb         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001700         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x2c
000000000000170b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001710         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4470+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x2d
000000000000171b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001720         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4470+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x2e
000000000000172b         jmp        0x1430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001730         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_4210+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2f
000000000000173b         jmp        0x1430
                        ; endp


        ; Section .plt.got
        ; Range: [0x1740; 0x1748[ (8 bytes)
        ; File offset : [5952; 5960[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209fe0:        // qword_209fe0
0000000000001740         jmp        qword [qword_209fe0]                        ; qword, End of unwind block (FDE at 0x7d2c), Begin of unwind block (FDE at 0x7d54), qword_209fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001746         align      8
0000000000001748         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7d54)
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1750; 0x68ce[ (20862 bytes)
        ; File offset : [5968; 26830[ (20862 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_3D: int8_t, -61


                     main:
0000000000001750         push       r15                                         ; Begin of unwind block (FDE at 0x7d98), DATA XREF=_start+29
0000000000001752         push       r14
0000000000001754         push       r13
0000000000001756         push       r12
0000000000001758         xor        r13d, r13d
000000000000175b         push       rbp
000000000000175c         push       rbx
000000000000175d         mov        ebp, edi
000000000000175f         mov        rbx, rsi
0000000000001762         mov        r12d, 0xffffffff
0000000000001768         sub        rsp, 0x18
000000000000176c         mov        rdi, qword [rsi]
000000000000176f         call       set_program_name                            ; set_program_name
0000000000001774         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7601
000000000000177b         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001780         call       j_setlocale                                 ; setlocale
0000000000001785         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000178c         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001793         call       j_bindtextdomain                            ; bindtextdomain
0000000000001798         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000179f         call       j_textdomain                                ; textdomain
00000000000017a4         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000017ab         call       atexit                                      ; atexit

                     loc_17b0:
00000000000017b0         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+166, main+209, main+228, main+249, main+262, main+279, main+291
00000000000017b7         lea        rdx, qword [aEfmnqsvz]                      ; argument "__shortopts" for method j_getopt_long, "efmnqsvz"
00000000000017be         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000017c1         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000017c4         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
00000000000017c6         call       j_getopt_long                               ; getopt_long
00000000000017cb         cmp        eax, 0xffffffff
00000000000017ce         je         loc_18bf

00000000000017d4         cmp        eax, 0x6d
00000000000017d7         je         loc_1850

00000000000017d9         jle        loc_1800

00000000000017db         cmp        eax, 0x73
00000000000017de         je         loc_1842

00000000000017e0         jle        loc_1828

00000000000017e2         cmp        eax, 0x76
00000000000017e5         je         loc_1860

00000000000017e7         cmp        eax, 0x7a
00000000000017ea         jne        loc_1a37

00000000000017f0         mov        r13d, 0x1
00000000000017f6         jmp        loc_17b0
00000000000017f8         align      2048

                     loc_1800:
0000000000001800         cmp        eax, 0xffffff7e                             ; CODE XREF=main+137
0000000000001805         je         loc_1a4f

000000000000180b         jle        loc_1880

000000000000180d         cmp        eax, 0x65
0000000000001810         je         loc_1870

0000000000001812         cmp        eax, 0x66
0000000000001815         jne        loc_1a37

000000000000181b         mov        r12d, 0x1
0000000000001821         jmp        loc_17b0
0000000000001823         align      8

                     loc_1828:
0000000000001828         cmp        eax, 0x6e                                   ; CODE XREF=main+144
000000000000182b         jne        loc_1839

000000000000182d         mov        byte [no_newline], 0x1                      ; no_newline
0000000000001834         jmp        loc_17b0

                     loc_1839:
0000000000001839         cmp        eax, 0x71                                   ; CODE XREF=main+219
000000000000183c         jne        loc_1a37

                     loc_1842:
0000000000001842         mov        byte [verbose], 0x0                         ; verbose, CODE XREF=main+142
0000000000001849         jmp        loc_17b0
000000000000184e         align      16

                     loc_1850:
0000000000001850         mov        r12d, 0x2                                   ; CODE XREF=main+135
0000000000001856         jmp        loc_17b0
000000000000185b         align      32

                     loc_1860:
0000000000001860         mov        byte [verbose], 0x1                         ; verbose, CODE XREF=main+149
0000000000001867         jmp        loc_17b0
000000000000186c         align      16

                     loc_1870:
0000000000001870         xor        r12d, r12d                                  ; CODE XREF=main+192
0000000000001873         jmp        loc_17b0
0000000000001878         align      128

                     loc_1880:
0000000000001880         cmp        eax, 0xffffff7d                             ; CODE XREF=main+187
0000000000001885         jne        loc_1a37

000000000000188b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001892         mov        rcx, qword [Version]                        ; Version
0000000000001899         lea        r8, qword [aDmitryVLevin]                   ; "Dmitry V. Levin"
00000000000018a0         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6963
00000000000018a7         lea        rsi, qword [aReadlink]                      ; "readlink"
00000000000018ae         xor        r9d, r9d
00000000000018b1         xor        eax, eax
00000000000018b3         call       version_etc                                 ; version_etc
00000000000018b8         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000018ba         call       j_exit                                      ; exit
                        ; endp

                     loc_18bf:
00000000000018bf         mov        edx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+126
00000000000018c5         cmp        edx, ebp
00000000000018c7         mov        eax, edx
00000000000018c9         jge        loc_1a16

00000000000018cf         mov        ecx, ebp
00000000000018d1         sub        ecx, edx
00000000000018d3         sub        ecx, 0x1
00000000000018d6         je         loc_18f6

00000000000018d8         cmp        byte [no_newline], 0x0                      ; no_newline
00000000000018df         jne        loc_19ea

                     loc_18e5:
00000000000018e5         cmp        ebp, edx                                    ; CODE XREF=main+705
00000000000018e7         mov        byte [no_newline], 0x0                      ; no_newline
00000000000018ee         mov        eax, edx
00000000000018f0         jle        loc_19d5

                     loc_18f6:
00000000000018f6         cmp        r13b, 0x1                                   ; CODE XREF=main+390
00000000000018fa         sbb        ecx, ecx
00000000000018fc         xor        r14d, r14d
00000000000018ff         and        ecx, 0xa
0000000000001902         mov        dword [rsp+0x48+var_3C], ecx
0000000000001906         mov        byte [rsp+0x48+var_3D], cl
000000000000190a         jmp        loc_1967
000000000000190c         align      16

                     loc_1910:
0000000000001910         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+564
0000000000001917         mov        rdi, r15                                    ; argument "__s" for method j_fputs_unlocked
000000000000191a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000191f         cmp        byte [no_newline], 0x0                      ; no_newline
0000000000001926         jne        loc_194c

0000000000001928         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000192f         mov        rax, qword [rdi+0x28]
0000000000001933         cmp        qword [rdi+0x30], rax
0000000000001937         jbe        loc_1a41

000000000000193d         movzx      edx, byte [rsp+0x48+var_3D]
0000000000001942         lea        rcx, qword [rax+1]
0000000000001946         mov        qword [rdi+0x28], rcx
000000000000194a         mov        byte [rax], dl

                     loc_194c:
000000000000194c         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=main+470, main+762
000000000000194f         call       j_free                                      ; free

                     loc_1954:
0000000000001954         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+579, main+625
000000000000195a         add        eax, 0x1
000000000000195d         cmp        eax, ebp
000000000000195f         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
0000000000001965         jge        loc_19d8

                     loc_1967:
0000000000001967         cdqe                                                   ; CODE XREF=main+442
0000000000001969         cmp        r12d, 0xffffffff
000000000000196d         mov        r13, qword [rbx+rax*8]
0000000000001971         je         loc_19c3

0000000000001973         mov        esi, r12d
0000000000001976         mov        rdi, r13
0000000000001979         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
000000000000197e         mov        r15, rax

                     loc_1981:
0000000000001981         test       r15, r15                                    ; CODE XREF=main+643
0000000000001984         jne        loc_1910

0000000000001986         cmp        byte [verbose], 0x0                         ; verbose
000000000000198d         mov        r14d, 0x1
0000000000001993         je         loc_1954

0000000000001995         mov        rdx, r13
0000000000001998         xor        edi, edi
000000000000199a         mov        esi, 0x3
000000000000199f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000019a4         mov        r13, rax
00000000000019a7         call       j___errno_location                          ; __errno_location
00000000000019ac         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000019ae         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6fdb
00000000000019b5         mov        rcx, r13
00000000000019b8         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000019ba         xor        eax, eax
00000000000019bc         call       j_error                                     ; error
00000000000019c1         jmp        loc_1954

                     loc_19c3:
00000000000019c3         mov        esi, 0x3f                                   ; CODE XREF=main+545
00000000000019c8         mov        rdi, r13
00000000000019cb         call       areadlink_with_size                         ; areadlink_with_size
00000000000019d0         mov        r15, rax
00000000000019d3         jmp        loc_1981

                     loc_19d5:
00000000000019d5         xor        r14d, r14d                                  ; CODE XREF=main+416

                     loc_19d8:
00000000000019d8         add        rsp, 0x18                                   ; CODE XREF=main+533
00000000000019dc         mov        eax, r14d
00000000000019df         pop        rbx
00000000000019e0         pop        rbp
00000000000019e1         pop        r12
00000000000019e3         pop        r13
00000000000019e5         pop        r14
00000000000019e7         pop        r15
00000000000019e9         ret
                        ; endp

                     loc_19ea:
00000000000019ea         lea        rsi, qword [aIgnoringNonewl]                ; argument "msgid" for method j_dcgettext, "ignoring --no-newline with multiple arguments", CODE XREF=main+399
00000000000019f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000019f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000019f8         call       j_dcgettext                                 ; dcgettext
00000000000019fd         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000019ff         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a02         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a04         xor        eax, eax
0000000000001a06         call       j_error                                     ; error
0000000000001a0b         mov        edx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001a11         jmp        loc_18e5

                     loc_1a16:
0000000000001a16         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand", CODE XREF=main+377
0000000000001a1d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001a22         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001a24         call       j_dcgettext                                 ; dcgettext
0000000000001a29         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a2b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a2e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a30         xor        eax, eax
0000000000001a32         call       j_error                                     ; error

                     loc_1a37:
0000000000001a37         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+154, main+197, main+236, main+309
0000000000001a3c         call       usage                                       ; usage

                     loc_1a41:
0000000000001a41         mov        esi, dword [rsp+0x48+var_3C]                ; argument #2 for method j___overflow, CODE XREF=main+487
0000000000001a45         call       j___overflow                                ; __overflow
0000000000001a4a         jmp        loc_194c

                     loc_1a4f:
0000000000001a4f         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+181
0000000000001a51         call       usage                                       ; usage
0000000000001a56         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7d98)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001a60         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7cfc)
0000000000001a62         mov        r9, rdx
0000000000001a65         pop        rsi
0000000000001a66         mov        rdx, rsp
0000000000001a69         and        rsp, 0xfffffffffffffff0
0000000000001a6d         push       rax
0000000000001a6e         push       rsp
0000000000001a6f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001a76         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001a7d         lea        rdi, qword [main]                           ; main
0000000000001a84         call       qword [qword_209fc0+8]                      ; 0x209fc8
0000000000001a8a         hlt
                        ; endp
0000000000001a8b         align      16                                          ; End of unwind block (FDE at 0x7cfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001a90         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001a97         push       rbp
0000000000001a98         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a9f         cmp        rax, rdi
0000000000001aa2         mov        rbp, rsp
0000000000001aa5         je         loc_1ac0

0000000000001aa7         mov        rax, qword [qword_209fc0]                   ; qword_209fc0
0000000000001aae         test       rax, rax
0000000000001ab1         je         loc_1ac0

0000000000001ab3         pop        rbp
0000000000001ab4         jmp        rax
                        ; endp
0000000000001ab6         align      64

                     loc_1ac0:
0000000000001ac0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001ac1         ret
                        ; endp
0000000000001ac2         align      16

                     register_tm_clones:
0000000000001ad0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001ad7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001ade         push       rbp
0000000000001adf         sub        rsi, rdi
0000000000001ae2         mov        rbp, rsp
0000000000001ae5         sar        rsi, 0x3
0000000000001ae9         mov        rax, rsi
0000000000001aec         shr        rax, 0x3f
0000000000001af0         add        rsi, rax
0000000000001af3         sar        rsi, 0x1
0000000000001af6         je         loc_1b10

0000000000001af8         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
0000000000001aff         test       rax, rax
0000000000001b02         je         loc_1b10

0000000000001b04         pop        rbp
0000000000001b05         jmp        rax
                        ; endp
0000000000001b07         align      16

                     loc_1b10:
0000000000001b10         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001b11         ret
                        ; endp
0000000000001b12         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001b20         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001b27         jne        loc_1b58

0000000000001b29         cmp        qword [qword_209fe0], 0x0                   ; qword_209fe0
0000000000001b31         push       rbp
0000000000001b32         mov        rbp, rsp
0000000000001b35         je         loc_1b43

0000000000001b37         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001b3e         call       j_qword_209fe0                              ; qword_209fe0

                     loc_1b43:
0000000000001b43         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001b48         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001b4f         pop        rbp
0000000000001b50         ret
                        ; endp
0000000000001b51         align      8

                     loc_1b58:
0000000000001b58         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001b5a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001b60         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001b61         mov        rbp, rsp
0000000000001b64         pop        rbp
0000000000001b65         jmp        register_tm_clones                          ; register_tm_clones
0000000000001b6a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001b70         push       r13                                         ; Begin of unwind block (FDE at 0x7d6c), CODE XREF=main+748, main+769
0000000000001b72         push       r12
0000000000001b74         mov        edx, 0x5
0000000000001b79         push       rbp
0000000000001b7a         push       rbx
0000000000001b7b         mov        ebp, edi
0000000000001b7d         sub        rsp, 0x88
0000000000001b84         mov        rbx, qword [program_name]                   ; program_name
0000000000001b8b         mov        rax, qword [fs:0x28]
0000000000001b94         mov        qword [rsp+0xa8+var_30], rax
0000000000001b99         xor        eax, eax
0000000000001b9b         test       edi, edi
0000000000001b9d         je         loc_1bcd

0000000000001b9f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001ba6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ba8         call       j_dcgettext                                 ; dcgettext
0000000000001bad         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001bb4         mov        rdx, rax
0000000000001bb7         mov        rcx, rbx
0000000000001bba         mov        esi, 0x1
0000000000001bbf         xor        eax, eax
0000000000001bc1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1bc6:
0000000000001bc6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+710
0000000000001bc8         call       j_exit                                      ; exit
                        ; endp

                     loc_1bcd:
0000000000001bcd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... FILE...\\n", CODE XREF=usage+45
0000000000001bd4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001bd6         call       j_dcgettext                                 ; dcgettext
0000000000001bdb         mov        rdx, rbx
0000000000001bde         mov        rsi, rax
0000000000001be1         mov        edi, 0x1
0000000000001be6         xor        eax, eax
0000000000001be8         call       j___printf_chk                              ; __printf_chk
0000000000001bed         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001bf4         lea        rsi, qword [aPrintValueOfAS]                ; argument "msgid" for method j_dcgettext, "Print value of a symbolic link or canonical file name\\n\\n"
0000000000001bfb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c00         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c02         call       j_dcgettext                                 ; dcgettext
0000000000001c07         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c0a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001c0d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001c12         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c19         lea        rsi, qword [aFCanonicalizeC]                ; argument "msgid" for method j_dcgettext, "  -f, --canonicalize            canonicalize by following every symlink in\\n                                every component of the given name recursively;\\n                                all but the last component must exist\\n  -e, --canonicalize-existing   …"
0000000000001c20         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c27         call       j_dcgettext                                 ; dcgettext
0000000000001c2c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c2f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001c32         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001c37         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c3e         lea        rsi, qword [aMCanonicalizem]                ; argument "msgid" for method j_dcgettext, "  -m, --canonicalize-missing    canonicalize by following every symlink in\\n                                every component of the given name recursively,\\n                                without requirements on components existence\\n  -n, --no-newline       …"
0000000000001c45         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c4a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c4c         call       j_dcgettext                                 ; dcgettext
0000000000001c51         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c54         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001c57         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001c5c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c63         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000001c6a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c6f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c71         call       j_dcgettext                                 ; dcgettext
0000000000001c76         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c79         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001c7c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001c81         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c88         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000001c8f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c94         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c96         call       j_dcgettext                                 ; dcgettext
0000000000001c9b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c9e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ca1         lea        rbx, qword [aReadlink]                      ; "readlink"
0000000000001ca8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cad         lea        rax, qword [aReadlink+9]                    ; 0x68ed
0000000000001cb4         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000001cbb         mov        qword [rsp+0xa8+var_48], 0x0
0000000000001cc4         mov        qword [rsp+0xa8+var_40], 0x0
0000000000001ccd         mov        rdx, rsp
0000000000001cd0         mov        qword [rsp+0xa8+var_A8], rax
0000000000001cd4         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000001cdb         mov        qword [rsp+0xa8+var_78], rcx
0000000000001ce0         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000001ce7         mov        qword [rsp+0xa8+var_A0], rax
0000000000001cec         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000001cf3         mov        qword [rsp+0xa8+var_68], rcx
0000000000001cf8         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000001cff         mov        qword [rsp+0xa8+var_98], rax
0000000000001d04         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000001d0b         mov        qword [rsp+0xa8+var_58], rcx
0000000000001d10         mov        qword [rsp+0xa8+var_90], rax
0000000000001d15         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000001d1c         mov        qword [rsp+0xa8+var_88], rax
0000000000001d21         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000001d28         mov        qword [rsp+0xa8+var_80], rax
0000000000001d2d         mov        qword [rsp+0xa8+var_70], rax
0000000000001d32         mov        qword [rsp+0xa8+var_60], rax
0000000000001d37         mov        qword [rsp+0xa8+var_50], rax
0000000000001d3c         nop        dword [rax]

                     loc_1d40:
0000000000001d40         add        rdx, 0x10                                   ; CODE XREF=usage+493
0000000000001d44         mov        rdi, qword [rdx]
0000000000001d47         test       rdi, rdi
0000000000001d4a         je         loc_1d5f

0000000000001d4c         mov        ecx, 0x9
0000000000001d51         mov        rsi, rbx
0000000000001d54         rep  cmpsb byte [rsi], byte [rdi]
0000000000001d56         seta       al
0000000000001d59         sbb        al, 0x0
0000000000001d5b         test       al, al
0000000000001d5d         jne        loc_1d40

                     loc_1d5f:
0000000000001d5f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+474
0000000000001d63         xor        edi, edi
0000000000001d65         mov        edx, 0x5
0000000000001d6a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000001d71         test       r12, r12
0000000000001d74         je         loc_1e3b

0000000000001d7a         call       j_dcgettext                                 ; dcgettext
0000000000001d7f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001d86         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6963
0000000000001d8d         mov        rsi, rax
0000000000001d90         mov        edi, 0x1
0000000000001d95         xor        eax, eax
0000000000001d97         call       j___printf_chk                              ; __printf_chk
0000000000001d9c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001d9e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001da3         call       j_setlocale                                 ; setlocale
0000000000001da8         test       rax, rax
0000000000001dab         je         loc_1dc9

0000000000001dad         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6971
0000000000001db4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001db9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001dbc         call       j_strncmp                                   ; strncmp
0000000000001dc1         test       eax, eax
0000000000001dc3         jne        loc_1ed0

                     loc_1dc9:
0000000000001dc9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+571, usage+901
0000000000001dd0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001dd2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001dd7         call       j_dcgettext                                 ; dcgettext
0000000000001ddc         lea        rcx, qword [aReadlink]                      ; "readlink"
0000000000001de3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001dea         mov        rsi, rax
0000000000001ded         mov        edi, 0x1
0000000000001df2         xor        eax, eax
0000000000001df4         call       j___printf_chk                              ; __printf_chk
0000000000001df9         cmp        r12, rbx
0000000000001dfc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6909
0000000000001e03         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7601
0000000000001e0a         cmove      rbx, rcx

                     loc_1e0e:
0000000000001e0e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+852
0000000000001e15         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e17         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e1c         call       j_dcgettext                                 ; dcgettext
0000000000001e21         mov        rcx, rbx
0000000000001e24         mov        rsi, rax
0000000000001e27         mov        rdx, r12
0000000000001e2a         mov        edi, 0x1
0000000000001e2f         xor        eax, eax
0000000000001e31         call       j___printf_chk                              ; __printf_chk
0000000000001e36         jmp        loc_1bc6

                     loc_1e3b:
0000000000001e3b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+516
0000000000001e40         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001e47         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6963
0000000000001e4e         mov        rsi, rax
0000000000001e51         mov        edi, 0x1
0000000000001e56         xor        eax, eax
0000000000001e58         call       j___printf_chk                              ; __printf_chk
0000000000001e5d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001e5f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001e64         call       j_setlocale                                 ; setlocale
0000000000001e69         test       rax, rax
0000000000001e6c         je         loc_1e86

0000000000001e6e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6971
0000000000001e75         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001e7a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001e7d         call       j_strncmp                                   ; strncmp
0000000000001e82         test       eax, eax
0000000000001e84         jne        loc_1ec9

                     loc_1e86:
0000000000001e86         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+764
0000000000001e8d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e94         lea        r12, qword [aReadlink]                      ; "readlink"
0000000000001e9b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6909
0000000000001ea2         call       j_dcgettext                                 ; dcgettext
0000000000001ea7         lea        rcx, qword [aReadlink]                      ; "readlink"
0000000000001eae         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001eb5         mov        rsi, rax
0000000000001eb8         mov        edi, 0x1
0000000000001ebd         xor        eax, eax
0000000000001ebf         call       j___printf_chk                              ; __printf_chk
0000000000001ec4         jmp        loc_1e0e

                     loc_1ec9:
0000000000001ec9         lea        r12, qword [aReadlink]                      ; "readlink", CODE XREF=usage+788

                     loc_1ed0:
0000000000001ed0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+595
0000000000001ed7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000001ede         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ee0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ee5         call       j_dcgettext                                 ; dcgettext
0000000000001eea         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001eed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ef0         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ef5         jmp        loc_1dc9
0000000000001efa         align      256                                         ; End of unwind block (FDE at 0x7d6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
0000000000001f00         push       r15                                         ; Begin of unwind block (FDE at 0x7de4), CODE XREF=main+635, canonicalize_filename_mode+1068
0000000000001f02         push       r14
0000000000001f04         mov        eax, 0x401
0000000000001f09         push       r13
0000000000001f0b         push       r12
0000000000001f0d         mov        r13, rdi
0000000000001f10         push       rbp
0000000000001f11         push       rbx
0000000000001f12         lea        rbx, qword [rsi+1]
0000000000001f16         movabs     r14, 0x3fffffffffffffff
0000000000001f20         movabs     r15, 0x7ffffffffffffffe
0000000000001f2a         sub        rsp, 0x8
0000000000001f2e         cmp        rsi, 0x401
0000000000001f35         cmovae     rbx, rax
0000000000001f39         nop        dword [rax]

                     loc_1f40:
0000000000001f40         mov        rdi, rbx                                    ; argument "__size" for method j_malloc, CODE XREF=areadlink_with_size+175
0000000000001f43         call       j_malloc                                    ; malloc
0000000000001f48         test       rax, rax
0000000000001f4b         mov        rbp, rax
0000000000001f4e         je         loc_1f8b

                     loc_1f50:
0000000000001f50         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
0000000000001f53         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
0000000000001f56         mov        rdi, r13                                    ; argument "__path" for method j_readlink
0000000000001f59         call       j_readlink                                  ; readlink
0000000000001f5e         test       rax, rax
0000000000001f61         mov        r12, rax
0000000000001f64         js         loc_1fb8

                     loc_1f66:
0000000000001f66         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
0000000000001f69         ja         loc_1fd0

0000000000001f6b         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000001f6e         call       j_free                                      ; free
0000000000001f73         cmp        rbx, r14
0000000000001f76         ja         loc_1fa0

0000000000001f78         add        rbx, rbx
0000000000001f7b         mov        rdi, rbx                                    ; argument "__size" for method j_malloc
0000000000001f7e         call       j_malloc                                    ; malloc
0000000000001f83         test       rax, rax
0000000000001f86         mov        rbp, rax
0000000000001f89         jne        loc_1f50

                     loc_1f8b:
0000000000001f8b         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
0000000000001f8f         mov        rax, rbp
0000000000001f92         pop        rbx
0000000000001f93         pop        rbp
0000000000001f94         pop        r12
0000000000001f96         pop        r13
0000000000001f98         pop        r14
0000000000001f9a         pop        r15
0000000000001f9c         ret
                        ; endp
0000000000001f9d         align      32

                     loc_1fa0:
0000000000001fa0         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
0000000000001fa3         ja         loc_1fe0

0000000000001fa5         movabs     rbx, 0x7fffffffffffffff
0000000000001faf         jmp        loc_1f40
0000000000001fb1         align      8

                     loc_1fb8:
0000000000001fb8         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
0000000000001fbd         cmp        dword [rax], 0x22
0000000000001fc0         je         loc_1f66

0000000000001fc2         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000001fc5         xor        ebp, ebp
0000000000001fc7         call       j_free                                      ; free
0000000000001fcc         jmp        loc_1f8b
0000000000001fce         align      16

                     loc_1fd0:
0000000000001fd0         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
0000000000001fd6         jmp        loc_1f8b
0000000000001fd8         align      32

                     loc_1fe0:
0000000000001fe0         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
0000000000001fe5         xor        ebp, ebp
0000000000001fe7         mov        dword [rax], 0xc
0000000000001fed         jmp        loc_1f8b
0000000000001fef         align      16                                          ; End of unwind block (FDE at 0x7de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int32_t, -252
        ;    var_FD: int8_t, -253
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_114: int32_t, -276


                     canonicalize_filename_mode:
0000000000001ff0         push       r15                                         ; Begin of unwind block (FDE at 0x7e34), CODE XREF=main+553
0000000000001ff2         push       r14
0000000000001ff4         push       r13
0000000000001ff6         push       r12
0000000000001ff8         push       rbp
0000000000001ff9         push       rbx
0000000000001ffa         sub        rsp, 0xe8
0000000000002001         mov        rax, qword [fs:0x28]
000000000000200a         mov        qword [rsp+0x118+var_40], rax
0000000000002012         xor        eax, eax
0000000000002014         mov        eax, esi
0000000000002016         and        eax, 0x4
0000000000002019         setne      byte [rsp+0x118+var_FD]
000000000000201e         and        esi, 0x3
0000000000002021         mov        dword [rsp+0x118+var_FC], eax
0000000000002025         lea        eax, dword [rsi-1]
0000000000002028         mov        dword [rsp+0x118+var_114], esi
000000000000202c         test       esi, eax
000000000000202e         jne        loc_2580

0000000000002034         test       rdi, rdi
0000000000002037         mov        r14, rdi
000000000000203a         je         loc_2580

0000000000002040         movzx      eax, byte [rdi]
0000000000002043         test       al, al
0000000000002045         je         loc_25c0

000000000000204b         cmp        al, 0x2f
000000000000204d         je         loc_2510

0000000000002053         call       xgetcwd                                     ; xgetcwd
0000000000002058         test       rax, rax
000000000000205b         mov        rbp, rax
000000000000205e         je         loc_2210

0000000000002064         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000002067         call       j_strlen                                    ; strlen
000000000000206c         cmp        rax, 0xfff
0000000000002072         mov        r15, rax
0000000000002075         jbe        loc_2530

000000000000207b         add        r15, rbp
000000000000207e         mov        rbx, r15

                     loc_2081:
0000000000002081         lea        rax, qword [rsp+0x118+var_D8]               ; CODE XREF=sub_250a+33, sub_250a+64
0000000000002086         mov        qword [rsp+0x118+var_F8], r14
000000000000208b         mov        qword [rsp+0x118+var_108], 0x0
0000000000002094         mov        qword [rsp+0x118+var_E8], 0x0
000000000000209d         mov        qword [rsp+0x118+var_F0], 0x0
00000000000020a6         mov        qword [rsp+0x118+var_110], rax

                     loc_20ab:
00000000000020ab         movzx      eax, byte [r14]                             ; CODE XREF=canonicalize_filename_mode+981, canonicalize_filename_mode+1008, sub_250a+274
00000000000020af         test       al, al
00000000000020b1         je         loc_21bf

00000000000020b7         nop        word [rax+rax]

                     loc_20c0:
00000000000020c0         cmp        al, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+457
00000000000020c2         jne        loc_20dc

00000000000020c4         nop        dword [rax]

                     loc_20c8:
00000000000020c8         add        r14, 0x1                                    ; CODE XREF=canonicalize_filename_mode+226
00000000000020cc         movzx      eax, byte [r14]
00000000000020d0         cmp        al, 0x2f
00000000000020d2         je         loc_20c8

00000000000020d4         test       al, al
00000000000020d6         je         loc_23a0

                     loc_20dc:
00000000000020dc         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+210
00000000000020df         jmp        loc_20ed
00000000000020e1         align      8

                     loc_20e8:
00000000000020e8         cmp        dl, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+264
00000000000020eb         je         loc_20fa

                     loc_20ed:
00000000000020ed         add        r13, 0x1                                    ; CODE XREF=canonicalize_filename_mode+239
00000000000020f1         movzx      edx, byte [r13]
00000000000020f6         test       dl, dl
00000000000020f8         jne        loc_20e8

                     loc_20fa:
00000000000020fa         cmp        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+251, canonicalize_filename_mode+947
00000000000020fd         je         loc_21bf

0000000000002103         mov        r12, r13
0000000000002106         sub        r12, r14
0000000000002109         cmp        r12, 0x1
000000000000210d         je         loc_22e0

0000000000002113         cmp        r12, 0x2
0000000000002117         jne        loc_2121

0000000000002119         cmp        al, 0x2e
000000000000211b         je         loc_23b0

                     loc_2121:
0000000000002121         cmp        byte [r15-1], 0x2f                          ; CODE XREF=canonicalize_filename_mode+295, canonicalize_filename_mode+754, canonicalize_filename_mode+965
0000000000002126         je         loc_2130

0000000000002128         mov        byte [r15], 0x2f
000000000000212c         add        r15, 0x1

                     loc_2130:
0000000000002130         lea        rax, qword [r15+r12]                        ; CODE XREF=canonicalize_filename_mode+310
0000000000002134         cmp        rbx, rax
0000000000002137         ja         loc_216a

0000000000002139         sub        rbx, rbp
000000000000213c         sub        r15, rbp
000000000000213f         mov        rdi, rbp                                    ; argument #1 for method xrealloc
0000000000002142         lea        rax, qword [r12+rbx+1]
0000000000002147         add        rbx, 0x1000
000000000000214e         cmp        r12, 0x1000
0000000000002155         cmovge     rbx, rax
0000000000002159         mov        rsi, rbx                                    ; argument #2 for method xrealloc
000000000000215c         call       xrealloc                                    ; xrealloc
0000000000002161         mov        rbp, rax
0000000000002164         add        rbx, rax
0000000000002167         add        r15, rax

                     loc_216a:
000000000000216a         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy, CODE XREF=canonicalize_filename_mode+327
000000000000216d         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
0000000000002170         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000002173         call       j_memcpy                                    ; memcpy
0000000000002178         cmp        dword [rsp+0x118+var_114], 0x2
000000000000217d         lea        r15, qword [r15+r12]
0000000000002181         mov        byte [r15], 0x0
0000000000002185         jne        loc_2240

000000000000218b         cmp        byte [rsp+0x118+var_FD], 0x0
0000000000002190         je         loc_2240

                     loc_2196:
0000000000002196         mov        dword [rsp+0x118+var_C0], 0x0               ; CODE XREF=canonicalize_filename_mode+656

                     loc_219e:
000000000000219e         cmp        byte [r13], 0x0                             ; CODE XREF=canonicalize_filename_mode+795
00000000000021a3         je         loc_21b0

00000000000021a5         cmp        dword [rsp+0x118+var_114], 0x2
00000000000021aa         jne        loc_2607

                     loc_21b0:
00000000000021b0         mov        r14, r13                                    ; CODE XREF=canonicalize_filename_mode+435, canonicalize_filename_mode+696, canonicalize_filename_mode+760, canonicalize_filename_mode+789, canonicalize_filename_mode+861, canonicalize_filename_mode+1021, canonicalize_filename_mode+1032, canonicalize_filename_mode+1249, sub_250a+156
00000000000021b3         movzx      eax, byte [r14]
00000000000021b7         test       al, al
00000000000021b9         jne        loc_20c0

                     loc_21bf:
00000000000021bf         lea        rax, qword [rbp+1]                          ; CODE XREF=canonicalize_filename_mode+193, canonicalize_filename_mode+269
00000000000021c3         cmp        r15, rax
00000000000021c6         jbe        loc_21d3

00000000000021c8         cmp        byte [r15-1], 0x2f
00000000000021cd         jne        loc_21d3

00000000000021cf         sub        r15, 0x1

                     loc_21d3:
00000000000021d3         lea        rax, qword [r15+1]                          ; CODE XREF=canonicalize_filename_mode+470, canonicalize_filename_mode+477
00000000000021d7         mov        byte [r15], 0x0
00000000000021db         cmp        rbx, rax
00000000000021de         je         loc_21f2

00000000000021e0         sub        r15, rbp
00000000000021e3         mov        rdi, rbp                                    ; argument #1 for method xrealloc
00000000000021e6         lea        rsi, qword [r15+1]                          ; argument #2 for method xrealloc
00000000000021ea         call       xrealloc                                    ; xrealloc
00000000000021ef         mov        rbp, rax

                     loc_21f2:
00000000000021f2         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=canonicalize_filename_mode+494
00000000000021f7         call       j_free                                      ; free
00000000000021fc         mov        rax, qword [rsp+0x118+var_108]
0000000000002201         test       rax, rax
0000000000002204         je         loc_2210

0000000000002206         mov        rdi, rax
0000000000002209         call       hash_free                                   ; hash_free
000000000000220e         nop

                     loc_2210:
0000000000002210         mov        rcx, qword [rsp+0x118+var_40]               ; CODE XREF=canonicalize_filename_mode+110, canonicalize_filename_mode+532, canonicalize_filename_mode+930, sub_250a+131, sub_250a+195
0000000000002218         xor        rcx, qword [fs:0x28]
0000000000002221         mov        rax, rbp
0000000000002224         jne        loc_2621

000000000000222a         add        rsp, 0xe8
0000000000002231         pop        rbx
0000000000002232         pop        rbp
0000000000002233         pop        r12
0000000000002235         pop        r13
0000000000002237         pop        r14
0000000000002239         pop        r15
000000000000223b         ret
                        ; endp
000000000000223c         align      64

                     loc_2240:
0000000000002240         mov        eax, dword [rsp+0x118+var_FC]               ; CODE XREF=canonicalize_filename_mode+405, canonicalize_filename_mode+416
0000000000002244         mov        rdx, qword [rsp+0x118+var_110]
0000000000002249         mov        rsi, rbp
000000000000224c         mov        edi, 0x1
0000000000002251         test       eax, eax
0000000000002253         je         loc_2310

0000000000002259         call       j___xstat                                   ; __xstat
000000000000225e         test       eax, eax
0000000000002260         setne      al

                     loc_2263:
0000000000002263         test       al, al                                      ; CODE XREF=canonicalize_filename_mode+810
0000000000002265         je         loc_22f0

000000000000226b         call       j___errno_location                          ; __errno_location
0000000000002270         mov        r14, rax
0000000000002273         mov        edx, dword [rax]
0000000000002275         mov        eax, dword [rsp+0x118+var_114]
0000000000002279         test       eax, eax
000000000000227b         je         loc_22ae

000000000000227d         cmp        eax, 0x1
0000000000002280         jne        loc_2196

0000000000002286         lea        rsi, qword [aLibs+6]                        ; argument "__accept" for method j_strspn, 0x70ce
000000000000228d         mov        rdi, r13                                    ; argument "__s" for method j_strspn
0000000000002290         mov        dword [rsp+0x118+var_E0], edx
0000000000002294         call       j_strspn                                    ; strspn
0000000000002299         cmp        byte [r13+rax], 0x0
000000000000229f         mov        edx, dword [rsp+0x118+var_E0]
00000000000022a3         jne        loc_22ae

00000000000022a5         cmp        edx, 0x2
00000000000022a8         je         loc_21b0

                     loc_22ae:
00000000000022ae         mov        r12, r14                                    ; CODE XREF=canonicalize_filename_mode+651, canonicalize_filename_mode+691

                     loc_22b1:
00000000000022b1         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_250a+266
00000000000022b6         mov        dword [rsp+0x118+var_114], edx
00000000000022ba         call       j_free                                      ; free
00000000000022bf         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
00000000000022c2         call       j_free                                      ; free
00000000000022c7         cmp        qword [rsp+0x118+var_108], 0x0
00000000000022cd         mov        edx, dword [rsp+0x118+var_114]
00000000000022d1         je         loc_238c

00000000000022d7         jmp        loc_237a
00000000000022dc         align      32

                     loc_22e0:
00000000000022e0         cmp        al, 0x2e                                    ; CODE XREF=canonicalize_filename_mode+285
00000000000022e2         jne        loc_2121

00000000000022e8         jmp        loc_21b0
00000000000022ed         align      16

                     loc_22f0:
00000000000022f0         mov        eax, dword [rsp+0x118+var_C0]               ; CODE XREF=canonicalize_filename_mode+629
00000000000022f4         and        eax, 0xf000
00000000000022f9         cmp        eax, 0xa000
00000000000022fe         je         loc_2320

0000000000002300         cmp        eax, 0x4000
0000000000002305         je         loc_21b0

000000000000230b         jmp        loc_219e

                     loc_2310:
0000000000002310         call       j___lxstat                                  ; __lxstat, CODE XREF=canonicalize_filename_mode+611
0000000000002315         test       eax, eax
0000000000002317         setne      al
000000000000231a         jmp        loc_2263
000000000000231f         align      32

                     loc_2320:
0000000000002320         cmp        qword [rsp+0x118+var_108], 0x0              ; CODE XREF=canonicalize_filename_mode+782
0000000000002326         je         loc_24d6

                     loc_232c:
000000000000232c         mov        rdx, qword [rsp+0x118+var_110]              ; CODE XREF=canonicalize_filename_mode+1295
0000000000002331         mov        rsi, qword [rsp+0x118+var_F8]
0000000000002336         mov        rdi, qword [rsp+0x118+var_108]
000000000000233b         call       seen_file                                   ; seen_file
0000000000002340         test       al, al
0000000000002342         je         loc_2400

0000000000002348         cmp        dword [rsp+0x118+var_114], 0x2
000000000000234d         je         loc_21b0

0000000000002353         call       j___errno_location                          ; __errno_location
0000000000002358         mov        edx, 0x28
000000000000235d         mov        r12, rax

                     loc_2360:
0000000000002360         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_250a+165
0000000000002365         mov        dword [rsp+0x118+var_114], edx
0000000000002369         call       j_free                                      ; free
000000000000236e         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000002371         call       j_free                                      ; free
0000000000002376         mov        edx, dword [rsp+0x118+var_114]

                     loc_237a:
000000000000237a         mov        rdi, qword [rsp+0x118+var_108]              ; CODE XREF=canonicalize_filename_mode+743
000000000000237f         mov        dword [rsp+0x118+var_114], edx
0000000000002383         call       hash_free                                   ; hash_free
0000000000002388         mov        edx, dword [rsp+0x118+var_114]

                     loc_238c:
000000000000238c         mov        dword [r12], edx                            ; CODE XREF=canonicalize_filename_mode+737
0000000000002390         xor        ebp, ebp
0000000000002392         jmp        loc_2210
0000000000002397         align      32

                     loc_23a0:
00000000000023a0         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+230
00000000000023a3         jmp        loc_20fa
00000000000023a8         align      16

                     loc_23b0:
00000000000023b0         cmp        byte [r14+1], 0x2e                          ; CODE XREF=canonicalize_filename_mode+299
00000000000023b5         jne        loc_2121

00000000000023bb         lea        rax, qword [rbp+1]
00000000000023bf         mov        r14, r13
00000000000023c2         cmp        r15, rax
00000000000023c5         jbe        loc_20ab

00000000000023cb         lea        rax, qword [r15-1]
00000000000023cf         cmp        rbp, rax
00000000000023d2         jae        loc_2619

00000000000023d8         cmp        byte [r15-2], 0x2f
00000000000023dd         mov        r15, rax
00000000000023e0         je         loc_20ab

                     loc_23e6:
00000000000023e6         sub        r15, 0x1                                    ; CODE XREF=canonicalize_filename_mode+1038
00000000000023ea         cmp        rbp, r15
00000000000023ed         je         loc_21b0

00000000000023f3         cmp        byte [r15-1], 0x2f
00000000000023f8         je         loc_21b0

00000000000023fe         jmp        loc_23e6

                     loc_2400:
0000000000002400         mov        rdx, qword [rsp+0x118+var_110]              ; CODE XREF=canonicalize_filename_mode+850
0000000000002405         mov        rsi, qword [rsp+0x118+var_F8]
000000000000240a         mov        rdi, qword [rsp+0x118+var_108]
000000000000240f         call       record_file                                 ; record_file
0000000000002414         mov        rsi, qword [rsp+0x118+var_A8]
0000000000002419         mov        rdi, rbp
000000000000241c         call       areadlink_with_size                         ; areadlink_with_size
0000000000002421         test       rax, rax
0000000000002424         mov        r14, rax
0000000000002427         je         loc_2592

000000000000242d         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000002430         call       j_strlen                                    ; strlen
0000000000002435         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000002438         mov        r12, rax
000000000000243b         mov        qword [rsp+0x118+var_F8], rax
0000000000002440         call       j_strlen                                    ; strlen
0000000000002445         cmp        qword [rsp+0x118+var_E8], 0x0
000000000000244b         mov        rdx, rax
000000000000244e         lea        rcx, qword [r12+rdx+1]
0000000000002453         je         loc_254f

0000000000002459         cmp        qword [rsp+0x118+var_E8], rcx
000000000000245e         jae        loc_2481

0000000000002460         mov        rdi, qword [rsp+0x118+var_F0]               ; argument #1 for method xrealloc
0000000000002465         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000002468         mov        qword [rsp+0x118+var_E0], rdx
000000000000246d         mov        qword [rsp+0x118+var_E8], rcx
0000000000002472         call       xrealloc                                    ; xrealloc
0000000000002477         mov        rdx, qword [rsp+0x118+var_E0]
000000000000247c         mov        qword [rsp+0x118+var_F0], rax

                     loc_2481:
0000000000002481         mov        r12, qword [rsp+0x118+var_F0]               ; CODE XREF=canonicalize_filename_mode+1134, sub_250a+113
0000000000002486         mov        rdi, qword [rsp+0x118+var_F8]
000000000000248b         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
000000000000248f         mov        rsi, r13                                    ; argument "__src" for method j_memmove
0000000000002492         add        rdi, r12                                    ; argument "__dest" for method j_memmove
0000000000002495         mov        r13, r12
0000000000002498         call       j_memmove                                   ; memmove
000000000000249d         mov        rdx, qword [rsp+0x118+var_F8]               ; argument "__n" for method j_memcpy
00000000000024a2         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
00000000000024a5         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
00000000000024a8         call       j_memcpy                                    ; memcpy
00000000000024ad         cmp        byte [r14], 0x2f
00000000000024b1         mov        qword [rsp+0x118+var_F8], r12
00000000000024b6         lea        rax, qword [rbp+1]
00000000000024ba         je         loc_25b4

00000000000024c0         cmp        r15, rax
00000000000024c3         ja         loc_25d2

                     loc_24c9:
00000000000024c9         mov        rdi, r14                                    ; argument "__ptr" for method j_free, CODE XREF=sub_250a+177, sub_250a+219, sub_250a+234, sub_250a+245
00000000000024cc         call       j_free                                      ; free
00000000000024d1         jmp        loc_21b0

                     loc_24d6:
00000000000024d6         lea        r8, qword [triple_free]                     ; triple_free, CODE XREF=canonicalize_filename_mode+822
00000000000024dd         lea        rcx, qword [triple_compare_ino_str]         ; triple_compare_ino_str
00000000000024e4         xor        esi, esi
00000000000024e6         lea        rdx, qword [triple_hash]                    ; triple_hash
00000000000024ed         mov        edi, 0x7
00000000000024f2         call       hash_initialize                             ; hash_initialize
00000000000024f7         test       rax, rax
00000000000024fa         mov        qword [rsp+0x118+var_108], rax
00000000000024ff         jne        loc_232c

0000000000002505         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_250a:
000000000000250a         nop        word [rax+rax]
                        ; endp

                     loc_2510:
0000000000002510         mov        edi, 0x1000                                 ; argument #1 for method xmalloc, CODE XREF=canonicalize_filename_mode+93
0000000000002515         call       xmalloc                                     ; xmalloc
000000000000251a         mov        rbp, rax
000000000000251d         lea        rbx, qword [rax+0x1000]
0000000000002524         lea        r15, qword [rax+1]
0000000000002528         mov        byte [rax], 0x2f
000000000000252b         jmp        loc_2081

                     loc_2530:
0000000000002530         mov        rdi, rbp                                    ; argument #1 for method xrealloc, CODE XREF=canonicalize_filename_mode+133
0000000000002533         mov        esi, 0x1000                                 ; argument #2 for method xrealloc
0000000000002538         call       xrealloc                                    ; xrealloc
000000000000253d         mov        rbp, rax
0000000000002540         add        r15, rax
0000000000002543         lea        rbx, qword [rax+0x1000]
000000000000254a         jmp        loc_2081

                     loc_254f:
000000000000254f         cmp        rcx, 0x1000                                 ; CODE XREF=canonicalize_filename_mode+1123
0000000000002556         mov        eax, 0x1000
000000000000255b         mov        qword [rsp+0x118+var_E0], rdx
0000000000002560         cmovae     rax, rcx
0000000000002564         mov        rdi, rax                                    ; argument #1 for method xmalloc
0000000000002567         mov        qword [rsp+0x118+var_E8], rax
000000000000256c         call       xmalloc                                     ; xmalloc
0000000000002571         mov        rdx, qword [rsp+0x118+var_E0]
0000000000002576         mov        qword [rsp+0x118+var_F0], rax
000000000000257b         jmp        loc_2481

                     loc_2580:
0000000000002580         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+62, canonicalize_filename_mode+74
0000000000002585         xor        ebp, ebp
0000000000002587         mov        dword [rax], 0x16
000000000000258d         jmp        loc_2210

                     loc_2592:
0000000000002592         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+1079
0000000000002597         cmp        dword [rsp+0x118+var_114], 0x2
000000000000259c         mov        r14, rax
000000000000259f         mov        edx, dword [rax]
00000000000025a1         jne        loc_25ac

00000000000025a3         cmp        edx, 0xc
00000000000025a6         jne        loc_21b0

                     loc_25ac:
00000000000025ac         mov        r12, r14                                    ; CODE XREF=sub_250a+151
00000000000025af         jmp        loc_2360

                     loc_25b4:
00000000000025b4         mov        byte [rbp], 0x2f                            ; CODE XREF=canonicalize_filename_mode+1226
00000000000025b8         mov        r15, rax
00000000000025bb         jmp        loc_24c9

                     loc_25c0:
00000000000025c0         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+85
00000000000025c5         xor        ebp, ebp
00000000000025c7         mov        dword [rax], 0x2
00000000000025cd         jmp        loc_2210

                     loc_25d2:
00000000000025d2         lea        rax, qword [r15-1]                          ; CODE XREF=canonicalize_filename_mode+1235
00000000000025d6         cmp        rbp, rax
00000000000025d9         jae        loc_25e2

00000000000025db         cmp        byte [r15-2], 0x2f
00000000000025e0         jne        loc_25ed

                     loc_25e2:
00000000000025e2         mov        r15, rax                                    ; CODE XREF=sub_250a+207
00000000000025e5         jmp        loc_24c9

                     loc_25ea:
00000000000025ea         mov        rax, r15                                    ; CODE XREF=sub_250a+251

                     loc_25ed:
00000000000025ed         lea        r15, qword [rax-1]                          ; CODE XREF=sub_250a+214
00000000000025f1         cmp        rbp, r15
00000000000025f4         je         loc_24c9

00000000000025fa         cmp        byte [r15-1], 0x2f
00000000000025ff         je         loc_24c9

0000000000002605         jmp        loc_25ea

                     loc_2607:
0000000000002607         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+442
000000000000260c         mov        edx, 0x14
0000000000002611         mov        r12, rax
0000000000002614         jmp        loc_22b1

                     loc_2619:
0000000000002619         mov        r15, rax                                    ; CODE XREF=canonicalize_filename_mode+994
000000000000261c         jmp        loc_20ab

                     loc_2621:
0000000000002621         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=canonicalize_filename_mode+564
                        ; endp
0000000000002626         align      16                                          ; End of unwind block (FDE at 0x7e34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002630         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x7e84), file_name
0000000000002637         ret
                        ; endp
0000000000002638         align      64                                          ; End of unwind block (FDE at 0x7e84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002640         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7e98), ignore_EPIPE
0000000000002647         ret
                        ; endp
0000000000002648         align      16                                          ; End of unwind block (FDE at 0x7e98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002650         push       rbp                                         ; Begin of unwind block (FDE at 0x7eac), DATA XREF=main+84
0000000000002651         push       rbx
0000000000002652         sub        rsp, 0x8
0000000000002656         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000265d         call       close_stream                                ; close_stream
0000000000002662         test       eax, eax
0000000000002664         je         loc_267c

0000000000002666         call       j___errno_location                          ; __errno_location
000000000000266b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002672         mov        rbx, rax
0000000000002675         je         loc_2693

0000000000002677         cmp        dword [rax], 0x20
000000000000267a         jne        loc_2693

                     loc_267c:
000000000000267c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002683         call       close_stream                                ; close_stream
0000000000002688         test       eax, eax
000000000000268a         jne        loc_26d2

000000000000268c         add        rsp, 0x8
0000000000002690         pop        rbx
0000000000002691         pop        rbp
0000000000002692         ret
                        ; endp

                     loc_2693:
0000000000002693         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000269a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000269c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026a1         call       j_dcgettext                                 ; dcgettext
00000000000026a6         mov        rdi, qword [file_name]                      ; file_name
00000000000026ad         mov        rbp, rax
00000000000026b0         test       rdi, rdi
00000000000026b3         je         loc_26dd

00000000000026b5         call       quotearg_colon                              ; quotearg_colon
00000000000026ba         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000026bc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000026c3         mov        rcx, rax
00000000000026c6         mov        r8, rbp
00000000000026c9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026cb         xor        eax, eax
00000000000026cd         call       j_error                                     ; error

                     loc_26d2:
00000000000026d2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000026d8         call       j__exit                                     ; _exit
                        ; endp

                     loc_26dd:
00000000000026dd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000026df         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6fdb
00000000000026e6         mov        rcx, rax
00000000000026e9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026eb         xor        eax, eax
00000000000026ed         call       j_error                                     ; error
00000000000026f2         jmp        loc_26d2
00000000000026f4         align      256                                         ; End of unwind block (FDE at 0x7eac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     record_file:
0000000000002700         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7edc), CODE XREF=canonicalize_filename_mode+1055
0000000000002703         je         loc_2780

0000000000002705         push       r13
0000000000002707         push       r12
0000000000002709         mov        r13, rdi
000000000000270c         push       rbp
000000000000270d         push       rbx
000000000000270e         mov        r12, rsi
0000000000002711         mov        edi, 0x18                                   ; argument #1 for method xmalloc
0000000000002716         mov        rbp, rdx
0000000000002719         sub        rsp, 0x8
000000000000271d         call       xmalloc                                     ; xmalloc
0000000000002722         mov        rdi, r12
0000000000002725         mov        rbx, rax
0000000000002728         call       xstrdup                                     ; xstrdup
000000000000272d         mov        qword [rbx], rax
0000000000002730         mov        rax, qword [rbp+8]
0000000000002734         mov        rsi, rbx
0000000000002737         mov        rdi, r13
000000000000273a         mov        qword [rbx+8], rax
000000000000273e         mov        rax, qword [rbp]
0000000000002742         mov        qword [rbx+0x10], rax
0000000000002746         call       hash_insert                                 ; hash_insert
000000000000274b         test       rax, rax
000000000000274e         je         loc_2782

0000000000002750         cmp        rbx, rax
0000000000002753         je         loc_2770

0000000000002755         add        rsp, 0x8
0000000000002759         mov        rdi, rbx
000000000000275c         pop        rbx
000000000000275d         pop        rbp
000000000000275e         pop        r12
0000000000002760         pop        r13
0000000000002762         jmp        triple_free                                 ; triple_free
                        ; endp
0000000000002767         align      16

                     loc_2770:
0000000000002770         add        rsp, 0x8                                    ; CODE XREF=record_file+83
0000000000002774         pop        rbx
0000000000002775         pop        rbp
0000000000002776         pop        r12
0000000000002778         pop        r13
000000000000277a         ret
                        ; endp
000000000000277b         align      128

                     loc_2780:
0000000000002780         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_2782:
0000000000002782         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_2787:
0000000000002787         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7edc)
                     seen_file:
0000000000002790         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x7f3c), CODE XREF=canonicalize_filename_mode+843
0000000000002794         mov        rax, qword [fs:0x28]
000000000000279d         mov        qword [rsp+0x28+var_10], rax
00000000000027a2         xor        eax, eax
00000000000027a4         test       rdi, rdi
00000000000027a7         je         loc_27cc

00000000000027a9         mov        rax, qword [rdx+8]
00000000000027ad         mov        qword [rsp+0x28+var_28], rsi
00000000000027b1         mov        rsi, rsp
00000000000027b4         mov        qword [rsp+0x28+var_20], rax
00000000000027b9         mov        rax, qword [rdx]
00000000000027bc         mov        qword [rsp+0x28+var_18], rax
00000000000027c1         call       hash_lookup                                 ; hash_lookup
00000000000027c6         test       rax, rax
00000000000027c9         setne      al

                     loc_27cc:
00000000000027cc         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
00000000000027d1         xor        rcx, qword [fs:0x28]
00000000000027da         jne        loc_27e1

00000000000027dc         add        rsp, 0x28
00000000000027e0         ret
                        ; endp

                     loc_27e1:
00000000000027e1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
00000000000027e6         align      16                                          ; End of unwind block (FDE at 0x7f3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
00000000000027f0         cmp        rdi, 0xa                                    ; Begin of unwind block (FDE at 0x7f5c), CODE XREF=hash_initialize+123, hash_rehash+123
00000000000027f4         mov        eax, 0xa
00000000000027f9         movabs     r9, 0xaaaaaaaaaaaaaaab
0000000000002803         cmovb      rdi, rax
0000000000002807         or         rdi, 0x1
000000000000280b         cmp        rdi, 0xffffffffffffffff
000000000000280f         je         loc_287f

0000000000002811         nop        dword [rax]

                     loc_2818:
0000000000002818         mov        rax, rdi                                    ; CODE XREF=next_prime+141
000000000000281b         mov        rcx, rdi
000000000000281e         mul        r9
0000000000002821         mov        rax, rdx
0000000000002824         shr        rax, 0x1
0000000000002827         lea        rax, qword [rax+rax*2]
000000000000282b         sub        rcx, rax
000000000000282e         cmp        rdi, 0x9
0000000000002832         mov        rax, rcx
0000000000002835         jbe        loc_2870

0000000000002837         test       rcx, rcx
000000000000283a         je         loc_2875

000000000000283c         mov        r8d, 0x10
0000000000002842         mov        esi, 0x9
0000000000002847         mov        ecx, 0x3
000000000000284c         jmp        loc_2859
000000000000284e         align      16

                     loc_2850:
0000000000002850         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000002854         test       rdx, rdx
0000000000002857         je         loc_2875

                     loc_2859:
0000000000002859         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000285d         xor        edx, edx
000000000000285f         mov        rax, rdi
0000000000002862         div        rcx
0000000000002865         add        rsi, r8
0000000000002868         cmp        rsi, rdi
000000000000286b         mov        rax, rdx
000000000000286e         jb         loc_2850

                     loc_2870:
0000000000002870         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000002873         jne        loc_287f

                     loc_2875:
0000000000002875         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000002879         cmp        rdi, 0xffffffffffffffff
000000000000287d         jne        loc_2818

                     loc_287f:
000000000000287f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000002882         ret
                        ; endp
0000000000002883         align      16                                          ; End of unwind block (FDE at 0x7f5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000002890         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7f70), DATA XREF=hash_initialize+4
0000000000002893         xor        edx, edx
0000000000002895         ror        rax, 0x3
0000000000002899         div        rsi
000000000000289c         mov        rax, rdx
000000000000289f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
00000000000028a0         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0x7f70), Begin of unwind block (FDE at 0x7f84), DATA XREF=hash_initialize+48
00000000000028a3         sete       al
00000000000028a6         ret
                        ; endp
00000000000028a7         align      16                                          ; End of unwind block (FDE at 0x7f84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
00000000000028b0         push       rbx                                         ; Begin of unwind block (FDE at 0x7f98), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
00000000000028b1         mov        rbx, rdi
00000000000028b4         mov        rdi, rsi
00000000000028b7         mov        rsi, qword [rbx+0x10]
00000000000028bb         call       qword [rbx+0x30]
00000000000028be         cmp        qword [rbx+0x10], rax
00000000000028c2         jbe        loc_28cd

00000000000028c4         shl        rax, 0x4
00000000000028c8         add        rax, qword [rbx]
00000000000028cb         pop        rbx
00000000000028cc         ret
                        ; endp

                     loc_28cd:
00000000000028cd         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
00000000000028d2         align      32                                          ; End of unwind block (FDE at 0x7f98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
00000000000028e0         push       r14                                         ; Begin of unwind block (FDE at 0x7fb4), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
00000000000028e2         push       r13
00000000000028e4         mov        r14, rdx
00000000000028e7         push       r12
00000000000028e9         push       rbp
00000000000028ea         mov        r12, rdi
00000000000028ed         push       rbx
00000000000028ee         mov        rbp, rsi
00000000000028f1         mov        r13d, ecx
00000000000028f4         call       safe_hasher                                 ; safe_hasher
00000000000028f9         mov        qword [r14], rax
00000000000028fc         mov        rsi, qword [rax]
00000000000028ff         test       rsi, rsi
0000000000002902         je         loc_29f0

0000000000002908         cmp        rsi, rbp
000000000000290b         mov        rbx, rax
000000000000290e         je         loc_29a3

0000000000002914         mov        rdi, rbp
0000000000002917         call       qword [r12+0x38]
000000000000291c         test       al, al
000000000000291e         jne        loc_29a0

0000000000002924         mov        rax, qword [rbx+8]
0000000000002928         test       rax, rax
000000000000292b         je         loc_29f0

0000000000002931         mov        rsi, qword [rax]
0000000000002934         cmp        rbp, rsi
0000000000002937         jne        loc_2959

0000000000002939         jmp        loc_296c
000000000000293b         align      64

                     loc_2940:
0000000000002940         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
0000000000002944         mov        rax, qword [rbx+8]
0000000000002948         test       rax, rax
000000000000294b         je         loc_29f0

0000000000002951         mov        rsi, qword [rax]
0000000000002954         cmp        rsi, rbp
0000000000002957         je         loc_296c

                     loc_2959:
0000000000002959         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000295c         call       qword [r12+0x38]
0000000000002961         test       al, al
0000000000002963         je         loc_2940

0000000000002965         mov        rax, qword [rbx+8]
0000000000002969         mov        rsi, qword [rax]

                     loc_296c:
000000000000296c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000296f         je         loc_298e

0000000000002971         mov        rdx, qword [rax+8]
0000000000002975         mov        qword [rbx+8], rdx
0000000000002979         mov        qword [rax], 0x0
0000000000002980         mov        rdx, qword [r12+0x48]
0000000000002985         mov        qword [rax+8], rdx
0000000000002989         mov        qword [r12+0x48], rax

                     loc_298e:
000000000000298e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000298f         mov        rax, rsi
0000000000002992         pop        rbp
0000000000002993         pop        r12
0000000000002995         pop        r13
0000000000002997         pop        r14
0000000000002999         ret
                        ; endp
000000000000299a         align      32

                     loc_29a0:
00000000000029a0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_29a3:
00000000000029a3         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
00000000000029a6         je         loc_298e

00000000000029a8         mov        rax, qword [rbx+8]
00000000000029ac         test       rax, rax
00000000000029af         je         loc_29e0

00000000000029b1         movdqu     xmm0, xmmword [rax]
00000000000029b5         movups     xmmword [rbx], xmm0
00000000000029b8         mov        qword [rax], 0x0
00000000000029bf         mov        rdx, qword [r12+0x48]
00000000000029c4         mov        qword [rax+8], rdx
00000000000029c8         mov        qword [r12+0x48], rax
00000000000029cd         mov        rax, rsi
00000000000029d0         pop        rbx
00000000000029d1         pop        rbp
00000000000029d2         pop        r12
00000000000029d4         pop        r13
00000000000029d6         pop        r14
00000000000029d8         ret
                        ; endp
00000000000029d9         align      32

                     loc_29e0:
00000000000029e0         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
00000000000029e7         jmp        loc_298e
00000000000029e9         align      16

                     loc_29f0:
00000000000029f0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
00000000000029f2         pop        rbx
00000000000029f3         mov        rax, rsi
00000000000029f6         pop        rbp
00000000000029f7         pop        r12
00000000000029f9         pop        r13
00000000000029fb         pop        r14
00000000000029fd         ret
                        ; endp
00000000000029fe         align      512                                         ; End of unwind block (FDE at 0x7fb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
0000000000002a00         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0x8014), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
0000000000002a03         lea        rcx, qword [default_tuning]                 ; default_tuning
0000000000002a0a         mov        eax, 0x1
0000000000002a0f         cmp        rdx, rcx
0000000000002a12         je         loc_2a75

0000000000002a14         movss      xmm0, dword [rdx+8]
0000000000002a19         ucomiss    xmm0, dword [float_7064]                    ; float_7064
0000000000002a20         jbe        loc_2a70

0000000000002a22         movss      xmm1, dword [float_7068]                    ; float_7068
0000000000002a2a         ucomiss    xmm1, xmm0
0000000000002a2d         jbe        loc_2a70

0000000000002a2f         movss      xmm1, dword [rdx+0xc]
0000000000002a34         ucomiss    xmm1, dword [float_706c]                    ; float_706c
0000000000002a3b         jbe        loc_2a70

0000000000002a3d         movss      xmm1, dword [rdx]
0000000000002a41         ucomiss    xmm1, dword [float_7070]                    ; float_7070
0000000000002a48         jb         loc_2a70

0000000000002a4a         addss      xmm1, dword [float_7064]                    ; float_7064
0000000000002a52         movss      xmm2, dword [rdx+4]
0000000000002a57         ucomiss    xmm2, xmm1
0000000000002a5a         jbe        loc_2a70

0000000000002a5c         movss      xmm3, dword [float_7074]                    ; float_7074
0000000000002a64         ucomiss    xmm3, xmm2
0000000000002a67         jb         loc_2a70

0000000000002a69         ucomiss    xmm0, xmm1
0000000000002a6c         ja         loc_2a75

0000000000002a6e         nop

                     loc_2a70:
0000000000002a70         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000002a73         xor        eax, eax

                     loc_2a75:
0000000000002a75         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000002a77         align      128                                         ; End of unwind block (FDE at 0x8014)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000002a80         push       r15                                         ; Begin of unwind block (FDE at 0x8028), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000002a82         push       r14
0000000000002a84         push       r13
0000000000002a86         push       r12
0000000000002a88         push       rbp
0000000000002a89         push       rbx
0000000000002a8a         sub        rsp, 0x8
0000000000002a8e         mov        r12, qword [rsi]
0000000000002a91         cmp        r12, qword [rsi+8]
0000000000002a95         jae        loc_2b78

0000000000002a9b         mov        rbp, rdi
0000000000002a9e         mov        r13, rsi
0000000000002aa1         mov        r14d, edx
0000000000002aa4         nop        dword [rax]

                     loc_2aa8:
0000000000002aa8         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
0000000000002aac         test       r15, r15
0000000000002aaf         je         loc_2b6a

0000000000002ab5         mov        rbx, qword [r12+8]
0000000000002aba         test       rbx, rbx
0000000000002abd         jne        loc_2adc

0000000000002abf         jmp        loc_2b1b
0000000000002ac1         align      8

                     loc_2ac8:
0000000000002ac8         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
0000000000002acc         test       rdx, rdx
0000000000002acf         mov        qword [rbx+8], rcx
0000000000002ad3         mov        qword [rax+8], rbx
0000000000002ad7         mov        rbx, rdx
0000000000002ada         je         loc_2b17

                     loc_2adc:
0000000000002adc         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
0000000000002adf         mov        rdi, rbp
0000000000002ae2         mov        rsi, r15
0000000000002ae5         call       safe_hasher                                 ; safe_hasher
0000000000002aea         cmp        qword [rax], 0x0
0000000000002aee         mov        rdx, qword [rbx+8]
0000000000002af2         jne        loc_2ac8

0000000000002af4         mov        qword [rax], r15
0000000000002af7         add        qword [rbp+0x18], 0x1
0000000000002afc         test       rdx, rdx
0000000000002aff         mov        qword [rbx], 0x0
0000000000002b06         mov        rax, qword [rbp+0x48]
0000000000002b0a         mov        qword [rbx+8], rax
0000000000002b0e         mov        qword [rbp+0x48], rbx
0000000000002b12         mov        rbx, rdx
0000000000002b15         jne        loc_2adc

                     loc_2b17:
0000000000002b17         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_2b1b:
0000000000002b1b         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
0000000000002b1e         mov        qword [r12+8], 0x0
0000000000002b27         jne        loc_2b6a

0000000000002b29         mov        rsi, r15
0000000000002b2c         mov        rdi, rbp
0000000000002b2f         call       safe_hasher                                 ; safe_hasher
0000000000002b34         cmp        qword [rax], 0x0
0000000000002b38         mov        rbx, rax
0000000000002b3b         je         loc_2b90

0000000000002b3d         mov        rax, qword [rbp+0x48]
0000000000002b41         test       rax, rax
0000000000002b44         je         loc_2ba0

0000000000002b46         mov        rdx, qword [rax+8]
0000000000002b4a         mov        qword [rbp+0x48], rdx

                     loc_2b4e:
0000000000002b4e         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
0000000000002b52         mov        qword [rax], r15
0000000000002b55         mov        qword [rax+8], rdx
0000000000002b59         mov        qword [rbx+8], rax

                     loc_2b5d:
0000000000002b5d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
0000000000002b65         sub        qword [r13+0x18], 0x1

                     loc_2b6a:
0000000000002b6a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
0000000000002b6e         cmp        qword [r13+8], r12
0000000000002b72         ja         loc_2aa8

                     loc_2b78:
0000000000002b78         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
0000000000002b7c         mov        eax, 0x1
0000000000002b81         pop        rbx
0000000000002b82         pop        rbp
0000000000002b83         pop        r12
0000000000002b85         pop        r13
0000000000002b87         pop        r14
0000000000002b89         pop        r15
0000000000002b8b         ret
                        ; endp
0000000000002b8c         align      16

                     loc_2b90:
0000000000002b90         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000002b93         add        qword [rbp+0x18], 0x1
0000000000002b98         jmp        loc_2b5d
0000000000002b9a         align      32

                     loc_2ba0:
0000000000002ba0         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000002ba5         call       j_malloc                                    ; malloc
0000000000002baa         test       rax, rax
0000000000002bad         jne        loc_2b4e

0000000000002baf         add        rsp, 0x8
0000000000002bb3         xor        eax, eax
0000000000002bb5         pop        rbx
0000000000002bb6         pop        rbp
0000000000002bb7         pop        r12
0000000000002bb9         pop        r13
0000000000002bbb         pop        r14
0000000000002bbd         pop        r15
0000000000002bbf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000002bc0         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0x8028), Begin of unwind block (FDE at 0x8088)
0000000000002bc4         ret
                        ; endp
0000000000002bc5         align      16                                          ; End of unwind block (FDE at 0x8088)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000002bd0         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x809c)
0000000000002bd4         ret
                        ; endp
0000000000002bd5         align      32                                          ; End of unwind block (FDE at 0x809c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
0000000000002be0         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0x80b0)
0000000000002be4         ret
                        ; endp
0000000000002be5         align      16                                          ; End of unwind block (FDE at 0x80b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
0000000000002bf0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x80c4)
0000000000002bf3         mov        rdi, qword [rdi+8]
0000000000002bf7         xor        eax, eax
0000000000002bf9         cmp        rsi, rdi
0000000000002bfc         jae        loc_2c37

0000000000002bfe         nop

                     loc_2c00:
0000000000002c00         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
0000000000002c04         je         loc_2c2c

0000000000002c06         mov        rdx, qword [rsi+8]
0000000000002c0a         mov        ecx, 0x1
0000000000002c0f         test       rdx, rdx
0000000000002c12         je         loc_2c25

0000000000002c14         nop        dword [rax]

                     loc_2c18:
0000000000002c18         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
0000000000002c1c         add        rcx, 0x1
0000000000002c20         test       rdx, rdx
0000000000002c23         jne        loc_2c18

                     loc_2c25:
0000000000002c25         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
0000000000002c28         cmovb      rax, rcx

                     loc_2c2c:
0000000000002c2c         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
0000000000002c30         cmp        rsi, rdi
0000000000002c33         jb         loc_2c00

0000000000002c35         ret
                        ; endp

                     loc_2c37:
0000000000002c37         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
0000000000002c39         align      64                                          ; End of unwind block (FDE at 0x80c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
0000000000002c40         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x80d8)
0000000000002c43         mov        r8, qword [rdi+8]
0000000000002c47         xor        edx, edx
0000000000002c49         xor        esi, esi
0000000000002c4b         cmp        rcx, r8
0000000000002c4e         jae        loc_2c86

                     loc_2c50:
0000000000002c50         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
0000000000002c54         je         loc_2c7d

0000000000002c56         mov        rax, qword [rcx+8]
0000000000002c5a         add        rsi, 0x1
0000000000002c5e         add        rdx, 0x1
0000000000002c62         test       rax, rax
0000000000002c65         je         loc_2c7d

0000000000002c67         nop        word [rax+rax]

                     loc_2c70:
0000000000002c70         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
0000000000002c74         add        rdx, 0x1
0000000000002c78         test       rax, rax
0000000000002c7b         jne        loc_2c70

                     loc_2c7d:
0000000000002c7d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
0000000000002c81         cmp        rcx, r8
0000000000002c84         jb         loc_2c50

                     loc_2c86:
0000000000002c86         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
0000000000002c88         cmp        qword [rdi+0x18], rsi
0000000000002c8c         je         loc_2c90

0000000000002c8e         ret
                        ; endp

                     loc_2c90:
0000000000002c90         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000002c94         sete       al
0000000000002c97         ret
                        ; endp
0000000000002c98         align      32                                          ; End of unwind block (FDE at 0x80d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000002ca0         push       r13                                         ; Begin of unwind block (FDE at 0x80ec)
0000000000002ca2         push       r12
0000000000002ca4         mov        r12, rsi
0000000000002ca7         push       rbp
0000000000002ca8         push       rbx
0000000000002ca9         xor        ebx, ebx
0000000000002cab         sub        rsp, 0x8
0000000000002caf         mov        rsi, qword [rdi]
0000000000002cb2         mov        rcx, qword [rdi+0x20]
0000000000002cb6         mov        rbp, qword [rdi+0x10]
0000000000002cba         mov        r13, qword [rdi+0x18]
0000000000002cbe         mov        rdi, qword [rdi+8]
0000000000002cc2         cmp        rsi, rdi
0000000000002cc5         jae        loc_2d05

0000000000002cc7         nop        word [rax+rax]

                     loc_2cd0:
0000000000002cd0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000002cd4         je         loc_2cfc

0000000000002cd6         mov        rax, qword [rsi+8]
0000000000002cda         mov        edx, 0x1
0000000000002cdf         test       rax, rax
0000000000002ce2         je         loc_2cf5

0000000000002ce4         nop        dword [rax]

                     loc_2ce8:
0000000000002ce8         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
0000000000002cec         add        rdx, 0x1
0000000000002cf0         test       rax, rax
0000000000002cf3         jne        loc_2ce8

                     loc_2cf5:
0000000000002cf5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
0000000000002cf8         cmovb      rbx, rdx

                     loc_2cfc:
0000000000002cfc         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
0000000000002d00         cmp        rsi, rdi
0000000000002d03         jb         loc_2cd0

                     loc_2d05:
0000000000002d05         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
0000000000002d0c         mov        esi, 0x1
0000000000002d11         mov        rdi, r12
0000000000002d14         xor        eax, eax
0000000000002d16         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002d1b         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
0000000000002d22         xor        eax, eax
0000000000002d24         mov        rcx, rbp
0000000000002d27         mov        esi, 0x1
0000000000002d2c         mov        rdi, r12
0000000000002d2f         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002d34         test       r13, r13
0000000000002d37         js         loc_2da0

0000000000002d39         pxor       xmm0, xmm0
0000000000002d3d         test       rbp, rbp
0000000000002d40         cvtsi2sd   xmm0, r13
0000000000002d45         mulsd      xmm0, qword [float_7080+8]                  ; 0x7088
0000000000002d4d         js         loc_2dc9

                     loc_2d4f:
0000000000002d4f         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
0000000000002d53         cvtsi2sd   xmm1, rbp

                     loc_2d58:
0000000000002d58         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
0000000000002d5c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
0000000000002d63         mov        rcx, r13
0000000000002d66         mov        rdi, r12
0000000000002d69         mov        esi, 0x1
0000000000002d6e         mov        eax, 0x1
0000000000002d73         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002d78         add        rsp, 0x8
0000000000002d7c         mov        rcx, rbx
0000000000002d7f         mov        rdi, r12
0000000000002d82         pop        rbx
0000000000002d83         pop        rbp
0000000000002d84         pop        r12
0000000000002d86         pop        r13
0000000000002d88         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
0000000000002d8f         mov        esi, 0x1
0000000000002d94         xor        eax, eax
0000000000002d96         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000002d9b         align      32

                     loc_2da0:
0000000000002da0         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000002da3         mov        rdx, r13
0000000000002da6         pxor       xmm0, xmm0
0000000000002daa         shr        rax, 0x1
0000000000002dad         and        edx, 0x1
0000000000002db0         or         rax, rdx
0000000000002db3         test       rbp, rbp
0000000000002db6         cvtsi2sd   xmm0, rax
0000000000002dbb         addsd      xmm0, xmm0
0000000000002dbf         mulsd      xmm0, qword [float_7080+8]                  ; 0x7088
0000000000002dc7         jns        loc_2d4f

                     loc_2dc9:
0000000000002dc9         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
0000000000002dcc         pxor       xmm1, xmm1
0000000000002dd0         shr        rax, 0x1
0000000000002dd3         and        ebp, 0x1
0000000000002dd6         or         rax, rbp
0000000000002dd9         cvtsi2sd   xmm1, rax
0000000000002dde         addsd      xmm1, xmm1
0000000000002de2         jmp        loc_2d58
0000000000002de7         align      16                                          ; End of unwind block (FDE at 0x80ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
0000000000002df0         push       r12                                         ; Begin of unwind block (FDE at 0x8128), CODE XREF=seen_file+49
0000000000002df2         push       rbp
0000000000002df3         mov        r12, rdi
0000000000002df6         push       rbx
0000000000002df7         mov        rbp, rsi
0000000000002dfa         call       safe_hasher                                 ; safe_hasher
0000000000002dff         mov        rsi, qword [rax]
0000000000002e02         test       rsi, rsi
0000000000002e05         je         loc_2e2d

0000000000002e07         mov        rbx, rax
0000000000002e0a         jmp        loc_2e13
0000000000002e0c         align      16

                     loc_2e10:
0000000000002e10         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_2e13:
0000000000002e13         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
0000000000002e16         je         loc_2e2f

0000000000002e18         mov        rdi, rbp
0000000000002e1b         call       qword [r12+0x38]
0000000000002e20         test       al, al
0000000000002e22         jne        loc_2e40

0000000000002e24         mov        rbx, qword [rbx+8]
0000000000002e28         test       rbx, rbx
0000000000002e2b         jne        loc_2e10

                     loc_2e2d:
0000000000002e2d         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_2e2f:
0000000000002e2f         pop        rbx                                         ; CODE XREF=hash_lookup+38
0000000000002e30         mov        rax, rsi
0000000000002e33         pop        rbp
0000000000002e34         pop        r12
0000000000002e36         ret
                        ; endp
0000000000002e37         align      64

                     loc_2e40:
0000000000002e40         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
0000000000002e43         pop        rbx
0000000000002e44         pop        rbp
0000000000002e45         mov        rax, rsi
0000000000002e48         pop        r12
0000000000002e4a         ret
                        ; endp
0000000000002e4b         align      16                                          ; End of unwind block (FDE at 0x8128)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
0000000000002e50         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x8160)
0000000000002e55         je         loc_2e83

0000000000002e57         mov        rdx, qword [rdi]
0000000000002e5a         mov        rcx, qword [rdi+8]
0000000000002e5e         cmp        rdx, rcx
0000000000002e61         jae        loc_2e88

0000000000002e63         mov        rax, qword [rdx]
0000000000002e66         test       rax, rax
0000000000002e69         jne        loc_2e86

0000000000002e6b         nop        dword [rax+rax]

                     loc_2e70:
0000000000002e70         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
0000000000002e74         cmp        rdx, rcx
0000000000002e77         jae        loc_2e88

0000000000002e79         mov        rax, qword [rdx]
0000000000002e7c         test       rax, rax
0000000000002e7f         je         loc_2e70

0000000000002e81         ret
                        ; endp

                     loc_2e83:
0000000000002e83         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
0000000000002e85         ret
                        ; endp

                     loc_2e86:
0000000000002e86         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_2e88:
0000000000002e88         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
0000000000002e8c         call       j_abort                                     ; abort
                        ; endp
0000000000002e91         align      32                                          ; End of unwind block (FDE at 0x8160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000002ea0         push       rbp                                         ; Begin of unwind block (FDE at 0x8174)
0000000000002ea1         push       rbx
0000000000002ea2         mov        rbp, rdi
0000000000002ea5         mov        rbx, rsi
0000000000002ea8         sub        rsp, 0x8
0000000000002eac         call       safe_hasher                                 ; safe_hasher
0000000000002eb1         mov        rdx, rax
0000000000002eb4         mov        rcx, rax
0000000000002eb7         mov        rax, qword [rdx]
0000000000002eba         mov        rdx, qword [rdx+8]
0000000000002ebe         cmp        rax, rbx
0000000000002ec1         je         loc_2ed9

0000000000002ec3         nop        dword [rax+rax]

                     loc_2ec8:
0000000000002ec8         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
0000000000002ecb         je         loc_2ede

0000000000002ecd         mov        rax, qword [rdx]
0000000000002ed0         mov        rdx, qword [rdx+8]
0000000000002ed4         cmp        rax, rbx
0000000000002ed7         jne        loc_2ec8

                     loc_2ed9:
0000000000002ed9         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
0000000000002edc         jne        loc_2f08

                     loc_2ede:
0000000000002ede         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
0000000000002ee2         jmp        loc_2ef0
0000000000002ee4         align      8

                     loc_2ee8:
0000000000002ee8         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
0000000000002eeb         test       rax, rax
0000000000002eee         jne        loc_2efb

                     loc_2ef0:
0000000000002ef0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
0000000000002ef4         cmp        rdx, rcx
0000000000002ef7         ja         loc_2ee8

0000000000002ef9         xor        eax, eax

                     loc_2efb:
0000000000002efb         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
0000000000002eff         pop        rbx
0000000000002f00         pop        rbp
0000000000002f01         ret
                        ; endp
0000000000002f02         align      8

                     loc_2f08:
0000000000002f08         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
0000000000002f0b         add        rsp, 0x8
0000000000002f0f         pop        rbx
0000000000002f10         pop        rbp
0000000000002f11         ret
                        ; endp
0000000000002f12         align      32                                          ; End of unwind block (FDE at 0x8174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
0000000000002f20         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0x81a8)
0000000000002f23         cmp        qword [rdi+8], r9
0000000000002f27         jbe        loc_2f82

0000000000002f29         xor        r8d, r8d

                     loc_2f2c:
0000000000002f2c         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
0000000000002f2f         test       rcx, rcx
0000000000002f32         je         loc_2f6d

0000000000002f34         cmp        rdx, r8
0000000000002f37         jbe        loc_2f77

0000000000002f39         mov        qword [rsi+r8*8], rcx
0000000000002f3d         mov        rcx, qword [r9+8]
0000000000002f41         lea        rax, qword [r8+1]
0000000000002f45         test       rcx, rcx
0000000000002f48         je         loc_2f6a

0000000000002f4a         nop        word [rax+rax]

                     loc_2f50:
0000000000002f50         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
0000000000002f53         je         loc_2f80

0000000000002f55         mov        r8, qword [rcx]
0000000000002f58         add        rax, 0x1
0000000000002f5c         mov        qword [rsi+rax*8-8], r8
0000000000002f61         mov        rcx, qword [rcx+8]
0000000000002f65         test       rcx, rcx
0000000000002f68         jne        loc_2f50

                     loc_2f6a:
0000000000002f6a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_2f6d:
0000000000002f6d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
0000000000002f71         cmp        qword [rdi+8], r9
0000000000002f75         ja         loc_2f2c

                     loc_2f77:
0000000000002f77         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
0000000000002f7a         ret
                        ; endp
0000000000002f7b         align      128

                     loc_2f80:
0000000000002f80         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_2f82:
0000000000002f82         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
0000000000002f84         ret
                        ; endp
0000000000002f85         align      16                                          ; End of unwind block (FDE at 0x81a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000002f90         push       r15                                         ; Begin of unwind block (FDE at 0x81bc)
0000000000002f92         push       r14
0000000000002f94         push       r13
0000000000002f96         push       r12
0000000000002f98         push       rbp
0000000000002f99         push       rbx
0000000000002f9a         sub        rsp, 0x8
0000000000002f9e         mov        r14, qword [rdi]
0000000000002fa1         cmp        qword [rdi+8], r14
0000000000002fa5         jbe        loc_2ff6

0000000000002fa7         mov        r13, rdx
0000000000002faa         mov        r12, rsi
0000000000002fad         mov        r15, rdi
0000000000002fb0         xor        ebp, ebp

                     loc_2fb2:
0000000000002fb2         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000002fb5         test       rdi, rdi
0000000000002fb8         je         loc_2fda

0000000000002fba         mov        rbx, r14
0000000000002fbd         jmp        loc_2fc3
0000000000002fbf         align      64

                     loc_2fc0:
0000000000002fc0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_2fc3:
0000000000002fc3         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
0000000000002fc6         call       r12
0000000000002fc9         test       al, al
0000000000002fcb         je         loc_2fe4

0000000000002fcd         mov        rbx, qword [rbx+8]
0000000000002fd1         add        rbp, 0x1
0000000000002fd5         test       rbx, rbx
0000000000002fd8         jne        loc_2fc0

                     loc_2fda:
0000000000002fda         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
0000000000002fde         cmp        qword [r15+8], r14
0000000000002fe2         ja         loc_2fb2

                     loc_2fe4:
0000000000002fe4         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
0000000000002fe8         mov        rax, rbp
0000000000002feb         pop        rbx
0000000000002fec         pop        rbp
0000000000002fed         pop        r12
0000000000002fef         pop        r13
0000000000002ff1         pop        r14
0000000000002ff3         pop        r15
0000000000002ff5         ret
                        ; endp

                     loc_2ff6:
0000000000002ff6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
0000000000002ff8         jmp        loc_2fe4
0000000000002ffa         align      4096                                        ; End of unwind block (FDE at 0x81bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
0000000000003000         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0x8208)
0000000000003003         xor        edx, edx
0000000000003005         test       cl, cl
0000000000003007         je         loc_302d

0000000000003009         nop        dword [rax]

                     loc_3010:
0000000000003010         mov        rax, rdx                                    ; CODE XREF=hash_string+43
0000000000003013         add        rdi, 0x1
0000000000003017         shl        rax, 0x5
000000000000301b         sub        rax, rdx
000000000000301e         xor        edx, edx
0000000000003020         add        rax, rcx
0000000000003023         movzx      ecx, byte [rdi]
0000000000003026         div        rsi
0000000000003029         test       cl, cl
000000000000302b         jne        loc_3010

                     loc_302d:
000000000000302d         mov        rax, rdx                                    ; CODE XREF=hash_string+7
0000000000003030         ret
                        ; endp
0000000000003031         align      64                                          ; End of unwind block (FDE at 0x8208)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
0000000000003040         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0x821c)
000000000000304a         mov        byte [rdi+0x10], 0x0
000000000000304e         mov        qword [rdi], rax
0000000000003051         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000305b         mov        qword [rdi+8], rax
000000000000305f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
0000000000003060         push       r15                                         ; End of unwind block (FDE at 0x821c), Begin of unwind block (FDE at 0x8230), CODE XREF=canonicalize_filename_mode+1282
0000000000003062         push       r14
0000000000003064         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000306b         push       r13
000000000000306d         push       r12
000000000000306f         mov        r12, rdx
0000000000003072         push       rbp
0000000000003073         push       rbx
0000000000003074         mov        r13, rcx
0000000000003077         mov        rbp, rdi
000000000000307a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
000000000000307f         mov        r15, rsi
0000000000003082         sub        rsp, 0x8
0000000000003086         test       rdx, rdx
0000000000003089         mov        r14, r8
000000000000308c         cmove      r12, rax
0000000000003090         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000003097         test       rcx, rcx
000000000000309a         cmove      r13, rax
000000000000309e         call       j_malloc                                    ; malloc
00000000000030a3         test       rax, rax
00000000000030a6         mov        rbx, rax
00000000000030a9         je         loc_315a

00000000000030af         test       r15, r15
00000000000030b2         lea        rdi, qword [rax+0x28]
00000000000030b6         je         loc_3170

00000000000030bc         mov        qword [rax+0x28], r15
00000000000030c0         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000030c5         test       al, al
00000000000030c7         je         loc_3150

00000000000030cd         cmp        byte [r15+0x10], 0x0
00000000000030d2         je         loc_31d0

                     loc_30d8:
00000000000030d8         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
00000000000030db         call       next_prime                                  ; next_prime
00000000000030e0         mov        edx, 0x8
00000000000030e5         mov        rbp, rax
00000000000030e8         xor        ecx, ecx
00000000000030ea         mov        rax, rdx
00000000000030ed         mul        rbp
00000000000030f0         jo         loc_320a

                     loc_30f6:
00000000000030f6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
00000000000030f9         js         loc_3150

00000000000030fb         test       rcx, rcx
00000000000030fe         jne        loc_3150

0000000000003100         test       rbp, rbp
0000000000003103         mov        qword [rbx+0x10], rbp
0000000000003107         je         loc_3150

0000000000003109         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000310e         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
0000000000003111         call       j_calloc                                    ; calloc
0000000000003116         test       rax, rax
0000000000003119         mov        qword [rbx], rax
000000000000311c         je         loc_3150

000000000000311e         shl        rbp, 0x4
0000000000003122         mov        qword [rbx+0x18], 0x0
000000000000312a         mov        qword [rbx+0x20], 0x0
0000000000003132         add        rbp, rax
0000000000003135         mov        qword [rbx+0x30], r12
0000000000003139         mov        qword [rbx+0x38], r13
000000000000313d         mov        qword [rbx+8], rbp
0000000000003141         mov        qword [rbx+0x40], r14
0000000000003145         mov        qword [rbx+0x48], 0x0
000000000000314d         jmp        loc_315a
000000000000314f         align      16

                     loc_3150:
0000000000003150         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
0000000000003153         xor        ebx, ebx
0000000000003155         call       j_free                                      ; free

                     loc_315a:
000000000000315a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000315e         mov        rax, rbx
0000000000003161         pop        rbx
0000000000003162         pop        rbp
0000000000003163         pop        r12
0000000000003165         pop        r13
0000000000003167         pop        r14
0000000000003169         pop        r15
000000000000316b         ret
                        ; endp
000000000000316c         align      16

                     loc_3170:
0000000000003170         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
0000000000003177         mov        qword [rbx+0x28], rax
000000000000317b         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000003180         test       al, al
0000000000003182         movss      xmm1, dword [float_7078]                    ; float_7078
000000000000318a         je         loc_3150

000000000000318c         test       rbp, rbp
000000000000318f         js         loc_31db

                     loc_3191:
0000000000003191         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000003195         cvtsi2ss   xmm0, rbp

                     loc_319a:
000000000000319a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000319e         ucomiss    xmm0, dword [float_707c]                    ; float_707c
00000000000031a5         jae        loc_3150

00000000000031a7         ucomiss    xmm0, dword [float_7080]                    ; float_7080
00000000000031ae         jb         loc_3200

00000000000031b0         subss      xmm0, dword [float_7080]                    ; float_7080
00000000000031b8         movabs     rax, 0x8000000000000000
00000000000031c2         cvttss2si  rbp, xmm0
00000000000031c7         xor        rbp, rax
00000000000031ca         jmp        loc_30d8
00000000000031cf         align      16

                     loc_31d0:
00000000000031d0         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
00000000000031d3         movss      xmm1, dword [r15+8]
00000000000031d9         jns        loc_3191

                     loc_31db:
00000000000031db         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
00000000000031de         pxor       xmm0, xmm0
00000000000031e2         shr        rax, 0x1
00000000000031e5         and        ebp, 0x1
00000000000031e8         or         rax, rbp
00000000000031eb         cvtsi2ss   xmm0, rax
00000000000031f0         addss      xmm0, xmm0
00000000000031f4         jmp        loc_319a
00000000000031f6         align      512

                     loc_3200:
0000000000003200         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
0000000000003205         jmp        loc_30d8

                     loc_320a:
000000000000320a         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
000000000000320f         jmp        loc_30f6
0000000000003214         align      32                                          ; End of unwind block (FDE at 0x8230)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
0000000000003220         push       r12                                         ; Begin of unwind block (FDE at 0x827c)
0000000000003222         push       rbp
0000000000003223         mov        rbp, rdi
0000000000003226         push       rbx
0000000000003227         mov        r12, qword [rdi]
000000000000322a         cmp        r12, qword [rdi+8]
000000000000322e         jae        loc_329b

                     loc_3230:
0000000000003230         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
0000000000003235         je         loc_3291

0000000000003237         mov        rbx, qword [r12+8]
000000000000323c         mov        rax, qword [rbp+0x40]
0000000000003240         test       rbx, rbx
0000000000003243         je         loc_3275

0000000000003245         nop        dword [rax]

                     loc_3248:
0000000000003248         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000324b         je         loc_3256

000000000000324d         mov        rdi, qword [rbx]
0000000000003250         call       rax
0000000000003252         mov        rax, qword [rbp+0x40]

                     loc_3256:
0000000000003256         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000325a         mov        rcx, qword [rbp+0x48]
000000000000325e         mov        qword [rbx], 0x0
0000000000003265         test       rdx, rdx
0000000000003268         mov        qword [rbx+8], rcx
000000000000326c         mov        qword [rbp+0x48], rbx
0000000000003270         mov        rbx, rdx
0000000000003273         jne        loc_3248

                     loc_3275:
0000000000003275         test       rax, rax                                    ; CODE XREF=hash_clear+35
0000000000003278         je         loc_3280

000000000000327a         mov        rdi, qword [r12]
000000000000327e         call       rax

                     loc_3280:
0000000000003280         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
0000000000003288         mov        qword [r12+8], 0x0

                     loc_3291:
0000000000003291         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000003295         cmp        qword [rbp+8], r12
0000000000003299         ja         loc_3230

                     loc_329b:
000000000000329b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
00000000000032a3         mov        qword [rbp+0x20], 0x0
00000000000032ab         pop        rbx
00000000000032ac         pop        rbp
00000000000032ad         pop        r12
00000000000032af         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
00000000000032b0         push       r12                                         ; End of unwind block (FDE at 0x827c), Begin of unwind block (FDE at 0x82a8), CODE XREF=canonicalize_filename_mode+537, canonicalize_filename_mode+915
00000000000032b2         push       rbp
00000000000032b3         mov        r12, rdi
00000000000032b6         push       rbx
00000000000032b7         cmp        qword [rdi+0x40], 0x0
00000000000032bc         mov        rbp, qword [rdi]
00000000000032bf         mov        rax, qword [rdi+8]
00000000000032c3         je         loc_3313

00000000000032c5         cmp        qword [rdi+0x20], 0x0
00000000000032ca         je         loc_3313

00000000000032cc         cmp        rbp, rax
00000000000032cf         jae        loc_334c

00000000000032d1         nop        dword [rax]

                     loc_32d8:
00000000000032d8         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
00000000000032dc         test       rdi, rdi
00000000000032df         je         loc_3306

00000000000032e1         mov        rbx, rbp
00000000000032e4         jmp        loc_32f3
00000000000032e6         align      16

                     loc_32f0:
00000000000032f0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_32f3:
00000000000032f3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
00000000000032f8         mov        rbx, qword [rbx+8]
00000000000032fc         test       rbx, rbx
00000000000032ff         jne        loc_32f0

0000000000003301         mov        rax, qword [r12+8]

                     loc_3306:
0000000000003306         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
000000000000330a         cmp        rax, rbp
000000000000330d         ja         loc_32d8

000000000000330f         mov        rbp, qword [r12]

                     loc_3313:
0000000000003313         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
0000000000003316         jae        loc_334c

0000000000003318         nop        dword [rax+rax]

                     loc_3320:
0000000000003320         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
0000000000003324         test       rdi, rdi
0000000000003327         je         loc_3341

0000000000003329         nop        dword [rax]

                     loc_3330:
0000000000003330         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
0000000000003334         call       j_free                                      ; free
0000000000003339         test       rbx, rbx
000000000000333c         mov        rdi, rbx
000000000000333f         jne        loc_3330

                     loc_3341:
0000000000003341         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
0000000000003345         cmp        qword [r12+8], rbp
000000000000334a         ja         loc_3320

                     loc_334c:
000000000000334c         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
0000000000003351         test       rdi, rdi
0000000000003354         je         loc_3371

0000000000003356         nop        word [cs:rax+rax]

                     loc_3360:
0000000000003360         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
0000000000003364         call       j_free                                      ; free
0000000000003369         test       rbx, rbx
000000000000336c         mov        rdi, rbx
000000000000336f         jne        loc_3360

                     loc_3371:
0000000000003371         mov        rdi, qword [r12]                            ; argument "__ptr" for method j_free, CODE XREF=hash_free+164
0000000000003375         call       j_free                                      ; free
000000000000337a         pop        rbx
000000000000337b         mov        rdi, r12                                    ; argument "__ptr" for method j_free
000000000000337e         pop        rbp
000000000000337f         pop        r12
0000000000003381         jmp        j_free                                      ; free
                        ; endp
0000000000003386         align      16                                          ; End of unwind block (FDE at 0x82a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000003390         push       r12                                         ; Begin of unwind block (FDE at 0x82d4), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000003392         push       rbp
0000000000003393         mov        rbp, rdi
0000000000003396         push       rbx
0000000000003397         sub        rsp, 0x60
000000000000339b         mov        r12, qword [rdi+0x28]
000000000000339f         mov        rax, qword [fs:0x28]
00000000000033a8         mov        qword [rsp+0x78+var_20], rax
00000000000033ad         xor        eax, eax
00000000000033af         cmp        byte [r12+0x10], 0x0
00000000000033b5         jne        loc_3408

00000000000033b7         test       rsi, rsi
00000000000033ba         js         loc_3538

00000000000033c0         pxor       xmm0, xmm0
00000000000033c4         cvtsi2ss   xmm0, rsi

                     loc_33c9:
00000000000033c9         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
00000000000033d0         ucomiss    xmm0, dword [float_707c]                    ; float_707c
00000000000033d7         jae        loc_3510

00000000000033dd         ucomiss    xmm0, dword [float_7080]                    ; float_7080
00000000000033e4         jb         loc_3560

00000000000033ea         subss      xmm0, dword [float_7080]                    ; float_7080
00000000000033f2         movabs     rax, 0x8000000000000000
00000000000033fc         cvttss2si  rsi, xmm0
0000000000003401         xor        rsi, rax
0000000000003404         nop        dword [rax]

                     loc_3408:
0000000000003408         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
000000000000340b         call       next_prime                                  ; next_prime
0000000000003410         mov        edx, 0x8
0000000000003415         mov        rbx, rax
0000000000003418         xor        ecx, ecx
000000000000341a         mov        rax, rdx
000000000000341d         mul        rbx
0000000000003420         jo         loc_35bf

                     loc_3426:
0000000000003426         test       rax, rax                                    ; CODE XREF=hash_rehash+564
0000000000003429         mov        eax, 0x1
000000000000342e         cmovs      rcx, rax
0000000000003432         test       rbx, rbx
0000000000003435         je         loc_3510

000000000000343b         and        ecx, 0x1
000000000000343e         jne        loc_3510

0000000000003444         cmp        qword [rbp+0x10], rbx
0000000000003448         je         loc_3570

000000000000344e         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000003453         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
0000000000003456         call       j_calloc                                    ; calloc
000000000000345b         test       rax, rax
000000000000345e         mov        qword [rsp+0x78+var_78], rax
0000000000003462         je         loc_3510

0000000000003468         mov        qword [rsp+0x78+var_68], rbx
000000000000346d         shl        rbx, 0x4
0000000000003471         mov        qword [rsp+0x78+var_50], r12
0000000000003476         add        rbx, rax
0000000000003479         mov        rax, qword [rbp+0x30]
000000000000347d         mov        r12, rsp
0000000000003480         xor        edx, edx
0000000000003482         mov        rsi, rbp
0000000000003485         mov        rdi, r12
0000000000003488         mov        qword [rsp+0x78+var_70], rbx
000000000000348d         mov        qword [rsp+0x78+var_60], 0x0
0000000000003496         mov        qword [rsp+0x78+var_48], rax
000000000000349b         mov        rax, qword [rbp+0x38]
000000000000349f         mov        qword [rsp+0x78+var_58], 0x0
00000000000034a8         mov        qword [rsp+0x78+var_40], rax
00000000000034ad         mov        rax, qword [rbp+0x40]
00000000000034b1         mov        qword [rsp+0x78+var_38], rax
00000000000034b6         mov        rax, qword [rbp+0x48]
00000000000034ba         mov        qword [rsp+0x78+var_30], rax
00000000000034bf         call       transfer_entries                            ; transfer_entries
00000000000034c4         test       al, al
00000000000034c6         mov        ebx, eax
00000000000034c8         jne        loc_3580

00000000000034ce         mov        rax, qword [rsp+0x78+var_30]
00000000000034d3         mov        edx, 0x1
00000000000034d8         mov        rsi, r12
00000000000034db         mov        rdi, rbp
00000000000034de         mov        qword [rbp+0x48], rax
00000000000034e2         call       transfer_entries                            ; transfer_entries
00000000000034e7         test       al, al
00000000000034e9         je         loc_35c9

00000000000034ef         xor        edx, edx
00000000000034f1         mov        rsi, r12
00000000000034f4         mov        rdi, rbp
00000000000034f7         call       transfer_entries                            ; transfer_entries
00000000000034fc         test       al, al
00000000000034fe         je         loc_35c9

0000000000003504         mov        rdi, qword [rsp+0x78+var_78]                ; argument "__ptr" for method j_free
0000000000003508         call       j_free                                      ; free
000000000000350d         jmp        loc_3512
000000000000350f         align      16

                     loc_3510:
0000000000003510         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_3512:
0000000000003512         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
0000000000003517         xor        rcx, qword [fs:0x28]
0000000000003520         mov        eax, ebx
0000000000003522         jne        loc_35ba

0000000000003528         add        rsp, 0x60
000000000000352c         pop        rbx
000000000000352d         pop        rbp
000000000000352e         pop        r12
0000000000003530         ret
                        ; endp
0000000000003531         align      8

                     loc_3538:
0000000000003538         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
000000000000353b         pxor       xmm0, xmm0
000000000000353f         shr        rax, 0x1
0000000000003542         and        esi, 0x1
0000000000003545         or         rax, rsi
0000000000003548         cvtsi2ss   xmm0, rax
000000000000354d         addss      xmm0, xmm0
0000000000003551         jmp        loc_33c9
0000000000003556         align      32

                     loc_3560:
0000000000003560         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000003565         jmp        loc_3408
000000000000356a         align      16

                     loc_3570:
0000000000003570         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000003575         jmp        loc_3512
0000000000003577         align      128

                     loc_3580:
0000000000003580         mov        rdi, qword [rbp]                            ; argument "__ptr" for method j_free, CODE XREF=hash_rehash+312
0000000000003584         call       j_free                                      ; free
0000000000003589         mov        rax, qword [rsp+0x78+var_78]
000000000000358d         mov        qword [rbp], rax
0000000000003591         mov        rax, qword [rsp+0x78+var_70]
0000000000003596         mov        qword [rbp+8], rax
000000000000359a         mov        rax, qword [rsp+0x78+var_68]
000000000000359f         mov        qword [rbp+0x10], rax
00000000000035a3         mov        rax, qword [rsp+0x78+var_60]
00000000000035a8         mov        qword [rbp+0x18], rax
00000000000035ac         mov        rax, qword [rsp+0x78+var_30]
00000000000035b1         mov        qword [rbp+0x48], rax
00000000000035b5         jmp        loc_3512

                     loc_35ba:
00000000000035ba         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_35bf:
00000000000035bf         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
00000000000035c4         jmp        loc_3426

                     loc_35c9:
00000000000035c9         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
00000000000035ce         align      16                                          ; End of unwind block (FDE at 0x82d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
00000000000035d0         push       r13                                         ; Begin of unwind block (FDE at 0x830c), CODE XREF=hash_insert+27
00000000000035d2         push       r12
00000000000035d4         push       rbp
00000000000035d5         push       rbx
00000000000035d6         sub        rsp, 0x18
00000000000035da         mov        rax, qword [fs:0x28]
00000000000035e3         mov        qword [rsp+0x38+var_30], rax
00000000000035e8         xor        eax, eax
00000000000035ea         test       rsi, rsi
00000000000035ed         je         loc_37ad

00000000000035f3         mov        r12, rsp
00000000000035f6         xor        ecx, ecx
00000000000035f8         mov        r13, rdx
00000000000035fb         mov        rdx, r12
00000000000035fe         mov        rbx, rdi
0000000000003601         mov        rbp, rsi
0000000000003604         call       hash_find_entry                             ; hash_find_entry
0000000000003609         test       rax, rax
000000000000360c         mov        rdx, rax
000000000000360f         je         loc_3640

0000000000003611         xor        eax, eax
0000000000003613         test       r13, r13
0000000000003616         je         loc_361c

0000000000003618         mov        qword [r13], rdx

                     loc_361c:
000000000000361c         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
0000000000003621         xor        rcx, qword [fs:0x28]
000000000000362a         jne        loc_384f

0000000000003630         add        rsp, 0x18
0000000000003634         pop        rbx
0000000000003635         pop        rbp
0000000000003636         pop        r12
0000000000003638         pop        r13
000000000000363a         ret
                        ; endp
000000000000363b         align      64

                     loc_3640:
0000000000003640         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
0000000000003644         test       rax, rax
0000000000003647         js         loc_36c0

0000000000003649         pxor       xmm1, xmm1
000000000000364d         mov        rdx, qword [rbx+0x28]
0000000000003651         cvtsi2ss   xmm1, rax
0000000000003656         mov        rax, qword [rbx+0x10]
000000000000365a         test       rax, rax
000000000000365d         js         loc_36ea

                     loc_3663:
0000000000003663         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000003667         cvtsi2ss   xmm0, rax

                     loc_366c:
000000000000366c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000003671         ucomiss    xmm1, xmm0
0000000000003674         ja         loc_3710

                     loc_367a:
000000000000367a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000367e         cmp        qword [r12], 0x0
0000000000003683         je         loc_37b8

0000000000003689         mov        rax, qword [rbx+0x48]
000000000000368d         test       rax, rax
0000000000003690         je         loc_37d0

0000000000003696         mov        rdx, qword [rax+8]
000000000000369a         mov        qword [rbx+0x48], rdx

                     loc_369e:
000000000000369e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
00000000000036a3         mov        qword [rax], rbp
00000000000036a6         mov        qword [rax+8], rdx
00000000000036aa         mov        qword [r12+8], rax
00000000000036af         mov        eax, 0x1
00000000000036b4         add        qword [rbx+0x20], 0x1
00000000000036b9         jmp        loc_361c
00000000000036be         align      64

                     loc_36c0:
00000000000036c0         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
00000000000036c3         pxor       xmm1, xmm1
00000000000036c7         and        eax, 0x1
00000000000036ca         shr        rdx, 0x1
00000000000036cd         or         rdx, rax
00000000000036d0         mov        rax, qword [rbx+0x10]
00000000000036d4         cvtsi2ss   xmm1, rdx
00000000000036d9         mov        rdx, qword [rbx+0x28]
00000000000036dd         test       rax, rax
00000000000036e0         addss      xmm1, xmm1
00000000000036e4         jns        loc_3663

                     loc_36ea:
00000000000036ea         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
00000000000036ed         pxor       xmm0, xmm0
00000000000036f1         shr        rcx, 0x1
00000000000036f4         and        eax, 0x1
00000000000036f7         or         rcx, rax
00000000000036fa         cvtsi2ss   xmm0, rcx
00000000000036ff         addss      xmm0, xmm0
0000000000003703         jmp        loc_366c
0000000000003708         align      16

                     loc_3710:
0000000000003710         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
0000000000003714         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000003719         mov        rax, qword [rbx+0x10]
000000000000371d         mov        rdx, qword [rbx+0x28]
0000000000003721         test       rax, rax
0000000000003724         movss      xmm2, dword [rdx+8]
0000000000003729         js         loc_37f0

000000000000372f         pxor       xmm0, xmm0
0000000000003733         cvtsi2ss   xmm0, rax

                     loc_3738:
0000000000003738         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
000000000000373c         test       rax, rax
000000000000373f         js         loc_3810

0000000000003745         pxor       xmm1, xmm1
0000000000003749         cvtsi2ss   xmm1, rax

                     loc_374e:
000000000000374e         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000003751         mulss      xmm3, xmm0
0000000000003755         ucomiss    xmm1, xmm3
0000000000003758         jbe        loc_367a

000000000000375e         cmp        byte [rdx+0x10], 0x0
0000000000003762         mulss      xmm0, dword [rdx+0xc]
0000000000003767         jne        loc_376d

0000000000003769         mulss      xmm0, xmm2

                     loc_376d:
000000000000376d         ucomiss    xmm0, dword [float_707c]                    ; float_707c, CODE XREF=hash_insert_if_absent+407
0000000000003774         jae        loc_37e3

0000000000003776         ucomiss    xmm0, dword [float_7080]                    ; float_7080
000000000000377d         jae        loc_3830

0000000000003783         cvttss2si  rsi, xmm0

                     loc_3788:
0000000000003788         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000378b         call       hash_rehash                                 ; hash_rehash
0000000000003790         test       al, al
0000000000003792         je         loc_37e3

0000000000003794         xor        ecx, ecx
0000000000003796         mov        rdx, r12
0000000000003799         mov        rsi, rbp
000000000000379c         mov        rdi, rbx
000000000000379f         call       hash_find_entry                             ; hash_find_entry
00000000000037a4         test       rax, rax
00000000000037a7         je         loc_367a

                     loc_37ad:
00000000000037ad         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
00000000000037b2         align      8

                     loc_37b8:
00000000000037b8         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
00000000000037bc         mov        eax, 0x1
00000000000037c1         add        qword [rbx+0x20], 0x1
00000000000037c6         add        qword [rbx+0x18], 0x1
00000000000037cb         jmp        loc_361c

                     loc_37d0:
00000000000037d0         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
00000000000037d5         call       j_malloc                                    ; malloc
00000000000037da         test       rax, rax
00000000000037dd         jne        loc_369e

                     loc_37e3:
00000000000037e3         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
00000000000037e8         jmp        loc_361c
00000000000037ed         align      16

                     loc_37f0:
00000000000037f0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
00000000000037f3         pxor       xmm0, xmm0
00000000000037f7         shr        rcx, 0x1
00000000000037fa         and        eax, 0x1
00000000000037fd         or         rcx, rax
0000000000003800         cvtsi2ss   xmm0, rcx
0000000000003805         addss      xmm0, xmm0
0000000000003809         jmp        loc_3738
000000000000380e         align      16

                     loc_3810:
0000000000003810         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
0000000000003813         pxor       xmm1, xmm1
0000000000003817         shr        rcx, 0x1
000000000000381a         and        eax, 0x1
000000000000381d         or         rcx, rax
0000000000003820         cvtsi2ss   xmm1, rcx
0000000000003825         addss      xmm1, xmm1
0000000000003829         jmp        loc_374e
000000000000382e         align      16

                     loc_3830:
0000000000003830         subss      xmm0, dword [float_7080]                    ; float_7080, CODE XREF=hash_insert_if_absent+429
0000000000003838         movabs     rax, 0x8000000000000000
0000000000003842         cvttss2si  rsi, xmm0
0000000000003847         xor        rsi, rax
000000000000384a         jmp        loc_3788

                     loc_384f:
000000000000384f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000003854         align      32                                          ; End of unwind block (FDE at 0x830c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000003860         push       rbx                                         ; Begin of unwind block (FDE at 0x8348), CODE XREF=record_file+70
0000000000003861         mov        rbx, rsi
0000000000003864         sub        rsp, 0x10
0000000000003868         mov        rdx, rsp
000000000000386b         mov        rax, qword [fs:0x28]
0000000000003874         mov        qword [rsp+0x18+var_10], rax
0000000000003879         xor        eax, eax
000000000000387b         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000003880         cmp        eax, 0xffffffff
0000000000003883         je         loc_38b0

0000000000003885         test       eax, eax
0000000000003887         jne        loc_388d

0000000000003889         mov        rbx, qword [rsp+0x18+var_18]

                     loc_388d:
000000000000388d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000003892         xor        rcx, qword [fs:0x28]
000000000000389b         mov        rax, rbx
000000000000389e         jne        loc_38b4

00000000000038a0         add        rsp, 0x10
00000000000038a4         pop        rbx
00000000000038a5         ret
                        ; endp
00000000000038a6         align      16

                     loc_38b0:
00000000000038b0         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
00000000000038b2         jmp        loc_388d

                     loc_38b4:
00000000000038b4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
00000000000038b9         align      64                                          ; End of unwind block (FDE at 0x8348)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
00000000000038c0         push       r12                                         ; Begin of unwind block (FDE at 0x836c)
00000000000038c2         push       rbp
00000000000038c3         mov        ecx, 0x1
00000000000038c8         push       rbx
00000000000038c9         mov        rbx, rdi
00000000000038cc         sub        rsp, 0x10
00000000000038d0         mov        rdx, rsp
00000000000038d3         mov        rax, qword [fs:0x28]
00000000000038dc         mov        qword [rsp+0x28+var_20], rax
00000000000038e1         xor        eax, eax
00000000000038e3         call       hash_find_entry                             ; hash_find_entry
00000000000038e8         test       rax, rax
00000000000038eb         mov        rbp, rax
00000000000038ee         je         loc_38ff

00000000000038f0         mov        rax, qword [rsp+0x28+var_28]
00000000000038f4         sub        qword [rbx+0x20], 0x1
00000000000038f9         cmp        qword [rax], 0x0
00000000000038fd         je         loc_3920

                     loc_38ff:
00000000000038ff         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
0000000000003904         xor        rcx, qword [fs:0x28]
000000000000390d         mov        rax, rbp
0000000000003910         jne        loc_3abe

0000000000003916         add        rsp, 0x10
000000000000391a         pop        rbx
000000000000391b         pop        rbp
000000000000391c         pop        r12
000000000000391e         ret
                        ; endp
000000000000391f         align      32

                     loc_3920:
0000000000003920         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
0000000000003924         sub        rax, 0x1
0000000000003928         test       rax, rax
000000000000392b         mov        qword [rbx+0x18], rax
000000000000392f         js         loc_3a30

0000000000003935         pxor       xmm0, xmm0
0000000000003939         cvtsi2ss   xmm0, rax

                     loc_393e:
000000000000393e         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
0000000000003942         mov        rdx, qword [rbx+0x28]
0000000000003946         test       rax, rax
0000000000003949         js         loc_3a10

000000000000394f         pxor       xmm1, xmm1
0000000000003953         cvtsi2ss   xmm1, rax

                     loc_3958:
0000000000003958         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000395c         ucomiss    xmm1, xmm0
000000000000395f         jbe        loc_38ff

0000000000003961         lea        rdi, qword [rbx+0x28]
0000000000003965         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000396a         mov        rax, qword [rbx+0x10]
000000000000396e         mov        rdx, qword [rbx+0x28]
0000000000003972         test       rax, rax
0000000000003975         js         loc_3aa0

000000000000397b         pxor       xmm0, xmm0
000000000000397f         cvtsi2ss   xmm0, rax

                     loc_3984:
0000000000003984         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000003988         test       rax, rax
000000000000398b         js         loc_3a80

0000000000003991         pxor       xmm1, xmm1
0000000000003995         cvtsi2ss   xmm1, rax

                     loc_399a:
000000000000399a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000399e         mulss      xmm2, xmm0
00000000000039a2         ucomiss    xmm2, xmm1
00000000000039a5         jbe        loc_38ff

00000000000039ab         cmp        byte [rdx+0x10], 0x0
00000000000039af         mulss      xmm0, dword [rdx+4]
00000000000039b4         je         loc_3a70

                     loc_39ba:
00000000000039ba         ucomiss    xmm0, dword [float_7080]                    ; float_7080, CODE XREF=hash_delete+437
00000000000039c1         jae        loc_3a50

00000000000039c7         cvttss2si  rsi, xmm0

                     loc_39cc:
00000000000039cc         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
00000000000039cf         call       hash_rehash                                 ; hash_rehash
00000000000039d4         test       al, al
00000000000039d6         jne        loc_38ff

00000000000039dc         mov        rdi, qword [rbx+0x48]
00000000000039e0         test       rdi, rdi
00000000000039e3         je         loc_39f9

00000000000039e5         nop        dword [rax]

                     loc_39e8:
00000000000039e8         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
00000000000039ec         call       j_free                                      ; free
00000000000039f1         test       r12, r12
00000000000039f4         mov        rdi, r12
00000000000039f7         jne        loc_39e8

                     loc_39f9:
00000000000039f9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
0000000000003a01         jmp        loc_38ff
0000000000003a06         align      16

                     loc_3a10:
0000000000003a10         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
0000000000003a13         pxor       xmm1, xmm1
0000000000003a17         shr        rcx, 0x1
0000000000003a1a         and        eax, 0x1
0000000000003a1d         or         rcx, rax
0000000000003a20         cvtsi2ss   xmm1, rcx
0000000000003a25         addss      xmm1, xmm1
0000000000003a29         jmp        loc_3958
0000000000003a2e         align      16

                     loc_3a30:
0000000000003a30         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
0000000000003a33         pxor       xmm0, xmm0
0000000000003a37         shr        rdx, 0x1
0000000000003a3a         and        eax, 0x1
0000000000003a3d         or         rdx, rax
0000000000003a40         cvtsi2ss   xmm0, rdx
0000000000003a45         addss      xmm0, xmm0
0000000000003a49         jmp        loc_393e
0000000000003a4e         align      16

                     loc_3a50:
0000000000003a50         subss      xmm0, dword [float_7080]                    ; float_7080, CODE XREF=hash_delete+257
0000000000003a58         movabs     rax, 0x8000000000000000
0000000000003a62         cvttss2si  rsi, xmm0
0000000000003a67         xor        rsi, rax
0000000000003a6a         jmp        loc_39cc
0000000000003a6f         align      16

                     loc_3a70:
0000000000003a70         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000003a75         jmp        loc_39ba
0000000000003a7a         align      128

                     loc_3a80:
0000000000003a80         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000003a83         pxor       xmm1, xmm1
0000000000003a87         shr        rcx, 0x1
0000000000003a8a         and        eax, 0x1
0000000000003a8d         or         rcx, rax
0000000000003a90         cvtsi2ss   xmm1, rcx
0000000000003a95         addss      xmm1, xmm1
0000000000003a99         jmp        loc_399a
0000000000003a9e         align      32

                     loc_3aa0:
0000000000003aa0         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000003aa3         pxor       xmm0, xmm0
0000000000003aa7         shr        rcx, 0x1
0000000000003aaa         and        eax, 0x1
0000000000003aad         or         rcx, rax
0000000000003ab0         cvtsi2ss   xmm0, rcx
0000000000003ab5         addss      xmm0, xmm0
0000000000003ab9         jmp        loc_3984

                     loc_3abe:
0000000000003abe         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000003ac3         align      16                                          ; End of unwind block (FDE at 0x836c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
0000000000003ad0         push       rbp                                         ; Begin of unwind block (FDE at 0x83a4), DATA XREF=canonicalize_filename_mode+1270
0000000000003ad1         push       rbx
0000000000003ad2         mov        rbp, rdi
0000000000003ad5         mov        rbx, rsi
0000000000003ad8         sub        rsp, 0x8
0000000000003adc         mov        rdi, qword [rdi]
0000000000003adf         call       hash_pjw                                    ; hash_pjw
0000000000003ae4         xor        rax, qword [rbp+8]
0000000000003ae8         xor        edx, edx
0000000000003aea         add        rsp, 0x8
0000000000003aee         div        rbx
0000000000003af1         pop        rbx
0000000000003af2         pop        rbp
0000000000003af3         mov        rax, rdx
0000000000003af6         ret
                        ; endp
0000000000003af7         align      256                                         ; End of unwind block (FDE at 0x83a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
0000000000003b00         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x83cc)
0000000000003b04         xor        edx, edx
0000000000003b06         div        rsi
0000000000003b09         mov        rax, rdx
0000000000003b0c         ret
                        ; endp
0000000000003b0d         align      16                                          ; End of unwind block (FDE at 0x83cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
0000000000003b10         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x83e0)
0000000000003b12         mov        rdx, qword [rsi+8]
0000000000003b16         cmp        qword [rdi+8], rdx
0000000000003b1a         je         loc_3b20

                     loc_3b1c:
0000000000003b1c         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
0000000000003b1e         align      32

                     loc_3b20:
0000000000003b20         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
0000000000003b24         cmp        qword [rdi+0x10], rcx
0000000000003b28         jne        loc_3b1c

0000000000003b2a         sub        rsp, 0x8
0000000000003b2e         mov        rsi, qword [rsi]
0000000000003b31         mov        rdi, qword [rdi]
0000000000003b34         call       same_name                                   ; same_name
0000000000003b39         add        rsp, 0x8
0000000000003b3d         ret
                        ; endp
0000000000003b3e         align      64                                          ; End of unwind block (FDE at 0x83e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
0000000000003b40         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x83f8), DATA XREF=canonicalize_filename_mode+1261
0000000000003b42         mov        rdx, qword [rsi+8]
0000000000003b46         cmp        qword [rdi+8], rdx
0000000000003b4a         je         loc_3b50

                     loc_3b4c:
0000000000003b4c         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
0000000000003b4e         align      16

                     loc_3b50:
0000000000003b50         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
0000000000003b54         cmp        qword [rdi+0x10], rcx
0000000000003b58         jne        loc_3b4c

0000000000003b5a         sub        rsp, 0x8
0000000000003b5e         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
0000000000003b61         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000003b64         call       j_strcmp                                    ; strcmp
0000000000003b69         test       eax, eax
0000000000003b6b         sete       al
0000000000003b6e         add        rsp, 0x8
0000000000003b72         ret
                        ; endp
0000000000003b73         align      128                                         ; End of unwind block (FDE at 0x83f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
0000000000003b80         push       rbx                                         ; Begin of unwind block (FDE at 0x8410), CODE XREF=record_file+98, DATA XREF=canonicalize_filename_mode+1254
0000000000003b81         mov        rbx, rdi
0000000000003b84         mov        rdi, qword [rdi]                            ; argument "__ptr" for method j_free
0000000000003b87         call       j_free                                      ; free
0000000000003b8c         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000003b8f         pop        rbx
0000000000003b90         jmp        j_free                                      ; free
                        ; endp
0000000000003b95         align      32                                          ; End of unwind block (FDE at 0x8410)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003ba0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x842c), CODE XREF=main+31
0000000000003ba3         push       rbx
0000000000003ba4         je         loc_3c1d

0000000000003ba6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000003bab         mov        rbx, rdi
0000000000003bae         call       j_strrchr                                   ; strrchr
0000000000003bb3         test       rax, rax
0000000000003bb6         je         loc_3c0d

0000000000003bb8         lea        r8, qword [rax+1]
0000000000003bbc         mov        rdx, r8
0000000000003bbf         sub        rdx, rbx
0000000000003bc2         cmp        rdx, 0x6
0000000000003bc6         jle        loc_3c0d

0000000000003bc8         lea        rsi, qword [rax-6]
0000000000003bcc         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003bd3         mov        ecx, 0x7
0000000000003bd8         rep  cmpsb byte [rsi], byte [rdi]
0000000000003bda         seta       dl
0000000000003bdd         sbb        dl, 0x0
0000000000003be0         test       dl, dl
0000000000003be2         jne        loc_3c0d

0000000000003be4         lea        rdi, qword [aLibs+8]                        ; 0x70d0
0000000000003beb         mov        ecx, 0x3
0000000000003bf0         mov        rsi, r8
0000000000003bf3         mov        rbx, r8
0000000000003bf6         rep  cmpsb byte [rsi], byte [rdi]
0000000000003bf8         seta       dl
0000000000003bfb         sbb        dl, 0x0
0000000000003bfe         test       dl, dl
0000000000003c00         jne        loc_3c0d

0000000000003c02         lea        rbx, qword [rax+4]
0000000000003c06         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_3c0d:
0000000000003c0d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003c14         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000003c1b         pop        rbx
0000000000003c1c         ret
                        ; endp

                     loc_3c1d:
0000000000003c1d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000003c24         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000003c2b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000003c30         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000003c35         call       j_fwrite                                    ; fwrite
0000000000003c3a         call       j_abort                                     ; abort
                        ; endp
0000000000003c3f         align      64                                          ; End of unwind block (FDE at 0x842c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000003c40         push       rbp                                         ; Begin of unwind block (FDE at 0x844c), CODE XREF=sub_4470+2597, sub_4470+2619
0000000000003c41         push       rbx
0000000000003c42         mov        rbp, rdi
0000000000003c45         mov        ebx, esi
0000000000003c47         sub        rsp, 0x8
0000000000003c4b         call       locale_charset                              ; locale_charset
0000000000003c50         movzx      edx, byte [rax]
0000000000003c53         and        edx, 0xffffffdf
0000000000003c56         cmp        dl, 0x55
0000000000003c59         je         loc_3cd0

0000000000003c5b         cmp        dl, 0x47
0000000000003c5e         je         loc_3c80

                     loc_3c60:
0000000000003c60         lea        rax, qword [aLibs+27]                       ; 0x70e3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000003c67         lea        rdx, qword [aLibs+29]                       ; 0x70e5
0000000000003c6e         cmp        ebx, 0x9
0000000000003c71         cmovne     rax, rdx
0000000000003c75         add        rsp, 0x8
0000000000003c79         pop        rbx
0000000000003c7a         pop        rbp
0000000000003c7b         ret
                        ; endp
0000000000003c7c         align      128

                     loc_3c80:
0000000000003c80         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003c84         and        edx, 0xffffffdf
0000000000003c87         cmp        dl, 0x42
0000000000003c8a         jne        loc_3c60

0000000000003c8c         cmp        byte [rax+2], 0x31
0000000000003c90         jne        loc_3c60

0000000000003c92         cmp        byte [rax+3], 0x38
0000000000003c96         jne        loc_3c60

0000000000003c98         cmp        byte [rax+4], 0x30
0000000000003c9c         jne        loc_3c60

0000000000003c9e         cmp        byte [rax+5], 0x33
0000000000003ca2         jne        loc_3c60

0000000000003ca4         cmp        byte [rax+6], 0x30
0000000000003ca8         jne        loc_3c60

0000000000003caa         cmp        byte [rax+7], 0x0
0000000000003cae         jne        loc_3c60

0000000000003cb0         cmp        byte [rbp], 0x60
0000000000003cb4         lea        rax, qword [aLibs+20]                       ; 0x70dc
0000000000003cbb         lea        rdx, qword [aLibs+24]                       ; 0x70e0
0000000000003cc2         cmovne     rax, rdx
0000000000003cc6         add        rsp, 0x8
0000000000003cca         pop        rbx
0000000000003ccb         pop        rbp
0000000000003ccc         ret
                        ; endp
0000000000003ccd         align      16

                     loc_3cd0:
0000000000003cd0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003cd4         and        edx, 0xffffffdf
0000000000003cd7         cmp        dl, 0x54
0000000000003cda         jne        loc_3c60

0000000000003cdc         movzx      edx, byte [rax+2]
0000000000003ce0         and        edx, 0xffffffdf
0000000000003ce3         cmp        dl, 0x46
0000000000003ce6         jne        loc_3c60

0000000000003cec         cmp        byte [rax+3], 0x2d
0000000000003cf0         jne        loc_3c60

0000000000003cf6         cmp        byte [rax+4], 0x38
0000000000003cfa         jne        loc_3c60

0000000000003d00         cmp        byte [rax+5], 0x0
0000000000003d04         jne        loc_3c60

0000000000003d0a         cmp        byte [rbp], 0x60
0000000000003d0e         lea        rax, qword [aLibs+12]                       ; 0x70d4
0000000000003d15         lea        rdx, qword [aLibs+16]                       ; 0x70d8
0000000000003d1c         cmovne     rax, rdx
0000000000003d20         add        rsp, 0x8
0000000000003d24         pop        rbx
0000000000003d25         pop        rbp
0000000000003d26         ret
                        ; endp
0000000000003d27         align      16                                          ; End of unwind block (FDE at 0x844c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003d30         push       r15                                         ; Begin of unwind block (FDE at 0x8490), CODE XREF=sub_4470+1165, sub_4470+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003d32         push       r14
0000000000003d34         mov        r15d, r8d
0000000000003d37         push       r13
0000000000003d39         push       r12
0000000000003d3b         mov        r14, rdi
0000000000003d3e         push       rbp
0000000000003d3f         push       rbx
0000000000003d40         mov        ebx, r9d
0000000000003d43         mov        r13, rsi
0000000000003d46         mov        rbp, rcx
0000000000003d49         and        ebx, 0x2
0000000000003d4c         sub        rsp, 0xb8
0000000000003d53         mov        rax, qword [rsp+0xe8+arg_0]
0000000000003d5b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000003d60         mov        dword [rsp+0xe8+var_E0], r8d
0000000000003d65         mov        dword [rsp+0xe8+var_70], r9d
0000000000003d6a         mov        qword [rsp+0xe8+var_C8], rax
0000000000003d6f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000003d77         mov        qword [rsp+0xe8+var_80], rax
0000000000003d7c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003d84         mov        qword [rsp+0xe8+var_88], rax
0000000000003d89         mov        rax, qword [fs:0x28]
0000000000003d92         mov        qword [rsp+0xe8+var_40], rax
0000000000003d9a         xor        eax, eax
0000000000003d9c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003da1         cmp        r15d, 0xa
0000000000003da5         mov        qword [rsp+0xe8+var_90], rax
0000000000003daa         ja         loc_4f5f

0000000000003db0         lea        rcx, qword [switch_table_7140]              ; switch_table_7140
0000000000003db7         mov        edx, r15d
0000000000003dba         movsxd     rax, dword [rcx+rdx*4]
0000000000003dbe         add        rax, rcx
0000000000003dc1         jmp        rax                                         ; switch statement using table at 0x7140, with 11 cases, 0x3dc3,0x4994,0x49f0,0x4a45,0x4a8a,0x4ac4,0x4b6a,0x4ba4,0x4d98

                     loc_3dc3:
0000000000003dc3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4470+1318
0000000000003dc8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dcd         xor        r12d, r12d
0000000000003dd0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dd9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003dde         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3de3:
0000000000003de3         lea        rax, qword [aLibs+29]                       ; 0x70e5, CODE XREF=sub_4470+1876
0000000000003dea         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003df3         xor        r15d, r15d
0000000000003df6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003dfe         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3e03:
0000000000003e03         xor        r11d, r11d                                  ; CODE XREF=sub_4470+180, sub_4470+1400, sub_4470+1488, sub_4470+1557, sub_4470+1615, sub_4470+1781, sub_4470+1839, sub_4470+2408, sub_4470+2485
0000000000003e06         mov        rax, rbp
0000000000003e09         mov        r8d, r12d
0000000000003e0c         mov        rbp, r11
0000000000003e0f         mov        r11, rax
0000000000003e12         nop        word [rax+rax]

                     loc_3e18:
0000000000003e18         cmp        r11, rbp                                    ; CODE XREF=sub_3f20+194
0000000000003e1b         setne      r12b
0000000000003e1f         cmp        r11, 0xffffffffffffffff
0000000000003e23         jne        loc_3e32

0000000000003e25         mov        rax, qword [rsp+0xe8+var_D8]
0000000000003e2a         cmp        byte [rax+rbp], 0x0
0000000000003e2e         setne      r12b

                     loc_3e32:
0000000000003e32         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003e35         je         loc_4490

0000000000003e3b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003e40         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003e45         lea        r9, qword [rdi+rbp]
0000000000003e49         setne      al
0000000000003e4c         and        al, byte [rsp+0xe8+var_DB]
0000000000003e50         mov        r10d, eax
0000000000003e53         je         loc_3f00

0000000000003e59         mov        rax, qword [rsp+0xe8+var_D0]
0000000000003e5e         test       rax, rax
0000000000003e61         je         loc_4290

0000000000003e67         cmp        r11, 0xffffffffffffffff
0000000000003e6b         lea        rbx, qword [rbp+rax]
0000000000003e70         jne        loc_3ea0

0000000000003e72         cmp        rax, 0x1
0000000000003e76         jbe        loc_3ea0

0000000000003e78         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003e7d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003e82         mov        qword [rsp+0xe8+var_C0], r9
0000000000003e87         call       j_strlen                                    ; strlen
0000000000003e8c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003e92         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003e98         mov        r11, rax
0000000000003e9b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3ea0:
0000000000003ea0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003ea3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003ea8         ja         loc_4460

0000000000003eae         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003eb3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003eb8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003ebb         mov        qword [rsp+0xe8+var_A8], r11
0000000000003ec0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003ec5         mov        qword [rsp+0xe8+var_B8], r9
0000000000003eca         call       j_memcmp                                    ; memcmp
0000000000003ecf         test       eax, eax
0000000000003ed1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003ed6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003edc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003ee1         jne        loc_4460

0000000000003ee7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003eec         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003ef2         jne        loc_4e75

0000000000003ef8         nop        dword [rax+rax]

                     loc_3f00:
0000000000003f00         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_4450+19
0000000000003f04         cmp        bl, 0x7e
0000000000003f07         ja         loc_4228

0000000000003f0d         lea        rcx, qword [switch_table_7140+44]           ; 0x716c
0000000000003f14         movzx      edx, bl
0000000000003f17         movsxd     rax, dword [rcx+rdx*4]
0000000000003f1b         add        rax, rcx
0000000000003f1e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3f20:
0000000000003f20         xor        r10d, r10d
0000000000003f23         cmp        r11, 0x1
0000000000003f27         setne      al
0000000000003f2a         cmp        r11, 0xffffffffffffffff
0000000000003f2e         jne        loc_3f3c

0000000000003f30         mov        rax, qword [rsp+arg_8]
0000000000003f35         cmp        byte [rax+1], 0x0
0000000000003f39         setne      al

                     loc_3f3c:
0000000000003f3c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3f20+14
0000000000003f41         sete       dl
0000000000003f44         test       al, al
0000000000003f46         je         loc_4198

                     loc_3f4c:
0000000000003f4c         xor        r12d, r12d                                  ; CODE XREF=sub_4190+11
0000000000003f4f         xor        eax, eax
0000000000003f51         nop        dword [rax]
                        ; endp

                     loc_3f58:
0000000000003f58         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_4140+50, sub_4210+119
0000000000003f5d         jne        loc_4072

0000000000003f63         test       dl, dl
0000000000003f65         jne        loc_4072

                     loc_3f6b:
0000000000003f6b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_4020+87
0000000000003f70         test       rsi, rsi
0000000000003f73         je         loc_3f89

0000000000003f75         mov        edx, ebx
0000000000003f77         shr        dl, 0x5
0000000000003f7a         movzx      edx, dl
0000000000003f7d         mov        edx, dword [rsi+rdx*4]
0000000000003f80         bt         edx, ebx
0000000000003f83         jb         loc_40d3

                     loc_3f89:
0000000000003f89         test       r10b, r10b                                  ; CODE XREF=sub_3f20+83, sub_4020+93
0000000000003f8c         jne        loc_40d3

0000000000003f92         xor        eax, 0x1
0000000000003f95         add        rbp, 0x1
0000000000003f99         and        eax, r8d

                     loc_3f9c:
0000000000003f9c         test       al, al                                      ; CODE XREF=sub_4470+936
0000000000003f9e         je         loc_3fc0

0000000000003fa0         cmp        r13, r15
0000000000003fa3         jbe        loc_3faa

0000000000003fa5         mov        byte [r14+r15], 0x27

                     loc_3faa:
0000000000003faa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3f20+131
0000000000003fae         cmp        r13, rax
0000000000003fb1         jbe        loc_3fb9

0000000000003fb3         mov        byte [r14+r15+1], 0x27

                     loc_3fb9:
0000000000003fb9         add        r15, 0x2                                    ; CODE XREF=sub_3f20+145
0000000000003fbd         xor        r8d, r8d

                     loc_3fc0:
0000000000003fc0         cmp        r15, r13                                    ; CODE XREF=sub_3f20+126, sub_4020+275, sub_4470+869
0000000000003fc3         jae        loc_3fc9

0000000000003fc5         mov        byte [r14+r15], bl

                     loc_3fc9:
0000000000003fc9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3f20+163
0000000000003fce         add        r15, 0x1
0000000000003fd2         mov        eax, 0x0
0000000000003fd7         test       r12b, r12b
0000000000003fda         cmove      edi, eax
0000000000003fdd         mov        byte [rsp+0xe8+var_DA], dil
0000000000003fe2         jmp        loc_3e18
0000000000003fe7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3ff0:
0000000000003ff0         xor        r10d, r10d
0000000000003ff3         mov        eax, dword [rsp+arg_0]
0000000000003ff7         cmp        eax, 0x2
0000000000003ffa         je         loc_45b8

                     loc_4000:
0000000000004000         cmp        eax, 0x5                                    ; DATA XREF=canonicalize_filename_mode+784, sub_4210+88
0000000000004003         je         loc_4578

0000000000004009         cmp        eax, 0x2
000000000000400c         mov        ebx, 0x3f
0000000000004011         sete       dl
0000000000004014         xor        r12d, r12d
0000000000004017         xor        eax, eax
0000000000004019         jmp        sub_3f20+56
                        ; endp
000000000000401e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4020:
0000000000004020         xor        r10d, r10d
0000000000004023         cmp        dword [rsp+arg_0], 0x2
0000000000004028         je         loc_4530

000000000000402e         mov        byte [rsp+arg_74], r12b
0000000000004033         xor        edx, edx
0000000000004035         xor        eax, eax
0000000000004037         mov        ebx, 0x27
000000000000403c         jmp        sub_3f20+56
                        ; endp
0000000000004041         nop        dword [rax]
0000000000004048         mov        edx, 0x9
000000000000404d         mov        ebx, 0x74

                     loc_4052:
0000000000004052         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_41e0+10, sub_42d0+37, sub_4410+53
0000000000004057         sete       al
000000000000405a         and        al, byte [rsp+arg_7]
000000000000405e         jne        sub_4190+30

0000000000004064         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_4020+114
0000000000004069         jne        loc_40d0

                     loc_406b:
000000000000406b         mov        ebx, edx                                    ; CODE XREF=sub_4140+18
000000000000406d         xor        r12d, r12d
0000000000004070         xor        eax, eax
                        ; endp

                     loc_4072:
0000000000004072         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3f20+61, sub_3f20+69
0000000000004077         jne        loc_3f6b

000000000000407d         jmp        loc_3f89
0000000000004082         nop        word [rax+rax]
0000000000004088         mov        edx, 0x8
000000000000408d         mov        ebx, 0x62
0000000000004092         jmp        sub_4020+68
0000000000004094         nop        dword [rax]
0000000000004098         cmp        dword [rsp+8], 0x2
000000000000409d         je         sub_4470                                    ; sub_4470
00000000000040a3         cmp        byte [rsp+0xd], 0x0
00000000000040a8         je         sub_42b0+16

                     loc_40ae:
00000000000040ae         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_42b0+8
00000000000040b3         je         loc_42c0

00000000000040b9         cmp        qword [rsp+arg_10], 0x0
00000000000040bf         jne        loc_447b

00000000000040c5         mov        ebx, 0x5c
00000000000040ca         nop        word [rax+rax]
                        ; endp

                     loc_40d0:
00000000000040d0         xor        r12d, r12d                                  ; CODE XREF=sub_4020+73, sub_4410+29
                        ; endp

                     loc_40d3:
00000000000040d3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3f20+99, sub_3f20+108
00000000000040d8         sete       dl
00000000000040db         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000040e0         mov        eax, edx
00000000000040e2         jne        loc_4938

00000000000040e8         mov        eax, r8d
00000000000040eb         xor        eax, 0x1
00000000000040ee         and        al, dl
00000000000040f0         je         loc_4121

00000000000040f2         cmp        r13, r15
00000000000040f5         jbe        loc_40fc

00000000000040f7         mov        byte [r14+r15], 0x27

                     loc_40fc:
00000000000040fc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_4020+213
0000000000004100         cmp        r13, rdx
0000000000004103         jbe        loc_410b

0000000000004105         mov        byte [r14+r15+1], 0x24

                     loc_410b:
000000000000410b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_4020+227
000000000000410f         cmp        r13, rdx
0000000000004112         jbe        loc_411a

0000000000004114         mov        byte [r14+r15+2], 0x27

                     loc_411a:
000000000000411a         add        r15, 0x3                                    ; CODE XREF=sub_4020+242
000000000000411e         mov        r8d, eax

                     loc_4121:
0000000000004121         cmp        r13, r15                                    ; CODE XREF=sub_4020+208
0000000000004124         jbe        loc_412b

0000000000004126         mov        byte [r14+r15], 0x5c

                     loc_412b:
000000000000412b         add        r15, 0x1                                    ; CODE XREF=sub_4020+260
000000000000412f         add        rbp, 0x1
0000000000004133         jmp        loc_3fc0
0000000000004138         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4140:
0000000000004140         cmp        byte [rsp+arg_5], 0x0
0000000000004145         jne        loc_4313

000000000000414b         xor        edx, edx
000000000000414d         test       byte [rsp+arg_70], 0x1
0000000000004152         je         loc_406b

0000000000004158         add        rbp, 0x1
000000000000415c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004161         nop        dword [rax]
0000000000004168         cmp        dword [rsp+8], 0x2
000000000000416d         sete       dl
0000000000004170         xor        eax, eax
0000000000004172         jmp        sub_3f20+56
0000000000004177         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4180:
0000000000004180         mov        edx, 0x7
0000000000004185         mov        ebx, 0x61
000000000000418a         jmp        sub_4020+68
                        ; endp
000000000000418f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4190:
0000000000004190         cmp        dword [rsp+8], 0x2
0000000000004195         sete       dl
                        ; endp

                     loc_4198:
0000000000004198         test       rbp, rbp                                    ; CODE XREF=sub_3f20+38, sub_43b0+35
000000000000419b         jne        loc_3f4c

00000000000041a1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_43e0+43
00000000000041a6         and        al, dl
00000000000041a8         je         sub_3f20+56

00000000000041ae         mov        rbp, r11
00000000000041b1         mov        dword [rsp+arg_0], 0x2
00000000000041b9         jmp        sub_4470+1097
                        ; endp
00000000000041be         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_41c0:
00000000000041c0         cmp        dword [rsp+arg_0], 0x2
00000000000041c5         sete       dl
00000000000041c8         xor        r12d, r12d
00000000000041cb         jmp        sub_4190+17
                        ; endp
00000000000041cd         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_41d0:
00000000000041d0         cmp        dword [rsp+arg_0], 0x2
00000000000041d5         mov        ebx, 0x20
00000000000041da         sete       dl
00000000000041dd         jmp        sub_4190+17
                        ; endp
00000000000041df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_41e0:
00000000000041e0         mov        edx, 0xd
00000000000041e5         mov        ebx, 0x72
00000000000041ea         jmp        loc_4052
00000000000041ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41f0:
00000000000041f0         mov        edx, 0xc
00000000000041f5         mov        ebx, 0x66
00000000000041fa         jmp        sub_4020+68
                        ; endp
00000000000041ff         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4200:
0000000000004200         mov        edx, 0xb
0000000000004205         mov        ebx, 0x76
000000000000420a         jmp        sub_4020+68
                        ; endp
000000000000420f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4210:
0000000000004210         mov        edx, 0xa
0000000000004215         mov        ebx, 0x6e
000000000000421a         jmp        sub_4020+50
                        ; endp
000000000000421f         align      32

                     loc_4220:
0000000000004220         xor        r10d, r10d                                  ; CODE XREF=sub_4210+135
0000000000004223         nop        dword [rax+rax]

                     loc_4228:
0000000000004228         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000422e         jne        loc_45d8

0000000000004234         mov        qword [rsp+0xe8+var_B0], r11
0000000000004239         mov        byte [rsp+0xe8+var_B8], r8b
000000000000423e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004243         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004248         mov        rcx, qword [rax]
000000000000424b         movzx      edx, bl
000000000000424e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004254         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000425a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000425f         mov        edi, 0x1
0000000000004264         movzx      eax, word [rcx+rdx*2]
0000000000004268         and        ax, 0x4000
000000000000426c         setne      r12b
0000000000004270         sete       al
0000000000004273         and        al, byte [rsp+0xe8+var_DB]

                     loc_4277:
0000000000004277         test       al, al                                      ; CODE XREF=sub_4470+2221
0000000000004279         jne        loc_4c11

000000000000427f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004284         sete       dl
0000000000004287         jmp        loc_3f58
000000000000428c         align      16

                     loc_4290:
0000000000004290         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004294         cmp        bl, 0x7e
0000000000004297         ja         loc_4220

0000000000004299         lea        rcx, qword [switch_table_7140+552]          ; 0x7368
00000000000042a0         movzx      edx, bl
00000000000042a3         movsxd     rax, dword [rcx+rdx*4]
00000000000042a7         add        rax, rcx
00000000000042aa         jmp        rax
                        ; endp
00000000000042ac         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_42b0:
00000000000042b0         xor        r10d, r10d
00000000000042b3         cmp        byte [rsp+arg_5], 0x0
00000000000042b8         jne        loc_40ae

00000000000042be         nop

                     loc_42c0:
00000000000042c0         mov        edx, 0x5c                                   ; CODE XREF=sub_4020+136, sub_4020+147
00000000000042c5         mov        ebx, 0x5c
00000000000042ca         jmp        sub_4020+68
                        ; endp
00000000000042cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_42d0:
00000000000042d0         mov        edx, 0xc
00000000000042d5         xor        r10d, r10d
00000000000042d8         mov        ebx, 0x66
00000000000042dd         jmp        sub_4020+68
                        ; endp
00000000000042e2         nop        word [rax+rax]
00000000000042e8         mov        edx, 0xa
00000000000042ed         xor        r10d, r10d
00000000000042f0         mov        ebx, 0x6e
00000000000042f5         jmp        sub_4020+50
00000000000042fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4300:
0000000000004300         mov        ebx, 0x61
0000000000004305         jmp        sub_4020+176
                        ; endp
000000000000430a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4310:
0000000000004310         xor        r10d, r10d
                        ; endp

                     loc_4313:
0000000000004313         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4140+5
0000000000004318         sete       dl
000000000000431b         cmp        byte [rsp+arg_7], 0x0
0000000000004320         jne        loc_4eba

0000000000004326         mov        eax, r8d
0000000000004329         mov        rcx, r15
000000000000432c         xor        eax, 0x1
000000000000432f         and        al, dl
0000000000004331         je         loc_4360

0000000000004333         cmp        r13, r15
0000000000004336         jbe        loc_433d

0000000000004338         mov        byte [r14+r15], 0x27

                     loc_433d:
000000000000433d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_4310+38
0000000000004341         cmp        r13, rcx
0000000000004344         jbe        loc_434c

0000000000004346         mov        byte [r14+r15+1], 0x24

                     loc_434c:
000000000000434c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_4310+52
0000000000004350         cmp        r13, rcx
0000000000004353         ja         loc_4989

                     loc_4359:
0000000000004359         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4470+1311
000000000000435d         mov        r8d, eax

                     loc_4360:
0000000000004360         cmp        r13, rcx                                    ; CODE XREF=sub_4310+33
0000000000004363         jbe        loc_436a

0000000000004365         mov        byte [r14+rcx], 0x5c

                     loc_436a:
000000000000436a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4310+83
000000000000436f         lea        r15, qword [rcx+1]
0000000000004373         je         loc_4979

0000000000004379         lea        rax, qword [rbp+1]
000000000000437d         cmp        rax, r11
0000000000004380         jae        loc_439b

0000000000004382         mov        rax, qword [rsp+arg_8]
0000000000004387         movzx      eax, byte [rax+rbp+1]
000000000000438c         mov        byte [rsp+arg_20], al
0000000000004390         sub        eax, 0x30
0000000000004393         cmp        al, 0x9
0000000000004395         jbe        loc_4bc9

                     loc_439b:
000000000000439b         mov        eax, r12d                                   ; CODE XREF=sub_4310+112
000000000000439e         mov        ebx, 0x30
00000000000043a3         xor        r12d, r12d
00000000000043a6         jmp        sub_3f20+56
                        ; endp
00000000000043ab         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_43b0:
00000000000043b0         cmp        dword [rsp+arg_0], 0x2
00000000000043b5         mov        r12d, r10d
00000000000043b8         sete       dl
00000000000043bb         xor        r10d, r10d
00000000000043be         xor        eax, eax
00000000000043c0         jmp        sub_3f20+56
                        ; endp
00000000000043c5         nop        dword [rax]
00000000000043c8         cmp        dword [rsp+8], 0x2
00000000000043cd         sete       dl
00000000000043d0         xor        r10d, r10d
00000000000043d3         jmp        sub_4190+8
00000000000043d8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_43e0:
00000000000043e0         cmp        dword [rsp+8], 0x2
00000000000043e5         sete       dl
00000000000043e8         xor        r10d, r10d
00000000000043eb         xor        r12d, r12d
00000000000043ee         jmp        sub_4190+17
                        ; endp
00000000000043f3         nop        dword [rax+rax]
00000000000043f8         cmp        dword [rsp+8], 0x2
00000000000043fd         mov        r12d, r10d
0000000000004400         mov        ebx, 0x20
0000000000004405         sete       dl
0000000000004408         xor        r10d, r10d
000000000000440b         jmp        sub_4190+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4410:
0000000000004410         mov        edx, 0xd
0000000000004415         xor        r10d, r10d
0000000000004418         mov        ebx, 0x72
000000000000441d         jmp        sub_4020+50
                        ; endp
0000000000004422         nop        word [rax+rax]
0000000000004428         mov        ebx, 0x76
000000000000442d         jmp        sub_4020+176
0000000000004432         nop        word [rax+rax]
0000000000004438         mov        edx, 0x9
000000000000443d         xor        r10d, r10d
0000000000004440         mov        ebx, 0x74
0000000000004445         jmp        sub_4020+50
000000000000444a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4450:
0000000000004450         mov        ebx, 0x62
0000000000004455         jmp        sub_4020+176
                        ; endp
000000000000445a         nop        word [rax+rax]

                     loc_4460:
0000000000004460         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004463         jmp        loc_3f00
0000000000004468         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4470:
0000000000004470         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4020+125
0000000000004475         jne        sub_4470+2416
                        ; endp

                     loc_447b:
000000000000447b         add        rbp, 0x1                                    ; CODE XREF=sub_4020+159
000000000000447f         mov        eax, r8d
0000000000004482         xor        r12d, r12d
0000000000004485         mov        ebx, 0x5c
000000000000448a         jmp        sub_3f20+124
                        ; endp
000000000000448f         align      16

                     loc_4490:
0000000000004490         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004495         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000449a         mov        r12d, r8d
000000000000449d         mov        rbp, r11
00000000000044a0         sete       dl
00000000000044a3         mov        eax, ebx
00000000000044a5         test       r15, r15
00000000000044a8         sete       cl
00000000000044ab         and        eax, edx
00000000000044ad         and        al, cl
00000000000044af         jne        loc_4f16

00000000000044b5         mov        eax, ebx
00000000000044b7         xor        eax, 0x1
00000000000044ba         and        dl, al
00000000000044bc         je         loc_4e2c

00000000000044c2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000044c7         je         loc_4e2a

00000000000044cd         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000044d2         jne        loc_4ecd

00000000000044d8         test       r13, r13
00000000000044db         sete       al
00000000000044de         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000044e4         setne      dl
00000000000044e7         and        al, dl
00000000000044e9         je         loc_4f0c

00000000000044ef         mov        r13, qword [rsp+0xe8+var_98]

                     loc_44f4:
00000000000044f4         lea        rbx, qword [aLibs+29]                       ; 0x70e5, CODE XREF=sub_4470+2781
00000000000044fb         mov        byte [r14], 0x27
00000000000044ff         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004507         mov        r15d, 0x1
000000000000450d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004516         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000451b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004520         mov        byte [rsp+0xe8+var_6C], al
0000000000004524         jmp        loc_3e03
0000000000004529         align      16

                     loc_4530:
0000000000004530         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4020+8
0000000000004535         jne        sub_4470+2416

000000000000453b         test       r13, r13
000000000000453e         je         loc_4940

0000000000004544         xor        edx, edx
0000000000004546         cmp        qword [rsp+arg_48], 0x0
000000000000454c         jne        loc_4940

                     loc_4552:
0000000000004552         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4470+1284, sub_4470+2794
0000000000004557         add        r15, 0x3
000000000000455b         xor        eax, eax
000000000000455d         mov        byte [rsp+arg_74], r12b
0000000000004562         xor        r8d, r8d
0000000000004565         mov        r13, rdx
0000000000004568         mov        ebx, 0x27
000000000000456d         jmp        sub_3f20+105
                        ; endp
0000000000004572         align      8

                     loc_4578:
0000000000004578         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3ff0+19
000000000000457d         je         loc_45a0

000000000000457f         lea        rcx, qword [rbp+2]
0000000000004583         cmp        rcx, r11
0000000000004586         jae        loc_45a0

0000000000004588         mov        rax, qword [rsp+arg_8]
000000000000458d         cmp        byte [rax+rbp+1], 0x3f
0000000000004592         je         loc_4d22

0000000000004598         nop        dword [rax+rax]

                     loc_45a0:
00000000000045a0         xor        edx, edx                                    ; CODE XREF=sub_4470+269, sub_4470+278, sub_4470+2233, sub_4470+2253
00000000000045a2         xor        r12d, r12d
00000000000045a5         xor        eax, eax
00000000000045a7         mov        ebx, 0x3f
00000000000045ac         jmp        sub_3f20+56
                        ; endp
00000000000045b1         align      8

                     loc_45b8:
00000000000045b8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3ff0+10
00000000000045bd         jne        loc_4de0

00000000000045c3         xor        r12d, r12d
00000000000045c6         xor        eax, eax
00000000000045c8         mov        ebx, 0x3f
00000000000045cd         jmp        sub_3f20+105
                        ; endp
00000000000045d2         align      8

                     loc_45d8:
00000000000045d8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_4210+30
00000000000045e0         cmp        r11, 0xffffffffffffffff
00000000000045e4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000045f0         mov        qword [rsp+0xe8+var_C0], rax
00000000000045f5         jne        loc_4624

00000000000045f7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000045fc         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004601         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004606         mov        qword [rsp+0xe8+var_B8], r9
000000000000460b         call       j_strlen                                    ; strlen
0000000000004610         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004616         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000461c         mov        r11, rax
000000000000461f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4624:
0000000000004624         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4470+389
000000000000462c         xor        ecx, ecx
000000000000462e         mov        byte [rsp+0xe8+var_6A], bl
0000000000004632         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004637         mov        rbx, rcx
000000000000463a         mov        qword [rsp+0xe8+var_60], r9
0000000000004642         mov        qword [rsp+0xe8+var_B0], rax
0000000000004647         mov        byte [rsp+0xe8+var_69], r10b
000000000000464c         mov        qword [rsp+0xe8+var_68], r15
0000000000004654         mov        qword [rsp+0xe8+var_A8], r14
0000000000004659         mov        qword [rsp+0xe8+var_78], r13
000000000000465e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4663:
0000000000004663         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4470+623
0000000000004668         lea        r14, qword [rbp+rbx]
000000000000466d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004672         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004677         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000467c         lea        r13, qword [rax+r14]
0000000000004680         sub        rdx, r14
0000000000004683         mov        rsi, r13
0000000000004686         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000468b         test       rax, rax
000000000000468e         mov        r15, rax
0000000000004691         je         loc_46e1

0000000000004693         cmp        rax, 0xffffffffffffffff
0000000000004697         je         loc_4cb5

000000000000469d         cmp        rax, 0xfffffffffffffffe
00000000000046a1         je         loc_4c41

00000000000046a7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000046ac         sete       al
00000000000046af         and        al, byte [rsp+0xe8+var_D9]
00000000000046b3         jne        loc_4850

                     loc_46b9:
00000000000046b9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4470+996, sub_4470+1031
00000000000046c0         call       j_iswprint                                  ; iswprint
00000000000046c5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000046ca         test       eax, eax
00000000000046cc         mov        eax, 0x0
00000000000046d1         cmove      r12d, eax
00000000000046d5         add        rbx, r15
00000000000046d8         call       j_mbsinit                                   ; mbsinit
00000000000046dd         test       eax, eax
00000000000046df         je         loc_4663

                     loc_46e1:
00000000000046e1         mov        edx, r12d                                   ; CODE XREF=sub_4470+545
00000000000046e4         mov        rdi, rbx
00000000000046e7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000046ed         xor        edx, 0x1
00000000000046f0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000046f5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000046fb         and        dl, byte [rsp+0xe8+var_DB]
00000000000046ff         mov        r15, qword [rsp+0xe8+var_68]
0000000000004707         mov        r14, qword [rsp+0xe8+var_A8]
000000000000470c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004711         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4716:
0000000000004716         cmp        rdi, 0x1                                    ; CODE XREF=sub_4470+2112, sub_4470+2168
000000000000471a         jbe        loc_4d1b

                     loc_4720:
0000000000004720         mov        rcx, rdi                                    ; CODE XREF=sub_4470+1961
0000000000004723         xor        esi, esi
0000000000004725         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000472b         add        rcx, rbp
000000000000472e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004733         jmp        loc_47ee
0000000000004738         align      64

                     loc_4740:
0000000000004740         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4470+896
0000000000004745         sete       al
0000000000004748         test       r9b, r9b
000000000000474b         jne        loc_4c00

0000000000004751         mov        esi, r8d
0000000000004754         xor        esi, 0x1
0000000000004757         and        al, sil
000000000000475a         je         loc_478b

000000000000475c         cmp        r13, r15
000000000000475f         jbe        loc_4766

0000000000004761         mov        byte [r14+r15], 0x27

                     loc_4766:
0000000000004766         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4470+751
000000000000476a         cmp        r13, rsi
000000000000476d         jbe        loc_4775

000000000000476f         mov        byte [r14+r15+1], 0x24

                     loc_4775:
0000000000004775         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4470+765
0000000000004779         cmp        r13, rsi
000000000000477c         jbe        loc_4784

000000000000477e         mov        byte [r14+r15+2], 0x27

                     loc_4784:
0000000000004784         add        r15, 0x3                                    ; CODE XREF=sub_4470+780
0000000000004788         mov        r8d, eax

                     loc_478b:
000000000000478b         cmp        r13, r15                                    ; CODE XREF=sub_4470+746
000000000000478e         jbe        loc_4795

0000000000004790         mov        byte [r14+r15], 0x5c

                     loc_4795:
0000000000004795         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4470+798
0000000000004799         cmp        r13, rax
000000000000479c         jbe        loc_47ab

000000000000479e         mov        eax, ebx
00000000000047a0         shr        al, 0x6
00000000000047a3         add        eax, 0x30
00000000000047a6         mov        byte [r14+r15+1], al

                     loc_47ab:
00000000000047ab         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4470+812
00000000000047af         cmp        r13, rax
00000000000047b2         jbe        loc_47c4

00000000000047b4         mov        eax, ebx
00000000000047b6         shr        al, 0x3
00000000000047b9         and        eax, 0x7
00000000000047bc         add        eax, 0x30
00000000000047bf         mov        byte [r14+r15+2], al

                     loc_47c4:
00000000000047c4         and        ebx, 0x7                                    ; CODE XREF=sub_4470+834
00000000000047c7         add        rbp, 0x1
00000000000047cb         add        r15, 0x3
00000000000047cf         add        ebx, 0x30
00000000000047d2         cmp        rbp, rcx
00000000000047d5         jae        loc_3fc0

00000000000047db         mov        esi, edx

                     loc_47dd:
00000000000047dd         cmp        r13, r15                                    ; CODE XREF=sub_4470+985, sub_4470+1969
00000000000047e0         jbe        loc_47e6

00000000000047e2         mov        byte [r14+r15], bl

                     loc_47e6:
00000000000047e6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4470+880
00000000000047ea         add        r15, 0x1

                     loc_47ee:
00000000000047ee         test       dl, dl                                      ; CODE XREF=sub_4470+707
00000000000047f0         jne        loc_4740

00000000000047f6         mov        eax, esi
00000000000047f8         xor        eax, 0x1
00000000000047fb         and        eax, r8d
00000000000047fe         test       r10b, r10b
0000000000004801         je         loc_4811

0000000000004803         cmp        r13, r15
0000000000004806         jbe        loc_480d

0000000000004808         mov        byte [r14+r15], 0x5c

                     loc_480d:
000000000000480d         add        r15, 0x1                                    ; CODE XREF=sub_4470+918

                     loc_4811:
0000000000004811         add        rbp, 0x1                                    ; CODE XREF=sub_4470+913
0000000000004815         cmp        rbp, rcx
0000000000004818         jae        loc_3f9c

000000000000481e         test       al, al
0000000000004820         je         loc_4c1e

0000000000004826         cmp        r13, r15
0000000000004829         jbe        loc_4830

000000000000482b         mov        byte [r14+r15], 0x27

                     loc_4830:
0000000000004830         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4470+953
0000000000004834         cmp        r13, rax
0000000000004837         jbe        loc_483f

0000000000004839         mov        byte [r14+r15+1], 0x27

                     loc_483f:
000000000000483f         add        r15, 0x2                                    ; CODE XREF=sub_4470+967
0000000000004843         xor        r10d, r10d
0000000000004846         xor        r8d, r8d
0000000000004849         jmp        loc_47dd
000000000000484b         align      16

                     loc_4850:
0000000000004850         cmp        r15, 0x1                                    ; CODE XREF=sub_4470+579
0000000000004854         je         loc_46b9

000000000000485a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000485f         lea        rcx, qword [rdi+r15]
0000000000004863         lea        rdx, qword [rdi+r14+1]
0000000000004868         lea        r8, qword [rcx+r14]
000000000000486c         jmp        loc_487d
000000000000486e         align      16

                     loc_4870:
0000000000004870         add        rdx, 0x1                                    ; CODE XREF=sub_4470+1046, sub_4470+1072
0000000000004874         cmp        r8, rdx
0000000000004877         je         loc_46b9

                     loc_487d:
000000000000487d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4470+1020
0000000000004880         sub        ecx, 0x5b
0000000000004883         cmp        cl, 0x21
0000000000004886         ja         loc_4870

0000000000004888         mov        esi, 0x1
000000000000488d         shl        rsi, cl
0000000000004890         mov        rcx, rsi
0000000000004893         movabs     rsi, 0x20000002b
000000000000489d         test       rcx, rsi
00000000000048a0         je         loc_4870

00000000000048a2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000048a7         mov        r13, qword [rsp+0xe8+var_78]
00000000000048ac         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000048b1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_48b9:
00000000000048b9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4470+1227, sub_4470+1948, sub_4470+2585, sub_4470+2734
00000000000048be         je         loc_48d0

00000000000048c0         test       al, al
00000000000048c2         mov        eax, 0x4
00000000000048c7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000048cc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_48d0:
00000000000048d0         sub        rsp, 0x8                                    ; CODE XREF=sub_4470+1102
00000000000048d4         mov        rcx, rbp
00000000000048d7         mov        rsi, r13
00000000000048da         push       qword [rsp+0xf0+var_88]
00000000000048de         push       qword [rsp+0xf8+var_80]
00000000000048e2         mov        rdi, r14
00000000000048e5         push       0x0
00000000000048e7         mov        r9d, dword [rsp+0x108+var_70]
00000000000048ef         mov        r8d, dword [rsp+0x108+var_E0]
00000000000048f4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000048f9         and        r9d, 0xfffffffd
00000000000048fd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004902         add        rsp, 0x20
0000000000004906         mov        r15, rax

                     loc_4909:
0000000000004909         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4470+2549, sub_4470+2560, sub_4470+2711
0000000000004911         xor        rbx, qword [fs:0x28]
000000000000491a         mov        rax, r15
000000000000491d         jne        loc_4f23

0000000000004923         add        rsp, 0xb8
000000000000492a         pop        rbx
000000000000492b         pop        rbp
000000000000492c         pop        r12
000000000000492e         pop        r13
0000000000004930         pop        r14
0000000000004932         pop        r15
0000000000004934         ret
                        ; endp
0000000000004935         align      8

                     loc_4938:
0000000000004938         mov        rbp, r11                                    ; CODE XREF=sub_4020+194
000000000000493b         jmp        loc_48b9

                     loc_4940:
0000000000004940         cmp        r13, r15                                    ; CODE XREF=sub_4470+206, sub_4470+220
0000000000004943         jbe        loc_494a

0000000000004945         mov        byte [r14+r15], 0x27

                     loc_494a:
000000000000494a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4470+1235
000000000000494e         cmp        r13, rax
0000000000004951         jbe        loc_4959

0000000000004953         mov        byte [r14+r15+1], 0x5c

                     loc_4959:
0000000000004959         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4470+1249
000000000000495d         cmp        r13, rax
0000000000004960         jbe        loc_4f52

0000000000004966         mov        rdx, r13
0000000000004969         mov        byte [r14+r15+2], 0x27
000000000000496f         mov        r13, qword [rsp+arg_48]
0000000000004974         jmp        loc_4552

                     loc_4979:
0000000000004979         mov        eax, r12d                                   ; CODE XREF=sub_4310+99
000000000000497c         mov        ebx, 0x30
0000000000004981         xor        r12d, r12d
0000000000004984         jmp        sub_3f20+105
                        ; endp

                     loc_4989:
0000000000004989         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_4310+67
000000000000498f         jmp        loc_4359

                     loc_4994:
0000000000004994         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004996         jne        loc_3dc3

000000000000499c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_49a1:
00000000000049a1         test       r13, r13                                    ; CODE XREF=sub_4470+2749
00000000000049a4         jne        loc_4f3a

00000000000049aa         lea        rax, qword [aLibs+29]                       ; 0x70e5
00000000000049b1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000049ba         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000049bf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000049c4         xor        r12d, r12d
00000000000049c7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000049cc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000049d5         mov        qword [rsp+0xe8+var_A0], rax
00000000000049da         mov        r15d, 0x1
00000000000049e0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000049e8         jmp        loc_3e03
00000000000049ed         align      16

                     loc_49f0:
00000000000049f0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000049f2         jne        loc_4ded

00000000000049f8         test       r13, r13
00000000000049fb         je         loc_4c26

0000000000004a01         mov        byte [r14], 0x22
0000000000004a05         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004a0a         xor        r12d, r12d
0000000000004a0d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a12         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_4a1b:
0000000000004a1b         lea        rax, qword [aLibs+27]                       ; 0x70e3, CODE XREF=sub_4470+1996
0000000000004a22         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004a27         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004a2c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a35         mov        r15d, 0x1
0000000000004a3b         mov        qword [rsp+0xe8+var_A0], rax
0000000000004a40         jmp        loc_3e03

                     loc_4a45:
0000000000004a45         lea        rax, qword [aLibs+27]                       ; case 6, 0x70e3, CODE XREF=quotearg_buffer_restyled+145
0000000000004a4c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004a51         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a56         xor        r12d, r12d
0000000000004a59         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004a62         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004a67         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004a6c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a75         xor        r15d, r15d
0000000000004a78         mov        qword [rsp+0xe8+var_A0], rax
0000000000004a7d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004a85         jmp        loc_3e03

                     loc_4a8a:
0000000000004a8a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000004a8f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a94         xor        r12d, r12d
0000000000004a97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004aa0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004aa5         xor        r15d, r15d
0000000000004aa8         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004aad         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004ab6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004abf         jmp        loc_3e03

                     loc_4ac4:
0000000000004ac4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004ac9         je         loc_4b21

0000000000004acb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x70e7
0000000000004ad2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ad4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ad9         call       j_dcgettext                                 ; dcgettext
0000000000004ade         mov        rcx, rax
0000000000004ae1         mov        qword [rsp+0xe8+var_80], rax
0000000000004ae6         lea        rax, qword [aLibs+31]                       ; 0x70e7
0000000000004aed         cmp        rcx, rax
0000000000004af0         je         loc_4e8e

                     loc_4af6:
0000000000004af6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x70e5, CODE XREF=sub_4470+2607
0000000000004afd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004aff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b04         call       j_dcgettext                                 ; dcgettext
0000000000004b09         mov        rcx, rax
0000000000004b0c         mov        qword [rsp+0xe8+var_88], rax
0000000000004b11         lea        rax, qword [aLibs+29]                       ; 0x70e5
0000000000004b18         cmp        rcx, rax
0000000000004b1b         je         loc_4ea4

                     loc_4b21:
0000000000004b21         xor        r15d, r15d                                  ; CODE XREF=sub_4470+1625, sub_4470+2629
0000000000004b24         test       ebx, ebx
0000000000004b26         je         loc_4ced

                     loc_4b2c:
0000000000004b2c         test       ebx, ebx                                    ; CODE XREF=sub_4470+2183, sub_4470+2214
0000000000004b2e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004b33         setne      byte [rsp+0xe8+var_D9]
0000000000004b38         xor        r12d, r12d
0000000000004b3b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000004b3e         call       j_strlen                                    ; strlen
0000000000004b43         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004b48         mov        qword [rsp+0xe8+var_D0], rax
0000000000004b4d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b52         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b57         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b60         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004b65         jmp        loc_3e03

                     loc_4b6a:
0000000000004b6a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000004b6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b74         xor        r12d, r12d
0000000000004b77         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b80         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004b85         xor        r15d, r15d
0000000000004b88         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004b8d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004b96         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004b9f         jmp        loc_3e03

                     loc_4ba4:
0000000000004ba4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004ba9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004bae         xor        r12d, r12d
0000000000004bb1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004bba         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004bbf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004bc4         jmp        loc_3de3

                     loc_4bc9:
0000000000004bc9         cmp        r13, r15                                    ; CODE XREF=sub_4310+133
0000000000004bcc         jbe        loc_4bd3

0000000000004bce         mov        byte [r14+r15], 0x30

                     loc_4bd3:
0000000000004bd3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4470+1884
0000000000004bd7         cmp        r13, rax
0000000000004bda         jbe        loc_4be2

0000000000004bdc         mov        byte [r14+rcx+2], 0x30

                     loc_4be2:
0000000000004be2         mov        eax, r12d                                   ; CODE XREF=sub_4470+1898
0000000000004be5         lea        r15, qword [rcx+3]
0000000000004be9         xor        r12d, r12d
0000000000004bec         mov        ebx, 0x30
0000000000004bf1         jmp        sub_3f20+56
                        ; endp
0000000000004bf6         align      1024

                     loc_4c00:
0000000000004c00         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4470+731
0000000000004c05         mov        rbp, r11
0000000000004c08         mov        byte [rsp+0xe8+var_DB], bl
0000000000004c0c         jmp        loc_48b9

                     loc_4c11:
0000000000004c11         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4210+105
0000000000004c16         xor        r12d, r12d
0000000000004c19         jmp        loc_4720

                     loc_4c1e:
0000000000004c1e         xor        r10d, r10d                                  ; CODE XREF=sub_4470+944
0000000000004c21         jmp        loc_47dd

                     loc_4c26:
0000000000004c26         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4470+1419
0000000000004c2f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004c34         xor        r12d, r12d
0000000000004c37         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004c3c         jmp        loc_4a1b

                     loc_4c41:
0000000000004c41         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4470+561
0000000000004c46         mov        rsi, r14
0000000000004c49         mov        rcx, r13
0000000000004c4c         mov        rax, rbx
0000000000004c4f         mov        rdi, rbx
0000000000004c52         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004c58         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004c5d         mov        r9, qword [rsp+0xe8+var_60]
0000000000004c65         cmp        rsi, r11
0000000000004c68         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004c6e         mov        r15, qword [rsp+0xe8+var_68]
0000000000004c76         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004c7b         mov        r13, qword [rsp+0xe8+var_78]
0000000000004c80         jae        loc_4ca8

0000000000004c82         cmp        byte [rcx], 0x0
0000000000004c85         jne        loc_4c97

0000000000004c87         jmp        loc_4ca8
0000000000004c89         align      16

                     loc_4c90:
0000000000004c90         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4470+2099
0000000000004c95         je         loc_4ca5

                     loc_4c97:
0000000000004c97         add        rax, 0x1                                    ; CODE XREF=sub_4470+2069
0000000000004c9b         lea        rdx, qword [rbp+rax]
0000000000004ca0         cmp        r11, rdx
0000000000004ca3         ja         loc_4c90

                     loc_4ca5:
0000000000004ca5         mov        rdi, rax                                    ; CODE XREF=sub_4470+2085

                     loc_4ca8:
0000000000004ca8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4470+2064, sub_4470+2071
0000000000004cad         xor        r12d, r12d
0000000000004cb0         jmp        loc_4716

                     loc_4cb5:
0000000000004cb5         mov        rdi, rbx                                    ; CODE XREF=sub_4470+551
0000000000004cb8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004cbe         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004cc3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004cc9         mov        r15, qword [rsp+0xe8+var_68]
0000000000004cd1         xor        r12d, r12d
0000000000004cd4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004cd9         mov        r13, qword [rsp+0xe8+var_78]
0000000000004cde         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004ce3         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004ce8         jmp        loc_4716

                     loc_4ced:
0000000000004ced         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4470+1718
0000000000004cf2         movzx      eax, byte [rdx]
0000000000004cf5         test       al, al
0000000000004cf7         je         loc_4b2c

0000000000004cfd         nop        dword [rax]

                     loc_4d00:
0000000000004d00         cmp        r13, r15                                    ; CODE XREF=sub_4470+2212
0000000000004d03         jbe        loc_4d09

0000000000004d05         mov        byte [r14+r15], al

                     loc_4d09:
0000000000004d09         add        r15, 0x1                                    ; CODE XREF=sub_4470+2195
0000000000004d0d         movzx      eax, byte [rdx+r15]
0000000000004d12         test       al, al
0000000000004d14         jne        loc_4d00

0000000000004d16         jmp        loc_4b2c

                     loc_4d1b:
0000000000004d1b         mov        eax, edx                                    ; CODE XREF=sub_4470+682
0000000000004d1d         jmp        loc_4277

                     loc_4d22:
0000000000004d22         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4470+290
0000000000004d26         cmp        bl, 0x3e
0000000000004d29         ja         loc_45a0

0000000000004d2f         movabs     rax, 0x7000a38200000000
0000000000004d39         bt         rax, rbx
0000000000004d3d         jae        loc_45a0

0000000000004d43         cmp        byte [rsp+arg_7], 0x0
0000000000004d48         jne        loc_4f32

0000000000004d4e         cmp        r13, r15
0000000000004d51         jbe        loc_4d58

0000000000004d53         mov        byte [r14+r15], 0x3f

                     loc_4d58:
0000000000004d58         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4470+2273
0000000000004d5c         cmp        r13, rax
0000000000004d5f         jbe        loc_4d67

0000000000004d61         mov        byte [r14+r15+1], 0x22

                     loc_4d67:
0000000000004d67         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4470+2287
0000000000004d6b         cmp        r13, rax
0000000000004d6e         jbe        loc_4d76

0000000000004d70         mov        byte [r14+r15+2], 0x22

                     loc_4d76:
0000000000004d76         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4470+2302
0000000000004d7a         cmp        r13, rax
0000000000004d7d         jbe        loc_4d85

0000000000004d7f         mov        byte [r14+r15+3], 0x3f

                     loc_4d85:
0000000000004d85         add        r15, 0x4                                    ; CODE XREF=sub_4470+2317
0000000000004d89         xor        edx, edx
0000000000004d8b         xor        r12d, r12d
0000000000004d8e         xor        eax, eax
0000000000004d90         mov        rbp, rcx
0000000000004d93         jmp        sub_3f20+56
                        ; endp

                     loc_4d98:
0000000000004d98         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000004d9a         je         loc_4f28

0000000000004da0         lea        rax, qword [aLibs+29]                       ; 0x70e5
0000000000004da7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004dac         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004db1         xor        r12d, r12d
0000000000004db4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004dbd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004dc2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004dc7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004dd0         xor        r15d, r15d
0000000000004dd3         mov        qword [rsp+0xe8+var_A0], rax
0000000000004dd8         jmp        loc_3e03
0000000000004ddd         align      32

                     loc_4de0:
0000000000004de0         mov        rbp, r11                                    ; CODE XREF=sub_4470+333
0000000000004de3         movzx      eax, byte [rsp+arg_7]
0000000000004de8         jmp        sub_4470+1097
                        ; endp

                     loc_4ded:
0000000000004ded         lea        rax, qword [aLibs+27]                       ; 0x70e3, CODE XREF=sub_4470+1410
0000000000004df4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004df9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004dfe         xor        r12d, r12d
0000000000004e01         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e0a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004e0f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e14         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004e1d         xor        r15d, r15d
0000000000004e20         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e25         jmp        loc_3e03

                     loc_4e2a:
0000000000004e2a         mov        eax, edx                                    ; CODE XREF=sub_4470+87

                     loc_4e2c:
0000000000004e2c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4470+76, sub_4470+2721
0000000000004e31         test       rbx, rbx
0000000000004e34         je         loc_4e62

0000000000004e36         test       al, al
0000000000004e38         je         loc_4e62

0000000000004e3a         movzx      ecx, byte [rbx]
0000000000004e3d         mov        rax, rbx
0000000000004e40         test       cl, cl
0000000000004e42         je         loc_4e62

0000000000004e44         mov        rdx, r15
0000000000004e47         sub        rax, r15

                     loc_4e4a:
0000000000004e4a         cmp        r13, rdx                                    ; CODE XREF=sub_4470+2541
0000000000004e4d         jbe        loc_4e53

0000000000004e4f         mov        byte [r14+rdx], cl

                     loc_4e53:
0000000000004e53         add        rdx, 0x1                                    ; CODE XREF=sub_4470+2525
0000000000004e57         movzx      ecx, byte [rax+rdx]
0000000000004e5b         test       cl, cl
0000000000004e5d         jne        loc_4e4a

0000000000004e5f         mov        r15, rdx

                     loc_4e62:
0000000000004e62         cmp        r13, r15                                    ; CODE XREF=sub_4470+2500, sub_4470+2504, sub_4470+2514
0000000000004e65         jbe        loc_4909

0000000000004e6b         mov        byte [r14+r15], 0x0
0000000000004e70         jmp        loc_4909

                     loc_4e75:
0000000000004e75         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000004e7a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004e7f         mov        rbp, r11
0000000000004e82         sete       al
0000000000004e85         mov        byte [rsp+0xe8+var_DB], bl
0000000000004e89         jmp        loc_48b9

                     loc_4e8e:
0000000000004e8e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4470+1664
0000000000004e92         mov        rdi, rcx
0000000000004e95         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004e9a         mov        qword [rsp+0xe8+var_80], rax
0000000000004e9f         jmp        loc_4af6

                     loc_4ea4:
0000000000004ea4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4470+1707
0000000000004ea8         mov        rdi, rcx
0000000000004eab         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004eb0         mov        qword [rsp+0xe8+var_88], rax
0000000000004eb5         jmp        loc_4b21

                     loc_4eba:
0000000000004eba         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_4310+16
0000000000004ebf         mov        rbp, r11
0000000000004ec2         mov        eax, edx
0000000000004ec4         mov        byte [rsp+arg_5], bl
0000000000004ec8         jmp        sub_4470+1097
                        ; endp

                     loc_4ecd:
0000000000004ecd         sub        rsp, 0x8                                    ; CODE XREF=sub_4470+98
0000000000004ed1         mov        r8d, 0x5
0000000000004ed7         mov        rcx, r11
0000000000004eda         push       qword [rsp+0xf0+var_88]
0000000000004ede         push       qword [rsp+0xf8+var_80]
0000000000004ee2         mov        rdi, r14
0000000000004ee5         push       qword [rsp+0x100+var_C8]
0000000000004ee9         mov        r9d, dword [rsp+0x108+var_70]
0000000000004ef1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004ef6         mov        rsi, qword [rsp+0x108+var_98]
0000000000004efb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004f00         add        rsp, 0x20
0000000000004f04         mov        r15, rax
0000000000004f07         jmp        loc_4909

                     loc_4f0c:
0000000000004f0c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4470+121
0000000000004f11         jmp        loc_4e2c

                     loc_4f16:
0000000000004f16         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4470+63
0000000000004f1e         jmp        loc_48b9

                     loc_4f23:
0000000000004f23         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4470+1197
                        ; endp

                     loc_4f28:
0000000000004f28         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4470+2346
0000000000004f2d         jmp        loc_49a1

                     loc_4f32:
0000000000004f32         mov        rbp, r11                                    ; CODE XREF=sub_4470+2264
0000000000004f35         jmp        sub_4470+1120
                        ; endp

                     loc_4f3a:
0000000000004f3a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4470+1332
0000000000004f3f         xor        eax, eax
0000000000004f41         xor        r12d, r12d
0000000000004f44         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f4d         jmp        loc_44f4

                     loc_4f52:
0000000000004f52         mov        rdx, r13                                    ; CODE XREF=sub_4470+1264
0000000000004f55         mov        r13, qword [rsp+arg_48]
0000000000004f5a         jmp        loc_4552

                     loc_4f5f:
0000000000004f5f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004f64         align      16                                          ; End of unwind block (FDE at 0x8490)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004f70         push       r15                                         ; Begin of unwind block (FDE at 0x8508), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004f72         push       r14
0000000000004f74         movsxd     r15, edi
0000000000004f77         push       r13
0000000000004f79         push       r12
0000000000004f7b         mov        r14, rdx
0000000000004f7e         push       rbp
0000000000004f7f         push       rbx
0000000000004f80         mov        rbp, rcx
0000000000004f83         sub        rsp, 0x28
0000000000004f87         mov        qword [rsp+0x58+var_50], rsi
0000000000004f8c         call       j___errno_location                          ; __errno_location
0000000000004f91         mov        r13, rax
0000000000004f94         mov        eax, dword [rax]
0000000000004f96         test       r15d, r15d
0000000000004f99         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004fa0         mov        dword [rsp+0x58+var_40], eax
0000000000004fa4         js         loc_5111

0000000000004faa         cmp        dword [nslots], r15d                        ; nslots
0000000000004fb1         jg         loc_5015

0000000000004fb3         cmp        r15d, 0x7fffffff
0000000000004fba         je         loc_5116

0000000000004fc0         lea        r12d, dword [r15+1]
0000000000004fc4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004fcb         movsxd     rsi, r12d
0000000000004fce         shl        rsi, 0x4
0000000000004fd2         cmp        rbx, rax
0000000000004fd5         je         loc_50f0

0000000000004fdb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004fde         call       xrealloc                                    ; xrealloc
0000000000004fe3         mov        rbx, rax
0000000000004fe6         mov        qword [slotvec], rax                        ; slotvec

                     loc_4fed:
0000000000004fed         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004ff4         mov        edx, r12d
0000000000004ff7         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004ff9         sub        edx, edi
0000000000004ffb         shl        rdi, 0x4
0000000000004fff         movsxd     rdx, edx
0000000000005002         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000005005         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000005009         call       j_memset                                    ; memset
000000000000500e         mov        dword [nslots], r12d                        ; nslots

                     loc_5015:
0000000000005015         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000005018         shl        r15, 0x4
000000000000501c         sub        rsp, 0x8
0000000000005020         add        rbx, r15
0000000000005023         lea        r15, qword [rbp+8]
0000000000005027         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000502b         mov        r11, qword [rbx]
000000000000502e         mov        r12, qword [rbx+8]
0000000000005032         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005035         or         eax, 0x1
0000000000005038         mov        dword [rsp+0x60+var_3C], eax
000000000000503c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000503f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000005042         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005045         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005047         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000504a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000504f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005052         mov        qword [rsp+0x78+var_48], r11
0000000000005057         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000505c         add        rsp, 0x20
0000000000005060         mov        r11, qword [rsp+0x58+var_48]
0000000000005065         cmp        r11, rax
0000000000005068         ja         loc_50d1

000000000000506a         lea        rsi, qword [rax+1]
000000000000506e         lea        rax, qword [slot0]                          ; slot0
0000000000005075         cmp        r12, rax
0000000000005078         mov        qword [rbx], rsi
000000000000507b         je         loc_508f

000000000000507d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005080         mov        qword [rsp+0x58+var_48], rsi
0000000000005085         call       j_free                                      ; free
000000000000508a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_508f:
000000000000508f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005092         mov        qword [rsp+0x58+var_48], rsi
0000000000005097         call       xmalloc                                     ; xmalloc
000000000000509c         sub        rsp, 0x8
00000000000050a0         mov        qword [rbx+8], rax
00000000000050a4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000050a8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000050ab         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000050ae         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000050b1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000050b3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000050b8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000050bb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000050c0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000050c5         mov        r12, rax
00000000000050c8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050cd         add        rsp, 0x20

                     loc_50d1:
00000000000050d1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000050d5         mov        dword [r13], eax
00000000000050d9         add        rsp, 0x28
00000000000050dd         mov        rax, r12
00000000000050e0         pop        rbx
00000000000050e1         pop        rbp
00000000000050e2         pop        r12
00000000000050e4         pop        r13
00000000000050e6         pop        r14
00000000000050e8         pop        r15
00000000000050ea         ret
                        ; endp
00000000000050eb         align      16

                     loc_50f0:
00000000000050f0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000050f2         call       xrealloc                                    ; xrealloc
00000000000050f7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000050ff         mov        rbx, rax
0000000000005102         mov        qword [slotvec], rax                        ; slotvec
0000000000005109         movups     xmmword [rax], xmm0
000000000000510c         jmp        loc_4fed

                     loc_5111:
0000000000005111         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_5116:
0000000000005116         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_511b:
000000000000511b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8508)
                     clone_quoting_options:
0000000000005120         push       r12                                         ; Begin of unwind block (FDE at 0x8574)
0000000000005122         push       rbp
0000000000005123         push       rbx
0000000000005124         mov        rbx, rdi
0000000000005127         call       j___errno_location                          ; __errno_location
000000000000512c         mov        r12d, dword [rax]
000000000000512f         mov        rbp, rax
0000000000005132         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005139         test       rbx, rbx
000000000000513c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000005141         cmove      rbx, rax
0000000000005145         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000005148         call       xmemdup                                     ; xmemdup
000000000000514d         mov        dword [rbp], r12d
0000000000005151         pop        rbx
0000000000005152         pop        rbp
0000000000005153         pop        r12
0000000000005155         ret
                        ; endp
0000000000005156         align      32                                          ; End of unwind block (FDE at 0x8574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005160         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x85a0), default_quoting_options
0000000000005167         test       rdi, rdi
000000000000516a         cmove      rdi, rax
000000000000516e         mov        eax, dword [rdi]
0000000000005170         ret
                        ; endp
0000000000005171         align      128                                         ; End of unwind block (FDE at 0x85a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005180         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x85b4), default_quoting_options
0000000000005187         test       rdi, rdi
000000000000518a         cmove      rdi, rax
000000000000518e         mov        dword [rdi], esi
0000000000005190         ret
                        ; endp
0000000000005191         align      32                                          ; End of unwind block (FDE at 0x85b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000051a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x85c8), default_quoting_options
00000000000051a7         test       rdi, rdi
00000000000051aa         mov        ecx, esi
00000000000051ac         cmove      rdi, rax
00000000000051b0         mov        eax, esi
00000000000051b2         and        ecx, 0x1f
00000000000051b5         shr        al, 0x5
00000000000051b8         movzx      eax, al
00000000000051bb         lea        rdi, qword [rdi+rax*4+8]
00000000000051c0         mov        esi, dword [rdi]
00000000000051c2         mov        eax, esi
00000000000051c4         shr        eax, cl
00000000000051c6         xor        edx, eax
00000000000051c8         and        eax, 0x1
00000000000051cb         and        edx, 0x1
00000000000051ce         shl        edx, cl
00000000000051d0         xor        edx, esi
00000000000051d2         mov        dword [rdi], edx
00000000000051d4         ret
                        ; endp
00000000000051d5         align      32                                          ; End of unwind block (FDE at 0x85c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000051e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x85dc), default_quoting_options
00000000000051e7         test       rdi, rdi
00000000000051ea         cmove      rdi, rax
00000000000051ee         mov        eax, dword [rdi+4]
00000000000051f1         mov        dword [rdi+4], esi
00000000000051f4         ret
                        ; endp
00000000000051f5         align      512                                         ; End of unwind block (FDE at 0x85dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000005200         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x85f0), default_quoting_options
0000000000005207         test       rdi, rdi
000000000000520a         cmove      rdi, rax
000000000000520e         test       rsi, rsi
0000000000005211         mov        dword [rdi], 0xa
0000000000005217         je         loc_5227

0000000000005219         test       rdx, rdx
000000000000521c         je         loc_5227

000000000000521e         mov        qword [rdi+0x28], rsi
0000000000005222         mov        qword [rdi+0x30], rdx
0000000000005226         ret
                        ; endp

                     loc_5227:
0000000000005227         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000522b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000005230         push       r15                                         ; End of unwind block (FDE at 0x85f0), Begin of unwind block (FDE at 0x8604)
0000000000005232         push       r14
0000000000005234         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000523b         push       r13
000000000000523d         push       r12
000000000000523f         mov        r13, rdi
0000000000005242         push       rbp
0000000000005243         push       rbx
0000000000005244         mov        rbx, r8
0000000000005247         mov        r14, rsi
000000000000524a         mov        r15, rdx
000000000000524d         sub        rsp, 0x18
0000000000005251         test       r8, r8
0000000000005254         cmove      rbx, rax
0000000000005258         mov        qword [rsp+0x48+var_40], rcx
000000000000525d         call       j___errno_location                          ; __errno_location
0000000000005262         mov        r12d, dword [rax]
0000000000005265         mov        rbp, rax
0000000000005268         lea        rax, qword [rbx+8]
000000000000526c         sub        rsp, 0x8
0000000000005270         mov        r9d, dword [rbx+4]
0000000000005274         push       qword [rbx+0x30]
0000000000005277         mov        r8d, dword [rbx]
000000000000527a         push       qword [rbx+0x28]
000000000000527d         mov        rdx, r15
0000000000005280         push       rax
0000000000005281         mov        rcx, qword [rsp+0x68+var_40]
0000000000005286         mov        rsi, r14
0000000000005289         mov        rdi, r13
000000000000528c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005291         mov        dword [rbp], r12d
0000000000005295         add        rsp, 0x38
0000000000005299         pop        rbx
000000000000529a         pop        rbp
000000000000529b         pop        r12
000000000000529d         pop        r13
000000000000529f         pop        r14
00000000000052a1         pop        r15
00000000000052a3         ret
                        ; endp
00000000000052a4         align      16                                          ; End of unwind block (FDE at 0x8604)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000052b0         push       r15                                         ; Begin of unwind block (FDE at 0x8658), CODE XREF=quotearg_alloc+5
00000000000052b2         push       r14
00000000000052b4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000052bb         push       r13
00000000000052bd         push       r12
00000000000052bf         mov        r12, rdx
00000000000052c2         push       rbp
00000000000052c3         push       rbx
00000000000052c4         mov        rbx, rcx
00000000000052c7         mov        r14, rdi
00000000000052ca         mov        r15, rsi
00000000000052cd         sub        rsp, 0x38
00000000000052d1         test       rcx, rcx
00000000000052d4         cmove      rbx, rax
00000000000052d8         xor        ebp, ebp
00000000000052da         call       j___errno_location                          ; __errno_location
00000000000052df         test       r12, r12
00000000000052e2         mov        r13, rax
00000000000052e5         mov        eax, dword [rax]
00000000000052e7         sete       bpl
00000000000052eb         or         ebp, dword [rbx+4]
00000000000052ee         lea        r10, qword [rbx+8]
00000000000052f2         sub        rsp, 0x8
00000000000052f6         mov        r8d, dword [rbx]
00000000000052f9         mov        rcx, r15
00000000000052fc         mov        dword [rsp+0x70+var_5C], eax
0000000000005300         push       qword [rbx+0x30]
0000000000005303         mov        rdx, r14
0000000000005306         push       qword [rbx+0x28]
0000000000005309         push       r10
000000000000530b         xor        esi, esi
000000000000530d         mov        r9d, ebp
0000000000005310         xor        edi, edi
0000000000005312         mov        qword [rsp+0x88+var_48], r10
0000000000005317         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000531c         lea        rsi, qword [rax+1]
0000000000005320         mov        qword [rsp+0x88+var_40], rax
0000000000005325         add        rsp, 0x20
0000000000005329         mov        rdi, rsi
000000000000532c         mov        qword [rsp+0x68+var_50], rsi
0000000000005331         call       xmalloc                                     ; xmalloc
0000000000005336         mov        qword [rsp+0x68+var_58], rax
000000000000533b         sub        rsp, 0x8
000000000000533f         push       qword [rbx+0x30]
0000000000005342         push       qword [rbx+0x28]
0000000000005345         mov        r10, qword [rsp+0x80+var_48]
000000000000534a         mov        r9d, ebp
000000000000534d         mov        r8d, dword [rbx]
0000000000005350         mov        rcx, r15
0000000000005353         mov        rdx, r14
0000000000005356         mov        rdi, rax
0000000000005359         push       r10
000000000000535b         mov        rsi, qword [rsp+0x88+var_50]
0000000000005360         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005365         mov        eax, dword [rsp+0x88+var_5C]
0000000000005369         add        rsp, 0x20
000000000000536d         test       r12, r12
0000000000005370         mov        dword [r13], eax
0000000000005374         je         loc_537f

0000000000005376         mov        r11, qword [rsp+0x68+var_40]
000000000000537b         mov        qword [r12], r11

                     loc_537f:
000000000000537f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005384         add        rsp, 0x38
0000000000005388         pop        rbx
0000000000005389         pop        rbp
000000000000538a         pop        r12
000000000000538c         pop        r13
000000000000538e         pop        r14
0000000000005390         pop        r15
0000000000005392         ret
                        ; endp
0000000000005393         align      32                                          ; End of unwind block (FDE at 0x8658)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000053a0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x86c4)
00000000000053a3         xor        edx, edx
00000000000053a5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000053aa         align      16                                          ; End of unwind block (FDE at 0x86c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000053b0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x86d8), nslots
00000000000053b6         push       r12
00000000000053b8         mov        r12, qword [slotvec]                        ; slotvec
00000000000053bf         push       rbp
00000000000053c0         push       rbx
00000000000053c1         cmp        eax, 0x1
00000000000053c4         jle        loc_53f1

00000000000053c6         sub        eax, 0x2
00000000000053c9         lea        rbx, qword [r12+0x18]
00000000000053ce         shl        rax, 0x4
00000000000053d2         lea        rbp, qword [r12+rax+0x28]
00000000000053d7         nop        word [rax+rax]

                     loc_53e0:
00000000000053e0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000053e3         add        rbx, 0x10
00000000000053e7         call       j_free                                      ; free
00000000000053ec         cmp        rbx, rbp
00000000000053ef         jne        loc_53e0

                     loc_53f1:
00000000000053f1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000053f6         lea        rbx, qword [slot0]                          ; slot0
00000000000053fd         cmp        rdi, rbx
0000000000005400         je         loc_5419

0000000000005402         call       j_free                                      ; free
0000000000005407         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005412         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_5419:
0000000000005419         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005420         cmp        r12, rbx
0000000000005423         je         loc_5434

0000000000005425         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005428         call       j_free                                      ; free
000000000000542d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_5434:
0000000000005434         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000005435         mov        dword [nslots], 0x1                         ; nslots
000000000000543f         pop        rbp
0000000000005440         pop        r12
0000000000005442         ret
                        ; endp
0000000000005443         align      16                                          ; End of unwind block (FDE at 0x86d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000005450         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8704), default_quoting_options
0000000000005457         mov        rdx, 0xffffffffffffffff
000000000000545e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005463         align      16                                          ; End of unwind block (FDE at 0x8704)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005470         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8718), default_quoting_options
0000000000005477         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000547c         align      128                                         ; End of unwind block (FDE at 0x8718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005480         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x872c), default_quoting_options
0000000000005487         mov        rsi, rdi
000000000000548a         mov        rdx, 0xffffffffffffffff
0000000000005491         xor        edi, edi
0000000000005493         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005498         align      32                                          ; End of unwind block (FDE at 0x872c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000054a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8740), default_quoting_options
00000000000054a7         mov        rdx, rsi
00000000000054aa         mov        rsi, rdi
00000000000054ad         xor        edi, edi
00000000000054af         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000054b4         align      64                                          ; End of unwind block (FDE at 0x8740)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000054c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8754)
00000000000054c4         mov        rax, rdx
00000000000054c7         mov        rdx, qword [fs:0x28]
00000000000054d0         mov        qword [rsp+0x48+var_10], rdx
00000000000054d5         xor        edx, edx
00000000000054d7         cmp        esi, 0xa
00000000000054da         je         loc_5544

00000000000054dc         mov        dword [rsp+0x48+var_48], esi
00000000000054df         mov        rcx, rsp
00000000000054e2         mov        rdx, 0xffffffffffffffff
00000000000054e9         mov        rsi, rax
00000000000054ec         mov        qword [rsp+0x48+var_44], 0x0
00000000000054f5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000054fe         mov        qword [rsp+0x48+var_34], 0x0
0000000000005507         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005510         mov        qword [rsp+0x48+var_24], 0x0
0000000000005519         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005522         mov        dword [rsp+0x48+var_14], 0x0
000000000000552a         call       quotearg_n_options                          ; quotearg_n_options
000000000000552f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005534         xor        rcx, qword [fs:0x28]
000000000000553d         jne        loc_5549

000000000000553f         add        rsp, 0x48
0000000000005543         ret
                        ; endp

                     loc_5544:
0000000000005544         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5549:
0000000000005549         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000554e         align      16                                          ; End of unwind block (FDE at 0x8754)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005550         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8770), CODE XREF=quotearg_style_mem+10
0000000000005554         mov        rax, rdx
0000000000005557         mov        rdx, rcx
000000000000555a         mov        rcx, qword [fs:0x28]
0000000000005563         mov        qword [rsp+0x48+var_10], rcx
0000000000005568         xor        ecx, ecx
000000000000556a         cmp        esi, 0xa
000000000000556d         je         loc_55d0

000000000000556f         mov        dword [rsp+0x48+var_48], esi
0000000000005572         mov        rcx, rsp
0000000000005575         mov        rsi, rax
0000000000005578         mov        qword [rsp+0x48+var_44], 0x0
0000000000005581         mov        qword [rsp+0x48+var_3C], 0x0
000000000000558a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005593         mov        qword [rsp+0x48+var_2C], 0x0
000000000000559c         mov        qword [rsp+0x48+var_24], 0x0
00000000000055a5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000055ae         mov        dword [rsp+0x48+var_14], 0x0
00000000000055b6         call       quotearg_n_options                          ; quotearg_n_options
00000000000055bb         mov        rdx, qword [rsp+0x48+var_10]
00000000000055c0         xor        rdx, qword [fs:0x28]
00000000000055c9         jne        loc_55d5

00000000000055cb         add        rsp, 0x48
00000000000055cf         ret
                        ; endp

                     loc_55d0:
00000000000055d0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_55d5:
00000000000055d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000055da         align      32                                          ; End of unwind block (FDE at 0x8770)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000055e0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x878c)
00000000000055e3         mov        esi, edi
00000000000055e5         xor        edi, edi
00000000000055e7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000055ec         align      16                                          ; End of unwind block (FDE at 0x878c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000055f0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x87a0)
00000000000055f3         mov        rdx, rsi
00000000000055f6         mov        esi, edi
00000000000055f8         xor        edi, edi
00000000000055fa         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000055ff         align      512                                         ; End of unwind block (FDE at 0x87a0)

                     quotearg_char_mem:
0000000000005600         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x87b4), CODE XREF=quotearg_char+11
0000000000005604         mov        ecx, edx
0000000000005606         mov        rax, qword [fs:0x28]
000000000000560f         mov        qword [rsp+0x48+var_10], rax
0000000000005614         xor        eax, eax
0000000000005616         mov        rax, qword [qword_20a210]                   ; qword_20a210
000000000000561d         mov        r8, rsp
0000000000005620         and        ecx, 0x1f
0000000000005623         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000562b         mov        qword [rsp+0x48+var_18], rax
0000000000005630         mov        eax, edx
0000000000005632         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005636         shr        al, 0x5
0000000000005639         movzx      eax, al
000000000000563c         lea        r9, qword [r8+rax*4+8]
0000000000005641         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a1f0
0000000000005649         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000564e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a200
0000000000005656         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000565b         mov        edx, dword [r9]
000000000000565e         mov        eax, edx
0000000000005660         shr        eax, cl
0000000000005662         not        eax
0000000000005664         and        eax, 0x1
0000000000005667         shl        eax, cl
0000000000005669         mov        rcx, r8
000000000000566c         xor        eax, edx
000000000000566e         mov        rdx, rsi
0000000000005671         mov        rsi, rdi
0000000000005674         mov        dword [r9], eax
0000000000005677         xor        edi, edi
0000000000005679         call       quotearg_n_options                          ; quotearg_n_options
000000000000567e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005683         xor        rsi, qword [fs:0x28]
000000000000568c         jne        loc_5693

000000000000568e         add        rsp, 0x48
0000000000005692         ret
                        ; endp

                     loc_5693:
0000000000005693         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005698         align      32                                          ; End of unwind block (FDE at 0x87b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000056a0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x87d0)
00000000000056a4         mov        rsi, 0xffffffffffffffff
00000000000056ab         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000056b0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x87d0), Begin of unwind block (FDE at 0x87e4), CODE XREF=close_stdout+101
00000000000056b5         mov        rsi, 0xffffffffffffffff
00000000000056bc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000056c1         align      16                                          ; End of unwind block (FDE at 0x87e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000056d0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x87f8)
00000000000056d5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000056da         align      32                                          ; End of unwind block (FDE at 0x87f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000056e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x880c), CODE XREF=main+591
00000000000056e4         mov        rax, rdx
00000000000056e7         mov        rdx, qword [fs:0x28]
00000000000056f0         mov        qword [rsp+0x48+var_10], rdx
00000000000056f5         xor        edx, edx
00000000000056f7         cmp        esi, 0xa
00000000000056fa         je         loc_5764

00000000000056fc         mov        dword [rsp+0x48+var_48], esi
00000000000056ff         mov        rcx, rsp
0000000000005702         mov        rdx, 0xffffffffffffffff
0000000000005709         mov        rsi, rax
000000000000570c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005715         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000571e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005727         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005730         mov        qword [rsp+0x48+var_24], 0x0
0000000000005739         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005742         mov        dword [rsp+0x48+var_14], 0x0
000000000000574a         call       quotearg_n_options                          ; quotearg_n_options
000000000000574f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005754         xor        rcx, qword [fs:0x28]
000000000000575d         jne        loc_5769

000000000000575f         add        rsp, 0x48
0000000000005763         ret
                        ; endp

                     loc_5764:
0000000000005764         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5769:
0000000000005769         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000576e         align      16                                          ; End of unwind block (FDE at 0x880c)

                     quotearg_n_custom_mem:
0000000000005770         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8828), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005774         mov        r9, rcx
0000000000005777         mov        rcx, qword [qword_20a210]                   ; qword_20a210
000000000000577e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005786         mov        rax, qword [fs:0x28]
000000000000578f         mov        qword [rsp+0x48+var_10], rax
0000000000005794         xor        eax, eax
0000000000005796         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000579a         test       rsi, rsi
000000000000579d         mov        qword [rsp+0x48+var_18], rcx
00000000000057a2         mov        dword [rsp+0x48+var_48], 0xa
00000000000057a9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a1f0
00000000000057b1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000057b6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a200
00000000000057be         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000057c3         je         loc_57f7

00000000000057c5         test       rdx, rdx
00000000000057c8         je         loc_57f7

00000000000057ca         mov        qword [rsp+0x48+var_20], rsi
00000000000057cf         mov        qword [rsp+0x48+var_18], rdx
00000000000057d4         mov        rcx, rsp
00000000000057d7         mov        rdx, r8
00000000000057da         mov        rsi, r9
00000000000057dd         call       quotearg_n_options                          ; quotearg_n_options
00000000000057e2         mov        rdi, qword [rsp+0x48+var_10]
00000000000057e7         xor        rdi, qword [fs:0x28]
00000000000057f0         jne        loc_57fc

00000000000057f2         add        rsp, 0x48
00000000000057f6         ret
                        ; endp

                     loc_57f7:
00000000000057f7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_57fc:
00000000000057fc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005801         align      16                                          ; End of unwind block (FDE at 0x8828)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005810         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x8844)
0000000000005817         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000581c         align      32                                          ; End of unwind block (FDE at 0x8844)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005820         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8858)
0000000000005823         mov        r8, 0xffffffffffffffff
000000000000582a         mov        rdx, rsi
000000000000582d         mov        rsi, rdi
0000000000005830         xor        edi, edi
0000000000005832         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005837         align      64                                          ; End of unwind block (FDE at 0x8858)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005840         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x886c)
0000000000005843         mov        rcx, rdx
0000000000005846         mov        rdx, rsi
0000000000005849         mov        rsi, rdi
000000000000584c         xor        edi, edi
000000000000584e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005853         align      32                                          ; End of unwind block (FDE at 0x886c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005860         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8880), quote_quoting_options
0000000000005867         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000586c         align      16                                          ; End of unwind block (FDE at 0x8880)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005870         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8894), quote_quoting_options
0000000000005877         mov        rdx, rsi
000000000000587a         mov        rsi, rdi
000000000000587d         xor        edi, edi
000000000000587f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005884         align      16                                          ; End of unwind block (FDE at 0x8894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005890         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x88a8), quote_quoting_options
0000000000005897         mov        rdx, 0xffffffffffffffff
000000000000589e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000058a3         align      16                                          ; End of unwind block (FDE at 0x88a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000058b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x88bc), quote_quoting_options
00000000000058b7         mov        rsi, rdi
00000000000058ba         mov        rdx, 0xffffffffffffffff
00000000000058c1         xor        edi, edi
00000000000058c3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000058c8         align      16                                          ; End of unwind block (FDE at 0x88bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
00000000000058d0         push       r13                                         ; Begin of unwind block (FDE at 0x88d4)
00000000000058d2         push       r12
00000000000058d4         mov        r13d, edi
00000000000058d7         push       rbp
00000000000058d8         push       rbx
00000000000058d9         mov        rdi, rsi
00000000000058dc         mov        ebp, edx
00000000000058de         mov        r12, rcx
00000000000058e1         sub        rsp, 0x138
00000000000058e8         mov        rax, qword [fs:0x28]
00000000000058f1         mov        qword [rsp+0x158+var_30], rax
00000000000058f9         xor        eax, eax
00000000000058fb         call       dir_name                                    ; dir_name
0000000000005900         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
0000000000005903         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000005909         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000590c         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
000000000000590f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005914         mov        rbx, rax
0000000000005917         call       j___fxstatat                                ; __fxstatat
000000000000591c         test       eax, eax
000000000000591e         jne        loc_59d0

                     loc_5924:
0000000000005924         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+285
0000000000005927         call       j_free                                      ; free
000000000000592c         mov        rdi, r12
000000000000592f         call       dir_name                                    ; dir_name
0000000000005934         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
000000000000593c         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000005942         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000005945         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
0000000000005947         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000594c         mov        rbx, rax
000000000000594f         call       j___fxstatat                                ; __fxstatat
0000000000005954         test       eax, eax
0000000000005956         jne        loc_59a8

                     loc_5958:
0000000000005958         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
000000000000595a         mov        rax, qword [rsp+0x158+var_C0]
0000000000005962         cmp        qword [rsp+0x158+var_150], rax
0000000000005967         jne        loc_5979

0000000000005969         mov        rax, qword [rsp+0x158+var_C8]
0000000000005971         cmp        qword [rsp+0x158+var_158], rax
0000000000005975         sete       bpl

                     loc_5979:
0000000000005979         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+151
000000000000597c         call       j_free                                      ; free
0000000000005981         mov        rdx, qword [rsp+0x158+var_30]
0000000000005989         xor        rdx, qword [fs:0x28]
0000000000005992         mov        eax, ebp
0000000000005994         jne        loc_59f2

0000000000005996         add        rsp, 0x138
000000000000599d         pop        rbx
000000000000599e         pop        rbp
000000000000599f         pop        r12
00000000000059a1         pop        r13
00000000000059a3         ret
                        ; endp
00000000000059a4         align      8

                     loc_59a8:
00000000000059a8         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
00000000000059ad         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000059af         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6fdb
00000000000059b6         mov        rcx, rbx
00000000000059b9         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000059be         xor        eax, eax
00000000000059c0         call       j_error                                     ; error
00000000000059c5         jmp        loc_5958
00000000000059c7         align      16

                     loc_59d0:
00000000000059d0         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
00000000000059d5         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000059d7         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6fdb
00000000000059de         mov        rcx, rbx
00000000000059e1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000059e6         xor        eax, eax
00000000000059e8         call       j_error                                     ; error
00000000000059ed         jmp        loc_5924

                     loc_59f2:
00000000000059f2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
00000000000059f7         align      512                                         ; End of unwind block (FDE at 0x88d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
0000000000005a00         push       r15                                         ; Begin of unwind block (FDE at 0x8910), CODE XREF=same_name+13
0000000000005a02         push       r14
0000000000005a04         mov        r15d, edx
0000000000005a07         push       r13
0000000000005a09         push       r12
0000000000005a0b         push       rbp
0000000000005a0c         push       rbx
0000000000005a0d         mov        rbp, rcx
0000000000005a10         mov        rbx, rsi
0000000000005a13         sub        rsp, 0x18
0000000000005a17         mov        dword [rsp+0x48+var_3C], edi
0000000000005a1b         mov        rdi, rsi
0000000000005a1e         call       last_component                              ; last_component
0000000000005a23         mov        rdi, rbp
0000000000005a26         mov        r12, rax
0000000000005a29         call       last_component                              ; last_component
0000000000005a2e         mov        rdi, r12
0000000000005a31         mov        r13, rax
0000000000005a34         call       base_len                                    ; base_len
0000000000005a39         mov        rdi, r13
0000000000005a3c         mov        r14, rax
0000000000005a3f         call       base_len                                    ; base_len
0000000000005a44         cmp        r14, rax
0000000000005a47         je         loc_5a60

                     loc_5a49:
0000000000005a49         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
0000000000005a4d         xor        eax, eax
0000000000005a4f         pop        rbx
0000000000005a50         pop        rbp
0000000000005a51         pop        r12
0000000000005a53         pop        r13
0000000000005a55         pop        r14
0000000000005a57         pop        r15
0000000000005a59         ret
                        ; endp
0000000000005a5a         align      32

                     loc_5a60:
0000000000005a60         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
0000000000005a63         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
0000000000005a66         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
0000000000005a69         call       j_memcmp                                    ; memcmp
0000000000005a6e         test       eax, eax
0000000000005a70         jne        loc_5a49

0000000000005a72         mov        edi, dword [rsp+0x48+var_3C]
0000000000005a76         add        rsp, 0x18
0000000000005a7a         mov        rcx, rbp
0000000000005a7d         mov        edx, r15d
0000000000005a80         mov        rsi, rbx
0000000000005a83         pop        rbx
0000000000005a84         pop        rbp
0000000000005a85         pop        r12
0000000000005a87         pop        r13
0000000000005a89         pop        r14
0000000000005a8b         pop        r15
0000000000005a8d         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
0000000000005a92         align      32                                          ; End of unwind block (FDE at 0x8910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
0000000000005aa0         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0x8970), CODE XREF=triple_compare+36
0000000000005aa5         mov        rcx, rsi
0000000000005aa8         mov        rsi, rdi
0000000000005aab         mov        edi, edx
0000000000005aad         jmp        same_nameat                                 ; same_nameat
                        ; endp
0000000000005ab2         align      64                                          ; End of unwind block (FDE at 0x8970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005ac0         push       r15                                         ; Begin of unwind block (FDE at 0x8984), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005ac2         push       r14
0000000000005ac4         push       r13
0000000000005ac6         push       r12
0000000000005ac8         mov        r12, r9
0000000000005acb         push       rbp
0000000000005acc         push       rbx
0000000000005acd         mov        rbp, rdi
0000000000005ad0         mov        rbx, r8
0000000000005ad3         sub        rsp, 0x28
0000000000005ad7         test       rsi, rsi
0000000000005ada         je         loc_5bf8

0000000000005ae0         mov        r8, rdx
0000000000005ae3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000005aea         mov        r9, rcx
0000000000005aed         xor        eax, eax
0000000000005aef         mov        rcx, rsi
0000000000005af2         mov        esi, 0x1
0000000000005af7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_5afc:
0000000000005afc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x75bb, CODE XREF=version_etc_arn+337
0000000000005b03         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b05         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b0a         call       j_dcgettext                                 ; dcgettext
0000000000005b0f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005b16         mov        rcx, rax
0000000000005b19         mov        r8d, 0x7e3
0000000000005b1f         mov        esi, 0x1
0000000000005b24         mov        rdi, rbp
0000000000005b27         xor        eax, eax
0000000000005b29         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005b2e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005b35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b3c         call       j_dcgettext                                 ; dcgettext
0000000000005b41         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005b44         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005b47         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005b4c         cmp        r12, 0x9
0000000000005b50         ja         loc_5e90

0000000000005b56         lea        rdx, qword [switch_table_78a8]              ; switch_table_78a8
0000000000005b5d         movsxd     rax, dword [rdx+r12*4]
0000000000005b61         add        rax, rdx
0000000000005b64         jmp        rax                                         ; switch statement using table at 0x78a8, with 10 cases, 0x5b70,0x5be6,0x5c20,0x5c78,0x5cb8,0x5d00,0x5d50,0x5da8,0x5dd8,0x5e40
0000000000005b66         align      16

                     loc_5b70:
0000000000005b70         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005b74         mov        rax, qword [rbx+0x10]
0000000000005b78         lea        rsi, qword [aWrittenBySSSns_77b8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000005b7f         mov        r8, qword [rbx+8]
0000000000005b83         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b8a         mov        r13, qword [rbx+0x30]
0000000000005b8e         mov        r12, qword [rbx+0x28]
0000000000005b92         mov        qword [rsp+0x58+var_48], r9
0000000000005b97         mov        r15, qword [rbx+0x20]
0000000000005b9b         mov        r14, qword [rbx+0x18]
0000000000005b9f         mov        qword [rsp+0x58+var_58], rax
0000000000005ba3         mov        qword [rsp+0x58+var_50], r8
0000000000005ba8         mov        rbx, qword [rbx]
0000000000005bab         call       j_dcgettext                                 ; dcgettext
0000000000005bb0         sub        rsp, 0x8

                     loc_5bb4:
0000000000005bb4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005bb9         mov        rdx, rax
0000000000005bbc         mov        rcx, rbx
0000000000005bbf         mov        esi, 0x1
0000000000005bc4         mov        rdi, rbp
0000000000005bc7         xor        eax, eax
0000000000005bc9         push       r9
0000000000005bcb         push       r13
0000000000005bcd         push       r12
0000000000005bcf         push       r15
0000000000005bd1         push       r14
0000000000005bd3         mov        r9, qword [rsp+0x88+var_58]
0000000000005bd8         mov        r8, qword [rsp+0x88+var_50]
0000000000005bdd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005be2         add        rsp, 0x30

                     loc_5be6:
0000000000005be6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000005bea         pop        rbx
0000000000005beb         pop        rbp
0000000000005bec         pop        r12
0000000000005bee         pop        r13
0000000000005bf0         pop        r14
0000000000005bf2         pop        r15
0000000000005bf4         ret
                        ; endp
0000000000005bf5         align      8

                     loc_5bf8:
0000000000005bf8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000005bfb         mov        rcx, rdx
0000000000005bfe         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005c05         mov        esi, 0x1
0000000000005c0a         xor        eax, eax
0000000000005c0c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005c11         jmp        loc_5afc
0000000000005c16         align      32

                     loc_5c20:
0000000000005c20         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005c24         mov        r9, qword [rbx+0x38]
0000000000005c28         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000005c2f         mov        rax, qword [rbx+0x10]
0000000000005c33         mov        r8, qword [rbx+8]
0000000000005c37         mov        edx, 0x5
0000000000005c3c         mov        r13, qword [rbx+0x30]
0000000000005c40         mov        r12, qword [rbx+0x28]
0000000000005c44         mov        r15, qword [rbx+0x20]
0000000000005c48         mov        r14, qword [rbx+0x18]
0000000000005c4c         mov        rbx, qword [rbx]
0000000000005c4f         mov        qword [rsp+0x58+var_40], r10
0000000000005c54         mov        qword [rsp+0x58+var_48], r9
0000000000005c59         mov        qword [rsp+0x58+var_58], rax
0000000000005c5d         mov        qword [rsp+0x58+var_50], r8

                     loc_5c62:
0000000000005c62         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005c64         call       j_dcgettext                                 ; dcgettext
0000000000005c69         mov        r10, qword [rsp+0x58+var_40]
0000000000005c6e         push       r10
0000000000005c70         jmp        loc_5bb4
0000000000005c75         align      8

                     loc_5c78:
0000000000005c78         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000005c7b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005c82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c89         call       j_dcgettext                                 ; dcgettext
0000000000005c8e         add        rsp, 0x28
0000000000005c92         mov        rcx, rbx
0000000000005c95         mov        rdi, rbp
0000000000005c98         pop        rbx
0000000000005c99         pop        rbp
0000000000005c9a         pop        r12
0000000000005c9c         pop        r13
0000000000005c9e         pop        r14
0000000000005ca0         pop        r15
0000000000005ca2         mov        rdx, rax
0000000000005ca5         mov        esi, 0x1
0000000000005caa         xor        eax, eax
0000000000005cac         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005cb1         align      8

                     loc_5cb8:
0000000000005cb8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000005cbc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005cc3         mov        rbx, qword [rbx]
0000000000005cc6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005ccb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ccd         call       j_dcgettext                                 ; dcgettext
0000000000005cd2         add        rsp, 0x28
0000000000005cd6         mov        r8, r12
0000000000005cd9         mov        rcx, rbx
0000000000005cdc         mov        rdi, rbp
0000000000005cdf         mov        rdx, rax
0000000000005ce2         mov        esi, 0x1
0000000000005ce7         pop        rbx
0000000000005ce8         pop        rbp
0000000000005ce9         pop        r12
0000000000005ceb         pop        r13
0000000000005ced         pop        r14
0000000000005cef         pop        r15
0000000000005cf1         xor        eax, eax
0000000000005cf3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005cf8         align      256

                     loc_5d00:
0000000000005d00         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005d04         mov        r12, qword [rbx+8]
0000000000005d08         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000005d0f         mov        rbx, qword [rbx]
0000000000005d12         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d17         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d19         call       j_dcgettext                                 ; dcgettext
0000000000005d1e         add        rsp, 0x28
0000000000005d22         mov        r9, r13
0000000000005d25         mov        r8, r12
0000000000005d28         mov        rcx, rbx
0000000000005d2b         mov        rdi, rbp
0000000000005d2e         mov        rdx, rax
0000000000005d31         pop        rbx
0000000000005d32         pop        rbp
0000000000005d33         pop        r12
0000000000005d35         pop        r13
0000000000005d37         pop        r14
0000000000005d39         pop        r15
0000000000005d3b         mov        esi, 0x1
0000000000005d40         xor        eax, eax
0000000000005d42         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005d47         align      16

                     loc_5d50:
0000000000005d50         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005d57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d5c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d5e         mov        r14, qword [rbx+0x18]
0000000000005d62         mov        r13, qword [rbx+0x10]
0000000000005d66         mov        r12, qword [rbx+8]
0000000000005d6a         mov        rbx, qword [rbx]
0000000000005d6d         call       j_dcgettext                                 ; dcgettext
0000000000005d72         sub        rsp, 0x8

                     loc_5d76:
0000000000005d76         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005d78         mov        rdx, rax
0000000000005d7b         mov        r9, r13
0000000000005d7e         mov        r8, r12
0000000000005d81         mov        rcx, rbx
0000000000005d84         mov        rdi, rbp
0000000000005d87         mov        esi, 0x1
0000000000005d8c         xor        eax, eax
0000000000005d8e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005d93         pop        rax
0000000000005d94         pop        rdx
0000000000005d95         add        rsp, 0x28
0000000000005d99         pop        rbx
0000000000005d9a         pop        rbp
0000000000005d9b         pop        r12
0000000000005d9d         pop        r13
0000000000005d9f         pop        r14
0000000000005da1         pop        r15
0000000000005da3         ret
                        ; endp
0000000000005da4         align      8

                     loc_5da8:
0000000000005da8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000005dac         lea        rsi, qword [aWrittenBySSSns_7738]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005db3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005db8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005dba         mov        r14, qword [rbx+0x18]
0000000000005dbe         mov        r13, qword [rbx+0x10]
0000000000005dc2         mov        r12, qword [rbx+8]
0000000000005dc6         mov        rbx, qword [rbx]
0000000000005dc9         call       j_dcgettext                                 ; dcgettext
0000000000005dce         push       r15
0000000000005dd0         jmp        loc_5d76
0000000000005dd2         align      8

                     loc_5dd8:
0000000000005dd8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000005ddc         mov        r12, qword [rbx+0x28]
0000000000005de0         lea        rsi, qword [aWrittenBySSSns_7760]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005de7         mov        r15, qword [rbx+0x20]
0000000000005deb         mov        r14, qword [rbx+0x18]
0000000000005def         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005df4         mov        r13, qword [rbx+0x10]
0000000000005df8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005dfa         mov        rbx, qword [rbx]
0000000000005dfd         mov        qword [rsp+0x58+var_58], r8
0000000000005e01         call       j_dcgettext                                 ; dcgettext
0000000000005e06         sub        rsp, 0x8
0000000000005e0a         mov        r9, r13
0000000000005e0d         push       r12
0000000000005e0f         push       r15
0000000000005e11         push       r14

                     loc_5e13:
0000000000005e13         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005e18         mov        rcx, rbx
0000000000005e1b         mov        rdx, rax
0000000000005e1e         mov        rdi, rbp
0000000000005e21         mov        esi, 0x1
0000000000005e26         xor        eax, eax
0000000000005e28         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005e2d         add        rsp, 0x20
0000000000005e31         add        rsp, 0x28
0000000000005e35         pop        rbx
0000000000005e36         pop        rbp
0000000000005e37         pop        r12
0000000000005e39         pop        r13
0000000000005e3b         pop        r14
0000000000005e3d         pop        r15
0000000000005e3f         ret
                        ; endp

                     loc_5e40:
0000000000005e40         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000005e44         mov        r13, qword [rbx+0x30]
0000000000005e48         lea        rsi, qword [aWrittenBySSSns_7788]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000005e4f         mov        r12, qword [rbx+0x28]
0000000000005e53         mov        r15, qword [rbx+0x20]
0000000000005e57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005e5c         mov        r14, qword [rbx+0x18]
0000000000005e60         mov        r8, qword [rbx+8]
0000000000005e64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005e66         mov        qword [rsp+0x58+var_50], r9
0000000000005e6b         mov        rbx, qword [rbx]
0000000000005e6e         mov        qword [rsp+0x58+var_58], r8
0000000000005e72         call       j_dcgettext                                 ; dcgettext
0000000000005e77         push       r13
0000000000005e79         push       r12
0000000000005e7b         push       r15
0000000000005e7d         push       r14
0000000000005e7f         mov        r9, qword [rsp+0x78+var_50]
0000000000005e84         jmp        loc_5e13
0000000000005e86         align      16

                     loc_5e90:
0000000000005e90         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005e94         mov        r9, qword [rbx+0x38]
0000000000005e98         mov        edx, 0x5
0000000000005e9d         mov        rax, qword [rbx+0x10]
0000000000005ea1         mov        r8, qword [rbx+8]
0000000000005ea5         lea        rsi, qword [aWrittenBySSSns_7820]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000005eac         mov        r13, qword [rbx+0x30]
0000000000005eb0         mov        r12, qword [rbx+0x28]
0000000000005eb4         mov        r15, qword [rbx+0x20]
0000000000005eb8         mov        r14, qword [rbx+0x18]
0000000000005ebc         mov        qword [rsp+0x58+var_40], r10
0000000000005ec1         mov        qword [rsp+0x58+var_48], r9
0000000000005ec6         mov        qword [rsp+0x58+var_58], rax
0000000000005eca         mov        qword [rsp+0x58+var_50], r8
0000000000005ecf         mov        rbx, qword [rbx]
0000000000005ed2         jmp        loc_5c62
0000000000005ed7         align      32                                          ; End of unwind block (FDE at 0x8984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005ee0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8a98)
0000000000005ee3         cmp        qword [r8], 0x0
0000000000005ee7         je         j_version_etc_arn                           ; version_etc_arn

0000000000005ee9         nop        dword [rax]

                     loc_5ef0:
0000000000005ef0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005ef4         cmp        qword [r8+r9*8], 0x0
0000000000005ef9         jne        loc_5ef0

                     j_version_etc_arn:        // version_etc_arn
0000000000005efb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005f00         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8a98), Begin of unwind block (FDE at 0x8aac)
0000000000005f04         mov        r10, r8
0000000000005f07         xor        r9d, r9d
0000000000005f0a         mov        rax, qword [fs:0x28]
0000000000005f13         mov        qword [rsp+0x68+var_10], rax
0000000000005f18         xor        eax, eax
0000000000005f1a         mov        r8, rsp
0000000000005f1d         nop        dword [rax]

                     loc_5f20:
0000000000005f20         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005f23         cmp        eax, 0x2f
0000000000005f26         ja         loc_5f6a

0000000000005f28         mov        r11d, eax
0000000000005f2b         add        r11, qword [r10+0x10]
0000000000005f2f         add        eax, 0x8
0000000000005f32         mov        dword [r10], eax

                     loc_5f35:
0000000000005f35         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005f38         test       rax, rax
0000000000005f3b         mov        qword [r8+r9*8], rax
0000000000005f3f         je         loc_5f4b

0000000000005f41         add        r9, 0x1
0000000000005f45         cmp        r9, 0xa
0000000000005f49         jne        loc_5f20

                     loc_5f4b:
0000000000005f4b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005f50         mov        rax, qword [rsp+0x68+var_10]
0000000000005f55         xor        rax, qword [fs:0x28]
0000000000005f5e         jne        loc_5f65

0000000000005f60         add        rsp, 0x68
0000000000005f64         ret
                        ; endp

                     loc_5f65:
0000000000005f65         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_5f6a:
0000000000005f6a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000005f6e         lea        rax, qword [r11+8]
0000000000005f72         mov        qword [r10+8], rax
0000000000005f76         jmp        loc_5f35
0000000000005f78         align      128                                         ; End of unwind block (FDE at 0x8aac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005f80         push       rbp                                         ; Begin of unwind block (FDE at 0x8ac8), CODE XREF=main+355
0000000000005f81         push       rbx
0000000000005f82         mov        r10d, 0x20
0000000000005f88         xor        r11d, r11d
0000000000005f8b         sub        rsp, 0xb8
0000000000005f92         mov        rax, qword [fs:0x28]
0000000000005f9b         mov        qword [rsp+0xc8+var_50], rax
0000000000005fa0         xor        eax, eax
0000000000005fa2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000005faa         mov        qword [rsp+0xc8+var_28], r8
0000000000005fb2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000005fba         lea        r8, qword [rsp+0xc8+var_A8]
0000000000005fbf         mov        qword [rsp+0xc8+var_20], r9
0000000000005fc7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000005fcf         mov        qword [rsp+0xc8+var_B8], rax
0000000000005fd4         lea        rax, qword [rsp+0xc8+var_48]
0000000000005fdc         xor        r9d, r9d
0000000000005fdf         mov        qword [rsp+0xc8+var_B0], rax
0000000000005fe4         mov        rbp, rax
0000000000005fe7         nop        word [rax+rax]

                     loc_5ff0:
0000000000005ff0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005ff4         ja         loc_604c

0000000000005ff6         mov        eax, r10d
0000000000005ff9         mov        r11d, 0x1
0000000000005fff         add        r10d, 0x8
0000000000006003         add        rax, rbp

                     loc_6006:
0000000000006006         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000006009         test       rax, rax
000000000000600c         mov        qword [r8+r9*8], rax
0000000000006010         je         loc_601c

0000000000006012         add        r9, 0x1
0000000000006016         cmp        r9, 0xa
000000000000601a         jne        loc_5ff0

                     loc_601c:
000000000000601c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000601f         jne        loc_6045

                     loc_6021:
0000000000006021         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000006026         mov        rax, qword [rsp+0xc8+var_50]
000000000000602b         xor        rax, qword [fs:0x28]
0000000000006034         jne        loc_6040

0000000000006036         add        rsp, 0xb8
000000000000603d         pop        rbx
000000000000603e         pop        rbp
000000000000603f         ret
                        ; endp

                     loc_6040:
0000000000006040         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6045:
0000000000006045         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000604a         jmp        loc_6021

                     loc_604c:
000000000000604c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000604f         add        rbx, 0x8
0000000000006053         jmp        loc_6006
0000000000006055         align      32                                          ; End of unwind block (FDE at 0x8ac8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006060         push       rbx                                         ; Begin of unwind block (FDE at 0x8af4)
0000000000006061         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006068         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000606d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000606f         call       j_dcgettext                                 ; dcgettext
0000000000006074         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000607b         mov        rsi, rax
000000000000607e         mov        edi, 0x1
0000000000006083         xor        eax, eax
0000000000006085         call       j___printf_chk                              ; __printf_chk
000000000000608a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006091         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006096         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006098         call       j_dcgettext                                 ; dcgettext
000000000000609d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000060a4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6963
00000000000060ab         mov        rsi, rax
00000000000060ae         mov        edi, 0x1
00000000000060b3         xor        eax, eax
00000000000060b5         call       j___printf_chk                              ; __printf_chk
00000000000060ba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000060c1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000060c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000060ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000060cf         call       j_dcgettext                                 ; dcgettext
00000000000060d4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000060d7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000060da         pop        rbx
00000000000060db         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000060e0         push       rbx                                         ; End of unwind block (FDE at 0x8af4), Begin of unwind block (FDE at 0x8b14), CODE XREF=sub_250a+11, sub_250a+98, record_file+29, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000060e1         mov        rbx, rdi
00000000000060e4         call       j_malloc                                    ; malloc
00000000000060e9         test       rax, rax
00000000000060ec         jne        loc_60f3

00000000000060ee         test       rbx, rbx
00000000000060f1         jne        loc_60f5

                     loc_60f3:
00000000000060f3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000060f4         ret
                        ; endp

                     loc_60f5:
00000000000060f5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_60fa:
00000000000060fa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8b14)
                     xnmalloc:
0000000000006100         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8b30)
0000000000006103         mul        rsi
0000000000006106         mov        rdi, rax
0000000000006109         seto       al
000000000000610c         test       rdi, rdi
000000000000610f         js         loc_611b

0000000000006111         movzx      eax, al
0000000000006114         test       rax, rax
0000000000006117         jne        loc_611b

0000000000006119         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_611b:
000000000000611b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000611f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6124:
0000000000006124         nop                                                    ; End of unwind block (FDE at 0x8b30)
0000000000006126         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000006130         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8b44)
                        ; endp
0000000000006132         align      64                                          ; End of unwind block (FDE at 0x8b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006140         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8b58), CODE XREF=canonicalize_filename_mode+364, canonicalize_filename_mode+506, canonicalize_filename_mode+1154, sub_250a+46, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006143         push       rbx
0000000000006144         mov        rbx, rsi
0000000000006147         jne        loc_614e

0000000000006149         test       rdi, rdi
000000000000614c         jne        loc_6168

                     loc_614e:
000000000000614e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006151         call       j_realloc                                   ; realloc
0000000000006156         test       rax, rax
0000000000006159         jne        loc_6160

000000000000615b         test       rbx, rbx
000000000000615e         jne        loc_6171

                     loc_6160:
0000000000006160         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006161         ret
                        ; endp
0000000000006162         align      8

                     loc_6168:
0000000000006168         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000616d         xor        eax, eax
000000000000616f         pop        rbx
0000000000006170         ret
                        ; endp

                     loc_6171:
0000000000006171         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6176:
0000000000006176         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8b58)
                     xnrealloc:
0000000000006180         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x8b7c)
0000000000006183         mul        rdx
0000000000006186         mov        rsi, rax
0000000000006189         seto       al
000000000000618c         test       rsi, rsi
000000000000618f         js         loc_619b

0000000000006191         movzx      eax, al
0000000000006194         test       rax, rax
0000000000006197         jne        loc_619b

0000000000006199         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_619b:
000000000000619b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000619f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_61a4:
00000000000061a4         nop                                                    ; End of unwind block (FDE at 0x8b7c)
00000000000061a6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000061b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8b90)
00000000000061b3         mov        r9, rdx
00000000000061b6         mov        rcx, qword [rsi]
00000000000061b9         je         loc_61f0

00000000000061bb         xor        edx, edx
00000000000061bd         movabs     rax, 0x5555555555555554
00000000000061c7         div        r9
00000000000061ca         cmp        rax, rcx
00000000000061cd         jbe        loc_620b

00000000000061cf         mov        rax, rcx
00000000000061d2         shr        rax, 0x1
00000000000061d5         lea        rcx, qword [rax+rcx+1]

                     loc_61da:
00000000000061da         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000061dd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000061e1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000061e4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000061e9         align      16

                     loc_61f0:
00000000000061f0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000061f3         je         loc_6218

                     loc_61f5:
00000000000061f5         mov        rax, rcx                                    ; CODE XREF=sub_6214+28
00000000000061f8         mul        r9
00000000000061fb         seto       dl
00000000000061fe         test       rax, rax
0000000000006201         movzx      edx, dl
0000000000006204         js         loc_620b

0000000000006206         test       rdx, rdx
0000000000006209         je         loc_61da

                     loc_620b:
000000000000620b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000620f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6214:
0000000000006214         nop        dword [rax]
                        ; endp

                     loc_6218:
0000000000006218         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000621a         mov        eax, 0x80
000000000000621f         xor        r8d, r8d
0000000000006222         div        r9
0000000000006225         test       rax, rax
0000000000006228         sete       r8b
000000000000622c         lea        rcx, qword [r8+rax]
0000000000006230         jmp        loc_61f5
0000000000006232         align      64                                          ; End of unwind block (FDE at 0x8b90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006240         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8ba8)
0000000000006243         mov        rax, qword [rsi]
0000000000006246         je         loc_6270

0000000000006248         movabs     rdx, 0x5555555555555553
0000000000006252         cmp        rax, rdx
0000000000006255         ja         loc_6281

0000000000006257         mov        rdx, rax
000000000000625a         shr        rdx, 0x1
000000000000625d         lea        rax, qword [rdx+rax+1]

                     loc_6262:
0000000000006262         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006265         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006268         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000626d         align      16

                     loc_6270:
0000000000006270         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006273         mov        edx, 0x80
0000000000006278         cmove      rax, rdx
000000000000627c         test       rax, rax
000000000000627f         jns        loc_6262

                     loc_6281:
0000000000006281         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006285         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_628a:
000000000000628a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8ba8)
                     xzalloc:
0000000000006290         push       rbx                                         ; Begin of unwind block (FDE at 0x8bc0)
0000000000006291         mov        rbx, rdi
0000000000006294         call       xmalloc                                     ; xmalloc
0000000000006299         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000629c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000629e         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000062a1         pop        rbx
00000000000062a2         jmp        j_memset                                    ; memset
                        ; endp
00000000000062a7         align      16                                          ; End of unwind block (FDE at 0x8bc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000062b0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8bdc)
00000000000062b3         sub        rsp, 0x8
00000000000062b7         mul        rsi
00000000000062ba         seto       dl
00000000000062bd         test       rax, rax
00000000000062c0         js         loc_62d9

00000000000062c2         movzx      edx, dl
00000000000062c5         test       rdx, rdx
00000000000062c8         jne        loc_62d9

00000000000062ca         call       j_calloc                                    ; calloc
00000000000062cf         test       rax, rax
00000000000062d2         je         loc_62d9

00000000000062d4         add        rsp, 0x8
00000000000062d8         ret
                        ; endp

                     loc_62d9:
00000000000062d9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_62de:
00000000000062de         nop                                                    ; End of unwind block (FDE at 0x8bdc)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000062e0         push       rbp                                         ; Begin of unwind block (FDE at 0x8bf8), CODE XREF=clone_quoting_options+40
00000000000062e1         push       rbx
00000000000062e2         mov        rbp, rdi
00000000000062e5         mov        rdi, rsi
00000000000062e8         mov        rbx, rsi
00000000000062eb         sub        rsp, 0x8
00000000000062ef         call       xmalloc                                     ; xmalloc
00000000000062f4         add        rsp, 0x8
00000000000062f8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000062fb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000062fe         pop        rbx
00000000000062ff         pop        rbp
0000000000006300         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006303         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000006308         align      16                                          ; End of unwind block (FDE at 0x8bf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000006310         push       rbx                                         ; Begin of unwind block (FDE at 0x8c20), CODE XREF=record_file+40
0000000000006311         mov        rbx, rdi
0000000000006314         call       j_strlen                                    ; strlen
0000000000006319         mov        rdi, rbx
000000000000631c         lea        rsi, qword [rax+1]
0000000000006320         pop        rbx
0000000000006321         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000006323         align      16                                          ; End of unwind block (FDE at 0x8c20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000006330         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8c3c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=canonicalize_filename_mode+1301, record_file+130, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xgetcwd+42
0000000000006337         sub        rsp, 0x8
000000000000633b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006340         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006342         call       j_dcgettext                                 ; dcgettext
0000000000006347         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000634d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6fdb
0000000000006354         mov        rcx, rax
0000000000006357         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006359         xor        eax, eax
000000000000635b         call       j_error                                     ; error
0000000000006360         call       j_abort                                     ; abort
                        ; endp
0000000000006365         align      16                                          ; End of unwind block (FDE at 0x8c3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xgetcwd:
0000000000006370         push       rbx                                         ; Begin of unwind block (FDE at 0x8c54), CODE XREF=canonicalize_filename_mode+99
0000000000006371         xor        esi, esi                                    ; argument "__size" for method j_getcwd
0000000000006373         xor        edi, edi                                    ; argument "__buf" for method j_getcwd
0000000000006375         call       j_getcwd                                    ; getcwd
000000000000637a         test       rax, rax
000000000000637d         mov        rbx, rax
0000000000006380         je         loc_6390

                     loc_6382:
0000000000006382         mov        rax, rbx                                    ; CODE XREF=xgetcwd+40
0000000000006385         pop        rbx
0000000000006386         ret
                        ; endp
0000000000006387         align      16

                     loc_6390:
0000000000006390         call       j___errno_location                          ; __errno_location, CODE XREF=xgetcwd+16
0000000000006395         cmp        dword [rax], 0xc
0000000000006398         jne        loc_6382

000000000000639a         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_639f:
000000000000639f         nop                                                    ; End of unwind block (FDE at 0x8c54)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000063a0         push       r13                                         ; Begin of unwind block (FDE at 0x8c74), CODE XREF=sub_4470+534
00000000000063a2         push       r12
00000000000063a4         mov        r13, rsi
00000000000063a7         push       rbp
00000000000063a8         push       rbx
00000000000063a9         mov        rbx, rdi
00000000000063ac         mov        r12, rdx
00000000000063af         sub        rsp, 0x18
00000000000063b3         mov        rax, qword [fs:0x28]
00000000000063bc         mov        qword [rsp+0x38+var_30], rax
00000000000063c1         xor        eax, eax
00000000000063c3         lea        rax, qword [rsp+0x38+var_34]
00000000000063c8         test       rdi, rdi
00000000000063cb         cmove      rbx, rax
00000000000063cf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000063d2         call       j_mbrtowc                                   ; mbrtowc
00000000000063d7         cmp        rax, 0xfffffffffffffffd
00000000000063db         mov        rbp, rax
00000000000063de         jbe        loc_6400

00000000000063e0         test       r12, r12
00000000000063e3         je         loc_6400

00000000000063e5         xor        edi, edi
00000000000063e7         call       hard_locale                                 ; hard_locale
00000000000063ec         test       al, al
00000000000063ee         jne        loc_6400

00000000000063f0         movzx      eax, byte [r13]
00000000000063f5         mov        ebp, 0x1
00000000000063fa         mov        dword [rbx], eax
00000000000063fc         nop        dword [rax]

                     loc_6400:
0000000000006400         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006405         xor        rdx, qword [fs:0x28]
000000000000640e         mov        rax, rbp
0000000000006411         jne        loc_641e

0000000000006413         add        rsp, 0x18
0000000000006417         pop        rbx
0000000000006418         pop        rbp
0000000000006419         pop        r12
000000000000641b         pop        r13
000000000000641d         ret
                        ; endp

                     loc_641e:
000000000000641e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006423         align      16                                          ; End of unwind block (FDE at 0x8c74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006430         push       r12                                         ; Begin of unwind block (FDE at 0x8cb4), CODE XREF=close_stdout+13, close_stdout+51
0000000000006432         push       rbp
0000000000006433         mov        rbp, rdi
0000000000006436         push       rbx
0000000000006437         call       j___fpending                                ; __fpending
000000000000643c         mov        ebx, dword [rbp]
000000000000643f         mov        rdi, rbp
0000000000006442         mov        r12, rax
0000000000006445         call       rpl_fclose                                  ; rpl_fclose
000000000000644a         and        ebx, 0x20
000000000000644d         test       ebx, ebx
000000000000644f         jne        loc_6468

0000000000006451         test       eax, eax
0000000000006453         je         loc_645f

0000000000006455         test       r12, r12
0000000000006458         mov        eax, 0xffffffff
000000000000645d         je         loc_6498

                     loc_645f:
000000000000645f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006460         pop        rbp
0000000000006461         pop        r12
0000000000006463         ret
                        ; endp
0000000000006464         align      8

                     loc_6468:
0000000000006468         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000646a         jne        loc_6488

000000000000646c         call       j___errno_location                          ; __errno_location
0000000000006471         mov        dword [rax], 0x0
0000000000006477         mov        eax, 0xffffffff
000000000000647c         pop        rbx
000000000000647d         pop        rbp
000000000000647e         pop        r12
0000000000006480         ret
                        ; endp
0000000000006481         align      8

                     loc_6488:
0000000000006488         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006489         mov        eax, 0xffffffff
000000000000648e         pop        rbp
000000000000648f         pop        r12
0000000000006491         ret
                        ; endp
0000000000006492         align      8

                     loc_6498:
0000000000006498         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000649d         cmp        dword [rax], 0x9
00000000000064a0         pop        rbx
00000000000064a1         pop        rbp
00000000000064a2         pop        r12
00000000000064a4         setne      al
00000000000064a7         movzx      eax, al
00000000000064aa         neg        eax
00000000000064ac         ret
                        ; endp
00000000000064ad         align      16                                          ; End of unwind block (FDE at 0x8cb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
00000000000064b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8d04), CODE XREF=same_nameat.part.0+43, same_nameat.part.0+95
00000000000064b4         call       mdir_name                                   ; mdir_name
00000000000064b9         test       rax, rax
00000000000064bc         je         loc_64c3

00000000000064be         add        rsp, 0x8
00000000000064c2         ret
                        ; endp

                     loc_64c3:
00000000000064c3         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_64c8:
00000000000064c8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8d04)
                     dir_len:
00000000000064d0         push       rbp                                         ; Begin of unwind block (FDE at 0x8d24), CODE XREF=mdir_name+9
00000000000064d1         push       rbx
00000000000064d2         xor        ebp, ebp
00000000000064d4         mov        rbx, rdi
00000000000064d7         sub        rsp, 0x8
00000000000064db         cmp        byte [rdi], 0x2f
00000000000064de         sete       bpl
00000000000064e2         call       last_component                              ; last_component
00000000000064e7         mov        rcx, rax
00000000000064ea         sub        rcx, rbx
00000000000064ed         cmp        rcx, rbp
00000000000064f0         jbe        loc_6520

00000000000064f2         cmp        byte [rax-1], 0x2f
00000000000064f6         lea        rdx, qword [rcx-1]
00000000000064fa         je         loc_650e

00000000000064fc         jmp        loc_6520
00000000000064fe         align      256

                     loc_6500:
0000000000006500         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
0000000000006505         lea        rax, qword [rdx-1]
0000000000006509         jne        loc_6513

000000000000650b         mov        rdx, rax

                     loc_650e:
000000000000650e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
0000000000006511         jne        loc_6500

                     loc_6513:
0000000000006513         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
0000000000006517         mov        rax, rdx
000000000000651a         pop        rbx
000000000000651b         pop        rbp
000000000000651c         ret
                        ; endp
000000000000651d         align      32

                     loc_6520:
0000000000006520         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
0000000000006524         mov        rdx, rcx
0000000000006527         mov        rax, rdx
000000000000652a         pop        rbx
000000000000652b         pop        rbp
000000000000652c         ret
                        ; endp
000000000000652d         align      16                                          ; End of unwind block (FDE at 0x8d24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
0000000000006530         push       rbp                                         ; Begin of unwind block (FDE at 0x8d58), CODE XREF=dir_name+4
0000000000006531         push       rbx
0000000000006532         mov        rbp, rdi
0000000000006535         sub        rsp, 0x8
0000000000006539         call       dir_len                                     ; dir_len
000000000000653e         test       rax, rax
0000000000006541         mov        rbx, rax
0000000000006544         sete       al
0000000000006547         movzx      eax, al
000000000000654a         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
000000000000654f         call       j_malloc                                    ; malloc
0000000000006554         test       rax, rax
0000000000006557         mov        rcx, rax
000000000000655a         je         loc_6576

000000000000655c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000655f         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000006562         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006565         call       j_memcpy                                    ; memcpy
000000000000656a         test       rbx, rbx
000000000000656d         mov        rcx, rax
0000000000006570         je         loc_6580

                     loc_6572:
0000000000006572         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_6576:
0000000000006576         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000657a         mov        rax, rcx
000000000000657d         pop        rbx
000000000000657e         pop        rbp
000000000000657f         ret
                        ; endp

                     loc_6580:
0000000000006580         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
0000000000006583         mov        ebx, 0x1
0000000000006588         jmp        loc_6572
000000000000658a         align      16                                          ; End of unwind block (FDE at 0x8d58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
0000000000006590         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x8d84), CODE XREF=same_nameat+30, same_nameat+41, dir_len+18
0000000000006593         mov        rax, rdi
0000000000006596         cmp        dl, 0x2f
0000000000006599         jne        loc_65ac

000000000000659b         nop        dword [rax+rax]

                     loc_65a0:
00000000000065a0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000065a4         movzx      edx, byte [rax]
00000000000065a7         cmp        dl, 0x2f
00000000000065aa         je         loc_65a0

                     loc_65ac:
00000000000065ac         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000065ae         je         loc_65ea

00000000000065b0         mov        rcx, rax
00000000000065b3         xor        esi, esi
00000000000065b5         jmp        loc_65d5
00000000000065b7         align      64

                     loc_65c0:
00000000000065c0         test       sil, sil                                    ; CODE XREF=last_component+72
00000000000065c3         je         loc_65ca

00000000000065c5         mov        rax, rcx
00000000000065c8         xor        esi, esi

                     loc_65ca:
00000000000065ca         add        rcx, 0x1                                    ; CODE XREF=last_component+51
00000000000065ce         movzx      edx, byte [rcx]
00000000000065d1         test       dl, dl
00000000000065d3         je         loc_65ea

                     loc_65d5:
00000000000065d5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
00000000000065d8         jne        loc_65c0

00000000000065da         add        rcx, 0x1
00000000000065de         movzx      edx, byte [rcx]
00000000000065e1         mov        esi, 0x1
00000000000065e6         test       dl, dl
00000000000065e8         jne        loc_65d5

                     loc_65ea:
00000000000065ea         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
00000000000065ec         align      16                                          ; End of unwind block (FDE at 0x8d84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
00000000000065f0         push       rbx                                         ; Begin of unwind block (FDE at 0x8d98), CODE XREF=same_nameat+52, same_nameat+63
00000000000065f1         mov        rbx, rdi
00000000000065f4         call       j_strlen                                    ; strlen
00000000000065f9         cmp        rax, 0x1
00000000000065fd         jbe        loc_660a

00000000000065ff         cmp        byte [rbx+rax-1], 0x2f
0000000000006604         lea        rdx, qword [rax-1]
0000000000006608         je         loc_6618

                     loc_660a:
000000000000660a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000660b         ret
                        ; endp
000000000000660c         align      16

                     loc_6610:
0000000000006610         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000006613         nop        dword [rax+rax]

                     loc_6618:
0000000000006618         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000661c         je         loc_6630

000000000000661e         cmp        byte [rbx+rdx-1], 0x2f
0000000000006623         lea        rax, qword [rdx-1]
0000000000006627         je         loc_6610

0000000000006629         mov        rax, rdx
000000000000662c         pop        rbx
000000000000662d         ret
                        ; endp
000000000000662e         align      16

                     loc_6630:
0000000000006630         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000006635         pop        rbx
0000000000006636         ret
                        ; endp
0000000000006637         align      64                                          ; End of unwind block (FDE at 0x8d98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006640         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8dc4), CODE XREF=rpl_mbrtowc+71
0000000000006644         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006646         call       j_setlocale                                 ; setlocale
000000000000664b         mov        rdx, rax
000000000000664e         mov        eax, 0x1
0000000000006653         test       rdx, rdx
0000000000006656         je         loc_6675

0000000000006658         lea        rdi, qword [aMemoryExhauste+17]             ; 0x7920
000000000000665f         mov        ecx, 0x2
0000000000006664         mov        rsi, rdx
0000000000006667         rep  cmpsb byte [rsi], byte [rdi]
0000000000006669         seta       cl
000000000000666c         sbb        cl, 0x0
000000000000666f         xor        eax, eax
0000000000006671         test       cl, cl
0000000000006673         jne        loc_6680

                     loc_6675:
0000000000006675         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006679         ret
                        ; endp
000000000000667a         align      128

                     loc_6680:
0000000000006680         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006687         mov        ecx, 0x6
000000000000668c         mov        rsi, rdx
000000000000668f         rep  cmpsb byte [rsi], byte [rdi]
0000000000006691         seta       al
0000000000006694         sbb        al, 0x0
0000000000006696         test       al, al
0000000000006698         setne      al
000000000000669b         add        rsp, 0x8
000000000000669f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_pjw:
00000000000066a0         movsx      rcx, byte [rdi]                             ; End of unwind block (FDE at 0x8dc4), Begin of unwind block (FDE at 0x8de4), CODE XREF=triple_hash+15
00000000000066a4         test       cl, cl
00000000000066a6         je         loc_66d0

00000000000066a8         xor        eax, eax
00000000000066aa         nop        word [rax+rax]

                     loc_66b0:
00000000000066b0         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
00000000000066b4         add        rdi, 0x1
00000000000066b8         add        rax, rcx
00000000000066bb         movsx      rcx, byte [rdi]
00000000000066bf         test       cl, cl
00000000000066c1         jne        loc_66b0

00000000000066c3         xor        edx, edx
00000000000066c5         div        rsi
00000000000066c8         mov        rax, rdx
00000000000066cb         ret
                        ; endp
00000000000066cc         align      16

                     loc_66d0:
00000000000066d0         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
00000000000066d2         mov        rax, rdx
00000000000066d5         ret
                        ; endp
00000000000066d6         align      32                                          ; End of unwind block (FDE at 0x8de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000066e0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8dfc), CODE XREF=gettext_quote.part.1+11
00000000000066e4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000066e9         call       j_nl_langinfo                               ; nl_langinfo
00000000000066ee         test       rax, rax
00000000000066f1         je         loc_6710

00000000000066f3         cmp        byte [rax], 0x0
00000000000066f6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000066fd         cmove      rax, rdx
0000000000006701         add        rsp, 0x8
0000000000006705         ret
                        ; endp
0000000000006706         align      16

                     loc_6710:
0000000000006710         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006717         add        rsp, 0x8
000000000000671b         ret
                        ; endp
000000000000671c         align      32                                          ; End of unwind block (FDE at 0x8dfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006720         push       r12                                         ; Begin of unwind block (FDE at 0x8e1c), CODE XREF=close_stream+21
0000000000006722         push       rbp
0000000000006723         push       rbx
0000000000006724         mov        rbx, rdi
0000000000006727         call       j_fileno                                    ; fileno
000000000000672c         test       eax, eax
000000000000672e         mov        rdi, rbx
0000000000006731         js         loc_6787

0000000000006733         call       j___freading                                ; __freading
0000000000006738         test       eax, eax
000000000000673a         jne        loc_6768

                     loc_673c:
000000000000673c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000673f         call       rpl_fflush                                  ; rpl_fflush
0000000000006744         test       eax, eax
0000000000006746         je         loc_6784

0000000000006748         call       j___errno_location                          ; __errno_location
000000000000674d         mov        r12d, dword [rax]
0000000000006750         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006753         mov        rbp, rax
0000000000006756         call       j_fclose                                    ; fclose
000000000000675b         test       r12d, r12d
000000000000675e         jne        loc_6790

                     loc_6760:
0000000000006760         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006761         pop        rbp
0000000000006762         pop        r12
0000000000006764         ret
                        ; endp
0000000000006765         align      8

                     loc_6768:
0000000000006768         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000676b         call       j_fileno                                    ; fileno
0000000000006770         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006772         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006777         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006779         call       j_lseek                                     ; lseek
000000000000677e         cmp        rax, 0xffffffffffffffff
0000000000006782         jne        loc_673c

                     loc_6784:
0000000000006784         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6787:
0000000000006787         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006788         pop        rbp
0000000000006789         pop        r12
000000000000678b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_6790:
0000000000006790         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000006794         mov        eax, 0xffffffff
0000000000006799         jmp        loc_6760
000000000000679b         align      32                                          ; End of unwind block (FDE at 0x8e1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000067a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8e54), CODE XREF=rpl_fclose+31
00000000000067a3         push       rbx
00000000000067a4         mov        rbx, rdi
00000000000067a7         je         loc_67ba

00000000000067a9         call       j___freading                                ; __freading
00000000000067ae         test       eax, eax
00000000000067b0         je         loc_67ba

00000000000067b2         test       dword [rbx], 0x100
00000000000067b8         jne        loc_67c8

                     loc_67ba:
00000000000067ba         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000067bd         pop        rbx
00000000000067be         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000067c3         align      8

                     loc_67c8:
00000000000067c8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000067cb         mov        edx, 0x1
00000000000067d0         xor        esi, esi
00000000000067d2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000067d7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000067da         pop        rbx
00000000000067db         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000067e0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x8e54), Begin of unwind block (FDE at 0x8e74), CODE XREF=rpl_fflush+50
00000000000067e4         cmp        qword [rdi+0x10], rax
00000000000067e8         je         loc_67f0

                     j_j_fseeko:        // fseeko
00000000000067ea         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000067ef         align      16

                     loc_67f0:
00000000000067f0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000067f4         cmp        qword [rdi+0x28], rax
00000000000067f8         jne        j_j_fseeko                                  ; fseeko

00000000000067fa         cmp        qword [rdi+0x48], 0x0
00000000000067ff         jne        j_j_fseeko                                  ; fseeko

0000000000006801         push       r12
0000000000006803         push       rbp
0000000000006804         mov        r12d, edx
0000000000006807         push       rbx
0000000000006808         mov        rbp, rsi
000000000000680b         mov        rbx, rdi
000000000000680e         call       j_fileno                                    ; fileno
0000000000006813         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006816         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006819         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000681b         call       j_lseek                                     ; lseek
0000000000006820         cmp        rax, 0xffffffffffffffff
0000000000006824         je         loc_6832

0000000000006826         and        dword [rbx], 0xffffffef
0000000000006829         mov        qword [rbx+0x90], rax
0000000000006830         xor        eax, eax

                     loc_6832:
0000000000006832         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006833         pop        rbp
0000000000006834         pop        r12
0000000000006836         ret
                        ; endp
0000000000006837         align      64                                          ; End of unwind block (FDE at 0x8e74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006840         push       r15                                         ; Begin of unwind block (FDE at 0x8ea4), DATA XREF=_start+22
0000000000006842         push       r14
0000000000006844         mov        r15, rdx
0000000000006847         push       r13
0000000000006849         push       r12
000000000000684b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006852         push       rbp
0000000000006853         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000685a         push       rbx
000000000000685b         mov        r13d, edi
000000000000685e         mov        r14, rsi
0000000000006861         sub        rbp, r12
0000000000006864         sub        rsp, 0x8
0000000000006868         sar        rbp, 0x3
000000000000686c         call       _init                                       ; _init
0000000000006871         test       rbp, rbp
0000000000006874         je         loc_6896

0000000000006876         xor        ebx, ebx
0000000000006878         nop        dword [rax+rax]

                     loc_6880:
0000000000006880         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006883         mov        rsi, r14
0000000000006886         mov        edi, r13d
0000000000006889         call       qword [r12+rbx*8]
000000000000688d         add        rbx, 0x1
0000000000006891         cmp        rbp, rbx
0000000000006894         jne        loc_6880

                     loc_6896:
0000000000006896         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000689a         pop        rbx
000000000000689b         pop        rbp
000000000000689c         pop        r12
000000000000689e         pop        r13
00000000000068a0         pop        r14
00000000000068a2         pop        r15
00000000000068a4         ret
                        ; endp
00000000000068a5         align      16                                          ; End of unwind block (FDE at 0x8ea4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000068b0         ret                                                    ; Begin of unwind block (FDE at 0x8eec), DATA XREF=_start+15
                        ; endp
00000000000068b2         align      64                                          ; End of unwind block (FDE at 0x8eec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000068c0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8f04), __dso_handle, CODE XREF=main+91
00000000000068c7         xor        esi, esi
00000000000068c9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000068ce         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8f04)
00000000000068cf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x68d0; 0x68d9[ (9 bytes)
        ; File offset : [26832; 26841[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000068d0         sub        rsp, 0x8
00000000000068d4         add        rsp, 0x8
00000000000068d8         ret
                        ; endp
00000000000068d9         db  0x00 ; '.'
00000000000068da         db  0x00 ; '.'
00000000000068db         db  0x00 ; '.'
00000000000068dc         db  0x00 ; '.'
00000000000068dd         db  0x00 ; '.'
00000000000068de         db  0x00 ; '.'
00000000000068df         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x68e0; 0x792e[ (4174 bytes)
        ; File offset : [26848; 31022[ (4174 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000068e0         db  0x01 ; '.'
00000000000068e1         db  0x00 ; '.'
00000000000068e2         db  0x02 ; '.'
00000000000068e3         db  0x00 ; '.'
                     aReadlink:
00000000000068e4         db         "readlink", 0                               ; DATA XREF=main+343, usage+305, usage+620, usage+804, usage+823, usage+857
00000000000068ed         db  0x5b ; '['                                         ; DATA XREF=usage+317
00000000000068ee         db  0x00 ; '.'
                     aTestInvocation:
00000000000068ef         db         "test invocation", 0                        ; DATA XREF=usage+356
                     aMulticallInvoc:
00000000000068ff         db         "Multi-call invocation", 0                  ; DATA XREF=usage+404
                     aSha224sum:
0000000000006915         db         "sha224sum", 0                              ; DATA XREF=usage+421
                     aSha2Utilities:
000000000000691f         db         "sha2 utilities", 0                         ; DATA XREF=usage+433
                     aSha256sum:
000000000000692e         db         "sha256sum", 0                              ; DATA XREF=usage+324
                     aSha384sum:
0000000000006938         db         "sha384sum", 0                              ; DATA XREF=usage+368
                     aSha512sum:
0000000000006942         db         "sha512sum", 0                              ; DATA XREF=usage+392
                     aNsOnlineHelpSn:
000000000000694c         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+506
0000000000006963         db  0x47 ; 'G'                                         ; DATA XREF=main+336, usage+534, usage+727, emit_bug_reporting_address+68
0000000000006964         db  0x4e ; 'N'
0000000000006965         db  0x55 ; 'U'
0000000000006966         db  0x20 ; ' '
                     aCoreutils:
0000000000006967         db         "coreutils", 0                              ; DATA XREF=main+60, main+72, usage+380
0000000000006971         db  0x65 ; 'e'                                         ; DATA XREF=usage+573, usage+766
0000000000006972         db  0x6e ; 'n'
0000000000006973         db  0x5f ; '_'
0000000000006974         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006975         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+601, usage+790
                     aUsrlocalsharel:
0000000000006990         db         "/usr/local/share/locale", 0                ; DATA XREF=main+53
                     aDmitryVLevin:
00000000000069a8         db         "Dmitry V. Levin", 0                        ; DATA XREF=main+329
                     aEfmnqsvz:
00000000000069b8         db         "efmnqsvz", 0                               ; DATA XREF=main+103
                     aMissingOperand:
00000000000069c1         db         "missing operand", 0                        ; DATA XREF=main+710
                     aCanonicalize:
00000000000069d1         db         "canonicalize", 0
                     aCanonicalizeex:
00000000000069de         db         "canonicalize-existing", 0
                     aCanonicalizemi:
00000000000069f4         db         "canonicalize-missing", 0
                     aNonewline:
0000000000006a09         db         "no-newline", 0
                     aQuiet:
0000000000006a14         db         "quiet", 0
                     aSilent:
0000000000006a1a         db         "silent", 0
                     aVerbose:
0000000000006a21         db         "verbose", 0
                     aZero:
0000000000006a29         db         "zero", 0
                     aHelp:
0000000000006a2e         db         "help", 0
                     aVersion:
0000000000006a33         db         "version", 0
0000000000006a3b         align      64
                     aTrySHelpForMor:
0000000000006a40         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000006a67         align      8
                     aUsageSOptionFi:
0000000000006a68         db         "Usage: %s [OPTION]... FILE...\n", 0        ; DATA XREF=usage+93
0000000000006a87         align      8
                     aPrintValueOfAS:
0000000000006a88         db         "Print value of a symbolic link or canonical file name\n\n", 0 ; DATA XREF=usage+132
                     aFCanonicalizeC:
0000000000006ac0         db         "  -f, --canonicalize            canonicalize by following every symlink in\n                                every component of the given name recursively;\n                                all but the last component must exist\n  -e, --canonicalize-existing   " ; DATA XREF=usage+169
0000000000006bc0         db         "canonicalize by following every symlink in\n                                every component of the given name recursively,\n                                all components must exist\n", 0
0000000000006c75         align      8
                     aMCanonicalizem:
0000000000006c78         db         "  -m, --canonicalize-missing    canonicalize by following every symlink in\n                                every component of the given name recursively,\n                                without requirements on components existence\n  -n, --no-newline       " ; DATA XREF=usage+206
0000000000006d78         db         "       do not output the trailing delimiter\n  -q, --quiet\n  -s, --silent                  suppress most error messages (on by default)\n  -v, --verbose                 report error messages\n  -z, --zero                    end each output line with NUL, not "
0000000000006e78         db         "newline\n", 0
0000000000006e81         align      8
                     aHelpDisplayThi:
0000000000006e88         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+243
0000000000006eb5         align      8
                     aVersionOutputV:
0000000000006eb8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+280
0000000000006eee         align      16
                     aHttpswwwgnuorg:
0000000000006ef0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+527, usage+627, usage+720, usage+830, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006f18         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+871
0000000000006f5f         align      32
                     aOrAvailableLoc:
0000000000006f60         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+670
0000000000006f93         align      8
                     aIgnoringNonewl:
0000000000006f98         db         "ignoring --no-newline with multiple arguments", 0 ; DATA XREF=main+666
                     a831:
0000000000006fc6         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000006fcb         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000006fd7         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aEntriesLun:
0000000000006fde         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
0000000000006ff6         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
000000000000700e         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
0000000000007026         align      8
                     aBucketsUsedLu2:
0000000000007028         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
0000000000007049         db  0x00 ; '.'
000000000000704a         db  0x00 ; '.'
000000000000704b         db  0x00 ; '.'
000000000000704c         db  0x00 ; '.'
000000000000704d         db  0x00 ; '.'
000000000000704e         db  0x00 ; '.'
000000000000704f         db  0x00 ; '.'
                     default_tuning:
0000000000007050         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
0000000000007051         db  0x00 ; '.'
0000000000007052         db  0x00 ; '.'
0000000000007053         db  0x00 ; '.'
0000000000007054         db  0x00 ; '.'
0000000000007055         db  0x00 ; '.'
0000000000007056         db  0x80 ; '.'
0000000000007057         db  0x3f ; '?'
0000000000007058         db  0xcd ; '.'
0000000000007059         db  0xcc ; '.'
000000000000705a         db  0x4c ; 'L'
000000000000705b         db  0x3f ; '?'
000000000000705c         db  0xf4 ; '.'
000000000000705d         db  0xfd ; '.'
000000000000705e         db  0xb4 ; '.'
000000000000705f         db  0x3f ; '?'
0000000000007060         db  0x00 ; '.'
0000000000007061         db  0x00 ; '.'
0000000000007062         db  0x00 ; '.'
0000000000007063         db  0x00 ; '.'
                     float_7064:        // float
0000000000007064         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_7068:        // float
0000000000007068         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_706c:        // float
000000000000706c         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_7070:        // float
0000000000007070         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_7074:        // float
0000000000007074         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_7078:        // float
0000000000007078         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_707c:        // float
000000000000707c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_7080:        // float
0000000000007080         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
0000000000007084         align      2
000000000000708e         db  0x59 ; 'Y'
000000000000708f         db  0x40 ; '@'
                     aANullArgv0WasP:
0000000000007090         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000070c8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000070d0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000070d1         db  0x74 ; 't'
00000000000070d2         db  0x2d ; '-'
00000000000070d3         db  0x00 ; '.'
00000000000070d4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000070d5         db  0x80 ; '.'
00000000000070d6         db  0x98 ; '.'
00000000000070d7         db  0x00 ; '.'
00000000000070d8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000070d9         db  0x80 ; '.'
00000000000070da         db  0x99 ; '.'
00000000000070db         db  0x00 ; '.'
00000000000070dc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000070dd         db  0x07 ; '.'
00000000000070de         db  0x65 ; 'e'
00000000000070df         db  0x00 ; '.'
00000000000070e0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000070e1         db  0xaf ; '.'
00000000000070e2         db  0x00 ; '.'
00000000000070e3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4470+1451, sub_4470+1493, sub_4470+2429
00000000000070e4         db  0x00 ; '.'
00000000000070e5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4470+132, sub_4470+1338, sub_4470+1670, sub_4470+1697, sub_4470+2352
00000000000070e6         db  0x00 ; '.'
00000000000070e7         db  0x60 ; '`'                                         ; DATA XREF=sub_4470+1627, sub_4470+1654
00000000000070e8         db  0x00 ; '.'
                     aLiteral:
00000000000070e9         db         "literal", 0
                     aShell:
00000000000070f1         db         "shell", 0
                     aShellalways:
00000000000070f7         db         "shell-always", 0
0000000000007104         db  0x73 ; 's'
0000000000007105         db  0x68 ; 'h'
0000000000007106         db  0x65 ; 'e'
0000000000007107         db  0x6c ; 'l'
0000000000007108         db  0x6c ; 'l'
0000000000007109         db  0x2d ; '-'
                     aEscape:
000000000000710a         db         "escape", 0
                     aShellescapealw:
0000000000007111         db         "shell-escape-always", 0
0000000000007125         db  0x63 ; 'c'
0000000000007126         db  0x00 ; '.'
                     aCmaybe:
0000000000007127         db         "c-maybe", 0
                     aClocale:
000000000000712f         db         "clocale", 0
0000000000007137         align      64
                     switch_table_7140:        // switch_table
0000000000007140         dd         quotearg_buffer_restyled.loc_4b6a-switch_table_7140, quotearg_buffer_restyled.loc_3dc3-switch_table_7140, quotearg_buffer_restyled.loc_4d98-switch_table_7140, quotearg_buffer_restyled.loc_4ba4-switch_table_7140 ; switch table used at 0x3dc1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007150         dd         quotearg_buffer_restyled.loc_4994-switch_table_7140, quotearg_buffer_restyled.loc_49f0-switch_table_7140, quotearg_buffer_restyled.loc_4a45-switch_table_7140, quotearg_buffer_restyled.loc_4a8a-switch_table_7140
0000000000007160         dd         3 dup (quotearg_buffer_restyled.loc_4ac4-switch_table_7140)
000000000000716c         db  0xd4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000716d         db  0xcf ; '.'
000000000000716e         db  0xff ; '.'
000000000000716f         db  0xff ; '.'
0000000000007170         db  0xbc ; '.'
0000000000007171         db  0xd0 ; '.'
0000000000007172         db  0xff ; '.'
0000000000007173         db  0xff ; '.'
0000000000007174         db  0xbc ; '.'
0000000000007175         db  0xd0 ; '.'
0000000000007176         db  0xff ; '.'
0000000000007177         db  0xff ; '.'
0000000000007178         db  0xbc ; '.'
0000000000007179         db  0xd0 ; '.'
000000000000717a         db  0xff ; '.'
000000000000717b         db  0xff ; '.'
000000000000717c         db  0xbc ; '.'
000000000000717d         db  0xd0 ; '.'
000000000000717e         db  0xff ; '.'
000000000000717f         db  0xff ; '.'
0000000000007180         db  0xbc ; '.'
0000000000007181         db  0xd0 ; '.'
0000000000007182         db  0xff ; '.'
0000000000007183         db  0xff ; '.'
0000000000007184         db  0xbc ; '.'
0000000000007185         db  0xd0 ; '.'
0000000000007186         db  0xff ; '.'
0000000000007187         db  0xff ; '.'
0000000000007188         db  0x14 ; '.'
0000000000007189         db  0xd0 ; '.'
000000000000718a         db  0xff ; '.'
000000000000718b         db  0xff ; '.'
000000000000718c         db  0x1c ; '.'
000000000000718d         db  0xcf ; '.'
000000000000718e         db  0xff ; '.'
000000000000718f         db  0xff ; '.'
0000000000007190         db  0xdc ; '.'
0000000000007191         db  0xce ; '.'
0000000000007192         db  0xff ; '.'
0000000000007193         db  0xff ; '.'
0000000000007194         db  0xa4 ; '.'
0000000000007195         db  0xd0 ; '.'
0000000000007196         db  0xff ; '.'
0000000000007197         db  0xff ; '.'
0000000000007198         db  0x94 ; '.'
0000000000007199         db  0xd0 ; '.'
000000000000719a         db  0xff ; '.'
000000000000719b         db  0xff ; '.'
000000000000719c         db  0x84 ; '.'
000000000000719d         db  0xd0 ; '.'
000000000000719e         db  0xff ; '.'
000000000000719f         db  0xff ; '.'
00000000000071a0         db  0x74 ; 't'
00000000000071a1         db  0xd0 ; '.'
00000000000071a2         db  0xff ; '.'
00000000000071a3         db  0xff ; '.'
00000000000071a4         db  0xbc ; '.'
00000000000071a5         db  0xd0 ; '.'
00000000000071a6         db  0xff ; '.'
00000000000071a7         db  0xff ; '.'
00000000000071a8         db  0xbc ; '.'
00000000000071a9         db  0xd0 ; '.'
00000000000071aa         db  0xff ; '.'
00000000000071ab         db  0xff ; '.'
00000000000071ac         db  0xbc ; '.'
00000000000071ad         db  0xd0 ; '.'
00000000000071ae         db  0xff ; '.'
00000000000071af         db  0xff ; '.'
00000000000071b0         db  0xbc ; '.'
00000000000071b1         db  0xd0 ; '.'
00000000000071b2         db  0xff ; '.'
00000000000071b3         db  0xff ; '.'
00000000000071b4         db  0xbc ; '.'
00000000000071b5         db  0xd0 ; '.'
00000000000071b6         db  0xff ; '.'
00000000000071b7         db  0xff ; '.'
00000000000071b8         db  0xbc ; '.'
00000000000071b9         db  0xd0 ; '.'
00000000000071ba         db  0xff ; '.'
00000000000071bb         db  0xff ; '.'
00000000000071bc         db  0xbc ; '.'
00000000000071bd         db  0xd0 ; '.'
00000000000071be         db  0xff ; '.'
00000000000071bf         db  0xff ; '.'
00000000000071c0         db  0xbc ; '.'
00000000000071c1         db  0xd0 ; '.'
00000000000071c2         db  0xff ; '.'
00000000000071c3         db  0xff ; '.'
00000000000071c4         db  0xbc ; '.'
00000000000071c5         db  0xd0 ; '.'
00000000000071c6         db  0xff ; '.'
00000000000071c7         db  0xff ; '.'
00000000000071c8         db  0xbc ; '.'
00000000000071c9         db  0xd0 ; '.'
00000000000071ca         db  0xff ; '.'
00000000000071cb         db  0xff ; '.'
00000000000071cc         db  0xbc ; '.'
00000000000071cd         db  0xd0 ; '.'
00000000000071ce         db  0xff ; '.'
00000000000071cf         db  0xff ; '.'
00000000000071d0         db  0xbc ; '.'
00000000000071d1         db  0xd0 ; '.'
00000000000071d2         db  0xff ; '.'
00000000000071d3         db  0xff ; '.'
00000000000071d4         db  0xbc ; '.'
00000000000071d5         db  0xd0 ; '.'
00000000000071d6         db  0xff ; '.'
00000000000071d7         db  0xff ; '.'
00000000000071d8         db  0xbc ; '.'
00000000000071d9         db  0xd0 ; '.'
00000000000071da         db  0xff ; '.'
00000000000071db         db  0xff ; '.'
00000000000071dc         db  0xbc ; '.'
00000000000071dd         db  0xd0 ; '.'
00000000000071de         db  0xff ; '.'
00000000000071df         db  0xff ; '.'
00000000000071e0         db  0xbc ; '.'
00000000000071e1         db  0xd0 ; '.'
00000000000071e2         db  0xff ; '.'
00000000000071e3         db  0xff ; '.'
00000000000071e4         db  0xbc ; '.'
00000000000071e5         db  0xd0 ; '.'
00000000000071e6         db  0xff ; '.'
00000000000071e7         db  0xff ; '.'
00000000000071e8         db  0xbc ; '.'
00000000000071e9         db  0xd0 ; '.'
00000000000071ea         db  0xff ; '.'
00000000000071eb         db  0xff ; '.'
00000000000071ec         db  0x64 ; 'd'
00000000000071ed         db  0xd0 ; '.'
00000000000071ee         db  0xff ; '.'
00000000000071ef         db  0xff ; '.'
00000000000071f0         db  0x54 ; 'T'
00000000000071f1         db  0xd0 ; '.'
00000000000071f2         db  0xff ; '.'
00000000000071f3         db  0xff ; '.'
00000000000071f4         db  0x54 ; 'T'
00000000000071f5         db  0xd0 ; '.'
00000000000071f6         db  0xff ; '.'
00000000000071f7         db  0xff ; '.'
00000000000071f8         db  0x24 ; '$'
00000000000071f9         db  0xd0 ; '.'
00000000000071fa         db  0xff ; '.'
00000000000071fb         db  0xff ; '.'
00000000000071fc         db  0x54 ; 'T'
00000000000071fd         db  0xd0 ; '.'
00000000000071fe         db  0xff ; '.'
00000000000071ff         db  0xff ; '.'
0000000000007200         db  0xfc ; '.'
0000000000007201         db  0xcf ; '.'
0000000000007202         db  0xff ; '.'
0000000000007203         db  0xff ; '.'
0000000000007204         db  0x54 ; 'T'
0000000000007205         db  0xd0 ; '.'
0000000000007206         db  0xff ; '.'
0000000000007207         db  0xff ; '.'
0000000000007208         db  0xb7 ; '.'
0000000000007209         db  0xce ; '.'
000000000000720a         db  0xff ; '.'
000000000000720b         db  0xff ; '.'
000000000000720c         db  0x54 ; 'T'
000000000000720d         db  0xd0 ; '.'
000000000000720e         db  0xff ; '.'
000000000000720f         db  0xff ; '.'
0000000000007210         db  0x54 ; 'T'
0000000000007211         db  0xd0 ; '.'
0000000000007212         db  0xff ; '.'
0000000000007213         db  0xff ; '.'
0000000000007214         db  0x54 ; 'T'
0000000000007215         db  0xd0 ; '.'
0000000000007216         db  0xff ; '.'
0000000000007217         db  0xff ; '.'
0000000000007218         db  0xfc ; '.'
0000000000007219         db  0xcf ; '.'
000000000000721a         db  0xff ; '.'
000000000000721b         db  0xff ; '.'
000000000000721c         db  0xfc ; '.'
000000000000721d         db  0xcf ; '.'
000000000000721e         db  0xff ; '.'
000000000000721f         db  0xff ; '.'
0000000000007220         db  0xfc ; '.'
0000000000007221         db  0xcf ; '.'
0000000000007222         db  0xff ; '.'
0000000000007223         db  0xff ; '.'
0000000000007224         db  0xfc ; '.'
0000000000007225         db  0xcf ; '.'
0000000000007226         db  0xff ; '.'
0000000000007227         db  0xff ; '.'
0000000000007228         db  0xfc ; '.'
0000000000007229         db  0xcf ; '.'
000000000000722a         db  0xff ; '.'
000000000000722b         db  0xff ; '.'
000000000000722c         db  0xfc ; '.'
000000000000722d         db  0xcf ; '.'
000000000000722e         db  0xff ; '.'
000000000000722f         db  0xff ; '.'
0000000000007230         db  0xfc ; '.'
0000000000007231         db  0xcf ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0xfc ; '.'
0000000000007235         db  0xcf ; '.'
0000000000007236         db  0xff ; '.'
0000000000007237         db  0xff ; '.'
0000000000007238         db  0xfc ; '.'
0000000000007239         db  0xcf ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0xfc ; '.'
000000000000723d         db  0xcf ; '.'
000000000000723e         db  0xff ; '.'
000000000000723f         db  0xff ; '.'
0000000000007240         db  0xfc ; '.'
0000000000007241         db  0xcf ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0xfc ; '.'
0000000000007245         db  0xcf ; '.'
0000000000007246         db  0xff ; '.'
0000000000007247         db  0xff ; '.'
0000000000007248         db  0xfc ; '.'
0000000000007249         db  0xcf ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0xfc ; '.'
000000000000724d         db  0xcf ; '.'
000000000000724e         db  0xff ; '.'
000000000000724f         db  0xff ; '.'
0000000000007250         db  0xfc ; '.'
0000000000007251         db  0xcf ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0xfc ; '.'
0000000000007255         db  0xcf ; '.'
0000000000007256         db  0xff ; '.'
0000000000007257         db  0xff ; '.'
0000000000007258         db  0x54 ; 'T'
0000000000007259         db  0xd0 ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0x54 ; 'T'
000000000000725d         db  0xd0 ; '.'
000000000000725e         db  0xff ; '.'
000000000000725f         db  0xff ; '.'
0000000000007260         db  0x54 ; 'T'
0000000000007261         db  0xd0 ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0x54 ; 'T'
0000000000007265         db  0xd0 ; '.'
0000000000007266         db  0xff ; '.'
0000000000007267         db  0xff ; '.'
0000000000007268         db  0x87 ; '.'
0000000000007269         db  0xce ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0xbc ; '.'
000000000000726d         db  0xd0 ; '.'
000000000000726e         db  0xff ; '.'
000000000000726f         db  0xff ; '.'
0000000000007270         db  0xfc ; '.'
0000000000007271         db  0xcf ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0xfc ; '.'
0000000000007275         db  0xcf ; '.'
0000000000007276         db  0xff ; '.'
0000000000007277         db  0xff ; '.'
0000000000007278         db  0xfc ; '.'
0000000000007279         db  0xcf ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0xfc ; '.'
000000000000727d         db  0xcf ; '.'
000000000000727e         db  0xff ; '.'
000000000000727f         db  0xff ; '.'
0000000000007280         db  0xfc ; '.'
0000000000007281         db  0xcf ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0xfc ; '.'
0000000000007285         db  0xcf ; '.'
0000000000007286         db  0xff ; '.'
0000000000007287         db  0xff ; '.'
0000000000007288         db  0xfc ; '.'
0000000000007289         db  0xcf ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0xfc ; '.'
000000000000728d         db  0xcf ; '.'
000000000000728e         db  0xff ; '.'
000000000000728f         db  0xff ; '.'
0000000000007290         db  0xfc ; '.'
0000000000007291         db  0xcf ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0xfc ; '.'
0000000000007295         db  0xcf ; '.'
0000000000007296         db  0xff ; '.'
0000000000007297         db  0xff ; '.'
0000000000007298         db  0xfc ; '.'
0000000000007299         db  0xcf ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0xfc ; '.'
000000000000729d         db  0xcf ; '.'
000000000000729e         db  0xff ; '.'
000000000000729f         db  0xff ; '.'
00000000000072a0         db  0xfc ; '.'
00000000000072a1         db  0xcf ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0xfc ; '.'
00000000000072a5         db  0xcf ; '.'
00000000000072a6         db  0xff ; '.'
00000000000072a7         db  0xff ; '.'
00000000000072a8         db  0xfc ; '.'
00000000000072a9         db  0xcf ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0xfc ; '.'
00000000000072ad         db  0xcf ; '.'
00000000000072ae         db  0xff ; '.'
00000000000072af         db  0xff ; '.'
00000000000072b0         db  0xfc ; '.'
00000000000072b1         db  0xcf ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0xfc ; '.'
00000000000072b5         db  0xcf ; '.'
00000000000072b6         db  0xff ; '.'
00000000000072b7         db  0xff ; '.'
00000000000072b8         db  0xfc ; '.'
00000000000072b9         db  0xcf ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0xfc ; '.'
00000000000072bd         db  0xcf ; '.'
00000000000072be         db  0xff ; '.'
00000000000072bf         db  0xff ; '.'
00000000000072c0         db  0xfc ; '.'
00000000000072c1         db  0xcf ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0xfc ; '.'
00000000000072c5         db  0xcf ; '.'
00000000000072c6         db  0xff ; '.'
00000000000072c7         db  0xff ; '.'
00000000000072c8         db  0xfc ; '.'
00000000000072c9         db  0xcf ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0xfc ; '.'
00000000000072cd         db  0xcf ; '.'
00000000000072ce         db  0xff ; '.'
00000000000072cf         db  0xff ; '.'
00000000000072d0         db  0xfc ; '.'
00000000000072d1         db  0xcf ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0xfc ; '.'
00000000000072d5         db  0xcf ; '.'
00000000000072d6         db  0xff ; '.'
00000000000072d7         db  0xff ; '.'
00000000000072d8         db  0x54 ; 'T'
00000000000072d9         db  0xd0 ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0x2c ; ','
00000000000072dd         db  0xcf ; '.'
00000000000072de         db  0xff ; '.'
00000000000072df         db  0xff ; '.'
00000000000072e0         db  0xfc ; '.'
00000000000072e1         db  0xcf ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0x54 ; 'T'
00000000000072e5         db  0xd0 ; '.'
00000000000072e6         db  0xff ; '.'
00000000000072e7         db  0xff ; '.'
00000000000072e8         db  0xfc ; '.'
00000000000072e9         db  0xcf ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0x54 ; 'T'
00000000000072ed         db  0xd0 ; '.'
00000000000072ee         db  0xff ; '.'
00000000000072ef         db  0xff ; '.'
00000000000072f0         db  0xfc ; '.'
00000000000072f1         db  0xcf ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0xfc ; '.'
00000000000072f5         db  0xcf ; '.'
00000000000072f6         db  0xff ; '.'
00000000000072f7         db  0xff ; '.'
00000000000072f8         db  0xfc ; '.'
00000000000072f9         db  0xcf ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0xfc ; '.'
00000000000072fd         db  0xcf ; '.'
00000000000072fe         db  0xff ; '.'
00000000000072ff         db  0xff ; '.'
0000000000007300         db  0xfc ; '.'
0000000000007301         db  0xcf ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0xfc ; '.'
0000000000007305         db  0xcf ; '.'
0000000000007306         db  0xff ; '.'
0000000000007307         db  0xff ; '.'
0000000000007308         db  0xfc ; '.'
0000000000007309         db  0xcf ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0xfc ; '.'
000000000000730d         db  0xcf ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0xfc ; '.'
0000000000007311         db  0xcf ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0xfc ; '.'
0000000000007315         db  0xcf ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0xfc ; '.'
0000000000007319         db  0xcf ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0xfc ; '.'
000000000000731d         db  0xcf ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0xfc ; '.'
0000000000007321         db  0xcf ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0xfc ; '.'
0000000000007325         db  0xcf ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0xfc ; '.'
0000000000007329         db  0xcf ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0xfc ; '.'
000000000000732d         db  0xcf ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0xfc ; '.'
0000000000007331         db  0xcf ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0xfc ; '.'
0000000000007335         db  0xcf ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0xfc ; '.'
0000000000007339         db  0xcf ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0xfc ; '.'
000000000000733d         db  0xcf ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0xfc ; '.'
0000000000007341         db  0xcf ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0xfc ; '.'
0000000000007345         db  0xcf ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0xfc ; '.'
0000000000007349         db  0xcf ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0xfc ; '.'
000000000000734d         db  0xcf ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0xfc ; '.'
0000000000007351         db  0xcf ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0xfc ; '.'
0000000000007355         db  0xcf ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0xb7 ; '.'
0000000000007359         db  0xcd ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0x54 ; 'T'
000000000000735d         db  0xd0 ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0xb7 ; '.'
0000000000007361         db  0xcd ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0x24 ; '$'
0000000000007365         db  0xd0 ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0xa8 ; '.'                                         ; DATA XREF=sub_4210+137
0000000000007369         db  0xcf ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0xb8 ; '.'
000000000000736d         db  0xce ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0xb8 ; '.'
0000000000007371         db  0xce ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0xb8 ; '.'
0000000000007375         db  0xce ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0xb8 ; '.'
0000000000007379         db  0xce ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0xb8 ; '.'
000000000000737d         db  0xce ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0xb8 ; '.'
0000000000007381         db  0xce ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0x98 ; '.'
0000000000007385         db  0xcf ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0xe8 ; '.'
0000000000007389         db  0xd0 ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0xd0 ; '.'
000000000000738d         db  0xd0 ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0x80 ; '.'
0000000000007391         db  0xcf ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0xc0 ; '.'
0000000000007395         db  0xd0 ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0x68 ; 'h'
0000000000007399         db  0xcf ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0xa8 ; '.'
000000000000739d         db  0xd0 ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0xb8 ; '.'
00000000000073a1         db  0xce ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0xb8 ; '.'
00000000000073a5         db  0xce ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0xb8 ; '.'
00000000000073a9         db  0xce ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0xb8 ; '.'
00000000000073ad         db  0xce ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0xb8 ; '.'
00000000000073b1         db  0xce ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0xb8 ; '.'
00000000000073b5         db  0xce ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0xb8 ; '.'
00000000000073b9         db  0xce ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0xb8 ; '.'
00000000000073bd         db  0xce ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0xb8 ; '.'
00000000000073c1         db  0xce ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0xb8 ; '.'
00000000000073c5         db  0xce ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0xb8 ; '.'
00000000000073c9         db  0xce ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0xb8 ; '.'
00000000000073cd         db  0xce ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0xb8 ; '.'
00000000000073d1         db  0xce ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0xb8 ; '.'
00000000000073d5         db  0xce ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0xb8 ; '.'
00000000000073d9         db  0xce ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0xb8 ; '.'
00000000000073dd         db  0xce ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0xb8 ; '.'
00000000000073e1         db  0xce ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0xb8 ; '.'
00000000000073e5         db  0xce ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0x90 ; '.'
00000000000073e9         db  0xd0 ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0x78 ; 'x'
00000000000073ed         db  0xd0 ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0x78 ; 'x'
00000000000073f1         db  0xd0 ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0x60 ; '`'
00000000000073f5         db  0xd0 ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0x78 ; 'x'
00000000000073f9         db  0xd0 ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x48 ; 'H'
00000000000073fd         db  0xd0 ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0x78 ; 'x'
0000000000007401         db  0xd0 ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0xb8 ; '.'
0000000000007405         db  0xcc ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0x78 ; 'x'
0000000000007409         db  0xd0 ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0x78 ; 'x'
000000000000740d         db  0xd0 ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0x78 ; 'x'
0000000000007411         db  0xd0 ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0x48 ; 'H'
0000000000007415         db  0xd0 ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0x48 ; 'H'
0000000000007419         db  0xd0 ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0x48 ; 'H'
000000000000741d         db  0xd0 ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0x48 ; 'H'
0000000000007421         db  0xd0 ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0x48 ; 'H'
0000000000007425         db  0xd0 ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0x48 ; 'H'
0000000000007429         db  0xd0 ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0x48 ; 'H'
000000000000742d         db  0xd0 ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0x48 ; 'H'
0000000000007431         db  0xd0 ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0x48 ; 'H'
0000000000007435         db  0xd0 ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0x48 ; 'H'
0000000000007439         db  0xd0 ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0x48 ; 'H'
000000000000743d         db  0xd0 ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0x48 ; 'H'
0000000000007441         db  0xd0 ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0x48 ; 'H'
0000000000007445         db  0xd0 ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0x48 ; 'H'
0000000000007449         db  0xd0 ; '.'
000000000000744a         db  0xff ; '.'
000000000000744b         db  0xff ; '.'
000000000000744c         db  0x48 ; 'H'
000000000000744d         db  0xd0 ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0x48 ; 'H'
0000000000007451         db  0xd0 ; '.'
0000000000007452         db  0xff ; '.'
0000000000007453         db  0xff ; '.'
0000000000007454         db  0x78 ; 'x'
0000000000007455         db  0xd0 ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0x78 ; 'x'
0000000000007459         db  0xd0 ; '.'
000000000000745a         db  0xff ; '.'
000000000000745b         db  0xff ; '.'
000000000000745c         db  0x78 ; 'x'
000000000000745d         db  0xd0 ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0x78 ; 'x'
0000000000007461         db  0xd0 ; '.'
0000000000007462         db  0xff ; '.'
0000000000007463         db  0xff ; '.'
0000000000007464         db  0x88 ; '.'
0000000000007465         db  0xcc ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0xb8 ; '.'
0000000000007469         db  0xce ; '.'
000000000000746a         db  0xff ; '.'
000000000000746b         db  0xff ; '.'
000000000000746c         db  0x48 ; 'H'
000000000000746d         db  0xd0 ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0x48 ; 'H'
0000000000007471         db  0xd0 ; '.'
0000000000007472         db  0xff ; '.'
0000000000007473         db  0xff ; '.'
0000000000007474         db  0x48 ; 'H'
0000000000007475         db  0xd0 ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0x48 ; 'H'
0000000000007479         db  0xd0 ; '.'
000000000000747a         db  0xff ; '.'
000000000000747b         db  0xff ; '.'
000000000000747c         db  0x48 ; 'H'
000000000000747d         db  0xd0 ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0x48 ; 'H'
0000000000007481         db  0xd0 ; '.'
0000000000007482         db  0xff ; '.'
0000000000007483         db  0xff ; '.'
0000000000007484         db  0x48 ; 'H'
0000000000007485         db  0xd0 ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0x48 ; 'H'
0000000000007489         db  0xd0 ; '.'
000000000000748a         db  0xff ; '.'
000000000000748b         db  0xff ; '.'
000000000000748c         db  0x48 ; 'H'
000000000000748d         db  0xd0 ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0x48 ; 'H'
0000000000007491         db  0xd0 ; '.'
0000000000007492         db  0xff ; '.'
0000000000007493         db  0xff ; '.'
0000000000007494         db  0x48 ; 'H'
0000000000007495         db  0xd0 ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0x48 ; 'H'
0000000000007499         db  0xd0 ; '.'
000000000000749a         db  0xff ; '.'
000000000000749b         db  0xff ; '.'
000000000000749c         db  0x48 ; 'H'
000000000000749d         db  0xd0 ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0x48 ; 'H'
00000000000074a1         db  0xd0 ; '.'
00000000000074a2         db  0xff ; '.'
00000000000074a3         db  0xff ; '.'
00000000000074a4         db  0x48 ; 'H'
00000000000074a5         db  0xd0 ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0x48 ; 'H'
00000000000074a9         db  0xd0 ; '.'
00000000000074aa         db  0xff ; '.'
00000000000074ab         db  0xff ; '.'
00000000000074ac         db  0x48 ; 'H'
00000000000074ad         db  0xd0 ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0x48 ; 'H'
00000000000074b1         db  0xd0 ; '.'
00000000000074b2         db  0xff ; '.'
00000000000074b3         db  0xff ; '.'
00000000000074b4         db  0x48 ; 'H'
00000000000074b5         db  0xd0 ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0x48 ; 'H'
00000000000074b9         db  0xd0 ; '.'
00000000000074ba         db  0xff ; '.'
00000000000074bb         db  0xff ; '.'
00000000000074bc         db  0x48 ; 'H'
00000000000074bd         db  0xd0 ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0x48 ; 'H'
00000000000074c1         db  0xd0 ; '.'
00000000000074c2         db  0xff ; '.'
00000000000074c3         db  0xff ; '.'
00000000000074c4         db  0x48 ; 'H'
00000000000074c5         db  0xd0 ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0x48 ; 'H'
00000000000074c9         db  0xd0 ; '.'
00000000000074ca         db  0xff ; '.'
00000000000074cb         db  0xff ; '.'
00000000000074cc         db  0x48 ; 'H'
00000000000074cd         db  0xd0 ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0x48 ; 'H'
00000000000074d1         db  0xd0 ; '.'
00000000000074d2         db  0xff ; '.'
00000000000074d3         db  0xff ; '.'
00000000000074d4         db  0x78 ; 'x'
00000000000074d5         db  0xd0 ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0x48 ; 'H'
00000000000074d9         db  0xcf ; '.'
00000000000074da         db  0xff ; '.'
00000000000074db         db  0xff ; '.'
00000000000074dc         db  0x48 ; 'H'
00000000000074dd         db  0xd0 ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0x78 ; 'x'
00000000000074e1         db  0xd0 ; '.'
00000000000074e2         db  0xff ; '.'
00000000000074e3         db  0xff ; '.'
00000000000074e4         db  0x48 ; 'H'
00000000000074e5         db  0xd0 ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0x78 ; 'x'
00000000000074e9         db  0xd0 ; '.'
00000000000074ea         db  0xff ; '.'
00000000000074eb         db  0xff ; '.'
00000000000074ec         db  0x48 ; 'H'
00000000000074ed         db  0xd0 ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0x48 ; 'H'
00000000000074f1         db  0xd0 ; '.'
00000000000074f2         db  0xff ; '.'
00000000000074f3         db  0xff ; '.'
00000000000074f4         db  0x48 ; 'H'
00000000000074f5         db  0xd0 ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x48 ; 'H'
00000000000074f9         db  0xd0 ; '.'
00000000000074fa         db  0xff ; '.'
00000000000074fb         db  0xff ; '.'
00000000000074fc         db  0x48 ; 'H'
00000000000074fd         db  0xd0 ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0x48 ; 'H'
0000000000007501         db  0xd0 ; '.'
0000000000007502         db  0xff ; '.'
0000000000007503         db  0xff ; '.'
0000000000007504         db  0x48 ; 'H'
0000000000007505         db  0xd0 ; '.'
0000000000007506         db  0xff ; '.'
0000000000007507         db  0xff ; '.'
0000000000007508         db  0x48 ; 'H'
0000000000007509         db  0xd0 ; '.'
000000000000750a         db  0xff ; '.'
000000000000750b         db  0xff ; '.'
000000000000750c         db  0x48 ; 'H'
000000000000750d         db  0xd0 ; '.'
000000000000750e         db  0xff ; '.'
000000000000750f         db  0xff ; '.'
0000000000007510         db  0x48 ; 'H'
0000000000007511         db  0xd0 ; '.'
0000000000007512         db  0xff ; '.'
0000000000007513         db  0xff ; '.'
0000000000007514         db  0x48 ; 'H'
0000000000007515         db  0xd0 ; '.'
0000000000007516         db  0xff ; '.'
0000000000007517         db  0xff ; '.'
0000000000007518         db  0x48 ; 'H'
0000000000007519         db  0xd0 ; '.'
000000000000751a         db  0xff ; '.'
000000000000751b         db  0xff ; '.'
000000000000751c         db  0x48 ; 'H'
000000000000751d         db  0xd0 ; '.'
000000000000751e         db  0xff ; '.'
000000000000751f         db  0xff ; '.'
0000000000007520         db  0x48 ; 'H'
0000000000007521         db  0xd0 ; '.'
0000000000007522         db  0xff ; '.'
0000000000007523         db  0xff ; '.'
0000000000007524         db  0x48 ; 'H'
0000000000007525         db  0xd0 ; '.'
0000000000007526         db  0xff ; '.'
0000000000007527         db  0xff ; '.'
0000000000007528         db  0x48 ; 'H'
0000000000007529         db  0xd0 ; '.'
000000000000752a         db  0xff ; '.'
000000000000752b         db  0xff ; '.'
000000000000752c         db  0x48 ; 'H'
000000000000752d         db  0xd0 ; '.'
000000000000752e         db  0xff ; '.'
000000000000752f         db  0xff ; '.'
0000000000007530         db  0x48 ; 'H'
0000000000007531         db  0xd0 ; '.'
0000000000007532         db  0xff ; '.'
0000000000007533         db  0xff ; '.'
0000000000007534         db  0x48 ; 'H'
0000000000007535         db  0xd0 ; '.'
0000000000007536         db  0xff ; '.'
0000000000007537         db  0xff ; '.'
0000000000007538         db  0x48 ; 'H'
0000000000007539         db  0xd0 ; '.'
000000000000753a         db  0xff ; '.'
000000000000753b         db  0xff ; '.'
000000000000753c         db  0x48 ; 'H'
000000000000753d         db  0xd0 ; '.'
000000000000753e         db  0xff ; '.'
000000000000753f         db  0xff ; '.'
0000000000007540         db  0x48 ; 'H'
0000000000007541         db  0xd0 ; '.'
0000000000007542         db  0xff ; '.'
0000000000007543         db  0xff ; '.'
0000000000007544         db  0x48 ; 'H'
0000000000007545         db  0xd0 ; '.'
0000000000007546         db  0xff ; '.'
0000000000007547         db  0xff ; '.'
0000000000007548         db  0x48 ; 'H'
0000000000007549         db  0xd0 ; '.'
000000000000754a         db  0xff ; '.'
000000000000754b         db  0xff ; '.'
000000000000754c         db  0x48 ; 'H'
000000000000754d         db  0xd0 ; '.'
000000000000754e         db  0xff ; '.'
000000000000754f         db  0xff ; '.'
0000000000007550         db  0x48 ; 'H'
0000000000007551         db  0xd0 ; '.'
0000000000007552         db  0xff ; '.'
0000000000007553         db  0xff ; '.'
0000000000007554         db  0xb8 ; '.'
0000000000007555         db  0xcb ; '.'
0000000000007556         db  0xff ; '.'
0000000000007557         db  0xff ; '.'
0000000000007558         db  0x78 ; 'x'
0000000000007559         db  0xd0 ; '.'
000000000000755a         db  0xff ; '.'
000000000000755b         db  0xff ; '.'
000000000000755c         db  0xb8 ; '.'
000000000000755d         db  0xcb ; '.'
000000000000755e         db  0xff ; '.'
000000000000755f         db  0xff ; '.'
0000000000007560         db  0x60 ; '`'
0000000000007561         db  0xd0 ; '.'
0000000000007562         db  0xff ; '.'
0000000000007563         db  0xff ; '.'
0000000000007564         db  0x00 ; '.'
0000000000007565         db  0x00 ; '.'
0000000000007566         db  0x00 ; '.'
0000000000007567         db  0x00 ; '.'
0000000000007568         db  0x00 ; '.'
0000000000007569         db  0x00 ; '.'
000000000000756a         db  0x00 ; '.'
000000000000756b         db  0x00 ; '.'
000000000000756c         db  0x00 ; '.'
000000000000756d         db  0x00 ; '.'
000000000000756e         db  0x00 ; '.'
000000000000756f         db  0x00 ; '.'
0000000000007570         db  0x00 ; '.'
0000000000007571         db  0x00 ; '.'
0000000000007572         db  0x00 ; '.'
0000000000007573         db  0x00 ; '.'
0000000000007574         db  0x00 ; '.'
0000000000007575         db  0x00 ; '.'
0000000000007576         db  0x00 ; '.'
0000000000007577         db  0x00 ; '.'
0000000000007578         db  0x00 ; '.'
0000000000007579         db  0x00 ; '.'
000000000000757a         db  0x00 ; '.'
000000000000757b         db  0x00 ; '.'
000000000000757c         db  0x00 ; '.'
000000000000757d         db  0x00 ; '.'
000000000000757e         db  0x00 ; '.'
000000000000757f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007580         db  0x00 ; '.'
0000000000007581         db  0x00 ; '.'
0000000000007582         db  0x00 ; '.'
0000000000007583         db  0x00 ; '.'
0000000000007584         db  0x01 ; '.'
0000000000007585         db  0x00 ; '.'
0000000000007586         db  0x00 ; '.'
0000000000007587         db  0x00 ; '.'
0000000000007588         db  0x02 ; '.'
0000000000007589         db  0x00 ; '.'
000000000000758a         db  0x00 ; '.'
000000000000758b         db  0x00 ; '.'
000000000000758c         db  0x03 ; '.'
000000000000758d         db  0x00 ; '.'
000000000000758e         db  0x00 ; '.'
000000000000758f         db  0x00 ; '.'
0000000000007590         db  0x04 ; '.'
0000000000007591         db  0x00 ; '.'
0000000000007592         db  0x00 ; '.'
0000000000007593         db  0x00 ; '.'
0000000000007594         db  0x05 ; '.'
0000000000007595         db  0x00 ; '.'
0000000000007596         db  0x00 ; '.'
0000000000007597         db  0x00 ; '.'
0000000000007598         db  0x06 ; '.'
0000000000007599         db  0x00 ; '.'
000000000000759a         db  0x00 ; '.'
000000000000759b         db  0x00 ; '.'
000000000000759c         db  0x07 ; '.'
000000000000759d         db  0x00 ; '.'
000000000000759e         db  0x00 ; '.'
000000000000759f         db  0x00 ; '.'
00000000000075a0         db  0x08 ; '.'
00000000000075a1         db  0x00 ; '.'
00000000000075a2         db  0x00 ; '.'
00000000000075a3         db  0x00 ; '.'
00000000000075a4         db  0x09 ; '.'
00000000000075a5         db  0x00 ; '.'
00000000000075a6         db  0x00 ; '.'
00000000000075a7         db  0x00 ; '.'
                     aSSSn:
00000000000075a8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000075b4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000075bb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000075bc         db  0x43 ; 'C'
00000000000075bd         db  0x29 ; ')'
00000000000075be         db  0x00 ; '.'
                     aWrittenBySn:
00000000000075bf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000075cf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000075e6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007602         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000007617         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000762d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007641         align      8
                     aNlicenseGplv3G:
0000000000007648         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007714         align      8
                     aWrittenBySSSna:
0000000000007718         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7738:        // aWrittenBySSSns
0000000000007738         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000775c         align      32
                     aWrittenBySSSns_7760:        // aWrittenBySSSns
0000000000007760         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7788:        // aWrittenBySSSns
0000000000007788         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000077b4         align      8
                     aWrittenBySSSns_77b8:        // aWrittenBySSSns
00000000000077b8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000077e8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000781c         align      32
                     aWrittenBySSSns_7820:        // aWrittenBySSSns
0000000000007820         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000785c         align      32
                     aGeneralHelpUsi:
0000000000007860         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000078a1         align      8
                     switch_table_78a8:        // switch_table
00000000000078a8         dd         version_etc_arn.loc_5be6-switch_table_78a8, version_etc_arn.loc_5c78-switch_table_78a8, version_etc_arn.loc_5cb8-switch_table_78a8, version_etc_arn.loc_5d00-switch_table_78a8 ; switch table used at 0x5b64 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000078b8         dd         version_etc_arn.loc_5d50-switch_table_78a8, version_etc_arn.loc_5da8-switch_table_78a8, version_etc_arn.loc_5dd8-switch_table_78a8, version_etc_arn.loc_5e40-switch_table_78a8
00000000000078c8         dd         version_etc_arn.loc_5b70-switch_table_78a8, version_etc_arn.loc_5c20-switch_table_78a8
00000000000078d0         align      32
                     version_etc_copyright:
00000000000078e0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000790f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000007920         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007921         db  0x00 ; '.'
                     aPosix:
0000000000007922         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007928         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000792e         db  0x00 ; '.'
000000000000792f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7930; 0x7cdc[ (940 bytes)
        ; File offset : [31024; 31964[ (940 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007930         db  0x01 ; '.'
0000000000007931         db  0x1b ; '.'
0000000000007932         db  0x03 ; '.'
0000000000007933         db  0x3b ; ';'
0000000000007934         db  0xac ; '.'
0000000000007935         db  0x03 ; '.'
0000000000007936         db  0x00 ; '.'
0000000000007937         db  0x00 ; '.'
0000000000007938         db  0x74 ; 't'
0000000000007939         db  0x00 ; '.'
000000000000793a         db  0x00 ; '.'
000000000000793b         db  0x00 ; '.'
000000000000793c         db  0x00 ; '.'
000000000000793d         db  0x9b ; '.'
000000000000793e         db  0xff ; '.'
000000000000793f         db  0xff ; '.'
0000000000007940         db  0xf8 ; '.'
0000000000007941         db  0x03 ; '.'
0000000000007942         db  0x00 ; '.'
0000000000007943         db  0x00 ; '.'
0000000000007944         db  0x10 ; '.'
0000000000007945         db  0x9e ; '.'
0000000000007946         db  0xff ; '.'
0000000000007947         db  0xff ; '.'
0000000000007948         db  0x20 ; ' '
0000000000007949         db  0x04 ; '.'
000000000000794a         db  0x00 ; '.'
000000000000794b         db  0x00 ; '.'
000000000000794c         db  0x20 ; ' '
000000000000794d         db  0x9e ; '.'
000000000000794e         db  0xff ; '.'
000000000000794f         db  0xff ; '.'
0000000000007950         db  0x64 ; 'd'
0000000000007951         db  0x04 ; '.'
0000000000007952         db  0x00 ; '.'
0000000000007953         db  0x00 ; '.'
0000000000007954         db  0x30 ; '0'
0000000000007955         db  0xa1 ; '.'
0000000000007956         db  0xff ; '.'
0000000000007957         db  0xff ; '.'
0000000000007958         db  0xc8 ; '.'
0000000000007959         db  0x03 ; '.'
000000000000795a         db  0x00 ; '.'
000000000000795b         db  0x00 ; '.'
000000000000795c         db  0x40 ; '@'
000000000000795d         db  0xa2 ; '.'
000000000000795e         db  0xff ; '.'
000000000000795f         db  0xff ; '.'
0000000000007960         db  0x38 ; '8'
0000000000007961         db  0x04 ; '.'
0000000000007962         db  0x00 ; '.'
0000000000007963         db  0x00 ; '.'
0000000000007964         db  0xd0 ; '.'
0000000000007965         db  0xa5 ; '.'
0000000000007966         db  0xff ; '.'
0000000000007967         db  0xff ; '.'
0000000000007968         db  0xb0 ; '.'
0000000000007969         db  0x04 ; '.'
000000000000796a         db  0x00 ; '.'
000000000000796b         db  0x00 ; '.'
000000000000796c         db  0xc0 ; '.'
000000000000796d         db  0xa6 ; '.'
000000000000796e         db  0xff ; '.'
000000000000796f         db  0xff ; '.'
0000000000007970         db  0x00 ; '.'
0000000000007971         db  0x05 ; '.'
0000000000007972         db  0x00 ; '.'
0000000000007973         db  0x00 ; '.'
0000000000007974         db  0x00 ; '.'
0000000000007975         db  0xad ; '.'
0000000000007976         db  0xff ; '.'
0000000000007977         db  0xff ; '.'
0000000000007978         db  0x50 ; 'P'
0000000000007979         db  0x05 ; '.'
000000000000797a         db  0x00 ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         db  0x10 ; '.'
000000000000797d         db  0xad ; '.'
000000000000797e         db  0xff ; '.'
000000000000797f         db  0xff ; '.'
0000000000007980         db  0x64 ; 'd'
0000000000007981         db  0x05 ; '.'
0000000000007982         db  0x00 ; '.'
0000000000007983         db  0x00 ; '.'
0000000000007984         db  0x20 ; ' '
0000000000007985         db  0xad ; '.'
0000000000007986         db  0xff ; '.'
0000000000007987         db  0xff ; '.'
0000000000007988         db  0x78 ; 'x'
0000000000007989         db  0x05 ; '.'
000000000000798a         db  0x00 ; '.'
000000000000798b         db  0x00 ; '.'
000000000000798c         db  0xd0 ; '.'
000000000000798d         db  0xad ; '.'
000000000000798e         db  0xff ; '.'
000000000000798f         db  0xff ; '.'
0000000000007990         db  0xa8 ; '.'
0000000000007991         db  0x05 ; '.'
0000000000007992         db  0x00 ; '.'
0000000000007993         db  0x00 ; '.'
0000000000007994         db  0x60 ; '`'
0000000000007995         db  0xae ; '.'
0000000000007996         db  0xff ; '.'
0000000000007997         db  0xff ; '.'
0000000000007998         db  0x08 ; '.'
0000000000007999         db  0x06 ; '.'
000000000000799a         db  0x00 ; '.'
000000000000799b         db  0x00 ; '.'
000000000000799c         db  0xc0 ; '.'
000000000000799d         db  0xae ; '.'
000000000000799e         db  0xff ; '.'
000000000000799f         db  0xff ; '.'
00000000000079a0         db  0x28 ; '('
00000000000079a1         db  0x06 ; '.'
00000000000079a2         db  0x00 ; '.'
00000000000079a3         db  0x00 ; '.'
00000000000079a4         db  0x60 ; '`'
00000000000079a5         db  0xaf ; '.'
00000000000079a6         db  0xff ; '.'
00000000000079a7         db  0xff ; '.'
00000000000079a8         db  0x3c ; '<'
00000000000079a9         db  0x06 ; '.'
00000000000079aa         db  0x00 ; '.'
00000000000079ab         db  0x00 ; '.'
00000000000079ac         db  0x70 ; 'p'
00000000000079ad         db  0xaf ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0x50 ; 'P'
00000000000079b1         db  0x06 ; '.'
00000000000079b2         db  0x00 ; '.'
00000000000079b3         db  0x00 ; '.'
00000000000079b4         db  0x80 ; '.'
00000000000079b5         db  0xaf ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0x64 ; 'd'
00000000000079b9         db  0x06 ; '.'
00000000000079ba         db  0x00 ; '.'
00000000000079bb         db  0x00 ; '.'
00000000000079bc         db  0xb0 ; '.'
00000000000079bd         db  0xaf ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x80 ; '.'
00000000000079c1         db  0x06 ; '.'
00000000000079c2         db  0x00 ; '.'
00000000000079c3         db  0x00 ; '.'
00000000000079c4         db  0xd0 ; '.'
00000000000079c5         db  0xb0 ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0xe0 ; '.'
00000000000079c9         db  0x06 ; '.'
00000000000079ca         db  0x00 ; '.'
00000000000079cb         db  0x00 ; '.'
00000000000079cc         db  0x50 ; 'P'
00000000000079cd         db  0xb1 ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0xf4 ; '.'
00000000000079d1         db  0x06 ; '.'
00000000000079d2         db  0x00 ; '.'
00000000000079d3         db  0x00 ; '.'
00000000000079d4         db  0x90 ; '.'
00000000000079d5         db  0xb2 ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x54 ; 'T'
00000000000079d9         db  0x07 ; '.'
00000000000079da         db  0x00 ; '.'
00000000000079db         db  0x00 ; '.'
00000000000079dc         db  0xa0 ; '.'
00000000000079dd         db  0xb2 ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0x68 ; 'h'
00000000000079e1         db  0x07 ; '.'
00000000000079e2         db  0x00 ; '.'
00000000000079e3         db  0x00 ; '.'
00000000000079e4         db  0xb0 ; '.'
00000000000079e5         db  0xb2 ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x7c ; '|'
00000000000079e9         db  0x07 ; '.'
00000000000079ea         db  0x00 ; '.'
00000000000079eb         db  0x00 ; '.'
00000000000079ec         db  0xc0 ; '.'
00000000000079ed         db  0xb2 ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x90 ; '.'
00000000000079f1         db  0x07 ; '.'
00000000000079f2         db  0x00 ; '.'
00000000000079f3         db  0x00 ; '.'
00000000000079f4         db  0x10 ; '.'
00000000000079f5         db  0xb3 ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0xa4 ; '.'
00000000000079f9         db  0x07 ; '.'
00000000000079fa         db  0x00 ; '.'
00000000000079fb         db  0x00 ; '.'
00000000000079fc         db  0x70 ; 'p'
00000000000079fd         db  0xb3 ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0xb8 ; '.'
0000000000007a01         db  0x07 ; '.'
0000000000007a02         db  0x00 ; '.'
0000000000007a03         db  0x00 ; '.'
0000000000007a04         db  0xc0 ; '.'
0000000000007a05         db  0xb4 ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0xf4 ; '.'
0000000000007a09         db  0x07 ; '.'
0000000000007a0a         db  0x00 ; '.'
0000000000007a0b         db  0x00 ; '.'
0000000000007a0c         db  0x20 ; ' '
0000000000007a0d         db  0xb5 ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0x2c ; ','
0000000000007a11         db  0x08 ; '.'
0000000000007a12         db  0x00 ; '.'
0000000000007a13         db  0x00 ; '.'
0000000000007a14         db  0x70 ; 'p'
0000000000007a15         db  0xb5 ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0x40 ; '@'
0000000000007a19         db  0x08 ; '.'
0000000000007a1a         db  0x00 ; '.'
0000000000007a1b         db  0x00 ; '.'
0000000000007a1c         db  0xf0 ; '.'
0000000000007a1d         db  0xb5 ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0x74 ; 't'
0000000000007a21         db  0x08 ; '.'
0000000000007a22         db  0x00 ; '.'
0000000000007a23         db  0x00 ; '.'
0000000000007a24         db  0x60 ; '`'
0000000000007a25         db  0xb6 ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0x88 ; '.'
0000000000007a29         db  0x08 ; '.'
0000000000007a2a         db  0x00 ; '.'
0000000000007a2b         db  0x00 ; '.'
0000000000007a2c         db  0xd0 ; '.'
0000000000007a2d         db  0xb6 ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0xd4 ; '.'
0000000000007a31         db  0x08 ; '.'
0000000000007a32         db  0x00 ; '.'
0000000000007a33         db  0x00 ; '.'
0000000000007a34         db  0x10 ; '.'
0000000000007a35         db  0xb7 ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0xe8 ; '.'
0000000000007a39         db  0x08 ; '.'
0000000000007a3a         db  0x00 ; '.'
0000000000007a3b         db  0x00 ; '.'
0000000000007a3c         db  0x30 ; '0'
0000000000007a3d         db  0xb7 ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0xfc ; '.'
0000000000007a41         db  0x08 ; '.'
0000000000007a42         db  0x00 ; '.'
0000000000007a43         db  0x00 ; '.'
0000000000007a44         db  0xf0 ; '.'
0000000000007a45         db  0xb8 ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0x48 ; 'H'
0000000000007a49         db  0x09 ; '.'
0000000000007a4a         db  0x00 ; '.'
0000000000007a4b         db  0x00 ; '.'
0000000000007a4c         db  0x80 ; '.'
0000000000007a4d         db  0xb9 ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0x74 ; 't'
0000000000007a51         db  0x09 ; '.'
0000000000007a52         db  0x00 ; '.'
0000000000007a53         db  0x00 ; '.'
0000000000007a54         db  0x60 ; '`'
0000000000007a55         db  0xba ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0xa0 ; '.'
0000000000007a59         db  0x09 ; '.'
0000000000007a5a         db  0x00 ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         db  0xa0 ; '.'
0000000000007a5d         db  0xbc ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0xd8 ; '.'
0000000000007a61         db  0x09 ; '.'
0000000000007a62         db  0x00 ; '.'
0000000000007a63         db  0x00 ; '.'
0000000000007a64         db  0x30 ; '0'
0000000000007a65         db  0xbf ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x14 ; '.'
0000000000007a69         db  0x0a ; '.'
0000000000007a6a         db  0x00 ; '.'
0000000000007a6b         db  0x00 ; '.'
0000000000007a6c         db  0x90 ; '.'
0000000000007a6d         db  0xbf ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0x38 ; '8'
0000000000007a71         db  0x0a ; '.'
0000000000007a72         db  0x00 ; '.'
0000000000007a73         db  0x00 ; '.'
0000000000007a74         db  0xa0 ; '.'
0000000000007a75         db  0xc1 ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0x70 ; 'p'
0000000000007a79         db  0x0a ; '.'
0000000000007a7a         db  0x00 ; '.'
0000000000007a7b         db  0x00 ; '.'
0000000000007a7c         db  0xd0 ; '.'
0000000000007a7d         db  0xc1 ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0x98 ; '.'
0000000000007a81         db  0x0a ; '.'
0000000000007a82         db  0x00 ; '.'
0000000000007a83         db  0x00 ; '.'
0000000000007a84         db  0xe0 ; '.'
0000000000007a85         db  0xc1 ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0xac ; '.'
0000000000007a89         db  0x0a ; '.'
0000000000007a8a         db  0x00 ; '.'
0000000000007a8b         db  0x00 ; '.'
0000000000007a8c         db  0x10 ; '.'
0000000000007a8d         db  0xc2 ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0xc4 ; '.'
0000000000007a91         db  0x0a ; '.'
0000000000007a92         db  0x00 ; '.'
0000000000007a93         db  0x00 ; '.'
0000000000007a94         db  0x50 ; 'P'
0000000000007a95         db  0xc2 ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0xdc ; '.'
0000000000007a99         db  0x0a ; '.'
0000000000007a9a         db  0x00 ; '.'
0000000000007a9b         db  0x00 ; '.'
0000000000007a9c         db  0x70 ; 'p'
0000000000007a9d         db  0xc2 ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0xf8 ; '.'
0000000000007aa1         db  0x0a ; '.'
0000000000007aa2         db  0x00 ; '.'
0000000000007aa3         db  0x00 ; '.'
0000000000007aa4         db  0x10 ; '.'
0000000000007aa5         db  0xc3 ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0x18 ; '.'
0000000000007aa9         db  0x0b ; '.'
0000000000007aaa         db  0x00 ; '.'
0000000000007aab         db  0x00 ; '.'
0000000000007aac         db  0x00 ; '.'
0000000000007aad         db  0xc4 ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0x5c ; '\'
0000000000007ab1         db  0x0b ; '.'
0000000000007ab2         db  0x00 ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         db  0x40 ; '@'
0000000000007ab5         db  0xd6 ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0xd4 ; '.'
0000000000007ab9         db  0x0b ; '.'
0000000000007aba         db  0x00 ; '.'
0000000000007abb         db  0x00 ; '.'
0000000000007abc         db  0xf0 ; '.'
0000000000007abd         db  0xd7 ; '.'
0000000000007abe         db  0xff ; '.'
0000000000007abf         db  0xff ; '.'
0000000000007ac0         db  0x40 ; '@'
0000000000007ac1         db  0x0c ; '.'
0000000000007ac2         db  0x00 ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0x30 ; '0'
0000000000007ac5         db  0xd8 ; '.'
0000000000007ac6         db  0xff ; '.'
0000000000007ac7         db  0xff ; '.'
0000000000007ac8         db  0x6c ; 'l'
0000000000007ac9         db  0x0c ; '.'
0000000000007aca         db  0x00 ; '.'
0000000000007acb         db  0x00 ; '.'
0000000000007acc         db  0x50 ; 'P'
0000000000007acd         db  0xd8 ; '.'
0000000000007ace         db  0xff ; '.'
0000000000007acf         db  0xff ; '.'
0000000000007ad0         db  0x80 ; '.'
0000000000007ad1         db  0x0c ; '.'
0000000000007ad2         db  0x00 ; '.'
0000000000007ad3         db  0x00 ; '.'
0000000000007ad4         db  0x70 ; 'p'
0000000000007ad5         db  0xd8 ; '.'
0000000000007ad6         db  0xff ; '.'
0000000000007ad7         db  0xff ; '.'
0000000000007ad8         db  0x94 ; '.'
0000000000007ad9         db  0x0c ; '.'
0000000000007ada         db  0x00 ; '.'
0000000000007adb         db  0x00 ; '.'
0000000000007adc         db  0xb0 ; '.'
0000000000007add         db  0xd8 ; '.'
0000000000007ade         db  0xff ; '.'
0000000000007adf         db  0xff ; '.'
0000000000007ae0         db  0xa8 ; '.'
0000000000007ae1         db  0x0c ; '.'
0000000000007ae2         db  0x00 ; '.'
0000000000007ae3         db  0x00 ; '.'
0000000000007ae4         db  0xd0 ; '.'
0000000000007ae5         db  0xd8 ; '.'
0000000000007ae6         db  0xff ; '.'
0000000000007ae7         db  0xff ; '.'
0000000000007ae8         db  0xbc ; '.'
0000000000007ae9         db  0x0c ; '.'
0000000000007aea         db  0x00 ; '.'
0000000000007aeb         db  0x00 ; '.'
0000000000007aec         db  0x00 ; '.'
0000000000007aed         db  0xd9 ; '.'
0000000000007aee         db  0xff ; '.'
0000000000007aef         db  0xff ; '.'
0000000000007af0         db  0xd0 ; '.'
0000000000007af1         db  0x0c ; '.'
0000000000007af2         db  0x00 ; '.'
0000000000007af3         db  0x00 ; '.'
0000000000007af4         db  0x80 ; '.'
0000000000007af5         db  0xd9 ; '.'
0000000000007af6         db  0xff ; '.'
0000000000007af7         db  0xff ; '.'
0000000000007af8         db  0x24 ; '$'
0000000000007af9         db  0x0d ; '.'
0000000000007afa         db  0x00 ; '.'
0000000000007afb         db  0x00 ; '.'
0000000000007afc         db  0x70 ; 'p'
0000000000007afd         db  0xda ; '.'
0000000000007afe         db  0xff ; '.'
0000000000007aff         db  0xff ; '.'
0000000000007b00         db  0x90 ; '.'
0000000000007b01         db  0x0d ; '.'
0000000000007b02         db  0x00 ; '.'
0000000000007b03         db  0x00 ; '.'
0000000000007b04         db  0x80 ; '.'
0000000000007b05         db  0xda ; '.'
0000000000007b06         db  0xff ; '.'
0000000000007b07         db  0xff ; '.'
0000000000007b08         db  0xa4 ; '.'
0000000000007b09         db  0x0d ; '.'
0000000000007b0a         db  0x00 ; '.'
0000000000007b0b         db  0x00 ; '.'
0000000000007b0c         db  0x20 ; ' '
0000000000007b0d         db  0xdb ; '.'
0000000000007b0e         db  0xff ; '.'
0000000000007b0f         db  0xff ; '.'
0000000000007b10         db  0xd0 ; '.'
0000000000007b11         db  0x0d ; '.'
0000000000007b12         db  0x00 ; '.'
0000000000007b13         db  0x00 ; '.'
0000000000007b14         db  0x40 ; '@'
0000000000007b15         db  0xdb ; '.'
0000000000007b16         db  0xff ; '.'
0000000000007b17         db  0xff ; '.'
0000000000007b18         db  0xe4 ; '.'
0000000000007b19         db  0x0d ; '.'
0000000000007b1a         db  0x00 ; '.'
0000000000007b1b         db  0x00 ; '.'
0000000000007b1c         db  0x50 ; 'P'
0000000000007b1d         db  0xdb ; '.'
0000000000007b1e         db  0xff ; '.'
0000000000007b1f         db  0xff ; '.'
0000000000007b20         db  0xf8 ; '.'
0000000000007b21         db  0x0d ; '.'
0000000000007b22         db  0x00 ; '.'
0000000000007b23         db  0x00 ; '.'
0000000000007b24         db  0x70 ; 'p'
0000000000007b25         db  0xdb ; '.'
0000000000007b26         db  0xff ; '.'
0000000000007b27         db  0xff ; '.'
0000000000007b28         db  0x0c ; '.'
0000000000007b29         db  0x0e ; '.'
0000000000007b2a         db  0x00 ; '.'
0000000000007b2b         db  0x00 ; '.'
0000000000007b2c         db  0x90 ; '.'
0000000000007b2d         db  0xdb ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x20 ; ' '
0000000000007b31         db  0x0e ; '.'
0000000000007b32         db  0x00 ; '.'
0000000000007b33         db  0x00 ; '.'
0000000000007b34         db  0x20 ; ' '
0000000000007b35         db  0xdc ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0x3c ; '<'
0000000000007b39         db  0x0e ; '.'
0000000000007b3a         db  0x00 ; '.'
0000000000007b3b         db  0x00 ; '.'
0000000000007b3c         db  0xb0 ; '.'
0000000000007b3d         db  0xdc ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0x58 ; 'X'
0000000000007b41         db  0x0e ; '.'
0000000000007b42         db  0x00 ; '.'
0000000000007b43         db  0x00 ; '.'
0000000000007b44         db  0xc0 ; '.'
0000000000007b45         db  0xdc ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0x6c ; 'l'
0000000000007b49         db  0x0e ; '.'
0000000000007b4a         db  0x00 ; '.'
0000000000007b4b         db  0x00 ; '.'
0000000000007b4c         db  0xd0 ; '.'
0000000000007b4d         db  0xdc ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0x80 ; '.'
0000000000007b51         db  0x0e ; '.'
0000000000007b52         db  0x00 ; '.'
0000000000007b53         db  0x00 ; '.'
0000000000007b54         db  0x70 ; 'p'
0000000000007b55         db  0xdd ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x9c ; '.'
0000000000007b59         db  0x0e ; '.'
0000000000007b5a         db  0x00 ; '.'
0000000000007b5b         db  0x00 ; '.'
0000000000007b5c         db  0x80 ; '.'
0000000000007b5d         db  0xdd ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0xb0 ; '.'
0000000000007b61         db  0x0e ; '.'
0000000000007b62         db  0x00 ; '.'
0000000000007b63         db  0x00 ; '.'
0000000000007b64         db  0xa0 ; '.'
0000000000007b65         db  0xdd ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0xc4 ; '.'
0000000000007b69         db  0x0e ; '.'
0000000000007b6a         db  0x00 ; '.'
0000000000007b6b         db  0x00 ; '.'
0000000000007b6c         db  0xb0 ; '.'
0000000000007b6d         db  0xdd ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0xd8 ; '.'
0000000000007b71         db  0x0e ; '.'
0000000000007b72         db  0x00 ; '.'
0000000000007b73         db  0x00 ; '.'
0000000000007b74         db  0x40 ; '@'
0000000000007b75         db  0xde ; '.'
0000000000007b76         db  0xff ; '.'
0000000000007b77         db  0xff ; '.'
0000000000007b78         db  0xf4 ; '.'
0000000000007b79         db  0x0e ; '.'
0000000000007b7a         db  0x00 ; '.'
0000000000007b7b         db  0x00 ; '.'
0000000000007b7c         db  0xe0 ; '.'
0000000000007b7d         db  0xde ; '.'
0000000000007b7e         db  0xff ; '.'
0000000000007b7f         db  0xff ; '.'
0000000000007b80         db  0x10 ; '.'
0000000000007b81         db  0x0f ; '.'
0000000000007b82         db  0x00 ; '.'
0000000000007b83         db  0x00 ; '.'
0000000000007b84         db  0xf0 ; '.'
0000000000007b85         db  0xde ; '.'
0000000000007b86         db  0xff ; '.'
0000000000007b87         db  0xff ; '.'
0000000000007b88         db  0x24 ; '$'
0000000000007b89         db  0x0f ; '.'
0000000000007b8a         db  0x00 ; '.'
0000000000007b8b         db  0x00 ; '.'
0000000000007b8c         db  0x10 ; '.'
0000000000007b8d         db  0xdf ; '.'
0000000000007b8e         db  0xff ; '.'
0000000000007b8f         db  0xff ; '.'
0000000000007b90         db  0x38 ; '8'
0000000000007b91         db  0x0f ; '.'
0000000000007b92         db  0x00 ; '.'
0000000000007b93         db  0x00 ; '.'
0000000000007b94         db  0x30 ; '0'
0000000000007b95         db  0xdf ; '.'
0000000000007b96         db  0xff ; '.'
0000000000007b97         db  0xff ; '.'
0000000000007b98         db  0x4c ; 'L'
0000000000007b99         db  0x0f ; '.'
0000000000007b9a         db  0x00 ; '.'
0000000000007b9b         db  0x00 ; '.'
0000000000007b9c         db  0x40 ; '@'
0000000000007b9d         db  0xdf ; '.'
0000000000007b9e         db  0xff ; '.'
0000000000007b9f         db  0xff ; '.'
0000000000007ba0         db  0x60 ; '`'
0000000000007ba1         db  0x0f ; '.'
0000000000007ba2         db  0x00 ; '.'
0000000000007ba3         db  0x00 ; '.'
0000000000007ba4         db  0x60 ; '`'
0000000000007ba5         db  0xdf ; '.'
0000000000007ba6         db  0xff ; '.'
0000000000007ba7         db  0xff ; '.'
0000000000007ba8         db  0x74 ; 't'
0000000000007ba9         db  0x0f ; '.'
0000000000007baa         db  0x00 ; '.'
0000000000007bab         db  0x00 ; '.'
0000000000007bac         db  0x80 ; '.'
0000000000007bad         db  0xdf ; '.'
0000000000007bae         db  0xff ; '.'
0000000000007baf         db  0xff ; '.'
0000000000007bb0         db  0x88 ; '.'
0000000000007bb1         db  0x0f ; '.'
0000000000007bb2         db  0x00 ; '.'
0000000000007bb3         db  0x00 ; '.'
0000000000007bb4         db  0xa0 ; '.'
0000000000007bb5         db  0xdf ; '.'
0000000000007bb6         db  0xff ; '.'
0000000000007bb7         db  0xff ; '.'
0000000000007bb8         db  0xa0 ; '.'
0000000000007bb9         db  0x0f ; '.'
0000000000007bba         db  0x00 ; '.'
0000000000007bbb         db  0x00 ; '.'
0000000000007bbc         db  0xd0 ; '.'
0000000000007bbd         db  0xe0 ; '.'
0000000000007bbe         db  0xff ; '.'
0000000000007bbf         db  0xff ; '.'
0000000000007bc0         db  0xdc ; '.'
0000000000007bc1         db  0x0f ; '.'
0000000000007bc2         db  0x00 ; '.'
0000000000007bc3         db  0x00 ; '.'
0000000000007bc4         db  0x70 ; 'p'
0000000000007bc5         db  0xe1 ; '.'
0000000000007bc6         db  0xff ; '.'
0000000000007bc7         db  0xff ; '.'
0000000000007bc8         db  0x3c ; '<'
0000000000007bc9         db  0x10 ; '.'
0000000000007bca         db  0x00 ; '.'
0000000000007bcb         db  0x00 ; '.'
0000000000007bcc         db  0x90 ; '.'
0000000000007bcd         db  0xe1 ; '.'
0000000000007bce         db  0xff ; '.'
0000000000007bcf         db  0xff ; '.'
0000000000007bd0         db  0x50 ; 'P'
0000000000007bd1         db  0x10 ; '.'
0000000000007bd2         db  0x00 ; '.'
0000000000007bd3         db  0x00 ; '.'
0000000000007bd4         db  0xb0 ; '.'
0000000000007bd5         db  0xe5 ; '.'
0000000000007bd6         db  0xff ; '.'
0000000000007bd7         db  0xff ; '.'
0000000000007bd8         db  0x64 ; 'd'
0000000000007bd9         db  0x11 ; '.'
0000000000007bda         db  0x00 ; '.'
0000000000007bdb         db  0x00 ; '.'
0000000000007bdc         db  0xd0 ; '.'
0000000000007bdd         db  0xe5 ; '.'
0000000000007bde         db  0xff ; '.'
0000000000007bdf         db  0xff ; '.'
0000000000007be0         db  0x78 ; 'x'
0000000000007be1         db  0x11 ; '.'
0000000000007be2         db  0x00 ; '.'
0000000000007be3         db  0x00 ; '.'
0000000000007be4         db  0x50 ; 'P'
0000000000007be5         db  0xe6 ; '.'
0000000000007be6         db  0xff ; '.'
0000000000007be7         db  0xff ; '.'
0000000000007be8         db  0x94 ; '.'
0000000000007be9         db  0x11 ; '.'
0000000000007bea         db  0x00 ; '.'
0000000000007beb         db  0x00 ; '.'
0000000000007bec         db  0x30 ; '0'
0000000000007bed         db  0xe7 ; '.'
0000000000007bee         db  0xff ; '.'
0000000000007bef         db  0xff ; '.'
0000000000007bf0         db  0xc0 ; '.'
0000000000007bf1         db  0x11 ; '.'
0000000000007bf2         db  0x00 ; '.'
0000000000007bf3         db  0x00 ; '.'
0000000000007bf4         db  0xb0 ; '.'
0000000000007bf5         db  0xe7 ; '.'
0000000000007bf6         db  0xff ; '.'
0000000000007bf7         db  0xff ; '.'
0000000000007bf8         db  0xe0 ; '.'
0000000000007bf9         db  0x11 ; '.'
0000000000007bfa         db  0x00 ; '.'
0000000000007bfb         db  0x00 ; '.'
0000000000007bfc         db  0xd0 ; '.'
0000000000007bfd         db  0xe7 ; '.'
0000000000007bfe         db  0xff ; '.'
0000000000007bff         db  0xff ; '.'
0000000000007c00         db  0xfc ; '.'
0000000000007c01         db  0x11 ; '.'
0000000000007c02         db  0x00 ; '.'
0000000000007c03         db  0x00 ; '.'
0000000000007c04         db  0x00 ; '.'
0000000000007c05         db  0xe8 ; '.'
0000000000007c06         db  0xff ; '.'
0000000000007c07         db  0xff ; '.'
0000000000007c08         db  0x10 ; '.'
0000000000007c09         db  0x12 ; '.'
0000000000007c0a         db  0x00 ; '.'
0000000000007c0b         db  0x00 ; '.'
0000000000007c0c         db  0x10 ; '.'
0000000000007c0d         db  0xe8 ; '.'
0000000000007c0e         db  0xff ; '.'
0000000000007c0f         db  0xff ; '.'
0000000000007c10         db  0x24 ; '$'
0000000000007c11         db  0x12 ; '.'
0000000000007c12         db  0x00 ; '.'
0000000000007c13         db  0x00 ; '.'
0000000000007c14         db  0x50 ; 'P'
0000000000007c15         db  0xe8 ; '.'
0000000000007c16         db  0xff ; '.'
0000000000007c17         db  0xff ; '.'
0000000000007c18         db  0x48 ; 'H'
0000000000007c19         db  0x12 ; '.'
0000000000007c1a         db  0x00 ; '.'
0000000000007c1b         db  0x00 ; '.'
0000000000007c1c         db  0x80 ; '.'
0000000000007c1d         db  0xe8 ; '.'
0000000000007c1e         db  0xff ; '.'
0000000000007c1f         db  0xff ; '.'
0000000000007c20         db  0x5c ; '\'
0000000000007c21         db  0x12 ; '.'
0000000000007c22         db  0x00 ; '.'
0000000000007c23         db  0x00 ; '.'
0000000000007c24         db  0x10 ; '.'
0000000000007c25         db  0xe9 ; '.'
0000000000007c26         db  0xff ; '.'
0000000000007c27         db  0xff ; '.'
0000000000007c28         db  0x74 ; 't'
0000000000007c29         db  0x12 ; '.'
0000000000007c2a         db  0x00 ; '.'
0000000000007c2b         db  0x00 ; '.'
0000000000007c2c         db  0x60 ; '`'
0000000000007c2d         db  0xe9 ; '.'
0000000000007c2e         db  0xff ; '.'
0000000000007c2f         db  0xff ; '.'
0000000000007c30         db  0x8c ; '.'
0000000000007c31         db  0x12 ; '.'
0000000000007c32         db  0x00 ; '.'
0000000000007c33         db  0x00 ; '.'
0000000000007c34         db  0x80 ; '.'
0000000000007c35         db  0xe9 ; '.'
0000000000007c36         db  0xff ; '.'
0000000000007c37         db  0xff ; '.'
0000000000007c38         db  0xa8 ; '.'
0000000000007c39         db  0x12 ; '.'
0000000000007c3a         db  0x00 ; '.'
0000000000007c3b         db  0x00 ; '.'
0000000000007c3c         db  0xb0 ; '.'
0000000000007c3d         db  0xe9 ; '.'
0000000000007c3e         db  0xff ; '.'
0000000000007c3f         db  0xff ; '.'
0000000000007c40         db  0xc4 ; '.'
0000000000007c41         db  0x12 ; '.'
0000000000007c42         db  0x00 ; '.'
0000000000007c43         db  0x00 ; '.'
0000000000007c44         db  0xe0 ; '.'
0000000000007c45         db  0xe9 ; '.'
0000000000007c46         db  0xff ; '.'
0000000000007c47         db  0xff ; '.'
0000000000007c48         db  0xec ; '.'
0000000000007c49         db  0x12 ; '.'
0000000000007c4a         db  0x00 ; '.'
0000000000007c4b         db  0x00 ; '.'
0000000000007c4c         db  0x00 ; '.'
0000000000007c4d         db  0xea ; '.'
0000000000007c4e         db  0xff ; '.'
0000000000007c4f         db  0xff ; '.'
0000000000007c50         db  0x08 ; '.'
0000000000007c51         db  0x13 ; '.'
0000000000007c52         db  0x00 ; '.'
0000000000007c53         db  0x00 ; '.'
0000000000007c54         db  0x40 ; '@'
0000000000007c55         db  0xea ; '.'
0000000000007c56         db  0xff ; '.'
0000000000007c57         db  0xff ; '.'
0000000000007c58         db  0x20 ; ' '
0000000000007c59         db  0x13 ; '.'
0000000000007c5a         db  0x00 ; '.'
0000000000007c5b         db  0x00 ; '.'
0000000000007c5c         db  0x70 ; 'p'
0000000000007c5d         db  0xea ; '.'
0000000000007c5e         db  0xff ; '.'
0000000000007c5f         db  0xff ; '.'
0000000000007c60         db  0x40 ; '@'
0000000000007c61         db  0x13 ; '.'
0000000000007c62         db  0x00 ; '.'
0000000000007c63         db  0x00 ; '.'
0000000000007c64         db  0x00 ; '.'
0000000000007c65         db  0xeb ; '.'
0000000000007c66         db  0xff ; '.'
0000000000007c67         db  0xff ; '.'
0000000000007c68         db  0x80 ; '.'
0000000000007c69         db  0x13 ; '.'
0000000000007c6a         db  0x00 ; '.'
0000000000007c6b         db  0x00 ; '.'
0000000000007c6c         db  0x80 ; '.'
0000000000007c6d         db  0xeb ; '.'
0000000000007c6e         db  0xff ; '.'
0000000000007c6f         db  0xff ; '.'
0000000000007c70         db  0xd0 ; '.'
0000000000007c71         db  0x13 ; '.'
0000000000007c72         db  0x00 ; '.'
0000000000007c73         db  0x00 ; '.'
0000000000007c74         db  0xa0 ; '.'
0000000000007c75         db  0xeb ; '.'
0000000000007c76         db  0xff ; '.'
0000000000007c77         db  0xff ; '.'
0000000000007c78         db  0xf0 ; '.'
0000000000007c79         db  0x13 ; '.'
0000000000007c7a         db  0x00 ; '.'
0000000000007c7b         db  0x00 ; '.'
0000000000007c7c         db  0x00 ; '.'
0000000000007c7d         db  0xec ; '.'
0000000000007c7e         db  0xff ; '.'
0000000000007c7f         db  0xff ; '.'
0000000000007c80         db  0x24 ; '$'
0000000000007c81         db  0x14 ; '.'
0000000000007c82         db  0x00 ; '.'
0000000000007c83         db  0x00 ; '.'
0000000000007c84         db  0x60 ; '`'
0000000000007c85         db  0xec ; '.'
0000000000007c86         db  0xff ; '.'
0000000000007c87         db  0xff ; '.'
0000000000007c88         db  0x50 ; 'P'
0000000000007c89         db  0x14 ; '.'
0000000000007c8a         db  0x00 ; '.'
0000000000007c8b         db  0x00 ; '.'
0000000000007c8c         db  0xc0 ; '.'
0000000000007c8d         db  0xec ; '.'
0000000000007c8e         db  0xff ; '.'
0000000000007c8f         db  0xff ; '.'
0000000000007c90         db  0x64 ; 'd'
0000000000007c91         db  0x14 ; '.'
0000000000007c92         db  0x00 ; '.'
0000000000007c93         db  0x00 ; '.'
0000000000007c94         db  0x10 ; '.'
0000000000007c95         db  0xed ; '.'
0000000000007c96         db  0xff ; '.'
0000000000007c97         db  0xff ; '.'
0000000000007c98         db  0x90 ; '.'
0000000000007c99         db  0x14 ; '.'
0000000000007c9a         db  0x00 ; '.'
0000000000007c9b         db  0x00 ; '.'
0000000000007c9c         db  0x70 ; 'p'
0000000000007c9d         db  0xed ; '.'
0000000000007c9e         db  0xff ; '.'
0000000000007c9f         db  0xff ; '.'
0000000000007ca0         db  0xb0 ; '.'
0000000000007ca1         db  0x14 ; '.'
0000000000007ca2         db  0x00 ; '.'
0000000000007ca3         db  0x00 ; '.'
0000000000007ca4         db  0xb0 ; '.'
0000000000007ca5         db  0xed ; '.'
0000000000007ca6         db  0xff ; '.'
0000000000007ca7         db  0xff ; '.'
0000000000007ca8         db  0xc8 ; '.'
0000000000007ca9         db  0x14 ; '.'
0000000000007caa         db  0x00 ; '.'
0000000000007cab         db  0x00 ; '.'
0000000000007cac         db  0xf0 ; '.'
0000000000007cad         db  0xed ; '.'
0000000000007cae         db  0xff ; '.'
0000000000007caf         db  0xff ; '.'
0000000000007cb0         db  0xe8 ; '.'
0000000000007cb1         db  0x14 ; '.'
0000000000007cb2         db  0x00 ; '.'
0000000000007cb3         db  0x00 ; '.'
0000000000007cb4         db  0x70 ; 'p'
0000000000007cb5         db  0xee ; '.'
0000000000007cb6         db  0xff ; '.'
0000000000007cb7         db  0xff ; '.'
0000000000007cb8         db  0x20 ; ' '
0000000000007cb9         db  0x15 ; '.'
0000000000007cba         db  0x00 ; '.'
0000000000007cbb         db  0x00 ; '.'
0000000000007cbc         db  0xb0 ; '.'
0000000000007cbd         db  0xee ; '.'
0000000000007cbe         db  0xff ; '.'
0000000000007cbf         db  0xff ; '.'
0000000000007cc0         db  0x40 ; '@'
0000000000007cc1         db  0x15 ; '.'
0000000000007cc2         db  0x00 ; '.'
0000000000007cc3         db  0x00 ; '.'
0000000000007cc4         db  0x10 ; '.'
0000000000007cc5         db  0xef ; '.'
0000000000007cc6         db  0xff ; '.'
0000000000007cc7         db  0xff ; '.'
0000000000007cc8         db  0x70 ; 'p'
0000000000007cc9         db  0x15 ; '.'
0000000000007cca         db  0x00 ; '.'
0000000000007ccb         db  0x00 ; '.'
0000000000007ccc         db  0x80 ; '.'
0000000000007ccd         db  0xef ; '.'
0000000000007cce         db  0xff ; '.'
0000000000007ccf         db  0xff ; '.'
0000000000007cd0         db  0xb8 ; '.'
0000000000007cd1         db  0x15 ; '.'
0000000000007cd2         db  0x00 ; '.'
0000000000007cd3         db  0x00 ; '.'
0000000000007cd4         db  0x90 ; '.'
0000000000007cd5         db  0xef ; '.'
0000000000007cd6         db  0xff ; '.'
0000000000007cd7         db  0xff ; '.'
0000000000007cd8         db  0xd0 ; '.'
0000000000007cd9         db  0x15 ; '.'
0000000000007cda         db  0x00 ; '.'
0000000000007cdb         db  0x00 ; '.'
0000000000007cdc         db  0x00 ; '.'
0000000000007cdd         db  0x00 ; '.'
0000000000007cde         db  0x00 ; '.'
0000000000007cdf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7ce0; 0x8f18[ (4664 bytes)
        ; File offset : [31968; 36632[ (4664 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007ce0         dd         0x00000014                                  ; Length of the record
0000000000007ce4         dd         0x00000000                                  ; CIE ID
0000000000007ce8         db         0x01                                        ; Version
0000000000007ce9         db         "zR", 0                                     ; Augmentation String
0000000000007cec         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007ced         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007cee         db         0x10                                        ; Return address register
0000000000007cef         db         0x01                                        ; Augmentation data length
0000000000007cf0         db         0x1b                                        ; FDE encoding
0000000000007cf1         db  0x0c ; '.'
0000000000007cf2         db  0x07 ; '.'
0000000000007cf3         db  0x08 ; '.'
0000000000007cf4         db  0x90 ; '.'
0000000000007cf5         db  0x01 ; '.'
0000000000007cf6         db  0x07 ; '.'
0000000000007cf7         db  0x10 ; '.'
0000000000007cf8         dd         0x00000014                                  ; Length of the record
0000000000007cfc         dd         0x0000001c                                  ; FDE: parent CIE at 0x7ce0 (FDE encoding = 0x1B)
0000000000007d00         db         0x60, 0x9d, 2 dup (0xff)                    ; begin 0x1a60
0000000000007d04         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1a8b)
0000000000007d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d09         align      16
0000000000007d10         dd         0x00000014                                  ; Length of the record
0000000000007d14         dd         0x00000000                                  ; CIE ID
0000000000007d18         db         0x01                                        ; Version
0000000000007d19         db         "zR", 0                                     ; Augmentation String
0000000000007d1c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007d1d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007d1e         db         0x10                                        ; Return address register
0000000000007d1f         db         0x01                                        ; Augmentation data length
0000000000007d20         db         0x1b                                        ; FDE encoding
0000000000007d21         db  0x0c ; '.'
0000000000007d22         db  0x07 ; '.'
0000000000007d23         db  0x08 ; '.'
0000000000007d24         db  0x90 ; '.'
0000000000007d25         db  0x01 ; '.'
0000000000007d26         db  0x00 ; '.'
0000000000007d27         db  0x00 ; '.'
0000000000007d28         dd         0x00000024                                  ; Length of the record
0000000000007d2c         dd         0x0000001c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007d30         db         0x00, 0x97, 2 dup (0xff)                    ; begin 0x1430
0000000000007d34         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x1740)
0000000000007d38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d39         db  0x0e ; '.'
0000000000007d3a         db  0x10 ; '.'
0000000000007d3b         db  0x46 ; 'F'
0000000000007d3c         db  0x0e ; '.'
0000000000007d3d         db  0x18 ; '.'
0000000000007d3e         db  0x4a ; 'J'
0000000000007d3f         db  0x0f ; '.'
0000000000007d40         db  0x0b ; '.'
0000000000007d41         db  0x77 ; 'w'
0000000000007d42         db  0x08 ; '.'
0000000000007d43         db  0x80 ; '.'
0000000000007d44         db  0x00 ; '.'
0000000000007d45         db  0x3f ; '?'
0000000000007d46         db  0x1a ; '.'
0000000000007d47         db  0x3b ; ';'
0000000000007d48         db  0x2a ; '*'
0000000000007d49         db  0x33 ; '3'
0000000000007d4a         db  0x24 ; '$'
0000000000007d4b         db  0x22 ; '"'
0000000000007d4c         db  0x00 ; '.'
0000000000007d4d         db  0x00 ; '.'
0000000000007d4e         db  0x00 ; '.'
0000000000007d4f         db  0x00 ; '.'
0000000000007d50         dd         0x00000014                                  ; Length of the record
0000000000007d54         dd         0x00000044                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007d58         db         0xe8, 0x99, 2 dup (0xff)                    ; begin 0x1740
0000000000007d5c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1748)
0000000000007d60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d61         align      8
0000000000007d68         dd         0x00000028                                  ; Length of the record
0000000000007d6c         dd         0x0000005c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007d70         db         0x00, 0x9e, 2 dup (0xff)                    ; begin 0x1b70
0000000000007d74         db         0x8a, 0x03, 2 dup (0x00)                    ; length 0x38a (end at 0x1efa)
0000000000007d78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d79         db  0x42 ; 'B'
0000000000007d7a         db  0x0e ; '.'
0000000000007d7b         db  0x10 ; '.'
0000000000007d7c         db  0x8d ; '.'
0000000000007d7d         db  0x02 ; '.'
0000000000007d7e         db  0x42 ; 'B'
0000000000007d7f         db  0x0e ; '.'
0000000000007d80         db  0x18 ; '.'
0000000000007d81         db  0x8c ; '.'
0000000000007d82         db  0x03 ; '.'
0000000000007d83         db  0x46 ; 'F'
0000000000007d84         db  0x0e ; '.'
0000000000007d85         db  0x20 ; ' '
0000000000007d86         db  0x86 ; '.'
0000000000007d87         db  0x04 ; '.'
0000000000007d88         db  0x41 ; 'A'
0000000000007d89         db  0x0e ; '.'
0000000000007d8a         db  0x28 ; '('
0000000000007d8b         db  0x83 ; '.'
0000000000007d8c         db  0x05 ; '.'
0000000000007d8d         db  0x49 ; 'I'
0000000000007d8e         db  0x0e ; '.'
0000000000007d8f         db  0xb0 ; '.'
0000000000007d90         db  0x01 ; '.'
0000000000007d91         db  0x00 ; '.'
0000000000007d92         db  0x00 ; '.'
0000000000007d93         db  0x00 ; '.'
0000000000007d94         dd         0x00000048                                  ; Length of the record
0000000000007d98         dd         0x00000088                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007d9c         db         0xb4, 0x99, 2 dup (0xff)                    ; begin 0x1750
0000000000007da0         db         0x06, 0x03, 2 dup (0x00)                    ; length 0x306 (end at 0x1a56)
0000000000007da4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007da5         db  0x42 ; 'B'
0000000000007da6         db  0x0e ; '.'
0000000000007da7         db  0x10 ; '.'
0000000000007da8         db  0x8f ; '.'
0000000000007da9         db  0x02 ; '.'
0000000000007daa         db  0x42 ; 'B'
0000000000007dab         db  0x0e ; '.'
0000000000007dac         db  0x18 ; '.'
0000000000007dad         db  0x8e ; '.'
0000000000007dae         db  0x03 ; '.'
0000000000007daf         db  0x42 ; 'B'
0000000000007db0         db  0x0e ; '.'
0000000000007db1         db  0x20 ; ' '
0000000000007db2         db  0x8d ; '.'
0000000000007db3         db  0x04 ; '.'
0000000000007db4         db  0x42 ; 'B'
0000000000007db5         db  0x0e ; '.'
0000000000007db6         db  0x28 ; '('
0000000000007db7         db  0x8c ; '.'
0000000000007db8         db  0x05 ; '.'
0000000000007db9         db  0x44 ; 'D'
0000000000007dba         db  0x0e ; '.'
0000000000007dbb         db  0x30 ; '0'
0000000000007dbc         db  0x86 ; '.'
0000000000007dbd         db  0x06 ; '.'
0000000000007dbe         db  0x41 ; 'A'
0000000000007dbf         db  0x0e ; '.'
0000000000007dc0         db  0x38 ; '8'
0000000000007dc1         db  0x83 ; '.'
0000000000007dc2         db  0x07 ; '.'
0000000000007dc3         db  0x4f ; 'O'
0000000000007dc4         db  0x0e ; '.'
0000000000007dc5         db  0x50 ; 'P'
0000000000007dc6         db  0x03 ; '.'
0000000000007dc7         db  0x70 ; 'p'
0000000000007dc8         db  0x02 ; '.'
0000000000007dc9         db  0x0a ; '.'
0000000000007dca         db  0x0e ; '.'
0000000000007dcb         db  0x38 ; '8'
0000000000007dcc         db  0x44 ; 'D'
0000000000007dcd         db  0x0e ; '.'
0000000000007dce         db  0x30 ; '0'
0000000000007dcf         db  0x41 ; 'A'
0000000000007dd0         db  0x0e ; '.'
0000000000007dd1         db  0x28 ; '('
0000000000007dd2         db  0x42 ; 'B'
0000000000007dd3         db  0x0e ; '.'
0000000000007dd4         db  0x20 ; ' '
0000000000007dd5         db  0x42 ; 'B'
0000000000007dd6         db  0x0e ; '.'
0000000000007dd7         db  0x18 ; '.'
0000000000007dd8         db  0x42 ; 'B'
0000000000007dd9         db  0x0e ; '.'
0000000000007dda         db  0x10 ; '.'
0000000000007ddb         db  0x42 ; 'B'
0000000000007ddc         db  0x0e ; '.'
0000000000007ddd         db  0x08 ; '.'
0000000000007dde         db  0x41 ; 'A'
0000000000007ddf         db  0x0b ; '.'
0000000000007de0         dd         0x0000004c                                  ; Length of the record
0000000000007de4         dd         0x000000d4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007de8         db         0x18, 0xa1, 2 dup (0xff)                    ; begin 0x1f00
0000000000007dec         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0x1fef)
0000000000007df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007df1         db  0x42 ; 'B'
0000000000007df2         db  0x0e ; '.'
0000000000007df3         db  0x10 ; '.'
0000000000007df4         db  0x8f ; '.'
0000000000007df5         db  0x02 ; '.'
0000000000007df6         db  0x42 ; 'B'
0000000000007df7         db  0x0e ; '.'
0000000000007df8         db  0x18 ; '.'
0000000000007df9         db  0x8e ; '.'
0000000000007dfa         db  0x03 ; '.'
0000000000007dfb         db  0x47 ; 'G'
0000000000007dfc         db  0x0e ; '.'
0000000000007dfd         db  0x20 ; ' '
0000000000007dfe         db  0x8d ; '.'
0000000000007dff         db  0x04 ; '.'
0000000000007e00         db  0x42 ; 'B'
0000000000007e01         db  0x0e ; '.'
0000000000007e02         db  0x28 ; '('
0000000000007e03         db  0x8c ; '.'
0000000000007e04         db  0x05 ; '.'
0000000000007e05         db  0x44 ; 'D'
0000000000007e06         db  0x0e ; '.'
0000000000007e07         db  0x30 ; '0'
0000000000007e08         db  0x86 ; '.'
0000000000007e09         db  0x06 ; '.'
0000000000007e0a         db  0x41 ; 'A'
0000000000007e0b         db  0x0e ; '.'
0000000000007e0c         db  0x38 ; '8'
0000000000007e0d         db  0x83 ; '.'
0000000000007e0e         db  0x07 ; '.'
0000000000007e0f         db  0x5c ; '\'
0000000000007e10         db  0x0e ; '.'
0000000000007e11         db  0x40 ; '@'
0000000000007e12         db  0x02 ; '.'
0000000000007e13         db  0x61 ; 'a'
0000000000007e14         db  0x0a ; '.'
0000000000007e15         db  0x0e ; '.'
0000000000007e16         db  0x38 ; '8'
0000000000007e17         db  0x44 ; 'D'
0000000000007e18         db  0x0e ; '.'
0000000000007e19         db  0x30 ; '0'
0000000000007e1a         db  0x41 ; 'A'
0000000000007e1b         db  0x0e ; '.'
0000000000007e1c         db  0x28 ; '('
0000000000007e1d         db  0x42 ; 'B'
0000000000007e1e         db  0x0e ; '.'
0000000000007e1f         db  0x20 ; ' '
0000000000007e20         db  0x42 ; 'B'
0000000000007e21         db  0x0e ; '.'
0000000000007e22         db  0x18 ; '.'
0000000000007e23         db  0x42 ; 'B'
0000000000007e24         db  0x0e ; '.'
0000000000007e25         db  0x10 ; '.'
0000000000007e26         db  0x42 ; 'B'
0000000000007e27         db  0x0e ; '.'
0000000000007e28         db  0x08 ; '.'
0000000000007e29         db  0x44 ; 'D'
0000000000007e2a         db  0x0b ; '.'
0000000000007e2b         db  0x00 ; '.'
0000000000007e2c         db  0x00 ; '.'
0000000000007e2d         db  0x00 ; '.'
0000000000007e2e         db  0x00 ; '.'
0000000000007e2f         db  0x00 ; '.'
0000000000007e30         dd         0x0000004c                                  ; Length of the record
0000000000007e34         dd         0x00000124                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007e38         db         0xb8, 0xa1, 2 dup (0xff)                    ; begin 0x1ff0
0000000000007e3c         db         0x36, 0x06, 2 dup (0x00)                    ; length 0x636 (end at 0x2626)
0000000000007e40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e41         db  0x42 ; 'B'
0000000000007e42         db  0x0e ; '.'
0000000000007e43         db  0x10 ; '.'
0000000000007e44         db  0x8f ; '.'
0000000000007e45         db  0x02 ; '.'
0000000000007e46         db  0x42 ; 'B'
0000000000007e47         db  0x0e ; '.'
0000000000007e48         db  0x18 ; '.'
0000000000007e49         db  0x8e ; '.'
0000000000007e4a         db  0x03 ; '.'
0000000000007e4b         db  0x42 ; 'B'
0000000000007e4c         db  0x0e ; '.'
0000000000007e4d         db  0x20 ; ' '
0000000000007e4e         db  0x8d ; '.'
0000000000007e4f         db  0x04 ; '.'
0000000000007e50         db  0x42 ; 'B'
0000000000007e51         db  0x0e ; '.'
0000000000007e52         db  0x28 ; '('
0000000000007e53         db  0x8c ; '.'
0000000000007e54         db  0x05 ; '.'
0000000000007e55         db  0x41 ; 'A'
0000000000007e56         db  0x0e ; '.'
0000000000007e57         db  0x30 ; '0'
0000000000007e58         db  0x86 ; '.'
0000000000007e59         db  0x06 ; '.'
0000000000007e5a         db  0x41 ; 'A'
0000000000007e5b         db  0x0e ; '.'
0000000000007e5c         db  0x38 ; '8'
0000000000007e5d         db  0x83 ; '.'
0000000000007e5e         db  0x07 ; '.'
0000000000007e5f         db  0x47 ; 'G'
0000000000007e60         db  0x0e ; '.'
0000000000007e61         db  0xa0 ; '.'
0000000000007e62         db  0x02 ; '.'
0000000000007e63         db  0x03 ; '.'
0000000000007e64         db  0x30 ; '0'
0000000000007e65         db  0x02 ; '.'
0000000000007e66         db  0x0a ; '.'
0000000000007e67         db  0x0e ; '.'
0000000000007e68         db  0x38 ; '8'
0000000000007e69         db  0x41 ; 'A'
0000000000007e6a         db  0x0e ; '.'
0000000000007e6b         db  0x30 ; '0'
0000000000007e6c         db  0x41 ; 'A'
0000000000007e6d         db  0x0e ; '.'
0000000000007e6e         db  0x28 ; '('
0000000000007e6f         db  0x42 ; 'B'
0000000000007e70         db  0x0e ; '.'
0000000000007e71         db  0x20 ; ' '
0000000000007e72         db  0x42 ; 'B'
0000000000007e73         db  0x0e ; '.'
0000000000007e74         db  0x18 ; '.'
0000000000007e75         db  0x42 ; 'B'
0000000000007e76         db  0x0e ; '.'
0000000000007e77         db  0x10 ; '.'
0000000000007e78         db  0x42 ; 'B'
0000000000007e79         db  0x0e ; '.'
0000000000007e7a         db  0x08 ; '.'
0000000000007e7b         db  0x45 ; 'E'
0000000000007e7c         db  0x0b ; '.'
0000000000007e7d         db  0x00 ; '.'
0000000000007e7e         db  0x00 ; '.'
0000000000007e7f         db  0x00 ; '.'
0000000000007e80         dd         0x00000010                                  ; Length of the record
0000000000007e84         dd         0x00000174                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007e88         db         0xa8, 0xa7, 2 dup (0xff)                    ; begin 0x2630
0000000000007e8c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2638)
0000000000007e90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e91         align      4
0000000000007e94         dd         0x00000010                                  ; Length of the record
0000000000007e98         dd         0x00000188                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007e9c         db         0xa4, 0xa7, 2 dup (0xff)                    ; begin 0x2640
0000000000007ea0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2648)
0000000000007ea4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ea5         align      8
0000000000007ea8         dd         0x0000002c                                  ; Length of the record
0000000000007eac         dd         0x0000019c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007eb0         db         0xa0, 0xa7, 2 dup (0xff)                    ; begin 0x2650
0000000000007eb4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x26f4)
0000000000007eb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007eb9         db  0x41 ; 'A'
0000000000007eba         db  0x0e ; '.'
0000000000007ebb         db  0x10 ; '.'
0000000000007ebc         db  0x86 ; '.'
0000000000007ebd         db  0x02 ; '.'
0000000000007ebe         db  0x41 ; 'A'
0000000000007ebf         db  0x0e ; '.'
0000000000007ec0         db  0x18 ; '.'
0000000000007ec1         db  0x83 ; '.'
0000000000007ec2         db  0x03 ; '.'
0000000000007ec3         db  0x44 ; 'D'
0000000000007ec4         db  0x0e ; '.'
0000000000007ec5         db  0x20 ; ' '
0000000000007ec6         db  0x7a ; 'z'
0000000000007ec7         db  0x0a ; '.'
0000000000007ec8         db  0x0e ; '.'
0000000000007ec9         db  0x18 ; '.'
0000000000007eca         db  0x41 ; 'A'
0000000000007ecb         db  0x0e ; '.'
0000000000007ecc         db  0x10 ; '.'
0000000000007ecd         db  0x41 ; 'A'
0000000000007ece         db  0x0e ; '.'
0000000000007ecf         db  0x08 ; '.'
0000000000007ed0         db  0x41 ; 'A'
0000000000007ed1         db  0x0b ; '.'
0000000000007ed2         db  0x00 ; '.'
0000000000007ed3         db  0x00 ; '.'
0000000000007ed4         db  0x00 ; '.'
0000000000007ed5         db  0x00 ; '.'
0000000000007ed6         db  0x00 ; '.'
0000000000007ed7         db  0x00 ; '.'
0000000000007ed8         dd         0x0000005c                                  ; Length of the record
0000000000007edc         dd         0x000001cc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007ee0         db         0x20, 0xa8, 2 dup (0xff)                    ; begin 0x2700
0000000000007ee4         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x2787)
0000000000007ee8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ee9         db  0x47 ; 'G'
0000000000007eea         db  0x0e ; '.'
0000000000007eeb         db  0x10 ; '.'
0000000000007eec         db  0x8d ; '.'
0000000000007eed         db  0x02 ; '.'
0000000000007eee         db  0x42 ; 'B'
0000000000007eef         db  0x0e ; '.'
0000000000007ef0         db  0x18 ; '.'
0000000000007ef1         db  0x8c ; '.'
0000000000007ef2         db  0x03 ; '.'
0000000000007ef3         db  0x44 ; 'D'
0000000000007ef4         db  0x0e ; '.'
0000000000007ef5         db  0x20 ; ' '
0000000000007ef6         db  0x86 ; '.'
0000000000007ef7         db  0x04 ; '.'
0000000000007ef8         db  0x41 ; 'A'
0000000000007ef9         db  0x0e ; '.'
0000000000007efa         db  0x28 ; '('
0000000000007efb         db  0x83 ; '.'
0000000000007efc         db  0x05 ; '.'
0000000000007efd         db  0x4f ; 'O'
0000000000007efe         db  0x0e ; '.'
0000000000007eff         db  0x30 ; '0'
0000000000007f00         db  0x7c ; '|'
0000000000007f01         db  0x0a ; '.'
0000000000007f02         db  0x0e ; '.'
0000000000007f03         db  0x28 ; '('
0000000000007f04         db  0x44 ; 'D'
0000000000007f05         db  0xc3 ; '.'
0000000000007f06         db  0x0e ; '.'
0000000000007f07         db  0x20 ; ' '
0000000000007f08         db  0x41 ; 'A'
0000000000007f09         db  0xc6 ; '.'
0000000000007f0a         db  0x0e ; '.'
0000000000007f0b         db  0x18 ; '.'
0000000000007f0c         db  0x42 ; 'B'
0000000000007f0d         db  0xcc ; '.'
0000000000007f0e         db  0x0e ; '.'
0000000000007f0f         db  0x10 ; '.'
0000000000007f10         db  0x42 ; 'B'
0000000000007f11         db  0xcd ; '.'
0000000000007f12         db  0x0e ; '.'
0000000000007f13         db  0x08 ; '.'
0000000000007f14         db  0x4e ; 'N'
0000000000007f15         db  0x0b ; '.'
0000000000007f16         db  0x44 ; 'D'
0000000000007f17         db  0x0e ; '.'
0000000000007f18         db  0x28 ; '('
0000000000007f19         db  0x41 ; 'A'
0000000000007f1a         db  0x0e ; '.'
0000000000007f1b         db  0x20 ; ' '
0000000000007f1c         db  0x41 ; 'A'
0000000000007f1d         db  0x0e ; '.'
0000000000007f1e         db  0x18 ; '.'
0000000000007f1f         db  0x42 ; 'B'
0000000000007f20         db  0x0e ; '.'
0000000000007f21         db  0x10 ; '.'
0000000000007f22         db  0x42 ; 'B'
0000000000007f23         db  0x0e ; '.'
0000000000007f24         db  0x08 ; '.'
0000000000007f25         db  0x46 ; 'F'
0000000000007f26         db  0xc3 ; '.'
0000000000007f27         db  0xc6 ; '.'
0000000000007f28         db  0xcc ; '.'
0000000000007f29         db  0xcd ; '.'
0000000000007f2a         db  0x42 ; 'B'
0000000000007f2b         db  0x0e ; '.'
0000000000007f2c         db  0x30 ; '0'
0000000000007f2d         db  0x83 ; '.'
0000000000007f2e         db  0x05 ; '.'
0000000000007f2f         db  0x86 ; '.'
0000000000007f30         db  0x04 ; '.'
0000000000007f31         db  0x8c ; '.'
0000000000007f32         db  0x03 ; '.'
0000000000007f33         db  0x8d ; '.'
0000000000007f34         db  0x02 ; '.'
0000000000007f35         db  0x00 ; '.'
0000000000007f36         db  0x00 ; '.'
0000000000007f37         db  0x00 ; '.'
0000000000007f38         dd         0x0000001c                                  ; Length of the record
0000000000007f3c         dd         0x0000022c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007f40         db         0x50, 0xa8, 2 dup (0xff)                    ; begin 0x2790
0000000000007f44         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x27e6)
0000000000007f48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f49         db  0x44 ; 'D'
0000000000007f4a         db  0x0e ; '.'
0000000000007f4b         db  0x30 ; '0'
0000000000007f4c         db  0x02 ; '.'
0000000000007f4d         db  0x4c ; 'L'
0000000000007f4e         db  0x0a ; '.'
0000000000007f4f         db  0x0e ; '.'
0000000000007f50         db  0x08 ; '.'
0000000000007f51         db  0x41 ; 'A'
0000000000007f52         db  0x0b ; '.'
0000000000007f53         db  0x00 ; '.'
0000000000007f54         db  0x00 ; '.'
0000000000007f55         db  0x00 ; '.'
0000000000007f56         db  0x00 ; '.'
0000000000007f57         db  0x00 ; '.'
0000000000007f58         dd         0x00000010                                  ; Length of the record
0000000000007f5c         dd         0x0000024c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007f60         db         0x90, 0xa8, 2 dup (0xff)                    ; begin 0x27f0
0000000000007f64         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x2883)
0000000000007f68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f69         align      4
0000000000007f6c         dd         0x00000010                                  ; Length of the record
0000000000007f70         dd         0x00000260                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007f74         db         0x1c, 0xa9, 2 dup (0xff)                    ; begin 0x2890
0000000000007f78         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x28a0)
0000000000007f7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f7d         align      128
0000000000007f80         dd         0x00000010                                  ; Length of the record
0000000000007f84         dd         0x00000274                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007f88         db         0x18, 0xa9, 2 dup (0xff)                    ; begin 0x28a0
0000000000007f8c         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x28a7)
0000000000007f90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f91         align      4
0000000000007f94         dd         0x00000018                                  ; Length of the record
0000000000007f98         dd         0x00000288                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007f9c         db         0x14, 0xa9, 2 dup (0xff)                    ; begin 0x28b0
0000000000007fa0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x28d2)
0000000000007fa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fa5         db  0x41 ; 'A'
0000000000007fa6         db  0x0e ; '.'
0000000000007fa7         db  0x10 ; '.'
0000000000007fa8         db  0x83 ; '.'
0000000000007fa9         db  0x02 ; '.'
0000000000007faa         db  0x5b ; '['
0000000000007fab         db  0x0a ; '.'
0000000000007fac         db  0x0e ; '.'
0000000000007fad         db  0x08 ; '.'
0000000000007fae         db  0x41 ; 'A'
0000000000007faf         db  0x0b ; '.'
0000000000007fb0         dd         0x0000005c                                  ; Length of the record
0000000000007fb4         dd         0x000002a4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000007fb8         db         0x28, 0xa9, 2 dup (0xff)                    ; begin 0x28e0
0000000000007fbc         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x29fe)
0000000000007fc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fc1         db  0x42 ; 'B'
0000000000007fc2         db  0x0e ; '.'
0000000000007fc3         db  0x10 ; '.'
0000000000007fc4         db  0x8e ; '.'
0000000000007fc5         db  0x02 ; '.'
0000000000007fc6         db  0x42 ; 'B'
0000000000007fc7         db  0x0e ; '.'
0000000000007fc8         db  0x18 ; '.'
0000000000007fc9         db  0x8d ; '.'
0000000000007fca         db  0x03 ; '.'
0000000000007fcb         db  0x45 ; 'E'
0000000000007fcc         db  0x0e ; '.'
0000000000007fcd         db  0x20 ; ' '
0000000000007fce         db  0x8c ; '.'
0000000000007fcf         db  0x04 ; '.'
0000000000007fd0         db  0x41 ; 'A'
0000000000007fd1         db  0x0e ; '.'
0000000000007fd2         db  0x28 ; '('
0000000000007fd3         db  0x86 ; '.'
0000000000007fd4         db  0x05 ; '.'
0000000000007fd5         db  0x44 ; 'D'
0000000000007fd6         db  0x0e ; '.'
0000000000007fd7         db  0x30 ; '0'
0000000000007fd8         db  0x83 ; '.'
0000000000007fd9         db  0x06 ; '.'
0000000000007fda         db  0x02 ; '.'
0000000000007fdb         db  0xa1 ; '.'
0000000000007fdc         db  0x0a ; '.'
0000000000007fdd         db  0x0e ; '.'
0000000000007fde         db  0x28 ; '('
0000000000007fdf         db  0x44 ; 'D'
0000000000007fe0         db  0x0e ; '.'
0000000000007fe1         db  0x20 ; ' '
0000000000007fe2         db  0x42 ; 'B'
0000000000007fe3         db  0x0e ; '.'
0000000000007fe4         db  0x18 ; '.'
0000000000007fe5         db  0x42 ; 'B'
0000000000007fe6         db  0x0e ; '.'
0000000000007fe7         db  0x10 ; '.'
0000000000007fe8         db  0x42 ; 'B'
0000000000007fe9         db  0x0e ; '.'
0000000000007fea         db  0x08 ; '.'
0000000000007feb         db  0x47 ; 'G'
0000000000007fec         db  0x0b ; '.'
0000000000007fed         db  0x71 ; 'q'
0000000000007fee         db  0x0a ; '.'
0000000000007fef         db  0x0e ; '.'
0000000000007ff0         db  0x28 ; '('
0000000000007ff1         db  0x41 ; 'A'
0000000000007ff2         db  0x0e ; '.'
0000000000007ff3         db  0x20 ; ' '
0000000000007ff4         db  0x42 ; 'B'
0000000000007ff5         db  0x0e ; '.'
0000000000007ff6         db  0x18 ; '.'
0000000000007ff7         db  0x42 ; 'B'
0000000000007ff8         db  0x0e ; '.'
0000000000007ff9         db  0x10 ; '.'
0000000000007ffa         db  0x42 ; 'B'
0000000000007ffb         db  0x0e ; '.'
0000000000007ffc         db  0x08 ; '.'
0000000000007ffd         db  0x48 ; 'H'
0000000000007ffe         db  0x0b ; '.'
0000000000007fff         db  0x53 ; 'S'
0000000000008000         db  0x0e ; '.'
0000000000008001         db  0x28 ; '('
0000000000008002         db  0x44 ; 'D'
0000000000008003         db  0x0e ; '.'
0000000000008004         db  0x20 ; ' '
0000000000008005         db  0x42 ; 'B'
0000000000008006         db  0x0e ; '.'
0000000000008007         db  0x18 ; '.'
0000000000008008         db  0x42 ; 'B'
0000000000008009         db  0x0e ; '.'
000000000000800a         db  0x10 ; '.'
000000000000800b         db  0x42 ; 'B'
000000000000800c         db  0x0e ; '.'
000000000000800d         db  0x08 ; '.'
000000000000800e         db  0x00 ; '.'
000000000000800f         db  0x00 ; '.'
0000000000008010         dd         0x00000010                                  ; Length of the record
0000000000008014         dd         0x00000304                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008018         db         0xe8, 0xa9, 2 dup (0xff)                    ; begin 0x2a00
000000000000801c         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x2a77)
0000000000008020         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008021         align      4
0000000000008024         dd         0x0000005c                                  ; Length of the record
0000000000008028         dd         0x00000318                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000802c         db         0x54, 0xaa, 2 dup (0xff)                    ; begin 0x2a80
0000000000008030         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x2bc0)
0000000000008034         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008035         db  0x42 ; 'B'
0000000000008036         db  0x0e ; '.'
0000000000008037         db  0x10 ; '.'
0000000000008038         db  0x8f ; '.'
0000000000008039         db  0x02 ; '.'
000000000000803a         db  0x42 ; 'B'
000000000000803b         db  0x0e ; '.'
000000000000803c         db  0x18 ; '.'
000000000000803d         db  0x8e ; '.'
000000000000803e         db  0x03 ; '.'
000000000000803f         db  0x42 ; 'B'
0000000000008040         db  0x0e ; '.'
0000000000008041         db  0x20 ; ' '
0000000000008042         db  0x8d ; '.'
0000000000008043         db  0x04 ; '.'
0000000000008044         db  0x42 ; 'B'
0000000000008045         db  0x0e ; '.'
0000000000008046         db  0x28 ; '('
0000000000008047         db  0x8c ; '.'
0000000000008048         db  0x05 ; '.'
0000000000008049         db  0x41 ; 'A'
000000000000804a         db  0x0e ; '.'
000000000000804b         db  0x30 ; '0'
000000000000804c         db  0x86 ; '.'
000000000000804d         db  0x06 ; '.'
000000000000804e         db  0x41 ; 'A'
000000000000804f         db  0x0e ; '.'
0000000000008050         db  0x38 ; '8'
0000000000008051         db  0x83 ; '.'
0000000000008052         db  0x07 ; '.'
0000000000008053         db  0x44 ; 'D'
0000000000008054         db  0x0e ; '.'
0000000000008055         db  0x40 ; '@'
0000000000008056         db  0x02 ; '.'
0000000000008057         db  0xee ; '.'
0000000000008058         db  0x0a ; '.'
0000000000008059         db  0x0e ; '.'
000000000000805a         db  0x38 ; '8'
000000000000805b         db  0x46 ; 'F'
000000000000805c         db  0x0e ; '.'
000000000000805d         db  0x30 ; '0'
000000000000805e         db  0x41 ; 'A'
000000000000805f         db  0x0e ; '.'
0000000000008060         db  0x28 ; '('
0000000000008061         db  0x42 ; 'B'
0000000000008062         db  0x0e ; '.'
0000000000008063         db  0x20 ; ' '
0000000000008064         db  0x42 ; 'B'
0000000000008065         db  0x0e ; '.'
0000000000008066         db  0x18 ; '.'
0000000000008067         db  0x42 ; 'B'
0000000000008068         db  0x0e ; '.'
0000000000008069         db  0x10 ; '.'
000000000000806a         db  0x42 ; 'B'
000000000000806b         db  0x0e ; '.'
000000000000806c         db  0x08 ; '.'
000000000000806d         db  0x45 ; 'E'
000000000000806e         db  0x0b ; '.'
000000000000806f         db  0x63 ; 'c'
0000000000008070         db  0x0e ; '.'
0000000000008071         db  0x38 ; '8'
0000000000008072         db  0x43 ; 'C'
0000000000008073         db  0x0e ; '.'
0000000000008074         db  0x30 ; '0'
0000000000008075         db  0x41 ; 'A'
0000000000008076         db  0x0e ; '.'
0000000000008077         db  0x28 ; '('
0000000000008078         db  0x42 ; 'B'
0000000000008079         db  0x0e ; '.'
000000000000807a         db  0x20 ; ' '
000000000000807b         db  0x42 ; 'B'
000000000000807c         db  0x0e ; '.'
000000000000807d         db  0x18 ; '.'
000000000000807e         db  0x42 ; 'B'
000000000000807f         db  0x0e ; '.'
0000000000008080         db  0x10 ; '.'
0000000000008081         db  0x42 ; 'B'
0000000000008082         db  0x0e ; '.'
0000000000008083         db  0x08 ; '.'
0000000000008084         dd         0x00000010                                  ; Length of the record
0000000000008088         dd         0x00000378                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000808c         db         0x34, 0xab, 2 dup (0xff)                    ; begin 0x2bc0
0000000000008090         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2bc5)
0000000000008094         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008095         align      8
0000000000008098         dd         0x00000010                                  ; Length of the record
000000000000809c         dd         0x0000038c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000080a0         db         0x30, 0xab, 2 dup (0xff)                    ; begin 0x2bd0
00000000000080a4         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2bd5)
00000000000080a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080a9         align      4
00000000000080ac         dd         0x00000010                                  ; Length of the record
00000000000080b0         dd         0x000003a0                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000080b4         db         0x2c, 0xab, 2 dup (0xff)                    ; begin 0x2be0
00000000000080b8         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2be5)
00000000000080bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080bd         align      64
00000000000080c0         dd         0x00000010                                  ; Length of the record
00000000000080c4         dd         0x000003b4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000080c8         db         0x28, 0xab, 2 dup (0xff)                    ; begin 0x2bf0
00000000000080cc         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x2c39)
00000000000080d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d1         align      4
00000000000080d4         dd         0x00000010                                  ; Length of the record
00000000000080d8         dd         0x000003c8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000080dc         db         0x64, 0xab, 2 dup (0xff)                    ; begin 0x2c40
00000000000080e0         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x2c98)
00000000000080e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080e5         align      8
00000000000080e8         dd         0x00000038                                  ; Length of the record
00000000000080ec         dd         0x000003dc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000080f0         db         0xb0, 0xab, 2 dup (0xff)                    ; begin 0x2ca0
00000000000080f4         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x2de7)
00000000000080f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080f9         db  0x42 ; 'B'
00000000000080fa         db  0x0e ; '.'
00000000000080fb         db  0x10 ; '.'
00000000000080fc         db  0x8d ; '.'
00000000000080fd         db  0x02 ; '.'
00000000000080fe         db  0x42 ; 'B'
00000000000080ff         db  0x0e ; '.'
0000000000008100         db  0x18 ; '.'
0000000000008101         db  0x8c ; '.'
0000000000008102         db  0x03 ; '.'
0000000000008103         db  0x44 ; 'D'
0000000000008104         db  0x0e ; '.'
0000000000008105         db  0x20 ; ' '
0000000000008106         db  0x86 ; '.'
0000000000008107         db  0x04 ; '.'
0000000000008108         db  0x41 ; 'A'
0000000000008109         db  0x0e ; '.'
000000000000810a         db  0x28 ; '('
000000000000810b         db  0x83 ; '.'
000000000000810c         db  0x05 ; '.'
000000000000810d         db  0x46 ; 'F'
000000000000810e         db  0x0e ; '.'
000000000000810f         db  0x30 ; '0'
0000000000008110         db  0x02 ; '.'
0000000000008111         db  0xcd ; '.'
0000000000008112         db  0x0a ; '.'
0000000000008113         db  0x0e ; '.'
0000000000008114         db  0x28 ; '('
0000000000008115         db  0x47 ; 'G'
0000000000008116         db  0x0e ; '.'
0000000000008117         db  0x20 ; ' '
0000000000008118         db  0x41 ; 'A'
0000000000008119         db  0x0e ; '.'
000000000000811a         db  0x18 ; '.'
000000000000811b         db  0x42 ; 'B'
000000000000811c         db  0x0e ; '.'
000000000000811d         db  0x10 ; '.'
000000000000811e         db  0x42 ; 'B'
000000000000811f         db  0x0e ; '.'
0000000000008120         db  0x08 ; '.'
0000000000008121         db  0x58 ; 'X'
0000000000008122         db  0x0b ; '.'
0000000000008123         db  0x00 ; '.'
0000000000008124         dd         0x00000034                                  ; Length of the record
0000000000008128         dd         0x00000418                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000812c         db         0xc4, 0xac, 2 dup (0xff)                    ; begin 0x2df0
0000000000008130         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x2e4b)
0000000000008134         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008135         db  0x42 ; 'B'
0000000000008136         db  0x0e ; '.'
0000000000008137         db  0x10 ; '.'
0000000000008138         db  0x8c ; '.'
0000000000008139         db  0x02 ; '.'
000000000000813a         db  0x41 ; 'A'
000000000000813b         db  0x0e ; '.'
000000000000813c         db  0x18 ; '.'
000000000000813d         db  0x86 ; '.'
000000000000813e         db  0x03 ; '.'
000000000000813f         db  0x44 ; 'D'
0000000000008140         db  0x0e ; '.'
0000000000008141         db  0x20 ; ' '
0000000000008142         db  0x83 ; '.'
0000000000008143         db  0x04 ; '.'
0000000000008144         db  0x79 ; 'y'
0000000000008145         db  0x0a ; '.'
0000000000008146         db  0x0e ; '.'
0000000000008147         db  0x18 ; '.'
0000000000008148         db  0x44 ; 'D'
0000000000008149         db  0x0e ; '.'
000000000000814a         db  0x10 ; '.'
000000000000814b         db  0x42 ; 'B'
000000000000814c         db  0x0e ; '.'
000000000000814d         db  0x08 ; '.'
000000000000814e         db  0x4a ; 'J'
000000000000814f         db  0x0b ; '.'
0000000000008150         db  0x44 ; 'D'
0000000000008151         db  0x0e ; '.'
0000000000008152         db  0x18 ; '.'
0000000000008153         db  0x41 ; 'A'
0000000000008154         db  0x0e ; '.'
0000000000008155         db  0x10 ; '.'
0000000000008156         db  0x45 ; 'E'
0000000000008157         db  0x0e ; '.'
0000000000008158         db  0x08 ; '.'
0000000000008159         db  0x00 ; '.'
000000000000815a         db  0x00 ; '.'
000000000000815b         db  0x00 ; '.'
000000000000815c         dd         0x00000010                                  ; Length of the record
0000000000008160         dd         0x00000450                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008164         db         0xec, 0xac, 2 dup (0xff)                    ; begin 0x2e50
0000000000008168         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x2e91)
000000000000816c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000816d         db  0x7c ; '|'
000000000000816e         db  0x0e ; '.'
000000000000816f         db  0x10 ; '.'
0000000000008170         dd         0x00000030                                  ; Length of the record
0000000000008174         dd         0x00000464                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008178         db         0x28, 0xad, 2 dup (0xff)                    ; begin 0x2ea0
000000000000817c         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x2f12)
0000000000008180         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008181         db  0x41 ; 'A'
0000000000008182         db  0x0e ; '.'
0000000000008183         db  0x10 ; '.'
0000000000008184         db  0x86 ; '.'
0000000000008185         db  0x02 ; '.'
0000000000008186         db  0x41 ; 'A'
0000000000008187         db  0x0e ; '.'
0000000000008188         db  0x18 ; '.'
0000000000008189         db  0x83 ; '.'
000000000000818a         db  0x03 ; '.'
000000000000818b         db  0x4a ; 'J'
000000000000818c         db  0x0e ; '.'
000000000000818d         db  0x20 ; ' '
000000000000818e         db  0x02 ; '.'
000000000000818f         db  0x53 ; 'S'
0000000000008190         db  0x0a ; '.'
0000000000008191         db  0x0e ; '.'
0000000000008192         db  0x18 ; '.'
0000000000008193         db  0x41 ; 'A'
0000000000008194         db  0x0e ; '.'
0000000000008195         db  0x10 ; '.'
0000000000008196         db  0x41 ; 'A'
0000000000008197         db  0x0e ; '.'
0000000000008198         db  0x08 ; '.'
0000000000008199         db  0x47 ; 'G'
000000000000819a         db  0x0b ; '.'
000000000000819b         db  0x47 ; 'G'
000000000000819c         db  0x0e ; '.'
000000000000819d         db  0x18 ; '.'
000000000000819e         db  0x41 ; 'A'
000000000000819f         db  0x0e ; '.'
00000000000081a0         db  0x10 ; '.'
00000000000081a1         db  0x41 ; 'A'
00000000000081a2         db  0x0e ; '.'
00000000000081a3         db  0x08 ; '.'
00000000000081a4         dd         0x00000010                                  ; Length of the record
00000000000081a8         dd         0x00000498                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000081ac         db         0x74, 0xad, 2 dup (0xff)                    ; begin 0x2f20
00000000000081b0         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x2f85)
00000000000081b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081b5         align      8
00000000000081b8         dd         0x00000048                                  ; Length of the record
00000000000081bc         dd         0x000004ac                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000081c0         db         0xd0, 0xad, 2 dup (0xff)                    ; begin 0x2f90
00000000000081c4         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x2ffa)
00000000000081c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081c9         db  0x42 ; 'B'
00000000000081ca         db  0x0e ; '.'
00000000000081cb         db  0x10 ; '.'
00000000000081cc         db  0x8f ; '.'
00000000000081cd         db  0x02 ; '.'
00000000000081ce         db  0x42 ; 'B'
00000000000081cf         db  0x0e ; '.'
00000000000081d0         db  0x18 ; '.'
00000000000081d1         db  0x8e ; '.'
00000000000081d2         db  0x03 ; '.'
00000000000081d3         db  0x42 ; 'B'
00000000000081d4         db  0x0e ; '.'
00000000000081d5         db  0x20 ; ' '
00000000000081d6         db  0x8d ; '.'
00000000000081d7         db  0x04 ; '.'
00000000000081d8         db  0x42 ; 'B'
00000000000081d9         db  0x0e ; '.'
00000000000081da         db  0x28 ; '('
00000000000081db         db  0x8c ; '.'
00000000000081dc         db  0x05 ; '.'
00000000000081dd         db  0x41 ; 'A'
00000000000081de         db  0x0e ; '.'
00000000000081df         db  0x30 ; '0'
00000000000081e0         db  0x86 ; '.'
00000000000081e1         db  0x06 ; '.'
00000000000081e2         db  0x41 ; 'A'
00000000000081e3         db  0x0e ; '.'
00000000000081e4         db  0x38 ; '8'
00000000000081e5         db  0x83 ; '.'
00000000000081e6         db  0x07 ; '.'
00000000000081e7         db  0x44 ; 'D'
00000000000081e8         db  0x0e ; '.'
00000000000081e9         db  0x40 ; '@'
00000000000081ea         db  0x02 ; '.'
00000000000081eb         db  0x4a ; 'J'
00000000000081ec         db  0x0a ; '.'
00000000000081ed         db  0x0e ; '.'
00000000000081ee         db  0x38 ; '8'
00000000000081ef         db  0x44 ; 'D'
00000000000081f0         db  0x0e ; '.'
00000000000081f1         db  0x30 ; '0'
00000000000081f2         db  0x41 ; 'A'
00000000000081f3         db  0x0e ; '.'
00000000000081f4         db  0x28 ; '('
00000000000081f5         db  0x42 ; 'B'
00000000000081f6         db  0x0e ; '.'
00000000000081f7         db  0x20 ; ' '
00000000000081f8         db  0x42 ; 'B'
00000000000081f9         db  0x0e ; '.'
00000000000081fa         db  0x18 ; '.'
00000000000081fb         db  0x42 ; 'B'
00000000000081fc         db  0x0e ; '.'
00000000000081fd         db  0x10 ; '.'
00000000000081fe         db  0x42 ; 'B'
00000000000081ff         db  0x0e ; '.'
0000000000008200         db  0x08 ; '.'
0000000000008201         db  0x41 ; 'A'
0000000000008202         db  0x0b ; '.'
0000000000008203         db  0x00 ; '.'
0000000000008204         dd         0x00000010                                  ; Length of the record
0000000000008208         dd         0x000004f8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000820c         db         0xf4, 0xad, 2 dup (0xff)                    ; begin 0x3000
0000000000008210         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x3031)
0000000000008214         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008215         align      8
0000000000008218         dd         0x00000010                                  ; Length of the record
000000000000821c         dd         0x0000050c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008220         db         0x20, 0xae, 2 dup (0xff)                    ; begin 0x3040
0000000000008224         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x3060)
0000000000008228         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008229         align      4
000000000000822c         dd         0x00000048                                  ; Length of the record
0000000000008230         dd         0x00000520                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008234         db         0x2c, 0xae, 2 dup (0xff)                    ; begin 0x3060
0000000000008238         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x3214)
000000000000823c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000823d         db  0x42 ; 'B'
000000000000823e         db  0x0e ; '.'
000000000000823f         db  0x10 ; '.'
0000000000008240         db  0x8f ; '.'
0000000000008241         db  0x02 ; '.'
0000000000008242         db  0x42 ; 'B'
0000000000008243         db  0x0e ; '.'
0000000000008244         db  0x18 ; '.'
0000000000008245         db  0x8e ; '.'
0000000000008246         db  0x03 ; '.'
0000000000008247         db  0x49 ; 'I'
0000000000008248         db  0x0e ; '.'
0000000000008249         db  0x20 ; ' '
000000000000824a         db  0x8d ; '.'
000000000000824b         db  0x04 ; '.'
000000000000824c         db  0x42 ; 'B'
000000000000824d         db  0x0e ; '.'
000000000000824e         db  0x28 ; '('
000000000000824f         db  0x8c ; '.'
0000000000008250         db  0x05 ; '.'
0000000000008251         db  0x44 ; 'D'
0000000000008252         db  0x0e ; '.'
0000000000008253         db  0x30 ; '0'
0000000000008254         db  0x86 ; '.'
0000000000008255         db  0x06 ; '.'
0000000000008256         db  0x41 ; 'A'
0000000000008257         db  0x0e ; '.'
0000000000008258         db  0x38 ; '8'
0000000000008259         db  0x83 ; '.'
000000000000825a         db  0x07 ; '.'
000000000000825b         db  0x52 ; 'R'
000000000000825c         db  0x0e ; '.'
000000000000825d         db  0x40 ; '@'
000000000000825e         db  0x02 ; '.'
000000000000825f         db  0xd8 ; '.'
0000000000008260         db  0x0a ; '.'
0000000000008261         db  0x0e ; '.'
0000000000008262         db  0x38 ; '8'
0000000000008263         db  0x44 ; 'D'
0000000000008264         db  0x0e ; '.'
0000000000008265         db  0x30 ; '0'
0000000000008266         db  0x41 ; 'A'
0000000000008267         db  0x0e ; '.'
0000000000008268         db  0x28 ; '('
0000000000008269         db  0x42 ; 'B'
000000000000826a         db  0x0e ; '.'
000000000000826b         db  0x20 ; ' '
000000000000826c         db  0x42 ; 'B'
000000000000826d         db  0x0e ; '.'
000000000000826e         db  0x18 ; '.'
000000000000826f         db  0x42 ; 'B'
0000000000008270         db  0x0e ; '.'
0000000000008271         db  0x10 ; '.'
0000000000008272         db  0x42 ; 'B'
0000000000008273         db  0x0e ; '.'
0000000000008274         db  0x08 ; '.'
0000000000008275         db  0x45 ; 'E'
0000000000008276         db  0x0b ; '.'
0000000000008277         db  0x00 ; '.'
0000000000008278         dd         0x00000028                                  ; Length of the record
000000000000827c         dd         0x0000056c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008280         db         0xa0, 0xaf, 2 dup (0xff)                    ; begin 0x3220
0000000000008284         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x32b0)
0000000000008288         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008289         db  0x42 ; 'B'
000000000000828a         db  0x0e ; '.'
000000000000828b         db  0x10 ; '.'
000000000000828c         db  0x8c ; '.'
000000000000828d         db  0x02 ; '.'
000000000000828e         db  0x41 ; 'A'
000000000000828f         db  0x0e ; '.'
0000000000008290         db  0x18 ; '.'
0000000000008291         db  0x86 ; '.'
0000000000008292         db  0x03 ; '.'
0000000000008293         db  0x44 ; 'D'
0000000000008294         db  0x0e ; '.'
0000000000008295         db  0x20 ; ' '
0000000000008296         db  0x83 ; '.'
0000000000008297         db  0x04 ; '.'
0000000000008298         db  0x02 ; '.'
0000000000008299         db  0x85 ; '.'
000000000000829a         db  0x0e ; '.'
000000000000829b         db  0x18 ; '.'
000000000000829c         db  0x41 ; 'A'
000000000000829d         db  0x0e ; '.'
000000000000829e         db  0x10 ; '.'
000000000000829f         db  0x42 ; 'B'
00000000000082a0         db  0x0e ; '.'
00000000000082a1         db  0x08 ; '.'
00000000000082a2         db  0x00 ; '.'
00000000000082a3         db  0x00 ; '.'
00000000000082a4         dd         0x00000028                                  ; Length of the record
00000000000082a8         dd         0x00000598                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000082ac         db         0x04, 0xb0, 2 dup (0xff)                    ; begin 0x32b0
00000000000082b0         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x3386)
00000000000082b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082b5         db  0x42 ; 'B'
00000000000082b6         db  0x0e ; '.'
00000000000082b7         db  0x10 ; '.'
00000000000082b8         db  0x8c ; '.'
00000000000082b9         db  0x02 ; '.'
00000000000082ba         db  0x41 ; 'A'
00000000000082bb         db  0x0e ; '.'
00000000000082bc         db  0x18 ; '.'
00000000000082bd         db  0x86 ; '.'
00000000000082be         db  0x03 ; '.'
00000000000082bf         db  0x44 ; 'D'
00000000000082c0         db  0x0e ; '.'
00000000000082c1         db  0x20 ; ' '
00000000000082c2         db  0x83 ; '.'
00000000000082c3         db  0x04 ; '.'
00000000000082c4         db  0x02 ; '.'
00000000000082c5         db  0xc4 ; '.'
00000000000082c6         db  0x0e ; '.'
00000000000082c7         db  0x18 ; '.'
00000000000082c8         db  0x44 ; 'D'
00000000000082c9         db  0x0e ; '.'
00000000000082ca         db  0x10 ; '.'
00000000000082cb         db  0x42 ; 'B'
00000000000082cc         db  0x0e ; '.'
00000000000082cd         db  0x08 ; '.'
00000000000082ce         db  0x00 ; '.'
00000000000082cf         db  0x00 ; '.'
00000000000082d0         dd         0x00000034                                  ; Length of the record
00000000000082d4         dd         0x000005c4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000082d8         db         0xb8, 0xb0, 2 dup (0xff)                    ; begin 0x3390
00000000000082dc         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x35ce)
00000000000082e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e1         db  0x42 ; 'B'
00000000000082e2         db  0x0e ; '.'
00000000000082e3         db  0x10 ; '.'
00000000000082e4         db  0x8c ; '.'
00000000000082e5         db  0x02 ; '.'
00000000000082e6         db  0x41 ; 'A'
00000000000082e7         db  0x0e ; '.'
00000000000082e8         db  0x18 ; '.'
00000000000082e9         db  0x86 ; '.'
00000000000082ea         db  0x03 ; '.'
00000000000082eb         db  0x44 ; 'D'
00000000000082ec         db  0x0e ; '.'
00000000000082ed         db  0x20 ; ' '
00000000000082ee         db  0x83 ; '.'
00000000000082ef         db  0x04 ; '.'
00000000000082f0         db  0x44 ; 'D'
00000000000082f1         db  0x0e ; '.'
00000000000082f2         db  0x80 ; '.'
00000000000082f3         db  0x01 ; '.'
00000000000082f4         db  0x03 ; '.'
00000000000082f5         db  0x91 ; '.'
00000000000082f6         db  0x01 ; '.'
00000000000082f7         db  0x0a ; '.'
00000000000082f8         db  0x0e ; '.'
00000000000082f9         db  0x20 ; ' '
00000000000082fa         db  0x41 ; 'A'
00000000000082fb         db  0x0e ; '.'
00000000000082fc         db  0x18 ; '.'
00000000000082fd         db  0x41 ; 'A'
00000000000082fe         db  0x0e ; '.'
00000000000082ff         db  0x10 ; '.'
0000000000008300         db  0x42 ; 'B'
0000000000008301         db  0x0e ; '.'
0000000000008302         db  0x08 ; '.'
0000000000008303         db  0x48 ; 'H'
0000000000008304         db  0x0b ; '.'
0000000000008305         db  0x00 ; '.'
0000000000008306         db  0x00 ; '.'
0000000000008307         db  0x00 ; '.'
0000000000008308         dd         0x00000038                                  ; Length of the record
000000000000830c         dd         0x000005fc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008310         db         0xc0, 0xb2, 2 dup (0xff)                    ; begin 0x35d0
0000000000008314         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x3854)
0000000000008318         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008319         db  0x42 ; 'B'
000000000000831a         db  0x0e ; '.'
000000000000831b         db  0x10 ; '.'
000000000000831c         db  0x8d ; '.'
000000000000831d         db  0x02 ; '.'
000000000000831e         db  0x42 ; 'B'
000000000000831f         db  0x0e ; '.'
0000000000008320         db  0x18 ; '.'
0000000000008321         db  0x8c ; '.'
0000000000008322         db  0x03 ; '.'
0000000000008323         db  0x41 ; 'A'
0000000000008324         db  0x0e ; '.'
0000000000008325         db  0x20 ; ' '
0000000000008326         db  0x86 ; '.'
0000000000008327         db  0x04 ; '.'
0000000000008328         db  0x41 ; 'A'
0000000000008329         db  0x0e ; '.'
000000000000832a         db  0x28 ; '('
000000000000832b         db  0x83 ; '.'
000000000000832c         db  0x05 ; '.'
000000000000832d         db  0x44 ; 'D'
000000000000832e         db  0x0e ; '.'
000000000000832f         db  0x40 ; '@'
0000000000008330         db  0x02 ; '.'
0000000000008331         db  0x5a ; 'Z'
0000000000008332         db  0x0a ; '.'
0000000000008333         db  0x0e ; '.'
0000000000008334         db  0x28 ; '('
0000000000008335         db  0x41 ; 'A'
0000000000008336         db  0x0e ; '.'
0000000000008337         db  0x20 ; ' '
0000000000008338         db  0x41 ; 'A'
0000000000008339         db  0x0e ; '.'
000000000000833a         db  0x18 ; '.'
000000000000833b         db  0x42 ; 'B'
000000000000833c         db  0x0e ; '.'
000000000000833d         db  0x10 ; '.'
000000000000833e         db  0x42 ; 'B'
000000000000833f         db  0x0e ; '.'
0000000000008340         db  0x08 ; '.'
0000000000008341         db  0x46 ; 'F'
0000000000008342         db  0x0b ; '.'
0000000000008343         db  0x00 ; '.'
0000000000008344         dd         0x00000020                                  ; Length of the record
0000000000008348         dd         0x00000638                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000834c         db         0x14, 0xb5, 2 dup (0xff)                    ; begin 0x3860
0000000000008350         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x38b9)
0000000000008354         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008355         db  0x41 ; 'A'
0000000000008356         db  0x0e ; '.'
0000000000008357         db  0x10 ; '.'
0000000000008358         db  0x83 ; '.'
0000000000008359         db  0x02 ; '.'
000000000000835a         db  0x47 ; 'G'
000000000000835b         db  0x0e ; '.'
000000000000835c         db  0x20 ; ' '
000000000000835d         db  0x7c ; '|'
000000000000835e         db  0x0a ; '.'
000000000000835f         db  0x0e ; '.'
0000000000008360         db  0x10 ; '.'
0000000000008361         db  0x41 ; 'A'
0000000000008362         db  0x0e ; '.'
0000000000008363         db  0x08 ; '.'
0000000000008364         db  0x4b ; 'K'
0000000000008365         db  0x0b ; '.'
0000000000008366         db  0x00 ; '.'
0000000000008367         db  0x00 ; '.'
0000000000008368         dd         0x00000034                                  ; Length of the record
000000000000836c         dd         0x0000065c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008370         db         0x50, 0xb5, 2 dup (0xff)                    ; begin 0x38c0
0000000000008374         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x3ac3)
0000000000008378         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008379         db  0x42 ; 'B'
000000000000837a         db  0x0e ; '.'
000000000000837b         db  0x10 ; '.'
000000000000837c         db  0x8c ; '.'
000000000000837d         db  0x02 ; '.'
000000000000837e         db  0x41 ; 'A'
000000000000837f         db  0x0e ; '.'
0000000000008380         db  0x18 ; '.'
0000000000008381         db  0x86 ; '.'
0000000000008382         db  0x03 ; '.'
0000000000008383         db  0x46 ; 'F'
0000000000008384         db  0x0e ; '.'
0000000000008385         db  0x20 ; ' '
0000000000008386         db  0x83 ; '.'
0000000000008387         db  0x04 ; '.'
0000000000008388         db  0x47 ; 'G'
0000000000008389         db  0x0e ; '.'
000000000000838a         db  0x30 ; '0'
000000000000838b         db  0x02 ; '.'
000000000000838c         db  0x4a ; 'J'
000000000000838d         db  0x0a ; '.'
000000000000838e         db  0x0e ; '.'
000000000000838f         db  0x20 ; ' '
0000000000008390         db  0x41 ; 'A'
0000000000008391         db  0x0e ; '.'
0000000000008392         db  0x18 ; '.'
0000000000008393         db  0x41 ; 'A'
0000000000008394         db  0x0e ; '.'
0000000000008395         db  0x10 ; '.'
0000000000008396         db  0x42 ; 'B'
0000000000008397         db  0x0e ; '.'
0000000000008398         db  0x08 ; '.'
0000000000008399         db  0x42 ; 'B'
000000000000839a         db  0x0b ; '.'
000000000000839b         db  0x00 ; '.'
000000000000839c         db  0x00 ; '.'
000000000000839d         db  0x00 ; '.'
000000000000839e         db  0x00 ; '.'
000000000000839f         db  0x00 ; '.'
00000000000083a0         dd         0x00000024                                  ; Length of the record
00000000000083a4         dd         0x00000694                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000083a8         db         0x28, 0xb7, 2 dup (0xff)                    ; begin 0x3ad0
00000000000083ac         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x3af7)
00000000000083b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083b1         db  0x41 ; 'A'
00000000000083b2         db  0x0e ; '.'
00000000000083b3         db  0x10 ; '.'
00000000000083b4         db  0x86 ; '.'
00000000000083b5         db  0x02 ; '.'
00000000000083b6         db  0x41 ; 'A'
00000000000083b7         db  0x0e ; '.'
00000000000083b8         db  0x18 ; '.'
00000000000083b9         db  0x83 ; '.'
00000000000083ba         db  0x03 ; '.'
00000000000083bb         db  0x4a ; 'J'
00000000000083bc         db  0x0e ; '.'
00000000000083bd         db  0x20 ; ' '
00000000000083be         db  0x52 ; 'R'
00000000000083bf         db  0x0e ; '.'
00000000000083c0         db  0x18 ; '.'
00000000000083c1         db  0x44 ; 'D'
00000000000083c2         db  0x0e ; '.'
00000000000083c3         db  0x10 ; '.'
00000000000083c4         db  0x41 ; 'A'
00000000000083c5         db  0x0e ; '.'
00000000000083c6         db  0x08 ; '.'
00000000000083c7         db  0x00 ; '.'
00000000000083c8         dd         0x00000010                                  ; Length of the record
00000000000083cc         dd         0x000006bc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000083d0         db         0x30, 0xb7, 2 dup (0xff)                    ; begin 0x3b00
00000000000083d4         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x3b0d)
00000000000083d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083d9         align      4
00000000000083dc         dd         0x00000014                                  ; Length of the record
00000000000083e0         dd         0x000006d0                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000083e4         db         0x2c, 0xb7, 2 dup (0xff)                    ; begin 0x3b10
00000000000083e8         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x3b3e)
00000000000083ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083ed         db  0x5e ; '^'
00000000000083ee         db  0x0e ; '.'
00000000000083ef         db  0x10 ; '.'
00000000000083f0         db  0x4f ; 'O'
00000000000083f1         db  0x0e ; '.'
00000000000083f2         db  0x08 ; '.'
00000000000083f3         db  0x00 ; '.'
00000000000083f4         dd         0x00000014                                  ; Length of the record
00000000000083f8         dd         0x000006e8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000083fc         db         0x44, 0xb7, 2 dup (0xff)                    ; begin 0x3b40
0000000000008400         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x3b73)
0000000000008404         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008405         db  0x5e ; '^'
0000000000008406         db  0x0e ; '.'
0000000000008407         db  0x10 ; '.'
0000000000008408         db  0x54 ; 'T'
0000000000008409         db  0x0e ; '.'
000000000000840a         db  0x08 ; '.'
000000000000840b         db  0x00 ; '.'
000000000000840c         dd         0x00000018                                  ; Length of the record
0000000000008410         dd         0x00000700                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008414         db         0x6c, 0xb7, 2 dup (0xff)                    ; begin 0x3b80
0000000000008418         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3b95)
000000000000841c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000841d         db  0x41 ; 'A'
000000000000841e         db  0x0e ; '.'
000000000000841f         db  0x10 ; '.'
0000000000008420         db  0x83 ; '.'
0000000000008421         db  0x02 ; '.'
0000000000008422         db  0x4f ; 'O'
0000000000008423         db  0x0e ; '.'
0000000000008424         db  0x08 ; '.'
0000000000008425         db  0x00 ; '.'
0000000000008426         db  0x00 ; '.'
0000000000008427         db  0x00 ; '.'
0000000000008428         dd         0x0000001c                                  ; Length of the record
000000000000842c         dd         0x0000071c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008430         db         0x70, 0xb7, 2 dup (0xff)                    ; begin 0x3ba0
0000000000008434         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x3c3f)
0000000000008438         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008439         db  0x44 ; 'D'
000000000000843a         db  0x0e ; '.'
000000000000843b         db  0x10 ; '.'
000000000000843c         db  0x83 ; '.'
000000000000843d         db  0x02 ; '.'
000000000000843e         db  0x02 ; '.'
000000000000843f         db  0x78 ; 'x'
0000000000008440         db  0x0a ; '.'
0000000000008441         db  0x0e ; '.'
0000000000008442         db  0x08 ; '.'
0000000000008443         db  0x41 ; 'A'
0000000000008444         db  0x0b ; '.'
0000000000008445         db  0x00 ; '.'
0000000000008446         db  0x00 ; '.'
0000000000008447         db  0x00 ; '.'
0000000000008448         dd         0x00000040                                  ; Length of the record
000000000000844c         dd         0x0000073c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008450         db         0xf0, 0xb7, 2 dup (0xff)                    ; begin 0x3c40
0000000000008454         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3d27)
0000000000008458         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008459         db  0x41 ; 'A'
000000000000845a         db  0x0e ; '.'
000000000000845b         db  0x10 ; '.'
000000000000845c         db  0x86 ; '.'
000000000000845d         db  0x02 ; '.'
000000000000845e         db  0x41 ; 'A'
000000000000845f         db  0x0e ; '.'
0000000000008460         db  0x18 ; '.'
0000000000008461         db  0x83 ; '.'
0000000000008462         db  0x03 ; '.'
0000000000008463         db  0x49 ; 'I'
0000000000008464         db  0x0e ; '.'
0000000000008465         db  0x20 ; ' '
0000000000008466         db  0x6e ; 'n'
0000000000008467         db  0x0a ; '.'
0000000000008468         db  0x0e ; '.'
0000000000008469         db  0x18 ; '.'
000000000000846a         db  0x41 ; 'A'
000000000000846b         db  0x0e ; '.'
000000000000846c         db  0x10 ; '.'
000000000000846d         db  0x41 ; 'A'
000000000000846e         db  0x0e ; '.'
000000000000846f         db  0x08 ; '.'
0000000000008470         db  0x45 ; 'E'
0000000000008471         db  0x0b ; '.'
0000000000008472         db  0x02 ; '.'
0000000000008473         db  0x4a ; 'J'
0000000000008474         db  0x0a ; '.'
0000000000008475         db  0x0e ; '.'
0000000000008476         db  0x18 ; '.'
0000000000008477         db  0x41 ; 'A'
0000000000008478         db  0x0e ; '.'
0000000000008479         db  0x10 ; '.'
000000000000847a         db  0x41 ; 'A'
000000000000847b         db  0x0e ; '.'
000000000000847c         db  0x08 ; '.'
000000000000847d         db  0x44 ; 'D'
000000000000847e         db  0x0b ; '.'
000000000000847f         db  0x02 ; '.'
0000000000008480         db  0x54 ; 'T'
0000000000008481         db  0x0e ; '.'
0000000000008482         db  0x18 ; '.'
0000000000008483         db  0x41 ; 'A'
0000000000008484         db  0x0e ; '.'
0000000000008485         db  0x10 ; '.'
0000000000008486         db  0x41 ; 'A'
0000000000008487         db  0x0e ; '.'
0000000000008488         db  0x08 ; '.'
0000000000008489         db  0x00 ; '.'
000000000000848a         db  0x00 ; '.'
000000000000848b         db  0x00 ; '.'
000000000000848c         dd         0x00000074                                  ; Length of the record
0000000000008490         dd         0x00000780                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008494         db         0x9c, 0xb8, 2 dup (0xff)                    ; begin 0x3d30
0000000000008498         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4f64)
000000000000849c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000849d         db  0x42 ; 'B'
000000000000849e         db  0x0e ; '.'
000000000000849f         db  0x10 ; '.'
00000000000084a0         db  0x8f ; '.'
00000000000084a1         db  0x02 ; '.'
00000000000084a2         db  0x42 ; 'B'
00000000000084a3         db  0x0e ; '.'
00000000000084a4         db  0x18 ; '.'
00000000000084a5         db  0x8e ; '.'
00000000000084a6         db  0x03 ; '.'
00000000000084a7         db  0x45 ; 'E'
00000000000084a8         db  0x0e ; '.'
00000000000084a9         db  0x20 ; ' '
00000000000084aa         db  0x8d ; '.'
00000000000084ab         db  0x04 ; '.'
00000000000084ac         db  0x42 ; 'B'
00000000000084ad         db  0x0e ; '.'
00000000000084ae         db  0x28 ; '('
00000000000084af         db  0x8c ; '.'
00000000000084b0         db  0x05 ; '.'
00000000000084b1         db  0x44 ; 'D'
00000000000084b2         db  0x0e ; '.'
00000000000084b3         db  0x30 ; '0'
00000000000084b4         db  0x86 ; '.'
00000000000084b5         db  0x06 ; '.'
00000000000084b6         db  0x41 ; 'A'
00000000000084b7         db  0x0e ; '.'
00000000000084b8         db  0x38 ; '8'
00000000000084b9         db  0x83 ; '.'
00000000000084ba         db  0x07 ; '.'
00000000000084bb         db  0x53 ; 'S'
00000000000084bc         db  0x0e ; '.'
00000000000084bd         db  0xf0 ; '.'
00000000000084be         db  0x01 ; '.'
00000000000084bf         db  0x03 ; '.'
00000000000084c0         db  0x81 ; '.'
00000000000084c1         db  0x0b ; '.'
00000000000084c2         db  0x0e ; '.'
00000000000084c3         db  0xf8 ; '.'
00000000000084c4         db  0x01 ; '.'
00000000000084c5         db  0x4a ; 'J'
00000000000084c6         db  0x0e ; '.'
00000000000084c7         db  0x80 ; '.'
00000000000084c8         db  0x02 ; '.'
00000000000084c9         db  0x44 ; 'D'
00000000000084ca         db  0x0e ; '.'
00000000000084cb         db  0x88 ; '.'
00000000000084cc         db  0x02 ; '.'
00000000000084cd         db  0x45 ; 'E'
00000000000084ce         db  0x0e ; '.'
00000000000084cf         db  0x90 ; '.'
00000000000084d0         db  0x02 ; '.'
00000000000084d1         db  0x5f ; '_'
00000000000084d2         db  0x0e ; '.'
00000000000084d3         db  0xf0 ; '.'
00000000000084d4         db  0x01 ; '.'
00000000000084d5         db  0x64 ; 'd'
00000000000084d6         db  0x0a ; '.'
00000000000084d7         db  0x0e ; '.'
00000000000084d8         db  0x38 ; '8'
00000000000084d9         db  0x41 ; 'A'
00000000000084da         db  0x0e ; '.'
00000000000084db         db  0x30 ; '0'
00000000000084dc         db  0x41 ; 'A'
00000000000084dd         db  0x0e ; '.'
00000000000084de         db  0x28 ; '('
00000000000084df         db  0x42 ; 'B'
00000000000084e0         db  0x0e ; '.'
00000000000084e1         db  0x20 ; ' '
00000000000084e2         db  0x42 ; 'B'
00000000000084e3         db  0x0e ; '.'
00000000000084e4         db  0x18 ; '.'
00000000000084e5         db  0x42 ; 'B'
00000000000084e6         db  0x0e ; '.'
00000000000084e7         db  0x10 ; '.'
00000000000084e8         db  0x42 ; 'B'
00000000000084e9         db  0x0e ; '.'
00000000000084ea         db  0x08 ; '.'
00000000000084eb         db  0x44 ; 'D'
00000000000084ec         db  0x0b ; '.'
00000000000084ed         db  0x03 ; '.'
00000000000084ee         db  0x99 ; '.'
00000000000084ef         db  0x05 ; '.'
00000000000084f0         db  0x0e ; '.'
00000000000084f1         db  0xf8 ; '.'
00000000000084f2         db  0x01 ; '.'
00000000000084f3         db  0x4d ; 'M'
00000000000084f4         db  0x0e ; '.'
00000000000084f5         db  0x80 ; '.'
00000000000084f6         db  0x02 ; '.'
00000000000084f7         db  0x44 ; 'D'
00000000000084f8         db  0x0e ; '.'
00000000000084f9         db  0x88 ; '.'
00000000000084fa         db  0x02 ; '.'
00000000000084fb         db  0x47 ; 'G'
00000000000084fc         db  0x0e ; '.'
00000000000084fd         db  0x90 ; '.'
00000000000084fe         db  0x02 ; '.'
00000000000084ff         db  0x5b ; '['
0000000000008500         db  0x0e ; '.'
0000000000008501         db  0xf0 ; '.'
0000000000008502         db  0x01 ; '.'
0000000000008503         db  0x00 ; '.'
0000000000008504         dd         0x00000068                                  ; Length of the record
0000000000008508         dd         0x000007f8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000850c         db         0x64, 0xca, 2 dup (0xff)                    ; begin 0x4f70
0000000000008510         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x511b)
0000000000008514         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008515         db  0x42 ; 'B'
0000000000008516         db  0x0e ; '.'
0000000000008517         db  0x10 ; '.'
0000000000008518         db  0x8f ; '.'
0000000000008519         db  0x02 ; '.'
000000000000851a         db  0x42 ; 'B'
000000000000851b         db  0x0e ; '.'
000000000000851c         db  0x18 ; '.'
000000000000851d         db  0x8e ; '.'
000000000000851e         db  0x03 ; '.'
000000000000851f         db  0x45 ; 'E'
0000000000008520         db  0x0e ; '.'
0000000000008521         db  0x20 ; ' '
0000000000008522         db  0x8d ; '.'
0000000000008523         db  0x04 ; '.'
0000000000008524         db  0x42 ; 'B'
0000000000008525         db  0x0e ; '.'
0000000000008526         db  0x28 ; '('
0000000000008527         db  0x8c ; '.'
0000000000008528         db  0x05 ; '.'
0000000000008529         db  0x44 ; 'D'
000000000000852a         db  0x0e ; '.'
000000000000852b         db  0x30 ; '0'
000000000000852c         db  0x86 ; '.'
000000000000852d         db  0x06 ; '.'
000000000000852e         db  0x41 ; 'A'
000000000000852f         db  0x0e ; '.'
0000000000008530         db  0x38 ; '8'
0000000000008531         db  0x83 ; '.'
0000000000008532         db  0x07 ; '.'
0000000000008533         db  0x47 ; 'G'
0000000000008534         db  0x0e ; '.'
0000000000008535         db  0x60 ; '`'
0000000000008536         db  0x02 ; '.'
0000000000008537         db  0x99 ; '.'
0000000000008538         db  0x0e ; '.'
0000000000008539         db  0x68 ; 'h'
000000000000853a         db  0x5f ; '_'
000000000000853b         db  0x0e ; '.'
000000000000853c         db  0x70 ; 'p'
000000000000853d         db  0x46 ; 'F'
000000000000853e         db  0x0e ; '.'
000000000000853f         db  0x78 ; 'x'
0000000000008540         db  0x42 ; 'B'
0000000000008541         db  0x0e ; '.'
0000000000008542         db  0x80 ; '.'
0000000000008543         db  0x01 ; '.'
0000000000008544         db  0x59 ; 'Y'
0000000000008545         db  0x0e ; '.'
0000000000008546         db  0x60 ; '`'
0000000000008547         db  0x02 ; '.'
0000000000008548         db  0x40 ; '@'
0000000000008549         db  0x0e ; '.'
000000000000854a         db  0x68 ; 'h'
000000000000854b         db  0x4b ; 'K'
000000000000854c         db  0x0e ; '.'
000000000000854d         db  0x70 ; 'p'
000000000000854e         db  0x43 ; 'C'
000000000000854f         db  0x0e ; '.'
0000000000008550         db  0x78 ; 'x'
0000000000008551         db  0x45 ; 'E'
0000000000008552         db  0x0e ; '.'
0000000000008553         db  0x80 ; '.'
0000000000008554         db  0x01 ; '.'
0000000000008555         db  0x5e ; '^'
0000000000008556         db  0x0e ; '.'
0000000000008557         db  0x60 ; '`'
0000000000008558         db  0x4c ; 'L'
0000000000008559         db  0x0a ; '.'
000000000000855a         db  0x0e ; '.'
000000000000855b         db  0x38 ; '8'
000000000000855c         db  0x44 ; 'D'
000000000000855d         db  0x0e ; '.'
000000000000855e         db  0x30 ; '0'
000000000000855f         db  0x41 ; 'A'
0000000000008560         db  0x0e ; '.'
0000000000008561         db  0x28 ; '('
0000000000008562         db  0x42 ; 'B'
0000000000008563         db  0x0e ; '.'
0000000000008564         db  0x20 ; ' '
0000000000008565         db  0x42 ; 'B'
0000000000008566         db  0x0e ; '.'
0000000000008567         db  0x18 ; '.'
0000000000008568         db  0x42 ; 'B'
0000000000008569         db  0x0e ; '.'
000000000000856a         db  0x10 ; '.'
000000000000856b         db  0x42 ; 'B'
000000000000856c         db  0x0e ; '.'
000000000000856d         db  0x08 ; '.'
000000000000856e         db  0x46 ; 'F'
000000000000856f         db  0x0b ; '.'
0000000000008570         dd         0x00000028                                  ; Length of the record
0000000000008574         dd         0x00000864                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008578         db         0xa8, 0xcb, 2 dup (0xff)                    ; begin 0x5120
000000000000857c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5156)
0000000000008580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008581         db  0x42 ; 'B'
0000000000008582         db  0x0e ; '.'
0000000000008583         db  0x10 ; '.'
0000000000008584         db  0x8c ; '.'
0000000000008585         db  0x02 ; '.'
0000000000008586         db  0x41 ; 'A'
0000000000008587         db  0x0e ; '.'
0000000000008588         db  0x18 ; '.'
0000000000008589         db  0x86 ; '.'
000000000000858a         db  0x03 ; '.'
000000000000858b         db  0x41 ; 'A'
000000000000858c         db  0x0e ; '.'
000000000000858d         db  0x20 ; ' '
000000000000858e         db  0x83 ; '.'
000000000000858f         db  0x04 ; '.'
0000000000008590         db  0x6e ; 'n'
0000000000008591         db  0x0e ; '.'
0000000000008592         db  0x18 ; '.'
0000000000008593         db  0x41 ; 'A'
0000000000008594         db  0x0e ; '.'
0000000000008595         db  0x10 ; '.'
0000000000008596         db  0x42 ; 'B'
0000000000008597         db  0x0e ; '.'
0000000000008598         db  0x08 ; '.'
0000000000008599         db  0x00 ; '.'
000000000000859a         db  0x00 ; '.'
000000000000859b         db  0x00 ; '.'
000000000000859c         dd         0x00000010                                  ; Length of the record
00000000000085a0         dd         0x00000890                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000085a4         db         0xbc, 0xcb, 2 dup (0xff)                    ; begin 0x5160
00000000000085a8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5171)
00000000000085ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085ad         align      16
00000000000085b0         dd         0x00000010                                  ; Length of the record
00000000000085b4         dd         0x000008a4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000085b8         db         0xc8, 0xcb, 2 dup (0xff)                    ; begin 0x5180
00000000000085bc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5191)
00000000000085c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085c1         align      4
00000000000085c4         dd         0x00000010                                  ; Length of the record
00000000000085c8         dd         0x000008b8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000085cc         db         0xd4, 0xcb, 2 dup (0xff)                    ; begin 0x51a0
00000000000085d0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x51d5)
00000000000085d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085d5         align      8
00000000000085d8         dd         0x00000010                                  ; Length of the record
00000000000085dc         dd         0x000008cc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000085e0         db         0x00, 0xcc, 2 dup (0xff)                    ; begin 0x51e0
00000000000085e4         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x51f5)
00000000000085e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085e9         align      4
00000000000085ec         dd         0x00000010                                  ; Length of the record
00000000000085f0         dd         0x000008e0                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000085f4         db         0x0c, 0xcc, 2 dup (0xff)                    ; begin 0x5200
00000000000085f8         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x5230)
00000000000085fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085fd         db  0x6b ; 'k'
00000000000085fe         db  0x0e ; '.'
00000000000085ff         db  0x10 ; '.'
0000000000008600         dd         0x00000050                                  ; Length of the record
0000000000008604         dd         0x000008f4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008608         db         0x28, 0xcc, 2 dup (0xff)                    ; begin 0x5230
000000000000860c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x52a4)
0000000000008610         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008611         db  0x42 ; 'B'
0000000000008612         db  0x0e ; '.'
0000000000008613         db  0x10 ; '.'
0000000000008614         db  0x8f ; '.'
0000000000008615         db  0x02 ; '.'
0000000000008616         db  0x42 ; 'B'
0000000000008617         db  0x0e ; '.'
0000000000008618         db  0x18 ; '.'
0000000000008619         db  0x8e ; '.'
000000000000861a         db  0x03 ; '.'
000000000000861b         db  0x49 ; 'I'
000000000000861c         db  0x0e ; '.'
000000000000861d         db  0x20 ; ' '
000000000000861e         db  0x8d ; '.'
000000000000861f         db  0x04 ; '.'
0000000000008620         db  0x42 ; 'B'
0000000000008621         db  0x0e ; '.'
0000000000008622         db  0x28 ; '('
0000000000008623         db  0x8c ; '.'
0000000000008624         db  0x05 ; '.'
0000000000008625         db  0x44 ; 'D'
0000000000008626         db  0x0e ; '.'
0000000000008627         db  0x30 ; '0'
0000000000008628         db  0x86 ; '.'
0000000000008629         db  0x06 ; '.'
000000000000862a         db  0x41 ; 'A'
000000000000862b         db  0x0e ; '.'
000000000000862c         db  0x38 ; '8'
000000000000862d         db  0x83 ; '.'
000000000000862e         db  0x07 ; '.'
000000000000862f         db  0x4d ; 'M'
0000000000008630         db  0x0e ; '.'
0000000000008631         db  0x50 ; 'P'
0000000000008632         db  0x5f ; '_'
0000000000008633         db  0x0e ; '.'
0000000000008634         db  0x58 ; 'X'
0000000000008635         db  0x47 ; 'G'
0000000000008636         db  0x0e ; '.'
0000000000008637         db  0x60 ; '`'
0000000000008638         db  0x46 ; 'F'
0000000000008639         db  0x0e ; '.'
000000000000863a         db  0x68 ; 'h'
000000000000863b         db  0x44 ; 'D'
000000000000863c         db  0x0e ; '.'
000000000000863d         db  0x70 ; 'p'
000000000000863e         db  0x58 ; 'X'
000000000000863f         db  0x0e ; '.'
0000000000008640         db  0x38 ; '8'
0000000000008641         db  0x41 ; 'A'
0000000000008642         db  0x0e ; '.'
0000000000008643         db  0x30 ; '0'
0000000000008644         db  0x41 ; 'A'
0000000000008645         db  0x0e ; '.'
0000000000008646         db  0x28 ; '('
0000000000008647         db  0x42 ; 'B'
0000000000008648         db  0x0e ; '.'
0000000000008649         db  0x20 ; ' '
000000000000864a         db  0x42 ; 'B'
000000000000864b         db  0x0e ; '.'
000000000000864c         db  0x18 ; '.'
000000000000864d         db  0x42 ; 'B'
000000000000864e         db  0x0e ; '.'
000000000000864f         db  0x10 ; '.'
0000000000008650         db  0x42 ; 'B'
0000000000008651         db  0x0e ; '.'
0000000000008652         db  0x08 ; '.'
0000000000008653         db  0x00 ; '.'
0000000000008654         dd         0x00000068                                  ; Length of the record
0000000000008658         dd         0x00000948                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000865c         db         0x54, 0xcc, 2 dup (0xff)                    ; begin 0x52b0
0000000000008660         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5393)
0000000000008664         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008665         db  0x42 ; 'B'
0000000000008666         db  0x0e ; '.'
0000000000008667         db  0x10 ; '.'
0000000000008668         db  0x8f ; '.'
0000000000008669         db  0x02 ; '.'
000000000000866a         db  0x42 ; 'B'
000000000000866b         db  0x0e ; '.'
000000000000866c         db  0x18 ; '.'
000000000000866d         db  0x8e ; '.'
000000000000866e         db  0x03 ; '.'
000000000000866f         db  0x49 ; 'I'
0000000000008670         db  0x0e ; '.'
0000000000008671         db  0x20 ; ' '
0000000000008672         db  0x8d ; '.'
0000000000008673         db  0x04 ; '.'
0000000000008674         db  0x42 ; 'B'
0000000000008675         db  0x0e ; '.'
0000000000008676         db  0x28 ; '('
0000000000008677         db  0x8c ; '.'
0000000000008678         db  0x05 ; '.'
0000000000008679         db  0x44 ; 'D'
000000000000867a         db  0x0e ; '.'
000000000000867b         db  0x30 ; '0'
000000000000867c         db  0x86 ; '.'
000000000000867d         db  0x06 ; '.'
000000000000867e         db  0x41 ; 'A'
000000000000867f         db  0x0e ; '.'
0000000000008680         db  0x38 ; '8'
0000000000008681         db  0x83 ; '.'
0000000000008682         db  0x07 ; '.'
0000000000008683         db  0x4d ; 'M'
0000000000008684         db  0x0e ; '.'
0000000000008685         db  0x70 ; 'p'
0000000000008686         db  0x65 ; 'e'
0000000000008687         db  0x0e ; '.'
0000000000008688         db  0x78 ; 'x'
0000000000008689         db  0x4d ; 'M'
000000000000868a         db  0x0e ; '.'
000000000000868b         db  0x80 ; '.'
000000000000868c         db  0x01 ; '.'
000000000000868d         db  0x46 ; 'F'
000000000000868e         db  0x0e ; '.'
000000000000868f         db  0x88 ; '.'
0000000000008690         db  0x01 ; '.'
0000000000008691         db  0x42 ; 'B'
0000000000008692         db  0x0e ; '.'
0000000000008693         db  0x90 ; '.'
0000000000008694         db  0x01 ; '.'
0000000000008695         db  0x5e ; '^'
0000000000008696         db  0x0e ; '.'
0000000000008697         db  0x70 ; 'p'
0000000000008698         db  0x56 ; 'V'
0000000000008699         db  0x0e ; '.'
000000000000869a         db  0x78 ; 'x'
000000000000869b         db  0x43 ; 'C'
000000000000869c         db  0x0e ; '.'
000000000000869d         db  0x80 ; '.'
000000000000869e         db  0x01 ; '.'
000000000000869f         db  0x43 ; 'C'
00000000000086a0         db  0x0e ; '.'
00000000000086a1         db  0x88 ; '.'
00000000000086a2         db  0x01 ; '.'
00000000000086a3         db  0x56 ; 'V'
00000000000086a4         db  0x0e ; '.'
00000000000086a5         db  0x90 ; '.'
00000000000086a6         db  0x01 ; '.'
00000000000086a7         db  0x52 ; 'R'
00000000000086a8         db  0x0e ; '.'
00000000000086a9         db  0x70 ; 'p'
00000000000086aa         db  0x5b ; '['
00000000000086ab         db  0x0e ; '.'
00000000000086ac         db  0x38 ; '8'
00000000000086ad         db  0x41 ; 'A'
00000000000086ae         db  0x0e ; '.'
00000000000086af         db  0x30 ; '0'
00000000000086b0         db  0x41 ; 'A'
00000000000086b1         db  0x0e ; '.'
00000000000086b2         db  0x28 ; '('
00000000000086b3         db  0x42 ; 'B'
00000000000086b4         db  0x0e ; '.'
00000000000086b5         db  0x20 ; ' '
00000000000086b6         db  0x42 ; 'B'
00000000000086b7         db  0x0e ; '.'
00000000000086b8         db  0x18 ; '.'
00000000000086b9         db  0x42 ; 'B'
00000000000086ba         db  0x0e ; '.'
00000000000086bb         db  0x10 ; '.'
00000000000086bc         db  0x42 ; 'B'
00000000000086bd         db  0x0e ; '.'
00000000000086be         db  0x08 ; '.'
00000000000086bf         db  0x00 ; '.'
00000000000086c0         dd         0x00000010                                  ; Length of the record
00000000000086c4         dd         0x000009b4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000086c8         db         0xd8, 0xcc, 2 dup (0xff)                    ; begin 0x53a0
00000000000086cc         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x53aa)
00000000000086d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086d1         align      4
00000000000086d4         dd         0x00000028                                  ; Length of the record
00000000000086d8         dd         0x000009c8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000086dc         db         0xd4, 0xcc, 2 dup (0xff)                    ; begin 0x53b0
00000000000086e0         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5443)
00000000000086e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086e5         db  0x48 ; 'H'
00000000000086e6         db  0x0e ; '.'
00000000000086e7         db  0x10 ; '.'
00000000000086e8         db  0x8c ; '.'
00000000000086e9         db  0x02 ; '.'
00000000000086ea         db  0x48 ; 'H'
00000000000086eb         db  0x0e ; '.'
00000000000086ec         db  0x18 ; '.'
00000000000086ed         db  0x86 ; '.'
00000000000086ee         db  0x03 ; '.'
00000000000086ef         db  0x41 ; 'A'
00000000000086f0         db  0x0e ; '.'
00000000000086f1         db  0x20 ; ' '
00000000000086f2         db  0x83 ; '.'
00000000000086f3         db  0x04 ; '.'
00000000000086f4         db  0x02 ; '.'
00000000000086f5         db  0x74 ; 't'
00000000000086f6         db  0x0e ; '.'
00000000000086f7         db  0x18 ; '.'
00000000000086f8         db  0x4b ; 'K'
00000000000086f9         db  0x0e ; '.'
00000000000086fa         db  0x10 ; '.'
00000000000086fb         db  0x42 ; 'B'
00000000000086fc         db  0x0e ; '.'
00000000000086fd         db  0x08 ; '.'
00000000000086fe         db  0x00 ; '.'
00000000000086ff         db  0x00 ; '.'
0000000000008700         dd         0x00000010                                  ; Length of the record
0000000000008704         dd         0x000009f4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008708         db         0x48, 0xcd, 2 dup (0xff)                    ; begin 0x5450
000000000000870c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5463)
0000000000008710         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008711         align      4
0000000000008714         dd         0x00000010                                  ; Length of the record
0000000000008718         dd         0x00000a08                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000871c         db         0x54, 0xcd, 2 dup (0xff)                    ; begin 0x5470
0000000000008720         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x547c)
0000000000008724         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008725         align      8
0000000000008728         dd         0x00000010                                  ; Length of the record
000000000000872c         dd         0x00000a1c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008730         db         0x50, 0xcd, 2 dup (0xff)                    ; begin 0x5480
0000000000008734         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5498)
0000000000008738         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008739         align      4
000000000000873c         dd         0x00000010                                  ; Length of the record
0000000000008740         dd         0x00000a30                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008744         db         0x5c, 0xcd, 2 dup (0xff)                    ; begin 0x54a0
0000000000008748         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x54b4)
000000000000874c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000874d         align      16
0000000000008750         dd         0x00000018                                  ; Length of the record
0000000000008754         dd         0x00000a44                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008758         db         0x68, 0xcd, 2 dup (0xff)                    ; begin 0x54c0
000000000000875c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x554e)
0000000000008760         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008761         db  0x44 ; 'D'
0000000000008762         db  0x0e ; '.'
0000000000008763         db  0x50 ; 'P'
0000000000008764         db  0x02 ; '.'
0000000000008765         db  0x7f ; '.'
0000000000008766         db  0x0a ; '.'
0000000000008767         db  0x0e ; '.'
0000000000008768         db  0x08 ; '.'
0000000000008769         db  0x41 ; 'A'
000000000000876a         db  0x0b ; '.'
000000000000876b         db  0x00 ; '.'
000000000000876c         dd         0x00000018                                  ; Length of the record
0000000000008770         dd         0x00000a60                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008774         db         0xdc, 0xcd, 2 dup (0xff)                    ; begin 0x5550
0000000000008778         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x55da)
000000000000877c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000877d         db  0x44 ; 'D'
000000000000877e         db  0x0e ; '.'
000000000000877f         db  0x50 ; 'P'
0000000000008780         db  0x02 ; '.'
0000000000008781         db  0x7b ; '{'
0000000000008782         db  0x0a ; '.'
0000000000008783         db  0x0e ; '.'
0000000000008784         db  0x08 ; '.'
0000000000008785         db  0x41 ; 'A'
0000000000008786         db  0x0b ; '.'
0000000000008787         db  0x00 ; '.'
0000000000008788         dd         0x00000010                                  ; Length of the record
000000000000878c         dd         0x00000a7c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008790         db         0x50, 0xce, 2 dup (0xff)                    ; begin 0x55e0
0000000000008794         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55ec)
0000000000008798         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008799         align      4
000000000000879c         dd         0x00000010                                  ; Length of the record
00000000000087a0         dd         0x00000a90                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000087a4         db         0x4c, 0xce, 2 dup (0xff)                    ; begin 0x55f0
00000000000087a8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x55ff)
00000000000087ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087ad         align      16
00000000000087b0         dd         0x00000018                                  ; Length of the record
00000000000087b4         dd         0x00000aa4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000087b8         db         0x48, 0xce, 2 dup (0xff)                    ; begin 0x5600
00000000000087bc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5698)
00000000000087c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c1         db  0x44 ; 'D'
00000000000087c2         db  0x0e ; '.'
00000000000087c3         db  0x50 ; 'P'
00000000000087c4         db  0x02 ; '.'
00000000000087c5         db  0x8e ; '.'
00000000000087c6         db  0x0a ; '.'
00000000000087c7         db  0x0e ; '.'
00000000000087c8         db  0x08 ; '.'
00000000000087c9         db  0x41 ; 'A'
00000000000087ca         db  0x0b ; '.'
00000000000087cb         db  0x00 ; '.'
00000000000087cc         dd         0x00000010                                  ; Length of the record
00000000000087d0         dd         0x00000ac0                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000087d4         db         0xcc, 0xce, 2 dup (0xff)                    ; begin 0x56a0
00000000000087d8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x56b0)
00000000000087dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087dd         align      32
00000000000087e0         dd         0x00000010                                  ; Length of the record
00000000000087e4         dd         0x00000ad4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000087e8         db         0xc8, 0xce, 2 dup (0xff)                    ; begin 0x56b0
00000000000087ec         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x56c1)
00000000000087f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087f1         align      4
00000000000087f4         dd         0x00000010                                  ; Length of the record
00000000000087f8         dd         0x00000ae8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000087fc         db         0xd4, 0xce, 2 dup (0xff)                    ; begin 0x56d0
0000000000008800         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x56da)
0000000000008804         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008805         align      8
0000000000008808         dd         0x00000018                                  ; Length of the record
000000000000880c         dd         0x00000afc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008810         db         0xd0, 0xce, 2 dup (0xff)                    ; begin 0x56e0
0000000000008814         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x576e)
0000000000008818         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008819         db  0x44 ; 'D'
000000000000881a         db  0x0e ; '.'
000000000000881b         db  0x50 ; 'P'
000000000000881c         db  0x02 ; '.'
000000000000881d         db  0x7f ; '.'
000000000000881e         db  0x0a ; '.'
000000000000881f         db  0x0e ; '.'
0000000000008820         db  0x08 ; '.'
0000000000008821         db  0x41 ; 'A'
0000000000008822         db  0x0b ; '.'
0000000000008823         db  0x00 ; '.'
0000000000008824         dd         0x00000018                                  ; Length of the record
0000000000008828         dd         0x00000b18                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000882c         db         0x44, 0xcf, 2 dup (0xff)                    ; begin 0x5770
0000000000008830         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5801)
0000000000008834         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008835         db  0x44 ; 'D'
0000000000008836         db  0x0e ; '.'
0000000000008837         db  0x50 ; 'P'
0000000000008838         db  0x02 ; '.'
0000000000008839         db  0x82 ; '.'
000000000000883a         db  0x0a ; '.'
000000000000883b         db  0x0e ; '.'
000000000000883c         db  0x08 ; '.'
000000000000883d         db  0x41 ; 'A'
000000000000883e         db  0x0b ; '.'
000000000000883f         db  0x00 ; '.'
0000000000008840         dd         0x00000010                                  ; Length of the record
0000000000008844         dd         0x00000b34                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008848         db         0xc8, 0xcf, 2 dup (0xff)                    ; begin 0x5810
000000000000884c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x581c)
0000000000008850         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008851         align      4
0000000000008854         dd         0x00000010                                  ; Length of the record
0000000000008858         dd         0x00000b48                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
000000000000885c         db         0xc4, 0xcf, 2 dup (0xff)                    ; begin 0x5820
0000000000008860         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5837)
0000000000008864         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008865         align      8
0000000000008868         dd         0x00000010                                  ; Length of the record
000000000000886c         dd         0x00000b5c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008870         db         0xd0, 0xcf, 2 dup (0xff)                    ; begin 0x5840
0000000000008874         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5853)
0000000000008878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008879         align      4
000000000000887c         dd         0x00000010                                  ; Length of the record
0000000000008880         dd         0x00000b70                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008884         db         0xdc, 0xcf, 2 dup (0xff)                    ; begin 0x5860
0000000000008888         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x586c)
000000000000888c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000888d         align      16
0000000000008890         dd         0x00000010                                  ; Length of the record
0000000000008894         dd         0x00000b84                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008898         db         0xd8, 0xcf, 2 dup (0xff)                    ; begin 0x5870
000000000000889c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5884)
00000000000088a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088a1         align      4
00000000000088a4         dd         0x00000010                                  ; Length of the record
00000000000088a8         dd         0x00000b98                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000088ac         db         0xe4, 0xcf, 2 dup (0xff)                    ; begin 0x5890
00000000000088b0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x58a3)
00000000000088b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b5         align      8
00000000000088b8         dd         0x00000014                                  ; Length of the record
00000000000088bc         dd         0x00000bac                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000088c0         db         0xf0, 0xcf, 2 dup (0xff)                    ; begin 0x58b0
00000000000088c4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x58c8)
00000000000088c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088c9         align      16
00000000000088d0         dd         0x00000038                                  ; Length of the record
00000000000088d4         dd         0x00000bc4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
00000000000088d8         db         0xf8, 0xcf, 2 dup (0xff)                    ; begin 0x58d0
00000000000088dc         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0x59f7)
00000000000088e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088e1         db  0x42 ; 'B'
00000000000088e2         db  0x0e ; '.'
00000000000088e3         db  0x10 ; '.'
00000000000088e4         db  0x8d ; '.'
00000000000088e5         db  0x02 ; '.'
00000000000088e6         db  0x42 ; 'B'
00000000000088e7         db  0x0e ; '.'
00000000000088e8         db  0x18 ; '.'
00000000000088e9         db  0x8c ; '.'
00000000000088ea         db  0x03 ; '.'
00000000000088eb         db  0x44 ; 'D'
00000000000088ec         db  0x0e ; '.'
00000000000088ed         db  0x20 ; ' '
00000000000088ee         db  0x86 ; '.'
00000000000088ef         db  0x04 ; '.'
00000000000088f0         db  0x41 ; 'A'
00000000000088f1         db  0x0e ; '.'
00000000000088f2         db  0x28 ; '('
00000000000088f3         db  0x83 ; '.'
00000000000088f4         db  0x05 ; '.'
00000000000088f5         db  0x4f ; 'O'
00000000000088f6         db  0x0e ; '.'
00000000000088f7         db  0xe0 ; '.'
00000000000088f8         db  0x02 ; '.'
00000000000088f9         db  0x02 ; '.'
00000000000088fa         db  0xb5 ; '.'
00000000000088fb         db  0x0a ; '.'
00000000000088fc         db  0x0e ; '.'
00000000000088fd         db  0x28 ; '('
00000000000088fe         db  0x41 ; 'A'
00000000000088ff         db  0x0e ; '.'
0000000000008900         db  0x20 ; ' '
0000000000008901         db  0x41 ; 'A'
0000000000008902         db  0x0e ; '.'
0000000000008903         db  0x18 ; '.'
0000000000008904         db  0x42 ; 'B'
0000000000008905         db  0x0e ; '.'
0000000000008906         db  0x10 ; '.'
0000000000008907         db  0x42 ; 'B'
0000000000008908         db  0x0e ; '.'
0000000000008909         db  0x08 ; '.'
000000000000890a         db  0x45 ; 'E'
000000000000890b         db  0x0b ; '.'
000000000000890c         dd         0x0000005c                                  ; Length of the record
0000000000008910         dd         0x00000c00                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008914         db         0xec, 0xd0, 2 dup (0xff)                    ; begin 0x5a00
0000000000008918         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0x5a92)
000000000000891c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000891d         db  0x42 ; 'B'
000000000000891e         db  0x0e ; '.'
000000000000891f         db  0x10 ; '.'
0000000000008920         db  0x8f ; '.'
0000000000008921         db  0x02 ; '.'
0000000000008922         db  0x42 ; 'B'
0000000000008923         db  0x0e ; '.'
0000000000008924         db  0x18 ; '.'
0000000000008925         db  0x8e ; '.'
0000000000008926         db  0x03 ; '.'
0000000000008927         db  0x45 ; 'E'
0000000000008928         db  0x0e ; '.'
0000000000008929         db  0x20 ; ' '
000000000000892a         db  0x8d ; '.'
000000000000892b         db  0x04 ; '.'
000000000000892c         db  0x42 ; 'B'
000000000000892d         db  0x0e ; '.'
000000000000892e         db  0x28 ; '('
000000000000892f         db  0x8c ; '.'
0000000000008930         db  0x05 ; '.'
0000000000008931         db  0x41 ; 'A'
0000000000008932         db  0x0e ; '.'
0000000000008933         db  0x30 ; '0'
0000000000008934         db  0x86 ; '.'
0000000000008935         db  0x06 ; '.'
0000000000008936         db  0x41 ; 'A'
0000000000008937         db  0x0e ; '.'
0000000000008938         db  0x38 ; '8'
0000000000008939         db  0x83 ; '.'
000000000000893a         db  0x07 ; '.'
000000000000893b         db  0x4a ; 'J'
000000000000893c         db  0x0e ; '.'
000000000000893d         db  0x50 ; 'P'
000000000000893e         db  0x76 ; 'v'
000000000000893f         db  0x0a ; '.'
0000000000008940         db  0x0e ; '.'
0000000000008941         db  0x38 ; '8'
0000000000008942         db  0x43 ; 'C'
0000000000008943         db  0x0e ; '.'
0000000000008944         db  0x30 ; '0'
0000000000008945         db  0x41 ; 'A'
0000000000008946         db  0x0e ; '.'
0000000000008947         db  0x28 ; '('
0000000000008948         db  0x42 ; 'B'
0000000000008949         db  0x0e ; '.'
000000000000894a         db  0x20 ; ' '
000000000000894b         db  0x42 ; 'B'
000000000000894c         db  0x0e ; '.'
000000000000894d         db  0x18 ; '.'
000000000000894e         db  0x42 ; 'B'
000000000000894f         db  0x0e ; '.'
0000000000008950         db  0x10 ; '.'
0000000000008951         db  0x42 ; 'B'
0000000000008952         db  0x0e ; '.'
0000000000008953         db  0x08 ; '.'
0000000000008954         db  0x47 ; 'G'
0000000000008955         db  0x0b ; '.'
0000000000008956         db  0x5a ; 'Z'
0000000000008957         db  0x0e ; '.'
0000000000008958         db  0x38 ; '8'
0000000000008959         db  0x4a ; 'J'
000000000000895a         db  0x0e ; '.'
000000000000895b         db  0x30 ; '0'
000000000000895c         db  0x41 ; 'A'
000000000000895d         db  0x0e ; '.'
000000000000895e         db  0x28 ; '('
000000000000895f         db  0x42 ; 'B'
0000000000008960         db  0x0e ; '.'
0000000000008961         db  0x20 ; ' '
0000000000008962         db  0x42 ; 'B'
0000000000008963         db  0x0e ; '.'
0000000000008964         db  0x18 ; '.'
0000000000008965         db  0x42 ; 'B'
0000000000008966         db  0x0e ; '.'
0000000000008967         db  0x10 ; '.'
0000000000008968         db  0x42 ; 'B'
0000000000008969         db  0x0e ; '.'
000000000000896a         db  0x08 ; '.'
000000000000896b         db  0x00 ; '.'
000000000000896c         dd         0x00000010                                  ; Length of the record
0000000000008970         dd         0x00000c60                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008974         db         0x2c, 0xd1, 2 dup (0xff)                    ; begin 0x5aa0
0000000000008978         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x5ab2)
000000000000897c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000897d         align      128
0000000000008980         dd         0x00000110                                  ; Length of the record
0000000000008984         dd         0x00000c74                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008988         db         0x38, 0xd1, 2 dup (0xff)                    ; begin 0x5ac0
000000000000898c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5ed7)
0000000000008990         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008991         db  0x42 ; 'B'
0000000000008992         db  0x0e ; '.'
0000000000008993         db  0x10 ; '.'
0000000000008994         db  0x8f ; '.'
0000000000008995         db  0x02 ; '.'
0000000000008996         db  0x42 ; 'B'
0000000000008997         db  0x0e ; '.'
0000000000008998         db  0x18 ; '.'
0000000000008999         db  0x8e ; '.'
000000000000899a         db  0x03 ; '.'
000000000000899b         db  0x42 ; 'B'
000000000000899c         db  0x0e ; '.'
000000000000899d         db  0x20 ; ' '
000000000000899e         db  0x8d ; '.'
000000000000899f         db  0x04 ; '.'
00000000000089a0         db  0x42 ; 'B'
00000000000089a1         db  0x0e ; '.'
00000000000089a2         db  0x28 ; '('
00000000000089a3         db  0x8c ; '.'
00000000000089a4         db  0x05 ; '.'
00000000000089a5         db  0x44 ; 'D'
00000000000089a6         db  0x0e ; '.'
00000000000089a7         db  0x30 ; '0'
00000000000089a8         db  0x86 ; '.'
00000000000089a9         db  0x06 ; '.'
00000000000089aa         db  0x41 ; 'A'
00000000000089ab         db  0x0e ; '.'
00000000000089ac         db  0x38 ; '8'
00000000000089ad         db  0x83 ; '.'
00000000000089ae         db  0x07 ; '.'
00000000000089af         db  0x4a ; 'J'
00000000000089b0         db  0x0e ; '.'
00000000000089b1         db  0x60 ; '`'
00000000000089b2         db  0x02 ; '.'
00000000000089b3         db  0xdd ; '.'
00000000000089b4         db  0x0e ; '.'
00000000000089b5         db  0x68 ; 'h'
00000000000089b6         db  0x57 ; 'W'
00000000000089b7         db  0x0e ; '.'
00000000000089b8         db  0x70 ; 'p'
00000000000089b9         db  0x42 ; 'B'
00000000000089ba         db  0x0e ; '.'
00000000000089bb         db  0x78 ; 'x'
00000000000089bc         db  0x42 ; 'B'
00000000000089bd         db  0x0e ; '.'
00000000000089be         db  0x80 ; '.'
00000000000089bf         db  0x01 ; '.'
00000000000089c0         db  0x42 ; 'B'
00000000000089c1         db  0x0e ; '.'
00000000000089c2         db  0x88 ; '.'
00000000000089c3         db  0x01 ; '.'
00000000000089c4         db  0x42 ; 'B'
00000000000089c5         db  0x0e ; '.'
00000000000089c6         db  0x90 ; '.'
00000000000089c7         db  0x01 ; '.'
00000000000089c8         db  0x53 ; 'S'
00000000000089c9         db  0x0e ; '.'
00000000000089ca         db  0x60 ; '`'
00000000000089cb         db  0x44 ; 'D'
00000000000089cc         db  0x0a ; '.'
00000000000089cd         db  0x0e ; '.'
00000000000089ce         db  0x38 ; '8'
00000000000089cf         db  0x41 ; 'A'
00000000000089d0         db  0x0e ; '.'
00000000000089d1         db  0x30 ; '0'
00000000000089d2         db  0x41 ; 'A'
00000000000089d3         db  0x0e ; '.'
00000000000089d4         db  0x28 ; '('
00000000000089d5         db  0x42 ; 'B'
00000000000089d6         db  0x0e ; '.'
00000000000089d7         db  0x20 ; ' '
00000000000089d8         db  0x42 ; 'B'
00000000000089d9         db  0x0e ; '.'
00000000000089da         db  0x18 ; '.'
00000000000089db         db  0x42 ; 'B'
00000000000089dc         db  0x0e ; '.'
00000000000089dd         db  0x10 ; '.'
00000000000089de         db  0x42 ; 'B'
00000000000089df         db  0x0e ; '.'
00000000000089e0         db  0x08 ; '.'
00000000000089e1         db  0x44 ; 'D'
00000000000089e2         db  0x0b ; '.'
00000000000089e3         db  0x02 ; '.'
00000000000089e4         db  0x78 ; 'x'
00000000000089e5         db  0x0a ; '.'
00000000000089e6         db  0x0e ; '.'
00000000000089e7         db  0x68 ; 'h'
00000000000089e8         db  0x48 ; 'H'
00000000000089e9         db  0x0b ; '.'
00000000000089ea         db  0x5a ; 'Z'
00000000000089eb         db  0x0a ; '.'
00000000000089ec         db  0x0e ; '.'
00000000000089ed         db  0x38 ; '8'
00000000000089ee         db  0x47 ; 'G'
00000000000089ef         db  0x0e ; '.'
00000000000089f0         db  0x30 ; '0'
00000000000089f1         db  0x41 ; 'A'
00000000000089f2         db  0x0e ; '.'
00000000000089f3         db  0x28 ; '('
00000000000089f4         db  0x42 ; 'B'
00000000000089f5         db  0x0e ; '.'
00000000000089f6         db  0x20 ; ' '
00000000000089f7         db  0x42 ; 'B'
00000000000089f8         db  0x0e ; '.'
00000000000089f9         db  0x18 ; '.'
00000000000089fa         db  0x42 ; 'B'
00000000000089fb         db  0x0e ; '.'
00000000000089fc         db  0x10 ; '.'
00000000000089fd         db  0x42 ; 'B'
00000000000089fe         db  0x0e ; '.'
00000000000089ff         db  0x08 ; '.'
0000000000008a00         db  0x56 ; 'V'
0000000000008a01         db  0x0b ; '.'
0000000000008a02         db  0x5e ; '^'
0000000000008a03         db  0x0a ; '.'
0000000000008a04         db  0x0e ; '.'
0000000000008a05         db  0x38 ; '8'
0000000000008a06         db  0x52 ; 'R'
0000000000008a07         db  0x0e ; '.'
0000000000008a08         db  0x30 ; '0'
0000000000008a09         db  0x41 ; 'A'
0000000000008a0a         db  0x0e ; '.'
0000000000008a0b         db  0x28 ; '('
0000000000008a0c         db  0x42 ; 'B'
0000000000008a0d         db  0x0e ; '.'
0000000000008a0e         db  0x20 ; ' '
0000000000008a0f         db  0x42 ; 'B'
0000000000008a10         db  0x0e ; '.'
0000000000008a11         db  0x18 ; '.'
0000000000008a12         db  0x42 ; 'B'
0000000000008a13         db  0x0e ; '.'
0000000000008a14         db  0x10 ; '.'
0000000000008a15         db  0x42 ; 'B'
0000000000008a16         db  0x0e ; '.'
0000000000008a17         db  0x08 ; '.'
0000000000008a18         db  0x4f ; 'O'
0000000000008a19         db  0x0b ; '.'
0000000000008a1a         db  0x62 ; 'b'
0000000000008a1b         db  0x0a ; '.'
0000000000008a1c         db  0x0e ; '.'
0000000000008a1d         db  0x38 ; '8'
0000000000008a1e         db  0x50 ; 'P'
0000000000008a1f         db  0x0e ; '.'
0000000000008a20         db  0x30 ; '0'
0000000000008a21         db  0x41 ; 'A'
0000000000008a22         db  0x0e ; '.'
0000000000008a23         db  0x28 ; '('
0000000000008a24         db  0x42 ; 'B'
0000000000008a25         db  0x0e ; '.'
0000000000008a26         db  0x20 ; ' '
0000000000008a27         db  0x42 ; 'B'
0000000000008a28         db  0x0e ; '.'
0000000000008a29         db  0x18 ; '.'
0000000000008a2a         db  0x42 ; 'B'
0000000000008a2b         db  0x0e ; '.'
0000000000008a2c         db  0x10 ; '.'
0000000000008a2d         db  0x42 ; 'B'
0000000000008a2e         db  0x0e ; '.'
0000000000008a2f         db  0x08 ; '.'
0000000000008a30         db  0x55 ; 'U'
0000000000008a31         db  0x0b ; '.'
0000000000008a32         db  0x66 ; 'f'
0000000000008a33         db  0x0e ; '.'
0000000000008a34         db  0x68 ; 'h'
0000000000008a35         db  0x42 ; 'B'
0000000000008a36         db  0x0e ; '.'
0000000000008a37         db  0x70 ; 'p'
0000000000008a38         db  0x5c ; '\'
0000000000008a39         db  0x0e ; '.'
0000000000008a3a         db  0x68 ; 'h'
0000000000008a3b         db  0x41 ; 'A'
0000000000008a3c         db  0x0e ; '.'
0000000000008a3d         db  0x60 ; '`'
0000000000008a3e         db  0x44 ; 'D'
0000000000008a3f         db  0x0a ; '.'
0000000000008a40         db  0x0e ; '.'
0000000000008a41         db  0x38 ; '8'
0000000000008a42         db  0x41 ; 'A'
0000000000008a43         db  0x0e ; '.'
0000000000008a44         db  0x30 ; '0'
0000000000008a45         db  0x41 ; 'A'
0000000000008a46         db  0x0e ; '.'
0000000000008a47         db  0x28 ; '('
0000000000008a48         db  0x42 ; 'B'
0000000000008a49         db  0x0e ; '.'
0000000000008a4a         db  0x20 ; ' '
0000000000008a4b         db  0x42 ; 'B'
0000000000008a4c         db  0x0e ; '.'
0000000000008a4d         db  0x18 ; '.'
0000000000008a4e         db  0x42 ; 'B'
0000000000008a4f         db  0x0e ; '.'
0000000000008a50         db  0x10 ; '.'
0000000000008a51         db  0x42 ; 'B'
0000000000008a52         db  0x0e ; '.'
0000000000008a53         db  0x08 ; '.'
0000000000008a54         db  0x45 ; 'E'
0000000000008a55         db  0x0b ; '.'
0000000000008a56         db  0x68 ; 'h'
0000000000008a57         db  0x0a ; '.'
0000000000008a58         db  0x0e ; '.'
0000000000008a59         db  0x68 ; 'h'
0000000000008a5a         db  0x48 ; 'H'
0000000000008a5b         db  0x0b ; '.'
0000000000008a5c         db  0x72 ; 'r'
0000000000008a5d         db  0x0e ; '.'
0000000000008a5e         db  0x68 ; 'h'
0000000000008a5f         db  0x45 ; 'E'
0000000000008a60         db  0x0e ; '.'
0000000000008a61         db  0x70 ; 'p'
0000000000008a62         db  0x42 ; 'B'
0000000000008a63         db  0x0e ; '.'
0000000000008a64         db  0x78 ; 'x'
0000000000008a65         db  0x42 ; 'B'
0000000000008a66         db  0x0e ; '.'
0000000000008a67         db  0x80 ; '.'
0000000000008a68         db  0x01 ; '.'
0000000000008a69         db  0x5e ; '^'
0000000000008a6a         db  0x0e ; '.'
0000000000008a6b         db  0x60 ; '`'
0000000000008a6c         db  0x44 ; 'D'
0000000000008a6d         db  0x0a ; '.'
0000000000008a6e         db  0x0e ; '.'
0000000000008a6f         db  0x38 ; '8'
0000000000008a70         db  0x41 ; 'A'
0000000000008a71         db  0x0e ; '.'
0000000000008a72         db  0x30 ; '0'
0000000000008a73         db  0x41 ; 'A'
0000000000008a74         db  0x0e ; '.'
0000000000008a75         db  0x28 ; '('
0000000000008a76         db  0x42 ; 'B'
0000000000008a77         db  0x0e ; '.'
0000000000008a78         db  0x20 ; ' '
0000000000008a79         db  0x42 ; 'B'
0000000000008a7a         db  0x0e ; '.'
0000000000008a7b         db  0x18 ; '.'
0000000000008a7c         db  0x42 ; 'B'
0000000000008a7d         db  0x0e ; '.'
0000000000008a7e         db  0x10 ; '.'
0000000000008a7f         db  0x42 ; 'B'
0000000000008a80         db  0x0e ; '.'
0000000000008a81         db  0x08 ; '.'
0000000000008a82         db  0x41 ; 'A'
0000000000008a83         db  0x0b ; '.'
0000000000008a84         db  0x79 ; 'y'
0000000000008a85         db  0x0a ; '.'
0000000000008a86         db  0x0e ; '.'
0000000000008a87         db  0x68 ; 'h'
0000000000008a88         db  0x42 ; 'B'
0000000000008a89         db  0x0e ; '.'
0000000000008a8a         db  0x70 ; 'p'
0000000000008a8b         db  0x42 ; 'B'
0000000000008a8c         db  0x0e ; '.'
0000000000008a8d         db  0x78 ; 'x'
0000000000008a8e         db  0x42 ; 'B'
0000000000008a8f         db  0x0e ; '.'
0000000000008a90         db  0x80 ; '.'
0000000000008a91         db  0x01 ; '.'
0000000000008a92         db  0x51 ; 'Q'
0000000000008a93         db  0x0b ; '.'
0000000000008a94         dd         0x00000010                                  ; Length of the record
0000000000008a98         dd         0x00000d88                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008a9c         db         0x44, 0xd4, 2 dup (0xff)                    ; begin 0x5ee0
0000000000008aa0         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5f00)
0000000000008aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008aa5         align      8
0000000000008aa8         dd         0x00000018                                  ; Length of the record
0000000000008aac         dd         0x00000d9c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008ab0         db         0x50, 0xd4, 2 dup (0xff)                    ; begin 0x5f00
0000000000008ab4         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5f78)
0000000000008ab8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ab9         db  0x44 ; 'D'
0000000000008aba         db  0x0e ; '.'
0000000000008abb         db  0x70 ; 'p'
0000000000008abc         db  0x02 ; '.'
0000000000008abd         db  0x60 ; '`'
0000000000008abe         db  0x0a ; '.'
0000000000008abf         db  0x0e ; '.'
0000000000008ac0         db  0x08 ; '.'
0000000000008ac1         db  0x41 ; 'A'
0000000000008ac2         db  0x0b ; '.'
0000000000008ac3         db  0x00 ; '.'
0000000000008ac4         dd         0x00000028                                  ; Length of the record
0000000000008ac8         dd         0x00000db8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008acc         db         0xb4, 0xd4, 2 dup (0xff)                    ; begin 0x5f80
0000000000008ad0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6055)
0000000000008ad4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ad5         db  0x41 ; 'A'
0000000000008ad6         db  0x0e ; '.'
0000000000008ad7         db  0x10 ; '.'
0000000000008ad8         db  0x86 ; '.'
0000000000008ad9         db  0x02 ; '.'
0000000000008ada         db  0x41 ; 'A'
0000000000008adb         db  0x0e ; '.'
0000000000008adc         db  0x18 ; '.'
0000000000008add         db  0x83 ; '.'
0000000000008ade         db  0x03 ; '.'
0000000000008adf         db  0x50 ; 'P'
0000000000008ae0         db  0x0e ; '.'
0000000000008ae1         db  0xd0 ; '.'
0000000000008ae2         db  0x01 ; '.'
0000000000008ae3         db  0x02 ; '.'
0000000000008ae4         db  0xab ; '.'
0000000000008ae5         db  0x0a ; '.'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x18 ; '.'
0000000000008ae8         db  0x41 ; 'A'
0000000000008ae9         db  0x0e ; '.'
0000000000008aea         db  0x10 ; '.'
0000000000008aeb         db  0x41 ; 'A'
0000000000008aec         db  0x0e ; '.'
0000000000008aed         db  0x08 ; '.'
0000000000008aee         db  0x41 ; 'A'
0000000000008aef         db  0x0b ; '.'
0000000000008af0         dd         0x0000001c                                  ; Length of the record
0000000000008af4         dd         0x00000de4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008af8         db         0x68, 0xd5, 2 dup (0xff)                    ; begin 0x6060
0000000000008afc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x60e0)
0000000000008b00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b01         db  0x41 ; 'A'
0000000000008b02         db  0x0e ; '.'
0000000000008b03         db  0x10 ; '.'
0000000000008b04         db  0x83 ; '.'
0000000000008b05         db  0x02 ; '.'
0000000000008b06         db  0x02 ; '.'
0000000000008b07         db  0x7a ; 'z'
0000000000008b08         db  0x0e ; '.'
0000000000008b09         db  0x08 ; '.'
0000000000008b0a         db  0x00 ; '.'
0000000000008b0b         db  0x00 ; '.'
0000000000008b0c         db  0x00 ; '.'
0000000000008b0d         db  0x00 ; '.'
0000000000008b0e         db  0x00 ; '.'
0000000000008b0f         db  0x00 ; '.'
0000000000008b10         dd         0x00000018                                  ; Length of the record
0000000000008b14         dd         0x00000e04                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b18         db         0xc8, 0xd5, 2 dup (0xff)                    ; begin 0x60e0
0000000000008b1c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x60fa)
0000000000008b20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b21         db  0x41 ; 'A'
0000000000008b22         db  0x0e ; '.'
0000000000008b23         db  0x10 ; '.'
0000000000008b24         db  0x83 ; '.'
0000000000008b25         db  0x02 ; '.'
0000000000008b26         db  0x53 ; 'S'
0000000000008b27         db  0x0a ; '.'
0000000000008b28         db  0x0e ; '.'
0000000000008b29         db  0x08 ; '.'
0000000000008b2a         db  0x41 ; 'A'
0000000000008b2b         db  0x0b ; '.'
0000000000008b2c         dd         0x00000010                                  ; Length of the record
0000000000008b30         dd         0x00000e20                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b34         db         0xcc, 0xd5, 2 dup (0xff)                    ; begin 0x6100
0000000000008b38         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6124)
0000000000008b3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b3d         db  0x5f ; '_'
0000000000008b3e         db  0x0e ; '.'
0000000000008b3f         db  0x10 ; '.'
0000000000008b40         dd         0x00000010                                  ; Length of the record
0000000000008b44         dd         0x00000e34                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b48         db         0xe8, 0xd5, 2 dup (0xff)                    ; begin 0x6130
0000000000008b4c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6132)
0000000000008b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b51         align      4
0000000000008b54         dd         0x00000020                                  ; Length of the record
0000000000008b58         dd         0x00000e48                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b5c         db         0xe4, 0xd5, 2 dup (0xff)                    ; begin 0x6140
0000000000008b60         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6176)
0000000000008b64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b65         db  0x44 ; 'D'
0000000000008b66         db  0x0e ; '.'
0000000000008b67         db  0x10 ; '.'
0000000000008b68         db  0x83 ; '.'
0000000000008b69         db  0x02 ; '.'
0000000000008b6a         db  0x5d ; ']'
0000000000008b6b         db  0x0a ; '.'
0000000000008b6c         db  0x0e ; '.'
0000000000008b6d         db  0x08 ; '.'
0000000000008b6e         db  0x47 ; 'G'
0000000000008b6f         db  0x0b ; '.'
0000000000008b70         db  0x48 ; 'H'
0000000000008b71         db  0x0a ; '.'
0000000000008b72         db  0x0e ; '.'
0000000000008b73         db  0x08 ; '.'
0000000000008b74         db  0x41 ; 'A'
0000000000008b75         db  0x0b ; '.'
0000000000008b76         db  0x00 ; '.'
0000000000008b77         db  0x00 ; '.'
0000000000008b78         dd         0x00000010                                  ; Length of the record
0000000000008b7c         dd         0x00000e6c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b80         db         0x00, 0xd6, 2 dup (0xff)                    ; begin 0x6180
0000000000008b84         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x61a4)
0000000000008b88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b89         db  0x5f ; '_'
0000000000008b8a         db  0x0e ; '.'
0000000000008b8b         db  0x10 ; '.'
0000000000008b8c         dd         0x00000014                                  ; Length of the record
0000000000008b90         dd         0x00000e80                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008b94         db         0x1c, 0xd6, 2 dup (0xff)                    ; begin 0x61b0
0000000000008b98         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x6232)
0000000000008b9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b9d         db  0x02 ; '.'
0000000000008b9e         db  0x5f ; '_'
0000000000008b9f         db  0x0e ; '.'
0000000000008ba0         db  0x10 ; '.'
0000000000008ba1         db  0x49 ; 'I'
0000000000008ba2         db  0x0e ; '.'
0000000000008ba3         db  0x08 ; '.'
0000000000008ba4         dd         0x00000014                                  ; Length of the record
0000000000008ba8         dd         0x00000e98                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008bac         db         0x94, 0xd6, 2 dup (0xff)                    ; begin 0x6240
0000000000008bb0         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x628a)
0000000000008bb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bb5         db  0x02 ; '.'
0000000000008bb6         db  0x45 ; 'E'
0000000000008bb7         db  0x0e ; '.'
0000000000008bb8         db  0x10 ; '.'
0000000000008bb9         db  0x00 ; '.'
0000000000008bba         db  0x00 ; '.'
0000000000008bbb         db  0x00 ; '.'
0000000000008bbc         dd         0x00000018                                  ; Length of the record
0000000000008bc0         dd         0x00000eb0                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008bc4         db         0xcc, 0xd6, 2 dup (0xff)                    ; begin 0x6290
0000000000008bc8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x62a7)
0000000000008bcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bcd         db  0x41 ; 'A'
0000000000008bce         db  0x0e ; '.'
0000000000008bcf         db  0x10 ; '.'
0000000000008bd0         db  0x83 ; '.'
0000000000008bd1         db  0x02 ; '.'
0000000000008bd2         db  0x51 ; 'Q'
0000000000008bd3         db  0x0e ; '.'
0000000000008bd4         db  0x08 ; '.'
0000000000008bd5         db  0x00 ; '.'
0000000000008bd6         db  0x00 ; '.'
0000000000008bd7         db  0x00 ; '.'
0000000000008bd8         dd         0x00000018                                  ; Length of the record
0000000000008bdc         dd         0x00000ecc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008be0         db         0xd0, 0xd6, 2 dup (0xff)                    ; begin 0x62b0
0000000000008be4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x62de)
0000000000008be8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008be9         db  0x47 ; 'G'
0000000000008bea         db  0x0e ; '.'
0000000000008beb         db  0x10 ; '.'
0000000000008bec         db  0x61 ; 'a'
0000000000008bed         db  0x0a ; '.'
0000000000008bee         db  0x0e ; '.'
0000000000008bef         db  0x08 ; '.'
0000000000008bf0         db  0x41 ; 'A'
0000000000008bf1         db  0x0b ; '.'
0000000000008bf2         db  0x00 ; '.'
0000000000008bf3         db  0x00 ; '.'
0000000000008bf4         dd         0x00000024                                  ; Length of the record
0000000000008bf8         dd         0x00000ee8                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008bfc         db         0xe4, 0xd6, 2 dup (0xff)                    ; begin 0x62e0
0000000000008c00         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x6308)
0000000000008c04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c05         db  0x41 ; 'A'
0000000000008c06         db  0x0e ; '.'
0000000000008c07         db  0x10 ; '.'
0000000000008c08         db  0x86 ; '.'
0000000000008c09         db  0x02 ; '.'
0000000000008c0a         db  0x41 ; 'A'
0000000000008c0b         db  0x0e ; '.'
0000000000008c0c         db  0x18 ; '.'
0000000000008c0d         db  0x83 ; '.'
0000000000008c0e         db  0x03 ; '.'
0000000000008c0f         db  0x4d ; 'M'
0000000000008c10         db  0x0e ; '.'
0000000000008c11         db  0x20 ; ' '
0000000000008c12         db  0x49 ; 'I'
0000000000008c13         db  0x0e ; '.'
0000000000008c14         db  0x18 ; '.'
0000000000008c15         db  0x47 ; 'G'
0000000000008c16         db  0x0e ; '.'
0000000000008c17         db  0x10 ; '.'
0000000000008c18         db  0x41 ; 'A'
0000000000008c19         db  0x0e ; '.'
0000000000008c1a         db  0x08 ; '.'
0000000000008c1b         db  0x00 ; '.'
0000000000008c1c         dd         0x00000018                                  ; Length of the record
0000000000008c20         dd         0x00000f10                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008c24         db         0xec, 0xd6, 2 dup (0xff)                    ; begin 0x6310
0000000000008c28         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6323)
0000000000008c2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c2d         db  0x41 ; 'A'
0000000000008c2e         db  0x0e ; '.'
0000000000008c2f         db  0x10 ; '.'
0000000000008c30         db  0x83 ; '.'
0000000000008c31         db  0x02 ; '.'
0000000000008c32         db  0x50 ; 'P'
0000000000008c33         db  0x0e ; '.'
0000000000008c34         db  0x08 ; '.'
0000000000008c35         db  0x00 ; '.'
0000000000008c36         db  0x00 ; '.'
0000000000008c37         db  0x00 ; '.'
0000000000008c38         dd         0x00000014                                  ; Length of the record
0000000000008c3c         dd         0x00000f2c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008c40         db         0xf0, 0xd6, 2 dup (0xff)                    ; begin 0x6330
0000000000008c44         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6365)
0000000000008c48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c49         db  0x4b ; 'K'
0000000000008c4a         db  0x0e ; '.'
0000000000008c4b         db  0x10 ; '.'
0000000000008c4c         db  0x00 ; '.'
0000000000008c4d         db  0x00 ; '.'
0000000000008c4e         db  0x00 ; '.'
0000000000008c4f         db  0x00 ; '.'
0000000000008c50         dd         0x0000001c                                  ; Length of the record
0000000000008c54         dd         0x00000f44                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008c58         db         0x18, 0xd7, 2 dup (0xff)                    ; begin 0x6370
0000000000008c5c         db         0x2f, 3 dup (0x00)                          ; length 0x2f (end at 0x639f)
0000000000008c60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c61         db  0x41 ; 'A'
0000000000008c62         db  0x0e ; '.'
0000000000008c63         db  0x10 ; '.'
0000000000008c64         db  0x83 ; '.'
0000000000008c65         db  0x02 ; '.'
0000000000008c66         db  0x55 ; 'U'
0000000000008c67         db  0x0a ; '.'
0000000000008c68         db  0x0e ; '.'
0000000000008c69         db  0x08 ; '.'
0000000000008c6a         db  0x4a ; 'J'
0000000000008c6b         db  0x0b ; '.'
0000000000008c6c         db  0x00 ; '.'
0000000000008c6d         db  0x00 ; '.'
0000000000008c6e         db  0x00 ; '.'
0000000000008c6f         db  0x00 ; '.'
0000000000008c70         dd         0x0000003c                                  ; Length of the record
0000000000008c74         dd         0x00000f64                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008c78         db         0x28, 0xd7, 2 dup (0xff)                    ; begin 0x63a0
0000000000008c7c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6423)
0000000000008c80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c81         db  0x42 ; 'B'
0000000000008c82         db  0x0e ; '.'
0000000000008c83         db  0x10 ; '.'
0000000000008c84         db  0x8d ; '.'
0000000000008c85         db  0x02 ; '.'
0000000000008c86         db  0x42 ; 'B'
0000000000008c87         db  0x0e ; '.'
0000000000008c88         db  0x18 ; '.'
0000000000008c89         db  0x8c ; '.'
0000000000008c8a         db  0x03 ; '.'
0000000000008c8b         db  0x44 ; 'D'
0000000000008c8c         db  0x0e ; '.'
0000000000008c8d         db  0x20 ; ' '
0000000000008c8e         db  0x86 ; '.'
0000000000008c8f         db  0x04 ; '.'
0000000000008c90         db  0x41 ; 'A'
0000000000008c91         db  0x0e ; '.'
0000000000008c92         db  0x28 ; '('
0000000000008c93         db  0x83 ; '.'
0000000000008c94         db  0x05 ; '.'
0000000000008c95         db  0x4a ; 'J'
0000000000008c96         db  0x0e ; '.'
0000000000008c97         db  0x40 ; '@'
0000000000008c98         db  0x02 ; '.'
0000000000008c99         db  0x64 ; 'd'
0000000000008c9a         db  0x0a ; '.'
0000000000008c9b         db  0x0e ; '.'
0000000000008c9c         db  0x28 ; '('
0000000000008c9d         db  0x41 ; 'A'
0000000000008c9e         db  0x0e ; '.'
0000000000008c9f         db  0x20 ; ' '
0000000000008ca0         db  0x41 ; 'A'
0000000000008ca1         db  0x0e ; '.'
0000000000008ca2         db  0x18 ; '.'
0000000000008ca3         db  0x42 ; 'B'
0000000000008ca4         db  0x0e ; '.'
0000000000008ca5         db  0x10 ; '.'
0000000000008ca6         db  0x42 ; 'B'
0000000000008ca7         db  0x0e ; '.'
0000000000008ca8         db  0x08 ; '.'
0000000000008ca9         db  0x41 ; 'A'
0000000000008caa         db  0x0b ; '.'
0000000000008cab         db  0x00 ; '.'
0000000000008cac         db  0x00 ; '.'
0000000000008cad         db  0x00 ; '.'
0000000000008cae         db  0x00 ; '.'
0000000000008caf         db  0x00 ; '.'
0000000000008cb0         dd         0x0000004c                                  ; Length of the record
0000000000008cb4         dd         0x00000fa4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008cb8         db         0x78, 0xd7, 2 dup (0xff)                    ; begin 0x6430
0000000000008cbc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x64ad)
0000000000008cc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cc1         db  0x42 ; 'B'
0000000000008cc2         db  0x0e ; '.'
0000000000008cc3         db  0x10 ; '.'
0000000000008cc4         db  0x8c ; '.'
0000000000008cc5         db  0x02 ; '.'
0000000000008cc6         db  0x41 ; 'A'
0000000000008cc7         db  0x0e ; '.'
0000000000008cc8         db  0x18 ; '.'
0000000000008cc9         db  0x86 ; '.'
0000000000008cca         db  0x03 ; '.'
0000000000008ccb         db  0x44 ; 'D'
0000000000008ccc         db  0x0e ; '.'
0000000000008ccd         db  0x20 ; ' '
0000000000008cce         db  0x83 ; '.'
0000000000008ccf         db  0x04 ; '.'
0000000000008cd0         db  0x69 ; 'i'
0000000000008cd1         db  0x0a ; '.'
0000000000008cd2         db  0x0e ; '.'
0000000000008cd3         db  0x18 ; '.'
0000000000008cd4         db  0x41 ; 'A'
0000000000008cd5         db  0x0e ; '.'
0000000000008cd6         db  0x10 ; '.'
0000000000008cd7         db  0x42 ; 'B'
0000000000008cd8         db  0x0e ; '.'
0000000000008cd9         db  0x08 ; '.'
0000000000008cda         db  0x45 ; 'E'
0000000000008cdb         db  0x0b ; '.'
0000000000008cdc         db  0x55 ; 'U'
0000000000008cdd         db  0x0a ; '.'
0000000000008cde         db  0x0e ; '.'
0000000000008cdf         db  0x18 ; '.'
0000000000008ce0         db  0x41 ; 'A'
0000000000008ce1         db  0x0e ; '.'
0000000000008ce2         db  0x10 ; '.'
0000000000008ce3         db  0x42 ; 'B'
0000000000008ce4         db  0x0e ; '.'
0000000000008ce5         db  0x08 ; '.'
0000000000008ce6         db  0x48 ; 'H'
0000000000008ce7         db  0x0b ; '.'
0000000000008ce8         db  0x41 ; 'A'
0000000000008ce9         db  0x0a ; '.'
0000000000008cea         db  0x0e ; '.'
0000000000008ceb         db  0x18 ; '.'
0000000000008cec         db  0x46 ; 'F'
0000000000008ced         db  0x0e ; '.'
0000000000008cee         db  0x10 ; '.'
0000000000008cef         db  0x42 ; 'B'
0000000000008cf0         db  0x0e ; '.'
0000000000008cf1         db  0x08 ; '.'
0000000000008cf2         db  0x47 ; 'G'
0000000000008cf3         db  0x0b ; '.'
0000000000008cf4         db  0x49 ; 'I'
0000000000008cf5         db  0x0e ; '.'
0000000000008cf6         db  0x18 ; '.'
0000000000008cf7         db  0x41 ; 'A'
0000000000008cf8         db  0x0e ; '.'
0000000000008cf9         db  0x10 ; '.'
0000000000008cfa         db  0x42 ; 'B'
0000000000008cfb         db  0x0e ; '.'
0000000000008cfc         db  0x08 ; '.'
0000000000008cfd         db  0x00 ; '.'
0000000000008cfe         db  0x00 ; '.'
0000000000008cff         db  0x00 ; '.'
0000000000008d00         dd         0x0000001c                                  ; Length of the record
0000000000008d04         dd         0x00000ff4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008d08         db         0xa8, 0xd7, 2 dup (0xff)                    ; begin 0x64b0
0000000000008d0c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x64c8)
0000000000008d10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d11         db  0x44 ; 'D'
0000000000008d12         db  0x0e ; '.'
0000000000008d13         db  0x10 ; '.'
0000000000008d14         db  0x4e ; 'N'
0000000000008d15         db  0x0a ; '.'
0000000000008d16         db  0x0e ; '.'
0000000000008d17         db  0x08 ; '.'
0000000000008d18         db  0x41 ; 'A'
0000000000008d19         db  0x0b ; '.'
0000000000008d1a         db  0x00 ; '.'
0000000000008d1b         db  0x00 ; '.'
0000000000008d1c         db  0x00 ; '.'
0000000000008d1d         db  0x00 ; '.'
0000000000008d1e         db  0x00 ; '.'
0000000000008d1f         db  0x00 ; '.'
0000000000008d20         dd         0x00000030                                  ; Length of the record
0000000000008d24         dd         0x00001014                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008d28         db         0xa8, 0xd7, 2 dup (0xff)                    ; begin 0x64d0
0000000000008d2c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x652d)
0000000000008d30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d31         db  0x41 ; 'A'
0000000000008d32         db  0x0e ; '.'
0000000000008d33         db  0x10 ; '.'
0000000000008d34         db  0x86 ; '.'
0000000000008d35         db  0x02 ; '.'
0000000000008d36         db  0x41 ; 'A'
0000000000008d37         db  0x0e ; '.'
0000000000008d38         db  0x18 ; '.'
0000000000008d39         db  0x83 ; '.'
0000000000008d3a         db  0x03 ; '.'
0000000000008d3b         db  0x49 ; 'I'
0000000000008d3c         db  0x0e ; '.'
0000000000008d3d         db  0x20 ; ' '
0000000000008d3e         db  0x7c ; '|'
0000000000008d3f         db  0x0a ; '.'
0000000000008d40         db  0x0e ; '.'
0000000000008d41         db  0x18 ; '.'
0000000000008d42         db  0x44 ; 'D'
0000000000008d43         db  0x0e ; '.'
0000000000008d44         db  0x10 ; '.'
0000000000008d45         db  0x41 ; 'A'
0000000000008d46         db  0x0e ; '.'
0000000000008d47         db  0x08 ; '.'
0000000000008d48         db  0x44 ; 'D'
0000000000008d49         db  0x0b ; '.'
0000000000008d4a         db  0x44 ; 'D'
0000000000008d4b         db  0x0e ; '.'
0000000000008d4c         db  0x18 ; '.'
0000000000008d4d         db  0x47 ; 'G'
0000000000008d4e         db  0x0e ; '.'
0000000000008d4f         db  0x10 ; '.'
0000000000008d50         db  0x41 ; 'A'
0000000000008d51         db  0x0e ; '.'
0000000000008d52         db  0x08 ; '.'
0000000000008d53         db  0x00 ; '.'
0000000000008d54         dd         0x00000028                                  ; Length of the record
0000000000008d58         dd         0x00001048                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008d5c         db         0xd4, 0xd7, 2 dup (0xff)                    ; begin 0x6530
0000000000008d60         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x658a)
0000000000008d64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d65         db  0x41 ; 'A'
0000000000008d66         db  0x0e ; '.'
0000000000008d67         db  0x10 ; '.'
0000000000008d68         db  0x86 ; '.'
0000000000008d69         db  0x02 ; '.'
0000000000008d6a         db  0x41 ; 'A'
0000000000008d6b         db  0x0e ; '.'
0000000000008d6c         db  0x18 ; '.'
0000000000008d6d         db  0x83 ; '.'
0000000000008d6e         db  0x03 ; '.'
0000000000008d6f         db  0x47 ; 'G'
0000000000008d70         db  0x0e ; '.'
0000000000008d71         db  0x20 ; ' '
0000000000008d72         db  0x02 ; '.'
0000000000008d73         db  0x41 ; 'A'
0000000000008d74         db  0x0a ; '.'
0000000000008d75         db  0x0e ; '.'
0000000000008d76         db  0x18 ; '.'
0000000000008d77         db  0x44 ; 'D'
0000000000008d78         db  0x0e ; '.'
0000000000008d79         db  0x10 ; '.'
0000000000008d7a         db  0x41 ; 'A'
0000000000008d7b         db  0x0e ; '.'
0000000000008d7c         db  0x08 ; '.'
0000000000008d7d         db  0x41 ; 'A'
0000000000008d7e         db  0x0b ; '.'
0000000000008d7f         db  0x00 ; '.'
0000000000008d80         dd         0x00000010                                  ; Length of the record
0000000000008d84         dd         0x00001074                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008d88         db         0x08, 0xd8, 2 dup (0xff)                    ; begin 0x6590
0000000000008d8c         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x65ec)
0000000000008d90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d91         align      4
0000000000008d94         dd         0x00000028                                  ; Length of the record
0000000000008d98         dd         0x00001088                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008d9c         db         0x54, 0xd8, 2 dup (0xff)                    ; begin 0x65f0
0000000000008da0         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x6637)
0000000000008da4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008da5         db  0x41 ; 'A'
0000000000008da6         db  0x0e ; '.'
0000000000008da7         db  0x10 ; '.'
0000000000008da8         db  0x83 ; '.'
0000000000008da9         db  0x02 ; '.'
0000000000008daa         db  0x5a ; 'Z'
0000000000008dab         db  0x0a ; '.'
0000000000008dac         db  0x0e ; '.'
0000000000008dad         db  0x08 ; '.'
0000000000008dae         db  0x45 ; 'E'
0000000000008daf         db  0x0b ; '.'
0000000000008db0         db  0x5d ; ']'
0000000000008db1         db  0x0a ; '.'
0000000000008db2         db  0x0e ; '.'
0000000000008db3         db  0x08 ; '.'
0000000000008db4         db  0x43 ; 'C'
0000000000008db5         db  0x0b ; '.'
0000000000008db6         db  0x46 ; 'F'
0000000000008db7         db  0x0e ; '.'
0000000000008db8         db  0x08 ; '.'
0000000000008db9         db  0x00 ; '.'
0000000000008dba         db  0x00 ; '.'
0000000000008dbb         db  0x00 ; '.'
0000000000008dbc         db  0x00 ; '.'
0000000000008dbd         db  0x00 ; '.'
0000000000008dbe         db  0x00 ; '.'
0000000000008dbf         db  0x00 ; '.'
0000000000008dc0         dd         0x0000001c                                  ; Length of the record
0000000000008dc4         dd         0x000010b4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008dc8         db         0x78, 0xd8, 2 dup (0xff)                    ; begin 0x6640
0000000000008dcc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x66a0)
0000000000008dd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dd1         db  0x44 ; 'D'
0000000000008dd2         db  0x0e ; '.'
0000000000008dd3         db  0x10 ; '.'
0000000000008dd4         db  0x75 ; 'u'
0000000000008dd5         db  0x0a ; '.'
0000000000008dd6         db  0x0e ; '.'
0000000000008dd7         db  0x08 ; '.'
0000000000008dd8         db  0x47 ; 'G'
0000000000008dd9         db  0x0b ; '.'
0000000000008dda         db  0x5f ; '_'
0000000000008ddb         db  0x0e ; '.'
0000000000008ddc         db  0x08 ; '.'
0000000000008ddd         db  0x00 ; '.'
0000000000008dde         db  0x00 ; '.'
0000000000008ddf         db  0x00 ; '.'
0000000000008de0         dd         0x00000014                                  ; Length of the record
0000000000008de4         dd         0x000010d4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008de8         db         0xb8, 0xd8, 2 dup (0xff)                    ; begin 0x66a0
0000000000008dec         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x66d6)
0000000000008df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008df1         align      8
0000000000008df8         dd         0x0000001c                                  ; Length of the record
0000000000008dfc         dd         0x000010ec                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008e00         db         0xe0, 0xd8, 2 dup (0xff)                    ; begin 0x66e0
0000000000008e04         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x671c)
0000000000008e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e09         db  0x44 ; 'D'
0000000000008e0a         db  0x0e ; '.'
0000000000008e0b         db  0x10 ; '.'
0000000000008e0c         db  0x61 ; 'a'
0000000000008e0d         db  0x0a ; '.'
0000000000008e0e         db  0x0e ; '.'
0000000000008e0f         db  0x08 ; '.'
0000000000008e10         db  0x4b ; 'K'
0000000000008e11         db  0x0b ; '.'
0000000000008e12         db  0x4b ; 'K'
0000000000008e13         db  0x0e ; '.'
0000000000008e14         db  0x08 ; '.'
0000000000008e15         db  0x00 ; '.'
0000000000008e16         db  0x00 ; '.'
0000000000008e17         db  0x00 ; '.'
0000000000008e18         dd         0x00000034                                  ; Length of the record
0000000000008e1c         dd         0x0000110c                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008e20         db         0x00, 0xd9, 2 dup (0xff)                    ; begin 0x6720
0000000000008e24         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x679b)
0000000000008e28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e29         db  0x42 ; 'B'
0000000000008e2a         db  0x0e ; '.'
0000000000008e2b         db  0x10 ; '.'
0000000000008e2c         db  0x8c ; '.'
0000000000008e2d         db  0x02 ; '.'
0000000000008e2e         db  0x41 ; 'A'
0000000000008e2f         db  0x0e ; '.'
0000000000008e30         db  0x18 ; '.'
0000000000008e31         db  0x86 ; '.'
0000000000008e32         db  0x03 ; '.'
0000000000008e33         db  0x41 ; 'A'
0000000000008e34         db  0x0e ; '.'
0000000000008e35         db  0x20 ; ' '
0000000000008e36         db  0x83 ; '.'
0000000000008e37         db  0x04 ; '.'
0000000000008e38         db  0x7d ; '}'
0000000000008e39         db  0x0a ; '.'
0000000000008e3a         db  0x0e ; '.'
0000000000008e3b         db  0x18 ; '.'
0000000000008e3c         db  0x41 ; 'A'
0000000000008e3d         db  0x0e ; '.'
0000000000008e3e         db  0x10 ; '.'
0000000000008e3f         db  0x42 ; 'B'
0000000000008e40         db  0x0e ; '.'
0000000000008e41         db  0x08 ; '.'
0000000000008e42         db  0x44 ; 'D'
0000000000008e43         db  0x0b ; '.'
0000000000008e44         db  0x60 ; '`'
0000000000008e45         db  0x0a ; '.'
0000000000008e46         db  0x0e ; '.'
0000000000008e47         db  0x18 ; '.'
0000000000008e48         db  0x41 ; 'A'
0000000000008e49         db  0x0e ; '.'
0000000000008e4a         db  0x10 ; '.'
0000000000008e4b         db  0x42 ; 'B'
0000000000008e4c         db  0x0e ; '.'
0000000000008e4d         db  0x08 ; '.'
0000000000008e4e         db  0x45 ; 'E'
0000000000008e4f         db  0x0b ; '.'
0000000000008e50         dd         0x0000001c                                  ; Length of the record
0000000000008e54         dd         0x00001144                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008e58         db         0x48, 0xd9, 2 dup (0xff)                    ; begin 0x67a0
0000000000008e5c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x67e0)
0000000000008e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e61         db  0x44 ; 'D'
0000000000008e62         db  0x0e ; '.'
0000000000008e63         db  0x10 ; '.'
0000000000008e64         db  0x83 ; '.'
0000000000008e65         db  0x02 ; '.'
0000000000008e66         db  0x5a ; 'Z'
0000000000008e67         db  0x0a ; '.'
0000000000008e68         db  0x0e ; '.'
0000000000008e69         db  0x08 ; '.'
0000000000008e6a         db  0x4a ; 'J'
0000000000008e6b         db  0x0b ; '.'
0000000000008e6c         db  0x53 ; 'S'
0000000000008e6d         db  0x0e ; '.'
0000000000008e6e         db  0x08 ; '.'
0000000000008e6f         db  0x00 ; '.'
0000000000008e70         dd         0x0000002c                                  ; Length of the record
0000000000008e74         dd         0x00001164                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008e78         db         0x68, 0xd9, 2 dup (0xff)                    ; begin 0x67e0
0000000000008e7c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6837)
0000000000008e80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e81         db  0x63 ; 'c'
0000000000008e82         db  0x0e ; '.'
0000000000008e83         db  0x10 ; '.'
0000000000008e84         db  0x8c ; '.'
0000000000008e85         db  0x02 ; '.'
0000000000008e86         db  0x41 ; 'A'
0000000000008e87         db  0x0e ; '.'
0000000000008e88         db  0x18 ; '.'
0000000000008e89         db  0x86 ; '.'
0000000000008e8a         db  0x03 ; '.'
0000000000008e8b         db  0x44 ; 'D'
0000000000008e8c         db  0x0e ; '.'
0000000000008e8d         db  0x20 ; ' '
0000000000008e8e         db  0x83 ; '.'
0000000000008e8f         db  0x04 ; '.'
0000000000008e90         db  0x6b ; 'k'
0000000000008e91         db  0x0e ; '.'
0000000000008e92         db  0x18 ; '.'
0000000000008e93         db  0x41 ; 'A'
0000000000008e94         db  0x0e ; '.'
0000000000008e95         db  0x10 ; '.'
0000000000008e96         db  0x42 ; 'B'
0000000000008e97         db  0x0e ; '.'
0000000000008e98         db  0x08 ; '.'
0000000000008e99         db  0x00 ; '.'
0000000000008e9a         db  0x00 ; '.'
0000000000008e9b         db  0x00 ; '.'
0000000000008e9c         db  0x00 ; '.'
0000000000008e9d         db  0x00 ; '.'
0000000000008e9e         db  0x00 ; '.'
0000000000008e9f         db  0x00 ; '.'
0000000000008ea0         dd         0x00000044                                  ; Length of the record
0000000000008ea4         dd         0x00001194                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008ea8         db         0x98, 0xd9, 2 dup (0xff)                    ; begin 0x6840
0000000000008eac         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x68a5)
0000000000008eb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008eb1         db  0x42 ; 'B'
0000000000008eb2         db  0x0e ; '.'
0000000000008eb3         db  0x10 ; '.'
0000000000008eb4         db  0x8f ; '.'
0000000000008eb5         db  0x02 ; '.'
0000000000008eb6         db  0x42 ; 'B'
0000000000008eb7         db  0x0e ; '.'
0000000000008eb8         db  0x18 ; '.'
0000000000008eb9         db  0x8e ; '.'
0000000000008eba         db  0x03 ; '.'
0000000000008ebb         db  0x45 ; 'E'
0000000000008ebc         db  0x0e ; '.'
0000000000008ebd         db  0x20 ; ' '
0000000000008ebe         db  0x8d ; '.'
0000000000008ebf         db  0x04 ; '.'
0000000000008ec0         db  0x42 ; 'B'
0000000000008ec1         db  0x0e ; '.'
0000000000008ec2         db  0x28 ; '('
0000000000008ec3         db  0x8c ; '.'
0000000000008ec4         db  0x05 ; '.'
0000000000008ec5         db  0x48 ; 'H'
0000000000008ec6         db  0x0e ; '.'
0000000000008ec7         db  0x30 ; '0'
0000000000008ec8         db  0x86 ; '.'
0000000000008ec9         db  0x06 ; '.'
0000000000008eca         db  0x48 ; 'H'
0000000000008ecb         db  0x0e ; '.'
0000000000008ecc         db  0x38 ; '8'
0000000000008ecd         db  0x83 ; '.'
0000000000008ece         db  0x07 ; '.'
0000000000008ecf         db  0x4d ; 'M'
0000000000008ed0         db  0x0e ; '.'
0000000000008ed1         db  0x40 ; '@'
0000000000008ed2         db  0x72 ; 'r'
0000000000008ed3         db  0x0e ; '.'
0000000000008ed4         db  0x38 ; '8'
0000000000008ed5         db  0x41 ; 'A'
0000000000008ed6         db  0x0e ; '.'
0000000000008ed7         db  0x30 ; '0'
0000000000008ed8         db  0x41 ; 'A'
0000000000008ed9         db  0x0e ; '.'
0000000000008eda         db  0x28 ; '('
0000000000008edb         db  0x42 ; 'B'
0000000000008edc         db  0x0e ; '.'
0000000000008edd         db  0x20 ; ' '
0000000000008ede         db  0x42 ; 'B'
0000000000008edf         db  0x0e ; '.'
0000000000008ee0         db  0x18 ; '.'
0000000000008ee1         db  0x42 ; 'B'
0000000000008ee2         db  0x0e ; '.'
0000000000008ee3         db  0x10 ; '.'
0000000000008ee4         db  0x42 ; 'B'
0000000000008ee5         db  0x0e ; '.'
0000000000008ee6         db  0x08 ; '.'
0000000000008ee7         db  0x00 ; '.'
0000000000008ee8         dd         0x00000014                                  ; Length of the record
0000000000008eec         dd         0x000011dc                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008ef0         db         0xc0, 0xd9, 2 dup (0xff)                    ; begin 0x68b0
0000000000008ef4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x68b2)
0000000000008ef8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ef9         align      256
0000000000008f00         dd         0x00000010                                  ; Length of the record
0000000000008f04         dd         0x000011f4                                  ; FDE: parent CIE at 0x7d10 (FDE encoding = 0x1B)
0000000000008f08         db         0xb8, 0xd9, 2 dup (0xff)                    ; begin 0x68c0
0000000000008f0c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x68ce)
0000000000008f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f11         align      8


        ; Segment Segment 3
        ; Range: [0x209a70; 0x20a218[ (1960 bytes)
        ; File offset : [39536; 41088[ (1552 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a70; 0x209a78[ (8 bytes)
        ; File offset : [39536; 39544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a70         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a78; 0x209a80[ (8 bytes)
        ; File offset : [39544; 39552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a78         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a80; 0x209c38[ (440 bytes)
        ; File offset : [39552; 39992[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000209a80         db  0xd1 ; '.'                                         ; DATA XREF=main+96
0000000000209a81         db  0x69 ; 'i'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x00 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x66 ; 'f'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0xde ; '.'
0000000000209aa1         db  0x69 ; 'i'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x00 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x65 ; 'e'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0xf4 ; '.'
0000000000209ac1         db  0x69 ; 'i'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x00 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x6d ; 'm'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x09 ; '.'
0000000000209ae1         db  0x6a ; 'j'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x6e ; 'n'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x14 ; '.'
0000000000209b01         db  0x6a ; 'j'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x71 ; 'q'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x1a ; '.'
0000000000209b21         db  0x6a ; 'j'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x73 ; 's'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x21 ; '!'
0000000000209b41         db  0x6a ; 'j'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x76 ; 'v'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0x29 ; ')'
0000000000209b61         db  0x6a ; 'j'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x7a ; 'z'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x2e ; '.'
0000000000209b81         db  0x6a ; 'j'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x7e ; '~'
0000000000209b99         db  0xff ; '.'
0000000000209b9a         db  0xff ; '.'
0000000000209b9b         db  0xff ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0x33 ; '3'
0000000000209ba1         db  0x6a ; 'j'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x00 ; '.'
0000000000209ba9         db  0x00 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x7d ; '}'
0000000000209bb9         db  0xff ; '.'
0000000000209bba         db  0xff ; '.'
0000000000209bbb         db  0xff ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x00 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x00 ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x00 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209be0         db  0xe9 ; '.'
0000000000209be1         db  0x70 ; 'p'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0xf1 ; '.'
0000000000209be9         db  0x70 ; 'p'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0xf7 ; '.'
0000000000209bf1         db  0x70 ; 'p'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x04 ; '.'
0000000000209bf9         db  0x71 ; 'q'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x11 ; '.'
0000000000209c01         db  0x71 ; 'q'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x25 ; '%'
0000000000209c09         db  0x71 ; 'q'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x27 ; '''
0000000000209c11         db  0x71 ; 'q'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x0a ; '.'
0000000000209c19         db  0x71 ; 'q'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0xa1 ; '.'
0000000000209c21         db  0x69 ; 'i'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x2f ; '/'
0000000000209c29         db  0x71 ; 'q'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x00 ; '.'
0000000000209c31         db  0x00 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c38; 0x209e28[ (496 bytes)
        ; File offset : [39992; 40488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c38         db  0x01 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x01 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x0c ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x10 ; '.'
0000000000209c51         db  0x14 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0d ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0xd0 ; '.'
0000000000209c61         db  0x68 ; 'h'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x19 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x70 ; 'p'
0000000000209c71         db  0x9a ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1b ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x1a ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x78 ; 'x'
0000000000209c91         db  0x9a ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x1c ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x08 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0xf5 ; '.'
0000000000209ca9         db  0xfe ; '.'
0000000000209caa         db  0xff ; '.'
0000000000209cab         db  0x6f ; 'o'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x98 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x05 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0x90 ; '.'
0000000000209cc1         db  0x08 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x06 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0xd8 ; '.'
0000000000209cd1         db  0x02 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x0a ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xc5 ; '.'
0000000000209ce1         db  0x02 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x0b ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x15 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x00 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x03 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x28 ; '('
0000000000209d11         db  0x9e ; '.'
0000000000209d12         db  0x20 ; ' '
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x02 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x80 ; '.'
0000000000209d21         db  0x04 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x14 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x07 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x17 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x90 ; '.'
0000000000209d41         db  0x0f ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x07 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x30 ; '0'
0000000000209d51         db  0x0c ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x08 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x60 ; '`'
0000000000209d61         db  0x03 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x09 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x18 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x1e ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x08 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xfb ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x08 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xfe ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0xd0 ; '.'
0000000000209da1         db  0x0b ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xff ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x01 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0xf0 ; '.'
0000000000209db9         db  0xff ; '.'
0000000000209dba         db  0xff ; '.'
0000000000209dbb         db  0x6f ; 'o'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x56 ; 'V'
0000000000209dc1         db  0x0b ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0xf9 ; '.'
0000000000209dc9         db  0xff ; '.'
0000000000209dca         db  0xff ; '.'
0000000000209dcb         db  0x6f ; 'o'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x1a ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'
0000000000209e08         db  0x00 ; '.'
0000000000209e09         db  0x00 ; '.'
0000000000209e0a         db  0x00 ; '.'
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
0000000000209e10         db  0x00 ; '.'
0000000000209e11         db  0x00 ; '.'
0000000000209e12         db  0x00 ; '.'
0000000000209e13         db  0x00 ; '.'
0000000000209e14         db  0x00 ; '.'
0000000000209e15         db  0x00 ; '.'
0000000000209e16         db  0x00 ; '.'
0000000000209e17         db  0x00 ; '.'
0000000000209e18         db  0x00 ; '.'
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
0000000000209e20         db  0x00 ; '.'
0000000000209e21         db  0x00 ; '.'
0000000000209e22         db  0x00 ; '.'
0000000000209e23         db  0x00 ; '.'
0000000000209e24         db  0x00 ; '.'
0000000000209e25         db  0x00 ; '.'
0000000000209e26         db  0x00 ; '.'
0000000000209e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e28; 0x209fe8[ (448 bytes)
        ; File offset : [40488; 40936[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e28         db  0x38 ; '8'
0000000000209e29         db  0x9c ; '.'
0000000000209e2a         db  0x20 ; ' '
0000000000209e2b         db  0x00 ; '.'
0000000000209e2c         db  0x00 ; '.'
0000000000209e2d         db  0x00 ; '.'
0000000000209e2e         db  0x00 ; '.'
0000000000209e2f         db  0x00 ; '.'
                     qword_209e30:
0000000000209e30         dq         0x0000000000000000                          ; DATA XREF=0x1430
0000000000209e38         db  0x00 ; '.'                                         ; DATA XREF=0x1436
0000000000209e39         db  0x00 ; '.'
0000000000209e3a         db  0x00 ; '.'
0000000000209e3b         db  0x00 ; '.'
0000000000209e3c         db  0x00 ; '.'
0000000000209e3d         db  0x00 ; '.'
0000000000209e3e         db  0x00 ; '.'
0000000000209e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000209e40         dq         0x000000000020a220                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e48         dq         0x000000000020a228                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e50         dq         0x000000000020a230                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e58         dq         0x000000000020a238                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e60         dq         0x000000000020a248                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e68         dq         0x000000000020a250                          ; DATA XREF=j___fpending
                     readlink@GOT:        // readlink
0000000000209e70         dq         0x000000000020a258                          ; DATA XREF=j_readlink
                     textdomain@GOT:        // textdomain
0000000000209e78         dq         0x000000000020a260                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e80         dq         0x000000000020a268                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e88         dq         0x000000000020a270                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e90         dq         0x000000000020a278                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e98         dq         0x000000000020a280                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209ea0         dq         0x000000000020a288                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
0000000000209ea8         dq         0x000000000020a290                          ; DATA XREF=j___lxstat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209eb0         dq         0x000000000020a298                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209eb8         dq         0x000000000020a2a0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ec0         dq         0x000000000020a2a8                          ; DATA XREF=j_mbrtowc
                     __fxstatat@GOT:        // __fxstatat
0000000000209ec8         dq         0x000000000020a2b0                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
0000000000209ed0         dq         0x000000000020a2b8                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209ed8         dq         0x000000000020a2c0                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ee0         dq         0x000000000020a2c8                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000209ee8         dq         0x000000000020a2d0                          ; DATA XREF=j_memset
                     getcwd@GOT:        // getcwd
0000000000209ef0         dq         0x000000000020a2d8                          ; DATA XREF=j_getcwd
                     strspn@GOT:        // strspn
0000000000209ef8         dq         0x000000000020a2e0                          ; DATA XREF=j_strspn
                     memcmp@GOT:        // memcmp
0000000000209f00         dq         0x000000000020a2f0                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209f08         dq         0x000000000020a2f8                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209f10         dq         0x000000000020a300                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000209f18         dq         0x000000000020a308                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000209f20         dq         0x000000000020a318                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f28         dq         0x000000000020a320                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
0000000000209f30         dq         0x000000000020a328                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
0000000000209f38         dq         0x000000000020a330                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f40         dq         0x000000000020a338                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f48         dq         0x000000000020a340                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f50         dq         0x000000000020a348                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f58         dq         0x000000000020a350                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f60         dq         0x000000000020a358                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f68         dq         0x000000000020a360                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000209f70         dq         0x000000000020a368                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000209f78         dq         0x000000000020a370                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f80         dq         0x000000000020a378                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f88         dq         0x000000000020a380                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209f90         dq         0x000000000020a388                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f98         dq         0x000000000020a390                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fa0         dq         0x000000000020a398                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fa8         dq         0x000000000020a3a8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fb0         dq         0x000000000020a3b0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fb8         dq         0x000000000020a3c0                          ; DATA XREF=j___ctype_b_loc
                     qword_209fc0:
0000000000209fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fc9         db  0x00 ; '.'
0000000000209fca         db  0x00 ; '.'
0000000000209fcb         db  0x00 ; '.'
0000000000209fcc         db  0x00 ; '.'
0000000000209fcd         db  0x00 ; '.'
0000000000209fce         db  0x00 ; '.'
0000000000209fcf         db  0x00 ; '.'
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209fe0, __do_global_dtors_aux+9
0000000000209fe8         db  0x00 ; '.'
0000000000209fe9         db  0x00 ; '.'
0000000000209fea         db  0x00 ; '.'
0000000000209feb         db  0x00 ; '.'
0000000000209fec         db  0x00 ; '.'
0000000000209fed         db  0x00 ; '.'
0000000000209fee         db  0x00 ; '.'
0000000000209fef         db  0x00 ; '.'
0000000000209ff0         db  0x00 ; '.'
0000000000209ff1         db  0x00 ; '.'
0000000000209ff2         db  0x00 ; '.'
0000000000209ff3         db  0x00 ; '.'
0000000000209ff4         db  0x00 ; '.'
0000000000209ff5         db  0x00 ; '.'
0000000000209ff6         db  0x00 ; '.'
0000000000209ff7         db  0x00 ; '.'
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a080[ (128 bytes)
        ; File offset : [40960; 41088[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000006fc6                          ; "8.31", DATA XREF=main+322
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05648e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a080; 0x20a218[ (408 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a081         db  0x00 ; '.'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x00 ; '.'
000000000020a085         db  0x00 ; '.'
000000000020a086         db  0x00 ; '.'
000000000020a087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a088         db  0x00 ; '.'                                         ; DATA XREF=main+315, main+448, main+472, usage+125, usage+162, usage+199, usage+236, usage+273, usage+864, close_stdout+6, emit_bug_reporting_address+90
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a090         db  0x00 ; '.'                                         ; DATA XREF=main+367, main+516, main+527, main+699
000000000020a091         db  0x00 ; '.'
000000000020a092         db  0x00 ; '.'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a098         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x00 ; '.'
000000000020a09d         db  0x00 ; '.'
000000000020a09e         db  0x00 ; '.'
000000000020a09f         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     completed.7697:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
                     verbose:
000000000020a0a9         db  0x00 ; '.'                                         ; DATA XREF=main+242, main+272, main+566
                     no_newline:
000000000020a0aa         db  0x00 ; '.'                                         ; DATA XREF=main+221, main+392, main+407, main+463
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     file_name:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     program_name:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x00 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     slot0:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
000000000020a0e8         db  0x00 ; '.'
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
000000000020a0f0         db  0x00 ; '.'
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
000000000020a0f8         db  0x00 ; '.'
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
000000000020a100         db  0x00 ; '.'
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x00 ; '.'
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x00 ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
000000000020a120         db  0x00 ; '.'
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
                     default_quoting_options:
000000000020a1e0         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
                     qword_20a210:
000000000020a210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a220; 0x20a570[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a220; 0x414790[ (2139504 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020a220         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a228         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a230         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a238         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a240         extern function code
                     _exit:
000000000020a248         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a250         extern function code                                   ; DATA XREF=__fpending@GOT
                     readlink:
000000000020a258         extern function code                                   ; DATA XREF=readlink@GOT
                     textdomain:
000000000020a260         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a268         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a270         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a278         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a280         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a288         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020a290         extern function code                                   ; DATA XREF=__lxstat@GOT
                     __stack_chk_fail:
000000000020a298         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a2a0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a2a8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __fxstatat:
000000000020a2b0         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
000000000020a2b8         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a2c0         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a2c8         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
000000000020a2d0         extern function code                                   ; DATA XREF=memset@GOT
                     getcwd:
000000000020a2d8         extern function code                                   ; DATA XREF=getcwd@GOT
                     strspn:
000000000020a2e0         extern function code                                   ; DATA XREF=strspn@GOT
                     __libc_start_main:
000000000020a2e8         extern function code
                     memcmp:
000000000020a2f0         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a2f8         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a300         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020a308         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
000000000020a310         extern function code
                     memcpy:
000000000020a318         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a320         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020a328         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
000000000020a330         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a338         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a340         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a348         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a350         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a358         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a360         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020a368         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020a370         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a378         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
000000000020a380         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a388         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a390         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a398         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a3a0         extern function code
                     mbsinit:
000000000020a3a8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a3b0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a3b8         extern function code
                     __ctype_b_loc:
000000000020a3c0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020a3c8         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a3d0         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a3d8         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a3e0         extern function code
                     _ITM_deregisterTMCloneTable_20a3e8:        // _ITM_deregisterTMCloneTable
000000000020a3e8         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a3f0         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a3f8         extern function code
                     readlink@@GLIBC_2.2.5:
000000000020a400         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a408         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a410         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a418         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a420         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a428         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a430         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020a438         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a440         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a448         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a450         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020a458         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a460         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a468         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a470         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a478         extern function code
                     getcwd@@GLIBC_2.2.5:
000000000020a480         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020a488         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a490         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a498         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     __gmon_start___20a4b8:        // __gmon_start__
000000000020a4b8         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a4c0         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a500         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a508         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020a510         extern function code
                     error@@GLIBC_2.2.5:
000000000020a518         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a520         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a528         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a530         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a538         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a540         extern function code
                     _ITM_registerTMCloneTable_20a548:        // _ITM_registerTMCloneTable
000000000020a548         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a550         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a558         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a560         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a568         extern function code
