
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/chmod
        UUID: DD26FB23-A7C9-992B-FBC3-8771CB934A6A
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xcbd0[ (52176 bytes)
        ; File offset : [0; 52176[ (52176 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xe0 ; '.'
0000000000000019         db  0x27 ; '''
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc0 ; '.'
0000000000000029         db  0x37 ; '7'
000000000000002a         db  0x04 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xd0 ; '.'
00000000000000d1         db  0xcb ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xd0 ; '.'
00000000000000d9         db  0xcb ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0xda ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0xda ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=strmode+116, quotearg_free+87, fts_stat+144, fts_build+1222, rpl_fflush+18, slotvec0
0000000000000101         db  0xda ; '.'
0000000000000102         db  0x20 ; ' '                                         ; DATA XREF=setup_dir.isra.4, enter_dir.isra.10, leave_dir.isra.12+23, rpl_fts_close+159, rpl_fts_read+688
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x50 ; 'P'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'                                         ; DATA XREF=mode_compile+688, mode_adjust+143, mode_adjust+160
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xf8 ; '.'
0000000000000129         db  0xdb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xf8 ; '.'
0000000000000131         db  0xdb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xf8 ; '.'
0000000000000139         db  0xdb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+847, mode_create_from_ref+61
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x68 ; 'h'
0000000000000199         db  0xb0 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x68 ; 'h'
00000000000001a1         db  0xb0 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x68 ; 'h'
00000000000001a9         db  0xb0 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x84 ; '.'
00000000000001b1         db  0x04 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x84 ; '.'
00000000000001b9         db  0x04 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=mode_compile+304
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=strmode+304, mode_compile+656, xfts_open+4, diropen.isra.6+20, fts_build+1173, fts_build+1365
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'                                         ; DATA XREF=fts_build+1159, rpl_fts_open+30, rpl_fts_open+35, rpl_fts_open+629
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+784
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0xda ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0xda ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0xda ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xdd ; '.'
0000000000000285         db  0x26 ; '&'
0000000000000286         db  0xfb ; '.'
0000000000000287         db  0x23 ; '#'
0000000000000288         db  0xa7 ; '.'
0000000000000289         db  0xc9 ; '.'
000000000000028a         db  0x99 ; '.'
000000000000028b         db  0x2b ; '+'
000000000000028c         db  0xfb ; '.'
000000000000028d         db  0xc3 ; '.'
000000000000028e         db  0x87 ; '.'
000000000000028f         db  0x71 ; 'q'
0000000000000290         db  0xcb ; '.'
0000000000000291         db  0x93 ; '.'
0000000000000292         db  0x4a ; 'J'
0000000000000293         db  0x6a ; 'j'
0000000000000294         db  0x3f ; '?'
0000000000000295         db  0xa1 ; '.'
0000000000000296         db  0xae ; '.'
0000000000000297         db  0xc5 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x41 ; 'A'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x41 ; 'A'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x42 ; 'B'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x47 ; 'G'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x9b8[ (1752 bytes)
        ; File offset : [736; 2488[ (1752 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x6f ; 'o'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0xa3 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x01 ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x39 ; '9'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xd3 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xa9 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xc0 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xee ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x03 ; '.'
00000000000003b9         db  0x02 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x24 ; '$'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x44 ; 'D'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+829
0000000000000400         db  0x20 ; ' '                                         ; DATA XREF=strmode+235, rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=fts_build+2307, rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'                                         ; DATA XREF=main+803
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x50 ; 'P'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xd5 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+752
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xf3 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x81 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x09 ; '.'
0000000000000479         db  0x02 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x70 ; 'p'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x9d ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x31 ; '1'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x2f ; '/'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x48 ; 'H'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x37 ; '7'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xc7 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xfa ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x45 ; 'E'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x5a ; 'Z'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x41 ; 'A'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x12 ; '.'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x60 ; '`'
00000000000005b1         db  0x02 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xec ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x3a ; ':'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x53 ; 'S'
00000000000005f9         db  0x02 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xef ; '.'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x20 ; ' '
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x52 ; 'R'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x3d ; '='
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0xb2 ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x10 ; '.'
0000000000000671         db  0x02 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x1f ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x4b ; 'K'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x0b ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x19 ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x6a ; 'j'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0xa9 ; '.'
0000000000000701         db  0x01 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x8b ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x63 ; 'c'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x93 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x27 ; '''
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x12 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x18 ; '.'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x6a ; 'j'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xcb ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x59 ; 'Y'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x58 ; 'X'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=strmode+166
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x9b ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x8f ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xaa ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xb9 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x22 ; '"'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xfe ; '.'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x20 ; ' '
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x62 ; 'b'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x8a ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xf4 ; '.'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x22 ; '"'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x76 ; 'v'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x30 ; '0'
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xa8 ; '.'
0000000000000901         db  0xe0 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x74 ; 't'
0000000000000911         db  0x02 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x11 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0xe0 ; '.'
000000000000091a         db  0x20 ; ' '
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xaf ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x21 ; '!'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xc0 ; '.'
0000000000000931         db  0xe0 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x7f ; '.'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xc0 ; '.'
0000000000000949         db  0xe0 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x08 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0xd0 ; '.'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x21 ; '!'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xa0 ; '.'
0000000000000961         db  0xe0 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x96 ; '.'
0000000000000971         db  0x01 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x11 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x19 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xe0 ; '.'
0000000000000979         db  0xe0 ; '.'
000000000000097a         db  0x20 ; ' '
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x08 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x41 ; 'A'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x11 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x19 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0xb0 ; '.'
0000000000000991         db  0xe0 ; '.'
0000000000000992         db  0x20 ; ' '
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x04 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x84 ; '.'
00000000000009a1         db  0x01 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x11 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x19 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0xb8 ; '.'
00000000000009a9         db  0xe0 ; '.'
00000000000009aa         db  0x20 ; ' '
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x08 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x9b8; 0xcd0[ (792 bytes)
        ; File offset : [2488; 3280[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000009b8         db  0x00 ; '.'
00000000000009b9         db  0x6c ; 'l'
00000000000009ba         db  0x69 ; 'i'
00000000000009bb         db  0x62 ; 'b'
00000000000009bc         db  0x63 ; 'c'
00000000000009bd         db  0x2e ; '.'
00000000000009be         db  0x73 ; 's'
00000000000009bf         db  0x6f ; 'o'
00000000000009c0         db  0x2e ; '.'                                         ; DATA XREF=mode_compile+768
00000000000009c1         db  0x36 ; '6'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x66 ; 'f'
00000000000009c4         db  0x66 ; 'f'
00000000000009c5         db  0x6c ; 'l'
00000000000009c6         db  0x75 ; 'u'
00000000000009c7         db  0x73 ; 's'
00000000000009c8         db  0x68 ; 'h'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x5f ; '_'
00000000000009cb         db  0x5f ; '_'
00000000000009cc         db  0x70 ; 'p'
00000000000009cd         db  0x72 ; 'r'
00000000000009ce         db  0x69 ; 'i'
00000000000009cf         db  0x6e ; 'n'
00000000000009d0         db  0x74 ; 't'
00000000000009d1         db  0x66 ; 'f'
00000000000009d2         db  0x5f ; '_'
00000000000009d3         db  0x63 ; 'c'
00000000000009d4         db  0x68 ; 'h'
00000000000009d5         db  0x6b ; 'k'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x72 ; 'r'
00000000000009d8         db  0x65 ; 'e'
00000000000009d9         db  0x61 ; 'a'
00000000000009da         db  0x64 ; 'd'
00000000000009db         db  0x64 ; 'd'
00000000000009dc         db  0x69 ; 'i'
00000000000009dd         db  0x72 ; 'r'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x73 ; 's'
00000000000009e0         db  0x65 ; 'e'
00000000000009e1         db  0x74 ; 't'
00000000000009e2         db  0x6c ; 'l'
00000000000009e3         db  0x6f ; 'o'
00000000000009e4         db  0x63 ; 'c'
00000000000009e5         db  0x61 ; 'a'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x00 ; '.'
00000000000009e9         db  0x6d ; 'm'
00000000000009ea         db  0x62 ; 'b'
00000000000009eb         db  0x72 ; 'r'
00000000000009ec         db  0x74 ; 't'
00000000000009ed         db  0x6f ; 'o'
00000000000009ee         db  0x77 ; 'w'
00000000000009ef         db  0x63 ; 'c'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x73 ; 's'
00000000000009f2         db  0x74 ; 't'
00000000000009f3         db  0x72 ; 'r'
00000000000009f4         db  0x6e ; 'n'
00000000000009f5         db  0x63 ; 'c'
00000000000009f6         db  0x6d ; 'm'
00000000000009f7         db  0x70 ; 'p'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x6f ; 'o'
00000000000009fa         db  0x70 ; 'p'
00000000000009fb         db  0x74 ; 't'
00000000000009fc         db  0x69 ; 'i'
00000000000009fd         db  0x6e ; 'n'
00000000000009fe         db  0x64 ; 'd'
00000000000009ff         db  0x00 ; '.'
                     aStrrchr:
0000000000000a00         db         "strrchr", 0
0000000000000a08         db  0x64 ; 'd'
0000000000000a09         db  0x63 ; 'c'
0000000000000a0a         db  0x67 ; 'g'
0000000000000a0b         db  0x65 ; 'e'
0000000000000a0c         db  0x74 ; 't'
0000000000000a0d         db  0x74 ; 't'
0000000000000a0e         db  0x65 ; 'e'
0000000000000a0f         db  0x78 ; 'x'
0000000000000a10         db  0x74 ; 't'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x63 ; 'c'
0000000000000a13         db  0x6c ; 'l'
0000000000000a14         db  0x6f ; 'o'
0000000000000a15         db  0x73 ; 's'
0000000000000a16         db  0x65 ; 'e'
0000000000000a17         db  0x64 ; 'd'
0000000000000a18         db  0x69 ; 'i'
0000000000000a19         db  0x72 ; 'r'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x66 ; 'f'
0000000000000a1c         db  0x63 ; 'c'
0000000000000a1d         db  0x68 ; 'h'
0000000000000a1e         db  0x64 ; 'd'
0000000000000a1f         db  0x69 ; 'i'
0000000000000a20         db  0x72 ; 'r'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x65 ; 'e'
0000000000000a23         db  0x72 ; 'r'
0000000000000a24         db  0x72 ; 'r'
0000000000000a25         db  0x6f ; 'o'
0000000000000a26         db  0x72 ; 'r'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x5f ; '_'
0000000000000a29         db  0x5f ; '_'
0000000000000a2a         db  0x73 ; 's'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x61 ; 'a'
0000000000000a2d         db  0x63 ; 'c'
0000000000000a2e         db  0x6b ; 'k'
0000000000000a2f         db  0x5f ; '_'
0000000000000a30         db  0x63 ; 'c'
0000000000000a31         db  0x68 ; 'h'
0000000000000a32         db  0x6b ; 'k'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x66 ; 'f'
0000000000000a35         db  0x61 ; 'a'
0000000000000a36         db  0x69 ; 'i'
0000000000000a37         db  0x6c ; 'l'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x5f ; '_'
0000000000000a3a         db  0x5f ; '_'
0000000000000a3b         db  0x6c ; 'l'
0000000000000a3c         db  0x78 ; 'x'
0000000000000a3d         db  0x73 ; 's'
0000000000000a3e         db  0x74 ; 't'
0000000000000a3f         db  0x61 ; 'a'
0000000000000a40         db  0x74 ; 't'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x69 ; 'i'
0000000000000a43         db  0x73 ; 's'
0000000000000a44         db  0x77 ; 'w'
0000000000000a45         db  0x70 ; 'p'
0000000000000a46         db  0x72 ; 'r'
0000000000000a47         db  0x69 ; 'i'
0000000000000a48         db  0x6e ; 'n'
0000000000000a49         db  0x74 ; 't'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x72 ; 'r'
0000000000000a4c         db  0x65 ; 'e'
0000000000000a4d         db  0x61 ; 'a'
0000000000000a4e         db  0x6c ; 'l'
0000000000000a4f         db  0x6c ; 'l'
0000000000000a50         db  0x6f ; 'o'
0000000000000a51         db  0x63 ; 'c'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x66 ; 'f'
0000000000000a54         db  0x73 ; 's'
0000000000000a55         db  0x74 ; 't'
0000000000000a56         db  0x61 ; 'a'
0000000000000a57         db  0x74 ; 't'
0000000000000a58         db  0x66 ; 'f'
0000000000000a59         db  0x73 ; 's'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x61 ; 'a'
0000000000000a5c         db  0x62 ; 'b'
0000000000000a5d         db  0x6f ; 'o'
0000000000000a5e         db  0x72 ; 'r'
0000000000000a5f         db  0x74 ; 't'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x78 ; 'x'
0000000000000a64         db  0x69 ; 'i'
0000000000000a65         db  0x74 ; 't'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x70 ; 'p'
0000000000000a68         db  0x72 ; 'r'
0000000000000a69         db  0x6f ; 'o'
0000000000000a6a         db  0x67 ; 'g'
0000000000000a6b         db  0x72 ; 'r'
0000000000000a6c         db  0x61 ; 'a'
0000000000000a6d         db  0x6d ; 'm'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x69 ; 'i'
0000000000000a70         db  0x6e ; 'n'
0000000000000a71         db  0x76 ; 'v'
0000000000000a72         db  0x6f ; 'o'
                     aCationname:
0000000000000a73         db         "cation_name", 0
0000000000000a7f         db  0x5f ; '_'
0000000000000a80         db  0x5f ; '_'
0000000000000a81         db  0x61 ; 'a'
0000000000000a82         db  0x73 ; 's'
0000000000000a83         db  0x73 ; 's'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x72 ; 'r'
0000000000000a86         db  0x74 ; 't'
0000000000000a87         db  0x5f ; '_'
0000000000000a88         db  0x66 ; 'f'
0000000000000a89         db  0x61 ; 'a'
0000000000000a8a         db  0x69 ; 'i'
0000000000000a8b         db  0x6c ; 'l'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x5f ; '_'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x63 ; 'c'
0000000000000a90         db  0x74 ; 't'
0000000000000a91         db  0x79 ; 'y'
0000000000000a92         db  0x70 ; 'p'
0000000000000a93         db  0x65 ; 'e'
0000000000000a94         db  0x5f ; '_'
0000000000000a95         db  0x67 ; 'g'
0000000000000a96         db  0x65 ; 'e'
0000000000000a97         db  0x74 ; 't'
0000000000000a98         db  0x5f ; '_'
0000000000000a99         db  0x6d ; 'm'
0000000000000a9a         db  0x62 ; 'b'
0000000000000a9b         db  0x5f ; '_'
0000000000000a9c         db  0x63 ; 'c'
0000000000000a9d         db  0x75 ; 'u'
0000000000000a9e         db  0x72 ; 'r'
0000000000000a9f         db  0x5f ; '_'
0000000000000aa0         db  0x6d ; 'm'
0000000000000aa1         db  0x61 ; 'a'
0000000000000aa2         db  0x78 ; 'x'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x63 ; 'c'
0000000000000aa5         db  0x61 ; 'a'
0000000000000aa6         db  0x6c ; 'l'
0000000000000aa7         db  0x6c ; 'l'
0000000000000aa8         db  0x6f ; 'o'
0000000000000aa9         db  0x63 ; 'c'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x73 ; 's'
0000000000000aac         db  0x74 ; 't'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x6c ; 'l'
0000000000000aaf         db  0x65 ; 'e'
0000000000000ab0         db  0x6e ; 'n'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x6d ; 'm'
0000000000000ab3         db  0x65 ; 'e'
0000000000000ab4         db  0x6d ; 'm'
0000000000000ab5         db  0x73 ; 's'
0000000000000ab6         db  0x65 ; 'e'
0000000000000ab7         db  0x74 ; 't'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x5f ; '_'
0000000000000aba         db  0x5f ; '_'
0000000000000abb         db  0x65 ; 'e'
0000000000000abc         db  0x72 ; 'r'
0000000000000abd         db  0x72 ; 'r'
0000000000000abe         db  0x6e ; 'n'
0000000000000abf         db  0x6f ; 'o'
0000000000000ac0         db  0x5f ; '_'
0000000000000ac1         db  0x6c ; 'l'
0000000000000ac2         db  0x6f ; 'o'
0000000000000ac3         db  0x63 ; 'c'
0000000000000ac4         db  0x61 ; 'a'
0000000000000ac5         db  0x74 ; 't'
0000000000000ac6         db  0x69 ; 'i'
0000000000000ac7         db  0x6f ; 'o'
0000000000000ac8         db  0x6e ; 'n'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x6d ; 'm'
0000000000000acb         db  0x65 ; 'e'
0000000000000acc         db  0x6d ; 'm'
0000000000000acd         db  0x63 ; 'c'
0000000000000ace         db  0x6d ; 'm'
0000000000000acf         db  0x70 ; 'p'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x66 ; 'f'
0000000000000ad2         db  0x63 ; 'c'
0000000000000ad3         db  0x68 ; 'h'
0000000000000ad4         db  0x6d ; 'm'
0000000000000ad5         db  0x6f ; 'o'
0000000000000ad6         db  0x64 ; 'd'
0000000000000ad7         db  0x61 ; 'a'
0000000000000ad8         db  0x74 ; 't'
0000000000000ad9         db  0x00 ; '.'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x5f ; '_'
0000000000000adc         db  0x66 ; 'f'
0000000000000add         db  0x70 ; 'p'
0000000000000ade         db  0x72 ; 'r'
0000000000000adf         db  0x69 ; 'i'
0000000000000ae0         db  0x6e ; 'n'
0000000000000ae1         db  0x74 ; 't'
0000000000000ae2         db  0x66 ; 'f'
0000000000000ae3         db  0x5f ; '_'
0000000000000ae4         db  0x63 ; 'c'
0000000000000ae5         db  0x68 ; 'h'
0000000000000ae6         db  0x6b ; 'k'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x73 ; 's'
0000000000000ae9         db  0x74 ; 't'
0000000000000aea         db  0x64 ; 'd'
0000000000000aeb         db  0x6f ; 'o'
0000000000000aec         db  0x75 ; 'u'
0000000000000aed         db  0x74 ; 't'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x6c ; 'l'
0000000000000af0         db  0x73 ; 's'
0000000000000af1         db  0x65 ; 'e'
0000000000000af2         db  0x65 ; 'e'
0000000000000af3         db  0x6b ; 'k'
0000000000000af4         db  0x00 ; '.'
0000000000000af5         db  0x6d ; 'm'
0000000000000af6         db  0x65 ; 'e'
0000000000000af7         db  0x6d ; 'm'
0000000000000af8         db  0x63 ; 'c'
0000000000000af9         db  0x70 ; 'p'
0000000000000afa         db  0x79 ; 'y'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x66 ; 'f'
0000000000000afd         db  0x63 ; 'c'
0000000000000afe         db  0x6c ; 'l'
0000000000000aff         db  0x6f ; 'o'
0000000000000b00         db  0x73 ; 's'
0000000000000b01         db  0x65 ; 'e'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x6d ; 'm'
0000000000000b04         db  0x61 ; 'a'
0000000000000b05         db  0x6c ; 'l'
0000000000000b06         db  0x6c ; 'l'
0000000000000b07         db  0x6f ; 'o'
0000000000000b08         db  0x63 ; 'c'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x75 ; 'u'
0000000000000b0b         db  0x6d ; 'm'
0000000000000b0c         db  0x61 ; 'a'
0000000000000b0d         db  0x73 ; 's'
0000000000000b0e         db  0x6b ; 'k'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x66 ; 'f'
0000000000000b11         db  0x64 ; 'd'
0000000000000b12         db  0x6f ; 'o'
0000000000000b13         db  0x70 ; 'p'
0000000000000b14         db  0x65 ; 'e'
0000000000000b15         db  0x6e ; 'n'
0000000000000b16         db  0x64 ; 'd'
0000000000000b17         db  0x69 ; 'i'
0000000000000b18         db  0x72 ; 'r'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x6d ; 'm'
0000000000000b1b         db  0x62 ; 'b'
0000000000000b1c         db  0x73 ; 's'
0000000000000b1d         db  0x69 ; 'i'
0000000000000b1e         db  0x6e ; 'n'
0000000000000b1f         db  0x69 ; 'i'
0000000000000b20         db  0x74 ; 't'
0000000000000b21         db  0x00 ; '.'
0000000000000b22         db  0x6e ; 'n'
0000000000000b23         db  0x6c ; 'l'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x6c ; 'l'
0000000000000b26         db  0x61 ; 'a'
0000000000000b27         db  0x6e ; 'n'
0000000000000b28         db  0x67 ; 'g'
0000000000000b29         db  0x69 ; 'i'
0000000000000b2a         db  0x6e ; 'n'
0000000000000b2b         db  0x66 ; 'f'
0000000000000b2c         db  0x6f ; 'o'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x5f ; '_'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x63 ; 'c'
0000000000000b31         db  0x74 ; 't'
0000000000000b32         db  0x79 ; 'y'
0000000000000b33         db  0x70 ; 'p'
0000000000000b34         db  0x65 ; 'e'
0000000000000b35         db  0x5f ; '_'
0000000000000b36         db  0x62 ; 'b'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x6c ; 'l'
0000000000000b39         db  0x6f ; 'o'
0000000000000b3a         db  0x63 ; 'c'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x6f ; 'o'
0000000000000b3d         db  0x70 ; 'p'
0000000000000b3e         db  0x74 ; 't'
0000000000000b3f         db  0x61 ; 'a'
0000000000000b40         db  0x72 ; 'r'
0000000000000b41         db  0x67 ; 'g'
0000000000000b42         db  0x00 ; '.'
0000000000000b43         db  0x5f ; '_'
0000000000000b44         db  0x5f ; '_'
0000000000000b45         db  0x66 ; 'f'
                     aReading:
0000000000000b46         db         "reading", 0
0000000000000b4e         db  0x73 ; 's'
0000000000000b4f         db  0x74 ; 't'
0000000000000b50         db  0x64 ; 'd'
0000000000000b51         db  0x65 ; 'e'
0000000000000b52         db  0x72 ; 'r'
0000000000000b53         db  0x72 ; 'r'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x67 ; 'g'
0000000000000b56         db  0x65 ; 'e'
0000000000000b57         db  0x74 ; 't'
0000000000000b58         db  0x6f ; 'o'
0000000000000b59         db  0x70 ; 'p'
0000000000000b5a         db  0x74 ; 't'
0000000000000b5b         db  0x5f ; '_'
0000000000000b5c         db  0x6c ; 'l'
0000000000000b5d         db  0x6f ; 'o'
0000000000000b5e         db  0x6e ; 'n'
0000000000000b5f         db  0x67 ; 'g'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x5f ; '_'
0000000000000b62         db  0x5f ; '_'
0000000000000b63         db  0x66 ; 'f'
0000000000000b64         db  0x78 ; 'x'
0000000000000b65         db  0x73 ; 's'
0000000000000b66         db  0x74 ; 't'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x74 ; 't'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x66 ; 'f'
0000000000000b6b         db  0x69 ; 'i'
0000000000000b6c         db  0x6c ; 'l'
0000000000000b6d         db  0x65 ; 'e'
0000000000000b6e         db  0x6e ; 'n'
0000000000000b6f         db  0x6f ; 'o'
0000000000000b70         db  0x00 ; '.'
0000000000000b71         db  0x66 ; 'f'
0000000000000b72         db  0x77 ; 'w'
0000000000000b73         db  0x72 ; 'r'
0000000000000b74         db  0x69 ; 'i'
0000000000000b75         db  0x74 ; 't'
0000000000000b76         db  0x65 ; 'e'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x5f ; '_'
0000000000000b79         db  0x5f ; '_'
0000000000000b7a         db  0x66 ; 'f'
0000000000000b7b         db  0x70 ; 'p'
0000000000000b7c         db  0x65 ; 'e'
0000000000000b7d         db  0x6e ; 'n'
0000000000000b7e         db  0x64 ; 'd'
0000000000000b7f         db  0x69 ; 'i'
0000000000000b80         db  0x6e ; 'n'
0000000000000b81         db  0x67 ; 'g'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x6f ; 'o'
0000000000000b84         db  0x70 ; 'p'
0000000000000b85         db  0x65 ; 'e'
0000000000000b86         db  0x6e ; 'n'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x70 ; 'p'
0000000000000b89         db  0x72 ; 'r'
0000000000000b8a         db  0x6f ; 'o'
0000000000000b8b         db  0x67 ; 'g'
0000000000000b8c         db  0x72 ; 'r'
0000000000000b8d         db  0x61 ; 'a'
0000000000000b8e         db  0x6d ; 'm'
0000000000000b8f         db  0x5f ; '_'
0000000000000b90         db  0x69 ; 'i'
0000000000000b91         db  0x6e ; 'n'
0000000000000b92         db  0x76 ; 'v'
0000000000000b93         db  0x6f ; 'o'
0000000000000b94         db  0x63 ; 'c'
0000000000000b95         db  0x61 ; 'a'
0000000000000b96         db  0x74 ; 't'
0000000000000b97         db  0x69 ; 'i'
0000000000000b98         db  0x6f ; 'o'
0000000000000b99         db  0x6e ; 'n'
0000000000000b9a         db  0x5f ; '_'
0000000000000b9b         db  0x73 ; 's'
0000000000000b9c         db  0x68 ; 'h'
0000000000000b9d         db  0x6f ; 'o'
0000000000000b9e         db  0x72 ; 'r'
0000000000000b9f         db  0x74 ; 't'
0000000000000ba0         db  0x5f ; '_'
0000000000000ba1         db  0x6e ; 'n'
0000000000000ba2         db  0x61 ; 'a'
0000000000000ba3         db  0x6d ; 'm'
0000000000000ba4         db  0x65 ; 'e'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x71 ; 'q'
0000000000000ba7         db  0x73 ; 's'
0000000000000ba8         db  0x6f ; 'o'
0000000000000ba9         db  0x72 ; 'r'
0000000000000baa         db  0x74 ; 't'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x5f ; '_'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x63 ; 'c'
0000000000000baf         db  0x78 ; 'x'
0000000000000bb0         db  0x61 ; 'a'
0000000000000bb1         db  0x5f ; '_'
0000000000000bb2         db  0x66 ; 'f'
0000000000000bb3         db  0x69 ; 'i'
0000000000000bb4         db  0x6e ; 'n'
0000000000000bb5         db  0x61 ; 'a'
0000000000000bb6         db  0x6c ; 'l'
0000000000000bb7         db  0x69 ; 'i'
0000000000000bb8         db  0x7a ; 'z'
0000000000000bb9         db  0x65 ; 'e'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x66 ; 'f'
0000000000000bbc         db  0x63 ; 'c'
0000000000000bbd         db  0x6e ; 'n'
0000000000000bbe         db  0x74 ; 't'
0000000000000bbf         db  0x6c ; 'l'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x6f ; 'o'
0000000000000bc2         db  0x70 ; 'p'
0000000000000bc3         db  0x65 ; 'e'
0000000000000bc4         db  0x6e ; 'n'
0000000000000bc5         db  0x61 ; 'a'
0000000000000bc6         db  0x74 ; 't'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x5f ; '_'
0000000000000bc9         db  0x5f ; '_'
0000000000000bca         db  0x78 ; 'x'
0000000000000bcb         db  0x73 ; 's'
0000000000000bcc         db  0x74 ; 't'
0000000000000bcd         db  0x61 ; 'a'
0000000000000bce         db  0x74 ; 't'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x6d ; 'm'
0000000000000bd1         db  0x65 ; 'e'
0000000000000bd2         db  0x6d ; 'm'
0000000000000bd3         db  0x6d ; 'm'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x76 ; 'v'
0000000000000bd6         db  0x65 ; 'e'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x62 ; 'b'
0000000000000bd9         db  0x69 ; 'i'
0000000000000bda         db  0x6e ; 'n'
0000000000000bdb         db  0x64 ; 'd'
0000000000000bdc         db  0x74 ; 't'
0000000000000bdd         db  0x65 ; 'e'
0000000000000bde         db  0x78 ; 'x'
0000000000000bdf         db  0x74 ; 't'
0000000000000be0         db  0x64 ; 'd'
0000000000000be1         db  0x6f ; 'o'
0000000000000be2         db  0x6d ; 'm'
0000000000000be3         db  0x61 ; 'a'
0000000000000be4         db  0x69 ; 'i'
0000000000000be5         db  0x6e ; 'n'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x5f ; '_'
0000000000000be8         db  0x5f ; '_'
0000000000000be9         db  0x66 ; 'f'
0000000000000bea         db  0x78 ; 'x'
0000000000000beb         db  0x73 ; 's'
0000000000000bec         db  0x74 ; 't'
0000000000000bed         db  0x61 ; 'a'
0000000000000bee         db  0x74 ; 't'
0000000000000bef         db  0x61 ; 'a'
0000000000000bf0         db  0x74 ; 't'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x73 ; 's'
0000000000000bf3         db  0x74 ; 't'
0000000000000bf4         db  0x72 ; 'r'
0000000000000bf5         db  0x63 ; 'c'
0000000000000bf6         db  0x6d ; 'm'
0000000000000bf7         db  0x70 ; 'p'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x5f ; '_'
0000000000000bfb         db  0x6c ; 'l'
0000000000000bfc         db  0x69 ; 'i'
0000000000000bfd         db  0x62 ; 'b'
0000000000000bfe         db  0x63 ; 'c'
0000000000000bff         db  0x5f ; '_'
                     aStartmain:
0000000000000c00         db         "start_main", 0                             ; DATA XREF=mode_compile+672, mode_compile+818, mode_adjust+40
0000000000000c0b         db  0x64 ; 'd'
0000000000000c0c         db  0x69 ; 'i'
0000000000000c0d         db  0x72 ; 'r'
0000000000000c0e         db  0x66 ; 'f'
0000000000000c0f         db  0x64 ; 'd'
0000000000000c10         db  0x00 ; '.'
0000000000000c11         db  0x66 ; 'f'
0000000000000c12         db  0x73 ; 's'
0000000000000c13         db  0x65 ; 'e'
0000000000000c14         db  0x65 ; 'e'
0000000000000c15         db  0x6b ; 'k'
0000000000000c16         db  0x6f ; 'o'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x66 ; 'f'
0000000000000c19         db  0x70 ; 'p'
0000000000000c1a         db  0x75 ; 'u'
0000000000000c1b         db  0x74 ; 't'
0000000000000c1c         db  0x73 ; 's'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x75 ; 'u'
0000000000000c1f         db  0x6e ; 'n'
0000000000000c20         db  0x6c ; 'l'
0000000000000c21         db  0x6f ; 'o'
0000000000000c22         db  0x63 ; 'c'
0000000000000c23         db  0x6b ; 'k'
0000000000000c24         db  0x65 ; 'e'
0000000000000c25         db  0x64 ; 'd'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x66 ; 'f'
0000000000000c28         db  0x72 ; 'r'
0000000000000c29         db  0x65 ; 'e'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x5f ; '_'
0000000000000c2d         db  0x5f ; '_'
0000000000000c2e         db  0x70 ; 'p'
0000000000000c2f         db  0x72 ; 'r'
0000000000000c30         db  0x6f ; 'o'
0000000000000c31         db  0x67 ; 'g'
0000000000000c32         db  0x6e ; 'n'
0000000000000c33         db  0x61 ; 'a'
0000000000000c34         db  0x6d ; 'm'
0000000000000c35         db  0x65 ; 'e'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x5f ; '_'
0000000000000c38         db  0x5f ; '_'
0000000000000c39         db  0x70 ; 'p'
0000000000000c3a         db  0x72 ; 'r'
0000000000000c3b         db  0x6f ; 'o'
0000000000000c3c         db  0x67 ; 'g'
0000000000000c3d         db  0x6e ; 'n'
0000000000000c3e         db  0x61 ; 'a'
0000000000000c3f         db  0x6d ; 'm'
0000000000000c40         db  0x65 ; 'e'
0000000000000c41         db  0x5f ; '_'
0000000000000c42         db  0x66 ; 'f'
0000000000000c43         db  0x75 ; 'u'
0000000000000c44         db  0x6c ; 'l'
0000000000000c45         db  0x6c ; 'l'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x5f ; '_'
0000000000000c48         db  0x5f ; '_'
0000000000000c49         db  0x63 ; 'c'
0000000000000c4a         db  0x78 ; 'x'
0000000000000c4b         db  0x61 ; 'a'
0000000000000c4c         db  0x5f ; '_'
0000000000000c4d         db  0x61 ; 'a'
0000000000000c4e         db  0x74 ; 't'
0000000000000c4f         db  0x65 ; 'e'
0000000000000c50         db  0x78 ; 'x'
0000000000000c51         db  0x69 ; 'i'
0000000000000c52         db  0x74 ; 't'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x47 ; 'G'
0000000000000c55         db  0x4c ; 'L'
0000000000000c56         db  0x49 ; 'I'
0000000000000c57         db  0x42 ; 'B'
0000000000000c58         db  0x43 ; 'C'
0000000000000c59         db  0x5f ; '_'
0000000000000c5a         db  0x32 ; '2'
0000000000000c5b         db  0x2e ; '.'
0000000000000c5c         db  0x33 ; '3'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x47 ; 'G'
0000000000000c5f         db  0x4c ; 'L'
0000000000000c60         db  0x49 ; 'I'
0000000000000c61         db  0x42 ; 'B'
0000000000000c62         db  0x43 ; 'C'
0000000000000c63         db  0x5f ; '_'
0000000000000c64         db  0x32 ; '2'
0000000000000c65         db  0x2e ; '.'
0000000000000c66         db  0x33 ; '3'
0000000000000c67         db  0x2e ; '.'
0000000000000c68         db  0x34 ; '4'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x47 ; 'G'
0000000000000c6b         db  0x4c ; 'L'
0000000000000c6c         db  0x49 ; 'I'
0000000000000c6d         db  0x42 ; 'B'
0000000000000c6e         db  0x43 ; 'C'
0000000000000c6f         db  0x5f ; '_'
0000000000000c70         db  0x32 ; '2'
0000000000000c71         db  0x2e ; '.'
0000000000000c72         db  0x31 ; '1'
0000000000000c73         db  0x34 ; '4'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x47 ; 'G'
0000000000000c76         db  0x4c ; 'L'
0000000000000c77         db  0x49 ; 'I'
0000000000000c78         db  0x42 ; 'B'
0000000000000c79         db  0x43 ; 'C'
0000000000000c7a         db  0x5f ; '_'
0000000000000c7b         db  0x32 ; '2'
0000000000000c7c         db  0x2e ; '.'
0000000000000c7d         db  0x34 ; '4'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x47 ; 'G'
0000000000000c80         db  0x4c ; 'L'
0000000000000c81         db  0x49 ; 'I'
0000000000000c82         db  0x42 ; 'B'
0000000000000c83         db  0x43 ; 'C'
0000000000000c84         db  0x5f ; '_'
0000000000000c85         db  0x32 ; '2'
0000000000000c86         db  0x2e ; '.'
0000000000000c87         db  0x32 ; '2'
0000000000000c88         db  0x2e ; '.'
0000000000000c89         db  0x35 ; '5'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x5f ; '_'
0000000000000c8c         db  0x49 ; 'I'
0000000000000c8d         db  0x54 ; 'T'
0000000000000c8e         db  0x4d ; 'M'
0000000000000c8f         db  0x5f ; '_'
0000000000000c90         db  0x64 ; 'd'
0000000000000c91         db  0x65 ; 'e'
0000000000000c92         db  0x72 ; 'r'
0000000000000c93         db  0x65 ; 'e'
0000000000000c94         db  0x67 ; 'g'
0000000000000c95         db  0x69 ; 'i'
0000000000000c96         db  0x73 ; 's'
0000000000000c97         db  0x74 ; 't'
0000000000000c98         db  0x65 ; 'e'
0000000000000c99         db  0x72 ; 'r'
0000000000000c9a         db  0x54 ; 'T'
0000000000000c9b         db  0x4d ; 'M'
0000000000000c9c         db  0x43 ; 'C'
0000000000000c9d         db  0x6c ; 'l'
0000000000000c9e         db  0x6f ; 'o'
0000000000000c9f         db  0x6e ; 'n'
0000000000000ca0         db  0x65 ; 'e'
0000000000000ca1         db  0x54 ; 'T'
0000000000000ca2         db  0x61 ; 'a'
0000000000000ca3         db  0x62 ; 'b'
0000000000000ca4         db  0x6c ; 'l'
0000000000000ca5         db  0x65 ; 'e'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x5f ; '_'
0000000000000ca8         db  0x5f ; '_'
0000000000000ca9         db  0x67 ; 'g'
0000000000000caa         db  0x6d ; 'm'
0000000000000cab         db  0x6f ; 'o'
0000000000000cac         db  0x6e ; 'n'
0000000000000cad         db  0x5f ; '_'
0000000000000cae         db  0x73 ; 's'
0000000000000caf         db  0x74 ; 't'
0000000000000cb0         db  0x61 ; 'a'
0000000000000cb1         db  0x72 ; 'r'
0000000000000cb2         db  0x74 ; 't'
0000000000000cb3         db  0x5f ; '_'
0000000000000cb4         db  0x5f ; '_'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x5f ; '_'
0000000000000cb7         db  0x49 ; 'I'
0000000000000cb8         db  0x54 ; 'T'
0000000000000cb9         db  0x4d ; 'M'
0000000000000cba         db  0x5f ; '_'
0000000000000cbb         db  0x72 ; 'r'
0000000000000cbc         db  0x65 ; 'e'
0000000000000cbd         db  0x67 ; 'g'
0000000000000cbe         db  0x69 ; 'i'
0000000000000cbf         db  0x73 ; 's'
0000000000000cc0         db  0x74 ; 't'
0000000000000cc1         db  0x65 ; 'e'
0000000000000cc2         db  0x72 ; 'r'
0000000000000cc3         db  0x54 ; 'T'
0000000000000cc4         db  0x4d ; 'M'
0000000000000cc5         db  0x43 ; 'C'
0000000000000cc6         db  0x6c ; 'l'
0000000000000cc7         db  0x6f ; 'o'
0000000000000cc8         db  0x6e ; 'n'
0000000000000cc9         db  0x65 ; 'e'
0000000000000cca         db  0x54 ; 'T'
0000000000000ccb         db  0x61 ; 'a'
0000000000000ccc         db  0x62 ; 'b'
0000000000000ccd         db  0x6c ; 'l'
0000000000000cce         db  0x65 ; 'e'
0000000000000ccf         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xcd0; 0xd62[ (146 bytes)
        ; File offset : [3280; 3426[ (146 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000cd0         db  0x00 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x02 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x02 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x02 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x02 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x02 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x02 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x02 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x02 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x02 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x02 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x02 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x02 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x02 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x02 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x03 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x03 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x02 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x02 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x03 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x02 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x02 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x02 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x02 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x02 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x02 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x02 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x02 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x02 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x02 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x02 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x02 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x02 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x04 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x02 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x02 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x02 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x02 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x02 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x03 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x02 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x02 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x02 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x02 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x02 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x02 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x05 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x02 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x02 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x02 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x03 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x02 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x02 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x02 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x02 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x05 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x00 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x02 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x02 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x02 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x06 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x02 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x02 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x02 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x02 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x02 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x02 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x02 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x02 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xd68; 0xdc8[ (96 bytes)
        ; File offset : [3432; 3528[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d68         db  0x01 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x05 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x01 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x10 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x13 ; '.'
0000000000000d79         db  0x69 ; 'i'
0000000000000d7a         db  0x69 ; 'i'
0000000000000d7b         db  0x0d ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x06 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x9c ; '.'
0000000000000d81         db  0x02 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x10 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x74 ; 't'
0000000000000d89         db  0x19 ; '.'
0000000000000d8a         db  0x69 ; 'i'
0000000000000d8b         db  0x09 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x05 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xa6 ; '.'
0000000000000d91         db  0x02 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x10 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x94 ; '.'
0000000000000d99         db  0x91 ; '.'
0000000000000d9a         db  0x96 ; '.'
0000000000000d9b         db  0x06 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x04 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xb2 ; '.'
0000000000000da1         db  0x02 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x10 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x14 ; '.'
0000000000000da9         db  0x69 ; 'i'
0000000000000daa         db  0x69 ; 'i'
0000000000000dab         db  0x0d ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x03 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xbd ; '.'
0000000000000db1         db  0x02 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x10 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x75 ; 'u'
0000000000000db9         db  0x1a ; '.'
0000000000000dba         db  0x69 ; 'i'
0000000000000dbb         db  0x09 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x02 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xc7 ; '.'
0000000000000dc1         db  0x02 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xdc8; 0x1158[ (912 bytes)
        ; File offset : [3528; 4440[ (912 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000dc8         db  0x30 ; '0'
0000000000000dc9         db  0xda ; '.'
0000000000000dca         db  0x20 ; ' '
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xe0 ; '.'
0000000000000dd9         db  0x28 ; '('
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x38 ; '8'
0000000000000de1         db  0xda ; '.'
0000000000000de2         db  0x20 ; ' '
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xa0 ; '.'
0000000000000df1         db  0x28 ; '('
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x40 ; '@'
0000000000000df9         db  0xda ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x9f ; '.'
0000000000000e09         db  0x9d ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x60 ; '`'
0000000000000e11         db  0xda ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xa7 ; '.'
0000000000000e21         db  0x9d ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x80 ; '.'
0000000000000e29         db  0xda ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0xb1 ; '.'
0000000000000e39         db  0x9d ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xa0 ; '.'
0000000000000e41         db  0xda ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xb4 ; '.'
0000000000000e51         db  0x9d ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xc0 ; '.'
0000000000000e59         db  0xda ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xc2 ; '.'
0000000000000e69         db  0x9d ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xe0 ; '.'
0000000000000e71         db  0xda ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xc8 ; '.'
0000000000000e81         db  0x9d ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0xdb ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xd2 ; '.'
0000000000000e99         db  0x9d ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x20 ; ' '
0000000000000ea1         db  0xdb ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xd9 ; '.'
0000000000000eb1         db  0x9d ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x40 ; '@'
0000000000000eb9         db  0xdb ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xe1 ; '.'
0000000000000ec9         db  0x9d ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x60 ; '`'
0000000000000ed1         db  0xdb ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xe6 ; '.'
0000000000000ee1         db  0x9d ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xa0 ; '.'
0000000000000ee9         db  0xdb ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xa1 ; '.'
0000000000000ef9         db  0xa6 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xa8 ; '.'
0000000000000f01         db  0xdb ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x08 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xa9 ; '.'
0000000000000f11         db  0xa6 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xb0 ; '.'
0000000000000f19         db  0xdb ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xaf ; '.'
0000000000000f29         db  0xa6 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xb8 ; '.'
0000000000000f31         db  0xdb ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xbc ; '.'
0000000000000f41         db  0xa6 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0xc0 ; '.'
0000000000000f49         db  0xdb ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xc9 ; '.'
0000000000000f59         db  0xa6 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xc8 ; '.'
0000000000000f61         db  0xdb ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xfb ; '.'
0000000000000f71         db  0xae ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xd0 ; '.'
0000000000000f79         db  0xdb ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xdd ; '.'
0000000000000f89         db  0xa6 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xd8 ; '.'
0000000000000f91         db  0xdb ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xc2 ; '.'
0000000000000fa1         db  0xa6 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xe0 ; '.'
0000000000000fa9         db  0xdb ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xbe ; '.'
0000000000000fb9         db  0x9c ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0xe8 ; '.'
0000000000000fc1         db  0xdb ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x08 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xe5 ; '.'
0000000000000fd1         db  0xa6 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0xe0 ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x08 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x08 ; '.'
0000000000000fe9         db  0xe0 ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x18 ; '.'
0000000000000ff1         db  0xe0 ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x08 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=sub_1fe0+437, sub_1fe0+463, sub_1fe0+603, sub_1fe0+710, sub_1fe0+739, sub_1fe0+1156, mode_compile+231, mode_compile+433, mode_compile+491, mode_compile+505, mode_compile+511
0000000000001000         db  0xac ; '.'                                         ; DATA XREF=strmode+73, rpl_fts_open+165, rpl_fts_open+170, rpl_fts_open+735, rpl_fts_children+80, rpl_fts_children+95
0000000000001001         db  0xa5 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x80 ; '.'
0000000000001009         db  0xe0 ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x08 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x90 ; '.'
0000000000001019         db  0xe0 ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x98 ; '.'
0000000000001021         db  0xe0 ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x08 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x40 ; '@'
0000000000001031         db  0xe1 ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0xd0 ; '.'
0000000000001039         db  0xdf ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x06 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x01 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0xd8 ; '.'
0000000000001051         db  0xdf ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x06 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x05 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x00 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0xe0 ; '.'
0000000000001069         db  0xdf ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x06 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x1c ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0xe8 ; '.'
0000000000001081         db  0xdf ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x06 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x22 ; '"'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0xf0 ; '.'
0000000000001099         db  0xdf ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x06 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x3c ; '<'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0xf8 ; '.'
00000000000010b1         db  0xdf ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x06 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x3f ; '?'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0xa0 ; '.'
00000000000010c9         db  0xe0 ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x05 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x42 ; 'B'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0xa8 ; '.'
00000000000010e1         db  0xe0 ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x05 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x41 ; 'A'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0xb0 ; '.'
00000000000010f9         db  0xe0 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x05 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x47 ; 'G'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xb8 ; '.'
0000000000001111         db  0xe0 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x05 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x48 ; 'H'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0xc0 ; '.'
0000000000001129         db  0xe0 ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x05 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x44 ; 'D'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xe0 ; '.'
0000000000001141         db  0xe0 ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x05 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x46 ; 'F'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1158; 0x16c8[ (1392 bytes)
        ; File offset : [4440; 5832[ (1392 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001158         db  0x00 ; '.'
0000000000001159         db  0xde ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x07 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x02 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x08 ; '.'
0000000000001171         db  0xde ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x07 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x03 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x10 ; '.'
0000000000001189         db  0xde ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x04 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x18 ; '.'
00000000000011a1         db  0xde ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x06 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x20 ; ' '
00000000000011b9         db  0xde ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x07 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x28 ; '('
00000000000011d1         db  0xde ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x08 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x30 ; '0'
00000000000011e9         db  0xde ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x09 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x38 ; '8'
0000000000001201         db  0xde ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x0a ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x40 ; '@'
0000000000001219         db  0xde ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x0b ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x48 ; 'H'
0000000000001231         db  0xde ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x0c ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x50 ; 'P'
0000000000001249         db  0xde ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x0d ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x58 ; 'X'
0000000000001261         db  0xde ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x0e ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x60 ; '`'
0000000000001279         db  0xde ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x0f ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x68 ; 'h'
0000000000001291         db  0xde ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x10 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x70 ; 'p'
00000000000012a9         db  0xde ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x11 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x78 ; 'x'
00000000000012c1         db  0xde ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x12 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x80 ; '.'
00000000000012d9         db  0xde ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x13 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x88 ; '.'
00000000000012f1         db  0xde ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x14 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x90 ; '.'
0000000000001309         db  0xde ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x15 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x98 ; '.'
0000000000001321         db  0xde ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x16 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0xa0 ; '.'
0000000000001339         db  0xde ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x17 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0xa8 ; '.'
0000000000001351         db  0xde ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x18 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0xb0 ; '.'
0000000000001369         db  0xde ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x19 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0xb8 ; '.'
0000000000001381         db  0xde ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x1a ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0xc0 ; '.'
0000000000001399         db  0xde ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x1b ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0xc8 ; '.'
00000000000013b1         db  0xde ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x1d ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0xd0 ; '.'
00000000000013c9         db  0xde ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x1e ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0xd8 ; '.'
00000000000013e1         db  0xde ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x1f ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0xe0 ; '.'
00000000000013f9         db  0xde ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x20 ; ' '
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0xe8 ; '.'
0000000000001411         db  0xde ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x21 ; '!'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0xf0 ; '.'
0000000000001429         db  0xde ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x23 ; '#'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0xf8 ; '.'
0000000000001441         db  0xde ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x24 ; '$'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0xdf ; '.'
000000000000145a         db  0x20 ; ' '
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x07 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x25 ; '%'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x08 ; '.'
0000000000001471         db  0xdf ; '.'
0000000000001472         db  0x20 ; ' '
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x07 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x26 ; '&'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x00 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x10 ; '.'
0000000000001489         db  0xdf ; '.'
000000000000148a         db  0x20 ; ' '
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x07 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x27 ; '''
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x18 ; '.'
00000000000014a1         db  0xdf ; '.'
00000000000014a2         db  0x20 ; ' '
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x07 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x28 ; '('
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x00 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x20 ; ' '
00000000000014b9         db  0xdf ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x07 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x29 ; ')'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x28 ; '('
00000000000014d1         db  0xdf ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x07 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x2a ; '*'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x30 ; '0'
00000000000014e9         db  0xdf ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x07 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x2b ; '+'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x38 ; '8'
0000000000001501         db  0xdf ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x07 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x2c ; ','
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x40 ; '@'
0000000000001519         db  0xdf ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x07 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x2d ; '-'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x48 ; 'H'
0000000000001531         db  0xdf ; '.'
0000000000001532         db  0x20 ; ' '
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x2e ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x50 ; 'P'
0000000000001549         db  0xdf ; '.'
000000000000154a         db  0x20 ; ' '
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x07 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x2f ; '/'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x58 ; 'X'
0000000000001561         db  0xdf ; '.'
0000000000001562         db  0x20 ; ' '
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x07 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x30 ; '0'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x60 ; '`'
0000000000001579         db  0xdf ; '.'
000000000000157a         db  0x20 ; ' '
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x07 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x31 ; '1'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x68 ; 'h'
0000000000001591         db  0xdf ; '.'
0000000000001592         db  0x20 ; ' '
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x07 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x32 ; '2'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x70 ; 'p'
00000000000015a9         db  0xdf ; '.'
00000000000015aa         db  0x20 ; ' '
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x07 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x33 ; '3'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x78 ; 'x'
00000000000015c1         db  0xdf ; '.'
00000000000015c2         db  0x20 ; ' '
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x07 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x34 ; '4'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x80 ; '.'
00000000000015d9         db  0xdf ; '.'
00000000000015da         db  0x20 ; ' '
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x07 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x35 ; '5'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x88 ; '.'
00000000000015f1         db  0xdf ; '.'
00000000000015f2         db  0x20 ; ' '
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x07 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x36 ; '6'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x00 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x90 ; '.'
0000000000001609         db  0xdf ; '.'
000000000000160a         db  0x20 ; ' '
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x07 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x37 ; '7'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x98 ; '.'
0000000000001621         db  0xdf ; '.'
0000000000001622         db  0x20 ; ' '
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x07 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x38 ; '8'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x00 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0xa0 ; '.'
0000000000001639         db  0xdf ; '.'
000000000000163a         db  0x20 ; ' '
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x07 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x39 ; '9'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0xa8 ; '.'
0000000000001651         db  0xdf ; '.'
0000000000001652         db  0x20 ; ' '
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x07 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x3a ; ':'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0xb0 ; '.'
0000000000001669         db  0xdf ; '.'
000000000000166a         db  0x20 ; ' '
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x07 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x3b ; ';'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0xb8 ; '.'
0000000000001681         db  0xdf ; '.'
0000000000001682         db  0x20 ; ' '
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x07 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x3d ; '='
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0xc0 ; '.'
0000000000001699         db  0xdf ; '.'
000000000000169a         db  0x20 ; ' '
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x07 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x3e ; '>'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x00 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0xc8 ; '.'
00000000000016b1         db  0xdf ; '.'
00000000000016b2         db  0x20 ; ' '
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x07 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x40 ; '@'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x00 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x16c8; 0x16df[ (23 bytes)
        ; File offset : [5832; 5855[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000016c8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000016cc         mov        rax, qword [qword_20dfe8]                   ; qword_20dfe8
00000000000016d3         test       rax, rax
00000000000016d6         je         loc_16da

00000000000016d8         call       rax

                     loc_16da:
00000000000016da         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000016de         ret
                        ; endp
00000000000016df         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x16e0; 0x1a90[ (944 bytes)
        ; File offset : [5856; 6800[ (944 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_16e0:
00000000000016e0         push       qword [qword_20ddf0]                        ; Begin of unwind block (FDE at 0xb53c), qword_20ddf0, CODE XREF=sub_16f6+5
00000000000016e6         jmp        qword [qword_20ddf0+8]                      ; 0x20ddf8
                        ; endp
00000000000016ec         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000016f0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3df0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, filesystem_type+295, cwd_advance_fd+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x0
00000000000016fb         jmp        loc_16e0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001700         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+740, main+764, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xfts_open+32, fts_stat+49, fts_stat+320, fts_palloc.isra.2+68
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x1
000000000000170b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001710         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+708, usage+901
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x2
000000000000171b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001720         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x3
000000000000172b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001730         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x4
000000000000173b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
0000000000001740         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=fts_sort+124
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x5
000000000000174b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001750         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x6
000000000000175b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001760         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+114
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x7
000000000000176b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001770         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x8
000000000000177b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001780         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x9
000000000000178b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001790         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1010, main+1202, main+1287, sub_1fe0+223, sub_1fe0+392, sub_1fe0+533, sub_1fe0+671, sub_1fe0+906, sub_1fe0+1018, sub_1fe0+1115, sub_1fe0+1261
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0xa
000000000000179b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000017a0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0xb
00000000000017ab         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000017b0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=main+492, quotearg_buffer_restyled+343, sub_3df0+411, sub_3df0+1742, xstrdup+4, fts_build+539, rpl_fts_open+136, rpl_fts_open+452, rpl_fts_read+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0xc
00000000000017bb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
00000000000017c0         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=get_root_dev_ino+45, fts_stat+348
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0xd
00000000000017cb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
00000000000017d0         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0xe
00000000000017db         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000017e0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sub_1fe0+1841, mode_create_from_ref+132, sub_3df0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, get_root_dev_ino+108, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0xf
00000000000017eb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000017f0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+190
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x10
00000000000017fb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001800         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x11
000000000000180b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000001810         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=sub_1fe0+966, fts_stat+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x12
000000000000181b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001820         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14, rpl_fts_read+758
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x13
000000000000182b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001830         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x14
000000000000183b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001840         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=sub_5baf+27, cycle_check+133
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x15
000000000000184b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001850         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x16
000000000000185b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001860         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fd_ring_clear+50, cwd_advance_fd+63, cwd_advance_fd+82, fts_safe_changedir+226, fts_safe_changedir+437, fts_build+1383, rpl_fts_close+243, rpl_fts_close+272, rpl_fts_close+333, rpl_fts_read+238, rpl_fts_read+1603
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x17
000000000000186b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000001870         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=fts_lfree+29, fts_build+1348, fts_build+1444, fts_build+1647, fts_build+1979, fts_build+2427
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x18
000000000000187b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001880         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x19
000000000000188b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001890         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+163, usage+200, usage+237, usage+274, usage+311, usage+348, usage+385, usage+429, usage+1016, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x1a
000000000000189b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000018a0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26, rpl_fts_open+72, hash_initialize+177, hash_rehash+198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x1b
00000000000018ab         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
00000000000018b0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=sub_1fe0+1218
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x1c
00000000000018bb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
00000000000018c0         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=fts_build+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x1d
00000000000018cb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_umask:        // umask
00000000000018d0         jmp        qword [umask@GOT]                           ; umask, umask@GOT, CODE XREF=sub_1fe0+319
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x1e
00000000000018db         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000018e0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=main+547, xmemdup+35, fts_alloc+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x1f
00000000000018eb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000018f0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x20
00000000000018fb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001900         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=mode_create_from_ref+38, fts_stat+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x21
000000000000190b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000001910         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=fts_build+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x22
000000000000191b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001920         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, fts_alloc+30, filesystem_type+224, setup_dir.isra.4+69, enter_dir.isra.10+23, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x23
000000000000192b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001930         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x24
000000000000193b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchmodat:        // fchmodat
0000000000001940         jmp        qword [fchmodat@GOT]                        ; fchmodat, fchmodat@GOT, CODE XREF=sub_1fe0+167
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x25
000000000000194b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001950         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x26
000000000000195b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001960         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=fts_safe_changedir+189
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x27
000000000000196b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001970         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x28
000000000000197b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchdir:        // fchdir
0000000000001980         jmp        qword [fchdir@GOT]                          ; fchdir, fchdir@GOT, CODE XREF=restore_initial_cwd+29, fts_safe_changedir+380, rpl_fts_close+231, rpl_fts_read+1677, rpl_fts_children+236
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x29
000000000000198b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001990         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, fts_sort+64, fts_palloc.isra.2+29
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x2a
000000000000199b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000019a0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+83, usage+683, usage+876, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x2b
00000000000019ab         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000019b0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=sub_1fe0+470, sub_1fe0+551, sub_1fe0+746, sub_1fe0+1167, usage+126, usage+671, usage+764, usage+825, usage+864, usage+967, emit_bug_reporting_address+37
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x2c
00000000000019bb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
00000000000019c0         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=fts_build+949, rpl_fts_read+745, rpl_fts_read+802, rpl_fts_read+998
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x2d
00000000000019cb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000019d0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1029, main+1219, main+1306, sub_1fe0+18, sub_1fe0+245, sub_1fe0+935, sub_1fe0+1040, sub_1fe0+1278, sub_1fe0+1314, sub_1fe0+1475, sub_1fe0+1527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x2e
00000000000019db         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
00000000000019e0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x2f
00000000000019eb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000019f0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x30
00000000000019fb         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000001a00         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x31
0000000000001a0b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fstatfs:        // fstatfs
0000000000001a10         jmp        qword [fstatfs@GOT]                         ; fstatfs, fstatfs@GOT, CODE XREF=filesystem_type+200
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x32
0000000000001a1b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001a20         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x33
0000000000001a2b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001a30         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+391, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x34
0000000000001a3b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001a40         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x35
0000000000001a4b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001a50         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872, hash_print_statistics+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x36
0000000000001a5b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001a60         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3df0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x37
0000000000001a6b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001a70         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3df0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x38
0000000000001a7b         jmp        0x16e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001a80         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3b90+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x39
0000000000001a8b         jmp        0x16e0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1a90; 0x1aa0[ (16 bytes)
        ; File offset : [6800; 6816[ (16 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a90:
0000000000001a90         jmp        qword [qword_20dfd0]                        ; qword, End of unwind block (FDE at 0xb53c), Begin of unwind block (FDE at 0xb564), qword_20dfd0, CODE XREF=mode_compile+182, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, fts_sort+212, fts_lfree+40, filesystem_type+283, fts_palloc.isra.2+56, fts_palloc.isra.2+91
                        ; endp
0000000000001a96         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20dff8:        // qword_20dff8
0000000000001a98         jmp        qword [qword_20dff8]                        ; qword, qword_20dff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001a9e         align      32


        ; Section .text
        ; Range: [0x1aa0; 0x9bde[ (33086 bytes)
        ; File offset : [6816; 39902[ (33086 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_42: int8_t, -66
        ;    var_4B: int8_t, -75
        ;    var_4C: int8_t, -76
        ;    var_4E: int8_t, -78
        ;    var_58: int8_t, -88
        ;    var_D0: int32_t, -208
        ;    var_E8: int8_t, -232
        ;    var_F0: int64_t, -240
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_120: int64_t, -288
        ;    var_124: int32_t, -292
        ;    var_128: int32_t, -296


                     main:
0000000000001aa0         push       r15                                         ; End of unwind block (FDE at 0xb564), Begin of unwind block (FDE at 0xb5a8), DATA XREF=_start+29
0000000000001aa2         push       r14
0000000000001aa4         xor        r15d, r15d
0000000000001aa7         push       r13
0000000000001aa9         push       r12
0000000000001aab         xor        r14d, r14d
0000000000001aae         push       rbp
0000000000001aaf         push       rbx
0000000000001ab0         movsxd     rbp, edi
0000000000001ab3         mov        rbx, rsi
0000000000001ab6         xor        r12d, r12d
0000000000001ab9         xor        r13d, r13d
0000000000001abc         sub        rsp, 0xf8
0000000000001ac3         mov        rdi, qword [rsi]
0000000000001ac6         mov        rax, qword [fs:0x28]
0000000000001acf         mov        qword [rsp+0x128+var_40], rax
0000000000001ad7         xor        eax, eax
0000000000001ad9         mov        qword [rsp+0x128+var_F0], 0x0
0000000000001ae2         call       set_program_name                            ; set_program_name
0000000000001ae7         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xabc1
0000000000001aee         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001af3         call       j_setlocale                                 ; setlocale
0000000000001af8         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001aff         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001b06         call       j_bindtextdomain                            ; bindtextdomain
0000000000001b0b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001b12         call       j_textdomain                                ; textdomain
0000000000001b17         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001b1e         call       atexit                                      ; atexit
0000000000001b23         lea        rax, qword [rsp+0x128+var_F0]
0000000000001b28         mov        byte [diagnose_surprises], 0x0              ; diagnose_surprises
0000000000001b2f         mov        byte [force_silent], 0x0                    ; force_silent
0000000000001b36         mov        byte [recurse], 0x0                         ; recurse
0000000000001b3d         mov        qword [rsp+0x128+var_110], rax
0000000000001b42         nop        word [rax+rax]

                     loc_1b48:
0000000000001b48         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+276, main+427, main+444, main+567, main+586, main+602, main+614, main+627
0000000000001b4f         lea        rdx, qword [aOrAvailableLoc+56]             ; argument "__shortopts" for method j_getopt_long, 0xa250
0000000000001b56         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001b59         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001b5c         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001b5e         call       j_getopt_long                               ; getopt_long
0000000000001b63         cmp        eax, 0xffffffff
0000000000001b66         je         loc_1d54

0000000000001b6c         cmp        eax, 0x63
0000000000001b6f         je         loc_1ce0

0000000000001b75         jle        loc_1bc0

0000000000001b77         cmp        eax, 0x76
0000000000001b7a         je         loc_1cf0

0000000000001b80         jle        loc_1c30

0000000000001b86         cmp        eax, 0x80
0000000000001b8b         je         loc_1d10

0000000000001b91         jle        loc_2532

0000000000001b97         cmp        eax, 0x81
0000000000001b9c         je         loc_1d00

0000000000001ba2         cmp        eax, 0x82
0000000000001ba7         jne        loc_26a9

0000000000001bad         mov        r15, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001bb4         jmp        loc_1b48
0000000000001bb6         align      64

                     loc_1bc0:
0000000000001bc0         cmp        eax, 0x37                                   ; CODE XREF=main+213
0000000000001bc3         jg         loc_1c50

0000000000001bc9         cmp        eax, 0x30
0000000000001bcc         jge        loc_1c78

0000000000001bd2         cmp        eax, 0xffffff7e
0000000000001bd7         je         loc_270a

0000000000001bdd         jg         loc_2479

0000000000001be3         cmp        eax, 0xffffff7d
0000000000001be8         jne        loc_26a9

0000000000001bee         sub        rsp, 0x8
0000000000001bf2         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001bf9         mov        rcx, qword [Version]                        ; Version
0000000000001c00         push       0x0
0000000000001c02         lea        r9, qword [aJimMeyering]                    ; "Jim Meyering"
0000000000001c09         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001c10         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c80
0000000000001c17         lea        rsi, qword [aChmod]                         ; "chmod"
0000000000001c1e         xor        eax, eax
0000000000001c20         call       version_etc                                 ; version_etc
0000000000001c25         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001c27         call       j_exit                                      ; exit
                        ; endp
0000000000001c2c         align      16

                     loc_1c30:
0000000000001c30         cmp        eax, 0x6f                                   ; CODE XREF=main+224
0000000000001c33         je         loc_1c78

0000000000001c35         jg         loc_2540

0000000000001c3b         cmp        eax, 0x66
0000000000001c3e         jne        loc_2524

0000000000001c44         mov        byte [force_silent], 0x1                    ; force_silent
0000000000001c4b         jmp        loc_1b48

                     loc_1c50:
0000000000001c50         cmp        eax, 0x52                                   ; CODE XREF=main+291
0000000000001c53         jne        loc_1c61

0000000000001c55         mov        byte [recurse], 0x1                         ; recurse
0000000000001c5c         jmp        loc_1b48

                     loc_1c61:
0000000000001c61         jle        loc_20df                                    ; CODE XREF=main+435

0000000000001c67         cmp        eax, 0x58
0000000000001c6a         je         loc_1c78

0000000000001c6c         cmp        eax, 0x61
0000000000001c6f         jne        loc_26a9

0000000000001c75         nop        dword [rax]

                     loc_1c78:
0000000000001c78         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+300, main+403, main+458, sub_1fe0+258, sub_1fe0+1183, sub_1fe0+1351, sub_1fe0+1365, sub_1fe0+1379
0000000000001c7f         mov        rax, qword [rbx+rax*8-8]
0000000000001c84         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000001c87         mov        qword [rsp+0x128+var_120], rax
0000000000001c8c         call       j_strlen                                    ; strlen
0000000000001c91         xor        ecx, ecx
0000000000001c93         test       r12, r12
0000000000001c96         mov        rdx, rax
0000000000001c99         setne      cl
0000000000001c9c         add        rcx, r12
0000000000001c9f         lea        r8, qword [rax+rcx]
0000000000001ca3         cmp        qword [rsp+0x128+var_F0], r8
0000000000001ca8         jbe        loc_1d18

                     loc_1caa:
0000000000001caa         mov        rsi, qword [rsp+0x128+var_120]              ; argument "__src" for method j_memcpy, CODE XREF=main+687
0000000000001caf         lea        rdi, qword [r13+rcx]                        ; argument "__dest" for method j_memcpy
0000000000001cb4         mov        byte [r13+r12], 0x2c
0000000000001cba         add        rdx, 0x1                                    ; argument "__n" for method j_memcpy
0000000000001cbe         mov        qword [rsp+0x128+var_118], r8
0000000000001cc3         call       j_memcpy                                    ; memcpy
0000000000001cc8         mov        r8, qword [rsp+0x128+var_118]
0000000000001ccd         mov        byte [diagnose_surprises], 0x1              ; diagnose_surprises
0000000000001cd4         mov        r12, r8
0000000000001cd7         jmp        loc_1b48
0000000000001cdc         align      32

                     loc_1ce0:
0000000000001ce0         mov        dword [verbosity], 0x1                      ; verbosity, CODE XREF=main+207
0000000000001cea         jmp        loc_1b48
0000000000001cef         align      16

                     loc_1cf0:
0000000000001cf0         mov        dword [verbosity], 0x0                      ; verbosity, CODE XREF=main+218
0000000000001cfa         jmp        loc_1b48
0000000000001cff         align      256

                     loc_1d00:
0000000000001d00         mov        r14d, 0x1                                   ; CODE XREF=main+252
0000000000001d06         jmp        loc_1b48
0000000000001d0b         align      16

                     loc_1d10:
0000000000001d10         xor        r14d, r14d                                  ; CODE XREF=main+235
0000000000001d13         jmp        loc_1b48

                     loc_1d18:
0000000000001d18         mov        rsi, qword [rsp+0x128+var_110]              ; CODE XREF=main+520
0000000000001d1d         mov        qword [rsp+0x128+var_100], rax
0000000000001d22         lea        rax, qword [r8+1]
0000000000001d26         mov        rdi, r13
0000000000001d29         mov        qword [rsp+0x128+var_108], rcx
0000000000001d2e         mov        qword [rsp+0x128+var_118], r8
0000000000001d33         mov        qword [rsp+0x128+var_F0], rax
0000000000001d38         call       x2realloc                                   ; x2realloc
0000000000001d3d         mov        rdx, qword [rsp+0x128+var_100]
0000000000001d42         mov        r13, rax
0000000000001d45         mov        rcx, qword [rsp+0x128+var_108]
0000000000001d4a         mov        r8, qword [rsp+0x128+var_118]
0000000000001d4f         jmp        loc_1caa

                     loc_1d54:
0000000000001d54         test       r15, r15                                    ; CODE XREF=main+198
0000000000001d57         je         loc_20ed

0000000000001d5d         test       r13, r13
0000000000001d60         jne        loc_27c5

0000000000001d66         cmp        ebp, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001d6c         jle        loc_2688

0000000000001d72         mov        rdi, r15
0000000000001d75         call       mode_create_from_ref                        ; mode_create_from_ref
0000000000001d7a         mov        rbp, rax
0000000000001d7d         mov        qword [change], rax                         ; change
0000000000001d84         call       j___errno_location                          ; __errno_location
0000000000001d89         test       rbp, rbp
0000000000001d8c         mov        r12, rax
0000000000001d8f         je         loc_2716

                     loc_1d95:
0000000000001d95         and        r14b, byte [recurse]                        ; recurse, CODE XREF=sub_1fe0+330
0000000000001d9c         call       j___errno_location                          ; __errno_location
0000000000001da1         mov        qword [rsp+0x128+var_108], rax
0000000000001da6         test       r14b, r14b
0000000000001da9         jne        loc_25e1

0000000000001daf         mov        qword [root_dev_ino], 0x0                   ; root_dev_ino

                     loc_1dba:
0000000000001dba         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=sub_1fe0+1559
0000000000001dc1         xor        edx, edx
0000000000001dc3         mov        esi, 0x411
0000000000001dc8         lea        r12, qword [aModeOfSRetaine+36]             ; 0xa574
0000000000001dcf         lea        rdi, qword [rbx+rax*8]
0000000000001dd3         mov        ebx, 0x1
0000000000001dd8         call       xfts_open                                   ; xfts_open
0000000000001ddd         mov        rbp, rax
0000000000001de0         lea        rax, qword [rsp+0x128+var_58]
0000000000001de8         mov        rdi, rbp
0000000000001deb         mov        qword [rsp+0x128+var_120], rax
0000000000001df0         lea        rax, qword [rsp+0x128+var_4C]
0000000000001df8         mov        qword [rsp+0x128+var_118], rax
0000000000001dfd         lea        rax, qword [rsp+0x128+var_4B]
0000000000001e05         mov        qword [rsp+0x128+var_110], rax
0000000000001e0a         call       rpl_fts_read                                ; rpl_fts_read
0000000000001e0f         test       rax, rax
0000000000001e12         mov        r14, rax
0000000000001e15         je         loc_1e5b

0000000000001e17         nop        word [rax+rax]

                     loc_1e20:
0000000000001e20         cmp        word [rax+0x70], 0xd                        ; CODE XREF=main+953
0000000000001e25         mov        r13, qword [rax+0x38]
0000000000001e29         ja         loc_200f

0000000000001e2f         movzx      eax, word [rax+0x70]
0000000000001e33         movsxd     rax, dword [r12+rax*4]
0000000000001e37         add        rax, r12
0000000000001e3a         jmp        rax
                        ; endp
0000000000001e3c         mov        r15d, 0x1
0000000000001e42         nop        word [rax+rax]

                     loc_1e48:
0000000000001e48         mov        rdi, rbp                                    ; CODE XREF=main+1136, main+1158, sub_1fe0+1343, sub_1fe0+1480, sub_1fe0+1659
0000000000001e4b         and        ebx, r15d
0000000000001e4e         call       rpl_fts_read                                ; rpl_fts_read
0000000000001e53         test       rax, rax
0000000000001e56         mov        r14, rax
0000000000001e59         jne        loc_1e20

                     loc_1e5b:
0000000000001e5b         mov        rax, qword [rsp+0x128+var_108]              ; CODE XREF=main+885
0000000000001e60         cmp        dword [rax], 0x0
0000000000001e63         je         loc_1e76

0000000000001e65         movzx      ebx, byte [force_silent]                    ; force_silent
0000000000001e6c         test       bl, bl
0000000000001e6e         je         loc_25b6

0000000000001e74         xor        ebx, ebx

                     loc_1e76:
0000000000001e76         mov        rdi, rbp                                    ; CODE XREF=main+963, sub_1fe0+1532
0000000000001e79         call       rpl_fts_close                               ; rpl_fts_close
0000000000001e7e         test       eax, eax
0000000000001e80         je         loc_1eaa

0000000000001e82         lea        rsi, qword [aFtscloseFailed]                ; argument "msgid" for method j_dcgettext, "fts_close failed"
0000000000001e89         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e8e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e90         xor        ebx, ebx
0000000000001e92         call       j_dcgettext                                 ; dcgettext
0000000000001e97         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e9a         mov        rax, qword [rsp+0x128+var_108]
0000000000001e9f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001ea1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001ea3         xor        eax, eax
0000000000001ea5         call       j_error                                     ; error

                     loc_1eaa:
0000000000001eaa         xor        ebx, 0x1                                    ; CODE XREF=main+992
0000000000001ead         movzx      eax, bl
0000000000001eb0         mov        rbx, qword [rsp+0x128+var_40]
0000000000001eb8         xor        rbx, qword [fs:0x28]
0000000000001ec1         jne        loc_2711

0000000000001ec7         add        rsp, 0xf8
0000000000001ece         pop        rbx
0000000000001ecf         pop        rbp
0000000000001ed0         pop        r12
0000000000001ed2         pop        r13
0000000000001ed4         pop        r14
0000000000001ed6         pop        r15
0000000000001ed8         ret
                        ; endp
0000000000001ed9         cmp        byte [force_silent], 0x0                    ; force_silent
0000000000001ee0         je         sub_1fe0+1390
0000000000001ee6         nop        word [cs:rax+rax]

                     loc_1ef0:
0000000000001ef0         cmp        dword [verbosity], 0x2                      ; verbosity, CODE XREF=main+1170, main+1224, main+1251, main+1311, main+1323, sub_1fe0+187, sub_1fe0+250
0000000000001ef7         je         loc_1f06

0000000000001ef9         cmp        dword [verbosity], 0x0                      ; verbosity
0000000000001f00         je         loc_212f

                     loc_1f06:
0000000000001f06         xor        r15d, r15d                                  ; CODE XREF=main+1111

                     loc_1f09:
0000000000001f09         cmp        byte [recurse], 0x0                         ; recurse, CODE XREF=sub_1fe0+477, sub_1fe0+556, sub_1fe0+567, sub_1fe0+816, sub_1fe0+940
0000000000001f10         jne        loc_1e48

0000000000001f16         mov        edx, 0x4
0000000000001f1b         mov        rsi, r14
0000000000001f1e         mov        rdi, rbp
0000000000001f21         call       rpl_fts_set                                 ; rpl_fts_set
0000000000001f26         jmp        loc_1e48
0000000000001f2b         cmp        byte [force_silent], 0x0                    ; force_silent
0000000000001f32         jne        main+1104
0000000000001f34         mov        rsi, r13
0000000000001f37         mov        edi, 0x4
0000000000001f3c         call       quotearg_style                              ; quotearg_style
0000000000001f41         lea        rsi, qword [aCannotOperateO]                ; "cannot operate on dangling symlink %s"
0000000000001f48         mov        r15, rax
0000000000001f4b         xor        edi, edi
0000000000001f4d         mov        edx, 0x5
0000000000001f52         call       j_dcgettext                                 ; dcgettext
0000000000001f57         mov        rcx, r15
0000000000001f5a         mov        rdx, rax
0000000000001f5d         xor        esi, esi
0000000000001f5f         xor        edi, edi
0000000000001f61         xor        eax, eax
0000000000001f63         call       j_error                                     ; error
0000000000001f68         jmp        main+1104
0000000000001f6a         cmp        qword [r14+0x58], 0x0
0000000000001f6f         jne        main+1244
0000000000001f71         cmp        qword [r14+0x20], 0x0
0000000000001f76         je         sub_1fe0+1629
0000000000001f7c         cmp        byte [force_silent], 0x0                    ; force_silent, CODE XREF=main+1231
0000000000001f83         jne        main+1104
0000000000001f89         mov        rsi, r13
0000000000001f8c         mov        edi, 0x4
0000000000001f91         call       quotearg_style                              ; quotearg_style
0000000000001f96         lea        rsi, qword [aCannotAccessS]                 ; "cannot access %s"
0000000000001f9d         mov        r15, rax
0000000000001fa0         mov        edx, 0x5
0000000000001fa5         xor        edi, edi                                    ; CODE XREF=sub_1fe0+1418
0000000000001fa7         call       j_dcgettext                                 ; dcgettext
0000000000001fac         mov        esi, dword [r14+0x40]
0000000000001fb0         mov        rdx, rax
0000000000001fb3         mov        rcx, r15
0000000000001fb6         xor        edi, edi
0000000000001fb8         xor        eax, eax
0000000000001fba         call       j_error                                     ; error
0000000000001fbf         jmp        main+1104
0000000000001fc4         cmp        byte [force_silent], 0x0                    ; force_silent
0000000000001fcb         jne        main+1104
0000000000001fd1         mov        rdx, r13
0000000000001fd4         xor        edi, edi
0000000000001fd6         mov        esi, 0x3
0000000000001fdb         call       quotearg_n_style_colon                      ; quotearg_n_style_colon


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fe0:
0000000000001fe0         mov        esi, dword [r14+0x40]                       ; argument "__errnum" for method j_error
0000000000001fe4         lea        rdx, qword [aInvalidModeS+14]               ; argument "__format" for method j_error, 0x9d19
0000000000001feb         mov        rcx, rax
0000000000001fee         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001ff0         xor        eax, eax
0000000000001ff2         call       j_error                                     ; error
0000000000001ff7         jmp        main+1104
                        ; endp
0000000000001ffc         mov        rsi, r14
0000000000001fff         mov        rdi, rbp
0000000000002002         call       cycle_warning_required                      ; cycle_warning_required
0000000000002007         test       al, al
0000000000002009         jne        sub_1fe0+1423

                     loc_200f:
000000000000200f         mov        rax, qword [root_dev_ino]                   ; root_dev_ino, CODE XREF=main+905
0000000000002016         test       rax, rax
0000000000002019         je         loc_202b

000000000000201b         mov        rcx, qword [rax]
000000000000201e         cmp        qword [r14+0x80], rcx
0000000000002025         je         loc_248a

                     loc_202b:
000000000000202b         mov        edi, dword [r14+0x90]                       ; CODE XREF=sub_1fe0+57, sub_1fe0+1202
0000000000002032         mov        rax, qword [r14+0x30]
0000000000002036         xor        esi, esi
0000000000002038         mov        edx, dword [umask_value]                    ; umask_value
000000000000203e         mov        rcx, qword [change]                         ; change
0000000000002045         mov        r15d, edi
0000000000002048         mov        qword [rsp+0x128+var_100], rax
000000000000204d         mov        dword [rsp+0x128+var_124], edi
0000000000002051         and        r15d, 0xf000
0000000000002058         cmp        r15d, 0x4000
000000000000205f         sete       sil
0000000000002063         xor        r8d, r8d
0000000000002066         call       mode_adjust                                 ; mode_adjust
000000000000206b         cmp        r15d, aTreatSpecially                       ; " treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n"
0000000000002072         mov        edx, eax
0000000000002074         mov        dword [rsp+0x128+var_128], eax
0000000000002077         je         loc_21c2

000000000000207d         mov        edi, dword [rbp+0x2c]                       ; argument "__fd" for method j_fchmodat
0000000000002080         mov        rsi, qword [rsp+0x128+var_100]              ; argument "__file" for method j_fchmodat
0000000000002085         xor        ecx, ecx                                    ; argument "__flag" for method j_fchmodat
0000000000002087         call       j_fchmodat                                  ; fchmodat
000000000000208c         test       eax, eax
000000000000208e         je         loc_221c

0000000000002094         cmp        byte [force_silent], 0x0                    ; force_silent
000000000000209b         jne        loc_1ef0

00000000000020a1         mov        rsi, r13
00000000000020a4         mov        edi, 0x4
00000000000020a9         call       quotearg_style                              ; quotearg_style
00000000000020ae         lea        rsi, qword [aChangingPermis]                ; argument "msgid" for method j_dcgettext, "changing permissions of %s"
00000000000020b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020bc         mov        r15, rax
00000000000020bf         call       j_dcgettext                                 ; dcgettext
00000000000020c4         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000020c7         mov        rax, qword [rsp+0x128+var_108]
00000000000020cc         mov        rcx, r15
00000000000020cf         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000020d1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000020d3         xor        eax, eax
00000000000020d5         call       j_error                                     ; error
00000000000020da         jmp        loc_1ef0

                     loc_20df:
00000000000020df         cmp        eax, 0x3d                                   ; CODE XREF=loc_1c61
00000000000020e2         je         loc_1c78

00000000000020e8         jmp        loc_26a9

                     loc_20ed:
00000000000020ed         test       r13, r13                                    ; CODE XREF=main+695
00000000000020f0         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
00000000000020f7         je         loc_2660

00000000000020fd         cmp        ebp, eax
00000000000020ff         jle        loc_27be

                     loc_2105:
0000000000002105         mov        rdi, r13                                    ; CODE XREF=sub_1fe0+1679
0000000000002108         call       mode_compile                                ; mode_compile
000000000000210d         test       rax, rax
0000000000002110         mov        qword [change], rax                         ; change
0000000000002117         je         loc_274f

000000000000211d         xor        edi, edi                                    ; argument "__mask" for method j_umask
000000000000211f         call       j_umask                                     ; umask
0000000000002124         mov        dword [umask_value], eax                    ; umask_value
000000000000212a         jmp        loc_1d95

                     loc_212f:
000000000000212f         mov        rsi, qword [rsp+0x128+var_120]              ; argument #2 for method strmode, CODE XREF=main+1120
0000000000002134         mov        edi, dword [rsp+0x128+var_128]              ; argument #1 for method strmode
0000000000002137         call       strmode                                     ; strmode
000000000000213c         mov        rsi, qword [rsp+0x128+var_118]              ; argument #2 for method strmode
0000000000002141         mov        edi, dword [rsp+0x128+var_124]              ; argument #1 for method strmode
0000000000002145         mov        byte [rsp+0x128+var_4E], 0x0
000000000000214d         call       strmode                                     ; strmode
0000000000002152         lea        rsi, qword [aFailedToChange]                ; argument "msgid" for method j_dcgettext, "failed to change mode of %s from %04lo (%s) to %04lo (%s)\\n"
0000000000002159         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000215e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002160         mov        byte [rsp+0x128+var_42], 0x0
0000000000002168         call       j_dcgettext                                 ; dcgettext
000000000000216d         mov        rsi, r13
0000000000002170         mov        edi, 0x4
0000000000002175         mov        r15, rax
0000000000002178         call       quotearg_style                              ; quotearg_style
000000000000217d         mov        ecx, dword [rsp+0x128+var_124]
0000000000002181         sub        rsp, 0x8
0000000000002185         mov        rsi, r15
0000000000002188         mov        rdx, qword [rsp+0x130+var_120]
000000000000218d         mov        edi, 0x1
0000000000002192         xor        r15d, r15d
0000000000002195         and        ecx, 0xfff
000000000000219b         add        rdx, 0x1
000000000000219f         push       rdx
00000000000021a0         mov        r9d, dword [rsp+0x138+var_128]
00000000000021a5         mov        rdx, rax
00000000000021a8         mov        r8, qword [rsp+0x138+var_110]
00000000000021ad         xor        eax, eax
00000000000021af         and        r9d, 0xfff
00000000000021b6         call       j___printf_chk                              ; __printf_chk
00000000000021bb         pop        rax
00000000000021bc         pop        rdx
00000000000021bd         jmp        loc_1f09

                     loc_21c2:
00000000000021c2         mov        eax, dword [verbosity]                      ; verbosity, CODE XREF=sub_1fe0+151
00000000000021c8         cmp        eax, 0x2
00000000000021cb         je         loc_2211

00000000000021cd         test       eax, eax
00000000000021cf         jne        loc_2211

00000000000021d1         mov        rsi, r13
00000000000021d4         mov        edi, 0x4
00000000000021d9         mov        r15d, 0x1
00000000000021df         call       quotearg_style                              ; quotearg_style
00000000000021e4         lea        rsi, qword [aNeitherSymboli]                ; argument "msgid" for method j_dcgettext, "neither symbolic link %s nor referent has been changed\\n"
00000000000021eb         mov        r13, rax
00000000000021ee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021f5         call       j_dcgettext                                 ; dcgettext
00000000000021fa         mov        rdx, r13
00000000000021fd         mov        rsi, rax
0000000000002200         mov        edi, 0x1
0000000000002205         xor        eax, eax
0000000000002207         call       j___printf_chk                              ; __printf_chk
000000000000220c         jmp        loc_1f09

                     loc_2211:
0000000000002211         mov        r15d, 0x1                                   ; CODE XREF=sub_1fe0+491, sub_1fe0+495, sub_1fe0+764
0000000000002217         jmp        loc_1f09

                     loc_221c:
000000000000221c         cmp        dword [verbosity], 0x2                      ; verbosity, CODE XREF=sub_1fe0+174
0000000000002223         je         loc_22d1

0000000000002229         mov        ecx, dword [rsp+0x128+var_128]
000000000000222c         mov        eax, ecx
000000000000222e         and        ch, 0xe
0000000000002231         jne        loc_2391

                     loc_2237:
0000000000002237         xor        eax, dword [rsp+0x128+var_124]              ; CODE XREF=sub_1fe0+1489
000000000000223b         test       eax, 0xfff
0000000000002240         je         loc_23f5

0000000000002246         mov        rsi, qword [rsp+0x128+var_120]              ; argument #2 for method strmode
000000000000224b         mov        edi, dword [rsp+0x128+var_128]              ; argument #1 for method strmode
000000000000224e         call       strmode                                     ; strmode
0000000000002253         mov        rsi, qword [rsp+0x128+var_118]              ; argument #2 for method strmode
0000000000002258         mov        edi, dword [rsp+0x128+var_124]              ; argument #1 for method strmode
000000000000225c         mov        byte [rsp+0x128+var_4E], 0x0
0000000000002264         call       strmode                                     ; strmode
0000000000002269         lea        rsi, qword [aModeOfSChanged]                ; argument "msgid" for method j_dcgettext, "mode of %s changed from %04lo (%s) to %04lo (%s)\\n"
0000000000002270         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002275         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002277         mov        byte [rsp+0x128+var_42], 0x0
000000000000227f         call       j_dcgettext                                 ; dcgettext
0000000000002284         mov        rsi, r13
0000000000002287         mov        edi, 0x4
000000000000228c         mov        r15, rax
000000000000228f         call       quotearg_style                              ; quotearg_style
0000000000002294         mov        ecx, dword [rsp+0x128+var_124]
0000000000002298         sub        rsp, 0x8
000000000000229c         mov        edi, 0x1
00000000000022a1         mov        rsi, qword [rsp+0x130+var_120]
00000000000022a6         and        ecx, 0xfff
00000000000022ac         lea        rdx, qword [rsi+1]
00000000000022b0         mov        rsi, r15
00000000000022b3         push       rdx
00000000000022b4         mov        r9d, dword [rsp+0x138+var_128]
00000000000022b9         mov        rdx, rax
00000000000022bc         mov        r8, qword [rsp+0x138+var_110]
00000000000022c1         xor        eax, eax
00000000000022c3         and        r9d, 0xfff
00000000000022ca         call       j___printf_chk                              ; __printf_chk
00000000000022cf         pop        rcx
00000000000022d0         pop        rsi

                     loc_22d1:
00000000000022d1         movzx      r15d, byte [diagnose_surprises]             ; diagnose_surprises, CODE XREF=sub_1fe0+579, sub_1fe0+1052, sub_1fe0+1172
00000000000022d9         test       r15b, r15b
00000000000022dc         je         loc_2211

00000000000022e2         mov        edi, dword [rsp+0x128+var_124]
00000000000022e6         mov        rcx, qword [change]                         ; change
00000000000022ed         xor        esi, esi
00000000000022ef         mov        eax, edi
00000000000022f1         and        eax, 0xf000
00000000000022f6         cmp        eax, 0x4000
00000000000022fb         sete       sil
00000000000022ff         xor        edx, edx
0000000000002301         xor        r8d, r8d
0000000000002304         call       mode_adjust                                 ; mode_adjust
0000000000002309         mov        edx, eax
000000000000230b         not        edx
000000000000230d         test       dword [rsp+0x128+var_128], edx
0000000000002310         je         loc_1f09

0000000000002316         mov        r15, qword [rsp+0x128+var_120]
000000000000231b         mov        edi, dword [rsp+0x128+var_128]              ; argument #1 for method strmode
000000000000231e         mov        dword [rsp+0x128+var_100], eax
0000000000002322         mov        rsi, r15                                    ; argument #2 for method strmode
0000000000002325         call       strmode                                     ; strmode
000000000000232a         mov        eax, dword [rsp+0x128+var_100]
000000000000232e         mov        rsi, qword [rsp+0x128+var_118]              ; argument #2 for method strmode
0000000000002333         mov        edi, eax                                    ; argument #1 for method strmode
0000000000002335         call       strmode                                     ; strmode
000000000000233a         mov        rdx, r13
000000000000233d         mov        esi, 0x3
0000000000002342         xor        edi, edi
0000000000002344         mov        byte [rsp+0x128+var_42], 0x0
000000000000234c         mov        byte [rsp+0x128+var_4E], 0x0
0000000000002354         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002359         lea        rsi, qword [aSNewPermission]                ; argument "msgid" for method j_dcgettext, "%s: new permissions are %s, not %s"
0000000000002360         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002365         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002367         mov        r13, rax
000000000000236a         call       j_dcgettext                                 ; dcgettext
000000000000236f         mov        r9, qword [rsp+0x128+var_110]
0000000000002374         lea        r8, qword [r15+1]
0000000000002378         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000237b         mov        rcx, r13
000000000000237e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002380         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002382         xor        eax, eax
0000000000002384         xor        r15d, r15d
0000000000002387         call       j_error                                     ; error
000000000000238c         jmp        loc_1f09

                     loc_2391:
0000000000002391         mov        esi, dword [rbp+0x2c]                       ; argument "__fildes" for method j___fxstatat, CODE XREF=sub_1fe0+593
0000000000002394         mov        rdx, qword [rsp+0x128+var_100]              ; argument "__filename" for method j___fxstatat
0000000000002399         lea        rcx, qword [rsp+0x128+var_E8]               ; argument "__stat_buf" for method j___fxstatat
000000000000239e         xor        r8d, r8d                                    ; argument "__flag" for method j___fxstatat
00000000000023a1         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
00000000000023a6         call       j___fxstatat                                ; __fxstatat
00000000000023ab         test       eax, eax
00000000000023ad         je         loc_25ad

00000000000023b3         cmp        byte [force_silent], 0x0                    ; force_silent
00000000000023ba         jne        loc_23f5

00000000000023bc         mov        rsi, r13
00000000000023bf         mov        edi, 0x4
00000000000023c4         call       quotearg_style                              ; quotearg_style
00000000000023c9         lea        rsi, qword [aGettingNewAttr]                ; argument "msgid" for method j_dcgettext, "getting new attributes of %s"
00000000000023d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d7         mov        r15, rax
00000000000023da         call       j_dcgettext                                 ; dcgettext
00000000000023df         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000023e2         mov        rax, qword [rsp+0x128+var_108]
00000000000023e7         mov        rcx, r15
00000000000023ea         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000023ec         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000023ee         xor        eax, eax
00000000000023f0         call       j_error                                     ; error

                     loc_23f5:
00000000000023f5         cmp        dword [verbosity], 0x0                      ; verbosity, CODE XREF=sub_1fe0+608, sub_1fe0+986
00000000000023fc         jne        loc_22d1

0000000000002402         mov        rsi, qword [rsp+0x128+var_120]              ; argument #2 for method strmode
0000000000002407         mov        edi, dword [rsp+0x128+var_128]              ; argument #1 for method strmode
000000000000240a         call       strmode                                     ; strmode
000000000000240f         mov        rsi, qword [rsp+0x128+var_118]              ; argument #2 for method strmode
0000000000002414         mov        edi, dword [rsp+0x128+var_124]              ; argument #1 for method strmode
0000000000002418         mov        byte [rsp+0x128+var_4E], 0x0
0000000000002420         call       strmode                                     ; strmode
0000000000002425         lea        rsi, qword [aModeOfSRetaine]                ; argument "msgid" for method j_dcgettext, "mode of %s retained as %04lo (%s)\\n"
000000000000242c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002431         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002433         mov        byte [rsp+0x128+var_42], 0x0
000000000000243b         call       j_dcgettext                                 ; dcgettext
0000000000002440         mov        rsi, r13
0000000000002443         mov        edi, 0x4
0000000000002448         mov        r15, rax
000000000000244b         call       quotearg_style                              ; quotearg_style
0000000000002450         mov        rdx, qword [rsp+0x128+var_120]
0000000000002455         mov        ecx, dword [rsp+0x128+var_128]
0000000000002458         mov        rsi, r15
000000000000245b         mov        edi, 0x1
0000000000002460         lea        r8, qword [rdx+1]
0000000000002464         and        ecx, 0xfff
000000000000246a         mov        rdx, rax
000000000000246d         xor        eax, eax
000000000000246f         call       j___printf_chk                              ; __printf_chk
0000000000002474         jmp        loc_22d1

                     loc_2479:
0000000000002479         sub        eax, 0x2b                                   ; CODE XREF=main+317
000000000000247c         cmp        eax, 0x1
000000000000247f         jbe        loc_1c78

0000000000002485         jmp        loc_26a9

                     loc_248a:
000000000000248a         mov        rax, qword [rax+8]                          ; CODE XREF=sub_1fe0+69
000000000000248e         cmp        qword [r14+0x78], rax
0000000000002492         jne        loc_202b

0000000000002498         lea        rsi, qword [aLibs+6]                        ; argument "__s2" for method j_strcmp, 0xa686
000000000000249f         mov        rdi, r13                                    ; argument "__s1" for method j_strcmp
00000000000024a2         call       j_strcmp                                    ; strcmp
00000000000024a7         test       eax, eax
00000000000024a9         jne        loc_26b3

00000000000024af         mov        rsi, r13
00000000000024b2         mov        edi, 0x4
00000000000024b7         call       quotearg_style                              ; quotearg_style
00000000000024bc         lea        rsi, qword [aItIsDangerousT_a3d0]           ; argument "msgid" for method j_dcgettext, "it is dangerous to operate recursively on %s"
00000000000024c3         mov        r13, rax
00000000000024c6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024cb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024cd         call       j_dcgettext                                 ; dcgettext
00000000000024d2         mov        rcx, r13
00000000000024d5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000024d8         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000024da         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024dc         xor        eax, eax
00000000000024de         call       j_error                                     ; error

                     loc_24e3:
00000000000024e3         lea        rsi, qword [aUseNopreserver]                ; argument "msgid" for method j_dcgettext, "use --no-preserve-root to override this failsafe", CODE XREF=sub_1fe0+1829
00000000000024ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024ef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024f1         xor        r15d, r15d
00000000000024f4         call       j_dcgettext                                 ; dcgettext
00000000000024f9         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000024fb         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000024fe         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002500         xor        eax, eax
0000000000002502         call       j_error                                     ; error
0000000000002507         mov        edx, 0x4
000000000000250c         mov        rsi, r14
000000000000250f         mov        rdi, rbp
0000000000002512         call       rpl_fts_set                                 ; rpl_fts_set
0000000000002517         mov        rdi, rbp
000000000000251a         call       rpl_fts_read                                ; rpl_fts_read
000000000000251f         jmp        loc_1e48

                     loc_2524:
0000000000002524         cmp        eax, 0x67                                   ; CODE XREF=main+414
0000000000002527         je         loc_1c78

000000000000252d         jmp        loc_26a9

                     loc_2532:
0000000000002532         cmp        eax, 0x78                                   ; CODE XREF=main+241
0000000000002535         jle        loc_1c78

000000000000253b         jmp        loc_26a9

                     loc_2540:
0000000000002540         cmp        eax, 0x72                                   ; CODE XREF=main+405
0000000000002543         jge        loc_1c78

0000000000002549         jmp        loc_26a9
000000000000254e         mov        rsi, r13                                    ; CODE XREF=main+1088
0000000000002551         mov        edi, 0x4
0000000000002556         call       quotearg_style                              ; quotearg_style
000000000000255b         mov        edx, 0x5
0000000000002560         mov        r15, rax
0000000000002563         lea        rsi, qword [aCannotReadDire]                ; "cannot read directory %s"
000000000000256a         jmp        main+1285
000000000000256f         mov        rdx, r13                                    ; CODE XREF=sub_1fe0+41
0000000000002572         mov        esi, 0x3
0000000000002577         xor        edi, edi
0000000000002579         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000257e         lea        rsi, qword [aWarningCircula]                ; "WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n"
0000000000002585         mov        r13, rax
0000000000002588         mov        edx, 0x5
000000000000258d         xor        edi, edi
000000000000258f         xor        r15d, r15d
0000000000002592         call       j_dcgettext                                 ; dcgettext
0000000000002597         mov        rcx, r13
000000000000259a         mov        rdx, rax
000000000000259d         xor        esi, esi
000000000000259f         xor        edi, edi
00000000000025a1         xor        eax, eax
00000000000025a3         call       j_error                                     ; error
00000000000025a8         jmp        main+936

                     loc_25ad:
00000000000025ad         mov        eax, dword [rsp+0x128+var_D0]               ; CODE XREF=sub_1fe0+973
00000000000025b1         jmp        loc_2237

                     loc_25b6:
00000000000025b6         lea        rsi, qword [aFtsreadFailed]                 ; argument "msgid" for method j_dcgettext, "fts_read failed", CODE XREF=main+974
00000000000025bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025c4         call       j_dcgettext                                 ; dcgettext
00000000000025c9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025cc         mov        rax, qword [rsp+0x128+var_108]
00000000000025d1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025d3         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000025d5         xor        eax, eax
00000000000025d7         call       j_error                                     ; error
00000000000025dc         jmp        loc_1e76

                     loc_25e1:
00000000000025e1         lea        rdi, qword [dev_ino_buf.7087]               ; dev_ino_buf.7087, CODE XREF=main+777
00000000000025e8         call       get_root_dev_ino                            ; get_root_dev_ino
00000000000025ed         test       rax, rax
00000000000025f0         mov        qword [root_dev_ino], rax                   ; root_dev_ino
00000000000025f7         jne        loc_1dba

00000000000025fd         lea        rsi, qword [aLibs+6]                        ; 0xa686
0000000000002604         mov        edi, 0x4
0000000000002609         call       quotearg_style                              ; quotearg_style
000000000000260e         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
0000000000002615         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000261a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000261c         mov        rbx, rax
000000000000261f         call       j_dcgettext                                 ; dcgettext
0000000000002624         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002627         mov        rax, qword [rsp+0x128+var_108]
000000000000262c         mov        rcx, rbx
000000000000262f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002634         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002636         xor        eax, eax
0000000000002638         call       j_error                                     ; error
000000000000263d         mov        qword [r14+0x20], 0x1                       ; CODE XREF=main+1238
0000000000002645         mov        edx, 0x1
000000000000264a         mov        rsi, r14
000000000000264d         mov        rdi, rbp
0000000000002650         mov        r15d, 0x1
0000000000002656         call       rpl_fts_set                                 ; rpl_fts_set
000000000000265b         jmp        loc_1e48

                     loc_2660:
0000000000002660         lea        edx, dword [rax+1]                          ; CODE XREF=sub_1fe0+279
0000000000002663         mov        r13, qword [rbx+rax*8]
0000000000002667         cmp        edx, ebp
0000000000002669         mov        dword [optind@@GLIBC_2.2.5], edx            ; optind@@GLIBC_2.2.5
000000000000266f         jl         loc_2105

0000000000002675         test       r13, r13
0000000000002678         je         loc_2688

                     loc_267a:
000000000000267a         movsxd     rdx, edx                                    ; CODE XREF=sub_1fe0+2016
000000000000267d         cmp        qword [rbx+rdx*8-8], r13
0000000000002682         je         loc_2788

                     loc_2688:
0000000000002688         lea        rsi, qword [aMissingOperand_9ce2]           ; "missing operand", CODE XREF=main+716, sub_1fe0+1688
000000000000268f         mov        edx, 0x5

                     loc_2694:
0000000000002694         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=sub_1fe0+2033
0000000000002696         call       j_dcgettext                                 ; dcgettext
000000000000269b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000269d         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000026a0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026a2         xor        eax, eax
00000000000026a4         call       j_error                                     ; error

                     loc_26a9:
00000000000026a9         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+263, main+328, main+463, sub_1fe0+264, sub_1fe0+1189, sub_1fe0+1357, sub_1fe0+1371, sub_1fe0+1385, sub_1fe0+2009
00000000000026ae         call       usage                                       ; usage

                     loc_26b3:
00000000000026b3         lea        rdx, qword [aLibs+6]                        ; 0xa686, CODE XREF=sub_1fe0+1225
00000000000026ba         mov        esi, 0x4
00000000000026bf         mov        edi, 0x1
00000000000026c4         call       quotearg_n_style                            ; quotearg_n_style
00000000000026c9         mov        rdx, r13
00000000000026cc         xor        edi, edi
00000000000026ce         mov        esi, 0x4
00000000000026d3         mov        r15, rax
00000000000026d6         call       quotearg_n_style                            ; quotearg_n_style
00000000000026db         lea        rsi, qword [aItIsDangerousT]                ; argument "msgid" for method j_dcgettext, "it is dangerous to operate recursively on %s (same as %s)"
00000000000026e2         mov        r13, rax
00000000000026e5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026ec         call       j_dcgettext                                 ; dcgettext
00000000000026f1         mov        r8, r15
00000000000026f4         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000026f7         mov        rcx, r13
00000000000026fa         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000026fc         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026fe         xor        eax, eax
0000000000002700         call       j_error                                     ; error
0000000000002705         jmp        loc_24e3

                     loc_270a:
000000000000270a         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+311
000000000000270c         call       usage                                       ; usage

                     loc_2711:
0000000000002711         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1057
                        ; endp

                     loc_2716:
0000000000002716         mov        rsi, r15                                    ; CODE XREF=main+751
0000000000002719         mov        edi, 0x4
000000000000271e         call       quotearg_style                              ; quotearg_style
0000000000002723         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
000000000000272a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000272f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002731         mov        rbx, rax
0000000000002734         call       j_dcgettext                                 ; dcgettext
0000000000002739         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
000000000000273d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002740         mov        rcx, rbx
0000000000002743         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002748         xor        eax, eax
000000000000274a         call       j_error                                     ; error

                     loc_274f:
000000000000274f         mov        rdi, r13                                    ; CODE XREF=sub_1fe0+311
0000000000002752         call       quote                                       ; quote
0000000000002757         lea        rsi, qword [aInvalidModeS]                  ; argument "msgid" for method j_dcgettext, "invalid mode: %s"
000000000000275e         mov        rbx, rax
0000000000002761         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002766         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002768         call       j_dcgettext                                 ; dcgettext
000000000000276d         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000276f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002772         mov        rcx, rbx
0000000000002775         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002777         xor        eax, eax
0000000000002779         call       j_error                                     ; error
000000000000277e         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000002783         call       usage                                       ; usage

                     loc_2788:
0000000000002788         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=sub_1fe0+1698
000000000000278d         call       quote                                       ; quote
0000000000002792         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand after %s"
0000000000002799         mov        rbx, rax
000000000000279c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000279e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027a3         call       j_dcgettext                                 ; dcgettext
00000000000027a8         mov        rcx, rbx
00000000000027ab         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027ae         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000027b0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000027b2         xor        eax, eax
00000000000027b4         call       j_error                                     ; error
00000000000027b9         jmp        loc_26a9

                     loc_27be:
00000000000027be         mov        edx, eax                                    ; CODE XREF=sub_1fe0+287
00000000000027c0         jmp        loc_267a

                     loc_27c5:
00000000000027c5         mov        edx, 0x5                                    ; CODE XREF=main+704
00000000000027ca         lea        rsi, qword [aCannotCombineM]                ; "cannot combine mode and --reference options"
00000000000027d1         jmp        loc_2694
00000000000027d6         align      32                                          ; End of unwind block (FDE at 0xb5a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000027e0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xb50c)
00000000000027e2         mov        r9, rdx
00000000000027e5         pop        rsi
00000000000027e6         mov        rdx, rsp
00000000000027e9         and        rsp, 0xfffffffffffffff0
00000000000027ed         push       rax
00000000000027ee         push       rsp
00000000000027ef         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000027f6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000027fd         lea        rdi, qword [main]                           ; main
0000000000002804         call       qword [qword_20dfd8+8]                      ; 0x20dfe0
000000000000280a         hlt
                        ; endp
000000000000280b         align      16                                          ; End of unwind block (FDE at 0xb50c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002810         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002817         push       rbp
0000000000002818         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000281f         cmp        rax, rdi
0000000000002822         mov        rbp, rsp
0000000000002825         je         loc_2840

0000000000002827         mov        rax, qword [qword_20dfd8]                   ; qword_20dfd8
000000000000282e         test       rax, rax
0000000000002831         je         loc_2840

0000000000002833         pop        rbp
0000000000002834         jmp        rax
                        ; endp
0000000000002836         align      64

                     loc_2840:
0000000000002840         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002841         ret
                        ; endp
0000000000002842         align      16

                     register_tm_clones:
0000000000002850         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002857         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000285e         push       rbp
000000000000285f         sub        rsi, rdi
0000000000002862         mov        rbp, rsp
0000000000002865         sar        rsi, 0x3
0000000000002869         mov        rax, rsi
000000000000286c         shr        rax, 0x3f
0000000000002870         add        rsi, rax
0000000000002873         sar        rsi, 0x1
0000000000002876         je         loc_2890

0000000000002878         mov        rax, qword [qword_20dff0]                   ; qword_20dff0
000000000000287f         test       rax, rax
0000000000002882         je         loc_2890

0000000000002884         pop        rbp
0000000000002885         jmp        rax
                        ; endp
0000000000002887         align      16

                     loc_2890:
0000000000002890         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002891         ret
                        ; endp
0000000000002892         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000028a0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000028a7         jne        loc_28d8

00000000000028a9         cmp        qword [qword_20dff8], 0x0                   ; qword_20dff8
00000000000028b1         push       rbp
00000000000028b2         mov        rbp, rsp
00000000000028b5         je         loc_28c3

00000000000028b7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000028be         call       j_qword_20dff8                              ; qword_20dff8

                     loc_28c3:
00000000000028c3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000028c8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000028cf         pop        rbp
00000000000028d0         ret
                        ; endp
00000000000028d1         align      8

                     loc_28d8:
00000000000028d8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000028da         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000028e0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000028e1         mov        rbp, rsp
00000000000028e4         pop        rbp
00000000000028e5         jmp        register_tm_clones                          ; register_tm_clones
00000000000028ea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000028f0         push       r13                                         ; Begin of unwind block (FDE at 0xb57c), CODE XREF=sub_1fe0+1742, sub_1fe0+1836, sub_1fe0+1955
00000000000028f2         push       r12
00000000000028f4         mov        edx, 0x5
00000000000028f9         push       rbp
00000000000028fa         push       rbx
00000000000028fb         mov        ebp, edi
00000000000028fd         sub        rsp, 0x88
0000000000002904         mov        rbx, qword [program_name]                   ; program_name
000000000000290b         mov        rax, qword [fs:0x28]
0000000000002914         mov        qword [rsp+0xa8+var_30], rax
0000000000002919         xor        eax, eax
000000000000291b         test       edi, edi
000000000000291d         je         loc_294d

000000000000291f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002926         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002928         call       j_dcgettext                                 ; dcgettext
000000000000292d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002934         mov        rdx, rax
0000000000002937         mov        rcx, rbx
000000000000293a         mov        esi, 0x1
000000000000293f         xor        eax, eax
0000000000002941         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2946:
0000000000002946         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+830
0000000000002948         call       j_exit                                      ; exit
                        ; endp

                     loc_294d:
000000000000294d         lea        rsi, qword [aUsageSOptionMo]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... MODE[,MODE]... FILE...\\n  or:  %s [OPTION]... OCTAL-MODE FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n", CODE XREF=usage+45
0000000000002954         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002956         call       j_dcgettext                                 ; dcgettext
000000000000295b         mov        rcx, rbx
000000000000295e         mov        r8, rbx
0000000000002961         mov        rdx, rbx
0000000000002964         mov        rsi, rax
0000000000002967         mov        edi, 0x1
000000000000296c         xor        eax, eax
000000000000296e         call       j___printf_chk                              ; __printf_chk
0000000000002973         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000297a         lea        rsi, qword [aChangeTheModeO]                ; argument "msgid" for method j_dcgettext, "Change the mode of each FILE to MODE.\\nWith --reference, change the mode of each FILE to that of RFILE.\\n\\n"
0000000000002981         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002986         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002988         call       j_dcgettext                                 ; dcgettext
000000000000298d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002990         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002993         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002998         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000299f         lea        rsi, qword [aChangeTheModeO+112]            ; argument "msgid" for method j_dcgettext, 0x9f10
00000000000029a6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029ad         call       j_dcgettext                                 ; dcgettext
00000000000029b2         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029b5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029b8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029bd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029c4         lea        rsi, qword [aEOutputADiagno+64]             ; argument "msgid" for method j_dcgettext, 0x9fe0
00000000000029cb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029d0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029d2         call       j_dcgettext                                 ; dcgettext
00000000000029d7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029da         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029dd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029e2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029e9         lea        rsi, qword [aReferencerfile]                ; argument "msgid" for method j_dcgettext, "      --reference=RFILE  use RFILE's mode instead of MODE values\\n"
00000000000029f0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029f7         call       j_dcgettext                                 ; dcgettext
00000000000029fc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029ff         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a02         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a07         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a0e         lea        rsi, qword [aRRecursiveChan]                ; argument "msgid" for method j_dcgettext, "  -R, --recursive        change files and directories recursively\\n"
0000000000002a15         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a1a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a1c         call       j_dcgettext                                 ; dcgettext
0000000000002a21         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a24         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a27         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a2c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a33         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002a3a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a3f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a41         call       j_dcgettext                                 ; dcgettext
0000000000002a46         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a49         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a4c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a51         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a58         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002a5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a66         call       j_dcgettext                                 ; dcgettext
0000000000002a6b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a6e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a71         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a76         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a7d         lea        rsi, qword [aNeachModeIsOfT]                ; argument "msgid" for method j_dcgettext, "\\nEach MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.\\n"
0000000000002a84         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a89         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a8b         call       j_dcgettext                                 ; dcgettext
0000000000002a90         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a93         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a96         lea        rbx, qword [aChmod]                         ; "chmod"
0000000000002a9d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002aa2         lea        rax, qword [aChmod+6]                       ; 0x9c0a
0000000000002aa9         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002ab0         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002ab9         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002ac2         mov        rdx, rsp
0000000000002ac5         mov        qword [rsp+0xa8+var_A8], rax
0000000000002ac9         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002ad0         mov        qword [rsp+0xa8+var_78], rcx
0000000000002ad5         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002adc         mov        qword [rsp+0xa8+var_A0], rax
0000000000002ae1         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002ae8         mov        qword [rsp+0xa8+var_68], rcx
0000000000002aed         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002af4         mov        qword [rsp+0xa8+var_98], rax
0000000000002af9         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002b00         mov        qword [rsp+0xa8+var_58], rcx
0000000000002b05         mov        qword [rsp+0xa8+var_90], rax
0000000000002b0a         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002b11         mov        qword [rsp+0xa8+var_88], rax
0000000000002b16         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002b1d         mov        qword [rsp+0xa8+var_80], rax
0000000000002b22         mov        qword [rsp+0xa8+var_70], rax
0000000000002b27         mov        qword [rsp+0xa8+var_60], rax
0000000000002b2c         mov        qword [rsp+0xa8+var_50], rax
0000000000002b31         nop        dword [rax]

                     loc_2b38:
0000000000002b38         add        rdx, 0x10                                   ; CODE XREF=usage+613
0000000000002b3c         mov        rdi, qword [rdx]
0000000000002b3f         test       rdi, rdi
0000000000002b42         je         loc_2b57

0000000000002b44         mov        ecx, 0x6
0000000000002b49         mov        rsi, rbx
0000000000002b4c         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b4e         seta       al
0000000000002b51         sbb        al, 0x0
0000000000002b53         test       al, al
0000000000002b55         jne        loc_2b38

                     loc_2b57:
0000000000002b57         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+594
0000000000002b5b         xor        edi, edi
0000000000002b5d         mov        edx, 0x5
0000000000002b62         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002b69         test       r12, r12
0000000000002b6c         je         loc_2c33

0000000000002b72         call       j_dcgettext                                 ; dcgettext
0000000000002b77         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002b7e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c80
0000000000002b85         mov        rsi, rax
0000000000002b88         mov        edi, 0x1
0000000000002b8d         xor        eax, eax
0000000000002b8f         call       j___printf_chk                              ; __printf_chk
0000000000002b94         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002b96         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002b9b         call       j_setlocale                                 ; setlocale
0000000000002ba0         test       rax, rax
0000000000002ba3         je         loc_2bc1

0000000000002ba5         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9c8e
0000000000002bac         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002bb1         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002bb4         call       j_strncmp                                   ; strncmp
0000000000002bb9         test       eax, eax
0000000000002bbb         jne        loc_2cc8

                     loc_2bc1:
0000000000002bc1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+691, usage+1021
0000000000002bc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bcf         call       j_dcgettext                                 ; dcgettext
0000000000002bd4         lea        rcx, qword [aChmod]                         ; "chmod"
0000000000002bdb         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002be2         mov        rsi, rax
0000000000002be5         mov        edi, 0x1
0000000000002bea         xor        eax, eax
0000000000002bec         call       j___printf_chk                              ; __printf_chk
0000000000002bf1         cmp        r12, rbx
0000000000002bf4         lea        rcx, qword [aMulticallInvoc+10]             ; 0x9c26
0000000000002bfb         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xabc1
0000000000002c02         cmove      rbx, rcx

                     loc_2c06:
0000000000002c06         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+972
0000000000002c0d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c0f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c14         call       j_dcgettext                                 ; dcgettext
0000000000002c19         mov        rcx, rbx
0000000000002c1c         mov        rsi, rax
0000000000002c1f         mov        rdx, r12
0000000000002c22         mov        edi, 0x1
0000000000002c27         xor        eax, eax
0000000000002c29         call       j___printf_chk                              ; __printf_chk
0000000000002c2e         jmp        loc_2946

                     loc_2c33:
0000000000002c33         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+636
0000000000002c38         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002c3f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c80
0000000000002c46         mov        rsi, rax
0000000000002c49         mov        edi, 0x1
0000000000002c4e         xor        eax, eax
0000000000002c50         call       j___printf_chk                              ; __printf_chk
0000000000002c55         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002c57         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002c5c         call       j_setlocale                                 ; setlocale
0000000000002c61         test       rax, rax
0000000000002c64         je         loc_2c7e

0000000000002c66         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9c8e
0000000000002c6d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002c72         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002c75         call       j_strncmp                                   ; strncmp
0000000000002c7a         test       eax, eax
0000000000002c7c         jne        loc_2cc1

                     loc_2c7e:
0000000000002c7e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+884
0000000000002c85         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c8a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c8c         lea        r12, qword [aChmod]                         ; "chmod"
0000000000002c93         lea        rbx, qword [aMulticallInvoc+10]             ; 0x9c26
0000000000002c9a         call       j_dcgettext                                 ; dcgettext
0000000000002c9f         lea        rcx, qword [aChmod]                         ; "chmod"
0000000000002ca6         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002cad         mov        rsi, rax
0000000000002cb0         mov        edi, 0x1
0000000000002cb5         xor        eax, eax
0000000000002cb7         call       j___printf_chk                              ; __printf_chk
0000000000002cbc         jmp        loc_2c06

                     loc_2cc1:
0000000000002cc1         lea        r12, qword [aChmod]                         ; "chmod", CODE XREF=usage+908

                     loc_2cc8:
0000000000002cc8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+715
0000000000002ccf         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002cd6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002cd8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002cdd         call       j_dcgettext                                 ; dcgettext
0000000000002ce2         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002ce5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002ce8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002ced         jmp        loc_2bc1
0000000000002cf2         align      256                                         ; End of unwind block (FDE at 0xb57c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002d00         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xb62c), file_name
0000000000002d07         ret
                        ; endp
0000000000002d08         align      16                                          ; End of unwind block (FDE at 0xb62c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002d10         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xb640), ignore_EPIPE
0000000000002d17         ret
                        ; endp
0000000000002d18         align      32                                          ; End of unwind block (FDE at 0xb640)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002d20         push       rbp                                         ; Begin of unwind block (FDE at 0xb654), DATA XREF=main+119
0000000000002d21         push       rbx
0000000000002d22         sub        rsp, 0x8
0000000000002d26         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002d2d         call       close_stream                                ; close_stream
0000000000002d32         test       eax, eax
0000000000002d34         je         loc_2d4c

0000000000002d36         call       j___errno_location                          ; __errno_location
0000000000002d3b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002d42         mov        rbx, rax
0000000000002d45         je         loc_2d63

0000000000002d47         cmp        dword [rax], 0x20
0000000000002d4a         jne        loc_2d63

                     loc_2d4c:
0000000000002d4c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002d53         call       close_stream                                ; close_stream
0000000000002d58         test       eax, eax
0000000000002d5a         jne        loc_2da2

0000000000002d5c         add        rsp, 0x8
0000000000002d60         pop        rbx
0000000000002d61         pop        rbp
0000000000002d62         ret
                        ; endp

                     loc_2d63:
0000000000002d63         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002d6a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d6c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d71         call       j_dcgettext                                 ; dcgettext
0000000000002d76         mov        rdi, qword [file_name]                      ; file_name
0000000000002d7d         mov        rbp, rax
0000000000002d80         test       rdi, rdi
0000000000002d83         je         loc_2dad

0000000000002d85         call       quotearg_colon                              ; quotearg_colon
0000000000002d8a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002d8c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002d93         mov        rcx, rax
0000000000002d96         mov        r8, rbp
0000000000002d99         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002d9b         xor        eax, eax
0000000000002d9d         call       j_error                                     ; error

                     loc_2da2:
0000000000002da2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002da8         call       j__exit                                     ; _exit
                        ; endp

                     loc_2dad:
0000000000002dad         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002daf         lea        rdx, qword [aInvalidModeS+14]               ; argument "__format" for method j_error, 0x9d19
0000000000002db6         mov        rcx, rax
0000000000002db9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002dbb         xor        eax, eax
0000000000002dbd         call       j_error                                     ; error
0000000000002dc2         jmp        loc_2da2
0000000000002dc4         align      16                                          ; End of unwind block (FDE at 0xb654)

                     strmode:
0000000000002dd0         mov        edx, edi                                    ; Begin of unwind block (FDE at 0xb684), CODE XREF=sub_1fe0+343, sub_1fe0+365, sub_1fe0+622, sub_1fe0+644, sub_1fe0+837, sub_1fe0+853, sub_1fe0+1066, sub_1fe0+1088, filemodestring+3
0000000000002dd2         mov        eax, 0x2d
0000000000002dd7         and        edx, 0xf000
0000000000002ddd         cmp        edx, 0x8000
0000000000002de3         je         loc_2e40

0000000000002de5         cmp        edx, 0x4000
0000000000002deb         mov        eax, 0x64
0000000000002df0         je         loc_2e40

0000000000002df2         cmp        edx, 0x6000
0000000000002df8         mov        eax, 0x62
0000000000002dfd         je         loc_2e40

0000000000002dff         cmp        edx, 0x2000
0000000000002e05         mov        eax, 0x63
0000000000002e0a         je         loc_2e40

0000000000002e0c         cmp        edx, aTreatSpecially                        ; " treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n"
0000000000002e12         mov        eax, 0x6c
0000000000002e17         je         loc_2e40

0000000000002e19         cmp        edx, 0x1000
0000000000002e1f         mov        eax, 0x70
0000000000002e24         je         loc_2e40

0000000000002e26         cmp        edx, 0xc000
0000000000002e2c         mov        eax, 0x73
0000000000002e31         mov        edx, 0x3f
0000000000002e36         cmovne     eax, edx
0000000000002e39         nop        dword [rax]

                     loc_2e40:
0000000000002e40         mov        byte [rsi], al                              ; CODE XREF=strmode+19, strmode+32, strmode+45, strmode+58, strmode+71, strmode+84
0000000000002e42         mov        eax, edi
0000000000002e44         and        eax, 0x100
0000000000002e49         cmp        eax, 0x1
0000000000002e4c         sbb        eax, eax
0000000000002e4e         and        eax, 0xffffffbb
0000000000002e51         add        eax, 0x72
0000000000002e54         mov        byte [rsi+1], al
0000000000002e57         mov        eax, edi
0000000000002e59         and        eax, 0x80
0000000000002e5e         cmp        eax, 0x1
0000000000002e61         sbb        eax, eax
0000000000002e63         and        eax, 0xffffffb6
0000000000002e66         add        eax, 0x77
0000000000002e69         mov        byte [rsi+2], al
0000000000002e6c         mov        eax, edi
0000000000002e6e         and        eax, 0x40
0000000000002e71         cmp        eax, 0x1
0000000000002e74         sbb        eax, eax
0000000000002e76         test       edi, 0x800
0000000000002e7c         je         loc_2f20

0000000000002e82         and        eax, 0xffffffe0
0000000000002e85         add        eax, 0x73

                     loc_2e88:
0000000000002e88         mov        byte [rsi+3], al                            ; CODE XREF=strmode+342
0000000000002e8b         mov        eax, edi
0000000000002e8d         and        eax, 0x20
0000000000002e90         cmp        eax, 0x1
0000000000002e93         sbb        eax, eax
0000000000002e95         and        eax, 0xffffffbb
0000000000002e98         add        eax, 0x72
0000000000002e9b         mov        byte [rsi+4], al
0000000000002e9e         mov        eax, edi
0000000000002ea0         and        eax, 0x10
0000000000002ea3         cmp        eax, 0x1
0000000000002ea6         sbb        eax, eax
0000000000002ea8         and        eax, 0xffffffb6
0000000000002eab         add        eax, 0x77
0000000000002eae         mov        byte [rsi+5], al
0000000000002eb1         mov        eax, edi
0000000000002eb3         and        eax, 0x8
0000000000002eb6         cmp        eax, 0x1
0000000000002eb9         sbb        eax, eax
0000000000002ebb         test       edi, 0x400
0000000000002ec1         je         loc_2f48

0000000000002ec7         and        eax, 0xffffffe0
0000000000002eca         add        eax, 0x73

                     loc_2ecd:
0000000000002ecd         mov        byte [rsi+6], al                            ; CODE XREF=strmode+382
0000000000002ed0         mov        eax, edi
0000000000002ed2         and        eax, 0x4
0000000000002ed5         cmp        eax, 0x1
0000000000002ed8         sbb        eax, eax
0000000000002eda         and        eax, 0xffffffbb
0000000000002edd         add        eax, 0x72
0000000000002ee0         mov        byte [rsi+7], al
0000000000002ee3         mov        eax, edi
0000000000002ee5         and        eax, 0x2
0000000000002ee8         cmp        eax, 0x1
0000000000002eeb         sbb        eax, eax
0000000000002eed         and        eax, 0xffffffb6
0000000000002ef0         add        eax, 0x77
0000000000002ef3         mov        byte [rsi+8], al
0000000000002ef6         mov        eax, edi
0000000000002ef8         and        eax, 0x1
0000000000002efb         cmp        eax, 0x1
0000000000002efe         sbb        eax, eax
0000000000002f00         and        edi, 0x200
0000000000002f06         je         loc_2f30

0000000000002f08         and        eax, 0xffffffe0
0000000000002f0b         add        eax, 0x74
0000000000002f0e         mov        byte [rsi+9], al
0000000000002f11         mov        eax, 0x20
0000000000002f16         mov        word [rsi+0xa], ax
0000000000002f1a         ret
                        ; endp
0000000000002f1b         align      32

                     loc_2f20:
0000000000002f20         and        eax, 0xffffffb5                             ; CODE XREF=strmode+172
0000000000002f23         add        eax, 0x78
0000000000002f26         jmp        loc_2e88
0000000000002f2b         align      16

                     loc_2f30:
0000000000002f30         and        eax, 0xffffffb5                             ; CODE XREF=strmode+310
0000000000002f33         add        eax, 0x78
0000000000002f36         mov        byte [rsi+9], al
0000000000002f39         mov        eax, 0x20
0000000000002f3e         mov        word [rsi+0xa], ax
0000000000002f42         ret
                        ; endp
0000000000002f43         align      8

                     loc_2f48:
0000000000002f48         and        eax, 0xffffffb5                             ; CODE XREF=strmode+241
0000000000002f4b         add        eax, 0x78
0000000000002f4e         jmp        loc_2ecd
0000000000002f53         align      32                                          ; End of unwind block (FDE at 0xb684)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     filemodestring:
0000000000002f60         mov        edi, dword [rdi+0x18]                       ; Begin of unwind block (FDE at 0xb698)
0000000000002f63         jmp        strmode                                     ; strmode
0000000000002f68         align      16                                          ; End of unwind block (FDE at 0xb698)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_compile:
0000000000002f70         push       rbp                                         ; Begin of unwind block (FDE at 0xb6ac), CODE XREF=sub_1fe0+296
0000000000002f71         push       rbx
0000000000002f72         mov        rbx, rdi
0000000000002f75         sub        rsp, 0x8
0000000000002f79         movsx      eax, byte [rdi]
0000000000002f7c         lea        edx, dword [rax-0x30]
0000000000002f7f         cmp        dl, 0x7
0000000000002f82         jbe        loc_3038

0000000000002f88         test       al, al
0000000000002f8a         mov        rcx, rdi
0000000000002f8d         mov        edi, 0x1
0000000000002f92         je         loc_2fbb

0000000000002f94         nop        dword [rax]

                     loc_2f98:
0000000000002f98         mov        edx, eax                                    ; CODE XREF=mode_compile+73
0000000000002f9a         and        edx, 0xffffffef
0000000000002f9d         cmp        dl, 0x2d
0000000000002fa0         sete       dl
0000000000002fa3         cmp        al, 0x2b
0000000000002fa5         sete       al
0000000000002fa8         add        rcx, 0x1
0000000000002fac         or         eax, edx
0000000000002fae         movzx      eax, al
0000000000002fb1         add        rdi, rax
0000000000002fb4         movzx      eax, byte [rcx]
0000000000002fb7         test       al, al
0000000000002fb9         jne        loc_2f98

                     loc_2fbb:
0000000000002fbb         mov        edx, 0x10                                   ; CODE XREF=mode_compile+34
0000000000002fc0         xor        ecx, ecx
0000000000002fc2         mov        rax, rdx
0000000000002fc5         mul        rdi
0000000000002fc8         jo         loc_32df

                     loc_2fce:
0000000000002fce         test       rax, rax                                    ; CODE XREF=mode_compile+884
0000000000002fd1         js         loc_32e9

0000000000002fd7         test       rcx, rcx
0000000000002fda         jne        loc_32e9

0000000000002fe0         shl        rdi, 0x4                                    ; argument #1 for method xmalloc
0000000000002fe4         lea        rbp, qword [switch_table_a5c4]              ; switch_table_a5c4
0000000000002feb         call       xmalloc                                     ; xmalloc
0000000000002ff0         xor        esi, esi

                     loc_2ff2:
0000000000002ff2         xor        r11d, r11d                                  ; CODE XREF=sub_32ee+15

                     loc_2ff5:
0000000000002ff5         movzx      r9d, byte [rbx]                             ; CODE XREF=mode_compile+746
0000000000002ff9         cmp        r9b, 0x61
0000000000002ffd         je         loc_3250

0000000000003003         jle        loc_3070

0000000000003005         cmp        r9b, 0x6f
0000000000003009         je         loc_3280

000000000000300f         cmp        r9b, 0x75
0000000000003013         je         loc_3270

0000000000003019         cmp        r9b, 0x67
000000000000301d         je         loc_3260

                     loc_3023:
0000000000003023         mov        rdi, rax                                    ; CODE XREF=mode_compile+272, mode_compile+440, mode_compile+462, mode_compile+475, sub_32ee+23
0000000000003026         call       sub_1a90                                    ; sub_1a90
000000000000302b         xor        eax, eax

                     loc_302d:
000000000000302d         add        rsp, 0x8                                    ; CODE XREF=sub_32ee+38
0000000000003031         pop        rbx
0000000000003032         pop        rbp
0000000000003033         ret
                        ; endp
0000000000003034         align      8

                     loc_3038:
0000000000003038         mov        rdx, rdi                                    ; CODE XREF=mode_compile+18
000000000000303b         xor        ebp, ebp
000000000000303d         jmp        loc_304f
000000000000303f         align      64

                     loc_3040:
0000000000003040         movsx      eax, byte [rdx]                             ; CODE XREF=mode_compile+237
0000000000003043         lea        ecx, dword [rax-0x30]
0000000000003046         cmp        cl, 0x7
0000000000003049         ja         loc_3290

                     loc_304f:
000000000000304f         lea        ebp, dword [rax+rbp*8-0x30]                 ; CODE XREF=mode_compile+205
0000000000003053         add        rdx, 0x1
0000000000003057         cmp        ebp, 0xfff
000000000000305d         jbe        loc_3040

                     loc_305f:
000000000000305f         add        rsp, 0x8                                    ; CODE XREF=mode_compile+802
0000000000003063         xor        eax, eax
0000000000003065         pop        rbx
0000000000003066         pop        rbp
0000000000003067         ret
                        ; endp
0000000000003068         align      16

                     loc_3070:
0000000000003070         cmp        r9b, 0x2d                                   ; CODE XREF=mode_compile+147
0000000000003074         je         loc_3082

0000000000003076         cmp        r9b, 0x3d
000000000000307a         je         loc_3082

000000000000307c         cmp        r9b, 0x2b
0000000000003080         jne        loc_3023

                     loc_3082:
0000000000003082         lea        rdi, qword [rsi+1]                          ; CODE XREF=mode_compile+260, mode_compile+266
0000000000003086         shl        rsi, 0x4
000000000000308a         add        rsi, rax
000000000000308d         jmp        loc_30f4
000000000000308f         align      16

                     loc_3090:
0000000000003090         cmp        dl, 0x6f                                    ; CODE XREF=mode_compile+405
0000000000003093         lea        r8, qword [rbx+2]
0000000000003097         je         loc_3230

000000000000309d         cmp        dl, 0x75
00000000000030a0         mov        r10d, 0x1c0
00000000000030a6         jne        loc_3180

                     loc_30ac:
00000000000030ac         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+710, mode_compile+730
00000000000030af         mov        byte [rsi+1], 0x3
00000000000030b3         movzx      r9d, byte [rbx+2]
00000000000030b8         mov        dword [rsi+4], r11d
00000000000030bc         mov        rbx, r8
00000000000030bf         mov        dword [rsi+8], r10d

                     loc_30c3:
00000000000030c3         mov        edx, r10d                                   ; CODE XREF=mode_compile+621
00000000000030c6         and        edx, r11d
00000000000030c9         test       r11d, r11d
00000000000030cc         cmovne     r10d, edx

                     loc_30d0:
00000000000030d0         mov        edx, r9d                                    ; CODE XREF=mode_compile+517
00000000000030d3         mov        dword [rsi+0xc], r10d
00000000000030d7         add        rsi, 0x10
00000000000030db         and        edx, 0xffffffef
00000000000030de         lea        rcx, qword [rdi+1]
00000000000030e2         cmp        dl, 0x2d
00000000000030e5         je         loc_30f1

00000000000030e7         cmp        r9b, 0x2b
00000000000030eb         jne        loc_32f0

                     loc_30f1:
00000000000030f1         mov        rdi, rcx                                    ; CODE XREF=mode_compile+373

                     loc_30f4:
00000000000030f4         movsx      edx, byte [rbx+1]                           ; CODE XREF=mode_compile+285
00000000000030f8         lea        rcx, qword [rbx+1]
00000000000030fc         cmp        dl, 0x67
00000000000030ff         je         loc_3240

0000000000003105         jg         loc_3090

0000000000003107         lea        r8d, dword [rdx-0x30]
000000000000310b         cmp        r8b, 0x7
000000000000310f         ja         loc_3180

0000000000003111         xor        r8d, r8d
0000000000003114         nop        dword [rax]

                     loc_3118:
0000000000003118         lea        r8d, dword [rdx+r8*8-0x30]                  ; CODE XREF=mode_compile+457
000000000000311d         add        rcx, 0x1
0000000000003121         cmp        r8d, 0xfff
0000000000003128         ja         loc_3023

000000000000312e         movsx      edx, byte [rcx]
0000000000003131         lea        r10d, dword [rdx-0x30]
0000000000003135         cmp        r10b, 0x7
0000000000003139         jbe        loc_3118

000000000000313b         test       r11d, r11d
000000000000313e         jne        loc_3023

0000000000003144         test       dl, dl
0000000000003146         je         loc_3151

0000000000003148         cmp        dl, 0x2c
000000000000314b         jne        loc_3023

                     loc_3151:
0000000000003151         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+470
0000000000003154         mov        byte [rsi+1], 0x1
0000000000003158         mov        r9d, edx
000000000000315b         mov        dword [rsi+4], 0xfff
0000000000003162         mov        dword [rsi+8], r8d
0000000000003166         mov        rbx, rcx
0000000000003169         mov        r11d, 0xfff
000000000000316f         mov        r10d, 0xfff
0000000000003175         jmp        loc_30d0
000000000000317a         align      128

                     loc_3180:
0000000000003180         lea        r8d, dword [rdx-0x58]                       ; CODE XREF=mode_compile+310, mode_compile+415
0000000000003184         xor        r10d, r10d
0000000000003187         mov        ebx, 0x1
000000000000318c         cmp        r8b, 0x20
0000000000003190         ja         loc_31c9

0000000000003192         nop        word [rax+rax]

                     loc_3198:
0000000000003198         movzx      r8d, r8b                                    ; CODE XREF=mode_compile+599
000000000000319c         movsxd     r8, dword [rbp+r8*4]
00000000000031a1         add        r8, rbp
00000000000031a4         jmp        r8                                          ; switch statement using table at 0xa5c4, with 33 cases, 0x31b0,0x31c9,0x31e8,0x31f0,0x3200,0x3210,0x3220
00000000000031a7         align      16

                     loc_31b0:
00000000000031b0         mov        ebx, 0x2                                    ; case 0, CODE XREF=mode_compile+564
00000000000031b5         nop        dword [rax]

                     loc_31b8:
00000000000031b8         add        rcx, 0x1                                    ; CODE XREF=mode_compile+636, mode_compile+644, mode_compile+663, mode_compile+679, mode_compile+695
00000000000031bc         movzx      edx, byte [rcx]
00000000000031bf         lea        r8d, dword [rdx-0x58]
00000000000031c3         cmp        r8b, 0x20
00000000000031c7         jbe        loc_3198

                     loc_31c9:
00000000000031c9         mov        byte [rsi], r9b                             ; case 30, CODE XREF=mode_compile+544, mode_compile+564
00000000000031cc         mov        byte [rsi+1], bl
00000000000031cf         mov        r9d, edx
00000000000031d2         mov        dword [rsi+4], r11d
00000000000031d6         mov        dword [rsi+8], r10d
00000000000031da         mov        rbx, rcx
00000000000031dd         jmp        loc_30c3
00000000000031e2         align      8

                     loc_31e8:
00000000000031e8         or         r10d, 0x49                                  ; case 32, CODE XREF=mode_compile+564
00000000000031ec         jmp        loc_31b8
00000000000031ee         align      16

                     loc_31f0:
00000000000031f0         or         r10b, 0x92                                  ; case 31, CODE XREF=mode_compile+564
00000000000031f4         jmp        loc_31b8
00000000000031f6         align      512

                     loc_3200:
0000000000003200         or         r10d, 0x200                                 ; case 28, CODE XREF=mode_compile+564
0000000000003207         jmp        loc_31b8
0000000000003209         align      16

                     loc_3210:
0000000000003210         or         r10d, aStartmain                            ; case 27, "start_main", CODE XREF=mode_compile+564
0000000000003217         jmp        loc_31b8
0000000000003219         align      32

                     loc_3220:
0000000000003220         or         r10d, 0x124                                 ; case 26, CODE XREF=mode_compile+564
0000000000003227         jmp        loc_31b8
0000000000003229         align      16

                     loc_3230:
0000000000003230         mov        r10d, 0x7                                   ; CODE XREF=mode_compile+295
0000000000003236         jmp        loc_30ac
000000000000323b         align      64

                     loc_3240:
0000000000003240         lea        r8, qword [rbx+2]                           ; CODE XREF=mode_compile+399
0000000000003244         mov        r10d, 0x38
000000000000324a         jmp        loc_30ac
000000000000324f         align      16

                     loc_3250:
0000000000003250         mov        r11d, 0xfff                                 ; CODE XREF=mode_compile+141

                     loc_3256:
0000000000003256         add        rbx, 0x1                                    ; CODE XREF=mode_compile+759, mode_compile+775, mode_compile+791
000000000000325a         jmp        loc_2ff5
000000000000325f         align      32

                     loc_3260:
0000000000003260         or         r11d, 0x438                                 ; CODE XREF=mode_compile+173
0000000000003267         jmp        loc_3256
0000000000003269         align      16

                     loc_3270:
0000000000003270         or         r11d, 0x9c0                                 ; CODE XREF=mode_compile+163
0000000000003277         jmp        loc_3256
0000000000003279         align      128

                     loc_3280:
0000000000003280         or         r11d, 0x207                                 ; CODE XREF=mode_compile+153
0000000000003287         jmp        loc_3256
0000000000003289         align      16

                     loc_3290:
0000000000003290         test       al, al                                      ; CODE XREF=mode_compile+217
0000000000003292         jne        loc_305f

0000000000003298         sub        rdx, rbx
000000000000329b         mov        ebx, ebp
000000000000329d         mov        eax, 0xfff
00000000000032a2         and        ebx, aStartmain                             ; "start_main"
00000000000032a8         mov        edi, 0x20                                   ; argument #1 for method xmalloc
00000000000032ad         or         ebx, 0x3ff
00000000000032b3         cmp        rdx, 0x5
00000000000032b7         cmovge     ebx, eax
00000000000032ba         call       xmalloc                                     ; xmalloc
00000000000032bf         mov        edx, 0x13d
00000000000032c4         mov        dword [rax+4], 0xfff
00000000000032cb         mov        dword [rax+8], ebp
00000000000032ce         mov        word [rax], dx
00000000000032d1         mov        dword [rax+0xc], ebx
00000000000032d4         mov        byte [rax+0x11], 0x0
00000000000032d8         add        rsp, 0x8
00000000000032dc         pop        rbx
00000000000032dd         pop        rbp
00000000000032de         ret
                        ; endp

                     loc_32df:
00000000000032df         mov        ecx, 0x1                                    ; CODE XREF=mode_compile+88
00000000000032e4         jmp        loc_2fce

                     loc_32e9:
00000000000032e9         call       xalloc_die                                  ; xalloc_die, CODE XREF=mode_compile+97, mode_compile+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32ee:
00000000000032ee         nop
                        ; endp

                     loc_32f0:
00000000000032f0         cmp        r9b, 0x2c                                   ; CODE XREF=mode_compile+379
00000000000032f4         jne        loc_3302

00000000000032f6         add        rbx, 0x1
00000000000032fa         mov        rsi, rdi
00000000000032fd         jmp        loc_2ff2

                     loc_3302:
0000000000003302         test       r9b, r9b                                    ; CODE XREF=sub_32ee+6
0000000000003305         jne        loc_3023

000000000000330b         shl        rdi, 0x4
000000000000330f         mov        byte [rax+rdi+1], 0x0
0000000000003314         jmp        loc_302d
0000000000003319         align      32                                          ; End of unwind block (FDE at 0xb6ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_90: int32_t, -144


                     mode_create_from_ref:
0000000000003320         push       rbx                                         ; Begin of unwind block (FDE at 0xb6f4), CODE XREF=main+725
0000000000003321         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
0000000000003324         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000003329         sub        rsp, 0xa0
0000000000003330         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___xstat
0000000000003333         mov        rax, qword [fs:0x28]
000000000000333c         mov        qword [rsp+0xa8+var_10], rax
0000000000003344         xor        eax, eax
0000000000003346         call       j___xstat                                   ; __xstat
000000000000334b         test       eax, eax
000000000000334d         jne        loc_33a0

000000000000334f         mov        ebx, dword [rsp+0xa8+var_90]
0000000000003353         mov        edi, 0x20
0000000000003358         call       xmalloc                                     ; xmalloc
000000000000335d         mov        edx, 0x13d
0000000000003362         mov        dword [rax+4], 0xfff
0000000000003369         mov        dword [rax+0xc], 0xfff
0000000000003370         mov        word [rax], dx
0000000000003373         mov        dword [rax+8], ebx
0000000000003376         mov        byte [rax+0x11], 0x0

                     loc_337a:
000000000000337a         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=mode_create_from_ref+130
0000000000003382         xor        rcx, qword [fs:0x28]
000000000000338b         jne        loc_33a4

000000000000338d         add        rsp, 0xa0
0000000000003394         pop        rbx
0000000000003395         ret
                        ; endp
0000000000003396         align      32

                     loc_33a0:
00000000000033a0         xor        eax, eax                                    ; CODE XREF=mode_create_from_ref+45
00000000000033a2         jmp        loc_337a

                     loc_33a4:
00000000000033a4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mode_create_from_ref+107
                        ; endp
00000000000033a9         align      16                                          ; End of unwind block (FDE at 0xb6f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_adjust:
00000000000033b0         movzx      r10d, byte [rcx+1]                          ; Begin of unwind block (FDE at 0xb718), CODE XREF=sub_1fe0+134, sub_1fe0+804
00000000000033b5         mov        eax, edi
00000000000033b7         and        eax, 0xfff
00000000000033bc         test       r10b, r10b
00000000000033bf         je         loc_3510

00000000000033c5         cmp        sil, 0x1
00000000000033c9         push       r12
00000000000033cb         push       rbp
00000000000033cc         push       rbx
00000000000033cd         sbb        ebx, ebx
00000000000033cf         movzx      ebp, sil
00000000000033d3         not        ebx
00000000000033d5         xor        r11d, r11d
00000000000033d8         and        ebx, aStartmain                             ; "start_main"
00000000000033de         jmp        loc_341a

                     loc_33e0:
00000000000033e0         mov        edi, r9d                                    ; CODE XREF=mode_adjust+212
00000000000033e3         or         edi, edx
00000000000033e5         not        edi
00000000000033e7         and        esi, edi
00000000000033e9         cmp        r12b, 0x2d
00000000000033ed         je         loc_3500

00000000000033f3         cmp        r12b, 0x3d
00000000000033f7         je         loc_34ab

                     loc_33fd:
00000000000033fd         cmp        r12b, 0x2b                                  ; CODE XREF=mode_adjust+234
0000000000003401         jne        loc_3408

0000000000003403         or         r11d, esi
0000000000003406         or         eax, esi

                     loc_3408:
0000000000003408         add        rcx, 0x10                                   ; CODE XREF=mode_adjust+81, mode_adjust+343
000000000000340c         movzx      r10d, byte [rcx+1]
0000000000003411         test       r10b, r10b
0000000000003414         je         loc_34cc

                     loc_341a:
000000000000341a         mov        r9d, dword [rcx+0xc]                        ; CODE XREF=mode_adjust+46, mode_adjust+278
000000000000341e         mov        edi, dword [rcx+4]
0000000000003421         mov        esi, dword [rcx+8]
0000000000003424         not        r9d
0000000000003427         and        r9d, ebx
000000000000342a         cmp        r10b, 0x2
000000000000342e         je         loc_34e0

0000000000003434         cmp        r10b, 0x3
0000000000003438         jne        loc_3478

000000000000343a         and        esi, eax
000000000000343c         mov        r10d, esi
000000000000343f         and        r10d, 0x124
0000000000003446         cmp        r10d, 0x1
000000000000344a         sbb        r10d, r10d
000000000000344d         not        r10d
0000000000003450         and        r10d, 0x124
0000000000003457         mov        r12d, r10d
000000000000345a         or         r12b, 0x92
000000000000345e         test       sil, 0x92
0000000000003462         cmovne     r10d, r12d
0000000000003466         mov        r12d, r10d
0000000000003469         or         r12d, 0x49
000000000000346d         test       sil, 0x49
0000000000003471         cmovne     r10d, r12d
0000000000003475         or         esi, r10d

                     loc_3478:
0000000000003478         mov        r10d, r9d                                   ; CODE XREF=mode_adjust+136, mode_adjust+325
000000000000347b         test       edi, edi
000000000000347d         movzx      r12d, byte [rcx]
0000000000003481         not        r10d
0000000000003484         je         loc_33e0

000000000000348a         and        r10d, edi
000000000000348d         and        esi, r10d
0000000000003490         cmp        r12b, 0x2d
0000000000003494         je         loc_3500

0000000000003496         cmp        r12b, 0x3d
000000000000349a         jne        loc_33fd

00000000000034a0         not        edi
00000000000034a2         or         r9d, edi
00000000000034a5         mov        r10d, r9d
00000000000034a8         not        r10d

                     loc_34ab:
00000000000034ab         and        r10d, 0xfff                                 ; CODE XREF=mode_adjust+71
00000000000034b2         add        rcx, 0x10
00000000000034b6         and        eax, r9d
00000000000034b9         or         r11d, r10d
00000000000034bc         movzx      r10d, byte [rcx+1]
00000000000034c1         or         eax, esi
00000000000034c3         test       r10b, r10b
00000000000034c6         jne        loc_341a

                     loc_34cc:
00000000000034cc         test       r8, r8                                      ; CODE XREF=mode_adjust+100
00000000000034cf         je         loc_34d4

00000000000034d1         mov        dword [r8], r11d

                     loc_34d4:
00000000000034d4         pop        rbx                                         ; CODE XREF=mode_adjust+287
00000000000034d5         pop        rbp
00000000000034d6         pop        r12
00000000000034d8         ret
                        ; endp
00000000000034d9         align      32

                     loc_34e0:
00000000000034e0         mov        r12d, eax                                   ; CODE XREF=mode_adjust+126
00000000000034e3         mov        r10d, esi
00000000000034e6         and        r12d, 0x49
00000000000034ea         or         r10d, 0x49
00000000000034ee         or         r12d, ebp
00000000000034f1         cmovne     esi, r10d
00000000000034f5         jmp        loc_3478
00000000000034f7         align      256

                     loc_3500:
0000000000003500         or         r11d, esi                                   ; CODE XREF=mode_adjust+61, mode_adjust+228
0000000000003503         not        esi
0000000000003505         and        eax, esi
0000000000003507         jmp        loc_3408
000000000000350c         align      16

                     loc_3510:
0000000000003510         xor        r11d, r11d                                  ; CODE XREF=mode_adjust+15
0000000000003513         test       r8, r8
0000000000003516         je         loc_351b

0000000000003518         mov        dword [r8], r11d

                     loc_351b:
000000000000351b         ret                                                    ; CODE XREF=mode_adjust+358
                        ; endp
000000000000351d         align      32                                          ; End of unwind block (FDE at 0xb718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003520         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xb74c), CODE XREF=main+66
0000000000003523         push       rbx
0000000000003524         je         loc_359d

0000000000003526         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000352b         mov        rbx, rdi
000000000000352e         call       j_strrchr                                   ; strrchr
0000000000003533         test       rax, rax
0000000000003536         je         loc_358d

0000000000003538         lea        r8, qword [rax+1]
000000000000353c         mov        rdx, r8
000000000000353f         sub        rdx, rbx
0000000000003542         cmp        rdx, 0x6
0000000000003546         jle        loc_358d

0000000000003548         lea        rsi, qword [rax-6]
000000000000354c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003553         mov        ecx, 0x7
0000000000003558         rep  cmpsb byte [rsi], byte [rdi]
000000000000355a         seta       dl
000000000000355d         sbb        dl, 0x0
0000000000003560         test       dl, dl
0000000000003562         jne        loc_358d

0000000000003564         lea        rdi, qword [aLibs+8]                        ; 0xa688
000000000000356b         mov        ecx, 0x3
0000000000003570         mov        rsi, r8
0000000000003573         mov        rbx, r8
0000000000003576         rep  cmpsb byte [rsi], byte [rdi]
0000000000003578         seta       dl
000000000000357b         sbb        dl, 0x0
000000000000357e         test       dl, dl
0000000000003580         jne        loc_358d

0000000000003582         lea        rbx, qword [rax+4]
0000000000003586         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_358d:
000000000000358d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003594         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000359b         pop        rbx
000000000000359c         ret
                        ; endp

                     loc_359d:
000000000000359d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000035a4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000035ab         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000035b0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000035b5         call       j_fwrite                                    ; fwrite
00000000000035ba         call       j_abort                                     ; abort
                        ; endp
00000000000035bf         align      64                                          ; End of unwind block (FDE at 0xb74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000035c0         push       rbp                                         ; Begin of unwind block (FDE at 0xb76c), CODE XREF=sub_3df0+2597, sub_3df0+2619
00000000000035c1         push       rbx
00000000000035c2         mov        rbp, rdi
00000000000035c5         mov        ebx, esi
00000000000035c7         sub        rsp, 0x8
00000000000035cb         call       locale_charset                              ; locale_charset
00000000000035d0         movzx      edx, byte [rax]
00000000000035d3         and        edx, 0xffffffdf
00000000000035d6         cmp        dl, 0x55
00000000000035d9         je         loc_3650

00000000000035db         cmp        dl, 0x47
00000000000035de         je         loc_3600

                     loc_35e0:
00000000000035e0         lea        rax, qword [aLibs+27]                       ; 0xa69b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000035e7         lea        rdx, qword [aLibs+29]                       ; 0xa69d
00000000000035ee         cmp        ebx, 0x9
00000000000035f1         cmovne     rax, rdx
00000000000035f5         add        rsp, 0x8
00000000000035f9         pop        rbx
00000000000035fa         pop        rbp
00000000000035fb         ret
                        ; endp
00000000000035fc         align      512

                     loc_3600:
0000000000003600         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003604         and        edx, 0xffffffdf
0000000000003607         cmp        dl, 0x42
000000000000360a         jne        loc_35e0

000000000000360c         cmp        byte [rax+2], 0x31
0000000000003610         jne        loc_35e0

0000000000003612         cmp        byte [rax+3], 0x38
0000000000003616         jne        loc_35e0

0000000000003618         cmp        byte [rax+4], 0x30
000000000000361c         jne        loc_35e0

000000000000361e         cmp        byte [rax+5], 0x33
0000000000003622         jne        loc_35e0

0000000000003624         cmp        byte [rax+6], 0x30
0000000000003628         jne        loc_35e0

000000000000362a         cmp        byte [rax+7], 0x0
000000000000362e         jne        loc_35e0

0000000000003630         cmp        byte [rbp], 0x60
0000000000003634         lea        rax, qword [aLibs+20]                       ; 0xa694
000000000000363b         lea        rdx, qword [aLibs+24]                       ; 0xa698
0000000000003642         cmovne     rax, rdx
0000000000003646         add        rsp, 0x8
000000000000364a         pop        rbx
000000000000364b         pop        rbp
000000000000364c         ret
                        ; endp
000000000000364d         align      16

                     loc_3650:
0000000000003650         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003654         and        edx, 0xffffffdf
0000000000003657         cmp        dl, 0x54
000000000000365a         jne        loc_35e0

000000000000365c         movzx      edx, byte [rax+2]
0000000000003660         and        edx, 0xffffffdf
0000000000003663         cmp        dl, 0x46
0000000000003666         jne        loc_35e0

000000000000366c         cmp        byte [rax+3], 0x2d
0000000000003670         jne        loc_35e0

0000000000003676         cmp        byte [rax+4], 0x38
000000000000367a         jne        loc_35e0

0000000000003680         cmp        byte [rax+5], 0x0
0000000000003684         jne        loc_35e0

000000000000368a         cmp        byte [rbp], 0x60
000000000000368e         lea        rax, qword [aLibs+12]                       ; 0xa68c
0000000000003695         lea        rdx, qword [aLibs+16]                       ; 0xa690
000000000000369c         cmovne     rax, rdx
00000000000036a0         add        rsp, 0x8
00000000000036a4         pop        rbx
00000000000036a5         pop        rbp
00000000000036a6         ret
                        ; endp
00000000000036a7         align      16                                          ; End of unwind block (FDE at 0xb76c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000036b0         push       r15                                         ; Begin of unwind block (FDE at 0xb7b0), CODE XREF=sub_3df0+1165, sub_3df0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000036b2         push       r14
00000000000036b4         mov        r15d, r8d
00000000000036b7         push       r13
00000000000036b9         push       r12
00000000000036bb         mov        r14, rdi
00000000000036be         push       rbp
00000000000036bf         push       rbx
00000000000036c0         mov        ebx, r9d
00000000000036c3         mov        r13, rsi
00000000000036c6         mov        rbp, rcx
00000000000036c9         and        ebx, 0x2
00000000000036cc         sub        rsp, 0xb8
00000000000036d3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000036db         mov        qword [rsp+0xe8+var_D8], rdx
00000000000036e0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000036e5         mov        dword [rsp+0xe8+var_70], r9d
00000000000036ea         mov        qword [rsp+0xe8+var_C8], rax
00000000000036ef         mov        rax, qword [rsp+0xe8+arg_8]
00000000000036f7         mov        qword [rsp+0xe8+var_80], rax
00000000000036fc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003704         mov        qword [rsp+0xe8+var_88], rax
0000000000003709         mov        rax, qword [fs:0x28]
0000000000003712         mov        qword [rsp+0xe8+var_40], rax
000000000000371a         xor        eax, eax
000000000000371c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003721         cmp        r15d, 0xa
0000000000003725         mov        qword [rsp+0xe8+var_90], rax
000000000000372a         ja         loc_48df

0000000000003730         lea        rcx, qword [switch_table_a700]              ; switch_table_a700
0000000000003737         mov        edx, r15d
000000000000373a         movsxd     rax, dword [rcx+rdx*4]
000000000000373e         add        rax, rcx
0000000000003741         jmp        rax                                         ; switch statement using table at 0xa700, with 11 cases, 0x3743,0x4314,0x4370,0x43c5,0x440a,0x4444,0x44ea,0x4524,0x4718

                     loc_3743:
0000000000003743         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3df0+1318
0000000000003748         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000374d         xor        r12d, r12d
0000000000003750         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003759         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000375e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3763:
0000000000003763         lea        rax, qword [aLibs+29]                       ; 0xa69d, CODE XREF=sub_3df0+1876
000000000000376a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003773         xor        r15d, r15d
0000000000003776         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000377e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3783:
0000000000003783         xor        r11d, r11d                                  ; CODE XREF=sub_3df0+180, sub_3df0+1400, sub_3df0+1488, sub_3df0+1557, sub_3df0+1615, sub_3df0+1781, sub_3df0+1839, sub_3df0+2408, sub_3df0+2485
0000000000003786         mov        rax, rbp
0000000000003789         mov        r8d, r12d
000000000000378c         mov        rbp, r11
000000000000378f         mov        r11, rax
0000000000003792         nop        word [rax+rax]

                     loc_3798:
0000000000003798         cmp        r11, rbp                                    ; CODE XREF=sub_38a0+194
000000000000379b         setne      r12b
000000000000379f         cmp        r11, 0xffffffffffffffff
00000000000037a3         jne        loc_37b2

00000000000037a5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000037aa         cmp        byte [rax+rbp], 0x0
00000000000037ae         setne      r12b

                     loc_37b2:
00000000000037b2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000037b5         je         loc_3e10

00000000000037bb         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000037c0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000037c5         lea        r9, qword [rdi+rbp]
00000000000037c9         setne      al
00000000000037cc         and        al, byte [rsp+0xe8+var_DB]
00000000000037d0         mov        r10d, eax
00000000000037d3         je         loc_3880

00000000000037d9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000037de         test       rax, rax
00000000000037e1         je         loc_3c10

00000000000037e7         cmp        r11, 0xffffffffffffffff
00000000000037eb         lea        rbx, qword [rbp+rax]
00000000000037f0         jne        loc_3820

00000000000037f2         cmp        rax, 0x1
00000000000037f6         jbe        loc_3820

00000000000037f8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000037fd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003802         mov        qword [rsp+0xe8+var_C0], r9
0000000000003807         call       j_strlen                                    ; strlen
000000000000380c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003812         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003818         mov        r11, rax
000000000000381b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3820:
0000000000003820         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003823         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003828         ja         loc_3de0

000000000000382e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003833         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003838         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000383b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003840         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003845         mov        qword [rsp+0xe8+var_B8], r9
000000000000384a         call       j_memcmp                                    ; memcmp
000000000000384f         test       eax, eax
0000000000003851         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003856         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000385c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003861         jne        loc_3de0

0000000000003867         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000386c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003872         jne        loc_47f5

0000000000003878         nop        dword [rax+rax]

                     loc_3880:
0000000000003880         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3dd0+19
0000000000003884         cmp        bl, 0x7e
0000000000003887         ja         loc_3ba8

000000000000388d         lea        rcx, qword [switch_table_a700+44]           ; 0xa72c
0000000000003894         movzx      edx, bl
0000000000003897         movsxd     rax, dword [rcx+rdx*4]
000000000000389b         add        rax, rcx
000000000000389e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_38a0:
00000000000038a0         xor        r10d, r10d
00000000000038a3         cmp        r11, 0x1
00000000000038a7         setne      al
00000000000038aa         cmp        r11, 0xffffffffffffffff
00000000000038ae         jne        loc_38bc

00000000000038b0         mov        rax, qword [rsp+arg_8]
00000000000038b5         cmp        byte [rax+1], 0x0
00000000000038b9         setne      al

                     loc_38bc:
00000000000038bc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_38a0+14
00000000000038c1         sete       dl
00000000000038c4         test       al, al
00000000000038c6         je         loc_3b18

                     loc_38cc:
00000000000038cc         xor        r12d, r12d                                  ; CODE XREF=sub_3b10+11
00000000000038cf         xor        eax, eax
00000000000038d1         nop        dword [rax]
                        ; endp

                     loc_38d8:
00000000000038d8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3ac0+50, sub_3b90+119
00000000000038dd         jne        loc_39f2

00000000000038e3         test       dl, dl
00000000000038e5         jne        loc_39f2

                     loc_38eb:
00000000000038eb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_39a0+87
00000000000038f0         test       rsi, rsi
00000000000038f3         je         loc_3909

00000000000038f5         mov        edx, ebx
00000000000038f7         shr        dl, 0x5
00000000000038fa         movzx      edx, dl
00000000000038fd         mov        edx, dword [rsi+rdx*4]
0000000000003900         bt         edx, ebx
0000000000003903         jb         loc_3a53

                     loc_3909:
0000000000003909         test       r10b, r10b                                  ; CODE XREF=sub_38a0+83, sub_39a0+93
000000000000390c         jne        loc_3a53

0000000000003912         xor        eax, 0x1
0000000000003915         add        rbp, 0x1
0000000000003919         and        eax, r8d

                     loc_391c:
000000000000391c         test       al, al                                      ; CODE XREF=sub_3df0+936
000000000000391e         je         loc_3940

0000000000003920         cmp        r13, r15
0000000000003923         jbe        loc_392a

0000000000003925         mov        byte [r14+r15], 0x27

                     loc_392a:
000000000000392a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_38a0+131
000000000000392e         cmp        r13, rax
0000000000003931         jbe        loc_3939

0000000000003933         mov        byte [r14+r15+1], 0x27

                     loc_3939:
0000000000003939         add        r15, 0x2                                    ; CODE XREF=sub_38a0+145
000000000000393d         xor        r8d, r8d

                     loc_3940:
0000000000003940         cmp        r15, r13                                    ; CODE XREF=sub_38a0+126, sub_39a0+275, sub_3df0+869
0000000000003943         jae        loc_3949

0000000000003945         mov        byte [r14+r15], bl

                     loc_3949:
0000000000003949         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_38a0+163
000000000000394e         add        r15, 0x1
0000000000003952         mov        eax, 0x0
0000000000003957         test       r12b, r12b
000000000000395a         cmove      edi, eax
000000000000395d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003962         jmp        loc_3798
0000000000003967         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3970:
0000000000003970         xor        r10d, r10d
0000000000003973         mov        eax, dword [rsp+arg_0]
0000000000003977         cmp        eax, 0x2
000000000000397a         je         loc_3f38

0000000000003980         cmp        eax, 0x5
0000000000003983         je         loc_3ef8

0000000000003989         cmp        eax, 0x2
000000000000398c         mov        ebx, 0x3f
0000000000003991         sete       dl
0000000000003994         xor        r12d, r12d
0000000000003997         xor        eax, eax
0000000000003999         jmp        sub_38a0+56
                        ; endp
000000000000399e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_39a0:
00000000000039a0         xor        r10d, r10d
00000000000039a3         cmp        dword [rsp+arg_0], 0x2
00000000000039a8         je         loc_3eb0

00000000000039ae         mov        byte [rsp+arg_74], r12b
00000000000039b3         xor        edx, edx
00000000000039b5         xor        eax, eax
00000000000039b7         mov        ebx, 0x27
00000000000039bc         jmp        sub_38a0+56
                        ; endp
00000000000039c1         nop        dword [rax]
00000000000039c8         mov        edx, 0x9
00000000000039cd         mov        ebx, 0x74

                     loc_39d2:
00000000000039d2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3b60+10, sub_3c50+37, sub_3d90+53
00000000000039d7         sete       al
00000000000039da         and        al, byte [rsp+arg_7]
00000000000039de         jne        sub_3b10+30

00000000000039e4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_39a0+114
00000000000039e9         jne        loc_3a50

                     loc_39eb:
00000000000039eb         mov        ebx, edx                                    ; CODE XREF=sub_3ac0+18
00000000000039ed         xor        r12d, r12d
00000000000039f0         xor        eax, eax
                        ; endp

                     loc_39f2:
00000000000039f2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_38a0+61, sub_38a0+69
00000000000039f7         jne        loc_38eb

00000000000039fd         jmp        loc_3909
0000000000003a02         nop        word [rax+rax]
0000000000003a08         mov        edx, 0x8
0000000000003a0d         mov        ebx, 0x62
0000000000003a12         jmp        sub_39a0+68
0000000000003a14         nop        dword [rax]
0000000000003a18         cmp        dword [rsp+8], 0x2
0000000000003a1d         je         sub_3df0                                    ; sub_3df0
0000000000003a23         cmp        byte [rsp+0xd], 0x0
0000000000003a28         je         sub_3c30+16

                     loc_3a2e:
0000000000003a2e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3c30+8
0000000000003a33         je         loc_3c40

0000000000003a39         cmp        qword [rsp+arg_10], 0x0
0000000000003a3f         jne        loc_3dfb

0000000000003a45         mov        ebx, 0x5c
0000000000003a4a         nop        word [rax+rax]
                        ; endp

                     loc_3a50:
0000000000003a50         xor        r12d, r12d                                  ; CODE XREF=sub_39a0+73, sub_3d90+29
                        ; endp

                     loc_3a53:
0000000000003a53         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_38a0+99, sub_38a0+108
0000000000003a58         sete       dl
0000000000003a5b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003a60         mov        eax, edx
0000000000003a62         jne        loc_42b8

0000000000003a68         mov        eax, r8d
0000000000003a6b         xor        eax, 0x1
0000000000003a6e         and        al, dl
0000000000003a70         je         loc_3aa1

0000000000003a72         cmp        r13, r15
0000000000003a75         jbe        loc_3a7c

0000000000003a77         mov        byte [r14+r15], 0x27

                     loc_3a7c:
0000000000003a7c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_39a0+213
0000000000003a80         cmp        r13, rdx
0000000000003a83         jbe        loc_3a8b

0000000000003a85         mov        byte [r14+r15+1], 0x24

                     loc_3a8b:
0000000000003a8b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_39a0+227
0000000000003a8f         cmp        r13, rdx
0000000000003a92         jbe        loc_3a9a

0000000000003a94         mov        byte [r14+r15+2], 0x27

                     loc_3a9a:
0000000000003a9a         add        r15, 0x3                                    ; CODE XREF=sub_39a0+242
0000000000003a9e         mov        r8d, eax

                     loc_3aa1:
0000000000003aa1         cmp        r13, r15                                    ; CODE XREF=sub_39a0+208
0000000000003aa4         jbe        loc_3aab

0000000000003aa6         mov        byte [r14+r15], 0x5c

                     loc_3aab:
0000000000003aab         add        r15, 0x1                                    ; CODE XREF=sub_39a0+260
0000000000003aaf         add        rbp, 0x1
0000000000003ab3         jmp        loc_3940
0000000000003ab8         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3ac0:
0000000000003ac0         cmp        byte [rsp+arg_5], 0x0
0000000000003ac5         jne        loc_3c93

0000000000003acb         xor        edx, edx
0000000000003acd         test       byte [rsp+arg_70], 0x1
0000000000003ad2         je         loc_39eb

0000000000003ad8         add        rbp, 0x1
0000000000003adc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003ae1         nop        dword [rax]
0000000000003ae8         cmp        dword [rsp+8], 0x2
0000000000003aed         sete       dl
0000000000003af0         xor        eax, eax
0000000000003af2         jmp        sub_38a0+56
0000000000003af7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3b00:
0000000000003b00         mov        edx, 0x7
0000000000003b05         mov        ebx, 0x61
0000000000003b0a         jmp        sub_39a0+68
                        ; endp
0000000000003b0f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3b10:
0000000000003b10         cmp        dword [rsp+8], 0x2
0000000000003b15         sete       dl
                        ; endp

                     loc_3b18:
0000000000003b18         test       rbp, rbp                                    ; CODE XREF=sub_38a0+38, sub_3d30+35
0000000000003b1b         jne        loc_38cc

0000000000003b21         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3d60+43
0000000000003b26         and        al, dl
0000000000003b28         je         sub_38a0+56

0000000000003b2e         mov        rbp, r11
0000000000003b31         mov        dword [rsp+arg_0], 0x2
0000000000003b39         jmp        sub_3df0+1097
                        ; endp
0000000000003b3e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3b40:
0000000000003b40         cmp        dword [rsp+arg_0], 0x2
0000000000003b45         sete       dl
0000000000003b48         xor        r12d, r12d
0000000000003b4b         jmp        sub_3b10+17
                        ; endp
0000000000003b4d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3b50:
0000000000003b50         cmp        dword [rsp+arg_0], 0x2
0000000000003b55         mov        ebx, 0x20
0000000000003b5a         sete       dl
0000000000003b5d         jmp        sub_3b10+17
                        ; endp
0000000000003b5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3b60:
0000000000003b60         mov        edx, 0xd
0000000000003b65         mov        ebx, 0x72
0000000000003b6a         jmp        loc_39d2
0000000000003b6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3b70:
0000000000003b70         mov        edx, 0xc
0000000000003b75         mov        ebx, 0x66
0000000000003b7a         jmp        sub_39a0+68
                        ; endp
0000000000003b7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3b80:
0000000000003b80         mov        edx, 0xb
0000000000003b85         mov        ebx, 0x76
0000000000003b8a         jmp        sub_39a0+68
                        ; endp
0000000000003b8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3b90:
0000000000003b90         mov        edx, 0xa
0000000000003b95         mov        ebx, 0x6e
0000000000003b9a         jmp        sub_39a0+50
                        ; endp
0000000000003b9f         align      32

                     loc_3ba0:
0000000000003ba0         xor        r10d, r10d                                  ; CODE XREF=sub_3b90+135
0000000000003ba3         nop        dword [rax+rax]

                     loc_3ba8:
0000000000003ba8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003bae         jne        loc_3f58

0000000000003bb4         mov        qword [rsp+0xe8+var_B0], r11
0000000000003bb9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003bbe         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003bc3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003bc8         mov        rcx, qword [rax]
0000000000003bcb         movzx      edx, bl
0000000000003bce         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003bd4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003bda         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003bdf         mov        edi, 0x1
0000000000003be4         movzx      eax, word [rcx+rdx*2]
0000000000003be8         and        ax, 0x4000
0000000000003bec         setne      r12b
0000000000003bf0         sete       al
0000000000003bf3         and        al, byte [rsp+0xe8+var_DB]

                     loc_3bf7:
0000000000003bf7         test       al, al                                      ; CODE XREF=sub_3df0+2221
0000000000003bf9         jne        loc_4591

0000000000003bff         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003c04         sete       dl
0000000000003c07         jmp        loc_38d8
0000000000003c0c         align      16

                     loc_3c10:
0000000000003c10         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003c14         cmp        bl, 0x7e
0000000000003c17         ja         loc_3ba0

0000000000003c19         lea        rcx, qword [switch_table_a700+552]          ; 0xa928
0000000000003c20         movzx      edx, bl
0000000000003c23         movsxd     rax, dword [rcx+rdx*4]
0000000000003c27         add        rax, rcx
0000000000003c2a         jmp        rax
                        ; endp
0000000000003c2c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3c30:
0000000000003c30         xor        r10d, r10d
0000000000003c33         cmp        byte [rsp+arg_5], 0x0
0000000000003c38         jne        loc_3a2e

0000000000003c3e         nop

                     loc_3c40:
0000000000003c40         mov        edx, 0x5c                                   ; CODE XREF=sub_39a0+136, sub_39a0+147
0000000000003c45         mov        ebx, 0x5c
0000000000003c4a         jmp        sub_39a0+68
                        ; endp
0000000000003c4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3c50:
0000000000003c50         mov        edx, 0xc
0000000000003c55         xor        r10d, r10d
0000000000003c58         mov        ebx, 0x66
0000000000003c5d         jmp        sub_39a0+68
                        ; endp
0000000000003c62         nop        word [rax+rax]
0000000000003c68         mov        edx, 0xa
0000000000003c6d         xor        r10d, r10d
0000000000003c70         mov        ebx, 0x6e
0000000000003c75         jmp        sub_39a0+50
0000000000003c7a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3c80:
0000000000003c80         mov        ebx, 0x61
0000000000003c85         jmp        sub_39a0+176
                        ; endp
0000000000003c8a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3c90:
0000000000003c90         xor        r10d, r10d
                        ; endp

                     loc_3c93:
0000000000003c93         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3ac0+5
0000000000003c98         sete       dl
0000000000003c9b         cmp        byte [rsp+arg_7], 0x0
0000000000003ca0         jne        loc_483a

0000000000003ca6         mov        eax, r8d
0000000000003ca9         mov        rcx, r15
0000000000003cac         xor        eax, 0x1
0000000000003caf         and        al, dl
0000000000003cb1         je         loc_3ce0

0000000000003cb3         cmp        r13, r15
0000000000003cb6         jbe        loc_3cbd

0000000000003cb8         mov        byte [r14+r15], 0x27

                     loc_3cbd:
0000000000003cbd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3c90+38
0000000000003cc1         cmp        r13, rcx
0000000000003cc4         jbe        loc_3ccc

0000000000003cc6         mov        byte [r14+r15+1], 0x24

                     loc_3ccc:
0000000000003ccc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3c90+52
0000000000003cd0         cmp        r13, rcx
0000000000003cd3         ja         loc_4309

                     loc_3cd9:
0000000000003cd9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3df0+1311
0000000000003cdd         mov        r8d, eax

                     loc_3ce0:
0000000000003ce0         cmp        r13, rcx                                    ; CODE XREF=sub_3c90+33
0000000000003ce3         jbe        loc_3cea

0000000000003ce5         mov        byte [r14+rcx], 0x5c

                     loc_3cea:
0000000000003cea         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3c90+83
0000000000003cef         lea        r15, qword [rcx+1]
0000000000003cf3         je         loc_42f9

0000000000003cf9         lea        rax, qword [rbp+1]
0000000000003cfd         cmp        rax, r11
0000000000003d00         jae        loc_3d1b

0000000000003d02         mov        rax, qword [rsp+arg_8]
0000000000003d07         movzx      eax, byte [rax+rbp+1]
0000000000003d0c         mov        byte [rsp+arg_20], al
0000000000003d10         sub        eax, 0x30
0000000000003d13         cmp        al, 0x9
0000000000003d15         jbe        loc_4549

                     loc_3d1b:
0000000000003d1b         mov        eax, r12d                                   ; CODE XREF=sub_3c90+112
0000000000003d1e         mov        ebx, 0x30
0000000000003d23         xor        r12d, r12d
0000000000003d26         jmp        sub_38a0+56
                        ; endp
0000000000003d2b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3d30:
0000000000003d30         cmp        dword [rsp+arg_0], 0x2
0000000000003d35         mov        r12d, r10d
0000000000003d38         sete       dl
0000000000003d3b         xor        r10d, r10d
0000000000003d3e         xor        eax, eax
0000000000003d40         jmp        sub_38a0+56
                        ; endp
0000000000003d45         nop        dword [rax]
0000000000003d48         cmp        dword [rsp+8], 0x2
0000000000003d4d         sete       dl
0000000000003d50         xor        r10d, r10d
0000000000003d53         jmp        sub_3b10+8
0000000000003d58         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3d60:
0000000000003d60         cmp        dword [rsp+8], 0x2
0000000000003d65         sete       dl
0000000000003d68         xor        r10d, r10d
0000000000003d6b         xor        r12d, r12d
0000000000003d6e         jmp        sub_3b10+17
                        ; endp
0000000000003d73         nop        dword [rax+rax]
0000000000003d78         cmp        dword [rsp+8], 0x2
0000000000003d7d         mov        r12d, r10d
0000000000003d80         mov        ebx, 0x20
0000000000003d85         sete       dl
0000000000003d88         xor        r10d, r10d
0000000000003d8b         jmp        sub_3b10+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3d90:
0000000000003d90         mov        edx, 0xd
0000000000003d95         xor        r10d, r10d
0000000000003d98         mov        ebx, 0x72
0000000000003d9d         jmp        sub_39a0+50
                        ; endp
0000000000003da2         nop        word [rax+rax]
0000000000003da8         mov        ebx, 0x76
0000000000003dad         jmp        sub_39a0+176
0000000000003db2         nop        word [rax+rax]
0000000000003db8         mov        edx, 0x9
0000000000003dbd         xor        r10d, r10d
0000000000003dc0         mov        ebx, 0x74
0000000000003dc5         jmp        sub_39a0+50
0000000000003dca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3dd0:
0000000000003dd0         mov        ebx, 0x62
0000000000003dd5         jmp        sub_39a0+176
                        ; endp
0000000000003dda         nop        word [rax+rax]

                     loc_3de0:
0000000000003de0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003de3         jmp        loc_3880
0000000000003de8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3df0:
0000000000003df0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_39a0+125
0000000000003df5         jne        sub_3df0+2416
                        ; endp

                     loc_3dfb:
0000000000003dfb         add        rbp, 0x1                                    ; CODE XREF=sub_39a0+159
0000000000003dff         mov        eax, r8d
0000000000003e02         xor        r12d, r12d
0000000000003e05         mov        ebx, 0x5c
0000000000003e0a         jmp        sub_38a0+124
                        ; endp
0000000000003e0f         align      16

                     loc_3e10:
0000000000003e10         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003e15         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003e1a         mov        r12d, r8d
0000000000003e1d         mov        rbp, r11
0000000000003e20         sete       dl
0000000000003e23         mov        eax, ebx
0000000000003e25         test       r15, r15
0000000000003e28         sete       cl
0000000000003e2b         and        eax, edx
0000000000003e2d         and        al, cl
0000000000003e2f         jne        loc_4896

0000000000003e35         mov        eax, ebx
0000000000003e37         xor        eax, 0x1
0000000000003e3a         and        dl, al
0000000000003e3c         je         loc_47ac

0000000000003e42         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003e47         je         loc_47aa

0000000000003e4d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003e52         jne        loc_484d

0000000000003e58         test       r13, r13
0000000000003e5b         sete       al
0000000000003e5e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003e64         setne      dl
0000000000003e67         and        al, dl
0000000000003e69         je         loc_488c

0000000000003e6f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3e74:
0000000000003e74         lea        rbx, qword [aLibs+29]                       ; 0xa69d, CODE XREF=sub_3df0+2781
0000000000003e7b         mov        byte [r14], 0x27
0000000000003e7f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003e87         mov        r15d, 0x1
0000000000003e8d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003e96         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003e9b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003ea0         mov        byte [rsp+0xe8+var_6C], al
0000000000003ea4         jmp        loc_3783
0000000000003ea9         align      16

                     loc_3eb0:
0000000000003eb0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_39a0+8
0000000000003eb5         jne        sub_3df0+2416

0000000000003ebb         test       r13, r13
0000000000003ebe         je         loc_42c0

0000000000003ec4         xor        edx, edx
0000000000003ec6         cmp        qword [rsp+arg_48], 0x0
0000000000003ecc         jne        loc_42c0

                     loc_3ed2:
0000000000003ed2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3df0+1284, sub_3df0+2794
0000000000003ed7         add        r15, 0x3
0000000000003edb         xor        eax, eax
0000000000003edd         mov        byte [rsp+arg_74], r12b
0000000000003ee2         xor        r8d, r8d
0000000000003ee5         mov        r13, rdx
0000000000003ee8         mov        ebx, 0x27
0000000000003eed         jmp        sub_38a0+105
                        ; endp
0000000000003ef2         align      8

                     loc_3ef8:
0000000000003ef8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3970+19
0000000000003efd         je         loc_3f20

0000000000003eff         lea        rcx, qword [rbp+2]
0000000000003f03         cmp        rcx, r11
0000000000003f06         jae        loc_3f20

0000000000003f08         mov        rax, qword [rsp+arg_8]
0000000000003f0d         cmp        byte [rax+rbp+1], 0x3f
0000000000003f12         je         loc_46a2

0000000000003f18         nop        dword [rax+rax]

                     loc_3f20:
0000000000003f20         xor        edx, edx                                    ; CODE XREF=sub_3df0+269, sub_3df0+278, sub_3df0+2233, sub_3df0+2253
0000000000003f22         xor        r12d, r12d
0000000000003f25         xor        eax, eax
0000000000003f27         mov        ebx, 0x3f
0000000000003f2c         jmp        sub_38a0+56
                        ; endp
0000000000003f31         align      8

                     loc_3f38:
0000000000003f38         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3970+10
0000000000003f3d         jne        loc_4760

0000000000003f43         xor        r12d, r12d
0000000000003f46         xor        eax, eax
0000000000003f48         mov        ebx, 0x3f
0000000000003f4d         jmp        sub_38a0+105
                        ; endp
0000000000003f52         align      8

                     loc_3f58:
0000000000003f58         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3b90+30
0000000000003f60         cmp        r11, 0xffffffffffffffff
0000000000003f64         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003f70         mov        qword [rsp+0xe8+var_C0], rax
0000000000003f75         jne        loc_3fa4

0000000000003f77         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000003f7c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003f81         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003f86         mov        qword [rsp+0xe8+var_B8], r9
0000000000003f8b         call       j_strlen                                    ; strlen
0000000000003f90         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003f96         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000003f9c         mov        r11, rax
0000000000003f9f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3fa4:
0000000000003fa4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3df0+389
0000000000003fac         xor        ecx, ecx
0000000000003fae         mov        byte [rsp+0xe8+var_6A], bl
0000000000003fb2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003fb7         mov        rbx, rcx
0000000000003fba         mov        qword [rsp+0xe8+var_60], r9
0000000000003fc2         mov        qword [rsp+0xe8+var_B0], rax
0000000000003fc7         mov        byte [rsp+0xe8+var_69], r10b
0000000000003fcc         mov        qword [rsp+0xe8+var_68], r15
0000000000003fd4         mov        qword [rsp+0xe8+var_A8], r14
0000000000003fd9         mov        qword [rsp+0xe8+var_78], r13
0000000000003fde         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3fe3:
0000000000003fe3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3df0+623
0000000000003fe8         lea        r14, qword [rbp+rbx]
0000000000003fed         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003ff2         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003ff7         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000003ffc         lea        r13, qword [rax+r14]
0000000000004000         sub        rdx, r14                                    ; DATA XREF=sub_1fe0+120, sub_1fe0+790, strmode+21, sub_3b90+88, fts_stat+182, rpl_fts_read+1473
0000000000004003         mov        rsi, r13
0000000000004006         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000400b         test       rax, rax
000000000000400e         mov        r15, rax
0000000000004011         je         loc_4061

0000000000004013         cmp        rax, 0xffffffffffffffff
0000000000004017         je         loc_4635

000000000000401d         cmp        rax, 0xfffffffffffffffe
0000000000004021         je         loc_45c1

0000000000004027         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000402c         sete       al
000000000000402f         and        al, byte [rsp+0xe8+var_D9]
0000000000004033         jne        loc_41d0

                     loc_4039:
0000000000004039         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3df0+996, sub_3df0+1031
0000000000004040         call       j_iswprint                                  ; iswprint
0000000000004045         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000404a         test       eax, eax
000000000000404c         mov        eax, 0x0
0000000000004051         cmove      r12d, eax
0000000000004055         add        rbx, r15
0000000000004058         call       j_mbsinit                                   ; mbsinit
000000000000405d         test       eax, eax
000000000000405f         je         loc_3fe3

                     loc_4061:
0000000000004061         mov        edx, r12d                                   ; CODE XREF=sub_3df0+545
0000000000004064         mov        rdi, rbx
0000000000004067         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000406d         xor        edx, 0x1
0000000000004070         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004075         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000407b         and        dl, byte [rsp+0xe8+var_DB]
000000000000407f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004087         mov        r14, qword [rsp+0xe8+var_A8]
000000000000408c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004091         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4096:
0000000000004096         cmp        rdi, 0x1                                    ; CODE XREF=sub_3df0+2112, sub_3df0+2168
000000000000409a         jbe        loc_469b

                     loc_40a0:
00000000000040a0         mov        rcx, rdi                                    ; CODE XREF=sub_3df0+1961
00000000000040a3         xor        esi, esi
00000000000040a5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000040ab         add        rcx, rbp
00000000000040ae         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000040b3         jmp        loc_416e
00000000000040b8         align      64

                     loc_40c0:
00000000000040c0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3df0+896
00000000000040c5         sete       al
00000000000040c8         test       r9b, r9b
00000000000040cb         jne        loc_4580

00000000000040d1         mov        esi, r8d
00000000000040d4         xor        esi, 0x1
00000000000040d7         and        al, sil
00000000000040da         je         loc_410b

00000000000040dc         cmp        r13, r15
00000000000040df         jbe        loc_40e6

00000000000040e1         mov        byte [r14+r15], 0x27

                     loc_40e6:
00000000000040e6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3df0+751
00000000000040ea         cmp        r13, rsi
00000000000040ed         jbe        loc_40f5

00000000000040ef         mov        byte [r14+r15+1], 0x24

                     loc_40f5:
00000000000040f5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3df0+765
00000000000040f9         cmp        r13, rsi
00000000000040fc         jbe        loc_4104

00000000000040fe         mov        byte [r14+r15+2], 0x27

                     loc_4104:
0000000000004104         add        r15, 0x3                                    ; CODE XREF=sub_3df0+780
0000000000004108         mov        r8d, eax

                     loc_410b:
000000000000410b         cmp        r13, r15                                    ; CODE XREF=sub_3df0+746
000000000000410e         jbe        loc_4115

0000000000004110         mov        byte [r14+r15], 0x5c

                     loc_4115:
0000000000004115         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3df0+798
0000000000004119         cmp        r13, rax
000000000000411c         jbe        loc_412b

000000000000411e         mov        eax, ebx
0000000000004120         shr        al, 0x6
0000000000004123         add        eax, 0x30
0000000000004126         mov        byte [r14+r15+1], al

                     loc_412b:
000000000000412b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3df0+812
000000000000412f         cmp        r13, rax
0000000000004132         jbe        loc_4144

0000000000004134         mov        eax, ebx
0000000000004136         shr        al, 0x3
0000000000004139         and        eax, 0x7
000000000000413c         add        eax, 0x30
000000000000413f         mov        byte [r14+r15+2], al

                     loc_4144:
0000000000004144         and        ebx, 0x7                                    ; CODE XREF=sub_3df0+834
0000000000004147         add        rbp, 0x1
000000000000414b         add        r15, 0x3
000000000000414f         add        ebx, 0x30
0000000000004152         cmp        rbp, rcx
0000000000004155         jae        loc_3940

000000000000415b         mov        esi, edx

                     loc_415d:
000000000000415d         cmp        r13, r15                                    ; CODE XREF=sub_3df0+985, sub_3df0+1969
0000000000004160         jbe        loc_4166

0000000000004162         mov        byte [r14+r15], bl

                     loc_4166:
0000000000004166         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3df0+880
000000000000416a         add        r15, 0x1

                     loc_416e:
000000000000416e         test       dl, dl                                      ; CODE XREF=sub_3df0+707
0000000000004170         jne        loc_40c0

0000000000004176         mov        eax, esi
0000000000004178         xor        eax, 0x1
000000000000417b         and        eax, r8d
000000000000417e         test       r10b, r10b
0000000000004181         je         loc_4191

0000000000004183         cmp        r13, r15
0000000000004186         jbe        loc_418d

0000000000004188         mov        byte [r14+r15], 0x5c

                     loc_418d:
000000000000418d         add        r15, 0x1                                    ; CODE XREF=sub_3df0+918

                     loc_4191:
0000000000004191         add        rbp, 0x1                                    ; CODE XREF=sub_3df0+913
0000000000004195         cmp        rbp, rcx
0000000000004198         jae        loc_391c

000000000000419e         test       al, al
00000000000041a0         je         loc_459e

00000000000041a6         cmp        r13, r15
00000000000041a9         jbe        loc_41b0

00000000000041ab         mov        byte [r14+r15], 0x27

                     loc_41b0:
00000000000041b0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3df0+953
00000000000041b4         cmp        r13, rax
00000000000041b7         jbe        loc_41bf

00000000000041b9         mov        byte [r14+r15+1], 0x27

                     loc_41bf:
00000000000041bf         add        r15, 0x2                                    ; CODE XREF=sub_3df0+967
00000000000041c3         xor        r10d, r10d
00000000000041c6         xor        r8d, r8d
00000000000041c9         jmp        loc_415d
00000000000041cb         align      16

                     loc_41d0:
00000000000041d0         cmp        r15, 0x1                                    ; CODE XREF=sub_3df0+579
00000000000041d4         je         loc_4039

00000000000041da         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000041df         lea        rcx, qword [rdi+r15]
00000000000041e3         lea        rdx, qword [rdi+r14+1]
00000000000041e8         lea        r8, qword [rcx+r14]
00000000000041ec         jmp        loc_41fd
00000000000041ee         align      16

                     loc_41f0:
00000000000041f0         add        rdx, 0x1                                    ; CODE XREF=sub_3df0+1046, sub_3df0+1072
00000000000041f4         cmp        r8, rdx
00000000000041f7         je         loc_4039

                     loc_41fd:
00000000000041fd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3df0+1020
0000000000004200         sub        ecx, 0x5b
0000000000004203         cmp        cl, 0x21
0000000000004206         ja         loc_41f0

0000000000004208         mov        esi, 0x1
000000000000420d         shl        rsi, cl
0000000000004210         mov        rcx, rsi
0000000000004213         movabs     rsi, 0x20000002b
000000000000421d         test       rcx, rsi
0000000000004220         je         loc_41f0

0000000000004222         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004227         mov        r13, qword [rsp+0xe8+var_78]
000000000000422c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004231         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4239:
0000000000004239         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3df0+1227, sub_3df0+1948, sub_3df0+2585, sub_3df0+2734
000000000000423e         je         loc_4250

0000000000004240         test       al, al
0000000000004242         mov        eax, 0x4
0000000000004247         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000424c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4250:
0000000000004250         sub        rsp, 0x8                                    ; CODE XREF=sub_3df0+1102
0000000000004254         mov        rcx, rbp
0000000000004257         mov        rsi, r13
000000000000425a         push       qword [rsp+0xf0+var_88]
000000000000425e         push       qword [rsp+0xf8+var_80]
0000000000004262         mov        rdi, r14
0000000000004265         push       0x0
0000000000004267         mov        r9d, dword [rsp+0x108+var_70]
000000000000426f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004274         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004279         and        r9d, 0xfffffffd
000000000000427d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004282         add        rsp, 0x20
0000000000004286         mov        r15, rax

                     loc_4289:
0000000000004289         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3df0+2549, sub_3df0+2560, sub_3df0+2711
0000000000004291         xor        rbx, qword [fs:0x28]
000000000000429a         mov        rax, r15
000000000000429d         jne        loc_48a3

00000000000042a3         add        rsp, 0xb8
00000000000042aa         pop        rbx
00000000000042ab         pop        rbp
00000000000042ac         pop        r12
00000000000042ae         pop        r13
00000000000042b0         pop        r14
00000000000042b2         pop        r15
00000000000042b4         ret
                        ; endp
00000000000042b5         align      8

                     loc_42b8:
00000000000042b8         mov        rbp, r11                                    ; CODE XREF=sub_39a0+194
00000000000042bb         jmp        loc_4239

                     loc_42c0:
00000000000042c0         cmp        r13, r15                                    ; CODE XREF=sub_3df0+206, sub_3df0+220
00000000000042c3         jbe        loc_42ca

00000000000042c5         mov        byte [r14+r15], 0x27

                     loc_42ca:
00000000000042ca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3df0+1235
00000000000042ce         cmp        r13, rax
00000000000042d1         jbe        loc_42d9

00000000000042d3         mov        byte [r14+r15+1], 0x5c

                     loc_42d9:
00000000000042d9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3df0+1249
00000000000042dd         cmp        r13, rax
00000000000042e0         jbe        loc_48d2

00000000000042e6         mov        rdx, r13
00000000000042e9         mov        byte [r14+r15+2], 0x27
00000000000042ef         mov        r13, qword [rsp+arg_48]
00000000000042f4         jmp        loc_3ed2

                     loc_42f9:
00000000000042f9         mov        eax, r12d                                   ; CODE XREF=sub_3c90+99
00000000000042fc         mov        ebx, 0x30
0000000000004301         xor        r12d, r12d
0000000000004304         jmp        sub_38a0+105
                        ; endp

                     loc_4309:
0000000000004309         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3c90+67
000000000000430f         jmp        loc_3cd9

                     loc_4314:
0000000000004314         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004316         jne        loc_3743

000000000000431c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4321:
0000000000004321         test       r13, r13                                    ; CODE XREF=sub_3df0+2749
0000000000004324         jne        loc_48ba

000000000000432a         lea        rax, qword [aLibs+29]                       ; 0xa69d
0000000000004331         mov        qword [rsp+0xe8+var_98], 0x0
000000000000433a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000433f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004344         xor        r12d, r12d
0000000000004347         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000434c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004355         mov        qword [rsp+0xe8+var_A0], rax
000000000000435a         mov        r15d, 0x1
0000000000004360         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004368         jmp        loc_3783
000000000000436d         align      16

                     loc_4370:
0000000000004370         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004372         jne        loc_476d

0000000000004378         test       r13, r13
000000000000437b         je         loc_45a6

0000000000004381         mov        byte [r14], 0x22
0000000000004385         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000438a         xor        r12d, r12d
000000000000438d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004392         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_439b:
000000000000439b         lea        rax, qword [aLibs+27]                       ; 0xa69b, CODE XREF=sub_3df0+1996
00000000000043a2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000043a7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000043ac         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000043b5         mov        r15d, 0x1
00000000000043bb         mov        qword [rsp+0xe8+var_A0], rax
00000000000043c0         jmp        loc_3783

                     loc_43c5:
00000000000043c5         lea        rax, qword [aLibs+27]                       ; case 6, 0xa69b, CODE XREF=quotearg_buffer_restyled+145
00000000000043cc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000043d1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000043d6         xor        r12d, r12d
00000000000043d9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000043e2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000043e7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000043ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000043f5         xor        r15d, r15d
00000000000043f8         mov        qword [rsp+0xe8+var_A0], rax
00000000000043fd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004405         jmp        loc_3783

                     loc_440a:
000000000000440a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000440f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004414         xor        r12d, r12d
0000000000004417         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004420         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004425         xor        r15d, r15d
0000000000004428         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000442d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004436         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000443f         jmp        loc_3783

                     loc_4444:
0000000000004444         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004449         je         loc_44a1

000000000000444b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0xa69f
0000000000004452         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004454         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004459         call       j_dcgettext                                 ; dcgettext
000000000000445e         mov        rcx, rax
0000000000004461         mov        qword [rsp+0xe8+var_80], rax
0000000000004466         lea        rax, qword [aLibs+31]                       ; 0xa69f
000000000000446d         cmp        rcx, rax
0000000000004470         je         loc_480e

                     loc_4476:
0000000000004476         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xa69d, CODE XREF=sub_3df0+2607
000000000000447d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000447f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004484         call       j_dcgettext                                 ; dcgettext
0000000000004489         mov        rcx, rax
000000000000448c         mov        qword [rsp+0xe8+var_88], rax
0000000000004491         lea        rax, qword [aLibs+29]                       ; 0xa69d
0000000000004498         cmp        rcx, rax
000000000000449b         je         loc_4824

                     loc_44a1:
00000000000044a1         xor        r15d, r15d                                  ; CODE XREF=sub_3df0+1625, sub_3df0+2629
00000000000044a4         test       ebx, ebx
00000000000044a6         je         loc_466d

                     loc_44ac:
00000000000044ac         test       ebx, ebx                                    ; CODE XREF=sub_3df0+2183, sub_3df0+2214
00000000000044ae         mov        rbx, qword [rsp+0xe8+var_88]
00000000000044b3         setne      byte [rsp+0xe8+var_D9]
00000000000044b8         xor        r12d, r12d
00000000000044bb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000044be         call       j_strlen                                    ; strlen
00000000000044c3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000044c8         mov        qword [rsp+0xe8+var_D0], rax
00000000000044cd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000044d2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000044d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000044e0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000044e5         jmp        loc_3783

                     loc_44ea:
00000000000044ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000044ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000044f4         xor        r12d, r12d
00000000000044f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004500         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004505         xor        r15d, r15d
0000000000004508         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000450d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004516         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000451f         jmp        loc_3783

                     loc_4524:
0000000000004524         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004529         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000452e         xor        r12d, r12d
0000000000004531         mov        qword [rsp+0xe8+var_98], 0x0
000000000000453a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000453f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004544         jmp        loc_3763

                     loc_4549:
0000000000004549         cmp        r13, r15                                    ; CODE XREF=sub_3c90+133
000000000000454c         jbe        loc_4553

000000000000454e         mov        byte [r14+r15], 0x30

                     loc_4553:
0000000000004553         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3df0+1884
0000000000004557         cmp        r13, rax
000000000000455a         jbe        loc_4562

000000000000455c         mov        byte [r14+rcx+2], 0x30

                     loc_4562:
0000000000004562         mov        eax, r12d                                   ; CODE XREF=sub_3df0+1898
0000000000004565         lea        r15, qword [rcx+3]
0000000000004569         xor        r12d, r12d
000000000000456c         mov        ebx, 0x30
0000000000004571         jmp        sub_38a0+56
                        ; endp
0000000000004576         align      128

                     loc_4580:
0000000000004580         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3df0+731
0000000000004585         mov        rbp, r11
0000000000004588         mov        byte [rsp+0xe8+var_DB], bl
000000000000458c         jmp        loc_4239

                     loc_4591:
0000000000004591         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3b90+105
0000000000004596         xor        r12d, r12d
0000000000004599         jmp        loc_40a0

                     loc_459e:
000000000000459e         xor        r10d, r10d                                  ; CODE XREF=sub_3df0+944
00000000000045a1         jmp        loc_415d

                     loc_45a6:
00000000000045a6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3df0+1419
00000000000045af         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000045b4         xor        r12d, r12d
00000000000045b7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000045bc         jmp        loc_439b

                     loc_45c1:
00000000000045c1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3df0+561
00000000000045c6         mov        rsi, r14
00000000000045c9         mov        rcx, r13
00000000000045cc         mov        rax, rbx
00000000000045cf         mov        rdi, rbx
00000000000045d2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000045d8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000045dd         mov        r9, qword [rsp+0xe8+var_60]
00000000000045e5         cmp        rsi, r11
00000000000045e8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000045ee         mov        r15, qword [rsp+0xe8+var_68]
00000000000045f6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000045fb         mov        r13, qword [rsp+0xe8+var_78]
0000000000004600         jae        loc_4628

0000000000004602         cmp        byte [rcx], 0x0
0000000000004605         jne        loc_4617

0000000000004607         jmp        loc_4628
0000000000004609         align      16

                     loc_4610:
0000000000004610         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3df0+2099
0000000000004615         je         loc_4625

                     loc_4617:
0000000000004617         add        rax, 0x1                                    ; CODE XREF=sub_3df0+2069
000000000000461b         lea        rdx, qword [rbp+rax]
0000000000004620         cmp        r11, rdx
0000000000004623         ja         loc_4610

                     loc_4625:
0000000000004625         mov        rdi, rax                                    ; CODE XREF=sub_3df0+2085

                     loc_4628:
0000000000004628         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3df0+2064, sub_3df0+2071
000000000000462d         xor        r12d, r12d
0000000000004630         jmp        loc_4096

                     loc_4635:
0000000000004635         mov        rdi, rbx                                    ; CODE XREF=sub_3df0+551
0000000000004638         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000463e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004643         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004649         mov        r15, qword [rsp+0xe8+var_68]
0000000000004651         xor        r12d, r12d
0000000000004654         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004659         mov        r13, qword [rsp+0xe8+var_78]
000000000000465e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004663         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004668         jmp        loc_4096

                     loc_466d:
000000000000466d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3df0+1718
0000000000004672         movzx      eax, byte [rdx]
0000000000004675         test       al, al
0000000000004677         je         loc_44ac

000000000000467d         nop        dword [rax]

                     loc_4680:
0000000000004680         cmp        r13, r15                                    ; CODE XREF=sub_3df0+2212
0000000000004683         jbe        loc_4689

0000000000004685         mov        byte [r14+r15], al

                     loc_4689:
0000000000004689         add        r15, 0x1                                    ; CODE XREF=sub_3df0+2195
000000000000468d         movzx      eax, byte [rdx+r15]
0000000000004692         test       al, al
0000000000004694         jne        loc_4680

0000000000004696         jmp        loc_44ac

                     loc_469b:
000000000000469b         mov        eax, edx                                    ; CODE XREF=sub_3df0+682
000000000000469d         jmp        loc_3bf7

                     loc_46a2:
00000000000046a2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3df0+290
00000000000046a6         cmp        bl, 0x3e
00000000000046a9         ja         loc_3f20

00000000000046af         movabs     rax, 0x7000a38200000000
00000000000046b9         bt         rax, rbx
00000000000046bd         jae        loc_3f20

00000000000046c3         cmp        byte [rsp+arg_7], 0x0
00000000000046c8         jne        loc_48b2

00000000000046ce         cmp        r13, r15
00000000000046d1         jbe        loc_46d8

00000000000046d3         mov        byte [r14+r15], 0x3f

                     loc_46d8:
00000000000046d8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3df0+2273
00000000000046dc         cmp        r13, rax
00000000000046df         jbe        loc_46e7

00000000000046e1         mov        byte [r14+r15+1], 0x22

                     loc_46e7:
00000000000046e7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3df0+2287
00000000000046eb         cmp        r13, rax
00000000000046ee         jbe        loc_46f6

00000000000046f0         mov        byte [r14+r15+2], 0x22

                     loc_46f6:
00000000000046f6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3df0+2302
00000000000046fa         cmp        r13, rax
00000000000046fd         jbe        loc_4705

00000000000046ff         mov        byte [r14+r15+3], 0x3f

                     loc_4705:
0000000000004705         add        r15, 0x4                                    ; CODE XREF=sub_3df0+2317
0000000000004709         xor        edx, edx
000000000000470b         xor        r12d, r12d
000000000000470e         xor        eax, eax
0000000000004710         mov        rbp, rcx
0000000000004713         jmp        sub_38a0+56
                        ; endp

                     loc_4718:
0000000000004718         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000471a         je         loc_48a8

0000000000004720         lea        rax, qword [aLibs+29]                       ; 0xa69d
0000000000004727         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000472c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004731         xor        r12d, r12d
0000000000004734         mov        qword [rsp+0xe8+var_98], 0x0
000000000000473d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004742         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004747         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004750         xor        r15d, r15d
0000000000004753         mov        qword [rsp+0xe8+var_A0], rax
0000000000004758         jmp        loc_3783
000000000000475d         align      32

                     loc_4760:
0000000000004760         mov        rbp, r11                                    ; CODE XREF=sub_3df0+333
0000000000004763         movzx      eax, byte [rsp+arg_7]
0000000000004768         jmp        sub_3df0+1097
                        ; endp

                     loc_476d:
000000000000476d         lea        rax, qword [aLibs+27]                       ; 0xa69b, CODE XREF=sub_3df0+1410
0000000000004774         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004779         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000477e         xor        r12d, r12d
0000000000004781         mov        qword [rsp+0xe8+var_98], 0x0
000000000000478a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000478f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004794         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000479d         xor        r15d, r15d
00000000000047a0         mov        qword [rsp+0xe8+var_A0], rax
00000000000047a5         jmp        loc_3783

                     loc_47aa:
00000000000047aa         mov        eax, edx                                    ; CODE XREF=sub_3df0+87

                     loc_47ac:
00000000000047ac         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3df0+76, sub_3df0+2721
00000000000047b1         test       rbx, rbx
00000000000047b4         je         loc_47e2

00000000000047b6         test       al, al
00000000000047b8         je         loc_47e2

00000000000047ba         movzx      ecx, byte [rbx]
00000000000047bd         mov        rax, rbx
00000000000047c0         test       cl, cl
00000000000047c2         je         loc_47e2

00000000000047c4         mov        rdx, r15
00000000000047c7         sub        rax, r15

                     loc_47ca:
00000000000047ca         cmp        r13, rdx                                    ; CODE XREF=sub_3df0+2541
00000000000047cd         jbe        loc_47d3

00000000000047cf         mov        byte [r14+rdx], cl

                     loc_47d3:
00000000000047d3         add        rdx, 0x1                                    ; CODE XREF=sub_3df0+2525
00000000000047d7         movzx      ecx, byte [rax+rdx]
00000000000047db         test       cl, cl
00000000000047dd         jne        loc_47ca

00000000000047df         mov        r15, rdx

                     loc_47e2:
00000000000047e2         cmp        r13, r15                                    ; CODE XREF=sub_3df0+2500, sub_3df0+2504, sub_3df0+2514
00000000000047e5         jbe        loc_4289

00000000000047eb         mov        byte [r14+r15], 0x0
00000000000047f0         jmp        loc_4289

                     loc_47f5:
00000000000047f5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000047fa         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000047ff         mov        rbp, r11
0000000000004802         sete       al
0000000000004805         mov        byte [rsp+0xe8+var_DB], bl
0000000000004809         jmp        loc_4239

                     loc_480e:
000000000000480e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3df0+1664
0000000000004812         mov        rdi, rcx
0000000000004815         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000481a         mov        qword [rsp+0xe8+var_80], rax
000000000000481f         jmp        loc_4476

                     loc_4824:
0000000000004824         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3df0+1707
0000000000004828         mov        rdi, rcx
000000000000482b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004830         mov        qword [rsp+0xe8+var_88], rax
0000000000004835         jmp        loc_44a1

                     loc_483a:
000000000000483a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3c90+16
000000000000483f         mov        rbp, r11
0000000000004842         mov        eax, edx
0000000000004844         mov        byte [rsp+arg_5], bl
0000000000004848         jmp        sub_3df0+1097
                        ; endp

                     loc_484d:
000000000000484d         sub        rsp, 0x8                                    ; CODE XREF=sub_3df0+98
0000000000004851         mov        r8d, 0x5
0000000000004857         mov        rcx, r11
000000000000485a         push       qword [rsp+0xf0+var_88]
000000000000485e         push       qword [rsp+0xf8+var_80]
0000000000004862         mov        rdi, r14
0000000000004865         push       qword [rsp+0x100+var_C8]
0000000000004869         mov        r9d, dword [rsp+0x108+var_70]
0000000000004871         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004876         mov        rsi, qword [rsp+0x108+var_98]
000000000000487b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004880         add        rsp, 0x20
0000000000004884         mov        r15, rax
0000000000004887         jmp        loc_4289

                     loc_488c:
000000000000488c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3df0+121
0000000000004891         jmp        loc_47ac

                     loc_4896:
0000000000004896         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3df0+63
000000000000489e         jmp        loc_4239

                     loc_48a3:
00000000000048a3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3df0+1197
                        ; endp

                     loc_48a8:
00000000000048a8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3df0+2346
00000000000048ad         jmp        loc_4321

                     loc_48b2:
00000000000048b2         mov        rbp, r11                                    ; CODE XREF=sub_3df0+2264
00000000000048b5         jmp        sub_3df0+1120
                        ; endp

                     loc_48ba:
00000000000048ba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3df0+1332
00000000000048bf         xor        eax, eax
00000000000048c1         xor        r12d, r12d
00000000000048c4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000048cd         jmp        loc_3e74

                     loc_48d2:
00000000000048d2         mov        rdx, r13                                    ; CODE XREF=sub_3df0+1264
00000000000048d5         mov        r13, qword [rsp+arg_48]
00000000000048da         jmp        loc_3ed2

                     loc_48df:
00000000000048df         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000048e4         align      16                                          ; End of unwind block (FDE at 0xb7b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000048f0         push       r15                                         ; Begin of unwind block (FDE at 0xb828), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000048f2         push       r14
00000000000048f4         movsxd     r15, edi
00000000000048f7         push       r13
00000000000048f9         push       r12
00000000000048fb         mov        r14, rdx
00000000000048fe         push       rbp
00000000000048ff         push       rbx
0000000000004900         mov        rbp, rcx
0000000000004903         sub        rsp, 0x28
0000000000004907         mov        qword [rsp+0x58+var_50], rsi
000000000000490c         call       j___errno_location                          ; __errno_location
0000000000004911         mov        r13, rax
0000000000004914         mov        eax, dword [rax]
0000000000004916         test       r15d, r15d
0000000000004919         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004920         mov        dword [rsp+0x58+var_40], eax
0000000000004924         js         loc_4a91

000000000000492a         cmp        dword [nslots], r15d                        ; nslots
0000000000004931         jg         loc_4995

0000000000004933         cmp        r15d, 0x7fffffff
000000000000493a         je         loc_4a96

0000000000004940         lea        r12d, dword [r15+1]
0000000000004944         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000494b         movsxd     rsi, r12d
000000000000494e         shl        rsi, 0x4
0000000000004952         cmp        rbx, rax
0000000000004955         je         loc_4a70

000000000000495b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000495e         call       xrealloc                                    ; xrealloc
0000000000004963         mov        rbx, rax
0000000000004966         mov        qword [slotvec], rax                        ; slotvec

                     loc_496d:
000000000000496d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004974         mov        edx, r12d
0000000000004977         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004979         sub        edx, edi
000000000000497b         shl        rdi, 0x4
000000000000497f         movsxd     rdx, edx
0000000000004982         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004985         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004989         call       j_memset                                    ; memset
000000000000498e         mov        dword [nslots], r12d                        ; nslots

                     loc_4995:
0000000000004995         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004998         shl        r15, 0x4
000000000000499c         sub        rsp, 0x8
00000000000049a0         add        rbx, r15
00000000000049a3         lea        r15, qword [rbp+8]
00000000000049a7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000049ab         mov        r11, qword [rbx]
00000000000049ae         mov        r12, qword [rbx+8]
00000000000049b2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000049b5         or         eax, 0x1
00000000000049b8         mov        dword [rsp+0x60+var_3C], eax
00000000000049bc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000049bf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000049c2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000049c5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000049c7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000049ca         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000049cf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000049d2         mov        qword [rsp+0x78+var_48], r11
00000000000049d7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000049dc         add        rsp, 0x20
00000000000049e0         mov        r11, qword [rsp+0x58+var_48]
00000000000049e5         cmp        r11, rax
00000000000049e8         ja         loc_4a51

00000000000049ea         lea        rsi, qword [rax+1]
00000000000049ee         lea        rax, qword [slot0]                          ; slot0
00000000000049f5         cmp        r12, rax
00000000000049f8         mov        qword [rbx], rsi
00000000000049fb         je         loc_4a0f

00000000000049fd         mov        rdi, r12
0000000000004a00         mov        qword [rsp+0x58+var_48], rsi
0000000000004a05         call       sub_1a90                                    ; sub_1a90
0000000000004a0a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4a0f:
0000000000004a0f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004a12         mov        qword [rsp+0x58+var_48], rsi
0000000000004a17         call       xmalloc                                     ; xmalloc
0000000000004a1c         sub        rsp, 0x8
0000000000004a20         mov        qword [rbx+8], rax
0000000000004a24         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004a28         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004a2b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004a2e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004a31         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004a33         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004a38         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004a3b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004a40         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004a45         mov        r12, rax
0000000000004a48         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004a4d         add        rsp, 0x20

                     loc_4a51:
0000000000004a51         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004a55         mov        dword [r13], eax
0000000000004a59         add        rsp, 0x28
0000000000004a5d         mov        rax, r12
0000000000004a60         pop        rbx
0000000000004a61         pop        rbp
0000000000004a62         pop        r12
0000000000004a64         pop        r13
0000000000004a66         pop        r14
0000000000004a68         pop        r15
0000000000004a6a         ret
                        ; endp
0000000000004a6b         align      16

                     loc_4a70:
0000000000004a70         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004a72         call       xrealloc                                    ; xrealloc
0000000000004a77         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004a7f         mov        rbx, rax
0000000000004a82         mov        qword [slotvec], rax                        ; slotvec
0000000000004a89         movups     xmmword [rax], xmm0
0000000000004a8c         jmp        loc_496d

                     loc_4a91:
0000000000004a91         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4a96:
0000000000004a96         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a9b:
0000000000004a9b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xb828)
                     clone_quoting_options:
0000000000004aa0         push       r12                                         ; Begin of unwind block (FDE at 0xb894)
0000000000004aa2         push       rbp
0000000000004aa3         push       rbx
0000000000004aa4         mov        rbx, rdi
0000000000004aa7         call       j___errno_location                          ; __errno_location
0000000000004aac         mov        r12d, dword [rax]
0000000000004aaf         mov        rbp, rax
0000000000004ab2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004ab9         test       rbx, rbx
0000000000004abc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004ac1         cmove      rbx, rax
0000000000004ac5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004ac8         call       xmemdup                                     ; xmemdup
0000000000004acd         mov        dword [rbp], r12d
0000000000004ad1         pop        rbx
0000000000004ad2         pop        rbp
0000000000004ad3         pop        r12
0000000000004ad5         ret
                        ; endp
0000000000004ad6         align      32                                          ; End of unwind block (FDE at 0xb894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004ae0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xb8c0), default_quoting_options
0000000000004ae7         test       rdi, rdi
0000000000004aea         cmove      rdi, rax
0000000000004aee         mov        eax, dword [rdi]
0000000000004af0         ret
                        ; endp
0000000000004af1         align      256                                         ; End of unwind block (FDE at 0xb8c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004b00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xb8d4), default_quoting_options
0000000000004b07         test       rdi, rdi
0000000000004b0a         cmove      rdi, rax
0000000000004b0e         mov        dword [rdi], esi
0000000000004b10         ret
                        ; endp
0000000000004b11         align      32                                          ; End of unwind block (FDE at 0xb8d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004b20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xb8e8), default_quoting_options
0000000000004b27         test       rdi, rdi
0000000000004b2a         mov        ecx, esi
0000000000004b2c         cmove      rdi, rax
0000000000004b30         mov        eax, esi
0000000000004b32         and        ecx, 0x1f
0000000000004b35         shr        al, 0x5
0000000000004b38         movzx      eax, al
0000000000004b3b         lea        rdi, qword [rdi+rax*4+8]
0000000000004b40         mov        esi, dword [rdi]
0000000000004b42         mov        eax, esi
0000000000004b44         shr        eax, cl
0000000000004b46         xor        edx, eax
0000000000004b48         and        eax, 0x1
0000000000004b4b         and        edx, 0x1
0000000000004b4e         shl        edx, cl
0000000000004b50         xor        edx, esi
0000000000004b52         mov        dword [rdi], edx
0000000000004b54         ret
                        ; endp
0000000000004b55         align      32                                          ; End of unwind block (FDE at 0xb8e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004b60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xb8fc), default_quoting_options
0000000000004b67         test       rdi, rdi
0000000000004b6a         cmove      rdi, rax
0000000000004b6e         mov        eax, dword [rdi+4]
0000000000004b71         mov        dword [rdi+4], esi
0000000000004b74         ret
                        ; endp
0000000000004b75         align      128                                         ; End of unwind block (FDE at 0xb8fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004b80         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xb910), default_quoting_options
0000000000004b87         test       rdi, rdi
0000000000004b8a         cmove      rdi, rax
0000000000004b8e         test       rsi, rsi
0000000000004b91         mov        dword [rdi], 0xa
0000000000004b97         je         loc_4ba7

0000000000004b99         test       rdx, rdx
0000000000004b9c         je         loc_4ba7

0000000000004b9e         mov        qword [rdi+0x28], rsi
0000000000004ba2         mov        qword [rdi+0x30], rdx
0000000000004ba6         ret
                        ; endp

                     loc_4ba7:
0000000000004ba7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004bab         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004bb0         push       r15                                         ; End of unwind block (FDE at 0xb910), Begin of unwind block (FDE at 0xb924)
0000000000004bb2         push       r14
0000000000004bb4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004bbb         push       r13
0000000000004bbd         push       r12
0000000000004bbf         mov        r13, rdi
0000000000004bc2         push       rbp
0000000000004bc3         push       rbx
0000000000004bc4         mov        rbx, r8
0000000000004bc7         mov        r14, rsi
0000000000004bca         mov        r15, rdx
0000000000004bcd         sub        rsp, 0x18
0000000000004bd1         test       r8, r8
0000000000004bd4         cmove      rbx, rax
0000000000004bd8         mov        qword [rsp+0x48+var_40], rcx
0000000000004bdd         call       j___errno_location                          ; __errno_location
0000000000004be2         mov        r12d, dword [rax]
0000000000004be5         mov        rbp, rax
0000000000004be8         lea        rax, qword [rbx+8]
0000000000004bec         sub        rsp, 0x8
0000000000004bf0         mov        r9d, dword [rbx+4]
0000000000004bf4         push       qword [rbx+0x30]
0000000000004bf7         mov        r8d, dword [rbx]
0000000000004bfa         push       qword [rbx+0x28]
0000000000004bfd         mov        rdx, r15
0000000000004c00         push       rax
0000000000004c01         mov        rcx, qword [rsp+0x68+var_40]
0000000000004c06         mov        rsi, r14
0000000000004c09         mov        rdi, r13
0000000000004c0c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c11         mov        dword [rbp], r12d
0000000000004c15         add        rsp, 0x38
0000000000004c19         pop        rbx
0000000000004c1a         pop        rbp
0000000000004c1b         pop        r12
0000000000004c1d         pop        r13
0000000000004c1f         pop        r14
0000000000004c21         pop        r15
0000000000004c23         ret
                        ; endp
0000000000004c24         align      16                                          ; End of unwind block (FDE at 0xb924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004c30         push       r15                                         ; Begin of unwind block (FDE at 0xb978), CODE XREF=quotearg_alloc+5
0000000000004c32         push       r14
0000000000004c34         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004c3b         push       r13
0000000000004c3d         push       r12
0000000000004c3f         mov        r12, rdx
0000000000004c42         push       rbp
0000000000004c43         push       rbx
0000000000004c44         mov        rbx, rcx
0000000000004c47         mov        r14, rdi
0000000000004c4a         mov        r15, rsi
0000000000004c4d         sub        rsp, 0x38
0000000000004c51         test       rcx, rcx
0000000000004c54         cmove      rbx, rax
0000000000004c58         xor        ebp, ebp
0000000000004c5a         call       j___errno_location                          ; __errno_location
0000000000004c5f         test       r12, r12
0000000000004c62         mov        r13, rax
0000000000004c65         mov        eax, dword [rax]
0000000000004c67         sete       bpl
0000000000004c6b         or         ebp, dword [rbx+4]
0000000000004c6e         lea        r10, qword [rbx+8]
0000000000004c72         sub        rsp, 0x8
0000000000004c76         mov        r8d, dword [rbx]
0000000000004c79         mov        rcx, r15
0000000000004c7c         mov        dword [rsp+0x70+var_5C], eax
0000000000004c80         push       qword [rbx+0x30]
0000000000004c83         mov        rdx, r14
0000000000004c86         push       qword [rbx+0x28]
0000000000004c89         push       r10
0000000000004c8b         xor        esi, esi
0000000000004c8d         mov        r9d, ebp
0000000000004c90         xor        edi, edi
0000000000004c92         mov        qword [rsp+0x88+var_48], r10
0000000000004c97         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c9c         lea        rsi, qword [rax+1]
0000000000004ca0         mov        qword [rsp+0x88+var_40], rax
0000000000004ca5         add        rsp, 0x20
0000000000004ca9         mov        rdi, rsi
0000000000004cac         mov        qword [rsp+0x68+var_50], rsi
0000000000004cb1         call       xmalloc                                     ; xmalloc
0000000000004cb6         mov        qword [rsp+0x68+var_58], rax
0000000000004cbb         sub        rsp, 0x8
0000000000004cbf         push       qword [rbx+0x30]
0000000000004cc2         push       qword [rbx+0x28]
0000000000004cc5         mov        r10, qword [rsp+0x80+var_48]
0000000000004cca         mov        r9d, ebp
0000000000004ccd         mov        r8d, dword [rbx]
0000000000004cd0         mov        rcx, r15
0000000000004cd3         mov        rdx, r14
0000000000004cd6         mov        rdi, rax
0000000000004cd9         push       r10
0000000000004cdb         mov        rsi, qword [rsp+0x88+var_50]
0000000000004ce0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004ce5         mov        eax, dword [rsp+0x88+var_5C]
0000000000004ce9         add        rsp, 0x20
0000000000004ced         test       r12, r12
0000000000004cf0         mov        dword [r13], eax
0000000000004cf4         je         loc_4cff

0000000000004cf6         mov        r11, qword [rsp+0x68+var_40]
0000000000004cfb         mov        qword [r12], r11

                     loc_4cff:
0000000000004cff         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004d04         add        rsp, 0x38
0000000000004d08         pop        rbx
0000000000004d09         pop        rbp
0000000000004d0a         pop        r12
0000000000004d0c         pop        r13
0000000000004d0e         pop        r14
0000000000004d10         pop        r15
0000000000004d12         ret
                        ; endp
0000000000004d13         align      32                                          ; End of unwind block (FDE at 0xb978)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004d20         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xb9e4)
0000000000004d23         xor        edx, edx
0000000000004d25         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000004d2a         align      16                                          ; End of unwind block (FDE at 0xb9e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004d30         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xb9f8), nslots
0000000000004d36         push       r12
0000000000004d38         mov        r12, qword [slotvec]                        ; slotvec
0000000000004d3f         push       rbp
0000000000004d40         push       rbx
0000000000004d41         cmp        eax, 0x1
0000000000004d44         jle        loc_4d71

0000000000004d46         sub        eax, 0x2
0000000000004d49         lea        rbx, qword [r12+0x18]
0000000000004d4e         shl        rax, 0x4
0000000000004d52         lea        rbp, qword [r12+rax+0x28]
0000000000004d57         nop        word [rax+rax]

                     loc_4d60:
0000000000004d60         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
0000000000004d63         add        rbx, 0x10
0000000000004d67         call       sub_1a90                                    ; sub_1a90
0000000000004d6c         cmp        rbx, rbp
0000000000004d6f         jne        loc_4d60

                     loc_4d71:
0000000000004d71         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004d76         lea        rbx, qword [slot0]                          ; slot0
0000000000004d7d         cmp        rdi, rbx
0000000000004d80         je         loc_4d99

0000000000004d82         call       sub_1a90                                    ; sub_1a90
0000000000004d87         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004d92         mov        qword [slotvec0+8], rbx                     ; 0x20e098

                     loc_4d99:
0000000000004d99         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004da0         cmp        r12, rbx
0000000000004da3         je         loc_4db4

0000000000004da5         mov        rdi, r12
0000000000004da8         call       sub_1a90                                    ; sub_1a90
0000000000004dad         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4db4:
0000000000004db4         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004db5         mov        dword [nslots], 0x1                         ; nslots
0000000000004dbf         pop        rbp
0000000000004dc0         pop        r12
0000000000004dc2         ret
                        ; endp
0000000000004dc3         align      16                                          ; End of unwind block (FDE at 0xb9f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004dd0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xba24), default_quoting_options
0000000000004dd7         mov        rdx, 0xffffffffffffffff
0000000000004dde         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004de3         align      16                                          ; End of unwind block (FDE at 0xba24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004df0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xba38), default_quoting_options
0000000000004df7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004dfc         align      512                                         ; End of unwind block (FDE at 0xba38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004e00         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xba4c), default_quoting_options
0000000000004e07         mov        rsi, rdi
0000000000004e0a         mov        rdx, 0xffffffffffffffff
0000000000004e11         xor        edi, edi
0000000000004e13         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004e18         align      32                                          ; End of unwind block (FDE at 0xba4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004e20         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xba60), default_quoting_options
0000000000004e27         mov        rdx, rsi
0000000000004e2a         mov        rsi, rdi
0000000000004e2d         xor        edi, edi
0000000000004e2f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004e34         align      64                                          ; End of unwind block (FDE at 0xba60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004e40         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xba74), CODE XREF=sub_1fe0+1764, sub_1fe0+1782
0000000000004e44         mov        rax, rdx
0000000000004e47         mov        rdx, qword [fs:0x28]
0000000000004e50         mov        qword [rsp+0x48+var_10], rdx
0000000000004e55         xor        edx, edx
0000000000004e57         cmp        esi, 0xa
0000000000004e5a         je         loc_4ec4

0000000000004e5c         mov        dword [rsp+0x48+var_48], esi
0000000000004e5f         mov        rcx, rsp
0000000000004e62         mov        rdx, 0xffffffffffffffff
0000000000004e69         mov        rsi, rax
0000000000004e6c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004e75         mov        qword [rsp+0x48+var_3C], 0x0
0000000000004e7e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004e87         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004e90         mov        qword [rsp+0x48+var_24], 0x0
0000000000004e99         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004ea2         mov        dword [rsp+0x48+var_14], 0x0
0000000000004eaa         call       quotearg_n_options                          ; quotearg_n_options
0000000000004eaf         mov        rcx, qword [rsp+0x48+var_10]
0000000000004eb4         xor        rcx, qword [fs:0x28]
0000000000004ebd         jne        loc_4ec9

0000000000004ebf         add        rsp, 0x48
0000000000004ec3         ret
                        ; endp

                     loc_4ec4:
0000000000004ec4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4ec9:
0000000000004ec9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000004ece         align      16                                          ; End of unwind block (FDE at 0xba74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004ed0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xba90), CODE XREF=quotearg_style_mem+10
0000000000004ed4         mov        rax, rdx
0000000000004ed7         mov        rdx, rcx
0000000000004eda         mov        rcx, qword [fs:0x28]
0000000000004ee3         mov        qword [rsp+0x48+var_10], rcx
0000000000004ee8         xor        ecx, ecx
0000000000004eea         cmp        esi, 0xa
0000000000004eed         je         loc_4f50

0000000000004eef         mov        dword [rsp+0x48+var_48], esi
0000000000004ef2         mov        rcx, rsp
0000000000004ef5         mov        rsi, rax
0000000000004ef8         mov        qword [rsp+0x48+var_44], 0x0
0000000000004f01         mov        qword [rsp+0x48+var_3C], 0x0
0000000000004f0a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004f13         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004f1c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004f25         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004f2e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004f36         call       quotearg_n_options                          ; quotearg_n_options
0000000000004f3b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004f40         xor        rdx, qword [fs:0x28]
0000000000004f49         jne        loc_4f55

0000000000004f4b         add        rsp, 0x48
0000000000004f4f         ret
                        ; endp

                     loc_4f50:
0000000000004f50         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4f55:
0000000000004f55         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000004f5a         align      32                                          ; End of unwind block (FDE at 0xba90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004f60         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xbaac), CODE XREF=main+1180, main+1265, sub_1fe0+201, sub_1fe0+408, sub_1fe0+511, sub_1fe0+687, sub_1fe0+996, sub_1fe0+1131, sub_1fe0+1239, sub_1fe0+1398, sub_1fe0+1577
0000000000004f63         mov        esi, edi
0000000000004f65         xor        edi, edi
0000000000004f67         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000004f6c         align      16                                          ; End of unwind block (FDE at 0xbaac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004f70         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbac0)
0000000000004f73         mov        rdx, rsi
0000000000004f76         mov        esi, edi
0000000000004f78         xor        edi, edi
0000000000004f7a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000004f7f         align      128                                         ; End of unwind block (FDE at 0xbac0)

                     quotearg_char_mem:
0000000000004f80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbad4), CODE XREF=quotearg_char+11
0000000000004f84         mov        ecx, edx
0000000000004f86         mov        rax, qword [fs:0x28]
0000000000004f8f         mov        qword [rsp+0x48+var_10], rax
0000000000004f94         xor        eax, eax
0000000000004f96         mov        rax, qword [qword_20e270]                   ; qword_20e270
0000000000004f9d         mov        r8, rsp
0000000000004fa0         and        ecx, 0x1f
0000000000004fa3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004fab         mov        qword [rsp+0x48+var_18], rax
0000000000004fb0         mov        eax, edx
0000000000004fb2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004fb6         shr        al, 0x5
0000000000004fb9         movzx      eax, al
0000000000004fbc         lea        r9, qword [r8+rax*4+8]
0000000000004fc1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e250
0000000000004fc9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004fce         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e260
0000000000004fd6         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004fdb         mov        edx, dword [r9]
0000000000004fde         mov        eax, edx
0000000000004fe0         shr        eax, cl
0000000000004fe2         not        eax
0000000000004fe4         and        eax, 0x1
0000000000004fe7         shl        eax, cl
0000000000004fe9         mov        rcx, r8
0000000000004fec         xor        eax, edx
0000000000004fee         mov        rdx, rsi
0000000000004ff1         mov        rsi, rdi
0000000000004ff4         mov        dword [r9], eax
0000000000004ff7         xor        edi, edi
0000000000004ff9         call       quotearg_n_options                          ; quotearg_n_options
0000000000004ffe         mov        rsi, qword [rsp+0x48+var_10]
0000000000005003         xor        rsi, qword [fs:0x28]
000000000000500c         jne        loc_5013

000000000000500e         add        rsp, 0x48
0000000000005012         ret
                        ; endp

                     loc_5013:
0000000000005013         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005018         align      32                                          ; End of unwind block (FDE at 0xbad4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005020         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xbaf0)
0000000000005024         mov        rsi, 0xffffffffffffffff
000000000000502b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005030         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xbaf0), Begin of unwind block (FDE at 0xbb04), CODE XREF=close_stdout+101
0000000000005035         mov        rsi, 0xffffffffffffffff
000000000000503c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005041         align      16                                          ; End of unwind block (FDE at 0xbb04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005050         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xbb18)
0000000000005055         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000505a         align      32                                          ; End of unwind block (FDE at 0xbb18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005060         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbb2c), CODE XREF=main+1339, sub_1fe0+884, sub_1fe0+1433
0000000000005064         mov        rax, rdx
0000000000005067         mov        rdx, qword [fs:0x28]
0000000000005070         mov        qword [rsp+0x48+var_10], rdx
0000000000005075         xor        edx, edx
0000000000005077         cmp        esi, 0xa
000000000000507a         je         loc_50e4

000000000000507c         mov        dword [rsp+0x48+var_48], esi
000000000000507f         mov        rcx, rsp
0000000000005082         mov        rdx, 0xffffffffffffffff
0000000000005089         mov        rsi, rax
000000000000508c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005095         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000509e         mov        qword [rsp+0x48+var_34], 0x0
00000000000050a7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000050b0         mov        qword [rsp+0x48+var_24], 0x0
00000000000050b9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000050c2         mov        dword [rsp+0x48+var_14], 0x0
00000000000050ca         call       quotearg_n_options                          ; quotearg_n_options
00000000000050cf         mov        rcx, qword [rsp+0x48+var_10]
00000000000050d4         xor        rcx, qword [fs:0x28]
00000000000050dd         jne        loc_50e9

00000000000050df         add        rsp, 0x48
00000000000050e3         ret
                        ; endp

                     loc_50e4:
00000000000050e4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_50e9:
00000000000050e9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000050ee         align      16                                          ; End of unwind block (FDE at 0xbb2c)

                     quotearg_n_custom_mem:
00000000000050f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbb48), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000050f4         mov        r9, rcx
00000000000050f7         mov        rcx, qword [qword_20e270]                   ; qword_20e270
00000000000050fe         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005106         mov        rax, qword [fs:0x28]
000000000000510f         mov        qword [rsp+0x48+var_10], rax
0000000000005114         xor        eax, eax
0000000000005116         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000511a         test       rsi, rsi
000000000000511d         mov        qword [rsp+0x48+var_18], rcx
0000000000005122         mov        dword [rsp+0x48+var_48], 0xa
0000000000005129         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e250
0000000000005131         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005136         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e260
000000000000513e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005143         je         loc_5177

0000000000005145         test       rdx, rdx
0000000000005148         je         loc_5177

000000000000514a         mov        qword [rsp+0x48+var_20], rsi
000000000000514f         mov        qword [rsp+0x48+var_18], rdx
0000000000005154         mov        rcx, rsp
0000000000005157         mov        rdx, r8
000000000000515a         mov        rsi, r9
000000000000515d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005162         mov        rdi, qword [rsp+0x48+var_10]
0000000000005167         xor        rdi, qword [fs:0x28]
0000000000005170         jne        loc_517c

0000000000005172         add        rsp, 0x48
0000000000005176         ret
                        ; endp

                     loc_5177:
0000000000005177         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_517c:
000000000000517c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005181         align      16                                          ; End of unwind block (FDE at 0xbb48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005190         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xbb64)
0000000000005197         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000519c         align      32                                          ; End of unwind block (FDE at 0xbb64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000051a0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbb78)
00000000000051a3         mov        r8, 0xffffffffffffffff
00000000000051aa         mov        rdx, rsi
00000000000051ad         mov        rsi, rdi
00000000000051b0         xor        edi, edi
00000000000051b2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000051b7         align      64                                          ; End of unwind block (FDE at 0xbb78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000051c0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xbb8c)
00000000000051c3         mov        rcx, rdx
00000000000051c6         mov        rdx, rsi
00000000000051c9         mov        rsi, rdi
00000000000051cc         xor        edi, edi
00000000000051ce         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000051d3         align      32                                          ; End of unwind block (FDE at 0xbb8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000051e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbba0), quote_quoting_options
00000000000051e7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051ec         align      16                                          ; End of unwind block (FDE at 0xbba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000051f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbbb4), quote_quoting_options
00000000000051f7         mov        rdx, rsi
00000000000051fa         mov        rsi, rdi
00000000000051fd         xor        edi, edi
00000000000051ff         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005204         align      16                                          ; End of unwind block (FDE at 0xbbb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005210         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbbc8), quote_quoting_options
0000000000005217         mov        rdx, 0xffffffffffffffff
000000000000521e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005223         align      16                                          ; End of unwind block (FDE at 0xbbc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005230         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbbdc), quote_quoting_options, CODE XREF=sub_1fe0+1906, sub_1fe0+1965
0000000000005237         mov        rsi, rdi
000000000000523a         mov        rdx, 0xffffffffffffffff
0000000000005241         xor        edi, edi
0000000000005243         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005248         align      16                                          ; End of unwind block (FDE at 0xbbdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     get_root_dev_ino:
0000000000005250         push       rbx                                         ; Begin of unwind block (FDE at 0xbbf4), CODE XREF=sub_1fe0+1544
0000000000005251         lea        rsi, qword [aLibs+6]                        ; argument "__filename" for method j___lxstat, 0xa686
0000000000005258         mov        rbx, rdi
000000000000525b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000005260         sub        rsp, 0xa0
0000000000005267         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
000000000000526a         mov        rax, qword [fs:0x28]
0000000000005273         mov        qword [rsp+0xa8+var_10], rax
000000000000527b         xor        eax, eax
000000000000527d         call       j___lxstat                                  ; __lxstat
0000000000005282         test       eax, eax
0000000000005284         jne        loc_52b8

0000000000005286         mov        rax, qword [rsp+0xa8+var_A0]
000000000000528b         mov        qword [rbx], rax
000000000000528e         mov        rax, qword [rsp+0xa8+var_A8]
0000000000005292         mov        qword [rbx+8], rax
0000000000005296         mov        rax, rbx

                     loc_5299:
0000000000005299         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=get_root_dev_ino+106
00000000000052a1         xor        rcx, qword [fs:0x28]
00000000000052aa         jne        loc_52bc

00000000000052ac         add        rsp, 0xa0
00000000000052b3         pop        rbx
00000000000052b4         ret
                        ; endp
00000000000052b5         align      8

                     loc_52b8:
00000000000052b8         xor        eax, eax                                    ; CODE XREF=get_root_dev_ino+52
00000000000052ba         jmp        loc_5299

                     loc_52bc:
00000000000052bc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=get_root_dev_ino+90
                        ; endp
00000000000052c1         align      16                                          ; End of unwind block (FDE at 0xbbf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000052d0         push       r15                                         ; Begin of unwind block (FDE at 0xbc1c), CODE XREF=version_etc_va+75, version_etc+161
00000000000052d2         push       r14
00000000000052d4         push       r13
00000000000052d6         push       r12
00000000000052d8         mov        r12, r9
00000000000052db         push       rbp
00000000000052dc         push       rbx
00000000000052dd         mov        rbp, rdi
00000000000052e0         mov        rbx, r8
00000000000052e3         sub        rsp, 0x28
00000000000052e7         test       rsi, rsi
00000000000052ea         je         loc_5408

00000000000052f0         mov        r8, rdx
00000000000052f3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000052fa         mov        r9, rcx
00000000000052fd         xor        eax, eax
00000000000052ff         mov        rcx, rsi
0000000000005302         mov        esi, 0x1
0000000000005307         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_530c:
000000000000530c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xab7b, CODE XREF=version_etc_arn+337
0000000000005313         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005315         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000531a         call       j_dcgettext                                 ; dcgettext
000000000000531f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005326         mov        rcx, rax
0000000000005329         mov        r8d, 0x7e3
000000000000532f         mov        esi, 0x1
0000000000005334         mov        rdi, rbp
0000000000005337         xor        eax, eax
0000000000005339         call       j___fprintf_chk                             ; __fprintf_chk
000000000000533e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005345         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005347         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000534c         call       j_dcgettext                                 ; dcgettext
0000000000005351         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005354         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005357         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000535c         cmp        r12, 0x9
0000000000005360         ja         loc_56a0

0000000000005366         lea        rdx, qword [switch_table_ae64]              ; switch_table_ae64
000000000000536d         movsxd     rax, dword [rdx+r12*4]
0000000000005371         add        rax, rdx
0000000000005374         jmp        rax                                         ; switch statement using table at 0xae64, with 10 cases, 0x5380,0x53f6,0x5430,0x5488,0x54c8,0x5510,0x5560,0x55b8,0x55e8,0x5650
0000000000005376         align      128

                     loc_5380:
0000000000005380         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005384         mov        rax, qword [rbx+0x10]
0000000000005388         lea        rsi, qword [aWrittenBySSSns_ad78]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000538f         mov        r8, qword [rbx+8]
0000000000005393         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005398         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000539a         mov        r13, qword [rbx+0x30]
000000000000539e         mov        r12, qword [rbx+0x28]
00000000000053a2         mov        qword [rsp+0x58+var_48], r9
00000000000053a7         mov        r15, qword [rbx+0x20]
00000000000053ab         mov        r14, qword [rbx+0x18]
00000000000053af         mov        qword [rsp+0x58+var_58], rax
00000000000053b3         mov        qword [rsp+0x58+var_50], r8
00000000000053b8         mov        rbx, qword [rbx]
00000000000053bb         call       j_dcgettext                                 ; dcgettext
00000000000053c0         sub        rsp, 0x8

                     loc_53c4:
00000000000053c4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000053c9         mov        rdx, rax
00000000000053cc         mov        rcx, rbx
00000000000053cf         mov        esi, 0x1
00000000000053d4         mov        rdi, rbp
00000000000053d7         xor        eax, eax
00000000000053d9         push       r9
00000000000053db         push       r13
00000000000053dd         push       r12
00000000000053df         push       r15
00000000000053e1         push       r14
00000000000053e3         mov        r9, qword [rsp+0x88+var_58]
00000000000053e8         mov        r8, qword [rsp+0x88+var_50]
00000000000053ed         call       j___fprintf_chk                             ; __fprintf_chk
00000000000053f2         add        rsp, 0x30

                     loc_53f6:
00000000000053f6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000053fa         pop        rbx
00000000000053fb         pop        rbp
00000000000053fc         pop        r12
00000000000053fe         pop        r13
0000000000005400         pop        r14
0000000000005402         pop        r15
0000000000005404         ret
                        ; endp
0000000000005405         align      8

                     loc_5408:
0000000000005408         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000540b         mov        rcx, rdx
000000000000540e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005415         mov        esi, 0x1
000000000000541a         xor        eax, eax
000000000000541c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005421         jmp        loc_530c
0000000000005426         align      16

                     loc_5430:
0000000000005430         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005434         mov        r9, qword [rbx+0x38]
0000000000005438         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000543f         mov        rax, qword [rbx+0x10]
0000000000005443         mov        r8, qword [rbx+8]
0000000000005447         mov        edx, 0x5
000000000000544c         mov        r13, qword [rbx+0x30]
0000000000005450         mov        r12, qword [rbx+0x28]
0000000000005454         mov        r15, qword [rbx+0x20]
0000000000005458         mov        r14, qword [rbx+0x18]
000000000000545c         mov        rbx, qword [rbx]
000000000000545f         mov        qword [rsp+0x58+var_40], r10
0000000000005464         mov        qword [rsp+0x58+var_48], r9
0000000000005469         mov        qword [rsp+0x58+var_58], rax
000000000000546d         mov        qword [rsp+0x58+var_50], r8

                     loc_5472:
0000000000005472         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005474         call       j_dcgettext                                 ; dcgettext
0000000000005479         mov        r10, qword [rsp+0x58+var_40]
000000000000547e         push       r10
0000000000005480         jmp        loc_53c4
0000000000005485         align      8

                     loc_5488:
0000000000005488         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000548b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005492         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005497         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005499         call       j_dcgettext                                 ; dcgettext
000000000000549e         add        rsp, 0x28
00000000000054a2         mov        rcx, rbx
00000000000054a5         mov        rdi, rbp
00000000000054a8         pop        rbx
00000000000054a9         pop        rbp
00000000000054aa         pop        r12
00000000000054ac         pop        r13
00000000000054ae         pop        r14
00000000000054b0         pop        r15
00000000000054b2         mov        rdx, rax
00000000000054b5         mov        esi, 0x1
00000000000054ba         xor        eax, eax
00000000000054bc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000054c1         align      8

                     loc_54c8:
00000000000054c8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000054cc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000054d3         mov        rbx, qword [rbx]
00000000000054d6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054db         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054dd         call       j_dcgettext                                 ; dcgettext
00000000000054e2         add        rsp, 0x28
00000000000054e6         mov        r8, r12
00000000000054e9         mov        rcx, rbx
00000000000054ec         mov        rdi, rbp
00000000000054ef         mov        rdx, rax
00000000000054f2         mov        esi, 0x1
00000000000054f7         pop        rbx
00000000000054f8         pop        rbp
00000000000054f9         pop        r12
00000000000054fb         pop        r13
00000000000054fd         pop        r14
00000000000054ff         pop        r15
0000000000005501         xor        eax, eax
0000000000005503         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005508         align      16

                     loc_5510:
0000000000005510         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005514         mov        r12, qword [rbx+8]
0000000000005518         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000551f         mov        rbx, qword [rbx]
0000000000005522         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005527         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005529         call       j_dcgettext                                 ; dcgettext
000000000000552e         add        rsp, 0x28
0000000000005532         mov        r9, r13
0000000000005535         mov        r8, r12
0000000000005538         mov        rcx, rbx
000000000000553b         mov        rdi, rbp
000000000000553e         mov        rdx, rax
0000000000005541         pop        rbx
0000000000005542         pop        rbp
0000000000005543         pop        r12
0000000000005545         pop        r13
0000000000005547         pop        r14
0000000000005549         pop        r15
000000000000554b         mov        esi, 0x1
0000000000005550         xor        eax, eax
0000000000005552         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005557         align      32

                     loc_5560:
0000000000005560         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005567         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000556c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000556e         mov        r14, qword [rbx+0x18]
0000000000005572         mov        r13, qword [rbx+0x10]
0000000000005576         mov        r12, qword [rbx+8]
000000000000557a         mov        rbx, qword [rbx]
000000000000557d         call       j_dcgettext                                 ; dcgettext
0000000000005582         sub        rsp, 0x8

                     loc_5586:
0000000000005586         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005588         mov        rdx, rax
000000000000558b         mov        r9, r13
000000000000558e         mov        r8, r12
0000000000005591         mov        rcx, rbx
0000000000005594         mov        rdi, rbp
0000000000005597         mov        esi, 0x1
000000000000559c         xor        eax, eax
000000000000559e         call       j___fprintf_chk                             ; __fprintf_chk
00000000000055a3         pop        rax
00000000000055a4         pop        rdx
00000000000055a5         add        rsp, 0x28
00000000000055a9         pop        rbx
00000000000055aa         pop        rbp
00000000000055ab         pop        r12
00000000000055ad         pop        r13
00000000000055af         pop        r14
00000000000055b1         pop        r15
00000000000055b3         ret
                        ; endp
00000000000055b4         align      8

                     loc_55b8:
00000000000055b8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000055bc         lea        rsi, qword [aWrittenBySSSns_acf8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000055c3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055ca         mov        r14, qword [rbx+0x18]
00000000000055ce         mov        r13, qword [rbx+0x10]
00000000000055d2         mov        r12, qword [rbx+8]
00000000000055d6         mov        rbx, qword [rbx]
00000000000055d9         call       j_dcgettext                                 ; dcgettext
00000000000055de         push       r15
00000000000055e0         jmp        loc_5586
00000000000055e2         align      8

                     loc_55e8:
00000000000055e8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000055ec         mov        r12, qword [rbx+0x28]
00000000000055f0         lea        rsi, qword [aWrittenBySSSns_ad20]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000055f7         mov        r15, qword [rbx+0x20]
00000000000055fb         mov        r14, qword [rbx+0x18]
00000000000055ff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005604         mov        r13, qword [rbx+0x10]
0000000000005608         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000560a         mov        rbx, qword [rbx]
000000000000560d         mov        qword [rsp+0x58+var_58], r8
0000000000005611         call       j_dcgettext                                 ; dcgettext
0000000000005616         sub        rsp, 0x8
000000000000561a         mov        r9, r13
000000000000561d         push       r12
000000000000561f         push       r15
0000000000005621         push       r14

                     loc_5623:
0000000000005623         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005628         mov        rcx, rbx
000000000000562b         mov        rdx, rax
000000000000562e         mov        rdi, rbp
0000000000005631         mov        esi, 0x1
0000000000005636         xor        eax, eax
0000000000005638         call       j___fprintf_chk                             ; __fprintf_chk
000000000000563d         add        rsp, 0x20
0000000000005641         add        rsp, 0x28
0000000000005645         pop        rbx
0000000000005646         pop        rbp
0000000000005647         pop        r12
0000000000005649         pop        r13
000000000000564b         pop        r14
000000000000564d         pop        r15
000000000000564f         ret
                        ; endp

                     loc_5650:
0000000000005650         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000005654         mov        r13, qword [rbx+0x30]
0000000000005658         lea        rsi, qword [aWrittenBySSSns_ad48]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000565f         mov        r12, qword [rbx+0x28]
0000000000005663         mov        r15, qword [rbx+0x20]
0000000000005667         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000566c         mov        r14, qword [rbx+0x18]
0000000000005670         mov        r8, qword [rbx+8]
0000000000005674         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005676         mov        qword [rsp+0x58+var_50], r9
000000000000567b         mov        rbx, qword [rbx]
000000000000567e         mov        qword [rsp+0x58+var_58], r8
0000000000005682         call       j_dcgettext                                 ; dcgettext
0000000000005687         push       r13
0000000000005689         push       r12
000000000000568b         push       r15
000000000000568d         push       r14
000000000000568f         mov        r9, qword [rsp+0x78+var_50]
0000000000005694         jmp        loc_5623
0000000000005696         align      32

                     loc_56a0:
00000000000056a0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000056a4         mov        r9, qword [rbx+0x38]
00000000000056a8         mov        edx, 0x5
00000000000056ad         mov        rax, qword [rbx+0x10]
00000000000056b1         mov        r8, qword [rbx+8]
00000000000056b5         lea        rsi, qword [aWrittenBySSSns_ade0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000056bc         mov        r13, qword [rbx+0x30]
00000000000056c0         mov        r12, qword [rbx+0x28]
00000000000056c4         mov        r15, qword [rbx+0x20]
00000000000056c8         mov        r14, qword [rbx+0x18]
00000000000056cc         mov        qword [rsp+0x58+var_40], r10
00000000000056d1         mov        qword [rsp+0x58+var_48], r9
00000000000056d6         mov        qword [rsp+0x58+var_58], rax
00000000000056da         mov        qword [rsp+0x58+var_50], r8
00000000000056df         mov        rbx, qword [rbx]
00000000000056e2         jmp        loc_5472
00000000000056e7         align      16                                          ; End of unwind block (FDE at 0xbc1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000056f0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xbd30)
00000000000056f3         cmp        qword [r8], 0x0
00000000000056f7         je         j_version_etc_arn                           ; version_etc_arn

00000000000056f9         nop        dword [rax]

                     loc_5700:
0000000000005700         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005704         cmp        qword [r8+r9*8], 0x0
0000000000005709         jne        loc_5700

                     j_version_etc_arn:        // version_etc_arn
000000000000570b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005710         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xbd30), Begin of unwind block (FDE at 0xbd44)
0000000000005714         mov        r10, r8
0000000000005717         xor        r9d, r9d
000000000000571a         mov        rax, qword [fs:0x28]
0000000000005723         mov        qword [rsp+0x68+var_10], rax
0000000000005728         xor        eax, eax
000000000000572a         mov        r8, rsp
000000000000572d         nop        dword [rax]

                     loc_5730:
0000000000005730         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005733         cmp        eax, 0x2f
0000000000005736         ja         loc_577a

0000000000005738         mov        r11d, eax
000000000000573b         add        r11, qword [r10+0x10]
000000000000573f         add        eax, 0x8
0000000000005742         mov        dword [r10], eax

                     loc_5745:
0000000000005745         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005748         test       rax, rax
000000000000574b         mov        qword [r8+r9*8], rax
000000000000574f         je         loc_575b

0000000000005751         add        r9, 0x1
0000000000005755         cmp        r9, 0xa
0000000000005759         jne        loc_5730

                     loc_575b:
000000000000575b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005760         mov        rax, qword [rsp+0x68+var_10]
0000000000005765         xor        rax, qword [fs:0x28]
000000000000576e         jne        loc_5775

0000000000005770         add        rsp, 0x68
0000000000005774         ret
                        ; endp

                     loc_5775:
0000000000005775         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_577a:
000000000000577a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000577e         lea        rax, qword [r11+8]
0000000000005782         mov        qword [r10+8], rax
0000000000005786         jmp        loc_5745
0000000000005788         align      16                                          ; End of unwind block (FDE at 0xbd44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005790         push       rbp                                         ; Begin of unwind block (FDE at 0xbd60), CODE XREF=main+384
0000000000005791         push       rbx
0000000000005792         mov        r10d, 0x20
0000000000005798         xor        r11d, r11d
000000000000579b         sub        rsp, 0xb8
00000000000057a2         mov        rax, qword [fs:0x28]
00000000000057ab         mov        qword [rsp+0xc8+var_50], rax
00000000000057b0         xor        eax, eax
00000000000057b2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000057ba         mov        qword [rsp+0xc8+var_28], r8
00000000000057c2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000057ca         lea        r8, qword [rsp+0xc8+var_A8]
00000000000057cf         mov        qword [rsp+0xc8+var_20], r9
00000000000057d7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000057df         mov        qword [rsp+0xc8+var_B8], rax
00000000000057e4         lea        rax, qword [rsp+0xc8+var_48]
00000000000057ec         xor        r9d, r9d
00000000000057ef         mov        qword [rsp+0xc8+var_B0], rax
00000000000057f4         mov        rbp, rax
00000000000057f7         nop        word [rax+rax]

                     loc_5800:
0000000000005800         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005804         ja         loc_585c

0000000000005806         mov        eax, r10d
0000000000005809         mov        r11d, 0x1
000000000000580f         add        r10d, 0x8
0000000000005813         add        rax, rbp

                     loc_5816:
0000000000005816         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005819         test       rax, rax
000000000000581c         mov        qword [r8+r9*8], rax
0000000000005820         je         loc_582c

0000000000005822         add        r9, 0x1
0000000000005826         cmp        r9, 0xa
000000000000582a         jne        loc_5800

                     loc_582c:
000000000000582c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000582f         jne        loc_5855

                     loc_5831:
0000000000005831         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005836         mov        rax, qword [rsp+0xc8+var_50]
000000000000583b         xor        rax, qword [fs:0x28]
0000000000005844         jne        loc_5850

0000000000005846         add        rsp, 0xb8
000000000000584d         pop        rbx
000000000000584e         pop        rbp
000000000000584f         ret
                        ; endp

                     loc_5850:
0000000000005850         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5855:
0000000000005855         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000585a         jmp        loc_5831

                     loc_585c:
000000000000585c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000585f         add        rbx, 0x8
0000000000005863         jmp        loc_5816
0000000000005865         align      16                                          ; End of unwind block (FDE at 0xbd60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005870         push       rbx                                         ; Begin of unwind block (FDE at 0xbd8c)
0000000000005871         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005878         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000587d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000587f         call       j_dcgettext                                 ; dcgettext
0000000000005884         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000588b         mov        rsi, rax
000000000000588e         mov        edi, 0x1
0000000000005893         xor        eax, eax
0000000000005895         call       j___printf_chk                              ; __printf_chk
000000000000589a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000058a1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058a8         call       j_dcgettext                                 ; dcgettext
00000000000058ad         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000058b4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c80
00000000000058bb         mov        rsi, rax
00000000000058be         mov        edi, 0x1
00000000000058c3         xor        eax, eax
00000000000058c5         call       j___printf_chk                              ; __printf_chk
00000000000058ca         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000058d1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000058d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058da         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058df         call       j_dcgettext                                 ; dcgettext
00000000000058e4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000058e7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000058ea         pop        rbx
00000000000058eb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000058f0         push       rbx                                         ; End of unwind block (FDE at 0xbd8c), Begin of unwind block (FDE at 0xbdac), CODE XREF=mode_compile+123, mode_compile+842, mode_create_from_ref+56, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000058f1         mov        rbx, rdi
00000000000058f4         call       j_malloc                                    ; malloc
00000000000058f9         test       rax, rax
00000000000058fc         jne        loc_5903

00000000000058fe         test       rbx, rbx
0000000000005901         jne        loc_5905

                     loc_5903:
0000000000005903         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005904         ret
                        ; endp

                     loc_5905:
0000000000005905         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_590a:
000000000000590a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xbdac)
                     xnmalloc:
0000000000005910         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xbdc8)
0000000000005913         mul        rsi
0000000000005916         mov        rdi, rax
0000000000005919         seto       al
000000000000591c         test       rdi, rdi
000000000000591f         js         loc_592b

0000000000005921         movzx      eax, al
0000000000005924         test       rax, rax
0000000000005927         jne        loc_592b

0000000000005929         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_592b:
000000000000592b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000592f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5934:
0000000000005934         nop                                                    ; End of unwind block (FDE at 0xbdc8)
0000000000005936         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005940         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xbddc)
                        ; endp
0000000000005942         align      16                                          ; End of unwind block (FDE at 0xbddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005950         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xbdf0), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005953         push       rbx
0000000000005954         mov        rbx, rsi
0000000000005957         jne        loc_595e

0000000000005959         test       rdi, rdi
000000000000595c         jne        loc_5978

                     loc_595e:
000000000000595e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005961         call       j_realloc                                   ; realloc
0000000000005966         test       rax, rax
0000000000005969         jne        loc_5970

000000000000596b         test       rbx, rbx
000000000000596e         jne        loc_5981

                     loc_5970:
0000000000005970         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005971         ret
                        ; endp
0000000000005972         align      8

                     loc_5978:
0000000000005978         call       sub_1a90                                    ; sub_1a90, CODE XREF=xrealloc+12
000000000000597d         xor        eax, eax
000000000000597f         pop        rbx
0000000000005980         ret
                        ; endp

                     loc_5981:
0000000000005981         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5986:
0000000000005986         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xbdf0)
                     xnrealloc:
0000000000005990         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xbe14)
0000000000005993         mul        rdx
0000000000005996         mov        rsi, rax
0000000000005999         seto       al
000000000000599c         test       rsi, rsi
000000000000599f         js         loc_59ab

00000000000059a1         movzx      eax, al
00000000000059a4         test       rax, rax
00000000000059a7         jne        loc_59ab

00000000000059a9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_59ab:
00000000000059ab         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000059af         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_59b4:
00000000000059b4         nop                                                    ; End of unwind block (FDE at 0xbe14)
00000000000059b6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000059c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xbe28)
00000000000059c3         mov        r9, rdx
00000000000059c6         mov        rcx, qword [rsi]
00000000000059c9         je         loc_5a00

00000000000059cb         xor        edx, edx
00000000000059cd         movabs     rax, 0x5555555555555554
00000000000059d7         div        r9
00000000000059da         cmp        rax, rcx
00000000000059dd         jbe        loc_5a1b

00000000000059df         mov        rax, rcx
00000000000059e2         shr        rax, 0x1
00000000000059e5         lea        rcx, qword [rax+rcx+1]

                     loc_59ea:
00000000000059ea         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000059ed         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000059f1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000059f4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000059f9         align      512

                     loc_5a00:
0000000000005a00         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005a03         je         loc_5a28

                     loc_5a05:
0000000000005a05         mov        rax, rcx                                    ; CODE XREF=sub_5a24+28
0000000000005a08         mul        r9
0000000000005a0b         seto       dl
0000000000005a0e         test       rax, rax
0000000000005a11         movzx      edx, dl
0000000000005a14         js         loc_5a1b

0000000000005a16         test       rdx, rdx
0000000000005a19         je         loc_59ea

                     loc_5a1b:
0000000000005a1b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005a1f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a24:
0000000000005a24         nop        dword [rax]
                        ; endp

                     loc_5a28:
0000000000005a28         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005a2a         mov        eax, 0x80
0000000000005a2f         xor        r8d, r8d
0000000000005a32         div        r9
0000000000005a35         test       rax, rax
0000000000005a38         sete       r8b
0000000000005a3c         lea        rcx, qword [r8+rax]
0000000000005a40         jmp        loc_5a05
0000000000005a42         align      16                                          ; End of unwind block (FDE at 0xbe28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005a50         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xbe40), CODE XREF=main+664
0000000000005a53         mov        rax, qword [rsi]
0000000000005a56         je         loc_5a80

0000000000005a58         movabs     rdx, 0x5555555555555553
0000000000005a62         cmp        rax, rdx
0000000000005a65         ja         loc_5a91

0000000000005a67         mov        rdx, rax
0000000000005a6a         shr        rdx, 0x1
0000000000005a6d         lea        rax, qword [rdx+rax+1]

                     loc_5a72:
0000000000005a72         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005a75         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005a78         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005a7d         align      128

                     loc_5a80:
0000000000005a80         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005a83         mov        edx, 0x80
0000000000005a88         cmove      rax, rdx
0000000000005a8c         test       rax, rax
0000000000005a8f         jns        loc_5a72

                     loc_5a91:
0000000000005a91         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005a95         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a9a:
0000000000005a9a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xbe40)
                     xzalloc:
0000000000005aa0         push       rbx                                         ; Begin of unwind block (FDE at 0xbe58)
0000000000005aa1         mov        rbx, rdi
0000000000005aa4         call       xmalloc                                     ; xmalloc
0000000000005aa9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005aac         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005aae         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005ab1         pop        rbx
0000000000005ab2         jmp        j_memset                                    ; memset
                        ; endp
0000000000005ab7         align      64                                          ; End of unwind block (FDE at 0xbe58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005ac0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xbe74)
0000000000005ac3         sub        rsp, 0x8
0000000000005ac7         mul        rsi
0000000000005aca         seto       dl
0000000000005acd         test       rax, rax
0000000000005ad0         js         loc_5ae9

0000000000005ad2         movzx      edx, dl
0000000000005ad5         test       rdx, rdx
0000000000005ad8         jne        loc_5ae9

0000000000005ada         call       j_calloc                                    ; calloc
0000000000005adf         test       rax, rax
0000000000005ae2         je         loc_5ae9

0000000000005ae4         add        rsp, 0x8
0000000000005ae8         ret
                        ; endp

                     loc_5ae9:
0000000000005ae9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5aee:
0000000000005aee         nop                                                    ; End of unwind block (FDE at 0xbe74)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005af0         push       rbp                                         ; Begin of unwind block (FDE at 0xbe90), CODE XREF=clone_quoting_options+40
0000000000005af1         push       rbx
0000000000005af2         mov        rbp, rdi
0000000000005af5         mov        rdi, rsi
0000000000005af8         mov        rbx, rsi
0000000000005afb         sub        rsp, 0x8
0000000000005aff         call       xmalloc                                     ; xmalloc
0000000000005b04         add        rsp, 0x8
0000000000005b08         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005b0b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005b0e         pop        rbx
0000000000005b0f         pop        rbp
0000000000005b10         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005b13         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005b18         align      32                                          ; End of unwind block (FDE at 0xbe90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005b20         push       rbx                                         ; Begin of unwind block (FDE at 0xbeb8)
0000000000005b21         mov        rbx, rdi
0000000000005b24         call       j_strlen                                    ; strlen
0000000000005b29         mov        rdi, rbx
0000000000005b2c         lea        rsi, qword [rax+1]
0000000000005b30         pop        rbx
0000000000005b31         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005b33         align      64                                          ; End of unwind block (FDE at 0xbeb8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005b40         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xbed4), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=mode_compile+889, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xfts_open+42
0000000000005b47         sub        rsp, 0x8
0000000000005b4b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b50         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b52         call       j_dcgettext                                 ; dcgettext
0000000000005b57         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005b5d         lea        rdx, qword [aInvalidModeS+14]               ; argument "__format" for method j_error, 0x9d19
0000000000005b64         mov        rcx, rax
0000000000005b67         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005b69         xor        eax, eax
0000000000005b6b         call       j_error                                     ; error
0000000000005b70         call       j_abort                                     ; abort
                        ; endp
0000000000005b75         align      128                                         ; End of unwind block (FDE at 0xbed4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xfts_open:
0000000000005b80         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xbeec), CODE XREF=main+824
0000000000005b84         or         esi, 0x200
0000000000005b8a         call       rpl_fts_open                                ; rpl_fts_open
0000000000005b8f         test       rax, rax
0000000000005b92         je         loc_5ba0

0000000000005b94         add        rsp, 0x8
0000000000005b98         ret
                        ; endp
0000000000005b99         align      32

                     loc_5ba0:
0000000000005ba0         call       j___errno_location                          ; __errno_location, CODE XREF=xfts_open+18
0000000000005ba5         cmp        dword [rax], 0x16
0000000000005ba8         je         loc_5bb0

0000000000005baa         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5baf:
0000000000005baf         nop
                        ; endp

                     loc_5bb0:
0000000000005bb0         lea        rcx, qword [__PRETTY_FUNCTION__.3434]       ; argument "__function" for method j___assert_fail, "xfts_open", CODE XREF=xfts_open+40
0000000000005bb7         lea        rsi, qword [aCoreutils831li_aee0]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xfts.c"
0000000000005bbe         lea        rdi, qword [aErrnoEinval]                   ; argument "__assertion" for method j___assert_fail, "errno != EINVAL"
0000000000005bc5         mov        edx, 0x29                                   ; argument "__line" for method j___assert_fail
0000000000005bca         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000005bcf         align      16                                          ; End of unwind block (FDE at 0xbeec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_warning_required:
0000000000005bd0         mov        edx, dword [rdi+0x48]                       ; Begin of unwind block (FDE at 0xbf08), CODE XREF=sub_1fe0+34
0000000000005bd3         mov        eax, 0x1
0000000000005bd8         and        edx, 0x11
0000000000005bdb         cmp        edx, 0x10
0000000000005bde         je         loc_5be7

0000000000005be0         xor        eax, eax
0000000000005be2         cmp        edx, 0x11
0000000000005be5         je         loc_5bf0

                     loc_5be7:
0000000000005be7         ret                                                    ; CODE XREF=cycle_warning_required+14
                        ; endp
0000000000005be9         align      16

                     loc_5bf0:
0000000000005bf0         cmp        qword [rsi+0x58], 0x0                       ; CODE XREF=cycle_warning_required+21
0000000000005bf5         setne      al
0000000000005bf8         ret
                        ; endp
0000000000005bf9         align      1024                                        ; End of unwind block (FDE at 0xbf08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_compare:
0000000000005c00         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xbf1c), DATA XREF=setup_dir.isra.4+19
0000000000005c02         mov        rdx, qword [rsi+8]
0000000000005c06         cmp        qword [rdi+8], rdx
0000000000005c0a         je         loc_5c10

0000000000005c0c         ret
                        ; endp
0000000000005c0e         align      16

                     loc_5c10:
0000000000005c10         mov        rax, qword [rsi]                            ; CODE XREF=AD_compare+10
0000000000005c13         cmp        qword [rdi], rax
0000000000005c16         sete       al
0000000000005c19         ret
                        ; endp
0000000000005c1a         align      32                                          ; End of unwind block (FDE at 0xbf1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_hash:
0000000000005c20         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0xbf30), DATA XREF=setup_dir.isra.4+26
0000000000005c24         xor        edx, edx
0000000000005c26         div        rsi
0000000000005c29         mov        rax, rdx
0000000000005c2c         ret
                        ; endp
0000000000005c2d         align      16                                          ; End of unwind block (FDE at 0xbf30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_hash:
0000000000005c30         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0xbf44), DATA XREF=filesystem_type+110
0000000000005c33         xor        edx, edx
0000000000005c35         div        rsi
0000000000005c38         mov        rax, rdx
0000000000005c3b         ret
                        ; endp
0000000000005c3c         align      64                                          ; End of unwind block (FDE at 0xbf44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_compare:
0000000000005c40         mov        rax, qword [rsi]                            ; Begin of unwind block (FDE at 0xbf58), DATA XREF=filesystem_type+103
0000000000005c43         cmp        qword [rdi], rax
0000000000005c46         sete       al
0000000000005c49         ret
                        ; endp
0000000000005c4a         align      16                                          ; End of unwind block (FDE at 0xbf58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_compare_ino:
0000000000005c50         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xbf6c), DATA XREF=fts_build+2040
0000000000005c53         mov        rax, qword [rsi]
0000000000005c56         mov        rax, qword [rax+0x80]
0000000000005c5d         cmp        qword [rdx+0x80], rax
0000000000005c64         jb         loc_5c70

0000000000005c66         seta       al
0000000000005c69         movzx      eax, al
0000000000005c6c         ret
                        ; endp
0000000000005c6d         align      16

                     loc_5c70:
0000000000005c70         mov        eax, 0xffffffff                             ; CODE XREF=fts_compare_ino+20
0000000000005c75         ret
                        ; endp
0000000000005c76         align      128                                         ; End of unwind block (FDE at 0xbf6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_stat:
0000000000005c80         push       r12                                         ; Begin of unwind block (FDE at 0xbf80), CODE XREF=fts_build+1104, fts_build+1543, fts_build+2136, rpl_fts_open+765, rpl_fts_read+440, rpl_fts_read+645, rpl_fts_read+1452, rpl_fts_read+1624
0000000000005c82         push       rbp
0000000000005c83         mov        rbp, rsi
0000000000005c86         push       rbx
0000000000005c87         cmp        qword [rbp+0x58], 0x0
0000000000005c8c         lea        rbx, qword [rsi+0x78]
0000000000005c90         mov        r12, rdi
0000000000005c93         mov        eax, dword [rdi+0x48]
0000000000005c96         mov        rsi, qword [rsi+0x30]
0000000000005c9a         jne        loc_5d00

0000000000005c9c         test       al, 0x1
0000000000005c9e         je         loc_5d00

                     loc_5ca0:
0000000000005ca0         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___xstat, CODE XREF=fts_stat+130, fts_stat+134
0000000000005ca3         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000005ca8         call       j___xstat                                   ; __xstat
0000000000005cad         test       eax, eax
0000000000005caf         je         loc_5d2b

0000000000005cb1         call       j___errno_location                          ; __errno_location
0000000000005cb6         mov        r12, rax
0000000000005cb9         mov        eax, dword [rax]
0000000000005cbb         cmp        eax, 0x2
0000000000005cbe         je         loc_5dd0

                     loc_5cc4:
0000000000005cc4         lea        rdi, qword [rbx+8]                          ; CODE XREF=fts_stat+327, fts_stat+361
0000000000005cc8         mov        dword [rbp+0x40], eax
0000000000005ccb         mov        qword [rbp+0x78], 0x0
0000000000005cd3         mov        qword [rbx+0x88], 0x0
0000000000005cde         xor        eax, eax
0000000000005ce0         and        rdi, 0xfffffffffffffff8
0000000000005ce4         sub        rbx, rdi
0000000000005ce7         lea        ecx, dword [rbx+0x90]
0000000000005ced         shr        ecx, 0x3
0000000000005cf0         rep stosq  qword [rdi], rax
0000000000005cf3         mov        eax, 0xa

                     loc_5cf8:
0000000000005cf8         pop        rbx                                         ; CODE XREF=fts_stat+278, fts_stat+310, fts_stat+397, fts_stat+413, fts_stat+442
0000000000005cf9         pop        rbp
0000000000005cfa         pop        r12
0000000000005cfc         ret
                        ; endp
0000000000005cfd         align      256

                     loc_5d00:
0000000000005d00         test       al, 0x2                                     ; CODE XREF=fts_stat+26, fts_stat+30
0000000000005d02         jne        loc_5ca0

0000000000005d04         test       dl, dl
0000000000005d06         jne        loc_5ca0

0000000000005d08         mov        rdx, rsi                                    ; argument "__filename" for method j___fxstatat
0000000000005d0b         mov        esi, dword [r12+0x2c]                       ; argument "__fildes" for method j___fxstatat
0000000000005d10         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000005d16         mov        rcx, rbx                                    ; argument "__stat_buf" for method j___fxstatat
0000000000005d19         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005d1e         call       j___fxstatat                                ; __fxstatat
0000000000005d23         test       eax, eax
0000000000005d25         jne        loc_5dc0

                     loc_5d2b:
0000000000005d2b         mov        eax, dword [rbp+0x90]                       ; CODE XREF=fts_stat+47
0000000000005d31         and        eax, 0xf000
0000000000005d36         cmp        eax, 0x4000
0000000000005d3b         je         loc_5d60

0000000000005d3d         cmp        eax, aTreatSpecially                        ; " treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n"
0000000000005d42         je         loc_5e18

0000000000005d48         cmp        eax, 0x8000
0000000000005d4d         sete       al
0000000000005d50         movzx      eax, al
0000000000005d53         pop        rbx
0000000000005d54         lea        eax, dword [rax+rax*4+3]
0000000000005d58         pop        rbp
0000000000005d59         pop        r12
0000000000005d5b         ret
                        ; endp
0000000000005d5c         align      32

                     loc_5d60:
0000000000005d60         mov        rax, qword [rbp+0x88]                       ; CODE XREF=fts_stat+187
0000000000005d67         cmp        rax, 0x1
0000000000005d6b         jbe        loc_5df0

0000000000005d71         cmp        qword [rbp+0x58], 0x0
0000000000005d76         jle        loc_5df0

0000000000005d78         test       byte [r12+0x48], 0x20
0000000000005d7e         lea        rdx, qword [rax-2]
0000000000005d82         cmove      rax, rdx

                     loc_5d86:
0000000000005d86         cmp        byte [rbp+0x108], 0x2e                      ; CODE XREF=fts_stat+375
0000000000005d8d         mov        qword [rbp+0x68], rax
0000000000005d91         mov        eax, 0x1
0000000000005d96         jne        loc_5cf8

0000000000005d9c         cmp        byte [rbp+0x109], 0x0
0000000000005da3         jne        loc_5e28

                     loc_5da9:
0000000000005da9         cmp        qword [rbp+0x58], 0x1                       ; CODE XREF=fts_stat+448
0000000000005dae         sbb        eax, eax
0000000000005db0         and        eax, 0xfffffffc
0000000000005db3         add        eax, 0x5
0000000000005db6         jmp        loc_5cf8
0000000000005dbb         align      64

                     loc_5dc0:
0000000000005dc0         call       j___errno_location                          ; __errno_location, CODE XREF=fts_stat+165
0000000000005dc5         mov        eax, dword [rax]
0000000000005dc7         jmp        loc_5cc4
0000000000005dcc         align      16

                     loc_5dd0:
0000000000005dd0         mov        rsi, qword [rbp+0x30]                       ; argument "__filename" for method j___lxstat, CODE XREF=fts_stat+62
0000000000005dd4         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___lxstat
0000000000005dd7         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000005ddc         call       j___lxstat                                  ; __lxstat
0000000000005de1         test       eax, eax
0000000000005de3         je         loc_5e00

0000000000005de5         mov        eax, dword [r12]
0000000000005de9         jmp        loc_5cc4
0000000000005dee         align      16

                     loc_5df0:
0000000000005df0         mov        rax, 0xffffffffffffffff                     ; CODE XREF=fts_stat+235, fts_stat+246
0000000000005df7         jmp        loc_5d86
0000000000005df9         align      512

                     loc_5e00:
0000000000005e00         mov        dword [r12], 0x0                            ; CODE XREF=fts_stat+355
0000000000005e08         mov        eax, 0xd
0000000000005e0d         jmp        loc_5cf8
0000000000005e12         align      8

                     loc_5e18:
0000000000005e18         mov        eax, 0xc                                    ; CODE XREF=fts_stat+194
0000000000005e1d         jmp        loc_5cf8
0000000000005e22         align      8

                     loc_5e28:
0000000000005e28         mov        edx, dword [rbp+0x108]                      ; CODE XREF=fts_stat+291
0000000000005e2e         and        edx, 0xffff00
0000000000005e34         cmp        edx, 0x2e00
0000000000005e3a         jne        loc_5cf8

0000000000005e40         jmp        loc_5da9
0000000000005e45         align      16                                          ; End of unwind block (FDE at 0xbf80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_sort:
0000000000005e50         push       r13                                         ; Begin of unwind block (FDE at 0xbfbc), CODE XREF=fts_build+1825, fts_build+2062, rpl_fts_open+548
0000000000005e52         push       r12
0000000000005e54         mov        r12, rdx
0000000000005e57         push       rbp
0000000000005e58         push       rbx
0000000000005e59         mov        rbp, rdi
0000000000005e5c         mov        rbx, rsi
0000000000005e5f         sub        rsp, 0x8
0000000000005e63         cmp        qword [rbp+0x38], rdx
0000000000005e67         mov        r13, qword [rdi+0x40]
0000000000005e6b         mov        rdi, qword [rdi+0x10]
0000000000005e6f         jae        loc_5ea5

0000000000005e71         lea        rsi, qword [rdx+0x28]
0000000000005e75         movabs     rax, 0x1fffffffffffffff
0000000000005e7f         cmp        rsi, rax
0000000000005e82         mov        qword [rbp+0x38], rsi
0000000000005e86         ja         loc_5f24

0000000000005e8c         shl        rsi, 0x3                                    ; argument "__size" for method j_realloc
0000000000005e90         call       j_realloc                                   ; realloc
0000000000005e95         test       rax, rax
0000000000005e98         mov        rdi, rax
0000000000005e9b         je         loc_5f20

0000000000005ea1         mov        qword [rbp+0x10], rax

                     loc_5ea5:
0000000000005ea5         test       rbx, rbx                                    ; CODE XREF=fts_sort+31
0000000000005ea8         je         loc_5ec1

0000000000005eaa         mov        rdx, rdi
0000000000005ead         nop        dword [rax]

                     loc_5eb0:
0000000000005eb0         add        rdx, 0x8                                    ; CODE XREF=fts_sort+111
0000000000005eb4         mov        qword [rdx-8], rbx
0000000000005eb8         mov        rbx, qword [rbx+0x10]
0000000000005ebc         test       rbx, rbx
0000000000005ebf         jne        loc_5eb0

                     loc_5ec1:
0000000000005ec1         mov        rcx, r13                                    ; argument "__compar" for method j_qsort, CODE XREF=fts_sort+88
0000000000005ec4         mov        edx, 0x8                                    ; argument "__size" for method j_qsort
0000000000005ec9         mov        rsi, r12                                    ; argument "__nmemb" for method j_qsort
0000000000005ecc         call       j_qsort                                     ; qsort
0000000000005ed1         mov        r8, qword [rbp+0x10]
0000000000005ed5         mov        rcx, r12
0000000000005ed8         sub        rcx, 0x1
0000000000005edc         mov        rax, qword [r8]
0000000000005edf         je         loc_5f50

0000000000005ee1         mov        rdi, rax
0000000000005ee4         mov        rdx, r8
0000000000005ee7         jmp        loc_5ef3
0000000000005ee9         align      16

                     loc_5ef0:
0000000000005ef0         mov        rdi, qword [rdx]                            ; CODE XREF=fts_sort+179

                     loc_5ef3:
0000000000005ef3         mov        rsi, qword [rdx+8]                          ; CODE XREF=fts_sort+151
0000000000005ef7         add        rdx, 0x8
0000000000005efb         sub        rcx, 0x1
0000000000005eff         mov        qword [rdi+0x10], rsi
0000000000005f03         jne        loc_5ef0

0000000000005f05         mov        rdx, qword [r8+r12*8-8]

                     loc_5f0a:
0000000000005f0a         mov        qword [rdx+0x10], 0x0                       ; CODE XREF=fts_sort+259
0000000000005f12         add        rsp, 0x8
0000000000005f16         pop        rbx
0000000000005f17         pop        rbp
0000000000005f18         pop        r12
0000000000005f1a         pop        r13
0000000000005f1c         ret
                        ; endp
0000000000005f1d         align      32

                     loc_5f20:
0000000000005f20         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=fts_sort+75

                     loc_5f24:
0000000000005f24         call       sub_1a90                                    ; sub_1a90, CODE XREF=fts_sort+54
0000000000005f29         mov        qword [rbp+0x10], 0x0
0000000000005f31         mov        qword [rbp+0x38], 0x0
0000000000005f39         add        rsp, 0x8
0000000000005f3d         mov        rax, rbx
0000000000005f40         pop        rbx
0000000000005f41         pop        rbp
0000000000005f42         pop        r12
0000000000005f44         pop        r13
0000000000005f46         ret
                        ; endp
0000000000005f47         align      16

                     loc_5f50:
0000000000005f50         mov        rdx, rax                                    ; CODE XREF=fts_sort+143
0000000000005f53         jmp        loc_5f0a
0000000000005f55         align      32                                          ; End of unwind block (FDE at 0xbfbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_alloc:
0000000000005f60         push       r13                                         ; Begin of unwind block (FDE at 0xc00c), CODE XREF=fts_build+556, rpl_fts_open+231, rpl_fts_open+334, rpl_fts_open+568
0000000000005f62         push       r12
0000000000005f64         mov        r12, rdi
0000000000005f67         push       rbp
0000000000005f68         lea        rdi, qword [rdx+0x110]
0000000000005f6f         push       rbx
0000000000005f70         mov        r13, rsi
0000000000005f73         mov        rbp, rdx
0000000000005f76         sub        rsp, 0x8
0000000000005f7a         and        rdi, 0xfffffffffffffff8                     ; argument "__size" for method j_malloc
0000000000005f7e         call       j_malloc                                    ; malloc
0000000000005f83         test       rax, rax
0000000000005f86         mov        rbx, rax
0000000000005f89         je         loc_5fdc

0000000000005f8b         lea        rdi, qword [rax+0x108]                      ; argument "__dest" for method j_memcpy
0000000000005f92         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000005f95         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
0000000000005f98         call       j_memcpy                                    ; memcpy
0000000000005f9d         mov        rax, qword [r12+0x20]
0000000000005fa2         mov        byte [rbx+rbp+0x108], 0x0
0000000000005faa         mov        qword [rbx+0x60], rbp
0000000000005fae         mov        qword [rbx+0x50], r12
0000000000005fb2         mov        dword [rbx+0x40], 0x0
0000000000005fb9         mov        qword [rbx+0x18], 0x0
0000000000005fc1         mov        qword [rbx+0x38], rax
0000000000005fc5         mov        dword [rbx+0x72], 0x30000
0000000000005fcc         mov        qword [rbx+0x20], 0x0
0000000000005fd4         mov        qword [rbx+0x28], 0x0

                     loc_5fdc:
0000000000005fdc         add        rsp, 0x8                                    ; CODE XREF=fts_alloc+41
0000000000005fe0         mov        rax, rbx
0000000000005fe3         pop        rbx
0000000000005fe4         pop        rbp
0000000000005fe5         pop        r12
0000000000005fe7         pop        r13
0000000000005fe9         ret
                        ; endp
0000000000005fea         align      16                                          ; End of unwind block (FDE at 0xc00c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_lfree:
0000000000005ff0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc044), CODE XREF=fts_build+1638, fts_build+1893, fts_build+2281, fts_build+2418, rpl_fts_open+851, rpl_fts_close+92, rpl_fts_read+367, rpl_fts_read+1034, rpl_fts_children+75
0000000000005ff3         je         loc_6030

0000000000005ff5         push       rbp
0000000000005ff6         push       rbx
0000000000005ff7         mov        rbx, rdi
0000000000005ffa         sub        rsp, 0x8
0000000000005ffe         nop

                     loc_6000:
0000000000006000         mov        rdi, qword [rbx+0x18]                       ; CODE XREF=fts_lfree+48, DATA XREF=strmode+34
0000000000006004         mov        rbp, qword [rbx+0x10]
0000000000006008         test       rdi, rdi
000000000000600b         je         loc_6012

000000000000600d         call       j_closedir                                  ; closedir

                     loc_6012:
0000000000006012         mov        rdi, rbx                                    ; CODE XREF=fts_lfree+27
0000000000006015         mov        rbx, rbp
0000000000006018         call       sub_1a90                                    ; sub_1a90
000000000000601d         test       rbp, rbp
0000000000006020         jne        loc_6000

0000000000006022         add        rsp, 0x8
0000000000006026         pop        rbx
0000000000006027         pop        rbp
0000000000006028         ret
                        ; endp
0000000000006029         align      16

                     loc_6030:
0000000000006030         ret                                                    ; CODE XREF=fts_lfree+3
                        ; endp
0000000000006032         align      64                                          ; End of unwind block (FDE at 0xc044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_ring_clear:
0000000000006040         push       rbx                                         ; Begin of unwind block (FDE at 0xc070), CODE XREF=restore_initial_cwd+44, rpl_fts_close+140
0000000000006041         mov        rbx, rdi
0000000000006044         jmp        loc_605c
0000000000006046         align      16

                     loc_6050:
0000000000006050         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+38
0000000000006053         call       i_ring_pop                                  ; i_ring_pop
0000000000006058         test       eax, eax
000000000000605a         jns        loc_6070

                     loc_605c:
000000000000605c         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+4, fd_ring_clear+55
000000000000605f         call       i_ring_empty                                ; i_ring_empty
0000000000006064         test       al, al
0000000000006066         je         loc_6050

0000000000006068         pop        rbx
0000000000006069         ret
                        ; endp
000000000000606a         align      16

                     loc_6070:
0000000000006070         mov        edi, eax                                    ; argument "__fd" for method j_close, CODE XREF=fd_ring_clear+26
0000000000006072         call       j_close                                     ; close
0000000000006077         jmp        loc_605c
0000000000006079         align      128                                         ; End of unwind block (FDE at 0xc070)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_A8: int64_t, -168
        ;    var_B8: int64_t, -184


                     filesystem_type:
0000000000006080         push       r13                                         ; Begin of unwind block (FDE at 0xc08c), CODE XREF=leaf_optimization+4, fts_build+708
0000000000006082         push       r12
0000000000006084         push       rbp
0000000000006085         push       rbx
0000000000006086         sub        rsp, 0x98
000000000000608d         mov        rbx, qword [rdi+0x50]
0000000000006091         mov        rax, qword [fs:0x28]
000000000000609a         mov        qword [rsp+0xb8+var_30], rax
00000000000060a2         xor        eax, eax
00000000000060a4         test       byte [rbx+0x49], 0x2
00000000000060a8         je         loc_6112

00000000000060aa         mov        r12, qword [rbx+0x50]
00000000000060ae         mov        rbp, rdi
00000000000060b1         mov        r13d, esi
00000000000060b4         test       r12, r12
00000000000060b7         je         loc_60e0

                     loc_60b9:
00000000000060b9         mov        rax, qword [rbp+0x78]                       ; CODE XREF=filesystem_type+139
00000000000060bd         mov        rsi, rsp
00000000000060c0         mov        rdi, r12
00000000000060c3         mov        qword [rsp+0xb8+var_B8], rax
00000000000060c7         call       hash_lookup                                 ; hash_lookup
00000000000060cc         test       rax, rax
00000000000060cf         je         loc_610d

00000000000060d1         mov        rbx, qword [rax+8]
00000000000060d5         jmp        loc_6114
00000000000060d7         align      32

                     loc_60e0:
00000000000060e0         mov        r8, qword [qword_20dfd0]                    ; qword_20dfd0, CODE XREF=filesystem_type+55
00000000000060e7         lea        rcx, qword [dev_type_compare]               ; dev_type_compare
00000000000060ee         lea        rdx, qword [dev_type_hash]                  ; dev_type_hash
00000000000060f5         xor        esi, esi
00000000000060f7         mov        edi, 0xd
00000000000060fc         call       hash_initialize                             ; hash_initialize
0000000000006101         test       rax, rax
0000000000006104         mov        r12, rax
0000000000006107         mov        qword [rbx+0x50], rax
000000000000610b         jne        loc_60b9

                     loc_610d:
000000000000610d         test       r13d, r13d                                  ; CODE XREF=filesystem_type+79
0000000000006110         jns        loc_6140

                     loc_6112:
0000000000006112         xor        ebx, ebx                                    ; CODE XREF=filesystem_type+40, filesystem_type+207

                     loc_6114:
0000000000006114         mov        rdx, qword [rsp+0xb8+var_30]                ; CODE XREF=filesystem_type+85, filesystem_type+217, filesystem_type+235, filesystem_type+275
000000000000611c         xor        rdx, qword [fs:0x28]
0000000000006125         mov        rax, rbx
0000000000006128         jne        loc_61a2

000000000000612a         add        rsp, 0x98
0000000000006131         pop        rbx
0000000000006132         pop        rbp
0000000000006133         pop        r12
0000000000006135         pop        r13
0000000000006137         ret
                        ; endp
0000000000006138         align      64

                     loc_6140:
0000000000006140         lea        rsi, qword [rsp+0xb8+var_A8]                ; argument "__buf" for method j_fstatfs, CODE XREF=filesystem_type+144
0000000000006145         mov        edi, r13d                                   ; argument "__fildes" for method j_fstatfs
0000000000006148         call       j_fstatfs                                   ; fstatfs
000000000000614d         test       eax, eax
000000000000614f         jne        loc_6112

0000000000006151         test       r12, r12
0000000000006154         mov        rbx, qword [rsp+0xb8+var_A8]
0000000000006159         je         loc_6114

000000000000615b         mov        edi, 0x10                                   ; argument "__size" for method j_malloc
0000000000006160         call       j_malloc                                    ; malloc
0000000000006165         test       rax, rax
0000000000006168         mov        r13, rax
000000000000616b         je         loc_6114

000000000000616d         mov        rax, qword [rbp+0x78]
0000000000006171         mov        qword [r13+8], rbx
0000000000006175         mov        rsi, r13
0000000000006178         mov        rdi, r12
000000000000617b         mov        qword [r13], rax
000000000000617f         call       hash_insert                                 ; hash_insert
0000000000006184         test       rax, rax
0000000000006187         je         loc_6198

0000000000006189         cmp        r13, rax
000000000000618c         jne        loc_61a7

                     loc_618e:
000000000000618e         mov        rbx, qword [rsp+0xb8+var_A8]                ; CODE XREF=filesystem_type+288
0000000000006193         jmp        loc_6114

                     loc_6198:
0000000000006198         mov        rdi, r13                                    ; CODE XREF=filesystem_type+263
000000000000619b         call       sub_1a90                                    ; sub_1a90
00000000000061a0         jmp        loc_618e

                     loc_61a2:
00000000000061a2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=filesystem_type+168
                        ; endp

                     loc_61a7:
00000000000061a7         call       j_abort                                     ; abort, CODE XREF=filesystem_type+268
                        ; endp
00000000000061ac         align      16                                          ; End of unwind block (FDE at 0xc08c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     leaf_optimization:
00000000000061b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc0c8), CODE XREF=fts_build+2231, rpl_fts_read+1797
00000000000061b4         call       filesystem_type                             ; filesystem_type
00000000000061b9         cmp        rax, 0x52654973
00000000000061bf         je         loc_6210

00000000000061c1         jle        loc_61f0

00000000000061c3         cmp        rax, 0x58465342
00000000000061c9         je         loc_6210

00000000000061cb         mov        edx, 0xff534d42
00000000000061d0         cmp        rax, rdx
00000000000061d3         je         loc_6205

00000000000061d5         cmp        rax, 0x5346414f
00000000000061db         je         loc_6205

                     loc_61dd:
00000000000061dd         mov        eax, 0x1                                    ; CODE XREF=leaf_optimization+83
00000000000061e2         add        rsp, 0x8
00000000000061e6         ret
                        ; endp
00000000000061e7         align      16

                     loc_61f0:
00000000000061f0         cmp        rax, 0x6969                                 ; CODE XREF=leaf_optimization+17
00000000000061f6         je         loc_6205

00000000000061f8         cmp        rax, aEOutputADiagno                        ; "e          output a diagnostic for every file processed\\n"
00000000000061fe         je         loc_6205

0000000000006200         test       rax, rax
0000000000006203         jne        loc_61dd

                     loc_6205:
0000000000006205         xor        eax, eax                                    ; CODE XREF=leaf_optimization+35, leaf_optimization+43, leaf_optimization+70, leaf_optimization+78
0000000000006207         add        rsp, 0x8
000000000000620b         ret
                        ; endp
000000000000620c         align      16

                     loc_6210:
0000000000006210         mov        eax, 0x2                                    ; CODE XREF=leaf_optimization+15, leaf_optimization+25
0000000000006215         add        rsp, 0x8
0000000000006219         ret
                        ; endp
000000000000621a         align      32                                          ; End of unwind block (FDE at 0xc0c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cwd_advance_fd:
0000000000006220         push       rbp                                         ; Begin of unwind block (FDE at 0xc0ec), CODE XREF=restore_initial_cwd+74, fts_safe_changedir+542, rpl_fts_read+1279, rpl_fts_children+290
0000000000006221         push       rbx
0000000000006222         mov        ebp, esi
0000000000006224         mov        rbx, rdi
0000000000006227         sub        rsp, 0x8
000000000000622b         mov        esi, dword [rdi+0x2c]
000000000000622e         cmp        esi, ebp
0000000000006230         jne        loc_6237

0000000000006232         cmp        esi, 0xffffff9c
0000000000006235         jne        loc_6281

                     loc_6237:
0000000000006237         test       dl, dl                                      ; CODE XREF=cwd_advance_fd+16
0000000000006239         jne        loc_6250

000000000000623b         test       byte [rbx+0x48], 0x4
000000000000623f         jne        loc_6245

0000000000006241         test       esi, esi
0000000000006243         jns        loc_6270

                     loc_6245:
0000000000006245         mov        dword [rbx+0x2c], ebp                       ; CODE XREF=cwd_advance_fd+31, cwd_advance_fd+59
0000000000006248         add        rsp, 0x8
000000000000624c         pop        rbx
000000000000624d         pop        rbp
000000000000624e         ret
                        ; endp
000000000000624f         align      16

                     loc_6250:
0000000000006250         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=cwd_advance_fd+25
0000000000006254         call       i_ring_push                                 ; i_ring_push
0000000000006259         test       eax, eax
000000000000625b         js         loc_6245

000000000000625d         mov        edi, eax                                    ; argument "__fd" for method j_close
000000000000625f         call       j_close                                     ; close
0000000000006264         mov        dword [rbx+0x2c], ebp
0000000000006267         add        rsp, 0x8
000000000000626b         pop        rbx
000000000000626c         pop        rbp
000000000000626d         ret
                        ; endp
000000000000626e         align      16

                     loc_6270:
0000000000006270         mov        edi, esi                                    ; argument "__fd" for method j_close, CODE XREF=cwd_advance_fd+35
0000000000006272         call       j_close                                     ; close
0000000000006277         mov        dword [rbx+0x2c], ebp
000000000000627a         add        rsp, 0x8
000000000000627e         pop        rbx
000000000000627f         pop        rbp
0000000000006280         ret
                        ; endp

                     loc_6281:
0000000000006281         call       j_abort                                     ; abort, CODE XREF=cwd_advance_fd+21
                        ; endp
0000000000006286         align      16                                          ; End of unwind block (FDE at 0xc0ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     restore_initial_cwd:
0000000000006290         push       rbp                                         ; Begin of unwind block (FDE at 0xc130), CODE XREF=fts_build+1854, rpl_fts_read+675, rpl_fts_read+1171
0000000000006291         push       rbx
0000000000006292         mov        rbx, rdi
0000000000006295         sub        rsp, 0x8
0000000000006299         mov        edx, dword [rdi+0x48]
000000000000629c         mov        ebp, edx
000000000000629e         and        ebp, 0x4
00000000000062a1         jne        loc_62e8

00000000000062a3         and        dh, 0x2
00000000000062a6         jne        loc_62d0

00000000000062a8         mov        edi, dword [rdi+0x28]                       ; argument "__fd" for method j_fchdir
00000000000062ab         xor        ebp, ebp
00000000000062ad         call       j_fchdir                                    ; fchdir
00000000000062b2         test       eax, eax
00000000000062b4         setne      bpl

                     loc_62b8:
00000000000062b8         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=restore_initial_cwd+79, restore_initial_cwd+90
00000000000062bc         call       fd_ring_clear                               ; fd_ring_clear
00000000000062c1         add        rsp, 0x8
00000000000062c5         mov        eax, ebp
00000000000062c7         pop        rbx
00000000000062c8         pop        rbp
00000000000062c9         ret
                        ; endp
00000000000062ca         align      16

                     loc_62d0:
00000000000062d0         mov        edx, 0x1                                    ; CODE XREF=restore_initial_cwd+22
00000000000062d5         mov        esi, 0xffffff9c
00000000000062da         call       cwd_advance_fd                              ; cwd_advance_fd
00000000000062df         jmp        loc_62b8
00000000000062e1         align      8

                     loc_62e8:
00000000000062e8         xor        ebp, ebp                                    ; CODE XREF=restore_initial_cwd+17
00000000000062ea         jmp        loc_62b8
00000000000062ec         align      16                                          ; End of unwind block (FDE at 0xc130)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_palloc.isra.2:
00000000000062f0         push       rbx                                         ; Begin of unwind block (FDE at 0xc15c), CODE XREF=fts_build+611, rpl_fts_open+189
00000000000062f1         mov        rcx, qword [rsi]
00000000000062f4         mov        rbx, rdi
00000000000062f7         mov        rdi, qword [rdi]
00000000000062fa         lea        rax, qword [rcx+rdx+0x100]
0000000000006302         cmp        rcx, rax
0000000000006305         ja         loc_6328

0000000000006307         mov        qword [rsi], rax
000000000000630a         mov        rsi, rax                                    ; argument "__size" for method j_realloc
000000000000630d         call       j_realloc                                   ; realloc
0000000000006312         test       rax, rax
0000000000006315         je         loc_6348

0000000000006317         mov        qword [rbx], rax
000000000000631a         mov        eax, 0x1
000000000000631f         pop        rbx
0000000000006320         ret
                        ; endp
0000000000006321         align      8

                     loc_6328:
0000000000006328         call       sub_1a90                                    ; sub_1a90, CODE XREF=fts_palloc.isra.2+21
000000000000632d         mov        qword [rbx], 0x0
0000000000006334         call       j___errno_location                          ; __errno_location
0000000000006339         mov        dword [rax], 0x24
000000000000633f         xor        eax, eax
0000000000006341         pop        rbx
0000000000006342         ret
                        ; endp
0000000000006343         align      8

                     loc_6348:
0000000000006348         mov        rdi, qword [rbx]                            ; CODE XREF=fts_palloc.isra.2+37
000000000000634b         call       sub_1a90                                    ; sub_1a90
0000000000006350         mov        qword [rbx], 0x0
0000000000006357         xor        eax, eax
0000000000006359         pop        rbx
000000000000635a         ret
                        ; endp
000000000000635b         align      32                                          ; End of unwind block (FDE at 0xc15c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setup_dir.isra.4:
0000000000006360         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xc184), CODE XREF=rpl_fts_open+613, rpl_fts_read+837
0000000000006366         push       rbx
0000000000006367         mov        rbx, rsi
000000000000636a         je         loc_63a0

000000000000636c         mov        r8, qword [qword_20dfd0]                    ; qword_20dfd0
0000000000006373         lea        rcx, qword [AD_compare]                     ; AD_compare
000000000000637a         lea        rdx, qword [AD_hash]                        ; AD_hash
0000000000006381         xor        esi, esi
0000000000006383         mov        edi, 0x1f
0000000000006388         call       hash_initialize                             ; hash_initialize
000000000000638d         test       rax, rax
0000000000006390         mov        qword [rbx], rax
0000000000006393         setne      al

                     loc_6396:
0000000000006396         pop        rbx                                         ; CODE XREF=setup_dir.isra.4+85
0000000000006397         ret
                        ; endp
0000000000006398         align      32

                     loc_63a0:
00000000000063a0         mov        edi, 0x20                                   ; argument "__size" for method j_malloc, CODE XREF=setup_dir.isra.4+10
00000000000063a5         call       j_malloc                                    ; malloc
00000000000063aa         mov        rdi, rax
00000000000063ad         mov        qword [rbx], rax
00000000000063b0         xor        eax, eax
00000000000063b2         test       rdi, rdi
00000000000063b5         je         loc_6396

00000000000063b7         call       cycle_check_init                            ; cycle_check_init
00000000000063bc         mov        eax, 0x1
00000000000063c1         pop        rbx
00000000000063c2         ret
                        ; endp
00000000000063c3         align      16                                          ; End of unwind block (FDE at 0xc184)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     diropen.isra.6:
00000000000063d0         mov        rax, rdx                                    ; Begin of unwind block (FDE at 0xc1a4), CODE XREF=fts_safe_changedir+141, rpl_fts_open+647, rpl_fts_read+1752, rpl_fts_read+1832, rpl_fts_children+202
00000000000063d3         mov        edx, esi
00000000000063d5         shl        edx, 0xd
00000000000063d8         and        edx, 0x20000
00000000000063de         or         edx, 0x90900
00000000000063e4         and        esi, 0x200
00000000000063ea         jne        loc_6400

00000000000063ec         mov        rdi, rax
00000000000063ef         mov        esi, edx
00000000000063f1         xor        eax, eax
00000000000063f3         jmp        open_safer                                  ; open_safer
00000000000063f8         align      1024

                     loc_6400:
0000000000006400         mov        rsi, rax                                    ; CODE XREF=diropen.isra.6+26
0000000000006403         xor        eax, eax
0000000000006405         jmp        openat_safer                                ; openat_safer
000000000000640a         align      16                                          ; End of unwind block (FDE at 0xc1a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217


                     fts_safe_changedir:
0000000000006410         push       r15                                         ; Begin of unwind block (FDE at 0xc1b8), CODE XREF=fts_build+2169, fts_build+2194, rpl_fts_read+542, rpl_fts_read+1123
0000000000006412         push       r14
0000000000006414         mov        r14, rsi
0000000000006417         push       r13
0000000000006419         push       r12
000000000000641b         mov        r13, rdi
000000000000641e         push       rbp
000000000000641f         push       rbx
0000000000006420         mov        r12d, edx
0000000000006423         mov        rbp, rcx
0000000000006426         sub        rsp, 0xb8
000000000000642d         mov        ebx, dword [rdi+0x48]
0000000000006430         mov        rax, qword [fs:0x28]
0000000000006439         mov        qword [rsp+0xe8+var_40], rax
0000000000006441         xor        eax, eax
0000000000006443         mov        r9d, ebx
0000000000006446         and        r9d, 0x4
000000000000644a         test       rcx, rcx
000000000000644d         je         loc_6500

0000000000006453         lea        rdx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xaf1a
000000000000645a         mov        ecx, 0x3
000000000000645f         mov        rsi, rbp
0000000000006462         mov        rdi, rdx
0000000000006465         rep  cmpsb byte [rsi], byte [rdi]
0000000000006467         seta       al
000000000000646a         sbb        al, 0x0
000000000000646c         test       al, al
000000000000646e         jne        loc_6500

0000000000006474         test       r9d, r9d
0000000000006477         jne        loc_6505

000000000000647d         test       r12d, r12d
0000000000006480         jns        loc_666a

0000000000006486         test       bh, 0x2
0000000000006489         jne        loc_65d0

                     loc_648f:
000000000000648f         mov        byte [rsp+0xe8+var_D9], 0x1                 ; CODE XREF=fts_safe_changedir+489

                     loc_6494:
0000000000006494         mov        edi, dword [r13+0x2c]                       ; CODE XREF=fts_safe_changedir+466, fts_safe_changedir+629
0000000000006498         mov        rdx, rbp
000000000000649b         mov        esi, ebx
000000000000649d         call       diropen.isra.6                              ; diropen.isra.6
00000000000064a2         test       eax, eax
00000000000064a4         mov        r15d, eax
00000000000064a7         js         loc_665b

00000000000064ad         mov        ebx, dword [r13+0x48]
00000000000064b1         test       bl, 0x2
00000000000064b4         je         loc_655a

00000000000064ba         nop        word [rax+rax]

                     loc_64c0:
00000000000064c0         lea        rdx, qword [rsp+0xe8+var_D8]                ; argument "__stat_buf" for method j___fxstat, CODE XREF=fts_safe_changedir+324, fts_safe_changedir+362, fts_safe_changedir+512, fts_safe_changedir+619
00000000000064c5         mov        esi, r15d                                   ; argument "__fildes" for method j___fxstat
00000000000064c8         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
00000000000064cd         call       j___fxstat                                  ; __fxstat
00000000000064d2         test       eax, eax
00000000000064d4         je         loc_65a0

                     loc_64da:
00000000000064da         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+426

                     loc_64df:
00000000000064df         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+387
00000000000064e2         jns        loc_6515

00000000000064e4         call       j___errno_location                          ; __errno_location
00000000000064e9         mov        r12d, dword [rax]
00000000000064ec         mov        rbp, rax
00000000000064ef         mov        edi, r15d                                   ; argument "__fd" for method j_close
00000000000064f2         call       j_close                                     ; close
00000000000064f7         mov        dword [rbp], r12d
00000000000064fb         jmp        loc_6515
00000000000064fd         align      256

                     loc_6500:
0000000000006500         test       r9d, r9d                                    ; CODE XREF=fts_safe_changedir+61, fts_safe_changedir+94
0000000000006503         je         loc_6540

                     loc_6505:
0000000000006505         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+103
0000000000006508         je         loc_6513

000000000000650a         test       r12d, r12d
000000000000650d         jns        loc_65c0

                     loc_6513:
0000000000006513         xor        ebx, ebx                                    ; CODE XREF=fts_safe_changedir+248

                     loc_6515:
0000000000006515         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=fts_safe_changedir+210, fts_safe_changedir+235, fts_safe_changedir+442, fts_safe_changedir+547, fts_safe_changedir+592
000000000000651d         xor        rcx, qword [fs:0x28]
0000000000006526         mov        eax, ebx
0000000000006528         jne        loc_6665

000000000000652e         add        rsp, 0xb8
0000000000006535         pop        rbx
0000000000006536         pop        rbp
0000000000006537         pop        r12
0000000000006539         pop        r13
000000000000653b         pop        r14
000000000000653d         pop        r15
000000000000653f         ret
                        ; endp

                     loc_6540:
0000000000006540         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+243
0000000000006543         js         loc_6680

0000000000006549         test       bl, 0x2
000000000000654c         mov        r15d, r12d
000000000000654f         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006554         jne        loc_64c0

                     loc_655a:
000000000000655a         test       rbp, rbp                                    ; CODE XREF=fts_safe_changedir+164
000000000000655d         je         loc_6580

000000000000655f         lea        rdx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xaf1a

                     loc_6566:
0000000000006566         mov        ecx, 0x3                                    ; CODE XREF=fts_safe_changedir+613
000000000000656b         mov        rsi, rbp
000000000000656e         mov        rdi, rdx
0000000000006571         rep  cmpsb byte [rsi], byte [rdi]
0000000000006573         seta       al
0000000000006576         sbb        al, 0x0
0000000000006578         test       al, al
000000000000657a         je         loc_64c0

                     loc_6580:
0000000000006580         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+333, fts_safe_changedir+506, fts_safe_changedir+582
0000000000006583         jne        loc_6618

0000000000006589         mov        edi, r15d                                   ; argument "__fd" for method j_fchdir
000000000000658c         call       j_fchdir                                    ; fchdir
0000000000006591         mov        ebx, eax
0000000000006593         jmp        loc_64df
0000000000006598         align      32

                     loc_65a0:
00000000000065a0         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=fts_safe_changedir+196
00000000000065a5         cmp        qword [r14+0x78], rax
00000000000065a9         je         loc_6640

                     loc_65af:
00000000000065af         call       j___errno_location                          ; __errno_location, CODE XREF=fts_safe_changedir+572
00000000000065b4         mov        dword [rax], 0x2
00000000000065ba         jmp        loc_64da
00000000000065bf         align      64

                     loc_65c0:
00000000000065c0         mov        edi, r12d                                   ; argument "__fd" for method j_close, CODE XREF=fts_safe_changedir+253
00000000000065c3         xor        ebx, ebx
00000000000065c5         call       j_close                                     ; close
00000000000065ca         jmp        loc_6515
00000000000065cf         align      16

                     loc_65d0:
00000000000065d0         lea        r15, qword [r13+0x60]                       ; CODE XREF=fts_safe_changedir+121
00000000000065d4         mov        rdi, r15
00000000000065d7         call       i_ring_empty                                ; i_ring_empty
00000000000065dc         test       al, al
00000000000065de         mov        byte [rsp+0xe8+var_D9], al
00000000000065e2         jne        loc_6494

00000000000065e8         mov        rdi, r15
00000000000065eb         call       i_ring_pop                                  ; i_ring_pop
00000000000065f0         test       eax, eax
00000000000065f2         mov        r15d, eax
00000000000065f5         mov        ebx, dword [r13+0x48]
00000000000065f9         js         loc_648f

00000000000065ff         test       bl, 0x2
0000000000006602         mov        r12d, eax
0000000000006605         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000660a         je         loc_6580

0000000000006610         jmp        loc_64c0
0000000000006615         align      8

                     loc_6618:
0000000000006618         movzx      r14d, byte [rsp+0xe8+var_D9]                ; CODE XREF=fts_safe_changedir+371
000000000000661e         mov        esi, r15d
0000000000006621         mov        rdi, r13
0000000000006624         xor        ebx, ebx
0000000000006626         xor        r14d, 0x1
000000000000662a         movzx      edx, r14b
000000000000662e         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000006633         jmp        loc_6515
0000000000006638         align      64

                     loc_6640:
0000000000006640         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=fts_safe_changedir+409
0000000000006645         cmp        qword [r14+0x80], rax
000000000000664c         jne        loc_65af

0000000000006652         mov        ebx, dword [r13+0x48]
0000000000006656         jmp        loc_6580

                     loc_665b:
000000000000665b         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+151
0000000000006660         jmp        loc_6515

                     loc_6665:
0000000000006665         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_safe_changedir+280
                        ; endp

                     loc_666a:
000000000000666a         test       bl, 0x2                                     ; CODE XREF=fts_safe_changedir+112
000000000000666d         mov        r15d, r12d
0000000000006670         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006675         je         loc_6566

000000000000667b         jmp        loc_64c0

                     loc_6680:
0000000000006680         mov        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=fts_safe_changedir+307
0000000000006685         jmp        loc_6494
000000000000668a         align      16                                          ; End of unwind block (FDE at 0xc1b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     enter_dir.isra.10:
0000000000006690         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xc208), CODE XREF=fts_build+1558, rpl_fts_read+899
0000000000006696         push       r12
0000000000006698         mov        r12, rsi
000000000000669b         push       rbp
000000000000669c         push       rbx
000000000000669d         mov        rbx, rdx
00000000000066a0         je         loc_6710

00000000000066a2         mov        edi, 0x18                                   ; argument "__size" for method j_malloc
00000000000066a7         call       j_malloc                                    ; malloc
00000000000066ac         test       rax, rax
00000000000066af         mov        rbp, rax
00000000000066b2         je         loc_6738

00000000000066b8         mov        rax, qword [rbx+0x78]
00000000000066bc         mov        rdi, qword [r12]
00000000000066c0         mov        rsi, rbp
00000000000066c3         mov        qword [rbp+0x10], rbx
00000000000066c7         mov        qword [rbp], rax
00000000000066cb         mov        rax, qword [rbx+0x80]
00000000000066d2         mov        qword [rbp+8], rax
00000000000066d6         call       hash_insert                                 ; hash_insert
00000000000066db         cmp        rbp, rax
00000000000066de         mov        r12, rax
00000000000066e1         je         loc_6701

00000000000066e3         mov        rdi, rbp
00000000000066e6         call       sub_1a90                                    ; sub_1a90
00000000000066eb         test       r12, r12
00000000000066ee         je         loc_6738

00000000000066f0         mov        rax, qword [r12+0x10]
00000000000066f5         mov        ecx, 0x2
00000000000066fa         mov        word [rbx+0x70], cx
00000000000066fe         mov        qword [rbx], rax

                     loc_6701:
0000000000006701         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+81, enter_dir.isra.10+143
0000000000006702         mov        eax, 0x1
0000000000006707         pop        rbp
0000000000006708         pop        r12
000000000000670a         ret
                        ; endp
000000000000670b         align      16

                     loc_6710:
0000000000006710         mov        rdi, qword [r12]                            ; CODE XREF=enter_dir.isra.10+16
0000000000006714         lea        rsi, qword [rdx+0x78]
0000000000006718         call       cycle_check                                 ; cycle_check
000000000000671d         test       al, al
000000000000671f         je         loc_6701

0000000000006721         mov        edx, 0x2
0000000000006726         mov        qword [rbx], rbx
0000000000006729         mov        word [rbx+0x70], dx
000000000000672d         pop        rbx
000000000000672e         pop        rbp
000000000000672f         pop        r12
0000000000006731         ret
                        ; endp
0000000000006732         align      8

                     loc_6738:
0000000000006738         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+34, enter_dir.isra.10+94
0000000000006739         xor        eax, eax
000000000000673b         pop        rbp
000000000000673c         pop        r12
000000000000673e         ret
                        ; endp
000000000000673f         align      64                                          ; End of unwind block (FDE at 0xc208)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     leave_dir.isra.12:
0000000000006740         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0xc24c), CODE XREF=fts_build+1530, rpl_fts_read+405, rpl_fts_read+1209, rpl_fts_read+1368
0000000000006744         mov        rcx, rsi
0000000000006747         mov        rax, qword [fs:0x28]
0000000000006750         mov        qword [rsp+0x28+var_10], rax
0000000000006755         xor        eax, eax
0000000000006757         and        edi, 0x102
000000000000675d         jne        loc_67a0

000000000000675f         mov        rax, qword [rdx+8]
0000000000006763         test       rax, rax
0000000000006766         je         loc_6785

0000000000006768         cmp        qword [rax+0x58], 0x0
000000000000676d         js         loc_6785

000000000000676f         mov        rcx, qword [rsi]
0000000000006772         cmp        qword [rcx+0x10], 0x0
0000000000006777         je         loc_67f3

0000000000006779         mov        rsi, qword [rdx+0x80]
0000000000006780         cmp        qword [rcx], rsi
0000000000006783         je         loc_67d0

                     loc_6785:
0000000000006785         mov        rax, qword [rsp+0x28+var_10]                ; CODE XREF=leave_dir.isra.12+38, leave_dir.isra.12+45, leave_dir.isra.12+140, leave_dir.isra.12+152, leave_dir.isra.12+172
000000000000678a         xor        rax, qword [fs:0x28]
0000000000006793         jne        loc_67ee

0000000000006795         add        rsp, 0x28
0000000000006799         ret
                        ; endp
000000000000679a         align      32

                     loc_67a0:
00000000000067a0         mov        rax, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+29
00000000000067a4         mov        rdi, qword [rcx]
00000000000067a7         mov        rsi, rsp
00000000000067aa         mov        qword [rsp+0x28+var_28], rax
00000000000067ae         mov        rax, qword [rdx+0x80]
00000000000067b5         mov        qword [rsp+0x28+var_20], rax
00000000000067ba         call       hash_delete                                 ; hash_delete
00000000000067bf         test       rax, rax
00000000000067c2         je         loc_67f3

00000000000067c4         mov        rdi, rax
00000000000067c7         call       sub_1a90                                    ; sub_1a90
00000000000067cc         jmp        loc_6785
00000000000067ce         align      16

                     loc_67d0:
00000000000067d0         mov        rsi, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+67
00000000000067d4         cmp        qword [rcx+8], rsi
00000000000067d8         jne        loc_6785

00000000000067da         mov        rdx, qword [rax+0x78]
00000000000067de         mov        rax, qword [rax+0x80]
00000000000067e5         mov        qword [rcx+8], rdx
00000000000067e9         mov        qword [rcx], rax
00000000000067ec         jmp        loc_6785

                     loc_67ee:
00000000000067ee         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=leave_dir.isra.12+83
                        ; endp

                     loc_67f3:
00000000000067f3         call       j_abort                                     ; abort, CODE XREF=leave_dir.isra.12+55, leave_dir.isra.12+130
                        ; endp
00000000000067f8         align      2048                                        ; End of unwind block (FDE at 0xc24c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_49: int8_t, -73
        ;    var_4A: int8_t, -74
        ;    var_4B: int8_t, -75
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     fts_build:
0000000000006800         push       r15                                         ; Begin of unwind block (FDE at 0xc268), CODE XREF=rpl_fts_read+1056, rpl_fts_read+1561, rpl_fts_children+139, rpl_fts_children+219
0000000000006802         push       r14
0000000000006804         mov        r15, rdi
0000000000006807         push       r13
0000000000006809         push       r12
000000000000680b         push       rbp
000000000000680c         push       rbx
000000000000680d         sub        rsp, 0x78
0000000000006811         mov        rbp, qword [rdi]
0000000000006814         mov        rax, qword [fs:0x28]
000000000000681d         mov        qword [rsp+0xa8+var_40], rax
0000000000006822         xor        eax, eax
0000000000006824         mov        dword [rsp+0xa8+var_50], esi
0000000000006828         mov        rax, qword [rbp+0x18]
000000000000682c         test       rax, rax
000000000000682f         mov        qword [rsp+0xa8+var_58], rax
0000000000006834         je         loc_6c70

000000000000683a         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
000000000000683d         call       j_dirfd                                     ; dirfd
0000000000006842         test       eax, eax
0000000000006844         mov        dword [rsp+0xa8+var_44], eax
0000000000006848         js         loc_6da0

000000000000684e         cmp        qword [r15+0x40], 0x0
0000000000006853         je         loc_7028

0000000000006859         mov        qword [rsp+0xa8+var_70], 0xffffffffffffffff

                     loc_6862:
0000000000006862         mov        edi, dword [r15+0x48]                       ; CODE XREF=fts_build+2207
0000000000006866         mov        byte [rsp+0xa8+var_49], 0x1

                     loc_686b:
000000000000686b         mov        rcx, qword [rbp+0x48]                       ; CODE XREF=fts_build+1405, fts_build+2106, fts_build+2121
000000000000686f         mov        rdx, qword [rbp+0x38]
0000000000006873         mov        qword [rsp+0xa8+var_68], 0x0
000000000000687c         cmp        byte [rdx+rcx-1], 0x2f
0000000000006881         lea        rax, qword [rcx-1]
0000000000006885         cmovne     rax, rcx
0000000000006889         and        edi, 0x4
000000000000688c         mov        qword [rsp+0xa8+var_60], rax
0000000000006891         je         loc_68a3

0000000000006893         add        rax, qword [r15+0x20]
0000000000006897         lea        rbx, qword [rax+1]
000000000000689b         mov        byte [rax], 0x2f
000000000000689e         mov        qword [rsp+0xa8+var_68], rbx

                     loc_68a3:
00000000000068a3         mov        rax, qword [rsp+0xa8+var_60]                ; CODE XREF=fts_build+145
00000000000068a8         mov        rbx, qword [r15+0x30]
00000000000068ac         mov        byte [rsp+0xa8+var_4A], 0x0
00000000000068b1         mov        byte [rsp+0xa8+var_4B], 0x0
00000000000068b6         mov        qword [rsp+0xa8+var_A0], 0x0
00000000000068bf         mov        qword [rsp+0xa8+var_98], 0x0
00000000000068c8         add        rax, 0x1
00000000000068cc         mov        qword [rsp+0xa8+var_88], rbp
00000000000068d1         sub        rbx, rax
00000000000068d4         mov        qword [rsp+0xa8+var_90], rax
00000000000068d9         mov        rax, qword [rbp+0x58]
00000000000068dd         mov        qword [rsp+0xa8+var_80], rbx
00000000000068e2         xor        ebx, ebx
00000000000068e4         add        rax, 0x1
00000000000068e8         mov        qword [rsp+0xa8+var_78], rax
00000000000068ed         jmp        loc_69cf
00000000000068f2         align      8

                     loc_68f8:
00000000000068f8         mov        r9, r14                                     ; CODE XREF=fts_build+578, fts_build+678
00000000000068fb         add        r9, qword [rsp+0xa8+var_90]
0000000000006900         jb         loc_7160

0000000000006906         mov        rax, qword [rsp+0xa8+var_78]
000000000000690b         lea        rsi, qword [r13+0x108]
0000000000006912         mov        qword [r13+0x58], rax
0000000000006916         mov        rax, qword [r15]
0000000000006919         mov        qword [r13+0x48], r9
000000000000691d         mov        qword [r13+8], rax
0000000000006921         mov        rax, qword [rbp]
0000000000006925         mov        qword [r13+0x80], rax
000000000000692c         mov        eax, dword [r15+0x48]
0000000000006930         test       al, 0x4
0000000000006932         jne        loc_6ba0

0000000000006938         mov        qword [r13+0x30], rsi

                     loc_693c:
000000000000693c         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+958
0000000000006941         je         loc_694c

0000000000006943         test       ah, 0x4
0000000000006946         je         loc_6c48

                     loc_694c:
000000000000694c         movzx      edx, byte [rbp+0x12]                        ; CODE XREF=fts_build+321
0000000000006950         and        eax, 0x18
0000000000006953         mov        esi, edx
0000000000006955         sub        edx, 0x1
0000000000006958         cmp        eax, 0x18
000000000000695b         je         loc_6c10

                     loc_6961:
0000000000006961         mov        ecx, 0xb                                    ; CODE XREF=fts_build+1046
0000000000006966         cmp        edx, 0xb
0000000000006969         mov        word [r13+0x70], cx                         ; DATA XREF=leaf_optimization+64, fts_build+739
000000000000696e         ja         loc_6bd8

0000000000006974         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53
000000000000697b         mov        eax, dword [rax+rdx*4]
000000000000697e         mov        dword [r13+0x90], eax
0000000000006985         mov        eax, 0x2

                     loc_698a:
000000000000698a         mov        qword [r13+0xa8], rax                       ; CODE XREF=fts_build+1000, fts_build+1087, fts_build+2508

                     loc_6991:
0000000000006991         cmp        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+1114
0000000000006997         mov        qword [r13+0x10], 0x0
000000000000699f         je         loc_6bc8

00000000000069a5         mov        rax, qword [rsp+0xa8+var_A0]
00000000000069aa         mov        qword [rax+0x10], r13

                     loc_69ae:
00000000000069ae         cmp        rbx, 0x2710                                 ; CODE XREF=fts_build+973
00000000000069b5         je         loc_6ab0

                     loc_69bb:
00000000000069bb         add        rbx, 0x1                                    ; CODE XREF=fts_build+693, fts_build+1605
00000000000069bf         cmp        rbx, qword [rsp+0xa8+var_70]
00000000000069c4         jae        loc_6b08

                     loc_69ca:
00000000000069ca         mov        qword [rsp+0xa8+var_A0], r13                ; CODE XREF=fts_build+765, fts_build+1030

                     loc_69cf:
00000000000069cf         mov        rax, qword [rsp+0xa8+var_88]                ; CODE XREF=fts_build+237
00000000000069d4         mov        r13, qword [rax+0x18]
00000000000069d8         test       r13, r13
00000000000069db         je         loc_6ea8

00000000000069e1         call       j___errno_location                          ; __errno_location
00000000000069e6         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
00000000000069e9         mov        dword [rax], 0x0
00000000000069ef         mov        r12, rax
00000000000069f2         call       j_readdir                                   ; readdir
00000000000069f7         test       rax, rax
00000000000069fa         mov        rbp, rax
00000000000069fd         je         loc_6f80

0000000000006a03         test       byte [r15+0x48], 0x20
0000000000006a08         jne        loc_6a14

0000000000006a0a         cmp        byte [rax+0x13], 0x2e
0000000000006a0e         je         loc_6bf0

                     loc_6a14:
0000000000006a14         lea        r13, qword [rbp+0x13]                       ; CODE XREF=fts_build+520, fts_build+1019
0000000000006a18         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000006a1b         call       j_strlen                                    ; strlen
0000000000006a20         mov        rsi, r13
0000000000006a23         mov        rdx, rax
0000000000006a26         mov        rdi, r15
0000000000006a29         mov        r14, rax
0000000000006a2c         call       fts_alloc                                   ; fts_alloc
0000000000006a31         test       rax, rax
0000000000006a34         mov        r13, rax
0000000000006a37         je         loc_6e50

0000000000006a3d         cmp        qword [rsp+0xa8+var_80], r14
0000000000006a42         ja         loc_68f8

0000000000006a48         mov        rax, qword [r15+0x20]
0000000000006a4c         lea        rsi, qword [r15+0x30]
0000000000006a50         lea        rdi, qword [r15+0x20]
0000000000006a54         mov        qword [rsp+0xa8+var_80], rax
0000000000006a59         mov        rax, qword [rsp+0xa8+var_60]
0000000000006a5e         lea        rdx, qword [rax+r14+2]
0000000000006a63         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
0000000000006a68         test       al, al
0000000000006a6a         je         loc_6e50

0000000000006a70         mov        rdx, qword [r15+0x20]
0000000000006a74         cmp        rdx, qword [rsp+0xa8+var_80]
0000000000006a79         je         loc_6c60

0000000000006a7f         add        rdx, qword [rsp+0xa8+var_90]
0000000000006a84         test       byte [r15+0x48], 0x4
0000000000006a89         cmove      rdx, qword [rsp+0xa8+var_68]
0000000000006a8f         mov        qword [rsp+0xa8+var_68], rdx

                     loc_6a94:
0000000000006a94         mov        rcx, qword [r15+0x30]                       ; CODE XREF=fts_build+1125
0000000000006a98         sub        rcx, qword [rsp+0xa8+var_90]
0000000000006a9d         mov        byte [rsp+0xa8+var_4B], al
0000000000006aa1         mov        qword [rsp+0xa8+var_80], rcx
0000000000006aa6         jmp        loc_68f8
0000000000006aab         align      16

                     loc_6ab0:
0000000000006ab0         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+437
0000000000006ab5         jne        loc_69bb

0000000000006abb         mov        esi, dword [rsp+0xa8+var_44]
0000000000006abf         mov        rdi, qword [rsp+0xa8+var_88]
0000000000006ac4         call       filesystem_type                             ; filesystem_type
0000000000006ac9         cmp        rax, 0x1021994
0000000000006acf         je         loc_6e40

0000000000006ad5         mov        ecx, 0xff534d42
0000000000006ada         cmp        rax, rcx
0000000000006add         je         loc_6e40

0000000000006ae3         cmp        rax, 0x6969
0000000000006ae9         je         loc_6e40

0000000000006aef         add        rbx, 0x1
0000000000006af3         cmp        rbx, qword [rsp+0xa8+var_70]
0000000000006af8         mov        byte [rsp+0xa8+var_4A], 0x1
0000000000006afd         jb         loc_69ca

0000000000006b03         nop        dword [rax+rax]

                     loc_6b08:
0000000000006b08         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+452
0000000000006b0d         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006b12         je         loc_6eb6

                     loc_6b18:
0000000000006b18         mov        rax, qword [r15+8]                          ; CODE XREF=fts_build+1712
0000000000006b1c         mov        rcx, qword [r15+0x20]
0000000000006b20         test       rax, rax
0000000000006b23         je         loc_6b50

0000000000006b25         nop        dword [rax]

                     loc_6b28:
0000000000006b28         mov        rdx, qword [rax+0x30]                       ; CODE XREF=fts_build+846
0000000000006b2c         lea        rsi, qword [rax+0x108]
0000000000006b33         cmp        rdx, rsi
0000000000006b36         je         loc_6b43

0000000000006b38         sub        rdx, qword [rax+0x38]
0000000000006b3c         add        rdx, rcx
0000000000006b3f         mov        qword [rax+0x30], rdx

                     loc_6b43:
0000000000006b43         mov        qword [rax+0x38], rcx                       ; CODE XREF=fts_build+822
0000000000006b47         mov        rax, qword [rax+0x10]
0000000000006b4b         test       rax, rax
0000000000006b4e         jne        loc_6b28

                     loc_6b50:
0000000000006b50         mov        rax, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+803
0000000000006b55         jmp        loc_6b63
0000000000006b57         align      32

                     loc_6b60:
0000000000006b60         mov        rax, rdx                                    ; CODE XREF=fts_build+916, fts_build+922

                     loc_6b63:
0000000000006b63         cmp        qword [rax+0x58], 0x0                       ; CODE XREF=fts_build+853
0000000000006b68         js         loc_6eb6

0000000000006b6e         mov        rdx, qword [rax+0x30]
0000000000006b72         lea        rsi, qword [rax+0x108]
0000000000006b79         cmp        rdx, rsi
0000000000006b7c         je         loc_6b89

0000000000006b7e         sub        rdx, qword [rax+0x38]
0000000000006b82         add        rdx, rcx
0000000000006b85         mov        qword [rax+0x30], rdx

                     loc_6b89:
0000000000006b89         mov        rdx, qword [rax+0x10]                       ; CODE XREF=fts_build+892
0000000000006b8d         mov        qword [rax+0x38], rcx
0000000000006b91         test       rdx, rdx
0000000000006b94         jne        loc_6b60

0000000000006b96         mov        rdx, qword [rax+8]
0000000000006b9a         jmp        loc_6b60
0000000000006b9c         align      32

                     loc_6ba0:
0000000000006ba0         mov        rax, qword [r13+0x38]                       ; CODE XREF=fts_build+306
0000000000006ba4         mov        rdi, qword [rsp+0xa8+var_68]                ; argument "__dest" for method j_memmove
0000000000006ba9         mov        qword [r13+0x30], rax
0000000000006bad         mov        rax, qword [r13+0x60]
0000000000006bb1         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000006bb5         call       j_memmove                                   ; memmove
0000000000006bba         mov        eax, dword [r15+0x48]
0000000000006bbe         jmp        loc_693c
0000000000006bc3         align      8

                     loc_6bc8:
0000000000006bc8         mov        qword [rsp+0xa8+var_98], r13                ; CODE XREF=fts_build+415
0000000000006bcd         jmp        loc_69ae
0000000000006bd2         align      8

                     loc_6bd8:
0000000000006bd8         mov        dword [r13+0x90], 0x0                       ; CODE XREF=fts_build+366
0000000000006be3         mov        eax, 0x2
0000000000006be8         jmp        loc_698a
0000000000006bed         align      16

                     loc_6bf0:
0000000000006bf0         cmp        byte [rax+0x14], 0x0                        ; CODE XREF=fts_build+526
0000000000006bf4         je         loc_6c01

0000000000006bf6         cmp        word [rax+0x14], 0x2e
0000000000006bfb         jne        loc_6a14

                     loc_6c01:
0000000000006c01         mov        r13, qword [rsp+0xa8+var_A0]                ; CODE XREF=fts_build+1012
0000000000006c06         jmp        loc_69ca
0000000000006c0b         align      16

                     loc_6c10:
0000000000006c10         and        esi, 0xfb                                   ; CODE XREF=fts_build+347
0000000000006c16         je         loc_6961

0000000000006c1c         mov        eax, 0xb
0000000000006c21         cmp        edx, 0xb
0000000000006c24         mov        word [r13+0x70], ax
0000000000006c29         jbe        loc_71b6

0000000000006c2f         mov        dword [r13+0x90], 0x0
0000000000006c3a         mov        eax, 0x1
0000000000006c3f         jmp        loc_698a
0000000000006c44         align      8

                     loc_6c48:
0000000000006c48         xor        edx, edx                                    ; CODE XREF=fts_build+326
0000000000006c4a         mov        rsi, r13
0000000000006c4d         mov        rdi, r15
0000000000006c50         call       fts_stat                                    ; fts_stat
0000000000006c55         mov        word [r13+0x70], ax
0000000000006c5a         jmp        loc_6991
0000000000006c5f         align      32

                     loc_6c60:
0000000000006c60         movzx      eax, byte [rsp+0xa8+var_4B]                 ; CODE XREF=fts_build+633
0000000000006c65         jmp        loc_6a94
0000000000006c6a         align      16

                     loc_6c70:
0000000000006c70         mov        eax, dword [rdi+0x48]                       ; CODE XREF=fts_build+52
0000000000006c73         mov        edx, eax
0000000000006c75         and        edx, 0x10
0000000000006c78         je         loc_6c87

0000000000006c7a         test       al, 0x1
0000000000006c7c         mov        edx, 0x20000
0000000000006c81         jne        loc_6d88

                     loc_6c87:
0000000000006c87         and        eax, 0x204                                  ; CODE XREF=fts_build+1144, fts_build+1429
0000000000006c8c         mov        rsi, qword [rbp+0x30]
0000000000006c90         mov        edi, 0xffffff9c
0000000000006c95         cmp        eax, 0x200
0000000000006c9a         jne        loc_6ca0

0000000000006c9c         mov        edi, dword [r15+0x2c]

                     loc_6ca0:
0000000000006ca0         lea        rcx, qword [rsp+0xa8+var_44]                ; CODE XREF=fts_build+1178
0000000000006ca5         call       opendirat                                   ; opendirat
0000000000006caa         test       rax, rax
0000000000006cad         mov        qword [rbp+0x18], rax
0000000000006cb1         je         loc_6fd0

0000000000006cb7         cmp        word [rbp+0x70], 0xb
0000000000006cbc         je         loc_7050

0000000000006cc2         mov        edi, dword [r15+0x48]
0000000000006cc6         test       edi, 0x100
0000000000006ccc         jne        loc_6df0

                     loc_6cd2:
0000000000006cd2         cmp        qword [r15+0x40], 0x1                       ; CODE XREF=fts_build+1565, fts_build+2145
0000000000006cd7         sbb        rax, rax
0000000000006cda         and        eax, 0x186a1
0000000000006cdf         sub        rax, 0x1
0000000000006ce3         cmp        dword [rsp+0xa8+var_50], 0x2
0000000000006ce8         mov        qword [rsp+0xa8+var_70], rax
0000000000006ced         je         loc_7040

0000000000006cf3         mov        edx, dword [r15+0x48]
0000000000006cf7         mov        eax, dword [rsp+0xa8+var_44]
0000000000006cfb         and        edx, 0x38
0000000000006cfe         cmp        edx, 0x18
0000000000006d01         je         loc_70a4

                     loc_6d07:
0000000000006d07         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2220, fts_build+2244
0000000000006d0c         mov        r12d, 0x1
0000000000006d12         sete       bl

                     loc_6d15:
0000000000006d15         test       byte [r15+0x49], 0x2                        ; CODE XREF=fts_build+2389
0000000000006d1a         jne        loc_70fc

                     loc_6d20:
0000000000006d20         test       eax, eax                                    ; CODE XREF=fts_build+2323
0000000000006d22         jns        loc_7088

                     loc_6d28:
0000000000006d28         test       bl, bl                                      ; CODE XREF=fts_build+2201
0000000000006d2a         je         loc_6d3b

0000000000006d2c         test       r12b, r12b
0000000000006d2f         je         loc_6d3b

0000000000006d31         call       j___errno_location                          ; __errno_location
0000000000006d36         mov        eax, dword [rax]
0000000000006d38         mov        dword [rbp+0x40], eax

                     loc_6d3b:
0000000000006d3b         or         word [rbp+0x72], 0x1                        ; CODE XREF=fts_build+1322, fts_build+1327
0000000000006d40         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
0000000000006d44         call       j_closedir                                  ; closedir
0000000000006d49         mov        edi, dword [r15+0x48]
0000000000006d4d         mov        qword [rbp+0x18], 0x0
0000000000006d55         test       edi, 0x200
0000000000006d5b         je         loc_6d70

0000000000006d5d         mov        eax, dword [rsp+0xa8+var_44]
0000000000006d61         test       eax, eax
0000000000006d63         js         loc_6d70

0000000000006d65         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000006d67         call       j_close                                     ; close
0000000000006d6c         mov        edi, dword [r15+0x48]

                     loc_6d70:
0000000000006d70         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=fts_build+1371, fts_build+1379
0000000000006d78         mov        byte [rsp+0xa8+var_49], 0x0
0000000000006d7d         jmp        loc_686b
0000000000006d82         align      8

                     loc_6d88:
0000000000006d88         xor        edx, edx                                    ; CODE XREF=fts_build+1153
0000000000006d8a         cmp        qword [rbp+0x58], 0x0
0000000000006d8f         setne      dl
0000000000006d92         shl        edx, 0x11
0000000000006d95         jmp        loc_6c87
0000000000006d9a         align      32

                     loc_6da0:
0000000000006da0         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir, CODE XREF=fts_build+72
0000000000006da4         call       j_closedir                                  ; closedir
0000000000006da9         cmp        dword [rsp+0xa8+var_50], 0x3
0000000000006dae         mov        qword [rbp+0x18], 0x0
0000000000006db6         je         loc_6fdb

                     loc_6dbc:
0000000000006dbc         mov        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+2005, fts_build+2032

                     loc_6dc5:
0000000000006dc5         mov        rbx, qword [rsp+0xa8+var_40]                ; CODE XREF=fts_build+1591, fts_build+1692, fts_build+1798, fts_build+1808, fts_build+1835, fts_build+1907, fts_build+2080, fts_build+2295, fts_build+2476
0000000000006dca         xor        rbx, qword [fs:0x28]
0000000000006dd3         mov        rax, qword [rsp+0xa8+var_98]
0000000000006dd8         jne        loc_71b1

0000000000006dde         add        rsp, 0x78
0000000000006de2         pop        rbx
0000000000006de3         pop        rbp
0000000000006de4         pop        r12
0000000000006de6         pop        r13
0000000000006de8         pop        r14
0000000000006dea         pop        r15
0000000000006dec         ret
                        ; endp
0000000000006ded         align      16

                     loc_6df0:
0000000000006df0         lea        rbx, qword [r15+0x58]                       ; CODE XREF=fts_build+1228
0000000000006df4         mov        rdx, rbp
0000000000006df7         mov        rsi, rbx
0000000000006dfa         call       leave_dir.isra.12                           ; leave_dir.isra.12
0000000000006dff         xor        edx, edx
0000000000006e01         mov        rsi, rbp
0000000000006e04         mov        rdi, r15
0000000000006e07         call       fts_stat                                    ; fts_stat
0000000000006e0c         mov        edi, dword [r15+0x48]
0000000000006e10         mov        rdx, rbp
0000000000006e13         mov        rsi, rbx
0000000000006e16         call       enter_dir.isra.10                           ; enter_dir.isra.10
0000000000006e1b         test       al, al
0000000000006e1d         jne        loc_6cd2

0000000000006e23         call       j___errno_location                          ; __errno_location
0000000000006e28         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006e31         mov        dword [rax], 0xc
0000000000006e37         jmp        loc_6dc5
0000000000006e39         align      64

                     loc_6e40:
0000000000006e40         mov        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+719, fts_build+733, fts_build+745
0000000000006e45         jmp        loc_69bb
0000000000006e4a         align      16

                     loc_6e50:
0000000000006e50         mov        rdi, r13                                    ; CODE XREF=fts_build+567, fts_build+618
0000000000006e53         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006e58         mov        ebx, dword [r12]
0000000000006e5c         call       sub_1a90                                    ; sub_1a90
0000000000006e61         mov        rdi, qword [rsp+0xa8+var_98]
0000000000006e66         call       fts_lfree                                   ; fts_lfree
0000000000006e6b         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
0000000000006e6f         call       j_closedir                                  ; closedir
0000000000006e74         mov        r9d, 0x7
0000000000006e7a         mov        qword [rbp+0x18], 0x0
0000000000006e82         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006e8b         mov        word [rbp+0x70], r9w
0000000000006e90         or         dword [r15+0x48], 0x2000
0000000000006e98         mov        dword [r12], ebx
0000000000006e9c         jmp        loc_6dc5
0000000000006ea1         align      8

                     loc_6ea8:
0000000000006ea8         mov        rbp, rax                                    ; CODE XREF=fts_build+475

                     loc_6eab:
0000000000006eab         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+1973, fts_build+1992
0000000000006eb0         jne        loc_6b18

                     loc_6eb6:
0000000000006eb6         test       byte [r15+0x48], 0x4                        ; CODE XREF=fts_build+786, fts_build+872
0000000000006ebb         je         loc_6edb

0000000000006ebd         mov        rax, qword [rsp+0xa8+var_90]
0000000000006ec2         cmp        qword [r15+0x30], rax
0000000000006ec6         je         loc_6ecd

0000000000006ec8         test       rbx, rbx
0000000000006ecb         jne        loc_6ed3

                     loc_6ecd:
0000000000006ecd         sub        qword [rsp+0xa8+var_68], 0x1                ; CODE XREF=fts_build+1734

                     loc_6ed3:
0000000000006ed3         mov        rax, qword [rsp+0xa8+var_68]                ; CODE XREF=fts_build+1739
0000000000006ed8         mov        byte [rax], 0x0

                     loc_6edb:
0000000000006edb         cmp        qword [rsp+0xa8+var_58], 0x0                ; CODE XREF=fts_build+1723
0000000000006ee1         jne        loc_6f50

0000000000006ee3         cmp        byte [rsp+0xa8+var_49], 0x0
0000000000006ee8         je         loc_6f50

0000000000006eea         cmp        dword [rsp+0xa8+var_50], 0x1
0000000000006eef         je         loc_6f30

0000000000006ef1         test       rbx, rbx
0000000000006ef4         je         loc_6f30

                     loc_6ef6:
0000000000006ef6         cmp        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+1875
0000000000006efb         jne        loc_6ff8

0000000000006f01         cmp        qword [r15+0x40], 0x0
0000000000006f06         je         loc_6dc5

0000000000006f0c         cmp        rbx, 0x1
0000000000006f10         je         loc_6dc5

0000000000006f16         mov        rsi, qword [rsp+0xa8+var_98]
0000000000006f1b         mov        rdx, rbx
0000000000006f1e         mov        rdi, r15
0000000000006f21         call       fts_sort                                    ; fts_sort
0000000000006f26         mov        qword [rsp+0xa8+var_98], rax
0000000000006f2b         jmp        loc_6dc5

                     loc_6f30:
0000000000006f30         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=fts_build+1775, fts_build+1780
0000000000006f35         jne        loc_7066

0000000000006f3b         mov        rdi, r15
0000000000006f3e         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000006f43         test       eax, eax
0000000000006f45         setne      al

                     loc_6f48:
0000000000006f48         test       al, al                                      ; CODE XREF=fts_build+2179
0000000000006f4a         jne        loc_70d3

                     loc_6f50:
0000000000006f50         test       rbx, rbx                                    ; CODE XREF=fts_build+1761, fts_build+1768
0000000000006f53         jne        loc_6ef6

0000000000006f55         cmp        dword [rsp+0xa8+var_50], 0x3
0000000000006f5a         je         loc_7118

                     loc_6f60:
0000000000006f60         mov        rdi, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+2336, fts_build+2346, fts_build+2361
0000000000006f65         call       fts_lfree                                   ; fts_lfree
0000000000006f6a         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006f73         jmp        loc_6dc5
0000000000006f78         align      128

                     loc_6f80:
0000000000006f80         mov        eax, dword [r12]                            ; CODE XREF=fts_build+509
0000000000006f84         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006f89         test       eax, eax
0000000000006f8b         je         loc_6fae

0000000000006f8d         test       rbx, rbx
0000000000006f90         mov        dword [rbp+0x40], eax
0000000000006f93         jne        loc_70c9

0000000000006f99         cmp        qword [rsp+0xa8+var_58], 0x0
0000000000006f9f         mov        eax, 0x4
0000000000006fa4         jne        loc_70c9

                     loc_6faa:
0000000000006faa         mov        word [rbp+0x70], ax                         ; CODE XREF=fts_build+2254

                     loc_6fae:
0000000000006fae         mov        rdi, qword [rbp+0x18]                       ; CODE XREF=fts_build+1931
0000000000006fb2         test       rdi, rdi
0000000000006fb5         je         loc_6eab

0000000000006fbb         call       j_closedir                                  ; closedir
0000000000006fc0         mov        qword [rbp+0x18], 0x0
0000000000006fc8         jmp        loc_6eab
0000000000006fcd         align      16

                     loc_6fd0:
0000000000006fd0         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+1201
0000000000006fd5         jne        loc_6dbc

                     loc_6fdb:
0000000000006fdb         mov        r10d, 0x4                                   ; CODE XREF=fts_build+1462
0000000000006fe1         mov        word [rbp+0x70], r10w
0000000000006fe6         call       j___errno_location                          ; __errno_location
0000000000006feb         mov        eax, dword [rax]
0000000000006fed         mov        dword [rbp+0x40], eax
0000000000006ff0         jmp        loc_6dbc
0000000000006ff5         align      8

                     loc_6ff8:
0000000000006ff8         lea        rax, qword [fts_compare_ino]                ; fts_compare_ino, CODE XREF=fts_build+1787
0000000000006fff         mov        rsi, qword [rsp+0xa8+var_98]
0000000000007004         mov        rdx, rbx
0000000000007007         mov        rdi, r15
000000000000700a         mov        qword [r15+0x40], rax
000000000000700e         call       fts_sort                                    ; fts_sort
0000000000007013         mov        qword [r15+0x40], 0x0
000000000000701b         mov        qword [rsp+0xa8+var_98], rax
0000000000007020         jmp        loc_6dc5
0000000000007025         align      8

                     loc_7028:
0000000000007028         mov        qword [rsp+0xa8+var_70], 0x186a0            ; CODE XREF=fts_build+83
0000000000007031         mov        byte [rsp+0xa8+var_49], 0x1
0000000000007036         mov        edi, dword [r15+0x48]
000000000000703a         jmp        loc_686b
000000000000703f         align      64

                     loc_7040:
0000000000007040         mov        byte [rsp+0xa8+var_49], 0x0                 ; CODE XREF=fts_build+1261, fts_build+2371
0000000000007045         mov        edi, dword [r15+0x48]
0000000000007049         jmp        loc_686b
000000000000704e         align      16

                     loc_7050:
0000000000007050         xor        edx, edx                                    ; CODE XREF=fts_build+1212
0000000000007052         mov        rsi, rbp
0000000000007055         mov        rdi, r15
0000000000007058         call       fts_stat                                    ; fts_stat
000000000000705d         mov        word [rbp+0x70], ax
0000000000007061         jmp        loc_6cd2

                     loc_7066:
0000000000007066         mov        rsi, qword [rbp+8]                          ; CODE XREF=fts_build+1845
000000000000706a         lea        rcx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xaf1a
0000000000007071         mov        edx, 0xffffffff
0000000000007076         mov        rdi, r15
0000000000007079         call       fts_safe_changedir                          ; fts_safe_changedir
000000000000707e         test       eax, eax
0000000000007080         setne      al
0000000000007083         jmp        loc_6f48

                     loc_7088:
0000000000007088         xor        ecx, ecx                                    ; CODE XREF=fts_build+1314
000000000000708a         mov        edx, eax
000000000000708c         mov        rsi, rbp
000000000000708f         mov        rdi, r15
0000000000007092         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000007097         test       eax, eax
0000000000007099         jne        loc_6d28

000000000000709f         jmp        loc_6862

                     loc_70a4:
00000000000070a4         cmp        qword [rbp+0x88], 0x2                       ; CODE XREF=fts_build+1281
00000000000070ac         jne        loc_6d07

00000000000070b2         mov        esi, eax
00000000000070b4         mov        rdi, rbp
00000000000070b7         call       leaf_optimization                           ; leaf_optimization
00000000000070bc         test       eax, eax
00000000000070be         jne        loc_713e

00000000000070c0         mov        eax, dword [rsp+0xa8+var_44]
00000000000070c4         jmp        loc_6d07

                     loc_70c9:
00000000000070c9         mov        eax, 0x7                                    ; CODE XREF=fts_build+1939, fts_build+1956
00000000000070ce         jmp        loc_6faa

                     loc_70d3:
00000000000070d3         mov        edi, 0x7                                    ; CODE XREF=fts_build+1866
00000000000070d8         mov        word [rbp+0x70], di
00000000000070dc         or         dword [r15+0x48], 0x2000
00000000000070e4         mov        rdi, qword [rsp+0xa8+var_98]
00000000000070e9         call       fts_lfree                                   ; fts_lfree
00000000000070ee         mov        qword [rsp+0xa8+var_98], 0x0
00000000000070f7         jmp        loc_6dc5

                     loc_70fc:
00000000000070fc         mov        edi, eax                                    ; CODE XREF=fts_build+1306
00000000000070fe         mov        edx, 0x3
0000000000007103         mov        esi, 0x406
0000000000007108         xor        eax, eax
000000000000710a         call       rpl_fcntl                                   ; rpl_fcntl
000000000000710f         mov        dword [rsp+0xa8+var_44], eax
0000000000007113         jmp        loc_6d20

                     loc_7118:
0000000000007118         movzx      eax, word [rbp+0x70]                        ; CODE XREF=fts_build+1882
000000000000711c         cmp        ax, 0x7
0000000000007120         je         loc_6f60

0000000000007126         cmp        ax, 0x4
000000000000712a         je         loc_6f60

0000000000007130         mov        esi, 0x6
0000000000007135         mov        word [rbp+0x70], si
0000000000007139         jmp        loc_6f60

                     loc_713e:
000000000000713e         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2238
0000000000007143         jne        loc_7040

0000000000007149         mov        eax, dword [rsp+0xa8+var_44]
000000000000714d         xor        r12d, r12d
0000000000007150         mov        ebx, 0x1
0000000000007155         jmp        loc_6d15
000000000000715a         align      32

                     loc_7160:
0000000000007160         mov        rdi, r13                                    ; CODE XREF=fts_build+256
0000000000007163         mov        rbp, qword [rsp+0xa8+var_88]
0000000000007168         call       sub_1a90                                    ; sub_1a90
000000000000716d         mov        rdi, qword [rsp+0xa8+var_98]
0000000000007172         call       fts_lfree                                   ; fts_lfree
0000000000007177         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
000000000000717b         call       j_closedir                                  ; closedir
0000000000007180         mov        r8d, 0x7
0000000000007186         mov        qword [rbp+0x18], 0x0
000000000000718e         mov        qword [rsp+0xa8+var_98], 0x0
0000000000007197         mov        word [rbp+0x70], r8w
000000000000719c         or         dword [r15+0x48], 0x2000
00000000000071a4         mov        dword [r12], 0x24
00000000000071ac         jmp        loc_6dc5

                     loc_71b1:
00000000000071b1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_build+1496
                        ; endp

                     loc_71b6:
00000000000071b6         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53, CODE XREF=fts_build+1065
00000000000071bd         mov        eax, dword [rax+rdx*4]
00000000000071c0         mov        dword [r13+0x90], eax
00000000000071c7         mov        eax, 0x1
00000000000071cc         jmp        loc_698a
00000000000071d1         align      32                                          ; End of unwind block (FDE at 0xc268)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_50: int64_t, -80


                     rpl_fts_open:
00000000000071e0         push       r15                                         ; Begin of unwind block (FDE at 0xc2b8), CODE XREF=xfts_open+10
00000000000071e2         push       r14
00000000000071e4         push       r13
00000000000071e6         push       r12
00000000000071e8         push       rbp
00000000000071e9         push       rbx
00000000000071ea         sub        rsp, 0x28
00000000000071ee         test       esi, 0xfffff000
00000000000071f4         jne        loc_7578

00000000000071fa         mov        eax, esi
00000000000071fc         mov        ebp, esi
00000000000071fe         and        eax, 0x204
0000000000007203         cmp        eax, 0x204
0000000000007208         je         loc_7578

000000000000720e         test       sil, 0x12
0000000000007212         je         loc_7578

0000000000007218         mov        r13, rdi
000000000000721b         mov        esi, 0x1                                    ; argument "__size" for method j_calloc
0000000000007220         mov        edi, 0x80                                   ; argument "__nmemb" for method j_calloc
0000000000007225         mov        r14, rdx
0000000000007228         call       j_calloc                                    ; calloc
000000000000722d         test       rax, rax
0000000000007230         mov        rbx, rax
0000000000007233         je         loc_748e

0000000000007239         test       bpl, 0x2
000000000000723d         mov        qword [rax+0x40], r14
0000000000007241         jne        loc_74a0

0000000000007247         mov        rdi, qword [r13]
000000000000724b         mov        dword [rax+0x48], ebp
000000000000724e         mov        dword [rbx+0x2c], 0xffffff9c
0000000000007255         test       rdi, rdi
0000000000007258         je         loc_74bf

                     loc_725e:
000000000000725e         mov        r15, r13                                    ; CODE XREF=rpl_fts_open+729
0000000000007261         xor        r12d, r12d
0000000000007264         nop        dword [rax]

                     loc_7268:
0000000000007268         call       j_strlen                                    ; strlen, CODE XREF=rpl_fts_open+158
000000000000726d         cmp        r12, rax
0000000000007270         cmovb      r12, rax
0000000000007274         add        r15, 0x8
0000000000007278         mov        rdi, qword [r15]
000000000000727b         test       rdi, rdi
000000000000727e         jne        loc_7268

0000000000007280         lea        rdx, qword [r12+1]
0000000000007285         mov        eax, 0x1000
000000000000728a         cmp        rdx, 0x1000
0000000000007291         cmovb      rdx, rax

                     loc_7295:
0000000000007295         lea        rsi, qword [rbx+0x30]                       ; CODE XREF=rpl_fts_open+740
0000000000007299         lea        rdi, qword [rbx+0x20]
000000000000729d         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
00000000000072a2         test       al, al
00000000000072a4         mov        byte [rsp+0x58+var_42], al
00000000000072a8         je         loc_7549

00000000000072ae         mov        rsi, qword [r13]
00000000000072b2         test       rsi, rsi
00000000000072b5         je         loc_7560

00000000000072bb         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xabc1
00000000000072c2         xor        edx, edx
00000000000072c4         mov        rdi, rbx
00000000000072c7         call       fts_alloc                                   ; fts_alloc
00000000000072cc         test       rax, rax
00000000000072cf         mov        r15, rax
00000000000072d2         je         loc_7540

00000000000072d8         mov        rax, 0xffffffffffffffff
00000000000072df         test       r14, r14
00000000000072e2         mov        rsi, qword [r13]
00000000000072e6         mov        qword [r15+0x58], rax
00000000000072ea         mov        qword [r15+0x68], rax
00000000000072ee         je         loc_72fd

                     loc_72f0:
00000000000072f0         mov        eax, dword [rbx+0x48]                       ; CODE XREF=rpl_fts_open+902
00000000000072f3         shr        eax, 0xa
00000000000072f6         and        eax, 0x1
00000000000072f9         mov        byte [rsp+0x58+var_42], al

                     loc_72fd:
00000000000072fd         test       rsi, rsi                                    ; CODE XREF=rpl_fts_open+270
0000000000007300         je         loc_756c

0000000000007306         shr        ebp, 0xb
0000000000007309         mov        qword [rsp+0x58+var_40], 0x0
0000000000007312         xor        r12d, r12d
0000000000007315         xor        ebp, 0x1
0000000000007318         mov        eax, ebp
000000000000731a         xor        ebp, ebp
000000000000731c         and        eax, 0x1
000000000000731f         mov        byte [rsp+0x58+var_41], al
0000000000007323         jmp        loc_739c
0000000000007325         align      8

                     loc_7328:
0000000000007328         mov        rdx, rax                                    ; CODE XREF=rpl_fts_open+466, rpl_fts_open+477, rpl_fts_open+488, rpl_fts_open+501, rpl_fts_open+517
000000000000732b         mov        rdi, rbx
000000000000732e         call       fts_alloc                                   ; fts_alloc
0000000000007333         test       rax, rax
0000000000007336         mov        rcx, rax
0000000000007339         je         loc_7530

000000000000733f         mov        qword [rax+0x58], 0x0
0000000000007347         mov        qword [rax+8], r15
000000000000734b         lea        rax, qword [rax+0x108]
0000000000007352         test       r12, r12
0000000000007355         mov        qword [rcx+0x30], rax
0000000000007359         je         loc_74d0

000000000000735f         cmp        byte [rsp+0x58+var_42], 0x0
0000000000007364         je         loc_74d0

000000000000736a         mov        esi, 0xb
000000000000736f         test       r14, r14
0000000000007372         mov        qword [rcx+0xa8], 0x2
000000000000737d         mov        word [rcx+0x70], si
0000000000007381         je         loc_7510

                     loc_7387:
0000000000007387         mov        qword [rcx+0x10], r12                       ; CODE XREF=rpl_fts_open+782
000000000000738b         mov        r12, rcx

                     loc_738e:
000000000000738e         add        rbp, 0x1                                    ; CODE XREF=rpl_fts_open+809, rpl_fts_open+838
0000000000007392         mov        rsi, qword [r13+rbp*8]
0000000000007397         test       rsi, rsi
000000000000739a         je         loc_73f0

                     loc_739c:
000000000000739c         mov        rdi, rsi                                    ; argument "__s" for method j_strlen, CODE XREF=rpl_fts_open+323
000000000000739f         mov        qword [rsp+0x58+var_50], rsi
00000000000073a4         call       j_strlen                                    ; strlen
00000000000073a9         cmp        rax, 0x2
00000000000073ad         mov        rsi, qword [rsp+0x58+var_50]
00000000000073b2         jbe        loc_7328

00000000000073b8         cmp        byte [rsp+0x58+var_41], 0x0
00000000000073bd         je         loc_7328

00000000000073c3         cmp        byte [rsi+rax-1], 0x2f
00000000000073c8         jne        loc_7328

00000000000073ce         nop

                     loc_73d0:
00000000000073d0         cmp        byte [rsi+rax-2], 0x2f                      ; CODE XREF=rpl_fts_open+515
00000000000073d5         jne        loc_7328

00000000000073db         sub        rax, 0x1
00000000000073df         cmp        rax, 0x1
00000000000073e3         jne        loc_73d0

00000000000073e5         jmp        loc_7328
00000000000073ea         align      16

                     loc_73f0:
00000000000073f0         test       r14, r14                                    ; CODE XREF=rpl_fts_open+442
00000000000073f3         je         loc_740c

00000000000073f5         cmp        rbp, 0x1
00000000000073f9         jbe        loc_740c

00000000000073fb         mov        rsi, r12
00000000000073fe         mov        rdx, rbp
0000000000007401         mov        rdi, rbx
0000000000007404         call       fts_sort                                    ; fts_sort
0000000000007409         mov        r12, rax

                     loc_740c:
000000000000740c         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xabc1, CODE XREF=rpl_fts_open+531, rpl_fts_open+537, rpl_fts_open+911
0000000000007413         xor        edx, edx
0000000000007415         mov        rdi, rbx
0000000000007418         call       fts_alloc                                   ; fts_alloc
000000000000741d         test       rax, rax
0000000000007420         mov        qword [rbx], rax
0000000000007423         je         loc_7530

0000000000007429         mov        edi, dword [rbx+0x48]
000000000000742c         mov        edx, 0x9
0000000000007431         lea        rsi, qword [rbx+0x58]
0000000000007435         mov        qword [rax+0x10], r12
0000000000007439         mov        word [rax+0x70], dx
000000000000743d         mov        qword [rax+0x58], 0x1
0000000000007445         call       setup_dir.isra.4                            ; setup_dir.isra.4
000000000000744a         test       al, al
000000000000744c         je         loc_7530

0000000000007452         mov        esi, dword [rbx+0x48]
0000000000007455         test       esi, 0x204
000000000000745b         jne        loc_7480

000000000000745d         mov        edi, dword [rbx+0x2c]
0000000000007460         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xaf1b
0000000000007467         call       diropen.isra.6                              ; diropen.isra.6
000000000000746c         test       eax, eax
000000000000746e         mov        dword [rbx+0x28], eax
0000000000007471         jns        loc_7480

0000000000007473         or         dword [rbx+0x48], 0x4
0000000000007477         nop        word [rax+rax]

                     loc_7480:
0000000000007480         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_open+635, rpl_fts_open+657
0000000000007484         mov        esi, 0xffffffff
0000000000007489         call       i_ring_init                                 ; i_ring_init

                     loc_748e:
000000000000748e         add        rsp, 0x28                                   ; CODE XREF=rpl_fts_open+83, rpl_fts_open+883, rpl_fts_open+933
0000000000007492         mov        rax, rbx
0000000000007495         pop        rbx
0000000000007496         pop        rbp
0000000000007497         pop        r12
0000000000007499         pop        r13
000000000000749b         pop        r14
000000000000749d         pop        r15
000000000000749f         ret
                        ; endp

                     loc_74a0:
00000000000074a0         mov        rdi, qword [r13]                            ; CODE XREF=rpl_fts_open+97
00000000000074a4         mov        eax, ebp
00000000000074a6         mov        dword [rbx+0x2c], 0xffffff9c
00000000000074ad         and        ah, 0xfd
00000000000074b0         or         eax, 0x4
00000000000074b3         test       rdi, rdi
00000000000074b6         mov        dword [rbx+0x48], eax
00000000000074b9         jne        loc_725e

                     loc_74bf:
00000000000074bf         mov        edx, 0x1000                                 ; CODE XREF=rpl_fts_open+120
00000000000074c4         jmp        loc_7295
00000000000074c9         align      16

                     loc_74d0:
00000000000074d0         xor        edx, edx                                    ; CODE XREF=rpl_fts_open+377, rpl_fts_open+388
00000000000074d2         mov        rsi, rcx
00000000000074d5         mov        rdi, rbx
00000000000074d8         mov        qword [rsp+0x58+var_50], rcx
00000000000074dd         call       fts_stat                                    ; fts_stat
00000000000074e2         mov        rcx, qword [rsp+0x58+var_50]
00000000000074e7         test       r14, r14
00000000000074ea         mov        word [rcx+0x70], ax
00000000000074ee         jne        loc_7387

00000000000074f4         test       r12, r12
00000000000074f7         mov        qword [rcx+0x10], 0x0
00000000000074ff         jne        loc_7518

0000000000007501         mov        qword [rsp+0x58+var_40], rcx
0000000000007506         mov        r12, rcx
0000000000007509         jmp        loc_738e
000000000000750e         align      16

                     loc_7510:
0000000000007510         mov        qword [rcx+0x10], 0x0                       ; CODE XREF=rpl_fts_open+417

                     loc_7518:
0000000000007518         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=rpl_fts_open+799
000000000000751d         mov        qword [rsp+0x58+var_40], rcx
0000000000007522         mov        qword [rax+0x10], rcx
0000000000007526         jmp        loc_738e
000000000000752b         align      16

                     loc_7530:
0000000000007530         mov        rdi, r12                                    ; CODE XREF=rpl_fts_open+345, rpl_fts_open+579, rpl_fts_open+620
0000000000007533         call       fts_lfree                                   ; fts_lfree
0000000000007538         mov        rdi, r15
000000000000753b         call       sub_1a90                                    ; sub_1a90

                     loc_7540:
0000000000007540         mov        rdi, qword [rbx+0x20]                       ; CODE XREF=rpl_fts_open+242
0000000000007544         call       sub_1a90                                    ; sub_1a90

                     loc_7549:
0000000000007549         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_open+200
000000000000754c         xor        ebx, ebx
000000000000754e         call       sub_1a90                                    ; sub_1a90
0000000000007553         jmp        loc_748e
0000000000007558         align      32

                     loc_7560:
0000000000007560         xor        r15d, r15d                                  ; CODE XREF=rpl_fts_open+213
0000000000007563         test       r14, r14
0000000000007566         jne        loc_72f0

                     loc_756c:
000000000000756c         xor        r12d, r12d                                  ; CODE XREF=rpl_fts_open+288
000000000000756f         jmp        loc_740c
0000000000007574         align      8

                     loc_7578:
0000000000007578         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_open+20, rpl_fts_open+40, rpl_fts_open+50
000000000000757d         xor        ebx, ebx
000000000000757f         mov        dword [rax], 0x16
0000000000007585         jmp        loc_748e
000000000000758a         align      16                                          ; End of unwind block (FDE at 0xc2b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_close:
0000000000007590         push       r12                                         ; Begin of unwind block (FDE at 0xc304), CODE XREF=main+985
0000000000007592         push       rbp
0000000000007593         mov        rbp, rdi
0000000000007596         push       rbx
0000000000007597         mov        rdi, qword [rdi]
000000000000759a         test       rdi, rdi
000000000000759d         je         loc_75e3

000000000000759f         cmp        qword [rdi+0x58], 0x0
00000000000075a4         jns        loc_75bf

00000000000075a6         jmp        loc_76c0
00000000000075ab         align      16

                     loc_75b0:
00000000000075b0         call       sub_1a90                                    ; sub_1a90, CODE XREF=rpl_fts_close+54
00000000000075b5         cmp        qword [rbx+0x58], 0x0
00000000000075ba         mov        rdi, rbx
00000000000075bd         js         loc_75db

                     loc_75bf:
00000000000075bf         mov        rbx, qword [rdi+0x10]                       ; CODE XREF=rpl_fts_close+20, rpl_fts_close+73
00000000000075c3         test       rbx, rbx
00000000000075c6         jne        loc_75b0

00000000000075c8         mov        rbx, qword [rdi+8]
00000000000075cc         call       sub_1a90                                    ; sub_1a90
00000000000075d1         cmp        qword [rbx+0x58], 0x0
00000000000075d6         mov        rdi, rbx
00000000000075d9         jns        loc_75bf

                     loc_75db:
00000000000075db         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_close+45
00000000000075de         call       sub_1a90                                    ; sub_1a90

                     loc_75e3:
00000000000075e3         mov        rdi, qword [rbp+8]                          ; CODE XREF=rpl_fts_close+13, rpl_fts_close+315
00000000000075e7         test       rdi, rdi
00000000000075ea         je         loc_75f1

00000000000075ec         call       fts_lfree                                   ; fts_lfree

                     loc_75f1:
00000000000075f1         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_close+90
00000000000075f5         call       sub_1a90                                    ; sub_1a90
00000000000075fa         mov        rdi, qword [rbp+0x20]
00000000000075fe         call       sub_1a90                                    ; sub_1a90
0000000000007603         mov        eax, dword [rbp+0x48]
0000000000007606         test       ah, 0x2
0000000000007609         je         loc_7670

000000000000760b         mov        edi, dword [rbp+0x2c]
000000000000760e         test       edi, edi
0000000000007610         jns        loc_76a0

                     loc_7616:
0000000000007616         xor        ebx, ebx                                    ; CODE XREF=rpl_fts_close+226, rpl_fts_close+250, rpl_fts_close+279

                     loc_7618:
0000000000007618         lea        rdi, qword [rbp+0x60]                       ; CODE XREF=rpl_fts_close+292, rpl_fts_close+340, rpl_fts_close+348, rpl_fts_close+364
000000000000761c         call       fd_ring_clear                               ; fd_ring_clear
0000000000007621         mov        rdi, qword [rbp+0x50]
0000000000007625         test       rdi, rdi
0000000000007628         je         loc_762f

000000000000762a         call       hash_free                                   ; hash_free

                     loc_762f:
000000000000762f         test       dword [rbp+0x48], 0x102                     ; CODE XREF=rpl_fts_close+152
0000000000007636         mov        rdi, qword [rbp+0x58]
000000000000763a         je         loc_7660

000000000000763c         test       rdi, rdi
000000000000763f         je         loc_7646

0000000000007641         call       hash_free                                   ; hash_free

                     loc_7646:
0000000000007646         mov        rdi, rbp                                    ; CODE XREF=rpl_fts_close+175, rpl_fts_close+213
0000000000007649         call       sub_1a90                                    ; sub_1a90
000000000000764e         test       ebx, ebx
0000000000007650         jne        loc_7701

                     loc_7656:
0000000000007656         mov        eax, ebx                                    ; CODE XREF=rpl_fts_close+381
0000000000007658         pop        rbx
0000000000007659         pop        rbp
000000000000765a         pop        r12
000000000000765c         ret
                        ; endp
000000000000765d         align      32

                     loc_7660:
0000000000007660         call       sub_1a90                                    ; sub_1a90, CODE XREF=rpl_fts_close+170
0000000000007665         jmp        loc_7646
0000000000007667         align      16

                     loc_7670:
0000000000007670         test       al, 0x4                                     ; CODE XREF=rpl_fts_close+121
0000000000007672         jne        loc_7616

0000000000007674         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_fchdir
0000000000007677         call       j_fchdir                                    ; fchdir
000000000000767c         test       eax, eax
000000000000767e         jne        loc_76d0

0000000000007680         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
0000000000007683         call       j_close                                     ; close
0000000000007688         test       eax, eax
000000000000768a         je         loc_7616

000000000000768c         call       j___errno_location                          ; __errno_location
0000000000007691         mov        r12, rax
0000000000007694         jmp        loc_76f8
0000000000007696         align      32

                     loc_76a0:
00000000000076a0         call       j_close                                     ; close, CODE XREF=rpl_fts_close+128
00000000000076a5         test       eax, eax
00000000000076a7         je         loc_7616

00000000000076ad         call       j___errno_location                          ; __errno_location
00000000000076b2         mov        ebx, dword [rax]
00000000000076b4         jmp        loc_7618
00000000000076b9         align      64

                     loc_76c0:
00000000000076c0         mov        rbx, rdi                                    ; CODE XREF=rpl_fts_close+22
00000000000076c3         mov        rdi, rbx
00000000000076c6         call       sub_1a90                                    ; sub_1a90
00000000000076cb         jmp        loc_75e3

                     loc_76d0:
00000000000076d0         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+238
00000000000076d5         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
00000000000076d8         mov        r12, rax
00000000000076db         mov        ebx, dword [rax]
00000000000076dd         call       j_close                                     ; close
00000000000076e2         test       eax, eax
00000000000076e4         je         loc_7618

00000000000076ea         test       ebx, ebx
00000000000076ec         jne        loc_7618

00000000000076f2         nop        word [rax+rax]

                     loc_76f8:
00000000000076f8         mov        ebx, dword [r12]                            ; CODE XREF=rpl_fts_close+260
00000000000076fc         jmp        loc_7618

                     loc_7701:
0000000000007701         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+192
0000000000007706         mov        dword [rax], ebx
0000000000007708         mov        ebx, 0xffffffff
000000000000770d         jmp        loc_7656
0000000000007712         align      32                                          ; End of unwind block (FDE at 0xc304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_read:
0000000000007720         push       r14                                         ; Begin of unwind block (FDE at 0xc334), CODE XREF=main+874, main+942, sub_1fe0+1338
0000000000007722         push       r13
0000000000007724         push       r12
0000000000007726         push       rbp
0000000000007727         push       rbx
0000000000007728         mov        rbp, qword [rdi]
000000000000772b         test       rbp, rbp
000000000000772e         je         loc_783e

0000000000007734         mov        edx, dword [rdi+0x48]
0000000000007737         test       dh, 0x20
000000000000773a         jne        loc_783e

0000000000007740         movzx      eax, word [rbp+0x74]
0000000000007744         mov        ebx, 0x3
0000000000007749         mov        r12, rdi
000000000000774c         mov        word [rbp+0x74], bx
0000000000007750         cmp        ax, 0x1
0000000000007754         je         loc_79a0

000000000000775a         cmp        ax, 0x2
000000000000775e         movzx      ecx, word [rbp+0x70]
0000000000007762         je         loc_7850

0000000000007768         cmp        cx, 0x1
000000000000776c         jne        loc_77a0

000000000000776e         jmp        loc_7990
0000000000007773         align      8

                     loc_7778:
0000000000007778         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+135
000000000000777c         mov        rdi, rbp
000000000000777f         call       sub_1a90                                    ; sub_1a90
0000000000007784         cmp        qword [rbx+0x58], 0x0
0000000000007789         je         loc_79c0

000000000000778f         movzx      eax, word [rbx+0x74]
0000000000007793         mov        rbp, rbx
0000000000007796         cmp        ax, 0x4
000000000000779a         jne        loc_7ac8

                     loc_77a0:
00000000000077a0         mov        rbx, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_read+76, rpl_fts_read+317
00000000000077a4         test       rbx, rbx
00000000000077a7         jne        loc_7778

00000000000077a9         mov        rbx, qword [rbp+8]
00000000000077ad         cmp        qword [rbx+0x18], 0x0
00000000000077b2         jne        loc_7d20

                     loc_77b8:
00000000000077b8         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+1672
00000000000077bc         mov        rdi, rbp
00000000000077bf         call       sub_1a90                                    ; sub_1a90
00000000000077c4         cmp        qword [rbx+0x58], 0xffffffffffffffff
00000000000077c9         je         loc_7c82

00000000000077cf         cmp        word [rbx+0x70], 0xb
00000000000077d4         je         loc_790f

00000000000077da         mov        rdx, qword [r12+0x20]
00000000000077df         mov        rax, qword [rbx+0x48]
00000000000077e3         mov        byte [rdx+rax], 0x0
00000000000077e7         cmp        qword [rbx+0x58], 0x0
00000000000077ec         je         loc_7bb0

00000000000077f2         movzx      eax, word [rbx+0x72]
00000000000077f6         test       al, 0x2
00000000000077f8         je         loc_7b68

00000000000077fe         mov        eax, dword [r12+0x48]
0000000000007803         mov        edi, dword [rbx+0x44]
0000000000007806         test       al, 0x4
0000000000007808         je         loc_7c0c

                     loc_780e:
000000000000780e         call       j_close                                     ; close, CODE XREF=rpl_fts_read+1287, rpl_fts_read+1708

                     loc_7813:
0000000000007813         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1098, rpl_fts_read+1130, rpl_fts_read+1180

                     loc_7818:
0000000000007818         cmp        word [rbx+0x70], 0x2                        ; CODE XREF=rpl_fts_read+1162
000000000000781d         je         loc_7833

000000000000781f         mov        ecx, dword [rbx+0x40]
0000000000007822         test       ecx, ecx
0000000000007824         je         loc_7bc8

000000000000782a         mov        edx, 0x7
000000000000782f         mov        word [rbx+0x70], dx

                     loc_7833:
0000000000007833         and        edi, 0x2000                                 ; CODE XREF=rpl_fts_read+253, rpl_fts_read+1219
0000000000007839         mov        rbp, rbx
000000000000783c         je         loc_78ba

                     loc_783e:
000000000000783e         xor        ebp, ebp                                    ; CODE XREF=rpl_fts_read+14, rpl_fts_read+26, rpl_fts_read+1327, rpl_fts_read+1662
0000000000007840         pop        rbx
0000000000007841         mov        rax, rbp
0000000000007844         pop        rbp
0000000000007845         pop        r12
0000000000007847         pop        r13
0000000000007849         pop        r14
000000000000784b         ret
                        ; endp
000000000000784c         align      16

                     loc_7850:
0000000000007850         lea        eax, dword [rcx-0xc]                        ; CODE XREF=rpl_fts_read+66
0000000000007853         cmp        ax, 0x1
0000000000007857         jbe        loc_78d0

0000000000007859         cmp        cx, 0x1
000000000000785d         jne        loc_77a0

                     loc_7863:
0000000000007863         test       dl, 0x40                                    ; CODE XREF=rpl_fts_read+628
0000000000007866         je         loc_7918

000000000000786c         mov        rax, qword [r12+0x18]
0000000000007871         cmp        qword [rbp+0x78], rax
0000000000007875         je         loc_7918

                     loc_787b:
000000000000787b         test       byte [rbp+0x72], 0x2                        ; CODE XREF=rpl_fts_read+634
000000000000787f         jne        loc_7d60

                     loc_7885:
0000000000007885         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+1608
000000000000788a         test       rdi, rdi
000000000000788d         je         loc_789d

000000000000788f         call       fts_lfree                                   ; fts_lfree
0000000000007894         mov        qword [r12+8], 0x0

                     loc_789d:
000000000000789d         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+365
00000000000078a2         mov        r10d, 0x6
00000000000078a8         lea        rsi, qword [r12+0x58]
00000000000078ad         mov        word [rbp+0x70], r10w
00000000000078b2         mov        rdx, rbp
00000000000078b5         call       leave_dir.isra.12                           ; leave_dir.isra.12

                     loc_78ba:
00000000000078ba         pop        rbx                                         ; CODE XREF=rpl_fts_read+284, rpl_fts_read+467, rpl_fts_read+493, rpl_fts_read+864, rpl_fts_read+906, rpl_fts_read+925, rpl_fts_read+1373, rpl_fts_read+1407, rpl_fts_read+1518, rpl_fts_read+1724, rpl_fts_read+1778
00000000000078bb         mov        rax, rbp
00000000000078be         pop        rbp
00000000000078bf         pop        r12
00000000000078c1         pop        r13
00000000000078c3         pop        r14
00000000000078c5         ret
                        ; endp
00000000000078c6         align      16

                     loc_78d0:
00000000000078d0         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+311
00000000000078d5         mov        rsi, rbp
00000000000078d8         call       fts_stat                                    ; fts_stat
00000000000078dd         cmp        ax, 0x1
00000000000078e1         mov        word [rbp+0x70], ax
00000000000078e5         je         loc_7c2c

00000000000078eb         cmp        ax, 0xb
00000000000078ef         mov        qword [r12], rbp
00000000000078f3         jne        loc_78ba

00000000000078f5         nop        dword [rax]

                     loc_78f8:
00000000000078f8         mov        rax, qword [rbp+0xa8]                       ; CODE XREF=rpl_fts_read+854
00000000000078ff         cmp        rax, 0x2
0000000000007903         je         loc_7ca8

0000000000007909         cmp        rax, 0x1
000000000000790d         je         loc_78ba

                     loc_790f:
000000000000790f         call       j_abort                                     ; abort, CODE XREF=rpl_fts_read+180
                        ; endp
0000000000007914         align      8

                     loc_7918:
0000000000007918         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+326, rpl_fts_read+341
000000000000791d         test       rdi, rdi
0000000000007920         je         loc_7b38

0000000000007926         test       dh, 0x10
0000000000007929         jne        loc_7b22

000000000000792f         mov        rcx, qword [rbp+0x30]
0000000000007933         mov        edx, 0xffffffff
0000000000007938         mov        rsi, rbp
000000000000793b         mov        rdi, r12
000000000000793e         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000007943         test       eax, eax
0000000000007945         je         loc_7c02

000000000000794b         call       j___errno_location                          ; __errno_location
0000000000007950         mov        eax, dword [rax]
0000000000007952         or         word [rbp+0x72], 0x1
0000000000007957         mov        dword [rbp+0x40], eax
000000000000795a         mov        rbp, qword [r12+8]
000000000000795f         test       rbp, rbp
0000000000007962         je         loc_7b56

0000000000007968         mov        rax, rbp
000000000000796b         nop        dword [rax+rax]

                     loc_7970:
0000000000007970         mov        rdx, qword [rax+8]                          ; CODE XREF=rpl_fts_read+611
0000000000007974         mov        rdx, qword [rdx+0x30]
0000000000007978         mov        qword [rax+0x30], rdx
000000000000797c         mov        rax, qword [rax+0x10]
0000000000007980         test       rax, rax
0000000000007983         jne        loc_7970

0000000000007985         jmp        loc_7b56
000000000000798a         align      16

                     loc_7990:
0000000000007990         cmp        ax, 0x4                                     ; CODE XREF=rpl_fts_read+78
0000000000007994         jne        loc_7863

000000000000799a         jmp        loc_787b
000000000000799f         align      32

                     loc_79a0:
00000000000079a0         mov        rsi, rbp                                    ; CODE XREF=rpl_fts_read+52
00000000000079a3         xor        edx, edx
00000000000079a5         call       fts_stat                                    ; fts_stat
00000000000079aa         mov        word [rbp+0x70], ax
00000000000079ae         mov        rax, rbp
00000000000079b1         pop        rbx
00000000000079b2         pop        rbp
00000000000079b3         pop        r12
00000000000079b5         pop        r13
00000000000079b7         pop        r14
00000000000079b9         ret
                        ; endp
00000000000079ba         align      64

                     loc_79c0:
00000000000079c0         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+105
00000000000079c3         call       restore_initial_cwd                         ; restore_initial_cwd
00000000000079c8         test       eax, eax
00000000000079ca         jne        loc_7dd1

00000000000079d0         test       dword [r12+0x48], 0x102
00000000000079d9         mov        rdi, qword [r12+0x58]
00000000000079de         je         loc_7b18

00000000000079e4         test       rdi, rdi
00000000000079e7         je         loc_79ee

00000000000079e9         call       hash_free                                   ; hash_free

                     loc_79ee:
00000000000079ee         mov        rdx, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_read+711, rpl_fts_read+1021
00000000000079f2         lea        rbp, qword [rbx+0x108]
00000000000079f9         mov        rdi, qword [r12+0x20]                       ; argument "__dest" for method j_memmove
00000000000079fe         mov        rsi, rbp                                    ; argument "__src" for method j_memmove
0000000000007a01         mov        qword [rbx+0x48], rdx
0000000000007a05         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
0000000000007a09         call       j_memmove                                   ; memmove
0000000000007a0e         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000007a13         mov        rdi, rbp                                    ; argument "__s" for method j_strrchr
0000000000007a16         call       j_strrchr                                   ; strrchr
0000000000007a1b         test       rax, rax
0000000000007a1e         je         loc_7a4b

0000000000007a20         cmp        rbp, rax
0000000000007a23         je         loc_7bf0

                     loc_7a29:
0000000000007a29         lea        r13, qword [rax+1]                          ; CODE XREF=rpl_fts_read+1239
0000000000007a2d         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000007a30         call       j_strlen                                    ; strlen
0000000000007a35         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000007a39         mov        r14, rax
0000000000007a3c         mov        rsi, r13                                    ; argument "__src" for method j_memmove
0000000000007a3f         mov        rdi, rbp                                    ; argument "__dest" for method j_memmove
0000000000007a42         call       j_memmove                                   ; memmove
0000000000007a47         mov        qword [rbx+0x60], r14

                     loc_7a4b:
0000000000007a4b         mov        rax, qword [r12+0x20]                       ; CODE XREF=rpl_fts_read+766, rpl_fts_read+1245
0000000000007a50         mov        edi, dword [r12+0x48]
0000000000007a55         lea        rsi, qword [r12+0x58]
0000000000007a5a         mov        rbp, rbx
0000000000007a5d         mov        qword [rbx+0x38], rax
0000000000007a61         mov        qword [rbx+0x30], rax
0000000000007a65         call       setup_dir.isra.4                            ; setup_dir.isra.4
0000000000007a6a         movzx      eax, word [rbx+0x70]

                     loc_7a6e:
0000000000007a6e         cmp        ax, 0xb                                     ; CODE XREF=rpl_fts_read+1007, rpl_fts_read+1853
0000000000007a72         mov        qword [r12], rbp
0000000000007a76         je         loc_78f8

                     loc_7a7c:
0000000000007a7c         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1479, rpl_fts_read+1815
0000000000007a80         jne        loc_78ba

                     loc_7a86:
0000000000007a86         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_read+1311
0000000000007a8b         jne        loc_7a96

                     loc_7a8d:
0000000000007a8d         mov        rax, qword [rbp+0x78]                       ; CODE XREF=rpl_fts_read+1784
0000000000007a91         mov        qword [r12+0x18], rax

                     loc_7a96:
0000000000007a96         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+875, rpl_fts_read+1524
0000000000007a9b         lea        rsi, qword [r12+0x58]
0000000000007aa0         mov        rdx, rbp
0000000000007aa3         call       enter_dir.isra.10                           ; enter_dir.isra.10
0000000000007aa8         test       al, al
0000000000007aaa         jne        loc_78ba

0000000000007ab0         call       j___errno_location                          ; __errno_location
0000000000007ab5         xor        ebp, ebp
0000000000007ab7         mov        dword [rax], 0xc
0000000000007abd         jmp        loc_78ba
0000000000007ac2         align      8

                     loc_7ac8:
0000000000007ac8         cmp        ax, 0x2                                     ; CODE XREF=rpl_fts_read+122
0000000000007acc         je         loc_7d6d

                     loc_7ad2:
0000000000007ad2         mov        rax, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+1087, rpl_fts_read+1585, rpl_fts_read+1651
0000000000007ad6         lea        rsi, qword [rbp+0x108]                      ; argument "__src" for method j_memmove
0000000000007add         mov        rdi, qword [rax+0x48]
0000000000007ae1         mov        rax, qword [rax+0x38]
0000000000007ae5         cmp        byte [rax+rdi-1], 0x2f
0000000000007aea         lea        rdx, qword [rdi-1]
0000000000007aee         cmove      rdi, rdx
0000000000007af2         add        rdi, qword [r12+0x20]
0000000000007af7         mov        byte [rdi], 0x2f
0000000000007afa         mov        rax, qword [rbp+0x60]
0000000000007afe         add        rdi, 0x1                                    ; argument "__dest" for method j_memmove
0000000000007b02         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000007b06         call       j_memmove                                   ; memmove
0000000000007b0b         movzx      eax, word [rbp+0x70]
0000000000007b0f         jmp        loc_7a6e
0000000000007b14         align      8

                     loc_7b18:
0000000000007b18         call       sub_1a90                                    ; sub_1a90, CODE XREF=rpl_fts_read+702
0000000000007b1d         jmp        loc_79ee

                     loc_7b22:
0000000000007b22         and        dh, 0xef                                    ; CODE XREF=rpl_fts_read+521
0000000000007b25         mov        dword [r12+0x48], edx
0000000000007b2a         call       fts_lfree                                   ; fts_lfree
0000000000007b2f         mov        qword [r12+8], 0x0

                     loc_7b38:
0000000000007b38         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+512
0000000000007b3d         mov        rdi, r12
0000000000007b40         call       fts_build                                   ; fts_build
0000000000007b45         test       rax, rax
0000000000007b48         mov        qword [r12+8], rax
0000000000007b4d         je         loc_7c44

0000000000007b53         mov        rbp, rax

                     loc_7b56:
0000000000007b56         mov        qword [r12+8], 0x0                          ; CODE XREF=rpl_fts_read+578, rpl_fts_read+613, rpl_fts_read+1255
0000000000007b5f         jmp        loc_7ad2
0000000000007b64         align      8

                     loc_7b68:
0000000000007b68         test       al, 0x1                                     ; CODE XREF=rpl_fts_read+216
0000000000007b6a         jne        loc_7813

0000000000007b70         mov        rsi, qword [rbx+8]
0000000000007b74         lea        rcx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xaf1a
0000000000007b7b         mov        edx, 0xffffffff
0000000000007b80         mov        rdi, r12
0000000000007b83         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000007b88         test       eax, eax
0000000000007b8a         je         loc_7813

                     loc_7b90:
0000000000007b90         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1178
0000000000007b95         mov        edi, dword [r12+0x48]
0000000000007b9a         mov        eax, dword [rax]
0000000000007b9c         or         edi, 0x2000
0000000000007ba2         mov        dword [rbx+0x40], eax
0000000000007ba5         mov        dword [r12+0x48], edi
0000000000007baa         jmp        loc_7818
0000000000007baf         align      16

                     loc_7bb0:
0000000000007bb0         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+204
0000000000007bb3         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000007bb8         test       eax, eax
0000000000007bba         jne        loc_7b90

0000000000007bbc         jmp        loc_7813
0000000000007bc1         align      8

                     loc_7bc8:
0000000000007bc8         mov        eax, 0x6                                    ; CODE XREF=rpl_fts_read+260
0000000000007bcd         lea        rsi, qword [r12+0x58]
0000000000007bd2         mov        rdx, rbx
0000000000007bd5         mov        word [rbx+0x70], ax
0000000000007bd9         call       leave_dir.isra.12                           ; leave_dir.isra.12
0000000000007bde         mov        edi, dword [r12+0x48]
0000000000007be3         jmp        loc_7833
0000000000007be8         align      16

                     loc_7bf0:
0000000000007bf0         cmp        byte [rbx+0x109], 0x0                       ; CODE XREF=rpl_fts_read+771
0000000000007bf7         jne        loc_7a29

0000000000007bfd         jmp        loc_7a4b

                     loc_7c02:
0000000000007c02         mov        rbp, qword [r12+8]                          ; CODE XREF=rpl_fts_read+549
0000000000007c07         jmp        loc_7b56

                     loc_7c0c:
0000000000007c0c         test       ah, 0x2                                     ; CODE XREF=rpl_fts_read+232
0000000000007c0f         je         loc_7dad

0000000000007c15         mov        esi, edi
0000000000007c17         mov        edx, 0x1
0000000000007c1c         mov        rdi, r12
0000000000007c1f         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000007c24         mov        edi, dword [rbx+0x44]
0000000000007c27         jmp        loc_780e

                     loc_7c2c:
0000000000007c2c         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+453
0000000000007c31         test       sil, 0x4
0000000000007c35         je         loc_7e3c

0000000000007c3b         mov        qword [r12], rbp
0000000000007c3f         jmp        loc_7a86

                     loc_7c44:
0000000000007c44         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1069
0000000000007c49         test       edi, 0x2000
0000000000007c4f         jne        loc_783e

0000000000007c55         mov        r9d, dword [rbp+0x40]
0000000000007c59         test       r9d, r9d
0000000000007c5c         je         loc_7c70

0000000000007c5e         cmp        word [rbp+0x70], 0x4
0000000000007c63         je         loc_7c70

0000000000007c65         mov        r8d, 0x7
0000000000007c6b         mov        word [rbp+0x70], r8w

                     loc_7c70:
0000000000007c70         lea        rsi, qword [r12+0x58]                       ; CODE XREF=rpl_fts_read+1340, rpl_fts_read+1347
0000000000007c75         mov        rdx, rbp
0000000000007c78         call       leave_dir.isra.12                           ; leave_dir.isra.12
0000000000007c7d         jmp        loc_78ba

                     loc_7c82:
0000000000007c82         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_read+169
0000000000007c85         xor        ebp, ebp
0000000000007c87         call       sub_1a90                                    ; sub_1a90
0000000000007c8c         call       j___errno_location                          ; __errno_location
0000000000007c91         mov        dword [rax], 0x0
0000000000007c97         mov        qword [r12], 0x0
0000000000007c9f         jmp        loc_78ba
0000000000007ca4         align      8

                     loc_7ca8:
0000000000007ca8         mov        rbx, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+483
0000000000007cac         cmp        qword [rbx+0x68], 0x0
0000000000007cb1         jne        loc_7cc4

0000000000007cb3         mov        eax, dword [r12+0x48]
0000000000007cb8         and        eax, 0x18
0000000000007cbb         cmp        eax, 0x18
0000000000007cbe         je         loc_7e1d

                     loc_7cc4:
0000000000007cc4         xor        edx, edx                                    ; CODE XREF=rpl_fts_read+1425, rpl_fts_read+1805
0000000000007cc6         mov        rsi, rbp
0000000000007cc9         mov        rdi, r12
0000000000007ccc         call       fts_stat                                    ; fts_stat
0000000000007cd1         mov        edx, dword [rbp+0x90]
0000000000007cd7         mov        word [rbp+0x70], ax
0000000000007cdb         and        edx, 0xf000
0000000000007ce1         cmp        edx, 0x4000
0000000000007ce7         jne        loc_7a7c

0000000000007ced         cmp        qword [rbp+0x58], 0x0
0000000000007cf2         je         loc_7e0e

0000000000007cf8         mov        rcx, qword [rbx+0x68]
0000000000007cfc         lea        rdx, qword [rcx-1]
0000000000007d00         cmp        rdx, 0xfffffffffffffffd
0000000000007d04         ja         loc_7d0a

0000000000007d06         mov        qword [rbx+0x68], rdx

                     loc_7d0a:
0000000000007d0a         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1508
0000000000007d0e         jne        loc_78ba

0000000000007d14         jmp        loc_7a96
0000000000007d19         align      32

                     loc_7d20:
0000000000007d20         mov        rax, qword [rbx+0x48]                       ; CODE XREF=rpl_fts_read+146
0000000000007d24         mov        rdx, qword [r12+0x20]
0000000000007d29         mov        esi, 0x3
0000000000007d2e         mov        qword [r12], rbx
0000000000007d32         mov        rdi, r12
0000000000007d35         mov        byte [rdx+rax], 0x0
0000000000007d39         call       fts_build                                   ; fts_build
0000000000007d3e         test       rax, rax
0000000000007d41         mov        rbx, rax
0000000000007d44         je         loc_7d98

0000000000007d46         mov        rdi, rbp
0000000000007d49         mov        rbp, rbx
0000000000007d4c         call       sub_1a90                                    ; sub_1a90
0000000000007d51         jmp        loc_7ad2
0000000000007d56         align      32

                     loc_7d60:
0000000000007d60         mov        edi, dword [rbp+0x44]                       ; argument "__fd" for method j_close, CODE XREF=rpl_fts_read+351
0000000000007d63         call       j_close                                     ; close
0000000000007d68         jmp        loc_7885

                     loc_7d6d:
0000000000007d6d         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+940
0000000000007d72         mov        rsi, rbx
0000000000007d75         mov        rdi, r12
0000000000007d78         call       fts_stat                                    ; fts_stat
0000000000007d7d         cmp        ax, 0x1
0000000000007d81         mov        word [rbx+0x70], ax
0000000000007d85         je         loc_7de1

                     loc_7d87:
0000000000007d87         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+1738, rpl_fts_read+1769, rpl_fts_read+1907
0000000000007d8c         mov        rbp, rbx
0000000000007d8f         mov        word [rbx+0x74], si
0000000000007d93         jmp        loc_7ad2

                     loc_7d98:
0000000000007d98         test       byte [r12+0x49], 0x20                       ; CODE XREF=rpl_fts_read+1572
0000000000007d9e         jne        loc_783e

0000000000007da4         mov        rbx, qword [rbp+8]
0000000000007da8         jmp        loc_77b8

                     loc_7dad:
0000000000007dad         call       j_fchdir                                    ; fchdir, CODE XREF=rpl_fts_read+1263
0000000000007db2         test       eax, eax
0000000000007db4         je         loc_7dc9

0000000000007db6         call       j___errno_location                          ; __errno_location
0000000000007dbb         mov        eax, dword [rax]
0000000000007dbd         mov        dword [rbx+0x40], eax
0000000000007dc0         or         dword [r12+0x48], 0x2000

                     loc_7dc9:
0000000000007dc9         mov        edi, dword [rbx+0x44]                       ; CODE XREF=rpl_fts_read+1684
0000000000007dcc         jmp        loc_780e

                     loc_7dd1:
0000000000007dd1         or         dword [r12+0x48], 0x2000                    ; CODE XREF=rpl_fts_read+682
0000000000007dda         xor        ebp, ebp
0000000000007ddc         jmp        loc_78ba

                     loc_7de1:
0000000000007de1         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1637
0000000000007de6         test       sil, 0x4
0000000000007dea         jne        loc_7d87

0000000000007dec         mov        edi, dword [r12+0x2c]
0000000000007df1         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xaf1b
0000000000007df8         call       diropen.isra.6                              ; diropen.isra.6
0000000000007dfd         test       eax, eax
0000000000007dff         mov        dword [rbx+0x44], eax
0000000000007e02         js         loc_7e80

0000000000007e04         or         word [rbx+0x72], 0x2
0000000000007e09         jmp        loc_7d87

                     loc_7e0e:
0000000000007e0e         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1490
0000000000007e12         jne        loc_78ba

0000000000007e18         jmp        loc_7a8d

                     loc_7e1d:
0000000000007e1d         mov        esi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1438
0000000000007e22         mov        rdi, rbx
0000000000007e25         call       leaf_optimization                           ; leaf_optimization
0000000000007e2a         cmp        eax, 0x2
0000000000007e2d         jne        loc_7cc4

0000000000007e33         movzx      eax, word [rbp+0x70]
0000000000007e37         jmp        loc_7a7c

                     loc_7e3c:
0000000000007e3c         mov        edi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1301
0000000000007e41         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xaf1b
0000000000007e48         call       diropen.isra.6                              ; diropen.isra.6
0000000000007e4d         test       eax, eax
0000000000007e4f         mov        dword [rbp+0x44], eax
0000000000007e52         js         loc_7e62

0000000000007e54         or         word [rbp+0x72], 0x2
0000000000007e59         movzx      eax, word [rbp+0x70]
0000000000007e5d         jmp        loc_7a6e

                     loc_7e62:
0000000000007e62         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1842
0000000000007e67         mov        eax, dword [rax]
0000000000007e69         mov        r11d, 0x7
0000000000007e6f         mov        word [rbp+0x70], r11w
0000000000007e74         mov        dword [rbp+0x40], eax
0000000000007e77         mov        qword [r12], rbp
0000000000007e7b         jmp        loc_78ba

                     loc_7e80:
0000000000007e80         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1762
0000000000007e85         mov        eax, dword [rax]
0000000000007e87         mov        edi, 0x7
0000000000007e8c         mov        word [rbx+0x70], di
0000000000007e90         mov        dword [rbx+0x40], eax
0000000000007e93         jmp        loc_7d87
0000000000007e98         align      32                                          ; End of unwind block (FDE at 0xc334)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_set:
0000000000007ea0         cmp        edx, 0x4                                    ; Begin of unwind block (FDE at 0xc398), CODE XREF=main+1153, sub_1fe0+1330, sub_1fe0+1654
0000000000007ea3         ja         loc_7eb0

0000000000007ea5         mov        word [rsi+0x74], dx
0000000000007ea9         xor        eax, eax
0000000000007eab         ret
                        ; endp
0000000000007eac         align      16

                     loc_7eb0:
0000000000007eb0         sub        rsp, 0x8                                    ; CODE XREF=rpl_fts_set+3
0000000000007eb4         call       j___errno_location                          ; __errno_location
0000000000007eb9         mov        dword [rax], 0x16
0000000000007ebf         mov        eax, 0x1
0000000000007ec4         add        rsp, 0x8
0000000000007ec8         ret
                        ; endp
0000000000007ec9         align      16                                          ; End of unwind block (FDE at 0xc398)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_children:
0000000000007ed0         push       r14                                         ; Begin of unwind block (FDE at 0xc3b0)
0000000000007ed2         push       r13
0000000000007ed4         push       r12
0000000000007ed6         push       rbp
0000000000007ed7         mov        r12d, esi
0000000000007eda         push       rbx
0000000000007edb         mov        rbx, rdi
0000000000007ede         call       j___errno_location                          ; __errno_location
0000000000007ee3         test       r12d, 0xffffefff
0000000000007eea         mov        r13, rax
0000000000007eed         jne        loc_7fd8

0000000000007ef3         mov        rbp, qword [rbx]
0000000000007ef6         mov        dword [rax], 0x0
0000000000007efc         test       byte [rbx+0x49], 0x20
0000000000007f00         jne        loc_7f80

0000000000007f02         movzx      eax, word [rbp+0x70]
0000000000007f06         cmp        ax, 0x9
0000000000007f0a         je         loc_7f70

0000000000007f0c         cmp        ax, 0x1
0000000000007f10         jne        loc_7f80

0000000000007f12         mov        rdi, qword [rbx+8]
0000000000007f16         test       rdi, rdi
0000000000007f19         je         loc_7f20

0000000000007f1b         call       fts_lfree                                   ; fts_lfree

                     loc_7f20:
0000000000007f20         cmp        r12d, 0x1000                                ; CODE XREF=rpl_fts_children+73
0000000000007f27         mov        r14d, 0x1
0000000000007f2d         jne        loc_7f3c

0000000000007f2f         or         dword [rbx+0x48], 0x1000
0000000000007f36         mov        r14d, 0x2

                     loc_7f3c:
0000000000007f3c         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_children+93
0000000000007f41         jne        loc_7f55

0000000000007f43         mov        rax, qword [rbp+0x30]
0000000000007f47         cmp        byte [rax], 0x2f
0000000000007f4a         je         loc_7f55

0000000000007f4c         mov        esi, dword [rbx+0x48]
0000000000007f4f         test       sil, 0x4
0000000000007f53         je         loc_7f90

                     loc_7f55:
0000000000007f55         mov        esi, r14d                                   ; CODE XREF=rpl_fts_children+113, rpl_fts_children+122
0000000000007f58         mov        rdi, rbx
0000000000007f5b         call       fts_build                                   ; fts_build
0000000000007f60         mov        qword [rbx+8], rax

                     loc_7f64:
0000000000007f64         pop        rbx                                         ; CODE XREF=rpl_fts_children+256, rpl_fts_children+272, rpl_fts_children+307, rpl_fts_children+329
0000000000007f65         pop        rbp
0000000000007f66         pop        r12
0000000000007f68         pop        r13
0000000000007f6a         pop        r14
0000000000007f6c         ret
                        ; endp
0000000000007f6d         align      16

                     loc_7f70:
0000000000007f70         pop        rbx                                         ; CODE XREF=rpl_fts_children+58
0000000000007f71         mov        rax, qword [rbp+0x10]
0000000000007f75         pop        rbp
0000000000007f76         pop        r12
0000000000007f78         pop        r13
0000000000007f7a         pop        r14
0000000000007f7c         ret
                        ; endp
0000000000007f7d         align      128

                     loc_7f80:
0000000000007f80         pop        rbx                                         ; CODE XREF=rpl_fts_children+48, rpl_fts_children+64
0000000000007f81         xor        eax, eax
0000000000007f83         pop        rbp
0000000000007f84         pop        r12
0000000000007f86         pop        r13
0000000000007f88         pop        r14
0000000000007f8a         ret
                        ; endp
0000000000007f8b         align      16

                     loc_7f90:
0000000000007f90         mov        edi, dword [rbx+0x2c]                       ; CODE XREF=rpl_fts_children+131
0000000000007f93         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xaf1b
0000000000007f9a         call       diropen.isra.6                              ; diropen.isra.6
0000000000007f9f         test       eax, eax
0000000000007fa1         mov        ebp, eax
0000000000007fa3         js         loc_7ff9

0000000000007fa5         mov        esi, r14d
0000000000007fa8         mov        rdi, rbx
0000000000007fab         call       fts_build                                   ; fts_build
0000000000007fb0         test       byte [rbx+0x49], 0x2
0000000000007fb4         mov        qword [rbx+8], rax
0000000000007fb8         jne        loc_7fe8

0000000000007fba         mov        edi, ebp                                    ; argument "__fd" for method j_fchdir
0000000000007fbc         call       j_fchdir                                    ; fchdir
0000000000007fc1         test       eax, eax
0000000000007fc3         jne        loc_8008

0000000000007fc5         mov        edi, ebp                                    ; argument "__fd" for method j_close
0000000000007fc7         call       j_close                                     ; close

                     loc_7fcc:
0000000000007fcc         mov        rax, qword [rbx+8]                          ; CODE XREF=rpl_fts_children+295
0000000000007fd0         jmp        loc_7f64
0000000000007fd2         align      8

                     loc_7fd8:
0000000000007fd8         mov        dword [rax], 0x16                           ; CODE XREF=rpl_fts_children+29
0000000000007fde         xor        eax, eax
0000000000007fe0         jmp        loc_7f64
0000000000007fe5         align      8

                     loc_7fe8:
0000000000007fe8         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_children+232
0000000000007fed         mov        esi, ebp
0000000000007fef         mov        rdi, rbx
0000000000007ff2         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000007ff7         jmp        loc_7fcc

                     loc_7ff9:
0000000000007ff9         mov        qword [rbx+8], 0x0                          ; CODE XREF=rpl_fts_children+211
0000000000008001         xor        eax, eax
0000000000008003         jmp        loc_7f64

                     loc_8008:
0000000000008008         mov        ebx, dword [r13]                            ; CODE XREF=rpl_fts_children+243
000000000000800c         mov        edi, ebp                                    ; argument "__fd" for method j_close
000000000000800e         call       j_close                                     ; close
0000000000008013         xor        eax, eax
0000000000008015         mov        dword [r13], ebx
0000000000008019         jmp        loc_7f64
000000000000801e         align      32                                          ; End of unwind block (FDE at 0xc3b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000008020         push       r13                                         ; Begin of unwind block (FDE at 0xc414), CODE XREF=sub_3df0+534
0000000000008022         push       r12
0000000000008024         mov        r13, rsi
0000000000008027         push       rbp
0000000000008028         push       rbx
0000000000008029         mov        rbx, rdi
000000000000802c         mov        r12, rdx
000000000000802f         sub        rsp, 0x18
0000000000008033         mov        rax, qword [fs:0x28]
000000000000803c         mov        qword [rsp+0x38+var_30], rax
0000000000008041         xor        eax, eax
0000000000008043         lea        rax, qword [rsp+0x38+var_34]
0000000000008048         test       rdi, rdi
000000000000804b         cmove      rbx, rax
000000000000804f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000008052         call       j_mbrtowc                                   ; mbrtowc
0000000000008057         cmp        rax, 0xfffffffffffffffd
000000000000805b         mov        rbp, rax
000000000000805e         jbe        loc_8080

0000000000008060         test       r12, r12
0000000000008063         je         loc_8080

0000000000008065         xor        edi, edi
0000000000008067         call       hard_locale                                 ; hard_locale
000000000000806c         test       al, al
000000000000806e         jne        loc_8080

0000000000008070         movzx      eax, byte [r13]
0000000000008075         mov        ebp, 0x1
000000000000807a         mov        dword [rbx], eax
000000000000807c         nop        dword [rax]

                     loc_8080:
0000000000008080         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000008085         xor        rdx, qword [fs:0x28]
000000000000808e         mov        rax, rbp
0000000000008091         jne        loc_809e

0000000000008093         add        rsp, 0x18
0000000000008097         pop        rbx
0000000000008098         pop        rbp
0000000000008099         pop        r12
000000000000809b         pop        r13
000000000000809d         ret
                        ; endp

                     loc_809e:
000000000000809e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000080a3         align      16                                          ; End of unwind block (FDE at 0xc414)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000080b0         push       r12                                         ; Begin of unwind block (FDE at 0xc454), CODE XREF=close_stdout+13, close_stdout+51
00000000000080b2         push       rbp
00000000000080b3         mov        rbp, rdi
00000000000080b6         push       rbx
00000000000080b7         call       j___fpending                                ; __fpending
00000000000080bc         mov        ebx, dword [rbp]
00000000000080bf         mov        rdi, rbp
00000000000080c2         mov        r12, rax
00000000000080c5         call       rpl_fclose                                  ; rpl_fclose
00000000000080ca         and        ebx, 0x20
00000000000080cd         test       ebx, ebx
00000000000080cf         jne        loc_80e8

00000000000080d1         test       eax, eax
00000000000080d3         je         loc_80df

00000000000080d5         test       r12, r12
00000000000080d8         mov        eax, 0xffffffff
00000000000080dd         je         loc_8118

                     loc_80df:
00000000000080df         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000080e0         pop        rbp
00000000000080e1         pop        r12
00000000000080e3         ret
                        ; endp
00000000000080e4         align      8

                     loc_80e8:
00000000000080e8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000080ea         jne        loc_8108

00000000000080ec         call       j___errno_location                          ; __errno_location
00000000000080f1         mov        dword [rax], 0x0
00000000000080f7         mov        eax, 0xffffffff
00000000000080fc         pop        rbx
00000000000080fd         pop        rbp
00000000000080fe         pop        r12
0000000000008100         ret
                        ; endp
0000000000008101         align      8

                     loc_8108:
0000000000008108         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000008109         mov        eax, 0xffffffff
000000000000810e         pop        rbp
000000000000810f         pop        r12
0000000000008111         ret
                        ; endp
0000000000008112         align      8

                     loc_8118:
0000000000008118         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000811d         cmp        dword [rax], 0x9
0000000000008120         pop        rbx
0000000000008121         pop        rbp
0000000000008122         pop        r12
0000000000008124         setne      al
0000000000008127         movzx      eax, al
000000000000812a         neg        eax
000000000000812c         ret
                        ; endp
000000000000812d         align      16                                          ; End of unwind block (FDE at 0xc454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check_init:
0000000000008130         mov        qword [rdi+0x10], 0x0                       ; Begin of unwind block (FDE at 0xc4a4), CODE XREF=setup_dir.isra.4+87
0000000000008138         mov        dword [rdi+0x18], 0x95f616
000000000000813f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check:
0000000000008140         cmp        dword [rdi+0x18], 0x95f616                  ; End of unwind block (FDE at 0xc4a4), Begin of unwind block (FDE at 0xc4b8), CODE XREF=enter_dir.isra.10+136
0000000000008147         jne        loc_81a7

0000000000008149         mov        rdx, qword [rdi+0x10]
000000000000814d         mov        rcx, qword [rsi+8]
0000000000008151         test       rdx, rdx
0000000000008154         je         loc_8170

0000000000008156         cmp        qword [rdi], rcx
0000000000008159         je         loc_8188

                     loc_815b:
000000000000815b         lea        r8, qword [rdx+1]                           ; CODE XREF=cycle_check+79
000000000000815f         xor        eax, eax
0000000000008161         test       rdx, r8
0000000000008164         mov        qword [rdi+0x10], r8
0000000000008168         je         loc_81a0

000000000000816a         ret
                        ; endp
000000000000816c         align      16

                     loc_8170:
0000000000008170         mov        qword [rdi+0x10], 0x1                       ; CODE XREF=cycle_check+20

                     loc_8178:
0000000000008178         mov        rax, qword [rsi]                            ; CODE XREF=cycle_check+101
000000000000817b         mov        qword [rdi], rcx
000000000000817e         mov        qword [rdi+8], rax
0000000000008182         xor        eax, eax
0000000000008184         ret
                        ; endp
0000000000008185         align      8

                     loc_8188:
0000000000008188         mov        rax, qword [rdi+8]                          ; CODE XREF=cycle_check+25
000000000000818c         cmp        qword [rsi], rax
000000000000818f         jne        loc_815b

                     loc_8191:
0000000000008191         mov        eax, 0x1                                    ; CODE XREF=cycle_check+99
0000000000008196         ret
                        ; endp
0000000000008197         align      32

                     loc_81a0:
00000000000081a0         test       r8, r8                                      ; CODE XREF=cycle_check+40
00000000000081a3         je         loc_8191

00000000000081a5         jmp        loc_8178

                     loc_81a7:
00000000000081a7         lea        rcx, qword [__PRETTY_FUNCTION__.3994]       ; argument "__function" for method j___assert_fail, "cycle_check", CODE XREF=cycle_check+7
00000000000081ae         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/cycle-check.c"
00000000000081b5         lea        rdi, qword [aStatemagic9827]                ; argument "__assertion" for method j___assert_fail, "state->magic == 9827862"
00000000000081bc         sub        rsp, 0x8
00000000000081c0         mov        edx, 0x3c                                   ; argument "__line" for method j___assert_fail
00000000000081c5         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000081ca         align      16                                          ; End of unwind block (FDE at 0xc4b8)

                     open_safer:
00000000000081d0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xc4d4), CODE XREF=diropen.isra.6+35
00000000000081d4         mov        qword [rsp+0x58+var_28], rdx
00000000000081d9         xor        edx, edx
00000000000081db         mov        rax, qword [fs:0x28]
00000000000081e4         mov        qword [rsp+0x58+var_40], rax
00000000000081e9         xor        eax, eax
00000000000081eb         test       sil, 0x40
00000000000081ef         jne        loc_8218

                     loc_81f1:
00000000000081f1         xor        eax, eax                                    ; CODE XREF=open_safer+103
00000000000081f3         call       j_open                                      ; open
00000000000081f8         mov        edi, eax
00000000000081fa         call       fd_safer                                    ; fd_safer
00000000000081ff         mov        rcx, qword [rsp+0x58+var_40]
0000000000008204         xor        rcx, qword [fs:0x28]
000000000000820d         jne        loc_8239

000000000000820f         add        rsp, 0x58
0000000000008213         ret
                        ; endp
0000000000008214         align      8

                     loc_8218:
0000000000008218         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
000000000000821d         mov        dword [rsp+0x58+var_58], 0x10
0000000000008224         mov        edx, dword [rsp+0x58+var_28]
0000000000008228         mov        qword [rsp+0x58+var_50], rax
000000000000822d         lea        rax, qword [rsp+0x58+var_38]
0000000000008232         mov        qword [rsp+0x58+var_48], rax
0000000000008237         jmp        loc_81f1

                     loc_8239:
0000000000008239         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
000000000000823e         align      64                                          ; End of unwind block (FDE at 0xc4d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000008240         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc4f4), CODE XREF=rpl_mbrtowc+71
0000000000008244         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000008246         call       j_setlocale                                 ; setlocale
000000000000824b         mov        rdx, rax
000000000000824e         mov        eax, 0x1
0000000000008253         test       rdx, rdx
0000000000008256         je         loc_8275

0000000000008258         lea        rdi, qword [__PRETTY_FUNCTION__.3994+12]    ; 0xaf9c
000000000000825f         mov        ecx, 0x2
0000000000008264         mov        rsi, rdx
0000000000008267         rep  cmpsb byte [rsi], byte [rdi]
0000000000008269         seta       cl
000000000000826c         sbb        cl, 0x0
000000000000826f         xor        eax, eax
0000000000008271         test       cl, cl
0000000000008273         jne        loc_8280

                     loc_8275:
0000000000008275         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000008279         ret
                        ; endp
000000000000827a         align      128

                     loc_8280:
0000000000008280         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000008287         mov        ecx, 0x6
000000000000828c         mov        rsi, rdx
000000000000828f         rep  cmpsb byte [rsi], byte [rdi]
0000000000008291         seta       al
0000000000008294         sbb        al, 0x0
0000000000008296         test       al, al
0000000000008298         setne      al
000000000000829b         add        rsp, 0x8
000000000000829f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
00000000000082a0         cmp        rdi, 0xa                                    ; End of unwind block (FDE at 0xc4f4), Begin of unwind block (FDE at 0xc514), CODE XREF=hash_initialize+123, hash_rehash+123
00000000000082a4         mov        eax, 0xa
00000000000082a9         movabs     r9, 0xaaaaaaaaaaaaaaab
00000000000082b3         cmovb      rdi, rax
00000000000082b7         or         rdi, 0x1
00000000000082bb         cmp        rdi, 0xffffffffffffffff
00000000000082bf         je         loc_832f

00000000000082c1         nop        dword [rax]

                     loc_82c8:
00000000000082c8         mov        rax, rdi                                    ; CODE XREF=next_prime+141
00000000000082cb         mov        rcx, rdi
00000000000082ce         mul        r9
00000000000082d1         mov        rax, rdx
00000000000082d4         shr        rax, 0x1
00000000000082d7         lea        rax, qword [rax+rax*2]
00000000000082db         sub        rcx, rax
00000000000082de         cmp        rdi, 0x9
00000000000082e2         mov        rax, rcx
00000000000082e5         jbe        loc_8320

00000000000082e7         test       rcx, rcx
00000000000082ea         je         loc_8325

00000000000082ec         mov        r8d, 0x10
00000000000082f2         mov        esi, 0x9
00000000000082f7         mov        ecx, 0x3
00000000000082fc         jmp        loc_8309
00000000000082fe         align      256

                     loc_8300:
0000000000008300         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000008304         test       rdx, rdx
0000000000008307         je         loc_8325

                     loc_8309:
0000000000008309         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000830d         xor        edx, edx
000000000000830f         mov        rax, rdi
0000000000008312         div        rcx
0000000000008315         add        rsi, r8
0000000000008318         cmp        rsi, rdi
000000000000831b         mov        rax, rdx
000000000000831e         jb         loc_8300

                     loc_8320:
0000000000008320         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000008323         jne        loc_832f

                     loc_8325:
0000000000008325         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000008329         cmp        rdi, 0xffffffffffffffff
000000000000832d         jne        loc_82c8

                     loc_832f:
000000000000832f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000008332         ret
                        ; endp
0000000000008333         align      64                                          ; End of unwind block (FDE at 0xc514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000008340         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc528), DATA XREF=hash_initialize+4
0000000000008343         xor        edx, edx
0000000000008345         ror        rax, 0x3
0000000000008349         div        rsi
000000000000834c         mov        rax, rdx
000000000000834f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
0000000000008350         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0xc528), Begin of unwind block (FDE at 0xc53c), DATA XREF=hash_initialize+48
0000000000008353         sete       al
0000000000008356         ret
                        ; endp
0000000000008357         align      32                                          ; End of unwind block (FDE at 0xc53c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
0000000000008360         push       rbx                                         ; Begin of unwind block (FDE at 0xc550), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
0000000000008361         mov        rbx, rdi
0000000000008364         mov        rdi, rsi
0000000000008367         mov        rsi, qword [rbx+0x10]
000000000000836b         call       qword [rbx+0x30]
000000000000836e         cmp        qword [rbx+0x10], rax
0000000000008372         jbe        loc_837d

0000000000008374         shl        rax, 0x4
0000000000008378         add        rax, qword [rbx]
000000000000837b         pop        rbx
000000000000837c         ret
                        ; endp

                     loc_837d:
000000000000837d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
0000000000008382         align      16                                          ; End of unwind block (FDE at 0xc550)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
0000000000008390         push       r14                                         ; Begin of unwind block (FDE at 0xc56c), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
0000000000008392         push       r13
0000000000008394         mov        r14, rdx
0000000000008397         push       r12
0000000000008399         push       rbp
000000000000839a         mov        r12, rdi
000000000000839d         push       rbx
000000000000839e         mov        rbp, rsi
00000000000083a1         mov        r13d, ecx
00000000000083a4         call       safe_hasher                                 ; safe_hasher
00000000000083a9         mov        qword [r14], rax
00000000000083ac         mov        rsi, qword [rax]
00000000000083af         test       rsi, rsi
00000000000083b2         je         loc_84a0

00000000000083b8         cmp        rsi, rbp
00000000000083bb         mov        rbx, rax
00000000000083be         je         loc_8453

00000000000083c4         mov        rdi, rbp
00000000000083c7         call       qword [r12+0x38]
00000000000083cc         test       al, al
00000000000083ce         jne        loc_8450

00000000000083d4         mov        rax, qword [rbx+8]
00000000000083d8         test       rax, rax
00000000000083db         je         loc_84a0

00000000000083e1         mov        rsi, qword [rax]
00000000000083e4         cmp        rbp, rsi
00000000000083e7         jne        loc_8409

00000000000083e9         jmp        loc_841c
00000000000083eb         align      16

                     loc_83f0:
00000000000083f0         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
00000000000083f4         mov        rax, qword [rbx+8]
00000000000083f8         test       rax, rax
00000000000083fb         je         loc_84a0

0000000000008401         mov        rsi, qword [rax]
0000000000008404         cmp        rsi, rbp
0000000000008407         je         loc_841c

                     loc_8409:
0000000000008409         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000840c         call       qword [r12+0x38]
0000000000008411         test       al, al
0000000000008413         je         loc_83f0

0000000000008415         mov        rax, qword [rbx+8]
0000000000008419         mov        rsi, qword [rax]

                     loc_841c:
000000000000841c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000841f         je         loc_843e

0000000000008421         mov        rdx, qword [rax+8]
0000000000008425         mov        qword [rbx+8], rdx
0000000000008429         mov        qword [rax], 0x0
0000000000008430         mov        rdx, qword [r12+0x48]
0000000000008435         mov        qword [rax+8], rdx
0000000000008439         mov        qword [r12+0x48], rax

                     loc_843e:
000000000000843e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000843f         mov        rax, rsi
0000000000008442         pop        rbp
0000000000008443         pop        r12
0000000000008445         pop        r13
0000000000008447         pop        r14
0000000000008449         ret
                        ; endp
000000000000844a         align      16

                     loc_8450:
0000000000008450         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_8453:
0000000000008453         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
0000000000008456         je         loc_843e

0000000000008458         mov        rax, qword [rbx+8]
000000000000845c         test       rax, rax
000000000000845f         je         loc_8490

0000000000008461         movdqu     xmm0, xmmword [rax]
0000000000008465         movups     xmmword [rbx], xmm0
0000000000008468         mov        qword [rax], 0x0
000000000000846f         mov        rdx, qword [r12+0x48]
0000000000008474         mov        qword [rax+8], rdx
0000000000008478         mov        qword [r12+0x48], rax
000000000000847d         mov        rax, rsi
0000000000008480         pop        rbx
0000000000008481         pop        rbp
0000000000008482         pop        r12
0000000000008484         pop        r13
0000000000008486         pop        r14
0000000000008488         ret
                        ; endp
0000000000008489         align      16

                     loc_8490:
0000000000008490         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
0000000000008497         jmp        loc_843e
0000000000008499         align      32

                     loc_84a0:
00000000000084a0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
00000000000084a2         pop        rbx
00000000000084a3         mov        rax, rsi
00000000000084a6         pop        rbp
00000000000084a7         pop        r12
00000000000084a9         pop        r13
00000000000084ab         pop        r14
00000000000084ad         ret
                        ; endp
00000000000084ae         align      16                                          ; End of unwind block (FDE at 0xc56c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
00000000000084b0         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xc5cc), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
00000000000084b3         lea        rcx, qword [default_tuning]                 ; default_tuning
00000000000084ba         mov        eax, 0x1
00000000000084bf         cmp        rdx, rcx
00000000000084c2         je         loc_8525

00000000000084c4         movss      xmm0, dword [rdx+8]
00000000000084c9         ucomiss    xmm0, dword [float_b034]                    ; float_b034
00000000000084d0         jbe        loc_8520

00000000000084d2         movss      xmm1, dword [float_b038]                    ; float_b038
00000000000084da         ucomiss    xmm1, xmm0
00000000000084dd         jbe        loc_8520

00000000000084df         movss      xmm1, dword [rdx+0xc]
00000000000084e4         ucomiss    xmm1, dword [float_b03c]                    ; float_b03c
00000000000084eb         jbe        loc_8520

00000000000084ed         movss      xmm1, dword [rdx]
00000000000084f1         ucomiss    xmm1, dword [float_b040]                    ; float_b040
00000000000084f8         jb         loc_8520

00000000000084fa         addss      xmm1, dword [float_b034]                    ; float_b034
0000000000008502         movss      xmm2, dword [rdx+4]
0000000000008507         ucomiss    xmm2, xmm1
000000000000850a         jbe        loc_8520

000000000000850c         movss      xmm3, dword [float_b044]                    ; float_b044
0000000000008514         ucomiss    xmm3, xmm2
0000000000008517         jb         loc_8520

0000000000008519         ucomiss    xmm0, xmm1
000000000000851c         ja         loc_8525

000000000000851e         nop

                     loc_8520:
0000000000008520         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000008523         xor        eax, eax

                     loc_8525:
0000000000008525         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000008527         align      16                                          ; End of unwind block (FDE at 0xc5cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000008530         push       r15                                         ; Begin of unwind block (FDE at 0xc5e0), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000008532         push       r14
0000000000008534         push       r13
0000000000008536         push       r12
0000000000008538         push       rbp
0000000000008539         push       rbx
000000000000853a         sub        rsp, 0x8
000000000000853e         mov        r12, qword [rsi]
0000000000008541         cmp        r12, qword [rsi+8]
0000000000008545         jae        loc_8628

000000000000854b         mov        rbp, rdi
000000000000854e         mov        r13, rsi
0000000000008551         mov        r14d, edx
0000000000008554         nop        dword [rax]

                     loc_8558:
0000000000008558         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000855c         test       r15, r15
000000000000855f         je         loc_861a

0000000000008565         mov        rbx, qword [r12+8]
000000000000856a         test       rbx, rbx
000000000000856d         jne        loc_858c

000000000000856f         jmp        loc_85cb
0000000000008571         align      8

                     loc_8578:
0000000000008578         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000857c         test       rdx, rdx
000000000000857f         mov        qword [rbx+8], rcx
0000000000008583         mov        qword [rax+8], rbx
0000000000008587         mov        rbx, rdx
000000000000858a         je         loc_85c7

                     loc_858c:
000000000000858c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000858f         mov        rdi, rbp
0000000000008592         mov        rsi, r15
0000000000008595         call       safe_hasher                                 ; safe_hasher
000000000000859a         cmp        qword [rax], 0x0
000000000000859e         mov        rdx, qword [rbx+8]
00000000000085a2         jne        loc_8578

00000000000085a4         mov        qword [rax], r15
00000000000085a7         add        qword [rbp+0x18], 0x1
00000000000085ac         test       rdx, rdx
00000000000085af         mov        qword [rbx], 0x0
00000000000085b6         mov        rax, qword [rbp+0x48]
00000000000085ba         mov        qword [rbx+8], rax
00000000000085be         mov        qword [rbp+0x48], rbx
00000000000085c2         mov        rbx, rdx
00000000000085c5         jne        loc_858c

                     loc_85c7:
00000000000085c7         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_85cb:
00000000000085cb         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
00000000000085ce         mov        qword [r12+8], 0x0
00000000000085d7         jne        loc_861a

00000000000085d9         mov        rsi, r15
00000000000085dc         mov        rdi, rbp
00000000000085df         call       safe_hasher                                 ; safe_hasher
00000000000085e4         cmp        qword [rax], 0x0
00000000000085e8         mov        rbx, rax
00000000000085eb         je         loc_8640

00000000000085ed         mov        rax, qword [rbp+0x48]
00000000000085f1         test       rax, rax
00000000000085f4         je         loc_8650

00000000000085f6         mov        rdx, qword [rax+8]
00000000000085fa         mov        qword [rbp+0x48], rdx

                     loc_85fe:
00000000000085fe         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
0000000000008602         mov        qword [rax], r15
0000000000008605         mov        qword [rax+8], rdx
0000000000008609         mov        qword [rbx+8], rax

                     loc_860d:
000000000000860d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
0000000000008615         sub        qword [r13+0x18], 0x1

                     loc_861a:
000000000000861a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000861e         cmp        qword [r13+8], r12
0000000000008622         ja         loc_8558

                     loc_8628:
0000000000008628         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000862c         mov        eax, 0x1
0000000000008631         pop        rbx
0000000000008632         pop        rbp
0000000000008633         pop        r12
0000000000008635         pop        r13
0000000000008637         pop        r14
0000000000008639         pop        r15
000000000000863b         ret
                        ; endp
000000000000863c         align      64

                     loc_8640:
0000000000008640         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000008643         add        qword [rbp+0x18], 0x1
0000000000008648         jmp        loc_860d
000000000000864a         align      16

                     loc_8650:
0000000000008650         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000008655         call       j_malloc                                    ; malloc
000000000000865a         test       rax, rax
000000000000865d         jne        loc_85fe

000000000000865f         add        rsp, 0x8
0000000000008663         xor        eax, eax
0000000000008665         pop        rbx
0000000000008666         pop        rbp
0000000000008667         pop        r12
0000000000008669         pop        r13
000000000000866b         pop        r14
000000000000866d         pop        r15
000000000000866f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000008670         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0xc5e0), Begin of unwind block (FDE at 0xc640)
0000000000008674         ret
                        ; endp
0000000000008675         align      128                                         ; End of unwind block (FDE at 0xc640)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000008680         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0xc654)
0000000000008684         ret
                        ; endp
0000000000008685         align      16                                          ; End of unwind block (FDE at 0xc654)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
0000000000008690         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0xc668)
0000000000008694         ret
                        ; endp
0000000000008695         align      32                                          ; End of unwind block (FDE at 0xc668)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
00000000000086a0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0xc67c)
00000000000086a3         mov        rdi, qword [rdi+8]
00000000000086a7         xor        eax, eax
00000000000086a9         cmp        rsi, rdi
00000000000086ac         jae        loc_86e7

00000000000086ae         nop

                     loc_86b0:
00000000000086b0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
00000000000086b4         je         loc_86dc

00000000000086b6         mov        rdx, qword [rsi+8]
00000000000086ba         mov        ecx, 0x1
00000000000086bf         test       rdx, rdx
00000000000086c2         je         loc_86d5

00000000000086c4         nop        dword [rax]

                     loc_86c8:
00000000000086c8         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
00000000000086cc         add        rcx, 0x1
00000000000086d0         test       rdx, rdx
00000000000086d3         jne        loc_86c8

                     loc_86d5:
00000000000086d5         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
00000000000086d8         cmovb      rax, rcx

                     loc_86dc:
00000000000086dc         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
00000000000086e0         cmp        rsi, rdi
00000000000086e3         jb         loc_86b0

00000000000086e5         ret
                        ; endp

                     loc_86e7:
00000000000086e7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
00000000000086e9         align      16                                          ; End of unwind block (FDE at 0xc67c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
00000000000086f0         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0xc690)
00000000000086f3         mov        r8, qword [rdi+8]
00000000000086f7         xor        edx, edx
00000000000086f9         xor        esi, esi
00000000000086fb         cmp        rcx, r8
00000000000086fe         jae        loc_8736

                     loc_8700:
0000000000008700         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
0000000000008704         je         loc_872d

0000000000008706         mov        rax, qword [rcx+8]
000000000000870a         add        rsi, 0x1
000000000000870e         add        rdx, 0x1
0000000000008712         test       rax, rax
0000000000008715         je         loc_872d

0000000000008717         nop        word [rax+rax]

                     loc_8720:
0000000000008720         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
0000000000008724         add        rdx, 0x1
0000000000008728         test       rax, rax
000000000000872b         jne        loc_8720

                     loc_872d:
000000000000872d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
0000000000008731         cmp        rcx, r8
0000000000008734         jb         loc_8700

                     loc_8736:
0000000000008736         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
0000000000008738         cmp        qword [rdi+0x18], rsi
000000000000873c         je         loc_8740

000000000000873e         ret
                        ; endp

                     loc_8740:
0000000000008740         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000008744         sete       al
0000000000008747         ret
                        ; endp
0000000000008748         align      16                                          ; End of unwind block (FDE at 0xc690)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000008750         push       r13                                         ; Begin of unwind block (FDE at 0xc6a4)
0000000000008752         push       r12
0000000000008754         mov        r12, rsi
0000000000008757         push       rbp
0000000000008758         push       rbx
0000000000008759         xor        ebx, ebx
000000000000875b         sub        rsp, 0x8
000000000000875f         mov        rsi, qword [rdi]
0000000000008762         mov        rcx, qword [rdi+0x20]
0000000000008766         mov        rbp, qword [rdi+0x10]
000000000000876a         mov        r13, qword [rdi+0x18]
000000000000876e         mov        rdi, qword [rdi+8]
0000000000008772         cmp        rsi, rdi
0000000000008775         jae        loc_87b5

0000000000008777         nop        word [rax+rax]

                     loc_8780:
0000000000008780         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000008784         je         loc_87ac

0000000000008786         mov        rax, qword [rsi+8]
000000000000878a         mov        edx, 0x1
000000000000878f         test       rax, rax
0000000000008792         je         loc_87a5

0000000000008794         nop        dword [rax]

                     loc_8798:
0000000000008798         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000879c         add        rdx, 0x1
00000000000087a0         test       rax, rax
00000000000087a3         jne        loc_8798

                     loc_87a5:
00000000000087a5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
00000000000087a8         cmovb      rbx, rdx

                     loc_87ac:
00000000000087ac         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
00000000000087b0         cmp        rsi, rdi
00000000000087b3         jb         loc_8780

                     loc_87b5:
00000000000087b5         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
00000000000087bc         mov        esi, 0x1
00000000000087c1         mov        rdi, r12
00000000000087c4         xor        eax, eax
00000000000087c6         call       j___fprintf_chk                             ; __fprintf_chk
00000000000087cb         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
00000000000087d2         xor        eax, eax
00000000000087d4         mov        rcx, rbp
00000000000087d7         mov        esi, 0x1
00000000000087dc         mov        rdi, r12
00000000000087df         call       j___fprintf_chk                             ; __fprintf_chk
00000000000087e4         test       r13, r13
00000000000087e7         js         loc_8850

00000000000087e9         pxor       xmm0, xmm0
00000000000087ed         test       rbp, rbp
00000000000087f0         cvtsi2sd   xmm0, r13
00000000000087f5         mulsd      xmm0, qword [float_b050+8]                  ; 0xb058
00000000000087fd         js         loc_8879

                     loc_87ff:
00000000000087ff         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
0000000000008803         cvtsi2sd   xmm1, rbp

                     loc_8808:
0000000000008808         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000880c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
0000000000008813         mov        rcx, r13
0000000000008816         mov        rdi, r12
0000000000008819         mov        esi, 0x1
000000000000881e         mov        eax, 0x1
0000000000008823         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008828         add        rsp, 0x8
000000000000882c         mov        rcx, rbx
000000000000882f         mov        rdi, r12
0000000000008832         pop        rbx
0000000000008833         pop        rbp
0000000000008834         pop        r12
0000000000008836         pop        r13
0000000000008838         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000883f         mov        esi, 0x1
0000000000008844         xor        eax, eax
0000000000008846         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000884b         align      16

                     loc_8850:
0000000000008850         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000008853         mov        rdx, r13
0000000000008856         pxor       xmm0, xmm0
000000000000885a         shr        rax, 0x1
000000000000885d         and        edx, 0x1
0000000000008860         or         rax, rdx
0000000000008863         test       rbp, rbp
0000000000008866         cvtsi2sd   xmm0, rax
000000000000886b         addsd      xmm0, xmm0
000000000000886f         mulsd      xmm0, qword [float_b050+8]                  ; 0xb058
0000000000008877         jns        loc_87ff

                     loc_8879:
0000000000008879         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000887c         pxor       xmm1, xmm1
0000000000008880         shr        rax, 0x1
0000000000008883         and        ebp, 0x1
0000000000008886         or         rax, rbp
0000000000008889         cvtsi2sd   xmm1, rax
000000000000888e         addsd      xmm1, xmm1
0000000000008892         jmp        loc_8808
0000000000008897         align      32                                          ; End of unwind block (FDE at 0xc6a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
00000000000088a0         push       r12                                         ; Begin of unwind block (FDE at 0xc6e0), CODE XREF=filesystem_type+71
00000000000088a2         push       rbp
00000000000088a3         mov        r12, rdi
00000000000088a6         push       rbx
00000000000088a7         mov        rbp, rsi
00000000000088aa         call       safe_hasher                                 ; safe_hasher
00000000000088af         mov        rsi, qword [rax]
00000000000088b2         test       rsi, rsi
00000000000088b5         je         loc_88dd

00000000000088b7         mov        rbx, rax
00000000000088ba         jmp        loc_88c3
00000000000088bc         align      64

                     loc_88c0:
00000000000088c0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_88c3:
00000000000088c3         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
00000000000088c6         je         loc_88df

00000000000088c8         mov        rdi, rbp
00000000000088cb         call       qword [r12+0x38]
00000000000088d0         test       al, al
00000000000088d2         jne        loc_88f0

00000000000088d4         mov        rbx, qword [rbx+8]
00000000000088d8         test       rbx, rbx
00000000000088db         jne        loc_88c0

                     loc_88dd:
00000000000088dd         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_88df:
00000000000088df         pop        rbx                                         ; CODE XREF=hash_lookup+38
00000000000088e0         mov        rax, rsi
00000000000088e3         pop        rbp
00000000000088e4         pop        r12
00000000000088e6         ret
                        ; endp
00000000000088e7         align      16

                     loc_88f0:
00000000000088f0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
00000000000088f3         pop        rbx
00000000000088f4         pop        rbp
00000000000088f5         mov        rax, rsi
00000000000088f8         pop        r12
00000000000088fa         ret
                        ; endp
00000000000088fb         align      256                                         ; End of unwind block (FDE at 0xc6e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
0000000000008900         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0xc718)
0000000000008905         je         loc_8933

0000000000008907         mov        rdx, qword [rdi]
000000000000890a         mov        rcx, qword [rdi+8]
000000000000890e         cmp        rdx, rcx
0000000000008911         jae        loc_8938

0000000000008913         mov        rax, qword [rdx]
0000000000008916         test       rax, rax
0000000000008919         jne        loc_8936

000000000000891b         nop        dword [rax+rax]

                     loc_8920:
0000000000008920         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
0000000000008924         cmp        rdx, rcx
0000000000008927         jae        loc_8938

0000000000008929         mov        rax, qword [rdx]
000000000000892c         test       rax, rax
000000000000892f         je         loc_8920

0000000000008931         ret
                        ; endp

                     loc_8933:
0000000000008933         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
0000000000008935         ret
                        ; endp

                     loc_8936:
0000000000008936         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_8938:
0000000000008938         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000893c         call       j_abort                                     ; abort
                        ; endp
0000000000008941         align      16                                          ; End of unwind block (FDE at 0xc718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000008950         push       rbp                                         ; Begin of unwind block (FDE at 0xc72c)
0000000000008951         push       rbx
0000000000008952         mov        rbp, rdi
0000000000008955         mov        rbx, rsi
0000000000008958         sub        rsp, 0x8
000000000000895c         call       safe_hasher                                 ; safe_hasher
0000000000008961         mov        rdx, rax
0000000000008964         mov        rcx, rax
0000000000008967         mov        rax, qword [rdx]
000000000000896a         mov        rdx, qword [rdx+8]
000000000000896e         cmp        rax, rbx
0000000000008971         je         loc_8989

0000000000008973         nop        dword [rax+rax]

                     loc_8978:
0000000000008978         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000897b         je         loc_898e

000000000000897d         mov        rax, qword [rdx]
0000000000008980         mov        rdx, qword [rdx+8]
0000000000008984         cmp        rax, rbx
0000000000008987         jne        loc_8978

                     loc_8989:
0000000000008989         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000898c         jne        loc_89b8

                     loc_898e:
000000000000898e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
0000000000008992         jmp        loc_89a0
0000000000008994         align      8

                     loc_8998:
0000000000008998         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
000000000000899b         test       rax, rax
000000000000899e         jne        loc_89ab

                     loc_89a0:
00000000000089a0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
00000000000089a4         cmp        rdx, rcx
00000000000089a7         ja         loc_8998

00000000000089a9         xor        eax, eax

                     loc_89ab:
00000000000089ab         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
00000000000089af         pop        rbx
00000000000089b0         pop        rbp
00000000000089b1         ret
                        ; endp
00000000000089b2         align      8

                     loc_89b8:
00000000000089b8         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
00000000000089bb         add        rsp, 0x8
00000000000089bf         pop        rbx
00000000000089c0         pop        rbp
00000000000089c1         ret
                        ; endp
00000000000089c2         align      16                                          ; End of unwind block (FDE at 0xc72c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
00000000000089d0         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0xc760)
00000000000089d3         cmp        qword [rdi+8], r9
00000000000089d7         jbe        loc_8a32

00000000000089d9         xor        r8d, r8d

                     loc_89dc:
00000000000089dc         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
00000000000089df         test       rcx, rcx
00000000000089e2         je         loc_8a1d

00000000000089e4         cmp        rdx, r8
00000000000089e7         jbe        loc_8a27

00000000000089e9         mov        qword [rsi+r8*8], rcx
00000000000089ed         mov        rcx, qword [r9+8]
00000000000089f1         lea        rax, qword [r8+1]
00000000000089f5         test       rcx, rcx
00000000000089f8         je         loc_8a1a

00000000000089fa         nop        word [rax+rax]

                     loc_8a00:
0000000000008a00         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
0000000000008a03         je         loc_8a30

0000000000008a05         mov        r8, qword [rcx]
0000000000008a08         add        rax, 0x1
0000000000008a0c         mov        qword [rsi+rax*8-8], r8
0000000000008a11         mov        rcx, qword [rcx+8]
0000000000008a15         test       rcx, rcx
0000000000008a18         jne        loc_8a00

                     loc_8a1a:
0000000000008a1a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_8a1d:
0000000000008a1d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
0000000000008a21         cmp        qword [rdi+8], r9
0000000000008a25         ja         loc_89dc

                     loc_8a27:
0000000000008a27         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
0000000000008a2a         ret
                        ; endp
0000000000008a2b         align      16

                     loc_8a30:
0000000000008a30         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_8a32:
0000000000008a32         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
0000000000008a34         ret
                        ; endp
0000000000008a35         align      64                                          ; End of unwind block (FDE at 0xc760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000008a40         push       r15                                         ; Begin of unwind block (FDE at 0xc774)
0000000000008a42         push       r14
0000000000008a44         push       r13
0000000000008a46         push       r12
0000000000008a48         push       rbp
0000000000008a49         push       rbx
0000000000008a4a         sub        rsp, 0x8
0000000000008a4e         mov        r14, qword [rdi]
0000000000008a51         cmp        qword [rdi+8], r14
0000000000008a55         jbe        loc_8aa6

0000000000008a57         mov        r13, rdx
0000000000008a5a         mov        r12, rsi
0000000000008a5d         mov        r15, rdi
0000000000008a60         xor        ebp, ebp

                     loc_8a62:
0000000000008a62         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000008a65         test       rdi, rdi
0000000000008a68         je         loc_8a8a

0000000000008a6a         mov        rbx, r14
0000000000008a6d         jmp        loc_8a73
0000000000008a6f         align      16

                     loc_8a70:
0000000000008a70         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_8a73:
0000000000008a73         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
0000000000008a76         call       r12
0000000000008a79         test       al, al
0000000000008a7b         je         loc_8a94

0000000000008a7d         mov        rbx, qword [rbx+8]
0000000000008a81         add        rbp, 0x1
0000000000008a85         test       rbx, rbx
0000000000008a88         jne        loc_8a70

                     loc_8a8a:
0000000000008a8a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
0000000000008a8e         cmp        qword [r15+8], r14
0000000000008a92         ja         loc_8a62

                     loc_8a94:
0000000000008a94         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
0000000000008a98         mov        rax, rbp
0000000000008a9b         pop        rbx
0000000000008a9c         pop        rbp
0000000000008a9d         pop        r12
0000000000008a9f         pop        r13
0000000000008aa1         pop        r14
0000000000008aa3         pop        r15
0000000000008aa5         ret
                        ; endp

                     loc_8aa6:
0000000000008aa6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
0000000000008aa8         jmp        loc_8a94
0000000000008aaa         align      16                                          ; End of unwind block (FDE at 0xc774)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
0000000000008ab0         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0xc7c0)
0000000000008ab3         xor        edx, edx
0000000000008ab5         test       cl, cl
0000000000008ab7         je         loc_8add

0000000000008ab9         nop        dword [rax]

                     loc_8ac0:
0000000000008ac0         mov        rax, rdx                                    ; CODE XREF=hash_string+43
0000000000008ac3         add        rdi, 0x1
0000000000008ac7         shl        rax, 0x5
0000000000008acb         sub        rax, rdx
0000000000008ace         xor        edx, edx
0000000000008ad0         add        rax, rcx
0000000000008ad3         movzx      ecx, byte [rdi]
0000000000008ad6         div        rsi
0000000000008ad9         test       cl, cl
0000000000008adb         jne        loc_8ac0

                     loc_8add:
0000000000008add         mov        rax, rdx                                    ; CODE XREF=hash_string+7
0000000000008ae0         ret
                        ; endp
0000000000008ae1         align      16                                          ; End of unwind block (FDE at 0xc7c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
0000000000008af0         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0xc7d4)
0000000000008afa         mov        byte [rdi+0x10], 0x0
0000000000008afe         mov        qword [rdi], rax
0000000000008b01         movabs     rax, 0x3fb4fdf43f4ccccd
0000000000008b0b         mov        qword [rdi+8], rax
0000000000008b0f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
0000000000008b10         push       r15                                         ; End of unwind block (FDE at 0xc7d4), Begin of unwind block (FDE at 0xc7e8), CODE XREF=filesystem_type+124, setup_dir.isra.4+40
0000000000008b12         push       r14
0000000000008b14         lea        rax, qword [raw_hasher]                     ; raw_hasher
0000000000008b1b         push       r13
0000000000008b1d         push       r12
0000000000008b1f         mov        r12, rdx
0000000000008b22         push       rbp
0000000000008b23         push       rbx
0000000000008b24         mov        r13, rcx
0000000000008b27         mov        rbp, rdi
0000000000008b2a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
0000000000008b2f         mov        r15, rsi
0000000000008b32         sub        rsp, 0x8
0000000000008b36         test       rdx, rdx
0000000000008b39         mov        r14, r8
0000000000008b3c         cmove      r12, rax
0000000000008b40         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000008b47         test       rcx, rcx
0000000000008b4a         cmove      r13, rax
0000000000008b4e         call       j_malloc                                    ; malloc
0000000000008b53         test       rax, rax
0000000000008b56         mov        rbx, rax
0000000000008b59         je         loc_8c0a

0000000000008b5f         test       r15, r15
0000000000008b62         lea        rdi, qword [rax+0x28]
0000000000008b66         je         loc_8c20

0000000000008b6c         mov        qword [rax+0x28], r15
0000000000008b70         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008b75         test       al, al
0000000000008b77         je         loc_8c00

0000000000008b7d         cmp        byte [r15+0x10], 0x0
0000000000008b82         je         loc_8c80

                     loc_8b88:
0000000000008b88         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
0000000000008b8b         call       next_prime                                  ; next_prime
0000000000008b90         mov        edx, 0x8
0000000000008b95         mov        rbp, rax
0000000000008b98         xor        ecx, ecx
0000000000008b9a         mov        rax, rdx
0000000000008b9d         mul        rbp
0000000000008ba0         jo         loc_8cba

                     loc_8ba6:
0000000000008ba6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
0000000000008ba9         js         loc_8c00

0000000000008bab         test       rcx, rcx
0000000000008bae         jne        loc_8c00

0000000000008bb0         test       rbp, rbp
0000000000008bb3         mov        qword [rbx+0x10], rbp
0000000000008bb7         je         loc_8c00

0000000000008bb9         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000008bbe         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
0000000000008bc1         call       j_calloc                                    ; calloc
0000000000008bc6         test       rax, rax
0000000000008bc9         mov        qword [rbx], rax
0000000000008bcc         je         loc_8c00

0000000000008bce         shl        rbp, 0x4
0000000000008bd2         mov        qword [rbx+0x18], 0x0
0000000000008bda         mov        qword [rbx+0x20], 0x0
0000000000008be2         add        rbp, rax
0000000000008be5         mov        qword [rbx+0x30], r12
0000000000008be9         mov        qword [rbx+0x38], r13
0000000000008bed         mov        qword [rbx+8], rbp
0000000000008bf1         mov        qword [rbx+0x40], r14
0000000000008bf5         mov        qword [rbx+0x48], 0x0
0000000000008bfd         jmp        loc_8c0a
0000000000008bff         align      1024

                     loc_8c00:
0000000000008c00         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
0000000000008c03         xor        ebx, ebx
0000000000008c05         call       sub_1a90                                    ; sub_1a90

                     loc_8c0a:
0000000000008c0a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
0000000000008c0e         mov        rax, rbx
0000000000008c11         pop        rbx
0000000000008c12         pop        rbp
0000000000008c13         pop        r12
0000000000008c15         pop        r13
0000000000008c17         pop        r14
0000000000008c19         pop        r15
0000000000008c1b         ret
                        ; endp
0000000000008c1c         align      32

                     loc_8c20:
0000000000008c20         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
0000000000008c27         mov        qword [rbx+0x28], rax
0000000000008c2b         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008c30         test       al, al
0000000000008c32         movss      xmm1, dword [float_b048]                    ; float_b048
0000000000008c3a         je         loc_8c00

0000000000008c3c         test       rbp, rbp
0000000000008c3f         js         loc_8c8b

                     loc_8c41:
0000000000008c41         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000008c45         cvtsi2ss   xmm0, rbp

                     loc_8c4a:
0000000000008c4a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
0000000000008c4e         ucomiss    xmm0, dword [float_b04c]                    ; float_b04c
0000000000008c55         jae        loc_8c00

0000000000008c57         ucomiss    xmm0, dword [float_b050]                    ; float_b050
0000000000008c5e         jb         loc_8cb0

0000000000008c60         subss      xmm0, dword [float_b050]                    ; float_b050
0000000000008c68         movabs     rax, 0x8000000000000000
0000000000008c72         cvttss2si  rbp, xmm0
0000000000008c77         xor        rbp, rax
0000000000008c7a         jmp        loc_8b88
0000000000008c7f         align      128

                     loc_8c80:
0000000000008c80         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
0000000000008c83         movss      xmm1, dword [r15+8]
0000000000008c89         jns        loc_8c41

                     loc_8c8b:
0000000000008c8b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
0000000000008c8e         pxor       xmm0, xmm0
0000000000008c92         shr        rax, 0x1
0000000000008c95         and        ebp, 0x1
0000000000008c98         or         rax, rbp
0000000000008c9b         cvtsi2ss   xmm0, rax
0000000000008ca0         addss      xmm0, xmm0
0000000000008ca4         jmp        loc_8c4a
0000000000008ca6         align      16

                     loc_8cb0:
0000000000008cb0         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
0000000000008cb5         jmp        loc_8b88

                     loc_8cba:
0000000000008cba         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
0000000000008cbf         jmp        loc_8ba6
0000000000008cc4         align      16                                          ; End of unwind block (FDE at 0xc7e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
0000000000008cd0         push       r12                                         ; Begin of unwind block (FDE at 0xc834)
0000000000008cd2         push       rbp
0000000000008cd3         mov        rbp, rdi
0000000000008cd6         push       rbx
0000000000008cd7         mov        r12, qword [rdi]
0000000000008cda         cmp        r12, qword [rdi+8]
0000000000008cde         jae        loc_8d4b

                     loc_8ce0:
0000000000008ce0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
0000000000008ce5         je         loc_8d41

0000000000008ce7         mov        rbx, qword [r12+8]
0000000000008cec         mov        rax, qword [rbp+0x40]
0000000000008cf0         test       rbx, rbx
0000000000008cf3         je         loc_8d25

0000000000008cf5         nop        dword [rax]

                     loc_8cf8:
0000000000008cf8         test       rax, rax                                    ; CODE XREF=hash_clear+83
0000000000008cfb         je         loc_8d06

0000000000008cfd         mov        rdi, qword [rbx]
0000000000008d00         call       rax
0000000000008d02         mov        rax, qword [rbp+0x40]

                     loc_8d06:
0000000000008d06         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
0000000000008d0a         mov        rcx, qword [rbp+0x48]
0000000000008d0e         mov        qword [rbx], 0x0
0000000000008d15         test       rdx, rdx
0000000000008d18         mov        qword [rbx+8], rcx
0000000000008d1c         mov        qword [rbp+0x48], rbx
0000000000008d20         mov        rbx, rdx
0000000000008d23         jne        loc_8cf8

                     loc_8d25:
0000000000008d25         test       rax, rax                                    ; CODE XREF=hash_clear+35
0000000000008d28         je         loc_8d30

0000000000008d2a         mov        rdi, qword [r12]
0000000000008d2e         call       rax

                     loc_8d30:
0000000000008d30         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
0000000000008d38         mov        qword [r12+8], 0x0

                     loc_8d41:
0000000000008d41         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000008d45         cmp        qword [rbp+8], r12
0000000000008d49         ja         loc_8ce0

                     loc_8d4b:
0000000000008d4b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
0000000000008d53         mov        qword [rbp+0x20], 0x0
0000000000008d5b         pop        rbx
0000000000008d5c         pop        rbp
0000000000008d5d         pop        r12
0000000000008d5f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
0000000000008d60         push       r12                                         ; End of unwind block (FDE at 0xc834), Begin of unwind block (FDE at 0xc860), CODE XREF=rpl_fts_close+154, rpl_fts_close+177, rpl_fts_read+713
0000000000008d62         push       rbp
0000000000008d63         mov        r12, rdi
0000000000008d66         push       rbx
0000000000008d67         cmp        qword [rdi+0x40], 0x0
0000000000008d6c         mov        rbp, qword [rdi]
0000000000008d6f         mov        rax, qword [rdi+8]
0000000000008d73         je         loc_8dc3

0000000000008d75         cmp        qword [rdi+0x20], 0x0
0000000000008d7a         je         loc_8dc3

0000000000008d7c         cmp        rbp, rax
0000000000008d7f         jae        loc_8dfc

0000000000008d81         nop        dword [rax]

                     loc_8d88:
0000000000008d88         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
0000000000008d8c         test       rdi, rdi
0000000000008d8f         je         loc_8db6

0000000000008d91         mov        rbx, rbp
0000000000008d94         jmp        loc_8da3
0000000000008d96         align      32

                     loc_8da0:
0000000000008da0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_8da3:
0000000000008da3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
0000000000008da8         mov        rbx, qword [rbx+8]
0000000000008dac         test       rbx, rbx
0000000000008daf         jne        loc_8da0

0000000000008db1         mov        rax, qword [r12+8]

                     loc_8db6:
0000000000008db6         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
0000000000008dba         cmp        rax, rbp
0000000000008dbd         ja         loc_8d88

0000000000008dbf         mov        rbp, qword [r12]

                     loc_8dc3:
0000000000008dc3         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
0000000000008dc6         jae        loc_8dfc

0000000000008dc8         nop        dword [rax+rax]

                     loc_8dd0:
0000000000008dd0         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
0000000000008dd4         test       rdi, rdi
0000000000008dd7         je         loc_8df1

0000000000008dd9         nop        dword [rax]

                     loc_8de0:
0000000000008de0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
0000000000008de4         call       sub_1a90                                    ; sub_1a90
0000000000008de9         test       rbx, rbx
0000000000008dec         mov        rdi, rbx
0000000000008def         jne        loc_8de0

                     loc_8df1:
0000000000008df1         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
0000000000008df5         cmp        qword [r12+8], rbp
0000000000008dfa         ja         loc_8dd0

                     loc_8dfc:
0000000000008dfc         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
0000000000008e01         test       rdi, rdi
0000000000008e04         je         loc_8e21

0000000000008e06         nop        word [cs:rax+rax]

                     loc_8e10:
0000000000008e10         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
0000000000008e14         call       sub_1a90                                    ; sub_1a90
0000000000008e19         test       rbx, rbx
0000000000008e1c         mov        rdi, rbx
0000000000008e1f         jne        loc_8e10

                     loc_8e21:
0000000000008e21         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
0000000000008e25         call       sub_1a90                                    ; sub_1a90
0000000000008e2a         pop        rbx
0000000000008e2b         mov        rdi, r12
0000000000008e2e         pop        rbp
0000000000008e2f         pop        r12
0000000000008e31         jmp        sub_1a90                                    ; sub_1a90
                        ; endp
0000000000008e36         align      64                                          ; End of unwind block (FDE at 0xc860)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000008e40         push       r12                                         ; Begin of unwind block (FDE at 0xc88c), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000008e42         push       rbp
0000000000008e43         mov        rbp, rdi
0000000000008e46         push       rbx
0000000000008e47         sub        rsp, 0x60
0000000000008e4b         mov        r12, qword [rdi+0x28]
0000000000008e4f         mov        rax, qword [fs:0x28]
0000000000008e58         mov        qword [rsp+0x78+var_20], rax
0000000000008e5d         xor        eax, eax
0000000000008e5f         cmp        byte [r12+0x10], 0x0
0000000000008e65         jne        loc_8eb8

0000000000008e67         test       rsi, rsi
0000000000008e6a         js         loc_8fe8

0000000000008e70         pxor       xmm0, xmm0
0000000000008e74         cvtsi2ss   xmm0, rsi

                     loc_8e79:
0000000000008e79         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
0000000000008e80         ucomiss    xmm0, dword [float_b04c]                    ; float_b04c
0000000000008e87         jae        loc_8fc0

0000000000008e8d         ucomiss    xmm0, dword [float_b050]                    ; float_b050
0000000000008e94         jb         loc_9010

0000000000008e9a         subss      xmm0, dword [float_b050]                    ; float_b050
0000000000008ea2         movabs     rax, 0x8000000000000000
0000000000008eac         cvttss2si  rsi, xmm0
0000000000008eb1         xor        rsi, rax
0000000000008eb4         nop        dword [rax]

                     loc_8eb8:
0000000000008eb8         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
0000000000008ebb         call       next_prime                                  ; next_prime
0000000000008ec0         mov        edx, 0x8
0000000000008ec5         mov        rbx, rax
0000000000008ec8         xor        ecx, ecx
0000000000008eca         mov        rax, rdx
0000000000008ecd         mul        rbx
0000000000008ed0         jo         loc_906f

                     loc_8ed6:
0000000000008ed6         test       rax, rax                                    ; CODE XREF=hash_rehash+564
0000000000008ed9         mov        eax, 0x1
0000000000008ede         cmovs      rcx, rax
0000000000008ee2         test       rbx, rbx
0000000000008ee5         je         loc_8fc0

0000000000008eeb         and        ecx, 0x1
0000000000008eee         jne        loc_8fc0

0000000000008ef4         cmp        qword [rbp+0x10], rbx
0000000000008ef8         je         loc_9020

0000000000008efe         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000008f03         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
0000000000008f06         call       j_calloc                                    ; calloc
0000000000008f0b         test       rax, rax
0000000000008f0e         mov        qword [rsp+0x78+var_78], rax
0000000000008f12         je         loc_8fc0

0000000000008f18         mov        qword [rsp+0x78+var_68], rbx
0000000000008f1d         shl        rbx, 0x4
0000000000008f21         mov        qword [rsp+0x78+var_50], r12
0000000000008f26         add        rbx, rax
0000000000008f29         mov        rax, qword [rbp+0x30]
0000000000008f2d         mov        r12, rsp
0000000000008f30         xor        edx, edx
0000000000008f32         mov        rsi, rbp
0000000000008f35         mov        rdi, r12
0000000000008f38         mov        qword [rsp+0x78+var_70], rbx
0000000000008f3d         mov        qword [rsp+0x78+var_60], 0x0
0000000000008f46         mov        qword [rsp+0x78+var_48], rax
0000000000008f4b         mov        rax, qword [rbp+0x38]
0000000000008f4f         mov        qword [rsp+0x78+var_58], 0x0
0000000000008f58         mov        qword [rsp+0x78+var_40], rax
0000000000008f5d         mov        rax, qword [rbp+0x40]
0000000000008f61         mov        qword [rsp+0x78+var_38], rax
0000000000008f66         mov        rax, qword [rbp+0x48]
0000000000008f6a         mov        qword [rsp+0x78+var_30], rax
0000000000008f6f         call       transfer_entries                            ; transfer_entries
0000000000008f74         test       al, al
0000000000008f76         mov        ebx, eax
0000000000008f78         jne        loc_9030

0000000000008f7e         mov        rax, qword [rsp+0x78+var_30]
0000000000008f83         mov        edx, 0x1
0000000000008f88         mov        rsi, r12
0000000000008f8b         mov        rdi, rbp
0000000000008f8e         mov        qword [rbp+0x48], rax
0000000000008f92         call       transfer_entries                            ; transfer_entries
0000000000008f97         test       al, al
0000000000008f99         je         loc_9079

0000000000008f9f         xor        edx, edx
0000000000008fa1         mov        rsi, r12
0000000000008fa4         mov        rdi, rbp
0000000000008fa7         call       transfer_entries                            ; transfer_entries
0000000000008fac         test       al, al
0000000000008fae         je         loc_9079

0000000000008fb4         mov        rdi, qword [rsp+0x78+var_78]
0000000000008fb8         call       sub_1a90                                    ; sub_1a90
0000000000008fbd         jmp        loc_8fc2
0000000000008fbf         align      64

                     loc_8fc0:
0000000000008fc0         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_8fc2:
0000000000008fc2         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
0000000000008fc7         xor        rcx, qword [fs:0x28]
0000000000008fd0         mov        eax, ebx
0000000000008fd2         jne        loc_906a

0000000000008fd8         add        rsp, 0x60
0000000000008fdc         pop        rbx
0000000000008fdd         pop        rbp
0000000000008fde         pop        r12
0000000000008fe0         ret
                        ; endp
0000000000008fe1         align      8

                     loc_8fe8:
0000000000008fe8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
0000000000008feb         pxor       xmm0, xmm0
0000000000008fef         shr        rax, 0x1
0000000000008ff2         and        esi, 0x1
0000000000008ff5         or         rax, rsi
0000000000008ff8         cvtsi2ss   xmm0, rax
0000000000008ffd         addss      xmm0, xmm0
0000000000009001         jmp        loc_8e79
0000000000009006         align      16

                     loc_9010:
0000000000009010         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000009015         jmp        loc_8eb8
000000000000901a         align      32

                     loc_9020:
0000000000009020         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000009025         jmp        loc_8fc2
0000000000009027         align      16

                     loc_9030:
0000000000009030         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
0000000000009034         call       sub_1a90                                    ; sub_1a90
0000000000009039         mov        rax, qword [rsp+0x78+var_78]
000000000000903d         mov        qword [rbp], rax
0000000000009041         mov        rax, qword [rsp+0x78+var_70]
0000000000009046         mov        qword [rbp+8], rax
000000000000904a         mov        rax, qword [rsp+0x78+var_68]
000000000000904f         mov        qword [rbp+0x10], rax
0000000000009053         mov        rax, qword [rsp+0x78+var_60]
0000000000009058         mov        qword [rbp+0x18], rax
000000000000905c         mov        rax, qword [rsp+0x78+var_30]
0000000000009061         mov        qword [rbp+0x48], rax
0000000000009065         jmp        loc_8fc2

                     loc_906a:
000000000000906a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_906f:
000000000000906f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
0000000000009074         jmp        loc_8ed6

                     loc_9079:
0000000000009079         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
000000000000907e         align      128                                         ; End of unwind block (FDE at 0xc88c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
0000000000009080         push       r13                                         ; Begin of unwind block (FDE at 0xc8c4), CODE XREF=hash_insert+27
0000000000009082         push       r12
0000000000009084         push       rbp
0000000000009085         push       rbx
0000000000009086         sub        rsp, 0x18
000000000000908a         mov        rax, qword [fs:0x28]
0000000000009093         mov        qword [rsp+0x38+var_30], rax
0000000000009098         xor        eax, eax
000000000000909a         test       rsi, rsi
000000000000909d         je         loc_925d

00000000000090a3         mov        r12, rsp
00000000000090a6         xor        ecx, ecx
00000000000090a8         mov        r13, rdx
00000000000090ab         mov        rdx, r12
00000000000090ae         mov        rbx, rdi
00000000000090b1         mov        rbp, rsi
00000000000090b4         call       hash_find_entry                             ; hash_find_entry
00000000000090b9         test       rax, rax
00000000000090bc         mov        rdx, rax
00000000000090bf         je         loc_90f0

00000000000090c1         xor        eax, eax
00000000000090c3         test       r13, r13
00000000000090c6         je         loc_90cc

00000000000090c8         mov        qword [r13], rdx

                     loc_90cc:
00000000000090cc         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
00000000000090d1         xor        rcx, qword [fs:0x28]
00000000000090da         jne        loc_92ff

00000000000090e0         add        rsp, 0x18
00000000000090e4         pop        rbx
00000000000090e5         pop        rbp
00000000000090e6         pop        r12
00000000000090e8         pop        r13
00000000000090ea         ret
                        ; endp
00000000000090eb         align      16

                     loc_90f0:
00000000000090f0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
00000000000090f4         test       rax, rax
00000000000090f7         js         loc_9170

00000000000090f9         pxor       xmm1, xmm1
00000000000090fd         mov        rdx, qword [rbx+0x28]
0000000000009101         cvtsi2ss   xmm1, rax
0000000000009106         mov        rax, qword [rbx+0x10]
000000000000910a         test       rax, rax
000000000000910d         js         loc_919a

                     loc_9113:
0000000000009113         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000009117         cvtsi2ss   xmm0, rax

                     loc_911c:
000000000000911c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000009121         ucomiss    xmm1, xmm0
0000000000009124         ja         loc_91c0

                     loc_912a:
000000000000912a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000912e         cmp        qword [r12], 0x0
0000000000009133         je         loc_9268

0000000000009139         mov        rax, qword [rbx+0x48]
000000000000913d         test       rax, rax
0000000000009140         je         loc_9280

0000000000009146         mov        rdx, qword [rax+8]
000000000000914a         mov        qword [rbx+0x48], rdx

                     loc_914e:
000000000000914e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
0000000000009153         mov        qword [rax], rbp
0000000000009156         mov        qword [rax+8], rdx
000000000000915a         mov        qword [r12+8], rax
000000000000915f         mov        eax, 0x1
0000000000009164         add        qword [rbx+0x20], 0x1
0000000000009169         jmp        loc_90cc
000000000000916e         align      16

                     loc_9170:
0000000000009170         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
0000000000009173         pxor       xmm1, xmm1
0000000000009177         and        eax, 0x1
000000000000917a         shr        rdx, 0x1
000000000000917d         or         rdx, rax
0000000000009180         mov        rax, qword [rbx+0x10]
0000000000009184         cvtsi2ss   xmm1, rdx
0000000000009189         mov        rdx, qword [rbx+0x28]
000000000000918d         test       rax, rax
0000000000009190         addss      xmm1, xmm1
0000000000009194         jns        loc_9113

                     loc_919a:
000000000000919a         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
000000000000919d         pxor       xmm0, xmm0
00000000000091a1         shr        rcx, 0x1
00000000000091a4         and        eax, 0x1
00000000000091a7         or         rcx, rax
00000000000091aa         cvtsi2ss   xmm0, rcx
00000000000091af         addss      xmm0, xmm0
00000000000091b3         jmp        loc_911c
00000000000091b8         align      64

                     loc_91c0:
00000000000091c0         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
00000000000091c4         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000091c9         mov        rax, qword [rbx+0x10]
00000000000091cd         mov        rdx, qword [rbx+0x28]
00000000000091d1         test       rax, rax
00000000000091d4         movss      xmm2, dword [rdx+8]
00000000000091d9         js         loc_92a0

00000000000091df         pxor       xmm0, xmm0
00000000000091e3         cvtsi2ss   xmm0, rax

                     loc_91e8:
00000000000091e8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
00000000000091ec         test       rax, rax
00000000000091ef         js         loc_92c0

00000000000091f5         pxor       xmm1, xmm1
00000000000091f9         cvtsi2ss   xmm1, rax

                     loc_91fe:
00000000000091fe         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000009201         mulss      xmm3, xmm0
0000000000009205         ucomiss    xmm1, xmm3
0000000000009208         jbe        loc_912a

000000000000920e         cmp        byte [rdx+0x10], 0x0
0000000000009212         mulss      xmm0, dword [rdx+0xc]
0000000000009217         jne        loc_921d

0000000000009219         mulss      xmm0, xmm2

                     loc_921d:
000000000000921d         ucomiss    xmm0, dword [float_b04c]                    ; float_b04c, CODE XREF=hash_insert_if_absent+407
0000000000009224         jae        loc_9293

0000000000009226         ucomiss    xmm0, dword [float_b050]                    ; float_b050
000000000000922d         jae        loc_92e0

0000000000009233         cvttss2si  rsi, xmm0

                     loc_9238:
0000000000009238         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000923b         call       hash_rehash                                 ; hash_rehash
0000000000009240         test       al, al
0000000000009242         je         loc_9293

0000000000009244         xor        ecx, ecx
0000000000009246         mov        rdx, r12
0000000000009249         mov        rsi, rbp
000000000000924c         mov        rdi, rbx
000000000000924f         call       hash_find_entry                             ; hash_find_entry
0000000000009254         test       rax, rax
0000000000009257         je         loc_912a

                     loc_925d:
000000000000925d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
0000000000009262         align      8

                     loc_9268:
0000000000009268         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
000000000000926c         mov        eax, 0x1
0000000000009271         add        qword [rbx+0x20], 0x1
0000000000009276         add        qword [rbx+0x18], 0x1
000000000000927b         jmp        loc_90cc

                     loc_9280:
0000000000009280         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
0000000000009285         call       j_malloc                                    ; malloc
000000000000928a         test       rax, rax
000000000000928d         jne        loc_914e

                     loc_9293:
0000000000009293         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
0000000000009298         jmp        loc_90cc
000000000000929d         align      32

                     loc_92a0:
00000000000092a0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
00000000000092a3         pxor       xmm0, xmm0
00000000000092a7         shr        rcx, 0x1
00000000000092aa         and        eax, 0x1
00000000000092ad         or         rcx, rax
00000000000092b0         cvtsi2ss   xmm0, rcx
00000000000092b5         addss      xmm0, xmm0
00000000000092b9         jmp        loc_91e8
00000000000092be         align      64

                     loc_92c0:
00000000000092c0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
00000000000092c3         pxor       xmm1, xmm1
00000000000092c7         shr        rcx, 0x1
00000000000092ca         and        eax, 0x1
00000000000092cd         or         rcx, rax
00000000000092d0         cvtsi2ss   xmm1, rcx
00000000000092d5         addss      xmm1, xmm1
00000000000092d9         jmp        loc_91fe
00000000000092de         align      32

                     loc_92e0:
00000000000092e0         subss      xmm0, dword [float_b050]                    ; float_b050, CODE XREF=hash_insert_if_absent+429
00000000000092e8         movabs     rax, 0x8000000000000000
00000000000092f2         cvttss2si  rsi, xmm0
00000000000092f7         xor        rsi, rax
00000000000092fa         jmp        loc_9238

                     loc_92ff:
00000000000092ff         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000009304         align      16                                          ; End of unwind block (FDE at 0xc8c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000009310         push       rbx                                         ; Begin of unwind block (FDE at 0xc900), CODE XREF=filesystem_type+255, enter_dir.isra.10+70
0000000000009311         mov        rbx, rsi
0000000000009314         sub        rsp, 0x10
0000000000009318         mov        rdx, rsp
000000000000931b         mov        rax, qword [fs:0x28]
0000000000009324         mov        qword [rsp+0x18+var_10], rax
0000000000009329         xor        eax, eax
000000000000932b         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000009330         cmp        eax, 0xffffffff
0000000000009333         je         loc_9360

0000000000009335         test       eax, eax
0000000000009337         jne        loc_933d

0000000000009339         mov        rbx, qword [rsp+0x18+var_18]

                     loc_933d:
000000000000933d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000009342         xor        rcx, qword [fs:0x28]
000000000000934b         mov        rax, rbx
000000000000934e         jne        loc_9364

0000000000009350         add        rsp, 0x10
0000000000009354         pop        rbx
0000000000009355         ret
                        ; endp
0000000000009356         align      32

                     loc_9360:
0000000000009360         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
0000000000009362         jmp        loc_933d

                     loc_9364:
0000000000009364         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
0000000000009369         align      16                                          ; End of unwind block (FDE at 0xc900)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
0000000000009370         push       r12                                         ; Begin of unwind block (FDE at 0xc924), CODE XREF=leave_dir.isra.12+122
0000000000009372         push       rbp
0000000000009373         mov        ecx, 0x1
0000000000009378         push       rbx
0000000000009379         mov        rbx, rdi
000000000000937c         sub        rsp, 0x10
0000000000009380         mov        rdx, rsp
0000000000009383         mov        rax, qword [fs:0x28]
000000000000938c         mov        qword [rsp+0x28+var_20], rax
0000000000009391         xor        eax, eax
0000000000009393         call       hash_find_entry                             ; hash_find_entry
0000000000009398         test       rax, rax
000000000000939b         mov        rbp, rax
000000000000939e         je         loc_93af

00000000000093a0         mov        rax, qword [rsp+0x28+var_28]
00000000000093a4         sub        qword [rbx+0x20], 0x1
00000000000093a9         cmp        qword [rax], 0x0
00000000000093ad         je         loc_93d0

                     loc_93af:
00000000000093af         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
00000000000093b4         xor        rcx, qword [fs:0x28]
00000000000093bd         mov        rax, rbp
00000000000093c0         jne        loc_956e

00000000000093c6         add        rsp, 0x10
00000000000093ca         pop        rbx
00000000000093cb         pop        rbp
00000000000093cc         pop        r12
00000000000093ce         ret
                        ; endp
00000000000093cf         align      16

                     loc_93d0:
00000000000093d0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
00000000000093d4         sub        rax, 0x1
00000000000093d8         test       rax, rax
00000000000093db         mov        qword [rbx+0x18], rax
00000000000093df         js         loc_94e0

00000000000093e5         pxor       xmm0, xmm0
00000000000093e9         cvtsi2ss   xmm0, rax

                     loc_93ee:
00000000000093ee         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
00000000000093f2         mov        rdx, qword [rbx+0x28]
00000000000093f6         test       rax, rax
00000000000093f9         js         loc_94c0

00000000000093ff         pxor       xmm1, xmm1
0000000000009403         cvtsi2ss   xmm1, rax

                     loc_9408:
0000000000009408         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000940c         ucomiss    xmm1, xmm0
000000000000940f         jbe        loc_93af

0000000000009411         lea        rdi, qword [rbx+0x28]
0000000000009415         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000941a         mov        rax, qword [rbx+0x10]
000000000000941e         mov        rdx, qword [rbx+0x28]
0000000000009422         test       rax, rax
0000000000009425         js         loc_9550

000000000000942b         pxor       xmm0, xmm0
000000000000942f         cvtsi2ss   xmm0, rax

                     loc_9434:
0000000000009434         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000009438         test       rax, rax
000000000000943b         js         loc_9530

0000000000009441         pxor       xmm1, xmm1
0000000000009445         cvtsi2ss   xmm1, rax

                     loc_944a:
000000000000944a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000944e         mulss      xmm2, xmm0
0000000000009452         ucomiss    xmm2, xmm1
0000000000009455         jbe        loc_93af

000000000000945b         cmp        byte [rdx+0x10], 0x0
000000000000945f         mulss      xmm0, dword [rdx+4]
0000000000009464         je         loc_9520

                     loc_946a:
000000000000946a         ucomiss    xmm0, dword [float_b050]                    ; float_b050, CODE XREF=hash_delete+437
0000000000009471         jae        loc_9500

0000000000009477         cvttss2si  rsi, xmm0

                     loc_947c:
000000000000947c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
000000000000947f         call       hash_rehash                                 ; hash_rehash
0000000000009484         test       al, al
0000000000009486         jne        loc_93af

000000000000948c         mov        rdi, qword [rbx+0x48]
0000000000009490         test       rdi, rdi
0000000000009493         je         loc_94a9

0000000000009495         nop        dword [rax]

                     loc_9498:
0000000000009498         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
000000000000949c         call       sub_1a90                                    ; sub_1a90
00000000000094a1         test       r12, r12
00000000000094a4         mov        rdi, r12
00000000000094a7         jne        loc_9498

                     loc_94a9:
00000000000094a9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
00000000000094b1         jmp        loc_93af
00000000000094b6         align      64

                     loc_94c0:
00000000000094c0         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
00000000000094c3         pxor       xmm1, xmm1
00000000000094c7         shr        rcx, 0x1
00000000000094ca         and        eax, 0x1
00000000000094cd         or         rcx, rax
00000000000094d0         cvtsi2ss   xmm1, rcx
00000000000094d5         addss      xmm1, xmm1
00000000000094d9         jmp        loc_9408
00000000000094de         align      32

                     loc_94e0:
00000000000094e0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
00000000000094e3         pxor       xmm0, xmm0
00000000000094e7         shr        rdx, 0x1
00000000000094ea         and        eax, 0x1
00000000000094ed         or         rdx, rax
00000000000094f0         cvtsi2ss   xmm0, rdx
00000000000094f5         addss      xmm0, xmm0
00000000000094f9         jmp        loc_93ee
00000000000094fe         align      256

                     loc_9500:
0000000000009500         subss      xmm0, dword [float_b050]                    ; float_b050, CODE XREF=hash_delete+257
0000000000009508         movabs     rax, 0x8000000000000000
0000000000009512         cvttss2si  rsi, xmm0
0000000000009517         xor        rsi, rax
000000000000951a         jmp        loc_947c
000000000000951f         align      32

                     loc_9520:
0000000000009520         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000009525         jmp        loc_946a
000000000000952a         align      16

                     loc_9530:
0000000000009530         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000009533         pxor       xmm1, xmm1
0000000000009537         shr        rcx, 0x1
000000000000953a         and        eax, 0x1
000000000000953d         or         rcx, rax
0000000000009540         cvtsi2ss   xmm1, rcx
0000000000009545         addss      xmm1, xmm1
0000000000009549         jmp        loc_944a
000000000000954e         align      16

                     loc_9550:
0000000000009550         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000009553         pxor       xmm0, xmm0
0000000000009557         shr        rcx, 0x1
000000000000955a         and        eax, 0x1
000000000000955d         or         rcx, rax
0000000000009560         cvtsi2ss   xmm0, rcx
0000000000009565         addss      xmm0, xmm0
0000000000009569         jmp        loc_9434

                     loc_956e:
000000000000956e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000009573         align      128                                         ; End of unwind block (FDE at 0xc924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_init:
0000000000009580         mov        byte [rdi+0x1c], 0x1                        ; Begin of unwind block (FDE at 0xc95c), CODE XREF=rpl_fts_open+681
0000000000009584         mov        qword [rdi+0x14], 0x0
000000000000958c         mov        dword [rdi], esi
000000000000958e         mov        dword [rdi+4], esi
0000000000009591         mov        dword [rdi+8], esi
0000000000009594         mov        dword [rdi+0xc], esi
0000000000009597         mov        dword [rdi+0x10], esi
000000000000959a         ret
                        ; endp
000000000000959b         align      32                                          ; End of unwind block (FDE at 0xc95c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_empty:
00000000000095a0         movzx      eax, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xc970), CODE XREF=fd_ring_clear+31, fts_safe_changedir+455
00000000000095a4         ret
                        ; endp
00000000000095a5         align      16                                          ; End of unwind block (FDE at 0xc970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_push:
00000000000095b0         movzx      edx, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xc984), CODE XREF=cwd_advance_fd+52
00000000000095b4         mov        ecx, dword [rdi+0x14]
00000000000095b7         xor        edx, 0x1
00000000000095ba         movzx      edx, dl
00000000000095bd         add        ecx, edx
00000000000095bf         and        ecx, 0x3
00000000000095c2         mov        eax, ecx
00000000000095c4         lea        r8, qword [rdi+rax*4]
00000000000095c8         mov        eax, dword [r8]
00000000000095cb         mov        dword [r8], esi
00000000000095ce         mov        esi, dword [rdi+0x18]
00000000000095d1         mov        dword [rdi+0x14], ecx
00000000000095d4         cmp        esi, ecx
00000000000095d6         jne        loc_95e0

00000000000095d8         add        edx, esi
00000000000095da         and        edx, 0x3
00000000000095dd         mov        dword [rdi+0x18], edx

                     loc_95e0:
00000000000095e0         mov        byte [rdi+0x1c], 0x0                        ; CODE XREF=i_ring_push+38
00000000000095e4         ret
                        ; endp
00000000000095e5         align      16                                          ; End of unwind block (FDE at 0xc984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_pop:
00000000000095f0         cmp        byte [rdi+0x1c], 0x0                        ; Begin of unwind block (FDE at 0xc998), CODE XREF=fd_ring_clear+19, fts_safe_changedir+475
00000000000095f4         jne        loc_9625

00000000000095f6         mov        eax, dword [rdi+0x14]
00000000000095f9         mov        esi, dword [rdi+0x10]
00000000000095fc         lea        rcx, qword [rdi+rax*4]
0000000000009600         mov        rdx, rax
0000000000009603         mov        eax, dword [rcx]
0000000000009605         mov        dword [rcx], esi
0000000000009607         cmp        edx, dword [rdi+0x18]
000000000000960a         je         loc_9620

000000000000960c         add        edx, 0x3
000000000000960f         and        edx, 0x3
0000000000009612         mov        dword [rdi+0x14], edx
0000000000009615         ret
                        ; endp
0000000000009616         align      32

                     loc_9620:
0000000000009620         mov        byte [rdi+0x1c], 0x1                        ; CODE XREF=i_ring_pop+26
0000000000009624         ret
                        ; endp

                     loc_9625:
0000000000009625         sub        rsp, 0x8                                    ; CODE XREF=i_ring_pop+4
0000000000009629         call       j_abort                                     ; abort
                        ; endp
000000000000962e         align      16                                          ; End of unwind block (FDE at 0xc998)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000009630         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc9ac), CODE XREF=gettext_quote.part.1+11
0000000000009634         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000009639         call       j_nl_langinfo                               ; nl_langinfo
000000000000963e         test       rax, rax
0000000000009641         je         loc_9660

0000000000009643         cmp        byte [rax], 0x0
0000000000009646         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000964d         cmove      rax, rdx
0000000000009651         add        rsp, 0x8
0000000000009655         ret
                        ; endp
0000000000009656         align      32

                     loc_9660:
0000000000009660         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000009667         add        rsp, 0x8
000000000000966b         ret
                        ; endp
000000000000966c         align      16                                          ; End of unwind block (FDE at 0xc9ac)

                     openat_safer:
0000000000009670         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xc9cc), CODE XREF=diropen.isra.6+53, opendirat+21
0000000000009674         mov        qword [rsp+0x58+var_20], rcx
0000000000009679         xor        ecx, ecx
000000000000967b         mov        rax, qword [fs:0x28]
0000000000009684         mov        qword [rsp+0x58+var_40], rax
0000000000009689         xor        eax, eax
000000000000968b         test       dl, 0x40
000000000000968e         jne        loc_96b8

                     loc_9690:
0000000000009690         xor        eax, eax                                    ; CODE XREF=openat_safer+103
0000000000009692         call       j_openat                                    ; openat
0000000000009697         mov        edi, eax
0000000000009699         call       fd_safer                                    ; fd_safer
000000000000969e         mov        rsi, qword [rsp+0x58+var_40]
00000000000096a3         xor        rsi, qword [fs:0x28]
00000000000096ac         jne        loc_96d9

00000000000096ae         add        rsp, 0x58
00000000000096b2         ret
                        ; endp
00000000000096b3         align      8

                     loc_96b8:
00000000000096b8         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
00000000000096bd         mov        dword [rsp+0x58+var_58], 0x18
00000000000096c4         mov        ecx, dword [rsp+0x58+var_20]
00000000000096c8         mov        qword [rsp+0x58+var_50], rax
00000000000096cd         lea        rax, qword [rsp+0x58+var_38]
00000000000096d2         mov        qword [rsp+0x58+var_48], rax
00000000000096d7         jmp        loc_9690

                     loc_96d9:
00000000000096d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
00000000000096de         align      32                                          ; End of unwind block (FDE at 0xc9cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
00000000000096e0         push       r13                                         ; Begin of unwind block (FDE at 0xc9ec), CODE XREF=fts_build+1189
00000000000096e2         push       r12
00000000000096e4         or         edx, 0x90900
00000000000096ea         push       rbp
00000000000096eb         push       rbx
00000000000096ec         xor        eax, eax
00000000000096ee         mov        r12, rcx
00000000000096f1         sub        rsp, 0x8
00000000000096f5         call       openat_safer                                ; openat_safer
00000000000096fa         test       eax, eax
00000000000096fc         js         loc_9750

00000000000096fe         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
0000000000009700         mov        ebx, eax
0000000000009702         call       j_fdopendir                                 ; fdopendir
0000000000009707         test       rax, rax
000000000000970a         mov        rbp, rax
000000000000970d         je         loc_9728

000000000000970f         mov        dword [r12], ebx
0000000000009713         add        rsp, 0x8
0000000000009717         mov        rax, rbp
000000000000971a         pop        rbx
000000000000971b         pop        rbp
000000000000971c         pop        r12
000000000000971e         pop        r13
0000000000009720         ret
                        ; endp
0000000000009721         align      8

                     loc_9728:
0000000000009728         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
000000000000972d         mov        r13d, dword [rax]
0000000000009730         mov        r12, rax
0000000000009733         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009735         call       j_close                                     ; close
000000000000973a         mov        rax, rbp
000000000000973d         mov        dword [r12], r13d
0000000000009741         add        rsp, 0x8
0000000000009745         pop        rbx
0000000000009746         pop        rbp
0000000000009747         pop        r12
0000000000009749         pop        r13
000000000000974b         ret
                        ; endp
000000000000974c         align      16

                     loc_9750:
0000000000009750         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
0000000000009754         xor        ebp, ebp
0000000000009756         pop        rbx
0000000000009757         mov        rax, rbp
000000000000975a         pop        rbp
000000000000975b         pop        r12
000000000000975d         pop        r13
000000000000975f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000009760         push       r13                                         ; End of unwind block (FDE at 0xc9ec), Begin of unwind block (FDE at 0xca4c), CODE XREF=open_safer+42, openat_safer+41
0000000000009762         push       r12
0000000000009764         push       rbp
0000000000009765         push       rbx
0000000000009766         mov        ebx, edi
0000000000009768         sub        rsp, 0x8
000000000000976c         cmp        edi, 0x2
000000000000976f         ja         loc_9792

0000000000009771         call       dup_safer                                   ; dup_safer
0000000000009776         mov        r12d, eax
0000000000009779         call       j___errno_location                          ; __errno_location
000000000000977e         mov        r13d, dword [rax]
0000000000009781         mov        rbp, rax
0000000000009784         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009786         call       j_close                                     ; close
000000000000978b         mov        ebx, r12d
000000000000978e         mov        dword [rbp], r13d

                     loc_9792:
0000000000009792         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000009796         mov        eax, ebx
0000000000009798         pop        rbx
0000000000009799         pop        rbp
000000000000979a         pop        r12
000000000000979c         pop        r13
000000000000979e         ret
                        ; endp
000000000000979f         align      32                                          ; End of unwind block (FDE at 0xca4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
00000000000097a0         push       r12                                         ; Begin of unwind block (FDE at 0xca84), CODE XREF=close_stream+21
00000000000097a2         push       rbp
00000000000097a3         push       rbx
00000000000097a4         mov        rbx, rdi
00000000000097a7         call       j_fileno                                    ; fileno
00000000000097ac         test       eax, eax
00000000000097ae         mov        rdi, rbx
00000000000097b1         js         loc_9807

00000000000097b3         call       j___freading                                ; __freading
00000000000097b8         test       eax, eax
00000000000097ba         jne        loc_97e8

                     loc_97bc:
00000000000097bc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000097bf         call       rpl_fflush                                  ; rpl_fflush
00000000000097c4         test       eax, eax
00000000000097c6         je         loc_9804

00000000000097c8         call       j___errno_location                          ; __errno_location
00000000000097cd         mov        r12d, dword [rax]
00000000000097d0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000097d3         mov        rbp, rax
00000000000097d6         call       j_fclose                                    ; fclose
00000000000097db         test       r12d, r12d
00000000000097de         jne        loc_9810

                     loc_97e0:
00000000000097e0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000097e1         pop        rbp
00000000000097e2         pop        r12
00000000000097e4         ret
                        ; endp
00000000000097e5         align      8

                     loc_97e8:
00000000000097e8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000097eb         call       j_fileno                                    ; fileno
00000000000097f0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000097f2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000097f7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000097f9         call       j_lseek                                     ; lseek
00000000000097fe         cmp        rax, 0xffffffffffffffff
0000000000009802         jne        loc_97bc

                     loc_9804:
0000000000009804         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_9807:
0000000000009807         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000009808         pop        rbp
0000000000009809         pop        r12
000000000000980b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_9810:
0000000000009810         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000009814         mov        eax, 0xffffffff
0000000000009819         jmp        loc_97e0
000000000000981b         align      32                                          ; End of unwind block (FDE at 0xca84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000009820         push       r12                                         ; Begin of unwind block (FDE at 0xcabc), CODE XREF=fts_build+2314
0000000000009822         push       rbp
0000000000009823         mov        ebp, edi
0000000000009825         push       rbx
0000000000009826         sub        rsp, 0x50
000000000000982a         mov        rax, qword [fs:0x28]
0000000000009833         mov        qword [rsp+0x68+var_50], rax
0000000000009838         xor        eax, eax
000000000000983a         lea        rax, qword [rsp+0x68+arg_0]
000000000000983f         test       esi, esi
0000000000009841         mov        qword [rsp+0x68+var_38], rdx
0000000000009846         mov        qword [rsp+0x68+var_30], rcx
000000000000984b         mov        qword [rsp+0x68+var_28], r8
0000000000009850         mov        qword [rsp+0x68+var_60], rax
0000000000009855         lea        rax, qword [rsp+0x68+var_48]
000000000000985a         mov        qword [rsp+0x68+var_20], r9
000000000000985f         mov        dword [rsp+0x68+var_68], 0x10
0000000000009866         mov        qword [rsp+0x68+var_58], rax
000000000000986b         je         loc_9a72

0000000000009871         cmp        esi, 0x406
0000000000009877         jne        loc_98c0

0000000000009879         mov        rax, qword [rsp+0x68+var_58]
000000000000987e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000009885         mov        dword [rsp+0x68+var_68], 0x18
000000000000988c         mov        r12d, dword [rax+0x10]
0000000000009890         mov        edx, r12d
0000000000009893         js         loc_99c3

0000000000009899         xor        eax, eax
000000000000989b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
00000000000098a0         call       j_fcntl                                     ; fcntl
00000000000098a5         test       eax, eax
00000000000098a7         mov        ebx, eax
00000000000098a9         js         loc_9a38

                     loc_98af:
00000000000098af         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
00000000000098b9         jmp        loc_9900
00000000000098bb         align      64

                     loc_98c0:
00000000000098c0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
00000000000098c3         je         loc_98f0

00000000000098c5         jg         loc_9920

00000000000098c7         cmp        esi, 0x4
00000000000098ca         je         loc_99a0

00000000000098d0         jg         loc_9990

00000000000098d6         cmp        esi, 0x2
00000000000098d9         je         loc_99a0

00000000000098df         jg         loc_98f0

00000000000098e1         cmp        esi, 0x1
00000000000098e4         jne        loc_9948

00000000000098e6         nop        word [cs:rax+rax]

                     loc_98f0:
00000000000098f0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
00000000000098f2         xor        eax, eax
00000000000098f4         call       j_fcntl                                     ; fcntl
00000000000098f9         mov        ebx, eax
00000000000098fb         nop        dword [rax+rax]

                     loc_9900:
0000000000009900         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000009905         xor        rcx, qword [fs:0x28]
000000000000990e         mov        eax, ebx
0000000000009910         jne        loc_9a6d

0000000000009916         add        rsp, 0x50
000000000000991a         pop        rbx
000000000000991b         pop        rbp
000000000000991c         pop        r12
000000000000991e         ret
                        ; endp
000000000000991f         align      32

                     loc_9920:
0000000000009920         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000009926         jg         loc_9970

0000000000009928         cmp        esi, 0x406
000000000000992e         jge        loc_99a0

0000000000009930         cmp        esi, 0x401
0000000000009936         je         loc_98f0

0000000000009938         cmp        esi, 0x402
000000000000993e         je         loc_99a0

0000000000009940         cmp        esi, 0x400
0000000000009946         je         loc_99a0

                     loc_9948:
0000000000009948         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000994b         cmp        eax, 0x2f
000000000000994e         ja         loc_9a8a

0000000000009954         add        rax, qword [rsp+0x68+var_58]

                     loc_9959:
0000000000009959         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000995c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000995e         xor        eax, eax
0000000000009960         call       j_fcntl                                     ; fcntl
0000000000009965         mov        ebx, eax
0000000000009967         jmp        loc_9900
0000000000009969         align      16

                     loc_9970:
0000000000009970         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000009976         je         loc_99a0

0000000000009978         jl         loc_98f0

000000000000997e         cmp        esi, 0x40a
0000000000009984         jne        loc_9948

0000000000009986         jmp        loc_98f0
000000000000998b         align      16

                     loc_9990:
0000000000009990         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000009993         je         loc_98f0

0000000000009999         jg         loc_99a0

000000000000999b         cmp        esi, 0x8
000000000000999e         jne        loc_9948

                     loc_99a0:
00000000000099a0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
00000000000099a3         cmp        eax, 0x2f
00000000000099a6         ja         loc_9a94

00000000000099ac         add        rax, qword [rsp+0x68+var_58]

                     loc_99b1:
00000000000099b1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
00000000000099b3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000099b5         xor        eax, eax
00000000000099b7         call       j_fcntl                                     ; fcntl
00000000000099bc         mov        ebx, eax
00000000000099be         jmp        loc_9900

                     loc_99c3:
00000000000099c3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
00000000000099c5         xor        eax, eax
00000000000099c7         call       j_fcntl                                     ; fcntl
00000000000099cc         test       eax, eax
00000000000099ce         mov        ebx, eax
00000000000099d0         js         loc_9900

00000000000099d6         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000099dd         jne        loc_9900

                     loc_99e3:
00000000000099e3         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
00000000000099e5         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
00000000000099ea         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000099ec         call       j_fcntl                                     ; fcntl
00000000000099f1         test       eax, eax
00000000000099f3         js         loc_9a11

00000000000099f5         or         eax, 0x1
00000000000099f8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
00000000000099fd         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000099ff         mov        edx, eax
0000000000009a01         xor        eax, eax
0000000000009a03         call       j_fcntl                                     ; fcntl
0000000000009a08         cmp        eax, 0xffffffff
0000000000009a0b         jne        loc_9900

                     loc_9a11:
0000000000009a11         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000009a16         mov        r12d, dword [rax]
0000000000009a19         mov        rbp, rax
0000000000009a1c         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009a1e         call       j_close                                     ; close
0000000000009a23         mov        ebx, 0xffffffff
0000000000009a28         mov        dword [rbp], r12d
0000000000009a2c         jmp        loc_9900
0000000000009a31         align      8

                     loc_9a38:
0000000000009a38         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
0000000000009a3d         cmp        dword [rax], 0x16
0000000000009a40         jne        loc_98af

0000000000009a46         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000009a48         xor        eax, eax
0000000000009a4a         mov        edx, r12d
0000000000009a4d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000009a4f         call       j_fcntl                                     ; fcntl
0000000000009a54         test       eax, eax
0000000000009a56         mov        ebx, eax
0000000000009a58         js         loc_9900

0000000000009a5e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000009a68         jmp        loc_99e3

                     loc_9a6d:
0000000000009a6d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_9a72:
0000000000009a72         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000009a77         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000009a79         mov        edx, dword [rax+0x10]
0000000000009a7c         xor        eax, eax
0000000000009a7e         call       j_fcntl                                     ; fcntl
0000000000009a83         mov        ebx, eax
0000000000009a85         jmp        loc_9900

                     loc_9a8a:
0000000000009a8a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
0000000000009a8f         jmp        loc_9959

                     loc_9a94:
0000000000009a94         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000009a99         jmp        loc_99b1
0000000000009a9e         align      32                                          ; End of unwind block (FDE at 0xcabc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000009aa0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xcaf4), CODE XREF=rpl_fclose+31
0000000000009aa3         push       rbx
0000000000009aa4         mov        rbx, rdi
0000000000009aa7         je         loc_9aba

0000000000009aa9         call       j___freading                                ; __freading
0000000000009aae         test       eax, eax
0000000000009ab0         je         loc_9aba

0000000000009ab2         test       dword [rbx], 0x100
0000000000009ab8         jne        loc_9ac8

                     loc_9aba:
0000000000009aba         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000009abd         pop        rbx
0000000000009abe         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000009ac3         align      8

                     loc_9ac8:
0000000000009ac8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000009acb         mov        edx, 0x1
0000000000009ad0         xor        esi, esi
0000000000009ad2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000009ad7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000009ada         pop        rbx
0000000000009adb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000009ae0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xcaf4), Begin of unwind block (FDE at 0xcb14), CODE XREF=rpl_fflush+50
0000000000009ae4         cmp        qword [rdi+0x10], rax
0000000000009ae8         je         loc_9af0

                     j_j_fseeko:        // fseeko
0000000000009aea         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000009aef         align      16

                     loc_9af0:
0000000000009af0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000009af4         cmp        qword [rdi+0x28], rax
0000000000009af8         jne        j_j_fseeko                                  ; fseeko

0000000000009afa         cmp        qword [rdi+0x48], 0x0
0000000000009aff         jne        j_j_fseeko                                  ; fseeko

0000000000009b01         push       r12
0000000000009b03         push       rbp
0000000000009b04         mov        r12d, edx
0000000000009b07         push       rbx
0000000000009b08         mov        rbp, rsi
0000000000009b0b         mov        rbx, rdi
0000000000009b0e         call       j_fileno                                    ; fileno
0000000000009b13         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000009b16         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000009b19         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000009b1b         call       j_lseek                                     ; lseek
0000000000009b20         cmp        rax, 0xffffffffffffffff
0000000000009b24         je         loc_9b32

0000000000009b26         and        dword [rbx], 0xffffffef
0000000000009b29         mov        qword [rbx+0x90], rax
0000000000009b30         xor        eax, eax

                     loc_9b32:
0000000000009b32         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000009b33         pop        rbp
0000000000009b34         pop        r12
0000000000009b36         ret
                        ; endp
0000000000009b37         align      64                                          ; End of unwind block (FDE at 0xcb14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000009b40         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xcb44), CODE XREF=fd_safer+17
0000000000009b45         xor        esi, esi
0000000000009b47         xor        eax, eax
0000000000009b49         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
0000000000009b4e         align      16                                          ; End of unwind block (FDE at 0xcb44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000009b50         push       r15                                         ; Begin of unwind block (FDE at 0xcb5c), DATA XREF=_start+22
0000000000009b52         push       r14
0000000000009b54         mov        r15, rdx
0000000000009b57         push       r13
0000000000009b59         push       r12
0000000000009b5b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000009b62         push       rbp
0000000000009b63         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000009b6a         push       rbx
0000000000009b6b         mov        r13d, edi
0000000000009b6e         mov        r14, rsi
0000000000009b71         sub        rbp, r12
0000000000009b74         sub        rsp, 0x8
0000000000009b78         sar        rbp, 0x3
0000000000009b7c         call       _init                                       ; _init
0000000000009b81         test       rbp, rbp
0000000000009b84         je         loc_9ba6

0000000000009b86         xor        ebx, ebx
0000000000009b88         nop        dword [rax+rax]

                     loc_9b90:
0000000000009b90         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000009b93         mov        rsi, r14
0000000000009b96         mov        edi, r13d
0000000000009b99         call       qword [r12+rbx*8]
0000000000009b9d         add        rbx, 0x1
0000000000009ba1         cmp        rbp, rbx
0000000000009ba4         jne        loc_9b90

                     loc_9ba6:
0000000000009ba6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000009baa         pop        rbx
0000000000009bab         pop        rbp
0000000000009bac         pop        r12
0000000000009bae         pop        r13
0000000000009bb0         pop        r14
0000000000009bb2         pop        r15
0000000000009bb4         ret
                        ; endp
0000000000009bb5         align      64                                          ; End of unwind block (FDE at 0xcb5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000009bc0         ret                                                    ; Begin of unwind block (FDE at 0xcba4), DATA XREF=_start+15
                        ; endp
0000000000009bc2         align      16                                          ; End of unwind block (FDE at 0xcba4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000009bd0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xcbbc), __dso_handle, CODE XREF=main+126
0000000000009bd7         xor        esi, esi
0000000000009bd9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000009bde         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xcbbc)
0000000000009bdf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x9be0; 0x9be9[ (9 bytes)
        ; File offset : [39904; 39913[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000009be0         sub        rsp, 0x8
0000000000009be4         add        rsp, 0x8
0000000000009be8         ret
                        ; endp
0000000000009be9         db  0x00 ; '.'
0000000000009bea         db  0x00 ; '.'
0000000000009beb         db  0x00 ; '.'
0000000000009bec         db  0x00 ; '.'
0000000000009bed         db  0x00 ; '.'
0000000000009bee         db  0x00 ; '.'
0000000000009bef         db  0x00 ; '.'
0000000000009bf0         db  0x00 ; '.'
0000000000009bf1         db  0x00 ; '.'
0000000000009bf2         db  0x00 ; '.'
0000000000009bf3         db  0x00 ; '.'
0000000000009bf4         db  0x00 ; '.'
0000000000009bf5         db  0x00 ; '.'
0000000000009bf6         db  0x00 ; '.'
0000000000009bf7         db  0x00 ; '.'
0000000000009bf8         db  0x00 ; '.'
0000000000009bf9         db  0x00 ; '.'
0000000000009bfa         db  0x00 ; '.'
0000000000009bfb         db  0x00 ; '.'
0000000000009bfc         db  0x00 ; '.'
0000000000009bfd         db  0x00 ; '.'
0000000000009bfe         db  0x00 ; '.'
0000000000009bff         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x9c00; 0xb066[ (5222 bytes)
        ; File offset : [39936; 45158[ (5222 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000009c00         db  0x01 ; '.'
0000000000009c01         db  0x00 ; '.'
0000000000009c02         db  0x02 ; '.'
0000000000009c03         db  0x00 ; '.'
                     aChmod:
0000000000009c04         db         "chmod", 0                                  ; DATA XREF=main+375, usage+422, usage+740, usage+924, usage+943, usage+977
0000000000009c0a         db  0x5b ; '['                                         ; DATA XREF=usage+434
0000000000009c0b         db  0x00 ; '.'
                     aTestInvocation:
0000000000009c0c         db         "test invocation", 0                        ; DATA XREF=usage+473
                     aMulticallInvoc:
0000000000009c1c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+521
                     aSha224sum:
0000000000009c32         db         "sha224sum", 0                              ; DATA XREF=usage+538
                     aSha2Utilities:
0000000000009c3c         db         "sha2 utilities", 0                         ; DATA XREF=usage+550
                     aSha256sum:
0000000000009c4b         db         "sha256sum", 0                              ; DATA XREF=usage+441
                     aSha384sum:
0000000000009c55         db         "sha384sum", 0                              ; DATA XREF=usage+485
                     aSha512sum:
0000000000009c5f         db         "sha512sum", 0                              ; DATA XREF=usage+509
                     aNsOnlineHelpSn:
0000000000009c69         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+626
0000000000009c80         db  0x47 ; 'G'                                         ; DATA XREF=main+368, usage+654, usage+847, emit_bug_reporting_address+68
0000000000009c81         db  0x4e ; 'N'
0000000000009c82         db  0x55 ; 'U'
0000000000009c83         db  0x20 ; ' '
                     aCoreutils:
0000000000009c84         db         "coreutils", 0                              ; DATA XREF=main+95, main+107, usage+497
0000000000009c8e         db  0x65 ; 'e'                                         ; DATA XREF=usage+693, usage+886
0000000000009c8f         db  0x6e ; 'n'
0000000000009c90         db  0x5f ; '_'
0000000000009c91         db  0x00 ; '.'
                     aFullDocumentat:
0000000000009c92         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+721, usage+910
                     aUsrlocalsharel:
0000000000009cad         db         "/usr/local/share/locale", 0                ; DATA XREF=main+88
                     aJimMeyering:
0000000000009cc5         db         "Jim Meyering", 0                           ; DATA XREF=main+354
                     aDavidMackenzie:
0000000000009cd2         db         "David MacKenzie", 0                        ; DATA XREF=main+361
                     aMissingOperand_9ce2:        // aMissingOperand
0000000000009ce2         db         "missing operand", 0                        ; DATA XREF=sub_1fe0+1704
                     aMissingOperand:
0000000000009cf2         db         "missing operand after %s", 0               ; DATA XREF=sub_1fe0+1970
                     aInvalidModeS:
0000000000009d0b         db         "invalid mode: %s", 0                       ; DATA XREF=sub_1fe0+1911
                     aFtsreadFailed:
0000000000009d1c         db         "fts_read failed", 0                        ; DATA XREF=sub_1fe0+1494
                     aCannotAccessS:
0000000000009d2c         db         "cannot access %s", 0                       ; DATA XREF=main+1270
                     aCannotReadDire:
0000000000009d3d         db         "cannot read directory %s", 0               ; DATA XREF=sub_1fe0+1411
                     aChangingPermis:
0000000000009d56         db         "changing permissions of %s", 0             ; DATA XREF=sub_1fe0+206
                     aGettingNewAttr:
0000000000009d71         db         "getting new attributes of %s", 0           ; DATA XREF=sub_1fe0+1001
                     aFtscloseFailed:
0000000000009d8e         db         "fts_close failed", 0                       ; DATA XREF=main+994
                     aChanges:
0000000000009d9f         db         "changes", 0
                     aRecursive:
0000000000009da7         db         "recursive", 0
0000000000009db1         db  0x6e ; 'n'
0000000000009db2         db  0x6f ; 'o'
0000000000009db3         db  0x2d ; '-'
                     aPreserveroot:
0000000000009db4         db         "preserve-root", 0
                     aQuiet:
0000000000009dc2         db         "quiet", 0
                     aReference:
0000000000009dc8         db         "reference", 0
                     aSilent:
0000000000009dd2         db         "silent", 0
                     aVerbose:
0000000000009dd9         db         "verbose", 0
                     aHelp:
0000000000009de1         db         "help", 0
                     aVersion:
0000000000009de6         db         "version", 0
0000000000009dee         align      16
                     aTrySHelpForMor:
0000000000009df0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000009e17         align      8
                     aUsageSOptionMo:
0000000000009e18         db         "Usage: %s [OPTION]... MODE[,MODE]... FILE...\n  or:  %s [OPTION]... OCTAL-MODE FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n", 0 ; DATA XREF=usage+93
0000000000009e9f         align      32
                     aChangeTheModeO:
0000000000009ea0         db         "Change the mode of each FILE to MODE.\nWith --reference, change the mode of each FILE to that of RFILE.\n\n", 0 ; DATA XREF=usage+138
0000000000009f09         db  0x00 ; '.'
0000000000009f0a         db  0x00 ; '.'
0000000000009f0b         db  0x00 ; '.'
0000000000009f0c         db  0x00 ; '.'
0000000000009f0d         db  0x00 ; '.'
0000000000009f0e         db  0x00 ; '.'
0000000000009f0f         db  0x00 ; '.'
0000000000009f10         db  0x20 ; ' '                                         ; DATA XREF=usage+175
0000000000009f11         db  0x20 ; ' '
0000000000009f12         db  0x2d ; '-'
0000000000009f13         db  0x63 ; 'c'
0000000000009f14         db  0x2c ; ','
0000000000009f15         db  0x20 ; ' '
0000000000009f16         db  0x2d ; '-'
0000000000009f17         db  0x2d ; '-'
0000000000009f18         db  0x63 ; 'c'
0000000000009f19         db  0x68 ; 'h'
0000000000009f1a         db  0x61 ; 'a'
0000000000009f1b         db  0x6e ; 'n'
0000000000009f1c         db  0x67 ; 'g'
0000000000009f1d         db  0x65 ; 'e'
0000000000009f1e         db  0x73 ; 's'
0000000000009f1f         db  0x20 ; ' '
0000000000009f20         db  0x20 ; ' '
0000000000009f21         db  0x20 ; ' '
0000000000009f22         db  0x20 ; ' '
0000000000009f23         db  0x20 ; ' '
0000000000009f24         db  0x20 ; ' '
0000000000009f25         db  0x20 ; ' '
0000000000009f26         db  0x20 ; ' '
0000000000009f27         db  0x20 ; ' '
0000000000009f28         db  0x20 ; ' '
0000000000009f29         db  0x6c ; 'l'
0000000000009f2a         db  0x69 ; 'i'
0000000000009f2b         db  0x6b ; 'k'
0000000000009f2c         db  0x65 ; 'e'
0000000000009f2d         db  0x20 ; ' '
0000000000009f2e         db  0x76 ; 'v'
0000000000009f2f         db  0x65 ; 'e'
0000000000009f30         db  0x72 ; 'r'
0000000000009f31         db  0x62 ; 'b'
0000000000009f32         db  0x6f ; 'o'
0000000000009f33         db  0x73 ; 's'
0000000000009f34         db  0x65 ; 'e'
0000000000009f35         db  0x20 ; ' '
0000000000009f36         db  0x62 ; 'b'
0000000000009f37         db  0x75 ; 'u'
0000000000009f38         db  0x74 ; 't'
0000000000009f39         db  0x20 ; ' '
0000000000009f3a         db  0x72 ; 'r'
0000000000009f3b         db  0x65 ; 'e'
0000000000009f3c         db  0x70 ; 'p'
0000000000009f3d         db  0x6f ; 'o'
0000000000009f3e         db  0x72 ; 'r'
0000000000009f3f         db  0x74 ; 't'
0000000000009f40         db  0x20 ; ' '
0000000000009f41         db  0x6f ; 'o'
0000000000009f42         db  0x6e ; 'n'
0000000000009f43         db  0x6c ; 'l'
0000000000009f44         db  0x79 ; 'y'
0000000000009f45         db  0x20 ; ' '
0000000000009f46         db  0x77 ; 'w'
0000000000009f47         db  0x68 ; 'h'
0000000000009f48         db  0x65 ; 'e'
0000000000009f49         db  0x6e ; 'n'
0000000000009f4a         db  0x20 ; ' '
0000000000009f4b         db  0x61 ; 'a'
0000000000009f4c         db  0x20 ; ' '
0000000000009f4d         db  0x63 ; 'c'
0000000000009f4e         db  0x68 ; 'h'
0000000000009f4f         db  0x61 ; 'a'
0000000000009f50         db  0x6e ; 'n'
0000000000009f51         db  0x67 ; 'g'
0000000000009f52         db  0x65 ; 'e'
0000000000009f53         db  0x20 ; ' '
0000000000009f54         db  0x69 ; 'i'
0000000000009f55         db  0x73 ; 's'
0000000000009f56         db  0x20 ; ' '
0000000000009f57         db  0x6d ; 'm'
0000000000009f58         db  0x61 ; 'a'
0000000000009f59         db  0x64 ; 'd'
0000000000009f5a         db  0x65 ; 'e'
0000000000009f5b         db  0x0a ; '.'
0000000000009f5c         db  0x20 ; ' '
0000000000009f5d         db  0x20 ; ' '
0000000000009f5e         db  0x2d ; '-'
0000000000009f5f         db  0x66 ; 'f'
0000000000009f60         db  0x2c ; ','
0000000000009f61         db  0x20 ; ' '
0000000000009f62         db  0x2d ; '-'
0000000000009f63         db  0x2d ; '-'
0000000000009f64         db  0x73 ; 's'
0000000000009f65         db  0x69 ; 'i'
0000000000009f66         db  0x6c ; 'l'
0000000000009f67         db  0x65 ; 'e'
0000000000009f68         db  0x6e ; 'n'
0000000000009f69         db  0x74 ; 't'
0000000000009f6a         db  0x2c ; ','
0000000000009f6b         db  0x20 ; ' '
0000000000009f6c         db  0x2d ; '-'
0000000000009f6d         db  0x2d ; '-'
0000000000009f6e         db  0x71 ; 'q'
0000000000009f6f         db  0x75 ; 'u'
0000000000009f70         db  0x69 ; 'i'
0000000000009f71         db  0x65 ; 'e'
0000000000009f72         db  0x74 ; 't'
0000000000009f73         db  0x20 ; ' '
0000000000009f74         db  0x20 ; ' '
0000000000009f75         db  0x73 ; 's'
0000000000009f76         db  0x75 ; 'u'
0000000000009f77         db  0x70 ; 'p'
0000000000009f78         db  0x70 ; 'p'
0000000000009f79         db  0x72 ; 'r'
0000000000009f7a         db  0x65 ; 'e'
0000000000009f7b         db  0x73 ; 's'
0000000000009f7c         db  0x73 ; 's'
0000000000009f7d         db  0x20 ; ' '
0000000000009f7e         db  0x6d ; 'm'
0000000000009f7f         db  0x6f ; 'o'
0000000000009f80         db  0x73 ; 's'
0000000000009f81         db  0x74 ; 't'
0000000000009f82         db  0x20 ; ' '
0000000000009f83         db  0x65 ; 'e'
0000000000009f84         db  0x72 ; 'r'
0000000000009f85         db  0x72 ; 'r'
0000000000009f86         db  0x6f ; 'o'
0000000000009f87         db  0x72 ; 'r'
0000000000009f88         db  0x20 ; ' '
0000000000009f89         db  0x6d ; 'm'
0000000000009f8a         db  0x65 ; 'e'
0000000000009f8b         db  0x73 ; 's'
0000000000009f8c         db  0x73 ; 's'
0000000000009f8d         db  0x61 ; 'a'
0000000000009f8e         db  0x67 ; 'g'
0000000000009f8f         db  0x65 ; 'e'
0000000000009f90         db  0x73 ; 's'
0000000000009f91         db  0x0a ; '.'
0000000000009f92         db  0x20 ; ' '
0000000000009f93         db  0x20 ; ' '
0000000000009f94         db  0x2d ; '-'
0000000000009f95         db  0x76 ; 'v'
0000000000009f96         db  0x2c ; ','
0000000000009f97         db  0x20 ; ' '
0000000000009f98         db  0x2d ; '-'
0000000000009f99         db  0x2d ; '-'
0000000000009f9a         db  0x76 ; 'v'
0000000000009f9b         db  0x65 ; 'e'
0000000000009f9c         db  0x72 ; 'r'
0000000000009f9d         db  0x62 ; 'b'
0000000000009f9e         db  0x6f ; 'o'
0000000000009f9f         db  0x73 ; 's'
                     aEOutputADiagno:
0000000000009fa0         db         "e          output a diagnostic for every file processed\n", 0 ; DATA XREF=leaf_optimization+72
0000000000009fd9         db  0x00 ; '.'
0000000000009fda         db  0x00 ; '.'
0000000000009fdb         db  0x00 ; '.'
0000000000009fdc         db  0x00 ; '.'
0000000000009fdd         db  0x00 ; '.'
0000000000009fde         db  0x00 ; '.'
0000000000009fdf         db  0x00 ; '.'
0000000000009fe0         db  0x20 ; ' '                                         ; DATA XREF=usage+212
0000000000009fe1         db  0x20 ; ' '
0000000000009fe2         db  0x20 ; ' '
0000000000009fe3         db  0x20 ; ' '
0000000000009fe4         db  0x20 ; ' '
0000000000009fe5         db  0x20 ; ' '
0000000000009fe6         db  0x2d ; '-'
0000000000009fe7         db  0x2d ; '-'
0000000000009fe8         db  0x6e ; 'n'
0000000000009fe9         db  0x6f ; 'o'
0000000000009fea         db  0x2d ; '-'
0000000000009feb         db  0x70 ; 'p'
0000000000009fec         db  0x72 ; 'r'
0000000000009fed         db  0x65 ; 'e'
0000000000009fee         db  0x73 ; 's'
0000000000009fef         db  0x65 ; 'e'
0000000000009ff0         db  0x72 ; 'r'
0000000000009ff1         db  0x76 ; 'v'
0000000000009ff2         db  0x65 ; 'e'
0000000000009ff3         db  0x2d ; '-'
0000000000009ff4         db  0x72 ; 'r'
0000000000009ff5         db  0x6f ; 'o'
0000000000009ff6         db  0x6f ; 'o'
0000000000009ff7         db  0x74 ; 't'
0000000000009ff8         db  0x20 ; ' '
0000000000009ff9         db  0x20 ; ' '
0000000000009ffa         db  0x64 ; 'd'
0000000000009ffb         db  0x6f ; 'o'
0000000000009ffc         db  0x20 ; ' '
0000000000009ffd         db  0x6e ; 'n'
0000000000009ffe         db  0x6f ; 'o'
0000000000009fff         db  0x74 ; 't'
                     aTreatSpecially:
000000000000a000         db         " treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n", 0 ; DATA XREF=sub_1fe0+139, strmode+60, fts_stat+189
                     aReferencerfile:
000000000000a060         db         "      --reference=RFILE  use RFILE's mode instead of MODE values\n", 0 ; DATA XREF=usage+249
000000000000a0a2         align      8
                     aRRecursiveChan:
000000000000a0a8         db         "  -R, --recursive        change files and directories recursively\n", 0 ; DATA XREF=usage+286
000000000000a0eb         align      16
                     aHelpDisplayThi:
000000000000a0f0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+323
000000000000a11d         align      32
                     aVersionOutputV:
000000000000a120         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+360
000000000000a156         align      8
                     aNeachModeIsOfT:
000000000000a158         db         "\nEach MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.\n", 0 ; DATA XREF=usage+397
000000000000a1a3         align      8
                     aHttpswwwgnuorg:
000000000000a1a8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+647, usage+747, usage+840, usage+950, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000a1d0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+991
000000000000a217         align      8
                     aOrAvailableLoc:
000000000000a218         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+790
000000000000a24b         db  0x00 ; '.'
000000000000a24c         db  0x00 ; '.'
000000000000a24d         db  0x00 ; '.'
000000000000a24e         db  0x00 ; '.'
000000000000a24f         db  0x00 ; '.'
000000000000a250         db  0x52 ; 'R'                                         ; DATA XREF=main+175
000000000000a251         db  0x63 ; 'c'
000000000000a252         db  0x66 ; 'f'
000000000000a253         db  0x76 ; 'v'
000000000000a254         db  0x72 ; 'r'
000000000000a255         db  0x3a ; ':'
000000000000a256         db  0x3a ; ':'
000000000000a257         db  0x77 ; 'w'
000000000000a258         db  0x3a ; ':'
000000000000a259         db  0x3a ; ':'
000000000000a25a         db  0x78 ; 'x'
000000000000a25b         db  0x3a ; ':'
000000000000a25c         db  0x3a ; ':'
000000000000a25d         db  0x58 ; 'X'
000000000000a25e         db  0x3a ; ':'
000000000000a25f         db  0x3a ; ':'
000000000000a260         db  0x73 ; 's'
000000000000a261         db  0x3a ; ':'
000000000000a262         db  0x3a ; ':'
000000000000a263         db  0x74 ; 't'
000000000000a264         db  0x3a ; ':'
000000000000a265         db  0x3a ; ':'
000000000000a266         db  0x75 ; 'u'
000000000000a267         db  0x3a ; ':'
000000000000a268         db  0x3a ; ':'
000000000000a269         db  0x67 ; 'g'
000000000000a26a         db  0x3a ; ':'
000000000000a26b         db  0x3a ; ':'
000000000000a26c         db  0x6f ; 'o'
000000000000a26d         db  0x3a ; ':'
000000000000a26e         db  0x3a ; ':'
000000000000a26f         db  0x61 ; 'a'
000000000000a270         db  0x3a ; ':'
000000000000a271         db  0x3a ; ':'
000000000000a272         db  0x2c ; ','
000000000000a273         db  0x3a ; ':'
000000000000a274         db  0x3a ; ':'
000000000000a275         db  0x2b ; '+'
000000000000a276         db  0x3a ; ':'
000000000000a277         db  0x3a ; ':'
000000000000a278         db  0x3d ; '='
000000000000a279         db  0x3a ; ':'
000000000000a27a         db  0x3a ; ':'
000000000000a27b         db  0x30 ; '0'
000000000000a27c         db  0x3a ; ':'
000000000000a27d         db  0x3a ; ':'
000000000000a27e         db  0x31 ; '1'
000000000000a27f         db  0x3a ; ':'
000000000000a280         db  0x3a ; ':'
000000000000a281         db  0x32 ; '2'
000000000000a282         db  0x3a ; ':'
000000000000a283         db  0x3a ; ':'
000000000000a284         db  0x33 ; '3'
000000000000a285         db  0x3a ; ':'
000000000000a286         db  0x3a ; ':'
000000000000a287         db  0x34 ; '4'
000000000000a288         db  0x3a ; ':'
000000000000a289         db  0x3a ; ':'
000000000000a28a         db  0x35 ; '5'
000000000000a28b         db  0x3a ; ':'
000000000000a28c         db  0x3a ; ':'
000000000000a28d         db  0x36 ; '6'
000000000000a28e         db  0x3a ; ':'
000000000000a28f         db  0x3a ; ':'
000000000000a290         db  0x37 ; '7'
000000000000a291         db  0x3a ; ':'
000000000000a292         db  0x3a ; ':'
000000000000a293         db  0x00 ; '.'
000000000000a294         db  0x00 ; '.'
000000000000a295         db  0x00 ; '.'
000000000000a296         db  0x00 ; '.'
000000000000a297         db  0x00 ; '.'
                     aCannotCombineM:
000000000000a298         db         "cannot combine mode and --reference options", 0 ; DATA XREF=sub_1fe0+2026
000000000000a2c4         align      8
                     aFailedToGetAtt:
000000000000a2c8         db         "failed to get attributes of %s", 0         ; DATA XREF=sub_1fe0+1582, sub_1fe0+1859
000000000000a2e7         db  0x00 ; '.'
                     aCannotOperateO:
000000000000a2e8         db         "cannot operate on dangling symlink %s", 0  ; DATA XREF=main+1185
000000000000a30e         db  0x00 ; '.'
000000000000a30f         db  0x00 ; '.'
                     aWarningCircula:
000000000000a310         db         "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 0 ; DATA XREF=sub_1fe0+1438
000000000000a3ca         db  0x00 ; '.'
000000000000a3cb         db  0x00 ; '.'
000000000000a3cc         db  0x00 ; '.'
000000000000a3cd         db  0x00 ; '.'
000000000000a3ce         db  0x00 ; '.'
000000000000a3cf         db  0x00 ; '.'
                     aItIsDangerousT_a3d0:        // aItIsDangerousT
000000000000a3d0         db         "it is dangerous to operate recursively on %s", 0 ; DATA XREF=sub_1fe0+1244
000000000000a3fd         align      1024
                     aItIsDangerousT:
000000000000a400         db         "it is dangerous to operate recursively on %s (same as %s)", 0 ; DATA XREF=sub_1fe0+1787
000000000000a43a         align      64
                     aUseNopreserver:
000000000000a440         db         "use --no-preserve-root to override this failsafe", 0 ; DATA XREF=sub_1fe0+1283
000000000000a471         align      8
                     aSNewPermission:
000000000000a478         db         "%s: new permissions are %s, not %s", 0     ; DATA XREF=sub_1fe0+889
000000000000a49b         align      32
                     aModeOfSChanged:
000000000000a4a0         db         "mode of %s changed from %04lo (%s) to %04lo (%s)\n", 0 ; DATA XREF=sub_1fe0+649
000000000000a4d2         align      8
                     aNeitherSymboli:
000000000000a4d8         db         "neither symbolic link %s nor referent has been changed\n", 0 ; DATA XREF=sub_1fe0+516
                     aFailedToChange:
000000000000a510         db         "failed to change mode of %s from %04lo (%s) to %04lo (%s)\n", 0 ; DATA XREF=sub_1fe0+370
000000000000a54b         align      16
                     aModeOfSRetaine:
000000000000a550         db         "mode of %s retained as %04lo (%s)\n", 0    ; DATA XREF=sub_1fe0+1093
000000000000a573         db  0x00 ; '.'
000000000000a574         db  0x9b ; '.'                                         ; DATA XREF=main+808
000000000000a575         db  0x7a ; 'z'
000000000000a576         db  0xff ; '.'
000000000000a577         db  0xff ; '.'
000000000000a578         db  0x9b ; '.'
000000000000a579         db  0x7a ; 'z'
000000000000a57a         db  0xff ; '.'
000000000000a57b         db  0xff ; '.'
000000000000a57c         db  0x88 ; '.'
000000000000a57d         db  0x7a ; 'z'
000000000000a57e         db  0xff ; '.'
000000000000a57f         db  0xff ; '.'
000000000000a580         db  0x9b ; '.'
000000000000a581         db  0x7a ; 'z'
000000000000a582         db  0xff ; '.'
000000000000a583         db  0xff ; '.'
000000000000a584         db  0x65 ; 'e'
000000000000a585         db  0x79 ; 'y'
000000000000a586         db  0xff ; '.'
000000000000a587         db  0xff ; '.'
000000000000a588         db  0x9b ; '.'
000000000000a589         db  0x7a ; 'z'
000000000000a58a         db  0xff ; '.'
000000000000a58b         db  0xff ; '.'
000000000000a58c         db  0xc8 ; '.'
000000000000a58d         db  0x78 ; 'x'
000000000000a58e         db  0xff ; '.'
000000000000a58f         db  0xff ; '.'
000000000000a590         db  0x50 ; 'P'
000000000000a591         db  0x7a ; 'z'
000000000000a592         db  0xff ; '.'
000000000000a593         db  0xff ; '.'
000000000000a594         db  0x9b ; '.'
000000000000a595         db  0x7a ; 'z'
000000000000a596         db  0xff ; '.'
000000000000a597         db  0xff ; '.'
000000000000a598         db  0x9b ; '.'
000000000000a599         db  0x7a ; 'z'
000000000000a59a         db  0xff ; '.'
000000000000a59b         db  0xff ; '.'
000000000000a59c         db  0xf6 ; '.'
000000000000a59d         db  0x79 ; 'y'
000000000000a59e         db  0xff ; '.'
000000000000a59f         db  0xff ; '.'
000000000000a5a0         db  0x9b ; '.'
000000000000a5a1         db  0x7a ; 'z'
000000000000a5a2         db  0xff ; '.'
000000000000a5a3         db  0xff ; '.'
000000000000a5a4         db  0x9b ; '.'
000000000000a5a5         db  0x7a ; 'z'
000000000000a5a6         db  0xff ; '.'
000000000000a5a7         db  0xff ; '.'
000000000000a5a8         db  0xb7 ; '.'
000000000000a5a9         db  0x79 ; 'y'
000000000000a5aa         db  0xff ; '.'
000000000000a5ab         db  0xff ; '.'
                     a831:
000000000000a5ac         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000a5b1         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000a5bd         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     switch_table_a5c4:        // switch_table
000000000000a5c4         dd         mode_compile.loc_31b0-switch_table_a5c4, 25 dup (mode_compile.loc_31c9-switch_table_a5c4), mode_compile.loc_3220-switch_table_a5c4, mode_compile.loc_3210-switch_table_a5c4 ; switch table used at 0x31a4 containing 33 entries, DATA XREF=mode_compile+116
000000000000a634         dd         mode_compile.loc_3200-switch_table_a5c4, 2 dup (mode_compile.loc_31c9-switch_table_a5c4), mode_compile.loc_31f0-switch_table_a5c4, mode_compile.loc_31e8-switch_table_a5c4
                     aANullArgv0WasP:
000000000000a648         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000a680         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000a688         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000a689         db  0x74 ; 't'
000000000000a68a         db  0x2d ; '-'
000000000000a68b         db  0x00 ; '.'
000000000000a68c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000a68d         db  0x80 ; '.'
000000000000a68e         db  0x98 ; '.'
000000000000a68f         db  0x00 ; '.'
000000000000a690         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000a691         db  0x80 ; '.'
000000000000a692         db  0x99 ; '.'
000000000000a693         db  0x00 ; '.'
000000000000a694         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000a695         db  0x07 ; '.'
000000000000a696         db  0x65 ; 'e'
000000000000a697         db  0x00 ; '.'
000000000000a698         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000a699         db  0xaf ; '.'
000000000000a69a         db  0x00 ; '.'
000000000000a69b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3df0+1451, sub_3df0+1493, sub_3df0+2429
000000000000a69c         db  0x00 ; '.'
000000000000a69d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3df0+132, sub_3df0+1338, sub_3df0+1670, sub_3df0+1697, sub_3df0+2352
000000000000a69e         db  0x00 ; '.'
000000000000a69f         db  0x60 ; '`'                                         ; DATA XREF=sub_3df0+1627, sub_3df0+1654
000000000000a6a0         db  0x00 ; '.'
                     aLiteral:
000000000000a6a1         db         "literal", 0
                     aShell:
000000000000a6a9         db         "shell", 0
                     aShellalways:
000000000000a6af         db         "shell-always", 0
000000000000a6bc         db  0x73 ; 's'
000000000000a6bd         db  0x68 ; 'h'
000000000000a6be         db  0x65 ; 'e'
000000000000a6bf         db  0x6c ; 'l'
000000000000a6c0         db  0x6c ; 'l'
000000000000a6c1         db  0x2d ; '-'
                     aEscape:
000000000000a6c2         db         "escape", 0
                     aShellescapealw:
000000000000a6c9         db         "shell-escape-always", 0
                     aCmaybe:
000000000000a6dd         db         "c-maybe", 0
                     aClocale:
000000000000a6e5         db         "clocale", 0
000000000000a6ed         align      256
                     switch_table_a700:        // switch_table
000000000000a700         dd         quotearg_buffer_restyled.loc_44ea-switch_table_a700, quotearg_buffer_restyled.loc_3743-switch_table_a700, quotearg_buffer_restyled.loc_4718-switch_table_a700, quotearg_buffer_restyled.loc_4524-switch_table_a700 ; switch table used at 0x3741 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000a710         dd         quotearg_buffer_restyled.loc_4314-switch_table_a700, quotearg_buffer_restyled.loc_4370-switch_table_a700, quotearg_buffer_restyled.loc_43c5-switch_table_a700, quotearg_buffer_restyled.loc_440a-switch_table_a700
000000000000a720         dd         3 dup (quotearg_buffer_restyled.loc_4444-switch_table_a700)
000000000000a72c         db  0x94 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000a72d         db  0x93 ; '.'
000000000000a72e         db  0xff ; '.'
000000000000a72f         db  0xff ; '.'
000000000000a730         db  0x7c ; '|'
000000000000a731         db  0x94 ; '.'
000000000000a732         db  0xff ; '.'
000000000000a733         db  0xff ; '.'
000000000000a734         db  0x7c ; '|'
000000000000a735         db  0x94 ; '.'
000000000000a736         db  0xff ; '.'
000000000000a737         db  0xff ; '.'
000000000000a738         db  0x7c ; '|'
000000000000a739         db  0x94 ; '.'
000000000000a73a         db  0xff ; '.'
000000000000a73b         db  0xff ; '.'
000000000000a73c         db  0x7c ; '|'
000000000000a73d         db  0x94 ; '.'
000000000000a73e         db  0xff ; '.'
000000000000a73f         db  0xff ; '.'
000000000000a740         db  0x7c ; '|'
000000000000a741         db  0x94 ; '.'
000000000000a742         db  0xff ; '.'
000000000000a743         db  0xff ; '.'
000000000000a744         db  0x7c ; '|'
000000000000a745         db  0x94 ; '.'
000000000000a746         db  0xff ; '.'
000000000000a747         db  0xff ; '.'
000000000000a748         db  0xd4 ; '.'
000000000000a749         db  0x93 ; '.'
000000000000a74a         db  0xff ; '.'
000000000000a74b         db  0xff ; '.'
000000000000a74c         db  0xdc ; '.'
000000000000a74d         db  0x92 ; '.'
000000000000a74e         db  0xff ; '.'
000000000000a74f         db  0xff ; '.'
000000000000a750         db  0x9c ; '.'
000000000000a751         db  0x92 ; '.'
000000000000a752         db  0xff ; '.'
000000000000a753         db  0xff ; '.'
000000000000a754         db  0x64 ; 'd'
000000000000a755         db  0x94 ; '.'
000000000000a756         db  0xff ; '.'
000000000000a757         db  0xff ; '.'
000000000000a758         db  0x54 ; 'T'
000000000000a759         db  0x94 ; '.'
000000000000a75a         db  0xff ; '.'
000000000000a75b         db  0xff ; '.'
000000000000a75c         db  0x44 ; 'D'
000000000000a75d         db  0x94 ; '.'
000000000000a75e         db  0xff ; '.'
000000000000a75f         db  0xff ; '.'
000000000000a760         db  0x34 ; '4'
000000000000a761         db  0x94 ; '.'
000000000000a762         db  0xff ; '.'
000000000000a763         db  0xff ; '.'
000000000000a764         db  0x7c ; '|'
000000000000a765         db  0x94 ; '.'
000000000000a766         db  0xff ; '.'
000000000000a767         db  0xff ; '.'
000000000000a768         db  0x7c ; '|'
000000000000a769         db  0x94 ; '.'
000000000000a76a         db  0xff ; '.'
000000000000a76b         db  0xff ; '.'
000000000000a76c         db  0x7c ; '|'
000000000000a76d         db  0x94 ; '.'
000000000000a76e         db  0xff ; '.'
000000000000a76f         db  0xff ; '.'
000000000000a770         db  0x7c ; '|'
000000000000a771         db  0x94 ; '.'
000000000000a772         db  0xff ; '.'
000000000000a773         db  0xff ; '.'
000000000000a774         db  0x7c ; '|'
000000000000a775         db  0x94 ; '.'
000000000000a776         db  0xff ; '.'
000000000000a777         db  0xff ; '.'
000000000000a778         db  0x7c ; '|'
000000000000a779         db  0x94 ; '.'
000000000000a77a         db  0xff ; '.'
000000000000a77b         db  0xff ; '.'
000000000000a77c         db  0x7c ; '|'
000000000000a77d         db  0x94 ; '.'
000000000000a77e         db  0xff ; '.'
000000000000a77f         db  0xff ; '.'
000000000000a780         db  0x7c ; '|'
000000000000a781         db  0x94 ; '.'
000000000000a782         db  0xff ; '.'
000000000000a783         db  0xff ; '.'
000000000000a784         db  0x7c ; '|'
000000000000a785         db  0x94 ; '.'
000000000000a786         db  0xff ; '.'
000000000000a787         db  0xff ; '.'
000000000000a788         db  0x7c ; '|'
000000000000a789         db  0x94 ; '.'
000000000000a78a         db  0xff ; '.'
000000000000a78b         db  0xff ; '.'
000000000000a78c         db  0x7c ; '|'
000000000000a78d         db  0x94 ; '.'
000000000000a78e         db  0xff ; '.'
000000000000a78f         db  0xff ; '.'
000000000000a790         db  0x7c ; '|'
000000000000a791         db  0x94 ; '.'
000000000000a792         db  0xff ; '.'
000000000000a793         db  0xff ; '.'
000000000000a794         db  0x7c ; '|'
000000000000a795         db  0x94 ; '.'
000000000000a796         db  0xff ; '.'
000000000000a797         db  0xff ; '.'
000000000000a798         db  0x7c ; '|'
000000000000a799         db  0x94 ; '.'
000000000000a79a         db  0xff ; '.'
000000000000a79b         db  0xff ; '.'
000000000000a79c         db  0x7c ; '|'
000000000000a79d         db  0x94 ; '.'
000000000000a79e         db  0xff ; '.'
000000000000a79f         db  0xff ; '.'
000000000000a7a0         db  0x7c ; '|'
000000000000a7a1         db  0x94 ; '.'
000000000000a7a2         db  0xff ; '.'
000000000000a7a3         db  0xff ; '.'
000000000000a7a4         db  0x7c ; '|'
000000000000a7a5         db  0x94 ; '.'
000000000000a7a6         db  0xff ; '.'
000000000000a7a7         db  0xff ; '.'
000000000000a7a8         db  0x7c ; '|'
000000000000a7a9         db  0x94 ; '.'
000000000000a7aa         db  0xff ; '.'
000000000000a7ab         db  0xff ; '.'
000000000000a7ac         db  0x24 ; '$'
000000000000a7ad         db  0x94 ; '.'
000000000000a7ae         db  0xff ; '.'
000000000000a7af         db  0xff ; '.'
000000000000a7b0         db  0x14 ; '.'
000000000000a7b1         db  0x94 ; '.'
000000000000a7b2         db  0xff ; '.'
000000000000a7b3         db  0xff ; '.'
000000000000a7b4         db  0x14 ; '.'
000000000000a7b5         db  0x94 ; '.'
000000000000a7b6         db  0xff ; '.'
000000000000a7b7         db  0xff ; '.'
000000000000a7b8         db  0xe4 ; '.'
000000000000a7b9         db  0x93 ; '.'
000000000000a7ba         db  0xff ; '.'
000000000000a7bb         db  0xff ; '.'
000000000000a7bc         db  0x14 ; '.'
000000000000a7bd         db  0x94 ; '.'
000000000000a7be         db  0xff ; '.'
000000000000a7bf         db  0xff ; '.'
000000000000a7c0         db  0xbc ; '.'
000000000000a7c1         db  0x93 ; '.'
000000000000a7c2         db  0xff ; '.'
000000000000a7c3         db  0xff ; '.'
000000000000a7c4         db  0x14 ; '.'
000000000000a7c5         db  0x94 ; '.'
000000000000a7c6         db  0xff ; '.'
000000000000a7c7         db  0xff ; '.'
000000000000a7c8         db  0x77 ; 'w'
000000000000a7c9         db  0x92 ; '.'
000000000000a7ca         db  0xff ; '.'
000000000000a7cb         db  0xff ; '.'
000000000000a7cc         db  0x14 ; '.'
000000000000a7cd         db  0x94 ; '.'
000000000000a7ce         db  0xff ; '.'
000000000000a7cf         db  0xff ; '.'
000000000000a7d0         db  0x14 ; '.'
000000000000a7d1         db  0x94 ; '.'
000000000000a7d2         db  0xff ; '.'
000000000000a7d3         db  0xff ; '.'
000000000000a7d4         db  0x14 ; '.'
000000000000a7d5         db  0x94 ; '.'
000000000000a7d6         db  0xff ; '.'
000000000000a7d7         db  0xff ; '.'
000000000000a7d8         db  0xbc ; '.'
000000000000a7d9         db  0x93 ; '.'
000000000000a7da         db  0xff ; '.'
000000000000a7db         db  0xff ; '.'
000000000000a7dc         db  0xbc ; '.'
000000000000a7dd         db  0x93 ; '.'
000000000000a7de         db  0xff ; '.'
000000000000a7df         db  0xff ; '.'
000000000000a7e0         db  0xbc ; '.'
000000000000a7e1         db  0x93 ; '.'
000000000000a7e2         db  0xff ; '.'
000000000000a7e3         db  0xff ; '.'
000000000000a7e4         db  0xbc ; '.'
000000000000a7e5         db  0x93 ; '.'
000000000000a7e6         db  0xff ; '.'
000000000000a7e7         db  0xff ; '.'
000000000000a7e8         db  0xbc ; '.'
000000000000a7e9         db  0x93 ; '.'
000000000000a7ea         db  0xff ; '.'
000000000000a7eb         db  0xff ; '.'
000000000000a7ec         db  0xbc ; '.'
000000000000a7ed         db  0x93 ; '.'
000000000000a7ee         db  0xff ; '.'
000000000000a7ef         db  0xff ; '.'
000000000000a7f0         db  0xbc ; '.'
000000000000a7f1         db  0x93 ; '.'
000000000000a7f2         db  0xff ; '.'
000000000000a7f3         db  0xff ; '.'
000000000000a7f4         db  0xbc ; '.'
000000000000a7f5         db  0x93 ; '.'
000000000000a7f6         db  0xff ; '.'
000000000000a7f7         db  0xff ; '.'
000000000000a7f8         db  0xbc ; '.'
000000000000a7f9         db  0x93 ; '.'
000000000000a7fa         db  0xff ; '.'
000000000000a7fb         db  0xff ; '.'
000000000000a7fc         db  0xbc ; '.'
000000000000a7fd         db  0x93 ; '.'
000000000000a7fe         db  0xff ; '.'
000000000000a7ff         db  0xff ; '.'
000000000000a800         db  0xbc ; '.'
000000000000a801         db  0x93 ; '.'
000000000000a802         db  0xff ; '.'
000000000000a803         db  0xff ; '.'
000000000000a804         db  0xbc ; '.'
000000000000a805         db  0x93 ; '.'
000000000000a806         db  0xff ; '.'
000000000000a807         db  0xff ; '.'
000000000000a808         db  0xbc ; '.'
000000000000a809         db  0x93 ; '.'
000000000000a80a         db  0xff ; '.'
000000000000a80b         db  0xff ; '.'
000000000000a80c         db  0xbc ; '.'
000000000000a80d         db  0x93 ; '.'
000000000000a80e         db  0xff ; '.'
000000000000a80f         db  0xff ; '.'
000000000000a810         db  0xbc ; '.'
000000000000a811         db  0x93 ; '.'
000000000000a812         db  0xff ; '.'
000000000000a813         db  0xff ; '.'
000000000000a814         db  0xbc ; '.'
000000000000a815         db  0x93 ; '.'
000000000000a816         db  0xff ; '.'
000000000000a817         db  0xff ; '.'
000000000000a818         db  0x14 ; '.'
000000000000a819         db  0x94 ; '.'
000000000000a81a         db  0xff ; '.'
000000000000a81b         db  0xff ; '.'
000000000000a81c         db  0x14 ; '.'
000000000000a81d         db  0x94 ; '.'
000000000000a81e         db  0xff ; '.'
000000000000a81f         db  0xff ; '.'
000000000000a820         db  0x14 ; '.'
000000000000a821         db  0x94 ; '.'
000000000000a822         db  0xff ; '.'
000000000000a823         db  0xff ; '.'
000000000000a824         db  0x14 ; '.'
000000000000a825         db  0x94 ; '.'
000000000000a826         db  0xff ; '.'
000000000000a827         db  0xff ; '.'
000000000000a828         db  0x47 ; 'G'
000000000000a829         db  0x92 ; '.'
000000000000a82a         db  0xff ; '.'
000000000000a82b         db  0xff ; '.'
000000000000a82c         db  0x7c ; '|'
000000000000a82d         db  0x94 ; '.'
000000000000a82e         db  0xff ; '.'
000000000000a82f         db  0xff ; '.'
000000000000a830         db  0xbc ; '.'
000000000000a831         db  0x93 ; '.'
000000000000a832         db  0xff ; '.'
000000000000a833         db  0xff ; '.'
000000000000a834         db  0xbc ; '.'
000000000000a835         db  0x93 ; '.'
000000000000a836         db  0xff ; '.'
000000000000a837         db  0xff ; '.'
000000000000a838         db  0xbc ; '.'
000000000000a839         db  0x93 ; '.'
000000000000a83a         db  0xff ; '.'
000000000000a83b         db  0xff ; '.'
000000000000a83c         db  0xbc ; '.'
000000000000a83d         db  0x93 ; '.'
000000000000a83e         db  0xff ; '.'
000000000000a83f         db  0xff ; '.'
000000000000a840         db  0xbc ; '.'
000000000000a841         db  0x93 ; '.'
000000000000a842         db  0xff ; '.'
000000000000a843         db  0xff ; '.'
000000000000a844         db  0xbc ; '.'
000000000000a845         db  0x93 ; '.'
000000000000a846         db  0xff ; '.'
000000000000a847         db  0xff ; '.'
000000000000a848         db  0xbc ; '.'
000000000000a849         db  0x93 ; '.'
000000000000a84a         db  0xff ; '.'
000000000000a84b         db  0xff ; '.'
000000000000a84c         db  0xbc ; '.'
000000000000a84d         db  0x93 ; '.'
000000000000a84e         db  0xff ; '.'
000000000000a84f         db  0xff ; '.'
000000000000a850         db  0xbc ; '.'
000000000000a851         db  0x93 ; '.'
000000000000a852         db  0xff ; '.'
000000000000a853         db  0xff ; '.'
000000000000a854         db  0xbc ; '.'
000000000000a855         db  0x93 ; '.'
000000000000a856         db  0xff ; '.'
000000000000a857         db  0xff ; '.'
000000000000a858         db  0xbc ; '.'
000000000000a859         db  0x93 ; '.'
000000000000a85a         db  0xff ; '.'
000000000000a85b         db  0xff ; '.'
000000000000a85c         db  0xbc ; '.'
000000000000a85d         db  0x93 ; '.'
000000000000a85e         db  0xff ; '.'
000000000000a85f         db  0xff ; '.'
000000000000a860         db  0xbc ; '.'
000000000000a861         db  0x93 ; '.'
000000000000a862         db  0xff ; '.'
000000000000a863         db  0xff ; '.'
000000000000a864         db  0xbc ; '.'
000000000000a865         db  0x93 ; '.'
000000000000a866         db  0xff ; '.'
000000000000a867         db  0xff ; '.'
000000000000a868         db  0xbc ; '.'
000000000000a869         db  0x93 ; '.'
000000000000a86a         db  0xff ; '.'
000000000000a86b         db  0xff ; '.'
000000000000a86c         db  0xbc ; '.'
000000000000a86d         db  0x93 ; '.'
000000000000a86e         db  0xff ; '.'
000000000000a86f         db  0xff ; '.'
000000000000a870         db  0xbc ; '.'
000000000000a871         db  0x93 ; '.'
000000000000a872         db  0xff ; '.'
000000000000a873         db  0xff ; '.'
000000000000a874         db  0xbc ; '.'
000000000000a875         db  0x93 ; '.'
000000000000a876         db  0xff ; '.'
000000000000a877         db  0xff ; '.'
000000000000a878         db  0xbc ; '.'
000000000000a879         db  0x93 ; '.'
000000000000a87a         db  0xff ; '.'
000000000000a87b         db  0xff ; '.'
000000000000a87c         db  0xbc ; '.'
000000000000a87d         db  0x93 ; '.'
000000000000a87e         db  0xff ; '.'
000000000000a87f         db  0xff ; '.'
000000000000a880         db  0xbc ; '.'
000000000000a881         db  0x93 ; '.'
000000000000a882         db  0xff ; '.'
000000000000a883         db  0xff ; '.'
000000000000a884         db  0xbc ; '.'
000000000000a885         db  0x93 ; '.'
000000000000a886         db  0xff ; '.'
000000000000a887         db  0xff ; '.'
000000000000a888         db  0xbc ; '.'
000000000000a889         db  0x93 ; '.'
000000000000a88a         db  0xff ; '.'
000000000000a88b         db  0xff ; '.'
000000000000a88c         db  0xbc ; '.'
000000000000a88d         db  0x93 ; '.'
000000000000a88e         db  0xff ; '.'
000000000000a88f         db  0xff ; '.'
000000000000a890         db  0xbc ; '.'
000000000000a891         db  0x93 ; '.'
000000000000a892         db  0xff ; '.'
000000000000a893         db  0xff ; '.'
000000000000a894         db  0xbc ; '.'
000000000000a895         db  0x93 ; '.'
000000000000a896         db  0xff ; '.'
000000000000a897         db  0xff ; '.'
000000000000a898         db  0x14 ; '.'
000000000000a899         db  0x94 ; '.'
000000000000a89a         db  0xff ; '.'
000000000000a89b         db  0xff ; '.'
000000000000a89c         db  0xec ; '.'
000000000000a89d         db  0x92 ; '.'
000000000000a89e         db  0xff ; '.'
000000000000a89f         db  0xff ; '.'
000000000000a8a0         db  0xbc ; '.'
000000000000a8a1         db  0x93 ; '.'
000000000000a8a2         db  0xff ; '.'
000000000000a8a3         db  0xff ; '.'
000000000000a8a4         db  0x14 ; '.'
000000000000a8a5         db  0x94 ; '.'
000000000000a8a6         db  0xff ; '.'
000000000000a8a7         db  0xff ; '.'
000000000000a8a8         db  0xbc ; '.'
000000000000a8a9         db  0x93 ; '.'
000000000000a8aa         db  0xff ; '.'
000000000000a8ab         db  0xff ; '.'
000000000000a8ac         db  0x14 ; '.'
000000000000a8ad         db  0x94 ; '.'
000000000000a8ae         db  0xff ; '.'
000000000000a8af         db  0xff ; '.'
000000000000a8b0         db  0xbc ; '.'
000000000000a8b1         db  0x93 ; '.'
000000000000a8b2         db  0xff ; '.'
000000000000a8b3         db  0xff ; '.'
000000000000a8b4         db  0xbc ; '.'
000000000000a8b5         db  0x93 ; '.'
000000000000a8b6         db  0xff ; '.'
000000000000a8b7         db  0xff ; '.'
000000000000a8b8         db  0xbc ; '.'
000000000000a8b9         db  0x93 ; '.'
000000000000a8ba         db  0xff ; '.'
000000000000a8bb         db  0xff ; '.'
000000000000a8bc         db  0xbc ; '.'
000000000000a8bd         db  0x93 ; '.'
000000000000a8be         db  0xff ; '.'
000000000000a8bf         db  0xff ; '.'
000000000000a8c0         db  0xbc ; '.'
000000000000a8c1         db  0x93 ; '.'
000000000000a8c2         db  0xff ; '.'
000000000000a8c3         db  0xff ; '.'
000000000000a8c4         db  0xbc ; '.'
000000000000a8c5         db  0x93 ; '.'
000000000000a8c6         db  0xff ; '.'
000000000000a8c7         db  0xff ; '.'
000000000000a8c8         db  0xbc ; '.'
000000000000a8c9         db  0x93 ; '.'
000000000000a8ca         db  0xff ; '.'
000000000000a8cb         db  0xff ; '.'
000000000000a8cc         db  0xbc ; '.'
000000000000a8cd         db  0x93 ; '.'
000000000000a8ce         db  0xff ; '.'
000000000000a8cf         db  0xff ; '.'
000000000000a8d0         db  0xbc ; '.'
000000000000a8d1         db  0x93 ; '.'
000000000000a8d2         db  0xff ; '.'
000000000000a8d3         db  0xff ; '.'
000000000000a8d4         db  0xbc ; '.'
000000000000a8d5         db  0x93 ; '.'
000000000000a8d6         db  0xff ; '.'
000000000000a8d7         db  0xff ; '.'
000000000000a8d8         db  0xbc ; '.'
000000000000a8d9         db  0x93 ; '.'
000000000000a8da         db  0xff ; '.'
000000000000a8db         db  0xff ; '.'
000000000000a8dc         db  0xbc ; '.'
000000000000a8dd         db  0x93 ; '.'
000000000000a8de         db  0xff ; '.'
000000000000a8df         db  0xff ; '.'
000000000000a8e0         db  0xbc ; '.'
000000000000a8e1         db  0x93 ; '.'
000000000000a8e2         db  0xff ; '.'
000000000000a8e3         db  0xff ; '.'
000000000000a8e4         db  0xbc ; '.'
000000000000a8e5         db  0x93 ; '.'
000000000000a8e6         db  0xff ; '.'
000000000000a8e7         db  0xff ; '.'
000000000000a8e8         db  0xbc ; '.'
000000000000a8e9         db  0x93 ; '.'
000000000000a8ea         db  0xff ; '.'
000000000000a8eb         db  0xff ; '.'
000000000000a8ec         db  0xbc ; '.'
000000000000a8ed         db  0x93 ; '.'
000000000000a8ee         db  0xff ; '.'
000000000000a8ef         db  0xff ; '.'
000000000000a8f0         db  0xbc ; '.'
000000000000a8f1         db  0x93 ; '.'
000000000000a8f2         db  0xff ; '.'
000000000000a8f3         db  0xff ; '.'
000000000000a8f4         db  0xbc ; '.'
000000000000a8f5         db  0x93 ; '.'
000000000000a8f6         db  0xff ; '.'
000000000000a8f7         db  0xff ; '.'
000000000000a8f8         db  0xbc ; '.'
000000000000a8f9         db  0x93 ; '.'
000000000000a8fa         db  0xff ; '.'
000000000000a8fb         db  0xff ; '.'
000000000000a8fc         db  0xbc ; '.'
000000000000a8fd         db  0x93 ; '.'
000000000000a8fe         db  0xff ; '.'
000000000000a8ff         db  0xff ; '.'
000000000000a900         db  0xbc ; '.'
000000000000a901         db  0x93 ; '.'
000000000000a902         db  0xff ; '.'
000000000000a903         db  0xff ; '.'
000000000000a904         db  0xbc ; '.'
000000000000a905         db  0x93 ; '.'
000000000000a906         db  0xff ; '.'
000000000000a907         db  0xff ; '.'
000000000000a908         db  0xbc ; '.'
000000000000a909         db  0x93 ; '.'
000000000000a90a         db  0xff ; '.'
000000000000a90b         db  0xff ; '.'
000000000000a90c         db  0xbc ; '.'
000000000000a90d         db  0x93 ; '.'
000000000000a90e         db  0xff ; '.'
000000000000a90f         db  0xff ; '.'
000000000000a910         db  0xbc ; '.'
000000000000a911         db  0x93 ; '.'
000000000000a912         db  0xff ; '.'
000000000000a913         db  0xff ; '.'
000000000000a914         db  0xbc ; '.'
000000000000a915         db  0x93 ; '.'
000000000000a916         db  0xff ; '.'
000000000000a917         db  0xff ; '.'
000000000000a918         db  0x77 ; 'w'
000000000000a919         db  0x91 ; '.'
000000000000a91a         db  0xff ; '.'
000000000000a91b         db  0xff ; '.'
000000000000a91c         db  0x14 ; '.'
000000000000a91d         db  0x94 ; '.'
000000000000a91e         db  0xff ; '.'
000000000000a91f         db  0xff ; '.'
000000000000a920         db  0x77 ; 'w'
000000000000a921         db  0x91 ; '.'
000000000000a922         db  0xff ; '.'
000000000000a923         db  0xff ; '.'
000000000000a924         db  0xe4 ; '.'
000000000000a925         db  0x93 ; '.'
000000000000a926         db  0xff ; '.'
000000000000a927         db  0xff ; '.'
000000000000a928         db  0x68 ; 'h'                                         ; DATA XREF=sub_3b90+137
000000000000a929         db  0x93 ; '.'
000000000000a92a         db  0xff ; '.'
000000000000a92b         db  0xff ; '.'
000000000000a92c         db  0x78 ; 'x'
000000000000a92d         db  0x92 ; '.'
000000000000a92e         db  0xff ; '.'
000000000000a92f         db  0xff ; '.'
000000000000a930         db  0x78 ; 'x'
000000000000a931         db  0x92 ; '.'
000000000000a932         db  0xff ; '.'
000000000000a933         db  0xff ; '.'
000000000000a934         db  0x78 ; 'x'
000000000000a935         db  0x92 ; '.'
000000000000a936         db  0xff ; '.'
000000000000a937         db  0xff ; '.'
000000000000a938         db  0x78 ; 'x'
000000000000a939         db  0x92 ; '.'
000000000000a93a         db  0xff ; '.'
000000000000a93b         db  0xff ; '.'
000000000000a93c         db  0x78 ; 'x'
000000000000a93d         db  0x92 ; '.'
000000000000a93e         db  0xff ; '.'
000000000000a93f         db  0xff ; '.'
000000000000a940         db  0x78 ; 'x'
000000000000a941         db  0x92 ; '.'
000000000000a942         db  0xff ; '.'
000000000000a943         db  0xff ; '.'
000000000000a944         db  0x58 ; 'X'
000000000000a945         db  0x93 ; '.'
000000000000a946         db  0xff ; '.'
000000000000a947         db  0xff ; '.'
000000000000a948         db  0xa8 ; '.'
000000000000a949         db  0x94 ; '.'
000000000000a94a         db  0xff ; '.'
000000000000a94b         db  0xff ; '.'
000000000000a94c         db  0x90 ; '.'
000000000000a94d         db  0x94 ; '.'
000000000000a94e         db  0xff ; '.'
000000000000a94f         db  0xff ; '.'
000000000000a950         db  0x40 ; '@'
000000000000a951         db  0x93 ; '.'
000000000000a952         db  0xff ; '.'
000000000000a953         db  0xff ; '.'
000000000000a954         db  0x80 ; '.'
000000000000a955         db  0x94 ; '.'
000000000000a956         db  0xff ; '.'
000000000000a957         db  0xff ; '.'
000000000000a958         db  0x28 ; '('
000000000000a959         db  0x93 ; '.'
000000000000a95a         db  0xff ; '.'
000000000000a95b         db  0xff ; '.'
000000000000a95c         db  0x68 ; 'h'
000000000000a95d         db  0x94 ; '.'
000000000000a95e         db  0xff ; '.'
000000000000a95f         db  0xff ; '.'
000000000000a960         db  0x78 ; 'x'
000000000000a961         db  0x92 ; '.'
000000000000a962         db  0xff ; '.'
000000000000a963         db  0xff ; '.'
000000000000a964         db  0x78 ; 'x'
000000000000a965         db  0x92 ; '.'
000000000000a966         db  0xff ; '.'
000000000000a967         db  0xff ; '.'
000000000000a968         db  0x78 ; 'x'
000000000000a969         db  0x92 ; '.'
000000000000a96a         db  0xff ; '.'
000000000000a96b         db  0xff ; '.'
000000000000a96c         db  0x78 ; 'x'
000000000000a96d         db  0x92 ; '.'
000000000000a96e         db  0xff ; '.'
000000000000a96f         db  0xff ; '.'
000000000000a970         db  0x78 ; 'x'
000000000000a971         db  0x92 ; '.'
000000000000a972         db  0xff ; '.'
000000000000a973         db  0xff ; '.'
000000000000a974         db  0x78 ; 'x'
000000000000a975         db  0x92 ; '.'
000000000000a976         db  0xff ; '.'
000000000000a977         db  0xff ; '.'
000000000000a978         db  0x78 ; 'x'
000000000000a979         db  0x92 ; '.'
000000000000a97a         db  0xff ; '.'
000000000000a97b         db  0xff ; '.'
000000000000a97c         db  0x78 ; 'x'
000000000000a97d         db  0x92 ; '.'
000000000000a97e         db  0xff ; '.'
000000000000a97f         db  0xff ; '.'
000000000000a980         db  0x78 ; 'x'
000000000000a981         db  0x92 ; '.'
000000000000a982         db  0xff ; '.'
000000000000a983         db  0xff ; '.'
000000000000a984         db  0x78 ; 'x'
000000000000a985         db  0x92 ; '.'
000000000000a986         db  0xff ; '.'
000000000000a987         db  0xff ; '.'
000000000000a988         db  0x78 ; 'x'
000000000000a989         db  0x92 ; '.'
000000000000a98a         db  0xff ; '.'
000000000000a98b         db  0xff ; '.'
000000000000a98c         db  0x78 ; 'x'
000000000000a98d         db  0x92 ; '.'
000000000000a98e         db  0xff ; '.'
000000000000a98f         db  0xff ; '.'
000000000000a990         db  0x78 ; 'x'
000000000000a991         db  0x92 ; '.'
000000000000a992         db  0xff ; '.'
000000000000a993         db  0xff ; '.'
000000000000a994         db  0x78 ; 'x'
000000000000a995         db  0x92 ; '.'
000000000000a996         db  0xff ; '.'
000000000000a997         db  0xff ; '.'
000000000000a998         db  0x78 ; 'x'
000000000000a999         db  0x92 ; '.'
000000000000a99a         db  0xff ; '.'
000000000000a99b         db  0xff ; '.'
000000000000a99c         db  0x78 ; 'x'
000000000000a99d         db  0x92 ; '.'
000000000000a99e         db  0xff ; '.'
000000000000a99f         db  0xff ; '.'
000000000000a9a0         db  0x78 ; 'x'
000000000000a9a1         db  0x92 ; '.'
000000000000a9a2         db  0xff ; '.'
000000000000a9a3         db  0xff ; '.'
000000000000a9a4         db  0x78 ; 'x'
000000000000a9a5         db  0x92 ; '.'
000000000000a9a6         db  0xff ; '.'
000000000000a9a7         db  0xff ; '.'
000000000000a9a8         db  0x50 ; 'P'
000000000000a9a9         db  0x94 ; '.'
000000000000a9aa         db  0xff ; '.'
000000000000a9ab         db  0xff ; '.'
000000000000a9ac         db  0x38 ; '8'
000000000000a9ad         db  0x94 ; '.'
000000000000a9ae         db  0xff ; '.'
000000000000a9af         db  0xff ; '.'
000000000000a9b0         db  0x38 ; '8'
000000000000a9b1         db  0x94 ; '.'
000000000000a9b2         db  0xff ; '.'
000000000000a9b3         db  0xff ; '.'
000000000000a9b4         db  0x20 ; ' '
000000000000a9b5         db  0x94 ; '.'
000000000000a9b6         db  0xff ; '.'
000000000000a9b7         db  0xff ; '.'
000000000000a9b8         db  0x38 ; '8'
000000000000a9b9         db  0x94 ; '.'
000000000000a9ba         db  0xff ; '.'
000000000000a9bb         db  0xff ; '.'
000000000000a9bc         db  0x08 ; '.'
000000000000a9bd         db  0x94 ; '.'
000000000000a9be         db  0xff ; '.'
000000000000a9bf         db  0xff ; '.'
000000000000a9c0         db  0x38 ; '8'
000000000000a9c1         db  0x94 ; '.'
000000000000a9c2         db  0xff ; '.'
000000000000a9c3         db  0xff ; '.'
000000000000a9c4         db  0x78 ; 'x'
000000000000a9c5         db  0x90 ; '.'
000000000000a9c6         db  0xff ; '.'
000000000000a9c7         db  0xff ; '.'
000000000000a9c8         db  0x38 ; '8'
000000000000a9c9         db  0x94 ; '.'
000000000000a9ca         db  0xff ; '.'
000000000000a9cb         db  0xff ; '.'
000000000000a9cc         db  0x38 ; '8'
000000000000a9cd         db  0x94 ; '.'
000000000000a9ce         db  0xff ; '.'
000000000000a9cf         db  0xff ; '.'
000000000000a9d0         db  0x38 ; '8'
000000000000a9d1         db  0x94 ; '.'
000000000000a9d2         db  0xff ; '.'
000000000000a9d3         db  0xff ; '.'
000000000000a9d4         db  0x08 ; '.'
000000000000a9d5         db  0x94 ; '.'
000000000000a9d6         db  0xff ; '.'
000000000000a9d7         db  0xff ; '.'
000000000000a9d8         db  0x08 ; '.'
000000000000a9d9         db  0x94 ; '.'
000000000000a9da         db  0xff ; '.'
000000000000a9db         db  0xff ; '.'
000000000000a9dc         db  0x08 ; '.'
000000000000a9dd         db  0x94 ; '.'
000000000000a9de         db  0xff ; '.'
000000000000a9df         db  0xff ; '.'
000000000000a9e0         db  0x08 ; '.'
000000000000a9e1         db  0x94 ; '.'
000000000000a9e2         db  0xff ; '.'
000000000000a9e3         db  0xff ; '.'
000000000000a9e4         db  0x08 ; '.'
000000000000a9e5         db  0x94 ; '.'
000000000000a9e6         db  0xff ; '.'
000000000000a9e7         db  0xff ; '.'
000000000000a9e8         db  0x08 ; '.'
000000000000a9e9         db  0x94 ; '.'
000000000000a9ea         db  0xff ; '.'
000000000000a9eb         db  0xff ; '.'
000000000000a9ec         db  0x08 ; '.'
000000000000a9ed         db  0x94 ; '.'
000000000000a9ee         db  0xff ; '.'
000000000000a9ef         db  0xff ; '.'
000000000000a9f0         db  0x08 ; '.'
000000000000a9f1         db  0x94 ; '.'
000000000000a9f2         db  0xff ; '.'
000000000000a9f3         db  0xff ; '.'
000000000000a9f4         db  0x08 ; '.'
000000000000a9f5         db  0x94 ; '.'
000000000000a9f6         db  0xff ; '.'
000000000000a9f7         db  0xff ; '.'
000000000000a9f8         db  0x08 ; '.'
000000000000a9f9         db  0x94 ; '.'
000000000000a9fa         db  0xff ; '.'
000000000000a9fb         db  0xff ; '.'
000000000000a9fc         db  0x08 ; '.'
000000000000a9fd         db  0x94 ; '.'
000000000000a9fe         db  0xff ; '.'
000000000000a9ff         db  0xff ; '.'
000000000000aa00         db  0x08 ; '.'
000000000000aa01         db  0x94 ; '.'
000000000000aa02         db  0xff ; '.'
000000000000aa03         db  0xff ; '.'
000000000000aa04         db  0x08 ; '.'
000000000000aa05         db  0x94 ; '.'
000000000000aa06         db  0xff ; '.'
000000000000aa07         db  0xff ; '.'
000000000000aa08         db  0x08 ; '.'
000000000000aa09         db  0x94 ; '.'
000000000000aa0a         db  0xff ; '.'
000000000000aa0b         db  0xff ; '.'
000000000000aa0c         db  0x08 ; '.'
000000000000aa0d         db  0x94 ; '.'
000000000000aa0e         db  0xff ; '.'
000000000000aa0f         db  0xff ; '.'
000000000000aa10         db  0x08 ; '.'
000000000000aa11         db  0x94 ; '.'
000000000000aa12         db  0xff ; '.'
000000000000aa13         db  0xff ; '.'
000000000000aa14         db  0x38 ; '8'
000000000000aa15         db  0x94 ; '.'
000000000000aa16         db  0xff ; '.'
000000000000aa17         db  0xff ; '.'
000000000000aa18         db  0x38 ; '8'
000000000000aa19         db  0x94 ; '.'
000000000000aa1a         db  0xff ; '.'
000000000000aa1b         db  0xff ; '.'
000000000000aa1c         db  0x38 ; '8'
000000000000aa1d         db  0x94 ; '.'
000000000000aa1e         db  0xff ; '.'
000000000000aa1f         db  0xff ; '.'
000000000000aa20         db  0x38 ; '8'
000000000000aa21         db  0x94 ; '.'
000000000000aa22         db  0xff ; '.'
000000000000aa23         db  0xff ; '.'
000000000000aa24         db  0x48 ; 'H'
000000000000aa25         db  0x90 ; '.'
000000000000aa26         db  0xff ; '.'
000000000000aa27         db  0xff ; '.'
000000000000aa28         db  0x78 ; 'x'
000000000000aa29         db  0x92 ; '.'
000000000000aa2a         db  0xff ; '.'
000000000000aa2b         db  0xff ; '.'
000000000000aa2c         db  0x08 ; '.'
000000000000aa2d         db  0x94 ; '.'
000000000000aa2e         db  0xff ; '.'
000000000000aa2f         db  0xff ; '.'
000000000000aa30         db  0x08 ; '.'
000000000000aa31         db  0x94 ; '.'
000000000000aa32         db  0xff ; '.'
000000000000aa33         db  0xff ; '.'
000000000000aa34         db  0x08 ; '.'
000000000000aa35         db  0x94 ; '.'
000000000000aa36         db  0xff ; '.'
000000000000aa37         db  0xff ; '.'
000000000000aa38         db  0x08 ; '.'
000000000000aa39         db  0x94 ; '.'
000000000000aa3a         db  0xff ; '.'
000000000000aa3b         db  0xff ; '.'
000000000000aa3c         db  0x08 ; '.'
000000000000aa3d         db  0x94 ; '.'
000000000000aa3e         db  0xff ; '.'
000000000000aa3f         db  0xff ; '.'
000000000000aa40         db  0x08 ; '.'
000000000000aa41         db  0x94 ; '.'
000000000000aa42         db  0xff ; '.'
000000000000aa43         db  0xff ; '.'
000000000000aa44         db  0x08 ; '.'
000000000000aa45         db  0x94 ; '.'
000000000000aa46         db  0xff ; '.'
000000000000aa47         db  0xff ; '.'
000000000000aa48         db  0x08 ; '.'
000000000000aa49         db  0x94 ; '.'
000000000000aa4a         db  0xff ; '.'
000000000000aa4b         db  0xff ; '.'
000000000000aa4c         db  0x08 ; '.'
000000000000aa4d         db  0x94 ; '.'
000000000000aa4e         db  0xff ; '.'
000000000000aa4f         db  0xff ; '.'
000000000000aa50         db  0x08 ; '.'
000000000000aa51         db  0x94 ; '.'
000000000000aa52         db  0xff ; '.'
000000000000aa53         db  0xff ; '.'
000000000000aa54         db  0x08 ; '.'
000000000000aa55         db  0x94 ; '.'
000000000000aa56         db  0xff ; '.'
000000000000aa57         db  0xff ; '.'
000000000000aa58         db  0x08 ; '.'
000000000000aa59         db  0x94 ; '.'
000000000000aa5a         db  0xff ; '.'
000000000000aa5b         db  0xff ; '.'
000000000000aa5c         db  0x08 ; '.'
000000000000aa5d         db  0x94 ; '.'
000000000000aa5e         db  0xff ; '.'
000000000000aa5f         db  0xff ; '.'
000000000000aa60         db  0x08 ; '.'
000000000000aa61         db  0x94 ; '.'
000000000000aa62         db  0xff ; '.'
000000000000aa63         db  0xff ; '.'
000000000000aa64         db  0x08 ; '.'
000000000000aa65         db  0x94 ; '.'
000000000000aa66         db  0xff ; '.'
000000000000aa67         db  0xff ; '.'
000000000000aa68         db  0x08 ; '.'
000000000000aa69         db  0x94 ; '.'
000000000000aa6a         db  0xff ; '.'
000000000000aa6b         db  0xff ; '.'
000000000000aa6c         db  0x08 ; '.'
000000000000aa6d         db  0x94 ; '.'
000000000000aa6e         db  0xff ; '.'
000000000000aa6f         db  0xff ; '.'
000000000000aa70         db  0x08 ; '.'
000000000000aa71         db  0x94 ; '.'
000000000000aa72         db  0xff ; '.'
000000000000aa73         db  0xff ; '.'
000000000000aa74         db  0x08 ; '.'
000000000000aa75         db  0x94 ; '.'
000000000000aa76         db  0xff ; '.'
000000000000aa77         db  0xff ; '.'
000000000000aa78         db  0x08 ; '.'
000000000000aa79         db  0x94 ; '.'
000000000000aa7a         db  0xff ; '.'
000000000000aa7b         db  0xff ; '.'
000000000000aa7c         db  0x08 ; '.'
000000000000aa7d         db  0x94 ; '.'
000000000000aa7e         db  0xff ; '.'
000000000000aa7f         db  0xff ; '.'
000000000000aa80         db  0x08 ; '.'
000000000000aa81         db  0x94 ; '.'
000000000000aa82         db  0xff ; '.'
000000000000aa83         db  0xff ; '.'
000000000000aa84         db  0x08 ; '.'
000000000000aa85         db  0x94 ; '.'
000000000000aa86         db  0xff ; '.'
000000000000aa87         db  0xff ; '.'
000000000000aa88         db  0x08 ; '.'
000000000000aa89         db  0x94 ; '.'
000000000000aa8a         db  0xff ; '.'
000000000000aa8b         db  0xff ; '.'
000000000000aa8c         db  0x08 ; '.'
000000000000aa8d         db  0x94 ; '.'
000000000000aa8e         db  0xff ; '.'
000000000000aa8f         db  0xff ; '.'
000000000000aa90         db  0x08 ; '.'
000000000000aa91         db  0x94 ; '.'
000000000000aa92         db  0xff ; '.'
000000000000aa93         db  0xff ; '.'
000000000000aa94         db  0x38 ; '8'
000000000000aa95         db  0x94 ; '.'
000000000000aa96         db  0xff ; '.'
000000000000aa97         db  0xff ; '.'
000000000000aa98         db  0x08 ; '.'
000000000000aa99         db  0x93 ; '.'
000000000000aa9a         db  0xff ; '.'
000000000000aa9b         db  0xff ; '.'
000000000000aa9c         db  0x08 ; '.'
000000000000aa9d         db  0x94 ; '.'
000000000000aa9e         db  0xff ; '.'
000000000000aa9f         db  0xff ; '.'
000000000000aaa0         db  0x38 ; '8'
000000000000aaa1         db  0x94 ; '.'
000000000000aaa2         db  0xff ; '.'
000000000000aaa3         db  0xff ; '.'
000000000000aaa4         db  0x08 ; '.'
000000000000aaa5         db  0x94 ; '.'
000000000000aaa6         db  0xff ; '.'
000000000000aaa7         db  0xff ; '.'
000000000000aaa8         db  0x38 ; '8'
000000000000aaa9         db  0x94 ; '.'
000000000000aaaa         db  0xff ; '.'
000000000000aaab         db  0xff ; '.'
000000000000aaac         db  0x08 ; '.'
000000000000aaad         db  0x94 ; '.'
000000000000aaae         db  0xff ; '.'
000000000000aaaf         db  0xff ; '.'
000000000000aab0         db  0x08 ; '.'
000000000000aab1         db  0x94 ; '.'
000000000000aab2         db  0xff ; '.'
000000000000aab3         db  0xff ; '.'
000000000000aab4         db  0x08 ; '.'
000000000000aab5         db  0x94 ; '.'
000000000000aab6         db  0xff ; '.'
000000000000aab7         db  0xff ; '.'
000000000000aab8         db  0x08 ; '.'
000000000000aab9         db  0x94 ; '.'
000000000000aaba         db  0xff ; '.'
000000000000aabb         db  0xff ; '.'
000000000000aabc         db  0x08 ; '.'
000000000000aabd         db  0x94 ; '.'
000000000000aabe         db  0xff ; '.'
000000000000aabf         db  0xff ; '.'
000000000000aac0         db  0x08 ; '.'
000000000000aac1         db  0x94 ; '.'
000000000000aac2         db  0xff ; '.'
000000000000aac3         db  0xff ; '.'
000000000000aac4         db  0x08 ; '.'
000000000000aac5         db  0x94 ; '.'
000000000000aac6         db  0xff ; '.'
000000000000aac7         db  0xff ; '.'
000000000000aac8         db  0x08 ; '.'
000000000000aac9         db  0x94 ; '.'
000000000000aaca         db  0xff ; '.'
000000000000aacb         db  0xff ; '.'
000000000000aacc         db  0x08 ; '.'
000000000000aacd         db  0x94 ; '.'
000000000000aace         db  0xff ; '.'
000000000000aacf         db  0xff ; '.'
000000000000aad0         db  0x08 ; '.'
000000000000aad1         db  0x94 ; '.'
000000000000aad2         db  0xff ; '.'
000000000000aad3         db  0xff ; '.'
000000000000aad4         db  0x08 ; '.'
000000000000aad5         db  0x94 ; '.'
000000000000aad6         db  0xff ; '.'
000000000000aad7         db  0xff ; '.'
000000000000aad8         db  0x08 ; '.'
000000000000aad9         db  0x94 ; '.'
000000000000aada         db  0xff ; '.'
000000000000aadb         db  0xff ; '.'
000000000000aadc         db  0x08 ; '.'
000000000000aadd         db  0x94 ; '.'
000000000000aade         db  0xff ; '.'
000000000000aadf         db  0xff ; '.'
000000000000aae0         db  0x08 ; '.'
000000000000aae1         db  0x94 ; '.'
000000000000aae2         db  0xff ; '.'
000000000000aae3         db  0xff ; '.'
000000000000aae4         db  0x08 ; '.'
000000000000aae5         db  0x94 ; '.'
000000000000aae6         db  0xff ; '.'
000000000000aae7         db  0xff ; '.'
000000000000aae8         db  0x08 ; '.'
000000000000aae9         db  0x94 ; '.'
000000000000aaea         db  0xff ; '.'
000000000000aaeb         db  0xff ; '.'
000000000000aaec         db  0x08 ; '.'
000000000000aaed         db  0x94 ; '.'
000000000000aaee         db  0xff ; '.'
000000000000aaef         db  0xff ; '.'
000000000000aaf0         db  0x08 ; '.'
000000000000aaf1         db  0x94 ; '.'
000000000000aaf2         db  0xff ; '.'
000000000000aaf3         db  0xff ; '.'
000000000000aaf4         db  0x08 ; '.'
000000000000aaf5         db  0x94 ; '.'
000000000000aaf6         db  0xff ; '.'
000000000000aaf7         db  0xff ; '.'
000000000000aaf8         db  0x08 ; '.'
000000000000aaf9         db  0x94 ; '.'
000000000000aafa         db  0xff ; '.'
000000000000aafb         db  0xff ; '.'
000000000000aafc         db  0x08 ; '.'
000000000000aafd         db  0x94 ; '.'
000000000000aafe         db  0xff ; '.'
000000000000aaff         db  0xff ; '.'
000000000000ab00         db  0x08 ; '.'
000000000000ab01         db  0x94 ; '.'
000000000000ab02         db  0xff ; '.'
000000000000ab03         db  0xff ; '.'
000000000000ab04         db  0x08 ; '.'
000000000000ab05         db  0x94 ; '.'
000000000000ab06         db  0xff ; '.'
000000000000ab07         db  0xff ; '.'
000000000000ab08         db  0x08 ; '.'
000000000000ab09         db  0x94 ; '.'
000000000000ab0a         db  0xff ; '.'
000000000000ab0b         db  0xff ; '.'
000000000000ab0c         db  0x08 ; '.'
000000000000ab0d         db  0x94 ; '.'
000000000000ab0e         db  0xff ; '.'
000000000000ab0f         db  0xff ; '.'
000000000000ab10         db  0x08 ; '.'
000000000000ab11         db  0x94 ; '.'
000000000000ab12         db  0xff ; '.'
000000000000ab13         db  0xff ; '.'
000000000000ab14         db  0x78 ; 'x'
000000000000ab15         db  0x8f ; '.'
000000000000ab16         db  0xff ; '.'
000000000000ab17         db  0xff ; '.'
000000000000ab18         db  0x38 ; '8'
000000000000ab19         db  0x94 ; '.'
000000000000ab1a         db  0xff ; '.'
000000000000ab1b         db  0xff ; '.'
000000000000ab1c         db  0x78 ; 'x'
000000000000ab1d         db  0x8f ; '.'
000000000000ab1e         db  0xff ; '.'
000000000000ab1f         db  0xff ; '.'
000000000000ab20         db  0x20 ; ' '
000000000000ab21         db  0x94 ; '.'
000000000000ab22         db  0xff ; '.'
000000000000ab23         db  0xff ; '.'
000000000000ab24         db  0x00 ; '.'
000000000000ab25         db  0x00 ; '.'
000000000000ab26         db  0x00 ; '.'
000000000000ab27         db  0x00 ; '.'
000000000000ab28         db  0x00 ; '.'
000000000000ab29         db  0x00 ; '.'
000000000000ab2a         db  0x00 ; '.'
000000000000ab2b         db  0x00 ; '.'
000000000000ab2c         db  0x00 ; '.'
000000000000ab2d         db  0x00 ; '.'
000000000000ab2e         db  0x00 ; '.'
000000000000ab2f         db  0x00 ; '.'
000000000000ab30         db  0x00 ; '.'
000000000000ab31         db  0x00 ; '.'
000000000000ab32         db  0x00 ; '.'
000000000000ab33         db  0x00 ; '.'
000000000000ab34         db  0x00 ; '.'
000000000000ab35         db  0x00 ; '.'
000000000000ab36         db  0x00 ; '.'
000000000000ab37         db  0x00 ; '.'
000000000000ab38         db  0x00 ; '.'
000000000000ab39         db  0x00 ; '.'
000000000000ab3a         db  0x00 ; '.'
000000000000ab3b         db  0x00 ; '.'
000000000000ab3c         db  0x00 ; '.'
000000000000ab3d         db  0x00 ; '.'
000000000000ab3e         db  0x00 ; '.'
000000000000ab3f         db  0x00 ; '.'
                     quoting_style_vals:
000000000000ab40         db  0x00 ; '.'
000000000000ab41         db  0x00 ; '.'
000000000000ab42         db  0x00 ; '.'
000000000000ab43         db  0x00 ; '.'
000000000000ab44         db  0x01 ; '.'
000000000000ab45         db  0x00 ; '.'
000000000000ab46         db  0x00 ; '.'
000000000000ab47         db  0x00 ; '.'
000000000000ab48         db  0x02 ; '.'
000000000000ab49         db  0x00 ; '.'
000000000000ab4a         db  0x00 ; '.'
000000000000ab4b         db  0x00 ; '.'
000000000000ab4c         db  0x03 ; '.'
000000000000ab4d         db  0x00 ; '.'
000000000000ab4e         db  0x00 ; '.'
000000000000ab4f         db  0x00 ; '.'
000000000000ab50         db  0x04 ; '.'
000000000000ab51         db  0x00 ; '.'
000000000000ab52         db  0x00 ; '.'
000000000000ab53         db  0x00 ; '.'
000000000000ab54         db  0x05 ; '.'
000000000000ab55         db  0x00 ; '.'
000000000000ab56         db  0x00 ; '.'
000000000000ab57         db  0x00 ; '.'
000000000000ab58         db  0x06 ; '.'
000000000000ab59         db  0x00 ; '.'
000000000000ab5a         db  0x00 ; '.'
000000000000ab5b         db  0x00 ; '.'
000000000000ab5c         db  0x07 ; '.'
000000000000ab5d         db  0x00 ; '.'
000000000000ab5e         db  0x00 ; '.'
000000000000ab5f         db  0x00 ; '.'
000000000000ab60         db  0x08 ; '.'
000000000000ab61         db  0x00 ; '.'
000000000000ab62         db  0x00 ; '.'
000000000000ab63         db  0x00 ; '.'
000000000000ab64         db  0x09 ; '.'
000000000000ab65         db  0x00 ; '.'
000000000000ab66         db  0x00 ; '.'
000000000000ab67         db  0x00 ; '.'
                     aSSSn:
000000000000ab68         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000ab74         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000ab7b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000ab7c         db  0x43 ; 'C'
000000000000ab7d         db  0x29 ; ')'
000000000000ab7e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000ab7f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000ab8f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000aba6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000abc2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000abd7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000abed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000000ac01         align      8
                     aNlicenseGplv3G:
000000000000ac08         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000acd4         align      8
                     aWrittenBySSSna:
000000000000acd8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_acf8:        // aWrittenBySSSns
000000000000acf8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000ad1c         align      32
                     aWrittenBySSSns_ad20:        // aWrittenBySSSns
000000000000ad20         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_ad48:        // aWrittenBySSSns
000000000000ad48         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000ad74         align      8
                     aWrittenBySSSns_ad78:        // aWrittenBySSSns
000000000000ad78         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000ada8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000addc         align      32
                     aWrittenBySSSns_ade0:        // aWrittenBySSSns
000000000000ade0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000ae1c         align      32
                     aGeneralHelpUsi:
000000000000ae20         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000ae61         align      4
                     switch_table_ae64:        // switch_table
000000000000ae64         dd         version_etc_arn.loc_53f6-switch_table_ae64, version_etc_arn.loc_5488-switch_table_ae64, version_etc_arn.loc_54c8-switch_table_ae64, version_etc_arn.loc_5510-switch_table_ae64 ; switch table used at 0x5374 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000ae74         dd         version_etc_arn.loc_5560-switch_table_ae64, version_etc_arn.loc_55b8-switch_table_ae64, version_etc_arn.loc_55e8-switch_table_ae64, version_etc_arn.loc_5650-switch_table_ae64
000000000000ae84         dd         version_etc_arn.loc_5380-switch_table_ae64, version_etc_arn.loc_5430-switch_table_ae64
000000000000ae8c         align      32
                     version_etc_copyright:
000000000000aea0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000aecf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li_aee0:        // aCoreutils831li
000000000000aee0         db         "../coreutils-8.31/lib/xfts.c", 0           ; DATA XREF=sub_5baf+8
                     aErrnoEinval:
000000000000aefd         db         "errno != EINVAL", 0                        ; DATA XREF=sub_5baf+15
000000000000af0d         align      16
                     __PRETTY_FUNCTION__.3434:
000000000000af10         db         "xfts_open", 0                              ; DATA XREF=sub_5baf+1
000000000000af1a         db  0x2e ; '.'                                         ; DATA XREF=fts_safe_changedir+67, fts_safe_changedir+335, fts_build+2154, rpl_fts_read+1108
000000000000af1b         db  0x2e ; '.'                                         ; DATA XREF=rpl_fts_open+640, rpl_fts_read+1745, rpl_fts_read+1825, rpl_fts_children+195
000000000000af1c         db  0x00 ; '.'
000000000000af1d         db  0x00 ; '.'
000000000000af1e         db  0x00 ; '.'
000000000000af1f         db  0x00 ; '.'
                     CSWTCH.53:
000000000000af20         db  0x00 ; '.'                                         ; DATA XREF=fts_build+372, fts_build+2486
000000000000af21         db  0x10 ; '.'
000000000000af22         db  0x00 ; '.'
000000000000af23         db  0x00 ; '.'
000000000000af24         db  0x00 ; '.'
000000000000af25         db  0x20 ; ' '
000000000000af26         db  0x00 ; '.'
000000000000af27         db  0x00 ; '.'
000000000000af28         db  0x00 ; '.'
000000000000af29         db  0x00 ; '.'
000000000000af2a         db  0x00 ; '.'
000000000000af2b         db  0x00 ; '.'
000000000000af2c         db  0x00 ; '.'
000000000000af2d         db  0x40 ; '@'
000000000000af2e         db  0x00 ; '.'
000000000000af2f         db  0x00 ; '.'
000000000000af30         db  0x00 ; '.'
000000000000af31         db  0x00 ; '.'
000000000000af32         db  0x00 ; '.'
000000000000af33         db  0x00 ; '.'
000000000000af34         db  0x00 ; '.'
000000000000af35         db  0x60 ; '`'
000000000000af36         db  0x00 ; '.'
000000000000af37         db  0x00 ; '.'
000000000000af38         db  0x00 ; '.'
000000000000af39         db  0x00 ; '.'
000000000000af3a         db  0x00 ; '.'
000000000000af3b         db  0x00 ; '.'
000000000000af3c         db  0x00 ; '.'
000000000000af3d         db  0x80 ; '.'
000000000000af3e         db  0x00 ; '.'
000000000000af3f         db  0x00 ; '.'
000000000000af40         db  0x00 ; '.'
000000000000af41         db  0x00 ; '.'
000000000000af42         db  0x00 ; '.'
000000000000af43         db  0x00 ; '.'
000000000000af44         db  0x00 ; '.'
000000000000af45         db  0xa0 ; '.'
000000000000af46         db  0x00 ; '.'
000000000000af47         db  0x00 ; '.'
000000000000af48         db  0x00 ; '.'
000000000000af49         db  0x00 ; '.'
000000000000af4a         db  0x00 ; '.'
000000000000af4b         db  0x00 ; '.'
000000000000af4c         db  0x00 ; '.'
000000000000af4d         db  0xc0 ; '.'
000000000000af4e         db  0x00 ; '.'
000000000000af4f         db  0x00 ; '.'
                     aCoreutils831li:
000000000000af50         db         "../coreutils-8.31/lib/cycle-check.c", 0    ; DATA XREF=cycle_check+110
                     aStatemagic9827:
000000000000af74         db         "state->magic == 9827862", 0                ; DATA XREF=cycle_check+117
000000000000af8c         align      16
                     __PRETTY_FUNCTION__.3994:
000000000000af90         db         "cycle_check", 0                            ; DATA XREF=cycle_check+103
000000000000af9c         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000af9d         db  0x00 ; '.'
                     aPosix:
000000000000af9e         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aEntriesLun:
000000000000afa4         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000000afbc         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
000000000000afd4         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
000000000000afec         align      16
                     aBucketsUsedLu2:
000000000000aff0         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
000000000000b011         db  0x00 ; '.'
000000000000b012         db  0x00 ; '.'
000000000000b013         db  0x00 ; '.'
000000000000b014         db  0x00 ; '.'
000000000000b015         db  0x00 ; '.'
000000000000b016         db  0x00 ; '.'
000000000000b017         db  0x00 ; '.'
000000000000b018         db  0x00 ; '.'
000000000000b019         db  0x00 ; '.'
000000000000b01a         db  0x00 ; '.'
000000000000b01b         db  0x00 ; '.'
000000000000b01c         db  0x00 ; '.'
000000000000b01d         db  0x00 ; '.'
000000000000b01e         db  0x00 ; '.'
000000000000b01f         db  0x00 ; '.'
                     default_tuning:
000000000000b020         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
000000000000b021         db  0x00 ; '.'
000000000000b022         db  0x00 ; '.'
000000000000b023         db  0x00 ; '.'
000000000000b024         db  0x00 ; '.'
000000000000b025         db  0x00 ; '.'
000000000000b026         db  0x80 ; '.'
000000000000b027         db  0x3f ; '?'
000000000000b028         db  0xcd ; '.'
000000000000b029         db  0xcc ; '.'
000000000000b02a         db  0x4c ; 'L'
000000000000b02b         db  0x3f ; '?'
000000000000b02c         db  0xf4 ; '.'
000000000000b02d         db  0xfd ; '.'
000000000000b02e         db  0xb4 ; '.'
000000000000b02f         db  0x3f ; '?'
000000000000b030         db  0x00 ; '.'
000000000000b031         db  0x00 ; '.'
000000000000b032         db  0x00 ; '.'
000000000000b033         db  0x00 ; '.'
                     float_b034:        // float
000000000000b034         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_b038:        // float
000000000000b038         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_b03c:        // float
000000000000b03c         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_b040:        // float
000000000000b040         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_b044:        // float
000000000000b044         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_b048:        // float
000000000000b048         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_b04c:        // float
000000000000b04c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_b050:        // float
000000000000b050         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
000000000000b054         align      2
000000000000b05e         db  0x59 ; 'Y'
000000000000b05f         db  0x40 ; '@'
                     aAscii:
000000000000b060         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000b066         db  0x00 ; '.'
000000000000b067         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xb068; 0xb4ec[ (1156 bytes)
        ; File offset : [45160; 46316[ (1156 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b068         db  0x01 ; '.'
000000000000b069         db  0x1b ; '.'
000000000000b06a         db  0x03 ; '.'
000000000000b06b         db  0x3b ; ';'
000000000000b06c         db  0x84 ; '.'
000000000000b06d         db  0x04 ; '.'
000000000000b06e         db  0x00 ; '.'
000000000000b06f         db  0x00 ; '.'
000000000000b070         db  0x8f ; '.'
000000000000b071         db  0x00 ; '.'
000000000000b072         db  0x00 ; '.'
000000000000b073         db  0x00 ; '.'
000000000000b074         db  0x78 ; 'x'
000000000000b075         db  0x66 ; 'f'
000000000000b076         db  0xff ; '.'
000000000000b077         db  0xff ; '.'
000000000000b078         db  0xd0 ; '.'
000000000000b079         db  0x04 ; '.'
000000000000b07a         db  0x00 ; '.'
000000000000b07b         db  0x00 ; '.'
000000000000b07c         db  0x28 ; '('
000000000000b07d         db  0x6a ; 'j'
000000000000b07e         db  0xff ; '.'
000000000000b07f         db  0xff ; '.'
000000000000b080         db  0xf8 ; '.'
000000000000b081         db  0x04 ; '.'
000000000000b082         db  0x00 ; '.'
000000000000b083         db  0x00 ; '.'
000000000000b084         db  0x38 ; '8'
000000000000b085         db  0x6a ; 'j'
000000000000b086         db  0xff ; '.'
000000000000b087         db  0xff ; '.'
000000000000b088         db  0x3c ; '<'
000000000000b089         db  0x05 ; '.'
000000000000b08a         db  0x00 ; '.'
000000000000b08b         db  0x00 ; '.'
000000000000b08c         db  0x78 ; 'x'
000000000000b08d         db  0x77 ; 'w'
000000000000b08e         db  0xff ; '.'
000000000000b08f         db  0xff ; '.'
000000000000b090         db  0xa0 ; '.'
000000000000b091         db  0x04 ; '.'
000000000000b092         db  0x00 ; '.'
000000000000b093         db  0x00 ; '.'
000000000000b094         db  0x88 ; '.'
000000000000b095         db  0x78 ; 'x'
000000000000b096         db  0xff ; '.'
000000000000b097         db  0xff ; '.'
000000000000b098         db  0x10 ; '.'
000000000000b099         db  0x05 ; '.'
000000000000b09a         db  0x00 ; '.'
000000000000b09b         db  0x00 ; '.'
000000000000b09c         db  0x98 ; '.'
000000000000b09d         db  0x7c ; '|'
000000000000b09e         db  0xff ; '.'
000000000000b09f         db  0xff ; '.'
000000000000b0a0         db  0xc0 ; '.'
000000000000b0a1         db  0x05 ; '.'
000000000000b0a2         db  0x00 ; '.'
000000000000b0a3         db  0x00 ; '.'
000000000000b0a4         db  0xa8 ; '.'
000000000000b0a5         db  0x7c ; '|'
000000000000b0a6         db  0xff ; '.'
000000000000b0a7         db  0xff ; '.'
000000000000b0a8         db  0xd4 ; '.'
000000000000b0a9         db  0x05 ; '.'
000000000000b0aa         db  0x00 ; '.'
000000000000b0ab         db  0x00 ; '.'
000000000000b0ac         db  0xb8 ; '.'
000000000000b0ad         db  0x7c ; '|'
000000000000b0ae         db  0xff ; '.'
000000000000b0af         db  0xff ; '.'
000000000000b0b0         db  0xe8 ; '.'
000000000000b0b1         db  0x05 ; '.'
000000000000b0b2         db  0x00 ; '.'
000000000000b0b3         db  0x00 ; '.'
000000000000b0b4         db  0x68 ; 'h'
000000000000b0b5         db  0x7d ; '}'
000000000000b0b6         db  0xff ; '.'
000000000000b0b7         db  0xff ; '.'
000000000000b0b8         db  0x18 ; '.'
000000000000b0b9         db  0x06 ; '.'
000000000000b0ba         db  0x00 ; '.'
000000000000b0bb         db  0x00 ; '.'
000000000000b0bc         db  0xf8 ; '.'
000000000000b0bd         db  0x7e ; '~'
000000000000b0be         db  0xff ; '.'
000000000000b0bf         db  0xff ; '.'
000000000000b0c0         db  0x2c ; ','
000000000000b0c1         db  0x06 ; '.'
000000000000b0c2         db  0x00 ; '.'
000000000000b0c3         db  0x00 ; '.'
000000000000b0c4         db  0x08 ; '.'
000000000000b0c5         db  0x7f ; '.'
000000000000b0c6         db  0xff ; '.'
000000000000b0c7         db  0xff ; '.'
000000000000b0c8         db  0x40 ; '@'
000000000000b0c9         db  0x06 ; '.'
000000000000b0ca         db  0x00 ; '.'
000000000000b0cb         db  0x00 ; '.'
000000000000b0cc         db  0xb8 ; '.'
000000000000b0cd         db  0x82 ; '.'
000000000000b0ce         db  0xff ; '.'
000000000000b0cf         db  0xff ; '.'
000000000000b0d0         db  0x88 ; '.'
000000000000b0d1         db  0x06 ; '.'
000000000000b0d2         db  0x00 ; '.'
000000000000b0d3         db  0x00 ; '.'
000000000000b0d4         db  0x48 ; 'H'
000000000000b0d5         db  0x83 ; '.'
000000000000b0d6         db  0xff ; '.'
000000000000b0d7         db  0xff ; '.'
000000000000b0d8         db  0xac ; '.'
000000000000b0d9         db  0x06 ; '.'
000000000000b0da         db  0x00 ; '.'
000000000000b0db         db  0x00 ; '.'
000000000000b0dc         db  0xb8 ; '.'
000000000000b0dd         db  0x84 ; '.'
000000000000b0de         db  0xff ; '.'
000000000000b0df         db  0xff ; '.'
000000000000b0e0         db  0xe0 ; '.'
000000000000b0e1         db  0x06 ; '.'
000000000000b0e2         db  0x00 ; '.'
000000000000b0e3         db  0x00 ; '.'
000000000000b0e4         db  0x58 ; 'X'
000000000000b0e5         db  0x85 ; '.'
000000000000b0e6         db  0xff ; '.'
000000000000b0e7         db  0xff ; '.'
000000000000b0e8         db  0x00 ; '.'
000000000000b0e9         db  0x07 ; '.'
000000000000b0ea         db  0x00 ; '.'
000000000000b0eb         db  0x00 ; '.'
000000000000b0ec         db  0x48 ; 'H'
000000000000b0ed         db  0x86 ; '.'
000000000000b0ee         db  0xff ; '.'
000000000000b0ef         db  0xff ; '.'
000000000000b0f0         db  0x44 ; 'D'
000000000000b0f1         db  0x07 ; '.'
000000000000b0f2         db  0x00 ; '.'
000000000000b0f3         db  0x00 ; '.'
000000000000b0f4         db  0x88 ; '.'
000000000000b0f5         db  0x98 ; '.'
000000000000b0f6         db  0xff ; '.'
000000000000b0f7         db  0xff ; '.'
000000000000b0f8         db  0xbc ; '.'
000000000000b0f9         db  0x07 ; '.'
000000000000b0fa         db  0x00 ; '.'
000000000000b0fb         db  0x00 ; '.'
000000000000b0fc         db  0x38 ; '8'
000000000000b0fd         db  0x9a ; '.'
000000000000b0fe         db  0xff ; '.'
000000000000b0ff         db  0xff ; '.'
000000000000b100         db  0x28 ; '('
000000000000b101         db  0x08 ; '.'
000000000000b102         db  0x00 ; '.'
000000000000b103         db  0x00 ; '.'
000000000000b104         db  0x78 ; 'x'
000000000000b105         db  0x9a ; '.'
000000000000b106         db  0xff ; '.'
000000000000b107         db  0xff ; '.'
000000000000b108         db  0x54 ; 'T'
000000000000b109         db  0x08 ; '.'
000000000000b10a         db  0x00 ; '.'
000000000000b10b         db  0x00 ; '.'
000000000000b10c         db  0x98 ; '.'
000000000000b10d         db  0x9a ; '.'
000000000000b10e         db  0xff ; '.'
000000000000b10f         db  0xff ; '.'
000000000000b110         db  0x68 ; 'h'
000000000000b111         db  0x08 ; '.'
000000000000b112         db  0x00 ; '.'
000000000000b113         db  0x00 ; '.'
000000000000b114         db  0xb8 ; '.'
000000000000b115         db  0x9a ; '.'
000000000000b116         db  0xff ; '.'
000000000000b117         db  0xff ; '.'
000000000000b118         db  0x7c ; '|'
000000000000b119         db  0x08 ; '.'
000000000000b11a         db  0x00 ; '.'
000000000000b11b         db  0x00 ; '.'
000000000000b11c         db  0xf8 ; '.'
000000000000b11d         db  0x9a ; '.'
000000000000b11e         db  0xff ; '.'
000000000000b11f         db  0xff ; '.'
000000000000b120         db  0x90 ; '.'
000000000000b121         db  0x08 ; '.'
000000000000b122         db  0x00 ; '.'
000000000000b123         db  0x00 ; '.'
000000000000b124         db  0x18 ; '.'
000000000000b125         db  0x9b ; '.'
000000000000b126         db  0xff ; '.'
000000000000b127         db  0xff ; '.'
000000000000b128         db  0xa4 ; '.'
000000000000b129         db  0x08 ; '.'
000000000000b12a         db  0x00 ; '.'
000000000000b12b         db  0x00 ; '.'
000000000000b12c         db  0x48 ; 'H'
000000000000b12d         db  0x9b ; '.'
000000000000b12e         db  0xff ; '.'
000000000000b12f         db  0xff ; '.'
000000000000b130         db  0xb8 ; '.'
000000000000b131         db  0x08 ; '.'
000000000000b132         db  0x00 ; '.'
000000000000b133         db  0x00 ; '.'
000000000000b134         db  0xc8 ; '.'
000000000000b135         db  0x9b ; '.'
000000000000b136         db  0xff ; '.'
000000000000b137         db  0xff ; '.'
000000000000b138         db  0x0c ; '.'
000000000000b139         db  0x09 ; '.'
000000000000b13a         db  0x00 ; '.'
000000000000b13b         db  0x00 ; '.'
000000000000b13c         db  0xb8 ; '.'
000000000000b13d         db  0x9c ; '.'
000000000000b13e         db  0xff ; '.'
000000000000b13f         db  0xff ; '.'
000000000000b140         db  0x78 ; 'x'
000000000000b141         db  0x09 ; '.'
000000000000b142         db  0x00 ; '.'
000000000000b143         db  0x00 ; '.'
000000000000b144         db  0xc8 ; '.'
000000000000b145         db  0x9c ; '.'
000000000000b146         db  0xff ; '.'
000000000000b147         db  0xff ; '.'
000000000000b148         db  0x8c ; '.'
000000000000b149         db  0x09 ; '.'
000000000000b14a         db  0x00 ; '.'
000000000000b14b         db  0x00 ; '.'
000000000000b14c         db  0x68 ; 'h'
000000000000b14d         db  0x9d ; '.'
000000000000b14e         db  0xff ; '.'
000000000000b14f         db  0xff ; '.'
000000000000b150         db  0xb8 ; '.'
000000000000b151         db  0x09 ; '.'
000000000000b152         db  0x00 ; '.'
000000000000b153         db  0x00 ; '.'
000000000000b154         db  0x88 ; '.'
000000000000b155         db  0x9d ; '.'
000000000000b156         db  0xff ; '.'
000000000000b157         db  0xff ; '.'
000000000000b158         db  0xcc ; '.'
000000000000b159         db  0x09 ; '.'
000000000000b15a         db  0x00 ; '.'
000000000000b15b         db  0x00 ; '.'
000000000000b15c         db  0x98 ; '.'
000000000000b15d         db  0x9d ; '.'
000000000000b15e         db  0xff ; '.'
000000000000b15f         db  0xff ; '.'
000000000000b160         db  0xe0 ; '.'
000000000000b161         db  0x09 ; '.'
000000000000b162         db  0x00 ; '.'
000000000000b163         db  0x00 ; '.'
000000000000b164         db  0xb8 ; '.'
000000000000b165         db  0x9d ; '.'
000000000000b166         db  0xff ; '.'
000000000000b167         db  0xff ; '.'
000000000000b168         db  0xf4 ; '.'
000000000000b169         db  0x09 ; '.'
000000000000b16a         db  0x00 ; '.'
000000000000b16b         db  0x00 ; '.'
000000000000b16c         db  0xd8 ; '.'
000000000000b16d         db  0x9d ; '.'
000000000000b16e         db  0xff ; '.'
000000000000b16f         db  0xff ; '.'
000000000000b170         db  0x08 ; '.'
000000000000b171         db  0x0a ; '.'
000000000000b172         db  0x00 ; '.'
000000000000b173         db  0x00 ; '.'
000000000000b174         db  0x68 ; 'h'
000000000000b175         db  0x9e ; '.'
000000000000b176         db  0xff ; '.'
000000000000b177         db  0xff ; '.'
000000000000b178         db  0x24 ; '$'
000000000000b179         db  0x0a ; '.'
000000000000b17a         db  0x00 ; '.'
000000000000b17b         db  0x00 ; '.'
000000000000b17c         db  0xf8 ; '.'
000000000000b17d         db  0x9e ; '.'
000000000000b17e         db  0xff ; '.'
000000000000b17f         db  0xff ; '.'
000000000000b180         db  0x40 ; '@'
000000000000b181         db  0x0a ; '.'
000000000000b182         db  0x00 ; '.'
000000000000b183         db  0x00 ; '.'
000000000000b184         db  0x08 ; '.'
000000000000b185         db  0x9f ; '.'
000000000000b186         db  0xff ; '.'
000000000000b187         db  0xff ; '.'
000000000000b188         db  0x54 ; 'T'
000000000000b189         db  0x0a ; '.'
000000000000b18a         db  0x00 ; '.'
000000000000b18b         db  0x00 ; '.'
000000000000b18c         db  0x18 ; '.'
000000000000b18d         db  0x9f ; '.'
000000000000b18e         db  0xff ; '.'
000000000000b18f         db  0xff ; '.'
000000000000b190         db  0x68 ; 'h'
000000000000b191         db  0x0a ; '.'
000000000000b192         db  0x00 ; '.'
000000000000b193         db  0x00 ; '.'
000000000000b194         db  0xb8 ; '.'
000000000000b195         db  0x9f ; '.'
000000000000b196         db  0xff ; '.'
000000000000b197         db  0xff ; '.'
000000000000b198         db  0x84 ; '.'
000000000000b199         db  0x0a ; '.'
000000000000b19a         db  0x00 ; '.'
000000000000b19b         db  0x00 ; '.'
000000000000b19c         db  0xc8 ; '.'
000000000000b19d         db  0x9f ; '.'
000000000000b19e         db  0xff ; '.'
000000000000b19f         db  0xff ; '.'
000000000000b1a0         db  0x98 ; '.'
000000000000b1a1         db  0x0a ; '.'
000000000000b1a2         db  0x00 ; '.'
000000000000b1a3         db  0x00 ; '.'
000000000000b1a4         db  0xe8 ; '.'
000000000000b1a5         db  0x9f ; '.'
000000000000b1a6         db  0xff ; '.'
000000000000b1a7         db  0xff ; '.'
000000000000b1a8         db  0xac ; '.'
000000000000b1a9         db  0x0a ; '.'
000000000000b1aa         db  0x00 ; '.'
000000000000b1ab         db  0x00 ; '.'
000000000000b1ac         db  0xf8 ; '.'
000000000000b1ad         db  0x9f ; '.'
000000000000b1ae         db  0xff ; '.'
000000000000b1af         db  0xff ; '.'
000000000000b1b0         db  0xc0 ; '.'
000000000000b1b1         db  0x0a ; '.'
000000000000b1b2         db  0x00 ; '.'
000000000000b1b3         db  0x00 ; '.'
000000000000b1b4         db  0x88 ; '.'
000000000000b1b5         db  0xa0 ; '.'
000000000000b1b6         db  0xff ; '.'
000000000000b1b7         db  0xff ; '.'
000000000000b1b8         db  0xdc ; '.'
000000000000b1b9         db  0x0a ; '.'
000000000000b1ba         db  0x00 ; '.'
000000000000b1bb         db  0x00 ; '.'
000000000000b1bc         db  0x28 ; '('
000000000000b1bd         db  0xa1 ; '.'
000000000000b1be         db  0xff ; '.'
000000000000b1bf         db  0xff ; '.'
000000000000b1c0         db  0xf8 ; '.'
000000000000b1c1         db  0x0a ; '.'
000000000000b1c2         db  0x00 ; '.'
000000000000b1c3         db  0x00 ; '.'
000000000000b1c4         db  0x38 ; '8'
000000000000b1c5         db  0xa1 ; '.'
000000000000b1c6         db  0xff ; '.'
000000000000b1c7         db  0xff ; '.'
000000000000b1c8         db  0x0c ; '.'
000000000000b1c9         db  0x0b ; '.'
000000000000b1ca         db  0x00 ; '.'
000000000000b1cb         db  0x00 ; '.'
000000000000b1cc         db  0x58 ; 'X'
000000000000b1cd         db  0xa1 ; '.'
000000000000b1ce         db  0xff ; '.'
000000000000b1cf         db  0xff ; '.'
000000000000b1d0         db  0x20 ; ' '
000000000000b1d1         db  0x0b ; '.'
000000000000b1d2         db  0x00 ; '.'
000000000000b1d3         db  0x00 ; '.'
000000000000b1d4         db  0x78 ; 'x'
000000000000b1d5         db  0xa1 ; '.'
000000000000b1d6         db  0xff ; '.'
000000000000b1d7         db  0xff ; '.'
000000000000b1d8         db  0x34 ; '4'
000000000000b1d9         db  0x0b ; '.'
000000000000b1da         db  0x00 ; '.'
000000000000b1db         db  0x00 ; '.'
000000000000b1dc         db  0x88 ; '.'
000000000000b1dd         db  0xa1 ; '.'
000000000000b1de         db  0xff ; '.'
000000000000b1df         db  0xff ; '.'
000000000000b1e0         db  0x48 ; 'H'
000000000000b1e1         db  0x0b ; '.'
000000000000b1e2         db  0x00 ; '.'
000000000000b1e3         db  0x00 ; '.'
000000000000b1e4         db  0xa8 ; '.'
000000000000b1e5         db  0xa1 ; '.'
000000000000b1e6         db  0xff ; '.'
000000000000b1e7         db  0xff ; '.'
000000000000b1e8         db  0x5c ; '\'
000000000000b1e9         db  0x0b ; '.'
000000000000b1ea         db  0x00 ; '.'
000000000000b1eb         db  0x00 ; '.'
000000000000b1ec         db  0xc8 ; '.'
000000000000b1ed         db  0xa1 ; '.'
000000000000b1ee         db  0xff ; '.'
000000000000b1ef         db  0xff ; '.'
000000000000b1f0         db  0x70 ; 'p'
000000000000b1f1         db  0x0b ; '.'
000000000000b1f2         db  0x00 ; '.'
000000000000b1f3         db  0x00 ; '.'
000000000000b1f4         db  0xe8 ; '.'
000000000000b1f5         db  0xa1 ; '.'
000000000000b1f6         db  0xff ; '.'
000000000000b1f7         db  0xff ; '.'
000000000000b1f8         db  0x88 ; '.'
000000000000b1f9         db  0x0b ; '.'
000000000000b1fa         db  0x00 ; '.'
000000000000b1fb         db  0x00 ; '.'
000000000000b1fc         db  0x68 ; 'h'
000000000000b1fd         db  0xa2 ; '.'
000000000000b1fe         db  0xff ; '.'
000000000000b1ff         db  0xff ; '.'
000000000000b200         db  0xb0 ; '.'
000000000000b201         db  0x0b ; '.'
000000000000b202         db  0x00 ; '.'
000000000000b203         db  0x00 ; '.'
000000000000b204         db  0x88 ; '.'
000000000000b205         db  0xa6 ; '.'
000000000000b206         db  0xff ; '.'
000000000000b207         db  0xff ; '.'
000000000000b208         db  0xc4 ; '.'
000000000000b209         db  0x0c ; '.'
000000000000b20a         db  0x00 ; '.'
000000000000b20b         db  0x00 ; '.'
000000000000b20c         db  0xa8 ; '.'
000000000000b20d         db  0xa6 ; '.'
000000000000b20e         db  0xff ; '.'
000000000000b20f         db  0xff ; '.'
000000000000b210         db  0xd8 ; '.'
000000000000b211         db  0x0c ; '.'
000000000000b212         db  0x00 ; '.'
000000000000b213         db  0x00 ; '.'
000000000000b214         db  0x28 ; '('
000000000000b215         db  0xa7 ; '.'
000000000000b216         db  0xff ; '.'
000000000000b217         db  0xff ; '.'
000000000000b218         db  0xf4 ; '.'
000000000000b219         db  0x0c ; '.'
000000000000b21a         db  0x00 ; '.'
000000000000b21b         db  0x00 ; '.'
000000000000b21c         db  0x08 ; '.'
000000000000b21d         db  0xa8 ; '.'
000000000000b21e         db  0xff ; '.'
000000000000b21f         db  0xff ; '.'
000000000000b220         db  0x20 ; ' '
000000000000b221         db  0x0d ; '.'
000000000000b222         db  0x00 ; '.'
000000000000b223         db  0x00 ; '.'
000000000000b224         db  0x88 ; '.'
000000000000b225         db  0xa8 ; '.'
000000000000b226         db  0xff ; '.'
000000000000b227         db  0xff ; '.'
000000000000b228         db  0x40 ; '@'
000000000000b229         db  0x0d ; '.'
000000000000b22a         db  0x00 ; '.'
000000000000b22b         db  0x00 ; '.'
000000000000b22c         db  0xa8 ; '.'
000000000000b22d         db  0xa8 ; '.'
000000000000b22e         db  0xff ; '.'
000000000000b22f         db  0xff ; '.'
000000000000b230         db  0x5c ; '\'
000000000000b231         db  0x0d ; '.'
000000000000b232         db  0x00 ; '.'
000000000000b233         db  0x00 ; '.'
000000000000b234         db  0xd8 ; '.'
000000000000b235         db  0xa8 ; '.'
000000000000b236         db  0xff ; '.'
000000000000b237         db  0xff ; '.'
000000000000b238         db  0x70 ; 'p'
000000000000b239         db  0x0d ; '.'
000000000000b23a         db  0x00 ; '.'
000000000000b23b         db  0x00 ; '.'
000000000000b23c         db  0xe8 ; '.'
000000000000b23d         db  0xa8 ; '.'
000000000000b23e         db  0xff ; '.'
000000000000b23f         db  0xff ; '.'
000000000000b240         db  0x84 ; '.'
000000000000b241         db  0x0d ; '.'
000000000000b242         db  0x00 ; '.'
000000000000b243         db  0x00 ; '.'
000000000000b244         db  0x28 ; '('
000000000000b245         db  0xa9 ; '.'
000000000000b246         db  0xff ; '.'
000000000000b247         db  0xff ; '.'
000000000000b248         db  0xa8 ; '.'
000000000000b249         db  0x0d ; '.'
000000000000b24a         db  0x00 ; '.'
000000000000b24b         db  0x00 ; '.'
000000000000b24c         db  0x58 ; 'X'
000000000000b24d         db  0xa9 ; '.'
000000000000b24e         db  0xff ; '.'
000000000000b24f         db  0xff ; '.'
000000000000b250         db  0xbc ; '.'
000000000000b251         db  0x0d ; '.'
000000000000b252         db  0x00 ; '.'
000000000000b253         db  0x00 ; '.'
000000000000b254         db  0xe8 ; '.'
000000000000b255         db  0xa9 ; '.'
000000000000b256         db  0xff ; '.'
000000000000b257         db  0xff ; '.'
000000000000b258         db  0xd4 ; '.'
000000000000b259         db  0x0d ; '.'
000000000000b25a         db  0x00 ; '.'
000000000000b25b         db  0x00 ; '.'
000000000000b25c         db  0x38 ; '8'
000000000000b25d         db  0xaa ; '.'
000000000000b25e         db  0xff ; '.'
000000000000b25f         db  0xff ; '.'
000000000000b260         db  0xec ; '.'
000000000000b261         db  0x0d ; '.'
000000000000b262         db  0x00 ; '.'
000000000000b263         db  0x00 ; '.'
000000000000b264         db  0x58 ; 'X'
000000000000b265         db  0xaa ; '.'
000000000000b266         db  0xff ; '.'
000000000000b267         db  0xff ; '.'
000000000000b268         db  0x08 ; '.'
000000000000b269         db  0x0e ; '.'
000000000000b26a         db  0x00 ; '.'
000000000000b26b         db  0x00 ; '.'
000000000000b26c         db  0x88 ; '.'
000000000000b26d         db  0xaa ; '.'
000000000000b26e         db  0xff ; '.'
000000000000b26f         db  0xff ; '.'
000000000000b270         db  0x24 ; '$'
000000000000b271         db  0x0e ; '.'
000000000000b272         db  0x00 ; '.'
000000000000b273         db  0x00 ; '.'
000000000000b274         db  0xb8 ; '.'
000000000000b275         db  0xaa ; '.'
000000000000b276         db  0xff ; '.'
000000000000b277         db  0xff ; '.'
000000000000b278         db  0x4c ; 'L'
000000000000b279         db  0x0e ; '.'
000000000000b27a         db  0x00 ; '.'
000000000000b27b         db  0x00 ; '.'
000000000000b27c         db  0xd8 ; '.'
000000000000b27d         db  0xaa ; '.'
000000000000b27e         db  0xff ; '.'
000000000000b27f         db  0xff ; '.'
000000000000b280         db  0x68 ; 'h'
000000000000b281         db  0x0e ; '.'
000000000000b282         db  0x00 ; '.'
000000000000b283         db  0x00 ; '.'
000000000000b284         db  0x18 ; '.'
000000000000b285         db  0xab ; '.'
000000000000b286         db  0xff ; '.'
000000000000b287         db  0xff ; '.'
000000000000b288         db  0x80 ; '.'
000000000000b289         db  0x0e ; '.'
000000000000b28a         db  0x00 ; '.'
000000000000b28b         db  0x00 ; '.'
000000000000b28c         db  0x68 ; 'h'
000000000000b28d         db  0xab ; '.'
000000000000b28e         db  0xff ; '.'
000000000000b28f         db  0xff ; '.'
000000000000b290         db  0x9c ; '.'
000000000000b291         db  0x0e ; '.'
000000000000b292         db  0x00 ; '.'
000000000000b293         db  0x00 ; '.'
000000000000b294         db  0x98 ; '.'
000000000000b295         db  0xab ; '.'
000000000000b296         db  0xff ; '.'
000000000000b297         db  0xff ; '.'
000000000000b298         db  0xb0 ; '.'
000000000000b299         db  0x0e ; '.'
000000000000b29a         db  0x00 ; '.'
000000000000b29b         db  0x00 ; '.'
000000000000b29c         db  0xb8 ; '.'
000000000000b29d         db  0xab ; '.'
000000000000b29e         db  0xff ; '.'
000000000000b29f         db  0xff ; '.'
000000000000b2a0         db  0xc4 ; '.'
000000000000b2a1         db  0x0e ; '.'
000000000000b2a2         db  0x00 ; '.'
000000000000b2a3         db  0x00 ; '.'
000000000000b2a4         db  0xc8 ; '.'
000000000000b2a5         db  0xab ; '.'
000000000000b2a6         db  0xff ; '.'
000000000000b2a7         db  0xff ; '.'
000000000000b2a8         db  0xd8 ; '.'
000000000000b2a9         db  0x0e ; '.'
000000000000b2aa         db  0x00 ; '.'
000000000000b2ab         db  0x00 ; '.'
000000000000b2ac         db  0xd8 ; '.'
000000000000b2ad         db  0xab ; '.'
000000000000b2ae         db  0xff ; '.'
000000000000b2af         db  0xff ; '.'
000000000000b2b0         db  0xec ; '.'
000000000000b2b1         db  0x0e ; '.'
000000000000b2b2         db  0x00 ; '.'
000000000000b2b3         db  0x00 ; '.'
000000000000b2b4         db  0xe8 ; '.'
000000000000b2b5         db  0xab ; '.'
000000000000b2b6         db  0xff ; '.'
000000000000b2b7         db  0xff ; '.'
000000000000b2b8         db  0x00 ; '.'
000000000000b2b9         db  0x0f ; '.'
000000000000b2ba         db  0x00 ; '.'
000000000000b2bb         db  0x00 ; '.'
000000000000b2bc         db  0x18 ; '.'
000000000000b2bd         db  0xac ; '.'
000000000000b2be         db  0xff ; '.'
000000000000b2bf         db  0xff ; '.'
000000000000b2c0         db  0x14 ; '.'
000000000000b2c1         db  0x0f ; '.'
000000000000b2c2         db  0x00 ; '.'
000000000000b2c3         db  0x00 ; '.'
000000000000b2c4         db  0xe8 ; '.'
000000000000b2c5         db  0xad ; '.'
000000000000b2c6         db  0xff ; '.'
000000000000b2c7         db  0xff ; '.'
000000000000b2c8         db  0x50 ; 'P'
000000000000b2c9         db  0x0f ; '.'
000000000000b2ca         db  0x00 ; '.'
000000000000b2cb         db  0x00 ; '.'
000000000000b2cc         db  0xf8 ; '.'
000000000000b2cd         db  0xae ; '.'
000000000000b2ce         db  0xff ; '.'
000000000000b2cf         db  0xff ; '.'
000000000000b2d0         db  0xa0 ; '.'
000000000000b2d1         db  0x0f ; '.'
000000000000b2d2         db  0x00 ; '.'
000000000000b2d3         db  0x00 ; '.'
000000000000b2d4         db  0x88 ; '.'
000000000000b2d5         db  0xaf ; '.'
000000000000b2d6         db  0xff ; '.'
000000000000b2d7         db  0xff ; '.'
000000000000b2d8         db  0xd8 ; '.'
000000000000b2d9         db  0x0f ; '.'
000000000000b2da         db  0x00 ; '.'
000000000000b2db         db  0x00 ; '.'
000000000000b2dc         db  0xd8 ; '.'
000000000000b2dd         db  0xaf ; '.'
000000000000b2de         db  0xff ; '.'
000000000000b2df         db  0xff ; '.'
000000000000b2e0         db  0x04 ; '.'
000000000000b2e1         db  0x10 ; '.'
000000000000b2e2         db  0x00 ; '.'
000000000000b2e3         db  0x00 ; '.'
000000000000b2e4         db  0x18 ; '.'
000000000000b2e5         db  0xb0 ; '.'
000000000000b2e6         db  0xff ; '.'
000000000000b2e7         db  0xff ; '.'
000000000000b2e8         db  0x20 ; ' '
000000000000b2e9         db  0x10 ; '.'
000000000000b2ea         db  0x00 ; '.'
000000000000b2eb         db  0x00 ; '.'
000000000000b2ec         db  0x48 ; 'H'
000000000000b2ed         db  0xb1 ; '.'
000000000000b2ee         db  0xff ; '.'
000000000000b2ef         db  0xff ; '.'
000000000000b2f0         db  0x5c ; '\'
000000000000b2f1         db  0x10 ; '.'
000000000000b2f2         db  0x00 ; '.'
000000000000b2f3         db  0x00 ; '.'
000000000000b2f4         db  0xb8 ; '.'
000000000000b2f5         db  0xb1 ; '.'
000000000000b2f6         db  0xff ; '.'
000000000000b2f7         db  0xff ; '.'
000000000000b2f8         db  0x80 ; '.'
000000000000b2f9         db  0x10 ; '.'
000000000000b2fa         db  0x00 ; '.'
000000000000b2fb         db  0x00 ; '.'
000000000000b2fc         db  0x28 ; '('
000000000000b2fd         db  0xb2 ; '.'
000000000000b2fe         db  0xff ; '.'
000000000000b2ff         db  0xff ; '.'
000000000000b300         db  0xc4 ; '.'
000000000000b301         db  0x10 ; '.'
000000000000b302         db  0x00 ; '.'
000000000000b303         db  0x00 ; '.'
000000000000b304         db  0x88 ; '.'
000000000000b305         db  0xb2 ; '.'
000000000000b306         db  0xff ; '.'
000000000000b307         db  0xff ; '.'
000000000000b308         db  0xf0 ; '.'
000000000000b309         db  0x10 ; '.'
000000000000b30a         db  0x00 ; '.'
000000000000b30b         db  0x00 ; '.'
000000000000b30c         db  0xf8 ; '.'
000000000000b30d         db  0xb2 ; '.'
000000000000b30e         db  0xff ; '.'
000000000000b30f         db  0xff ; '.'
000000000000b310         db  0x18 ; '.'
000000000000b311         db  0x11 ; '.'
000000000000b312         db  0x00 ; '.'
000000000000b313         db  0x00 ; '.'
000000000000b314         db  0x68 ; 'h'
000000000000b315         db  0xb3 ; '.'
000000000000b316         db  0xff ; '.'
000000000000b317         db  0xff ; '.'
000000000000b318         db  0x38 ; '8'
000000000000b319         db  0x11 ; '.'
000000000000b31a         db  0x00 ; '.'
000000000000b31b         db  0x00 ; '.'
000000000000b31c         db  0xa8 ; '.'
000000000000b31d         db  0xb3 ; '.'
000000000000b31e         db  0xff ; '.'
000000000000b31f         db  0xff ; '.'
000000000000b320         db  0x4c ; 'L'
000000000000b321         db  0x11 ; '.'
000000000000b322         db  0x00 ; '.'
000000000000b323         db  0x00 ; '.'
000000000000b324         db  0x28 ; '('
000000000000b325         db  0xb6 ; '.'
000000000000b326         db  0xff ; '.'
000000000000b327         db  0xff ; '.'
000000000000b328         db  0x9c ; '.'
000000000000b329         db  0x11 ; '.'
000000000000b32a         db  0x00 ; '.'
000000000000b32b         db  0x00 ; '.'
000000000000b32c         db  0xd8 ; '.'
000000000000b32d         db  0xb6 ; '.'
000000000000b32e         db  0xff ; '.'
000000000000b32f         db  0xff ; '.'
000000000000b330         db  0xe0 ; '.'
000000000000b331         db  0x11 ; '.'
000000000000b332         db  0x00 ; '.'
000000000000b333         db  0x00 ; '.'
000000000000b334         db  0x98 ; '.'
000000000000b335         db  0xb7 ; '.'
000000000000b336         db  0xff ; '.'
000000000000b337         db  0xff ; '.'
000000000000b338         db  0xfc ; '.'
000000000000b339         db  0x11 ; '.'
000000000000b33a         db  0x00 ; '.'
000000000000b33b         db  0x00 ; '.'
000000000000b33c         db  0x78 ; 'x'
000000000000b33d         db  0xc1 ; '.'
000000000000b33e         db  0xff ; '.'
000000000000b33f         db  0xff ; '.'
000000000000b340         db  0x4c ; 'L'
000000000000b341         db  0x12 ; '.'
000000000000b342         db  0x00 ; '.'
000000000000b343         db  0x00 ; '.'
000000000000b344         db  0x28 ; '('
000000000000b345         db  0xc5 ; '.'
000000000000b346         db  0xff ; '.'
000000000000b347         db  0xff ; '.'
000000000000b348         db  0x98 ; '.'
000000000000b349         db  0x12 ; '.'
000000000000b34a         db  0x00 ; '.'
000000000000b34b         db  0x00 ; '.'
000000000000b34c         db  0xb8 ; '.'
000000000000b34d         db  0xc6 ; '.'
000000000000b34e         db  0xff ; '.'
000000000000b34f         db  0xff ; '.'
000000000000b350         db  0xc8 ; '.'
000000000000b351         db  0x12 ; '.'
000000000000b352         db  0x00 ; '.'
000000000000b353         db  0x00 ; '.'
000000000000b354         db  0x38 ; '8'
000000000000b355         db  0xce ; '.'
000000000000b356         db  0xff ; '.'
000000000000b357         db  0xff ; '.'
000000000000b358         db  0x2c ; ','
000000000000b359         db  0x13 ; '.'
000000000000b35a         db  0x00 ; '.'
000000000000b35b         db  0x00 ; '.'
000000000000b35c         db  0x68 ; 'h'
000000000000b35d         db  0xce ; '.'
000000000000b35e         db  0xff ; '.'
000000000000b35f         db  0xff ; '.'
000000000000b360         db  0x44 ; 'D'
000000000000b361         db  0x13 ; '.'
000000000000b362         db  0x00 ; '.'
000000000000b363         db  0x00 ; '.'
000000000000b364         db  0xb8 ; '.'
000000000000b365         db  0xcf ; '.'
000000000000b366         db  0xff ; '.'
000000000000b367         db  0xff ; '.'
000000000000b368         db  0xa8 ; '.'
000000000000b369         db  0x13 ; '.'
000000000000b36a         db  0x00 ; '.'
000000000000b36b         db  0x00 ; '.'
000000000000b36c         db  0x48 ; 'H'
000000000000b36d         db  0xd0 ; '.'
000000000000b36e         db  0xff ; '.'
000000000000b36f         db  0xff ; '.'
000000000000b370         db  0xe8 ; '.'
000000000000b371         db  0x13 ; '.'
000000000000b372         db  0x00 ; '.'
000000000000b373         db  0x00 ; '.'
000000000000b374         db  0xc8 ; '.'
000000000000b375         db  0xd0 ; '.'
000000000000b376         db  0xff ; '.'
000000000000b377         db  0xff ; '.'
000000000000b378         db  0x38 ; '8'
000000000000b379         db  0x14 ; '.'
000000000000b37a         db  0x00 ; '.'
000000000000b37b         db  0x00 ; '.'
000000000000b37c         db  0xd8 ; '.'
000000000000b37d         db  0xd0 ; '.'
000000000000b37e         db  0xff ; '.'
000000000000b37f         db  0xff ; '.'
000000000000b380         db  0x4c ; 'L'
000000000000b381         db  0x14 ; '.'
000000000000b382         db  0x00 ; '.'
000000000000b383         db  0x00 ; '.'
000000000000b384         db  0x68 ; 'h'
000000000000b385         db  0xd1 ; '.'
000000000000b386         db  0xff ; '.'
000000000000b387         db  0xff ; '.'
000000000000b388         db  0x68 ; 'h'
000000000000b389         db  0x14 ; '.'
000000000000b38a         db  0x00 ; '.'
000000000000b38b         db  0x00 ; '.'
000000000000b38c         db  0xd8 ; '.'
000000000000b38d         db  0xd1 ; '.'
000000000000b38e         db  0xff ; '.'
000000000000b38f         db  0xff ; '.'
000000000000b390         db  0x88 ; '.'
000000000000b391         db  0x14 ; '.'
000000000000b392         db  0x00 ; '.'
000000000000b393         db  0x00 ; '.'
000000000000b394         db  0x38 ; '8'
000000000000b395         db  0xd2 ; '.'
000000000000b396         db  0xff ; '.'
000000000000b397         db  0xff ; '.'
000000000000b398         db  0xa8 ; '.'
000000000000b399         db  0x14 ; '.'
000000000000b39a         db  0x00 ; '.'
000000000000b39b         db  0x00 ; '.'
000000000000b39c         db  0xd8 ; '.'
000000000000b39d         db  0xd2 ; '.'
000000000000b39e         db  0xff ; '.'
000000000000b39f         db  0xff ; '.'
000000000000b3a0         db  0xbc ; '.'
000000000000b3a1         db  0x14 ; '.'
000000000000b3a2         db  0x00 ; '.'
000000000000b3a3         db  0x00 ; '.'
000000000000b3a4         db  0xe8 ; '.'
000000000000b3a5         db  0xd2 ; '.'
000000000000b3a6         db  0xff ; '.'
000000000000b3a7         db  0xff ; '.'
000000000000b3a8         db  0xd0 ; '.'
000000000000b3a9         db  0x14 ; '.'
000000000000b3aa         db  0x00 ; '.'
000000000000b3ab         db  0x00 ; '.'
000000000000b3ac         db  0xf8 ; '.'
000000000000b3ad         db  0xd2 ; '.'
000000000000b3ae         db  0xff ; '.'
000000000000b3af         db  0xff ; '.'
000000000000b3b0         db  0xe4 ; '.'
000000000000b3b1         db  0x14 ; '.'
000000000000b3b2         db  0x00 ; '.'
000000000000b3b3         db  0x00 ; '.'
000000000000b3b4         db  0x28 ; '('
000000000000b3b5         db  0xd3 ; '.'
000000000000b3b6         db  0xff ; '.'
000000000000b3b7         db  0xff ; '.'
000000000000b3b8         db  0x00 ; '.'
000000000000b3b9         db  0x15 ; '.'
000000000000b3ba         db  0x00 ; '.'
000000000000b3bb         db  0x00 ; '.'
000000000000b3bc         db  0x48 ; 'H'
000000000000b3bd         db  0xd4 ; '.'
000000000000b3be         db  0xff ; '.'
000000000000b3bf         db  0xff ; '.'
000000000000b3c0         db  0x60 ; '`'
000000000000b3c1         db  0x15 ; '.'
000000000000b3c2         db  0x00 ; '.'
000000000000b3c3         db  0x00 ; '.'
000000000000b3c4         db  0xc8 ; '.'
000000000000b3c5         db  0xd4 ; '.'
000000000000b3c6         db  0xff ; '.'
000000000000b3c7         db  0xff ; '.'
000000000000b3c8         db  0x74 ; 't'
000000000000b3c9         db  0x15 ; '.'
000000000000b3ca         db  0x00 ; '.'
000000000000b3cb         db  0x00 ; '.'
000000000000b3cc         db  0x08 ; '.'
000000000000b3cd         db  0xd6 ; '.'
000000000000b3ce         db  0xff ; '.'
000000000000b3cf         db  0xff ; '.'
000000000000b3d0         db  0xd4 ; '.'
000000000000b3d1         db  0x15 ; '.'
000000000000b3d2         db  0x00 ; '.'
000000000000b3d3         db  0x00 ; '.'
000000000000b3d4         db  0x18 ; '.'
000000000000b3d5         db  0xd6 ; '.'
000000000000b3d6         db  0xff ; '.'
000000000000b3d7         db  0xff ; '.'
000000000000b3d8         db  0xe8 ; '.'
000000000000b3d9         db  0x15 ; '.'
000000000000b3da         db  0x00 ; '.'
000000000000b3db         db  0x00 ; '.'
000000000000b3dc         db  0x28 ; '('
000000000000b3dd         db  0xd6 ; '.'
000000000000b3de         db  0xff ; '.'
000000000000b3df         db  0xff ; '.'
000000000000b3e0         db  0xfc ; '.'
000000000000b3e1         db  0x15 ; '.'
000000000000b3e2         db  0x00 ; '.'
000000000000b3e3         db  0x00 ; '.'
000000000000b3e4         db  0x38 ; '8'
000000000000b3e5         db  0xd6 ; '.'
000000000000b3e6         db  0xff ; '.'
000000000000b3e7         db  0xff ; '.'
000000000000b3e8         db  0x10 ; '.'
000000000000b3e9         db  0x16 ; '.'
000000000000b3ea         db  0x00 ; '.'
000000000000b3eb         db  0x00 ; '.'
000000000000b3ec         db  0x88 ; '.'
000000000000b3ed         db  0xd6 ; '.'
000000000000b3ee         db  0xff ; '.'
000000000000b3ef         db  0xff ; '.'
000000000000b3f0         db  0x24 ; '$'
000000000000b3f1         db  0x16 ; '.'
000000000000b3f2         db  0x00 ; '.'
000000000000b3f3         db  0x00 ; '.'
000000000000b3f4         db  0xe8 ; '.'
000000000000b3f5         db  0xd6 ; '.'
000000000000b3f6         db  0xff ; '.'
000000000000b3f7         db  0xff ; '.'
000000000000b3f8         db  0x38 ; '8'
000000000000b3f9         db  0x16 ; '.'
000000000000b3fa         db  0x00 ; '.'
000000000000b3fb         db  0x00 ; '.'
000000000000b3fc         db  0x38 ; '8'
000000000000b3fd         db  0xd8 ; '.'
000000000000b3fe         db  0xff ; '.'
000000000000b3ff         db  0xff ; '.'
000000000000b400         db  0x74 ; 't'
000000000000b401         db  0x16 ; '.'
000000000000b402         db  0x00 ; '.'
000000000000b403         db  0x00 ; '.'
000000000000b404         db  0x98 ; '.'
000000000000b405         db  0xd8 ; '.'
000000000000b406         db  0xff ; '.'
000000000000b407         db  0xff ; '.'
000000000000b408         db  0xac ; '.'
000000000000b409         db  0x16 ; '.'
000000000000b40a         db  0x00 ; '.'
000000000000b40b         db  0x00 ; '.'
000000000000b40c         db  0xe8 ; '.'
000000000000b40d         db  0xd8 ; '.'
000000000000b40e         db  0xff ; '.'
000000000000b40f         db  0xff ; '.'
000000000000b410         db  0xc0 ; '.'
000000000000b411         db  0x16 ; '.'
000000000000b412         db  0x00 ; '.'
000000000000b413         db  0x00 ; '.'
000000000000b414         db  0x68 ; 'h'
000000000000b415         db  0xd9 ; '.'
000000000000b416         db  0xff ; '.'
000000000000b417         db  0xff ; '.'
000000000000b418         db  0xf4 ; '.'
000000000000b419         db  0x16 ; '.'
000000000000b41a         db  0x00 ; '.'
000000000000b41b         db  0x00 ; '.'
000000000000b41c         db  0xd8 ; '.'
000000000000b41d         db  0xd9 ; '.'
000000000000b41e         db  0xff ; '.'
000000000000b41f         db  0xff ; '.'
000000000000b420         db  0x08 ; '.'
000000000000b421         db  0x17 ; '.'
000000000000b422         db  0x00 ; '.'
000000000000b423         db  0x00 ; '.'
000000000000b424         db  0x48 ; 'H'
000000000000b425         db  0xda ; '.'
000000000000b426         db  0xff ; '.'
000000000000b427         db  0xff ; '.'
000000000000b428         db  0x54 ; 'T'
000000000000b429         db  0x17 ; '.'
000000000000b42a         db  0x00 ; '.'
000000000000b42b         db  0x00 ; '.'
000000000000b42c         db  0x88 ; '.'
000000000000b42d         db  0xda ; '.'
000000000000b42e         db  0xff ; '.'
000000000000b42f         db  0xff ; '.'
000000000000b430         db  0x68 ; 'h'
000000000000b431         db  0x17 ; '.'
000000000000b432         db  0x00 ; '.'
000000000000b433         db  0x00 ; '.'
000000000000b434         db  0xa8 ; '.'
000000000000b435         db  0xda ; '.'
000000000000b436         db  0xff ; '.'
000000000000b437         db  0xff ; '.'
000000000000b438         db  0x7c ; '|'
000000000000b439         db  0x17 ; '.'
000000000000b43a         db  0x00 ; '.'
000000000000b43b         db  0x00 ; '.'
000000000000b43c         db  0x68 ; 'h'
000000000000b43d         db  0xdc ; '.'
000000000000b43e         db  0xff ; '.'
000000000000b43f         db  0xff ; '.'
000000000000b440         db  0xc8 ; '.'
000000000000b441         db  0x17 ; '.'
000000000000b442         db  0x00 ; '.'
000000000000b443         db  0x00 ; '.'
000000000000b444         db  0xf8 ; '.'
000000000000b445         db  0xdc ; '.'
000000000000b446         db  0xff ; '.'
000000000000b447         db  0xff ; '.'
000000000000b448         db  0xf4 ; '.'
000000000000b449         db  0x17 ; '.'
000000000000b44a         db  0x00 ; '.'
000000000000b44b         db  0x00 ; '.'
000000000000b44c         db  0xd8 ; '.'
000000000000b44d         db  0xdd ; '.'
000000000000b44e         db  0xff ; '.'
000000000000b44f         db  0xff ; '.'
000000000000b450         db  0x20 ; ' '
000000000000b451         db  0x18 ; '.'
000000000000b452         db  0x00 ; '.'
000000000000b453         db  0x00 ; '.'
000000000000b454         db  0x18 ; '.'
000000000000b455         db  0xe0 ; '.'
000000000000b456         db  0xff ; '.'
000000000000b457         db  0xff ; '.'
000000000000b458         db  0x58 ; 'X'
000000000000b459         db  0x18 ; '.'
000000000000b45a         db  0x00 ; '.'
000000000000b45b         db  0x00 ; '.'
000000000000b45c         db  0xa8 ; '.'
000000000000b45d         db  0xe2 ; '.'
000000000000b45e         db  0xff ; '.'
000000000000b45f         db  0xff ; '.'
000000000000b460         db  0x94 ; '.'
000000000000b461         db  0x18 ; '.'
000000000000b462         db  0x00 ; '.'
000000000000b463         db  0x00 ; '.'
000000000000b464         db  0x08 ; '.'
000000000000b465         db  0xe3 ; '.'
000000000000b466         db  0xff ; '.'
000000000000b467         db  0xff ; '.'
000000000000b468         db  0xb8 ; '.'
000000000000b469         db  0x18 ; '.'
000000000000b46a         db  0x00 ; '.'
000000000000b46b         db  0x00 ; '.'
000000000000b46c         db  0x18 ; '.'
000000000000b46d         db  0xe5 ; '.'
000000000000b46e         db  0xff ; '.'
000000000000b46f         db  0xff ; '.'
000000000000b470         db  0xf0 ; '.'
000000000000b471         db  0x18 ; '.'
000000000000b472         db  0x00 ; '.'
000000000000b473         db  0x00 ; '.'
000000000000b474         db  0x38 ; '8'
000000000000b475         db  0xe5 ; '.'
000000000000b476         db  0xff ; '.'
000000000000b477         db  0xff ; '.'
000000000000b478         db  0x04 ; '.'
000000000000b479         db  0x19 ; '.'
000000000000b47a         db  0x00 ; '.'
000000000000b47b         db  0x00 ; '.'
000000000000b47c         db  0x48 ; 'H'
000000000000b47d         db  0xe5 ; '.'
000000000000b47e         db  0xff ; '.'
000000000000b47f         db  0xff ; '.'
000000000000b480         db  0x18 ; '.'
000000000000b481         db  0x19 ; '.'
000000000000b482         db  0x00 ; '.'
000000000000b483         db  0x00 ; '.'
000000000000b484         db  0x88 ; '.'
000000000000b485         db  0xe5 ; '.'
000000000000b486         db  0xff ; '.'
000000000000b487         db  0xff ; '.'
000000000000b488         db  0x2c ; ','
000000000000b489         db  0x19 ; '.'
000000000000b48a         db  0x00 ; '.'
000000000000b48b         db  0x00 ; '.'
000000000000b48c         db  0xc8 ; '.'
000000000000b48d         db  0xe5 ; '.'
000000000000b48e         db  0xff ; '.'
000000000000b48f         db  0xff ; '.'
000000000000b490         db  0x40 ; '@'
000000000000b491         db  0x19 ; '.'
000000000000b492         db  0x00 ; '.'
000000000000b493         db  0x00 ; '.'
000000000000b494         db  0x08 ; '.'
000000000000b495         db  0xe6 ; '.'
000000000000b496         db  0xff ; '.'
000000000000b497         db  0xff ; '.'
000000000000b498         db  0x60 ; '`'
000000000000b499         db  0x19 ; '.'
000000000000b49a         db  0x00 ; '.'
000000000000b49b         db  0x00 ; '.'
000000000000b49c         db  0x78 ; 'x'
000000000000b49d         db  0xe6 ; '.'
000000000000b49e         db  0xff ; '.'
000000000000b49f         db  0xff ; '.'
000000000000b4a0         db  0x80 ; '.'
000000000000b4a1         db  0x19 ; '.'
000000000000b4a2         db  0x00 ; '.'
000000000000b4a3         db  0x00 ; '.'
000000000000b4a4         db  0xf8 ; '.'
000000000000b4a5         db  0xe6 ; '.'
000000000000b4a6         db  0xff ; '.'
000000000000b4a7         db  0xff ; '.'
000000000000b4a8         db  0xe0 ; '.'
000000000000b4a9         db  0x19 ; '.'
000000000000b4aa         db  0x00 ; '.'
000000000000b4ab         db  0x00 ; '.'
000000000000b4ac         db  0x38 ; '8'
000000000000b4ad         db  0xe7 ; '.'
000000000000b4ae         db  0xff ; '.'
000000000000b4af         db  0xff ; '.'
000000000000b4b0         db  0x18 ; '.'
000000000000b4b1         db  0x1a ; '.'
000000000000b4b2         db  0x00 ; '.'
000000000000b4b3         db  0x00 ; '.'
000000000000b4b4         db  0xb8 ; '.'
000000000000b4b5         db  0xe7 ; '.'
000000000000b4b6         db  0xff ; '.'
000000000000b4b7         db  0xff ; '.'
000000000000b4b8         db  0x50 ; 'P'
000000000000b4b9         db  0x1a ; '.'
000000000000b4ba         db  0x00 ; '.'
000000000000b4bb         db  0x00 ; '.'
000000000000b4bc         db  0x38 ; '8'
000000000000b4bd         db  0xea ; '.'
000000000000b4be         db  0xff ; '.'
000000000000b4bf         db  0xff ; '.'
000000000000b4c0         db  0x88 ; '.'
000000000000b4c1         db  0x1a ; '.'
000000000000b4c2         db  0x00 ; '.'
000000000000b4c3         db  0x00 ; '.'
000000000000b4c4         db  0x78 ; 'x'
000000000000b4c5         db  0xea ; '.'
000000000000b4c6         db  0xff ; '.'
000000000000b4c7         db  0xff ; '.'
000000000000b4c8         db  0xa8 ; '.'
000000000000b4c9         db  0x1a ; '.'
000000000000b4ca         db  0x00 ; '.'
000000000000b4cb         db  0x00 ; '.'
000000000000b4cc         db  0xd8 ; '.'
000000000000b4cd         db  0xea ; '.'
000000000000b4ce         db  0xff ; '.'
000000000000b4cf         db  0xff ; '.'
000000000000b4d0         db  0xd8 ; '.'
000000000000b4d1         db  0x1a ; '.'
000000000000b4d2         db  0x00 ; '.'
000000000000b4d3         db  0x00 ; '.'
000000000000b4d4         db  0xe8 ; '.'
000000000000b4d5         db  0xea ; '.'
000000000000b4d6         db  0xff ; '.'
000000000000b4d7         db  0xff ; '.'
000000000000b4d8         db  0xf0 ; '.'
000000000000b4d9         db  0x1a ; '.'
000000000000b4da         db  0x00 ; '.'
000000000000b4db         db  0x00 ; '.'
000000000000b4dc         db  0x58 ; 'X'
000000000000b4dd         db  0xeb ; '.'
000000000000b4de         db  0xff ; '.'
000000000000b4df         db  0xff ; '.'
000000000000b4e0         db  0x38 ; '8'
000000000000b4e1         db  0x1b ; '.'
000000000000b4e2         db  0x00 ; '.'
000000000000b4e3         db  0x00 ; '.'
000000000000b4e4         db  0x68 ; 'h'
000000000000b4e5         db  0xeb ; '.'
000000000000b4e6         db  0xff ; '.'
000000000000b4e7         db  0xff ; '.'
000000000000b4e8         db  0x50 ; 'P'
000000000000b4e9         db  0x1b ; '.'
000000000000b4ea         db  0x00 ; '.'
000000000000b4eb         db  0x00 ; '.'
000000000000b4ec         db  0x00 ; '.'
000000000000b4ed         db  0x00 ; '.'
000000000000b4ee         db  0x00 ; '.'
000000000000b4ef         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xb4f0; 0xcbd0[ (5856 bytes)
        ; File offset : [46320; 52176[ (5856 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b4f0         dd         0x00000014                                  ; Length of the record
000000000000b4f4         dd         0x00000000                                  ; CIE ID
000000000000b4f8         db         0x01                                        ; Version
000000000000b4f9         db         "zR", 0                                     ; Augmentation String
000000000000b4fc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b4fd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b4fe         db         0x10                                        ; Return address register
000000000000b4ff         db         0x01                                        ; Augmentation data length
000000000000b500         db         0x1b                                        ; FDE encoding
000000000000b501         db  0x0c ; '.'
000000000000b502         db  0x07 ; '.'
000000000000b503         db  0x08 ; '.'
000000000000b504         db  0x90 ; '.'
000000000000b505         db  0x01 ; '.'
000000000000b506         db  0x07 ; '.'
000000000000b507         db  0x10 ; '.'
000000000000b508         dd         0x00000014                                  ; Length of the record
000000000000b50c         dd         0x0000001c                                  ; FDE: parent CIE at 0xb4f0 (FDE encoding = 0x1B)
000000000000b510         db         0xd0, 0x72, 2 dup (0xff)                    ; begin 0x27e0
000000000000b514         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x280b)
000000000000b518         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b519         align      32
000000000000b520         dd         0x00000014                                  ; Length of the record
000000000000b524         dd         0x00000000                                  ; CIE ID
000000000000b528         db         0x01                                        ; Version
000000000000b529         db         "zR", 0                                     ; Augmentation String
000000000000b52c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b52d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b52e         db         0x10                                        ; Return address register
000000000000b52f         db         0x01                                        ; Augmentation data length
000000000000b530         db         0x1b                                        ; FDE encoding
000000000000b531         db  0x0c ; '.'
000000000000b532         db  0x07 ; '.'
000000000000b533         db  0x08 ; '.'
000000000000b534         db  0x90 ; '.'
000000000000b535         db  0x01 ; '.'
000000000000b536         db  0x00 ; '.'
000000000000b537         db  0x00 ; '.'
000000000000b538         dd         0x00000024                                  ; Length of the record
000000000000b53c         dd         0x0000001c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b540         db         0xa0, 0x61, 2 dup (0xff)                    ; begin 0x16e0
000000000000b544         db         0xb0, 0x03, 2 dup (0x00)                    ; length 0x3b0 (end at 0x1a90)
000000000000b548         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b549         db  0x0e ; '.'
000000000000b54a         db  0x10 ; '.'
000000000000b54b         db  0x46 ; 'F'
000000000000b54c         db  0x0e ; '.'
000000000000b54d         db  0x18 ; '.'
000000000000b54e         db  0x4a ; 'J'
000000000000b54f         db  0x0f ; '.'
000000000000b550         db  0x0b ; '.'
000000000000b551         db  0x77 ; 'w'
000000000000b552         db  0x08 ; '.'
000000000000b553         db  0x80 ; '.'
000000000000b554         db  0x00 ; '.'
000000000000b555         db  0x3f ; '?'
000000000000b556         db  0x1a ; '.'
000000000000b557         db  0x3b ; ';'
000000000000b558         db  0x2a ; '*'
000000000000b559         db  0x33 ; '3'
000000000000b55a         db  0x24 ; '$'
000000000000b55b         db  0x22 ; '"'
000000000000b55c         db  0x00 ; '.'
000000000000b55d         db  0x00 ; '.'
000000000000b55e         db  0x00 ; '.'
000000000000b55f         db  0x00 ; '.'
000000000000b560         dd         0x00000014                                  ; Length of the record
000000000000b564         dd         0x00000044                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b568         db         0x28, 0x65, 2 dup (0xff)                    ; begin 0x1a90
000000000000b56c         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x1aa0)
000000000000b570         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b571         align      8
000000000000b578         dd         0x00000028                                  ; Length of the record
000000000000b57c         dd         0x0000005c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b580         db         0x70, 0x73, 2 dup (0xff)                    ; begin 0x28f0
000000000000b584         db         0x02, 0x04, 2 dup (0x00)                    ; length 0x402 (end at 0x2cf2)
000000000000b588         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b589         db  0x42 ; 'B'
000000000000b58a         db  0x0e ; '.'
000000000000b58b         db  0x10 ; '.'
000000000000b58c         db  0x8d ; '.'
000000000000b58d         db  0x02 ; '.'
000000000000b58e         db  0x42 ; 'B'
000000000000b58f         db  0x0e ; '.'
000000000000b590         db  0x18 ; '.'
000000000000b591         db  0x8c ; '.'
000000000000b592         db  0x03 ; '.'
000000000000b593         db  0x46 ; 'F'
000000000000b594         db  0x0e ; '.'
000000000000b595         db  0x20 ; ' '
000000000000b596         db  0x86 ; '.'
000000000000b597         db  0x04 ; '.'
000000000000b598         db  0x41 ; 'A'
000000000000b599         db  0x0e ; '.'
000000000000b59a         db  0x28 ; '('
000000000000b59b         db  0x83 ; '.'
000000000000b59c         db  0x05 ; '.'
000000000000b59d         db  0x49 ; 'I'
000000000000b59e         db  0x0e ; '.'
000000000000b59f         db  0xb0 ; '.'
000000000000b5a0         db  0x01 ; '.'
000000000000b5a1         db  0x00 ; '.'
000000000000b5a2         db  0x00 ; '.'
000000000000b5a3         db  0x00 ; '.'
000000000000b5a4         dd         0x00000080                                  ; Length of the record
000000000000b5a8         dd         0x00000088                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b5ac         db         0xf4, 0x64, 2 dup (0xff)                    ; begin 0x1aa0
000000000000b5b0         db         0x36, 0x0d, 2 dup (0x00)                    ; length 0xd36 (end at 0x27d6)
000000000000b5b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b5b5         db  0x42 ; 'B'
000000000000b5b6         db  0x0e ; '.'
000000000000b5b7         db  0x10 ; '.'
000000000000b5b8         db  0x8f ; '.'
000000000000b5b9         db  0x02 ; '.'
000000000000b5ba         db  0x42 ; 'B'
000000000000b5bb         db  0x0e ; '.'
000000000000b5bc         db  0x18 ; '.'
000000000000b5bd         db  0x8e ; '.'
000000000000b5be         db  0x03 ; '.'
000000000000b5bf         db  0x45 ; 'E'
000000000000b5c0         db  0x0e ; '.'
000000000000b5c1         db  0x20 ; ' '
000000000000b5c2         db  0x8d ; '.'
000000000000b5c3         db  0x04 ; '.'
000000000000b5c4         db  0x42 ; 'B'
000000000000b5c5         db  0x0e ; '.'
000000000000b5c6         db  0x28 ; '('
000000000000b5c7         db  0x8c ; '.'
000000000000b5c8         db  0x05 ; '.'
000000000000b5c9         db  0x44 ; 'D'
000000000000b5ca         db  0x0e ; '.'
000000000000b5cb         db  0x30 ; '0'
000000000000b5cc         db  0x86 ; '.'
000000000000b5cd         db  0x06 ; '.'
000000000000b5ce         db  0x41 ; 'A'
000000000000b5cf         db  0x0e ; '.'
000000000000b5d0         db  0x38 ; '8'
000000000000b5d1         db  0x83 ; '.'
000000000000b5d2         db  0x07 ; '.'
000000000000b5d3         db  0x53 ; 'S'
000000000000b5d4         db  0x0e ; '.'
000000000000b5d5         db  0xb0 ; '.'
000000000000b5d6         db  0x02 ; '.'
000000000000b5d7         db  0x03 ; '.'
000000000000b5d8         db  0x2f ; '/'
000000000000b5d9         db  0x01 ; '.'
000000000000b5da         db  0x0a ; '.'
000000000000b5db         db  0x0e ; '.'
000000000000b5dc         db  0xb8 ; '.'
000000000000b5dd         db  0x02 ; '.'
000000000000b5de         db  0x50 ; 'P'
000000000000b5df         db  0x0e ; '.'
000000000000b5e0         db  0xc0 ; '.'
000000000000b5e1         db  0x02 ; '.'
000000000000b5e2         db  0x6e ; 'n'
000000000000b5e3         db  0x0b ; '.'
000000000000b5e4         db  0x03 ; '.'
000000000000b5e5         db  0x9e ; '.'
000000000000b5e6         db  0x02 ; '.'
000000000000b5e7         db  0x0a ; '.'
000000000000b5e8         db  0x0e ; '.'
000000000000b5e9         db  0x38 ; '8'
000000000000b5ea         db  0x41 ; 'A'
000000000000b5eb         db  0x0e ; '.'
000000000000b5ec         db  0x30 ; '0'
000000000000b5ed         db  0x41 ; 'A'
000000000000b5ee         db  0x0e ; '.'
000000000000b5ef         db  0x28 ; '('
000000000000b5f0         db  0x42 ; 'B'
000000000000b5f1         db  0x0e ; '.'
000000000000b5f2         db  0x20 ; ' '
000000000000b5f3         db  0x42 ; 'B'
000000000000b5f4         db  0x0e ; '.'
000000000000b5f5         db  0x18 ; '.'
000000000000b5f6         db  0x42 ; 'B'
000000000000b5f7         db  0x0e ; '.'
000000000000b5f8         db  0x10 ; '.'
000000000000b5f9         db  0x42 ; 'B'
000000000000b5fa         db  0x0e ; '.'
000000000000b5fb         db  0x08 ; '.'
000000000000b5fc         db  0x41 ; 'A'
000000000000b5fd         db  0x0b ; '.'
000000000000b5fe         db  0x03 ; '.'
000000000000b5ff         db  0xac ; '.'
000000000000b600         db  0x02 ; '.'
000000000000b601         db  0x0e ; '.'
000000000000b602         db  0xb8 ; '.'
000000000000b603         db  0x02 ; '.'
000000000000b604         db  0x5b ; '['
000000000000b605         db  0x0e ; '.'
000000000000b606         db  0xc0 ; '.'
000000000000b607         db  0x02 ; '.'
000000000000b608         db  0x5c ; '\'
000000000000b609         db  0x0e ; '.'
000000000000b60a         db  0xb8 ; '.'
000000000000b60b         db  0x02 ; '.'
000000000000b60c         db  0x41 ; 'A'
000000000000b60d         db  0x0e ; '.'
000000000000b60e         db  0xb0 ; '.'
000000000000b60f         db  0x02 ; '.'
000000000000b610         db  0x02 ; '.'
000000000000b611         db  0xdf ; '.'
000000000000b612         db  0x0e ; '.'
000000000000b613         db  0xb8 ; '.'
000000000000b614         db  0x02 ; '.'
000000000000b615         db  0x58 ; 'X'
000000000000b616         db  0x0e ; '.'
000000000000b617         db  0xc0 ; '.'
000000000000b618         db  0x02 ; '.'
000000000000b619         db  0x5c ; '\'
000000000000b61a         db  0x0e ; '.'
000000000000b61b         db  0xb8 ; '.'
000000000000b61c         db  0x02 ; '.'
000000000000b61d         db  0x41 ; 'A'
000000000000b61e         db  0x0e ; '.'
000000000000b61f         db  0xb0 ; '.'
000000000000b620         db  0x02 ; '.'
000000000000b621         db  0x00 ; '.'
000000000000b622         db  0x00 ; '.'
000000000000b623         db  0x00 ; '.'
000000000000b624         db  0x00 ; '.'
000000000000b625         db  0x00 ; '.'
000000000000b626         db  0x00 ; '.'
000000000000b627         db  0x00 ; '.'
000000000000b628         dd         0x00000010                                  ; Length of the record
000000000000b62c         dd         0x0000010c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b630         db         0xd0, 0x76, 2 dup (0xff)                    ; begin 0x2d00
000000000000b634         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2d08)
000000000000b638         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b639         align      4
000000000000b63c         dd         0x00000010                                  ; Length of the record
000000000000b640         dd         0x00000120                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b644         db         0xcc, 0x76, 2 dup (0xff)                    ; begin 0x2d10
000000000000b648         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2d18)
000000000000b64c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b64d         align      16
000000000000b650         dd         0x0000002c                                  ; Length of the record
000000000000b654         dd         0x00000134                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b658         db         0xc8, 0x76, 2 dup (0xff)                    ; begin 0x2d20
000000000000b65c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2dc4)
000000000000b660         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b661         db  0x41 ; 'A'
000000000000b662         db  0x0e ; '.'
000000000000b663         db  0x10 ; '.'
000000000000b664         db  0x86 ; '.'
000000000000b665         db  0x02 ; '.'
000000000000b666         db  0x41 ; 'A'
000000000000b667         db  0x0e ; '.'
000000000000b668         db  0x18 ; '.'
000000000000b669         db  0x83 ; '.'
000000000000b66a         db  0x03 ; '.'
000000000000b66b         db  0x44 ; 'D'
000000000000b66c         db  0x0e ; '.'
000000000000b66d         db  0x20 ; ' '
000000000000b66e         db  0x7a ; 'z'
000000000000b66f         db  0x0a ; '.'
000000000000b670         db  0x0e ; '.'
000000000000b671         db  0x18 ; '.'
000000000000b672         db  0x41 ; 'A'
000000000000b673         db  0x0e ; '.'
000000000000b674         db  0x10 ; '.'
000000000000b675         db  0x41 ; 'A'
000000000000b676         db  0x0e ; '.'
000000000000b677         db  0x08 ; '.'
000000000000b678         db  0x41 ; 'A'
000000000000b679         db  0x0b ; '.'
000000000000b67a         db  0x00 ; '.'
000000000000b67b         db  0x00 ; '.'
000000000000b67c         db  0x00 ; '.'
000000000000b67d         db  0x00 ; '.'
000000000000b67e         db  0x00 ; '.'
000000000000b67f         db  0x00 ; '.'
000000000000b680         dd         0x00000010                                  ; Length of the record
000000000000b684         dd         0x00000164                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b688         db         0x48, 0x77, 2 dup (0xff)                    ; begin 0x2dd0
000000000000b68c         db         0x83, 0x01, 2 dup (0x00)                    ; length 0x183 (end at 0x2f53)
000000000000b690         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b691         align      4
000000000000b694         dd         0x00000010                                  ; Length of the record
000000000000b698         dd         0x00000178                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b69c         db         0xc4, 0x78, 2 dup (0xff)                    ; begin 0x2f60
000000000000b6a0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2f68)
000000000000b6a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b6a5         align      8
000000000000b6a8         dd         0x00000044                                  ; Length of the record
000000000000b6ac         dd         0x0000018c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b6b0         db         0xc0, 0x78, 2 dup (0xff)                    ; begin 0x2f70
000000000000b6b4         db         0xa9, 0x03, 2 dup (0x00)                    ; length 0x3a9 (end at 0x3319)
000000000000b6b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b6b9         db  0x41 ; 'A'
000000000000b6ba         db  0x0e ; '.'
000000000000b6bb         db  0x10 ; '.'
000000000000b6bc         db  0x86 ; '.'
000000000000b6bd         db  0x02 ; '.'
000000000000b6be         db  0x41 ; 'A'
000000000000b6bf         db  0x0e ; '.'
000000000000b6c0         db  0x18 ; '.'
000000000000b6c1         db  0x83 ; '.'
000000000000b6c2         db  0x03 ; '.'
000000000000b6c3         db  0x47 ; 'G'
000000000000b6c4         db  0x0e ; '.'
000000000000b6c5         db  0x20 ; ' '
000000000000b6c6         db  0x02 ; '.'
000000000000b6c7         db  0xb8 ; '.'
000000000000b6c8         db  0x0a ; '.'
000000000000b6c9         db  0x0e ; '.'
000000000000b6ca         db  0x18 ; '.'
000000000000b6cb         db  0x41 ; 'A'
000000000000b6cc         db  0x0e ; '.'
000000000000b6cd         db  0x10 ; '.'
000000000000b6ce         db  0x41 ; 'A'
000000000000b6cf         db  0x0e ; '.'
000000000000b6d0         db  0x08 ; '.'
000000000000b6d1         db  0x45 ; 'E'
000000000000b6d2         db  0x0b ; '.'
000000000000b6d3         db  0x6b ; 'k'
000000000000b6d4         db  0x0a ; '.'
000000000000b6d5         db  0x0e ; '.'
000000000000b6d6         db  0x18 ; '.'
000000000000b6d7         db  0x43 ; 'C'
000000000000b6d8         db  0x0e ; '.'
000000000000b6d9         db  0x10 ; '.'
000000000000b6da         db  0x41 ; 'A'
000000000000b6db         db  0x0e ; '.'
000000000000b6dc         db  0x08 ; '.'
000000000000b6dd         db  0x49 ; 'I'
000000000000b6de         db  0x0b ; '.'
000000000000b6df         db  0x03 ; '.'
000000000000b6e0         db  0x6c ; 'l'
000000000000b6e1         db  0x02 ; '.'
000000000000b6e2         db  0x0a ; '.'
000000000000b6e3         db  0x0e ; '.'
000000000000b6e4         db  0x18 ; '.'
000000000000b6e5         db  0x41 ; 'A'
000000000000b6e6         db  0x0e ; '.'
000000000000b6e7         db  0x10 ; '.'
000000000000b6e8         db  0x41 ; 'A'
000000000000b6e9         db  0x0e ; '.'
000000000000b6ea         db  0x08 ; '.'
000000000000b6eb         db  0x41 ; 'A'
000000000000b6ec         db  0x0b ; '.'
000000000000b6ed         db  0x00 ; '.'
000000000000b6ee         db  0x00 ; '.'
000000000000b6ef         db  0x00 ; '.'
000000000000b6f0         dd         0x00000020                                  ; Length of the record
000000000000b6f4         dd         0x000001d4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b6f8         db         0x28, 0x7c, 2 dup (0xff)                    ; begin 0x3320
000000000000b6fc         db         0x89, 3 dup (0x00)                          ; length 0x89 (end at 0x33a9)
000000000000b700         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b701         db  0x41 ; 'A'
000000000000b702         db  0x0e ; '.'
000000000000b703         db  0x10 ; '.'
000000000000b704         db  0x83 ; '.'
000000000000b705         db  0x02 ; '.'
000000000000b706         db  0x4f ; 'O'
000000000000b707         db  0x0e ; '.'
000000000000b708         db  0xb0 ; '.'
000000000000b709         db  0x01 ; '.'
000000000000b70a         db  0x02 ; '.'
000000000000b70b         db  0x64 ; 'd'
000000000000b70c         db  0x0a ; '.'
000000000000b70d         db  0x0e ; '.'
000000000000b70e         db  0x10 ; '.'
000000000000b70f         db  0x41 ; 'A'
000000000000b710         db  0x0e ; '.'
000000000000b711         db  0x08 ; '.'
000000000000b712         db  0x4b ; 'K'
000000000000b713         db  0x0b ; '.'
000000000000b714         dd         0x00000030                                  ; Length of the record
000000000000b718         dd         0x000001f8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b71c         db         0x94, 0x7c, 2 dup (0xff)                    ; begin 0x33b0
000000000000b720         db         0x6d, 0x01, 2 dup (0x00)                    ; length 0x16d (end at 0x351d)
000000000000b724         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b725         db  0x5b ; '['
000000000000b726         db  0x0e ; '.'
000000000000b727         db  0x10 ; '.'
000000000000b728         db  0x8c ; '.'
000000000000b729         db  0x02 ; '.'
000000000000b72a         db  0x41 ; 'A'
000000000000b72b         db  0x0e ; '.'
000000000000b72c         db  0x18 ; '.'
000000000000b72d         db  0x86 ; '.'
000000000000b72e         db  0x03 ; '.'
000000000000b72f         db  0x41 ; 'A'
000000000000b730         db  0x0e ; '.'
000000000000b731         db  0x20 ; ' '
000000000000b732         db  0x83 ; '.'
000000000000b733         db  0x04 ; '.'
000000000000b734         db  0x03 ; '.'
000000000000b735         db  0x08 ; '.'
000000000000b736         db  0x01 ; '.'
000000000000b737         db  0x0a ; '.'
000000000000b738         db  0x0e ; '.'
000000000000b739         db  0x18 ; '.'
000000000000b73a         db  0x41 ; 'A'
000000000000b73b         db  0x0e ; '.'
000000000000b73c         db  0x10 ; '.'
000000000000b73d         db  0x42 ; 'B'
000000000000b73e         db  0x0e ; '.'
000000000000b73f         db  0x08 ; '.'
000000000000b740         db  0x48 ; 'H'
000000000000b741         db  0x0b ; '.'
000000000000b742         db  0x70 ; 'p'
000000000000b743         db  0x0e ; '.'
000000000000b744         db  0x08 ; '.'
000000000000b745         db  0xc3 ; '.'
000000000000b746         db  0xc6 ; '.'
000000000000b747         db  0xcc ; '.'
000000000000b748         dd         0x0000001c                                  ; Length of the record
000000000000b74c         dd         0x0000022c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b750         db         0xd0, 0x7d, 2 dup (0xff)                    ; begin 0x3520
000000000000b754         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x35bf)
000000000000b758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b759         db  0x44 ; 'D'
000000000000b75a         db  0x0e ; '.'
000000000000b75b         db  0x10 ; '.'
000000000000b75c         db  0x83 ; '.'
000000000000b75d         db  0x02 ; '.'
000000000000b75e         db  0x02 ; '.'
000000000000b75f         db  0x78 ; 'x'
000000000000b760         db  0x0a ; '.'
000000000000b761         db  0x0e ; '.'
000000000000b762         db  0x08 ; '.'
000000000000b763         db  0x41 ; 'A'
000000000000b764         db  0x0b ; '.'
000000000000b765         db  0x00 ; '.'
000000000000b766         db  0x00 ; '.'
000000000000b767         db  0x00 ; '.'
000000000000b768         dd         0x00000040                                  ; Length of the record
000000000000b76c         dd         0x0000024c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b770         db         0x50, 0x7e, 2 dup (0xff)                    ; begin 0x35c0
000000000000b774         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x36a7)
000000000000b778         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b779         db  0x41 ; 'A'
000000000000b77a         db  0x0e ; '.'
000000000000b77b         db  0x10 ; '.'
000000000000b77c         db  0x86 ; '.'
000000000000b77d         db  0x02 ; '.'
000000000000b77e         db  0x41 ; 'A'
000000000000b77f         db  0x0e ; '.'
000000000000b780         db  0x18 ; '.'
000000000000b781         db  0x83 ; '.'
000000000000b782         db  0x03 ; '.'
000000000000b783         db  0x49 ; 'I'
000000000000b784         db  0x0e ; '.'
000000000000b785         db  0x20 ; ' '
000000000000b786         db  0x6e ; 'n'
000000000000b787         db  0x0a ; '.'
000000000000b788         db  0x0e ; '.'
000000000000b789         db  0x18 ; '.'
000000000000b78a         db  0x41 ; 'A'
000000000000b78b         db  0x0e ; '.'
000000000000b78c         db  0x10 ; '.'
000000000000b78d         db  0x41 ; 'A'
000000000000b78e         db  0x0e ; '.'
000000000000b78f         db  0x08 ; '.'
000000000000b790         db  0x45 ; 'E'
000000000000b791         db  0x0b ; '.'
000000000000b792         db  0x02 ; '.'
000000000000b793         db  0x4a ; 'J'
000000000000b794         db  0x0a ; '.'
000000000000b795         db  0x0e ; '.'
000000000000b796         db  0x18 ; '.'
000000000000b797         db  0x41 ; 'A'
000000000000b798         db  0x0e ; '.'
000000000000b799         db  0x10 ; '.'
000000000000b79a         db  0x41 ; 'A'
000000000000b79b         db  0x0e ; '.'
000000000000b79c         db  0x08 ; '.'
000000000000b79d         db  0x44 ; 'D'
000000000000b79e         db  0x0b ; '.'
000000000000b79f         db  0x02 ; '.'
000000000000b7a0         db  0x54 ; 'T'
000000000000b7a1         db  0x0e ; '.'
000000000000b7a2         db  0x18 ; '.'
000000000000b7a3         db  0x41 ; 'A'
000000000000b7a4         db  0x0e ; '.'
000000000000b7a5         db  0x10 ; '.'
000000000000b7a6         db  0x41 ; 'A'
000000000000b7a7         db  0x0e ; '.'
000000000000b7a8         db  0x08 ; '.'
000000000000b7a9         db  0x00 ; '.'
000000000000b7aa         db  0x00 ; '.'
000000000000b7ab         db  0x00 ; '.'
000000000000b7ac         dd         0x00000074                                  ; Length of the record
000000000000b7b0         dd         0x00000290                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b7b4         db         0xfc, 0x7e, 2 dup (0xff)                    ; begin 0x36b0
000000000000b7b8         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x48e4)
000000000000b7bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b7bd         db  0x42 ; 'B'
000000000000b7be         db  0x0e ; '.'
000000000000b7bf         db  0x10 ; '.'
000000000000b7c0         db  0x8f ; '.'
000000000000b7c1         db  0x02 ; '.'
000000000000b7c2         db  0x42 ; 'B'
000000000000b7c3         db  0x0e ; '.'
000000000000b7c4         db  0x18 ; '.'
000000000000b7c5         db  0x8e ; '.'
000000000000b7c6         db  0x03 ; '.'
000000000000b7c7         db  0x45 ; 'E'
000000000000b7c8         db  0x0e ; '.'
000000000000b7c9         db  0x20 ; ' '
000000000000b7ca         db  0x8d ; '.'
000000000000b7cb         db  0x04 ; '.'
000000000000b7cc         db  0x42 ; 'B'
000000000000b7cd         db  0x0e ; '.'
000000000000b7ce         db  0x28 ; '('
000000000000b7cf         db  0x8c ; '.'
000000000000b7d0         db  0x05 ; '.'
000000000000b7d1         db  0x44 ; 'D'
000000000000b7d2         db  0x0e ; '.'
000000000000b7d3         db  0x30 ; '0'
000000000000b7d4         db  0x86 ; '.'
000000000000b7d5         db  0x06 ; '.'
000000000000b7d6         db  0x41 ; 'A'
000000000000b7d7         db  0x0e ; '.'
000000000000b7d8         db  0x38 ; '8'
000000000000b7d9         db  0x83 ; '.'
000000000000b7da         db  0x07 ; '.'
000000000000b7db         db  0x53 ; 'S'
000000000000b7dc         db  0x0e ; '.'
000000000000b7dd         db  0xf0 ; '.'
000000000000b7de         db  0x01 ; '.'
000000000000b7df         db  0x03 ; '.'
000000000000b7e0         db  0x81 ; '.'
000000000000b7e1         db  0x0b ; '.'
000000000000b7e2         db  0x0e ; '.'
000000000000b7e3         db  0xf8 ; '.'
000000000000b7e4         db  0x01 ; '.'
000000000000b7e5         db  0x4a ; 'J'
000000000000b7e6         db  0x0e ; '.'
000000000000b7e7         db  0x80 ; '.'
000000000000b7e8         db  0x02 ; '.'
000000000000b7e9         db  0x44 ; 'D'
000000000000b7ea         db  0x0e ; '.'
000000000000b7eb         db  0x88 ; '.'
000000000000b7ec         db  0x02 ; '.'
000000000000b7ed         db  0x45 ; 'E'
000000000000b7ee         db  0x0e ; '.'
000000000000b7ef         db  0x90 ; '.'
000000000000b7f0         db  0x02 ; '.'
000000000000b7f1         db  0x5f ; '_'
000000000000b7f2         db  0x0e ; '.'
000000000000b7f3         db  0xf0 ; '.'
000000000000b7f4         db  0x01 ; '.'
000000000000b7f5         db  0x64 ; 'd'
000000000000b7f6         db  0x0a ; '.'
000000000000b7f7         db  0x0e ; '.'
000000000000b7f8         db  0x38 ; '8'
000000000000b7f9         db  0x41 ; 'A'
000000000000b7fa         db  0x0e ; '.'
000000000000b7fb         db  0x30 ; '0'
000000000000b7fc         db  0x41 ; 'A'
000000000000b7fd         db  0x0e ; '.'
000000000000b7fe         db  0x28 ; '('
000000000000b7ff         db  0x42 ; 'B'
000000000000b800         db  0x0e ; '.'
000000000000b801         db  0x20 ; ' '
000000000000b802         db  0x42 ; 'B'
000000000000b803         db  0x0e ; '.'
000000000000b804         db  0x18 ; '.'
000000000000b805         db  0x42 ; 'B'
000000000000b806         db  0x0e ; '.'
000000000000b807         db  0x10 ; '.'
000000000000b808         db  0x42 ; 'B'
000000000000b809         db  0x0e ; '.'
000000000000b80a         db  0x08 ; '.'
000000000000b80b         db  0x44 ; 'D'
000000000000b80c         db  0x0b ; '.'
000000000000b80d         db  0x03 ; '.'
000000000000b80e         db  0x99 ; '.'
000000000000b80f         db  0x05 ; '.'
000000000000b810         db  0x0e ; '.'
000000000000b811         db  0xf8 ; '.'
000000000000b812         db  0x01 ; '.'
000000000000b813         db  0x4d ; 'M'
000000000000b814         db  0x0e ; '.'
000000000000b815         db  0x80 ; '.'
000000000000b816         db  0x02 ; '.'
000000000000b817         db  0x44 ; 'D'
000000000000b818         db  0x0e ; '.'
000000000000b819         db  0x88 ; '.'
000000000000b81a         db  0x02 ; '.'
000000000000b81b         db  0x47 ; 'G'
000000000000b81c         db  0x0e ; '.'
000000000000b81d         db  0x90 ; '.'
000000000000b81e         db  0x02 ; '.'
000000000000b81f         db  0x5b ; '['
000000000000b820         db  0x0e ; '.'
000000000000b821         db  0xf0 ; '.'
000000000000b822         db  0x01 ; '.'
000000000000b823         db  0x00 ; '.'
000000000000b824         dd         0x00000068                                  ; Length of the record
000000000000b828         dd         0x00000308                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b82c         db         0xc4, 0x90, 2 dup (0xff)                    ; begin 0x48f0
000000000000b830         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4a9b)
000000000000b834         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b835         db  0x42 ; 'B'
000000000000b836         db  0x0e ; '.'
000000000000b837         db  0x10 ; '.'
000000000000b838         db  0x8f ; '.'
000000000000b839         db  0x02 ; '.'
000000000000b83a         db  0x42 ; 'B'
000000000000b83b         db  0x0e ; '.'
000000000000b83c         db  0x18 ; '.'
000000000000b83d         db  0x8e ; '.'
000000000000b83e         db  0x03 ; '.'
000000000000b83f         db  0x45 ; 'E'
000000000000b840         db  0x0e ; '.'
000000000000b841         db  0x20 ; ' '
000000000000b842         db  0x8d ; '.'
000000000000b843         db  0x04 ; '.'
000000000000b844         db  0x42 ; 'B'
000000000000b845         db  0x0e ; '.'
000000000000b846         db  0x28 ; '('
000000000000b847         db  0x8c ; '.'
000000000000b848         db  0x05 ; '.'
000000000000b849         db  0x44 ; 'D'
000000000000b84a         db  0x0e ; '.'
000000000000b84b         db  0x30 ; '0'
000000000000b84c         db  0x86 ; '.'
000000000000b84d         db  0x06 ; '.'
000000000000b84e         db  0x41 ; 'A'
000000000000b84f         db  0x0e ; '.'
000000000000b850         db  0x38 ; '8'
000000000000b851         db  0x83 ; '.'
000000000000b852         db  0x07 ; '.'
000000000000b853         db  0x47 ; 'G'
000000000000b854         db  0x0e ; '.'
000000000000b855         db  0x60 ; '`'
000000000000b856         db  0x02 ; '.'
000000000000b857         db  0x99 ; '.'
000000000000b858         db  0x0e ; '.'
000000000000b859         db  0x68 ; 'h'
000000000000b85a         db  0x5f ; '_'
000000000000b85b         db  0x0e ; '.'
000000000000b85c         db  0x70 ; 'p'
000000000000b85d         db  0x46 ; 'F'
000000000000b85e         db  0x0e ; '.'
000000000000b85f         db  0x78 ; 'x'
000000000000b860         db  0x42 ; 'B'
000000000000b861         db  0x0e ; '.'
000000000000b862         db  0x80 ; '.'
000000000000b863         db  0x01 ; '.'
000000000000b864         db  0x59 ; 'Y'
000000000000b865         db  0x0e ; '.'
000000000000b866         db  0x60 ; '`'
000000000000b867         db  0x02 ; '.'
000000000000b868         db  0x40 ; '@'
000000000000b869         db  0x0e ; '.'
000000000000b86a         db  0x68 ; 'h'
000000000000b86b         db  0x4b ; 'K'
000000000000b86c         db  0x0e ; '.'
000000000000b86d         db  0x70 ; 'p'
000000000000b86e         db  0x43 ; 'C'
000000000000b86f         db  0x0e ; '.'
000000000000b870         db  0x78 ; 'x'
000000000000b871         db  0x45 ; 'E'
000000000000b872         db  0x0e ; '.'
000000000000b873         db  0x80 ; '.'
000000000000b874         db  0x01 ; '.'
000000000000b875         db  0x5e ; '^'
000000000000b876         db  0x0e ; '.'
000000000000b877         db  0x60 ; '`'
000000000000b878         db  0x4c ; 'L'
000000000000b879         db  0x0a ; '.'
000000000000b87a         db  0x0e ; '.'
000000000000b87b         db  0x38 ; '8'
000000000000b87c         db  0x44 ; 'D'
000000000000b87d         db  0x0e ; '.'
000000000000b87e         db  0x30 ; '0'
000000000000b87f         db  0x41 ; 'A'
000000000000b880         db  0x0e ; '.'
000000000000b881         db  0x28 ; '('
000000000000b882         db  0x42 ; 'B'
000000000000b883         db  0x0e ; '.'
000000000000b884         db  0x20 ; ' '
000000000000b885         db  0x42 ; 'B'
000000000000b886         db  0x0e ; '.'
000000000000b887         db  0x18 ; '.'
000000000000b888         db  0x42 ; 'B'
000000000000b889         db  0x0e ; '.'
000000000000b88a         db  0x10 ; '.'
000000000000b88b         db  0x42 ; 'B'
000000000000b88c         db  0x0e ; '.'
000000000000b88d         db  0x08 ; '.'
000000000000b88e         db  0x46 ; 'F'
000000000000b88f         db  0x0b ; '.'
000000000000b890         dd         0x00000028                                  ; Length of the record
000000000000b894         dd         0x00000374                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b898         db         0x08, 0x92, 2 dup (0xff)                    ; begin 0x4aa0
000000000000b89c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4ad6)
000000000000b8a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8a1         db  0x42 ; 'B'
000000000000b8a2         db  0x0e ; '.'
000000000000b8a3         db  0x10 ; '.'
000000000000b8a4         db  0x8c ; '.'
000000000000b8a5         db  0x02 ; '.'
000000000000b8a6         db  0x41 ; 'A'
000000000000b8a7         db  0x0e ; '.'
000000000000b8a8         db  0x18 ; '.'
000000000000b8a9         db  0x86 ; '.'
000000000000b8aa         db  0x03 ; '.'
000000000000b8ab         db  0x41 ; 'A'
000000000000b8ac         db  0x0e ; '.'
000000000000b8ad         db  0x20 ; ' '
000000000000b8ae         db  0x83 ; '.'
000000000000b8af         db  0x04 ; '.'
000000000000b8b0         db  0x6e ; 'n'
000000000000b8b1         db  0x0e ; '.'
000000000000b8b2         db  0x18 ; '.'
000000000000b8b3         db  0x41 ; 'A'
000000000000b8b4         db  0x0e ; '.'
000000000000b8b5         db  0x10 ; '.'
000000000000b8b6         db  0x42 ; 'B'
000000000000b8b7         db  0x0e ; '.'
000000000000b8b8         db  0x08 ; '.'
000000000000b8b9         db  0x00 ; '.'
000000000000b8ba         db  0x00 ; '.'
000000000000b8bb         db  0x00 ; '.'
000000000000b8bc         dd         0x00000010                                  ; Length of the record
000000000000b8c0         dd         0x000003a0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b8c4         db         0x1c, 0x92, 2 dup (0xff)                    ; begin 0x4ae0
000000000000b8c8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4af1)
000000000000b8cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8cd         align      16
000000000000b8d0         dd         0x00000010                                  ; Length of the record
000000000000b8d4         dd         0x000003b4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b8d8         db         0x28, 0x92, 2 dup (0xff)                    ; begin 0x4b00
000000000000b8dc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4b11)
000000000000b8e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8e1         align      4
000000000000b8e4         dd         0x00000010                                  ; Length of the record
000000000000b8e8         dd         0x000003c8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b8ec         db         0x34, 0x92, 2 dup (0xff)                    ; begin 0x4b20
000000000000b8f0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4b55)
000000000000b8f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8f5         align      8
000000000000b8f8         dd         0x00000010                                  ; Length of the record
000000000000b8fc         dd         0x000003dc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b900         db         0x60, 0x92, 2 dup (0xff)                    ; begin 0x4b60
000000000000b904         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4b75)
000000000000b908         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b909         align      4
000000000000b90c         dd         0x00000010                                  ; Length of the record
000000000000b910         dd         0x000003f0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b914         db         0x6c, 0x92, 2 dup (0xff)                    ; begin 0x4b80
000000000000b918         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4bb0)
000000000000b91c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b91d         db  0x6b ; 'k'
000000000000b91e         db  0x0e ; '.'
000000000000b91f         db  0x10 ; '.'
000000000000b920         dd         0x00000050                                  ; Length of the record
000000000000b924         dd         0x00000404                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b928         db         0x88, 0x92, 2 dup (0xff)                    ; begin 0x4bb0
000000000000b92c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4c24)
000000000000b930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b931         db  0x42 ; 'B'
000000000000b932         db  0x0e ; '.'
000000000000b933         db  0x10 ; '.'
000000000000b934         db  0x8f ; '.'
000000000000b935         db  0x02 ; '.'
000000000000b936         db  0x42 ; 'B'
000000000000b937         db  0x0e ; '.'
000000000000b938         db  0x18 ; '.'
000000000000b939         db  0x8e ; '.'
000000000000b93a         db  0x03 ; '.'
000000000000b93b         db  0x49 ; 'I'
000000000000b93c         db  0x0e ; '.'
000000000000b93d         db  0x20 ; ' '
000000000000b93e         db  0x8d ; '.'
000000000000b93f         db  0x04 ; '.'
000000000000b940         db  0x42 ; 'B'
000000000000b941         db  0x0e ; '.'
000000000000b942         db  0x28 ; '('
000000000000b943         db  0x8c ; '.'
000000000000b944         db  0x05 ; '.'
000000000000b945         db  0x44 ; 'D'
000000000000b946         db  0x0e ; '.'
000000000000b947         db  0x30 ; '0'
000000000000b948         db  0x86 ; '.'
000000000000b949         db  0x06 ; '.'
000000000000b94a         db  0x41 ; 'A'
000000000000b94b         db  0x0e ; '.'
000000000000b94c         db  0x38 ; '8'
000000000000b94d         db  0x83 ; '.'
000000000000b94e         db  0x07 ; '.'
000000000000b94f         db  0x4d ; 'M'
000000000000b950         db  0x0e ; '.'
000000000000b951         db  0x50 ; 'P'
000000000000b952         db  0x5f ; '_'
000000000000b953         db  0x0e ; '.'
000000000000b954         db  0x58 ; 'X'
000000000000b955         db  0x47 ; 'G'
000000000000b956         db  0x0e ; '.'
000000000000b957         db  0x60 ; '`'
000000000000b958         db  0x46 ; 'F'
000000000000b959         db  0x0e ; '.'
000000000000b95a         db  0x68 ; 'h'
000000000000b95b         db  0x44 ; 'D'
000000000000b95c         db  0x0e ; '.'
000000000000b95d         db  0x70 ; 'p'
000000000000b95e         db  0x58 ; 'X'
000000000000b95f         db  0x0e ; '.'
000000000000b960         db  0x38 ; '8'
000000000000b961         db  0x41 ; 'A'
000000000000b962         db  0x0e ; '.'
000000000000b963         db  0x30 ; '0'
000000000000b964         db  0x41 ; 'A'
000000000000b965         db  0x0e ; '.'
000000000000b966         db  0x28 ; '('
000000000000b967         db  0x42 ; 'B'
000000000000b968         db  0x0e ; '.'
000000000000b969         db  0x20 ; ' '
000000000000b96a         db  0x42 ; 'B'
000000000000b96b         db  0x0e ; '.'
000000000000b96c         db  0x18 ; '.'
000000000000b96d         db  0x42 ; 'B'
000000000000b96e         db  0x0e ; '.'
000000000000b96f         db  0x10 ; '.'
000000000000b970         db  0x42 ; 'B'
000000000000b971         db  0x0e ; '.'
000000000000b972         db  0x08 ; '.'
000000000000b973         db  0x00 ; '.'
000000000000b974         dd         0x00000068                                  ; Length of the record
000000000000b978         dd         0x00000458                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b97c         db         0xb4, 0x92, 2 dup (0xff)                    ; begin 0x4c30
000000000000b980         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4d13)
000000000000b984         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b985         db  0x42 ; 'B'
000000000000b986         db  0x0e ; '.'
000000000000b987         db  0x10 ; '.'
000000000000b988         db  0x8f ; '.'
000000000000b989         db  0x02 ; '.'
000000000000b98a         db  0x42 ; 'B'
000000000000b98b         db  0x0e ; '.'
000000000000b98c         db  0x18 ; '.'
000000000000b98d         db  0x8e ; '.'
000000000000b98e         db  0x03 ; '.'
000000000000b98f         db  0x49 ; 'I'
000000000000b990         db  0x0e ; '.'
000000000000b991         db  0x20 ; ' '
000000000000b992         db  0x8d ; '.'
000000000000b993         db  0x04 ; '.'
000000000000b994         db  0x42 ; 'B'
000000000000b995         db  0x0e ; '.'
000000000000b996         db  0x28 ; '('
000000000000b997         db  0x8c ; '.'
000000000000b998         db  0x05 ; '.'
000000000000b999         db  0x44 ; 'D'
000000000000b99a         db  0x0e ; '.'
000000000000b99b         db  0x30 ; '0'
000000000000b99c         db  0x86 ; '.'
000000000000b99d         db  0x06 ; '.'
000000000000b99e         db  0x41 ; 'A'
000000000000b99f         db  0x0e ; '.'
000000000000b9a0         db  0x38 ; '8'
000000000000b9a1         db  0x83 ; '.'
000000000000b9a2         db  0x07 ; '.'
000000000000b9a3         db  0x4d ; 'M'
000000000000b9a4         db  0x0e ; '.'
000000000000b9a5         db  0x70 ; 'p'
000000000000b9a6         db  0x65 ; 'e'
000000000000b9a7         db  0x0e ; '.'
000000000000b9a8         db  0x78 ; 'x'
000000000000b9a9         db  0x4d ; 'M'
000000000000b9aa         db  0x0e ; '.'
000000000000b9ab         db  0x80 ; '.'
000000000000b9ac         db  0x01 ; '.'
000000000000b9ad         db  0x46 ; 'F'
000000000000b9ae         db  0x0e ; '.'
000000000000b9af         db  0x88 ; '.'
000000000000b9b0         db  0x01 ; '.'
000000000000b9b1         db  0x42 ; 'B'
000000000000b9b2         db  0x0e ; '.'
000000000000b9b3         db  0x90 ; '.'
000000000000b9b4         db  0x01 ; '.'
000000000000b9b5         db  0x5e ; '^'
000000000000b9b6         db  0x0e ; '.'
000000000000b9b7         db  0x70 ; 'p'
000000000000b9b8         db  0x56 ; 'V'
000000000000b9b9         db  0x0e ; '.'
000000000000b9ba         db  0x78 ; 'x'
000000000000b9bb         db  0x43 ; 'C'
000000000000b9bc         db  0x0e ; '.'
000000000000b9bd         db  0x80 ; '.'
000000000000b9be         db  0x01 ; '.'
000000000000b9bf         db  0x43 ; 'C'
000000000000b9c0         db  0x0e ; '.'
000000000000b9c1         db  0x88 ; '.'
000000000000b9c2         db  0x01 ; '.'
000000000000b9c3         db  0x56 ; 'V'
000000000000b9c4         db  0x0e ; '.'
000000000000b9c5         db  0x90 ; '.'
000000000000b9c6         db  0x01 ; '.'
000000000000b9c7         db  0x52 ; 'R'
000000000000b9c8         db  0x0e ; '.'
000000000000b9c9         db  0x70 ; 'p'
000000000000b9ca         db  0x5b ; '['
000000000000b9cb         db  0x0e ; '.'
000000000000b9cc         db  0x38 ; '8'
000000000000b9cd         db  0x41 ; 'A'
000000000000b9ce         db  0x0e ; '.'
000000000000b9cf         db  0x30 ; '0'
000000000000b9d0         db  0x41 ; 'A'
000000000000b9d1         db  0x0e ; '.'
000000000000b9d2         db  0x28 ; '('
000000000000b9d3         db  0x42 ; 'B'
000000000000b9d4         db  0x0e ; '.'
000000000000b9d5         db  0x20 ; ' '
000000000000b9d6         db  0x42 ; 'B'
000000000000b9d7         db  0x0e ; '.'
000000000000b9d8         db  0x18 ; '.'
000000000000b9d9         db  0x42 ; 'B'
000000000000b9da         db  0x0e ; '.'
000000000000b9db         db  0x10 ; '.'
000000000000b9dc         db  0x42 ; 'B'
000000000000b9dd         db  0x0e ; '.'
000000000000b9de         db  0x08 ; '.'
000000000000b9df         db  0x00 ; '.'
000000000000b9e0         dd         0x00000010                                  ; Length of the record
000000000000b9e4         dd         0x000004c4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b9e8         db         0x38, 0x93, 2 dup (0xff)                    ; begin 0x4d20
000000000000b9ec         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x4d2a)
000000000000b9f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9f1         align      4
000000000000b9f4         dd         0x00000028                                  ; Length of the record
000000000000b9f8         dd         0x000004d8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000b9fc         db         0x34, 0x93, 2 dup (0xff)                    ; begin 0x4d30
000000000000ba00         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4dc3)
000000000000ba04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba05         db  0x48 ; 'H'
000000000000ba06         db  0x0e ; '.'
000000000000ba07         db  0x10 ; '.'
000000000000ba08         db  0x8c ; '.'
000000000000ba09         db  0x02 ; '.'
000000000000ba0a         db  0x48 ; 'H'
000000000000ba0b         db  0x0e ; '.'
000000000000ba0c         db  0x18 ; '.'
000000000000ba0d         db  0x86 ; '.'
000000000000ba0e         db  0x03 ; '.'
000000000000ba0f         db  0x41 ; 'A'
000000000000ba10         db  0x0e ; '.'
000000000000ba11         db  0x20 ; ' '
000000000000ba12         db  0x83 ; '.'
000000000000ba13         db  0x04 ; '.'
000000000000ba14         db  0x02 ; '.'
000000000000ba15         db  0x74 ; 't'
000000000000ba16         db  0x0e ; '.'
000000000000ba17         db  0x18 ; '.'
000000000000ba18         db  0x4b ; 'K'
000000000000ba19         db  0x0e ; '.'
000000000000ba1a         db  0x10 ; '.'
000000000000ba1b         db  0x42 ; 'B'
000000000000ba1c         db  0x0e ; '.'
000000000000ba1d         db  0x08 ; '.'
000000000000ba1e         db  0x00 ; '.'
000000000000ba1f         db  0x00 ; '.'
000000000000ba20         dd         0x00000010                                  ; Length of the record
000000000000ba24         dd         0x00000504                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba28         db         0xa8, 0x93, 2 dup (0xff)                    ; begin 0x4dd0
000000000000ba2c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4de3)
000000000000ba30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba31         align      4
000000000000ba34         dd         0x00000010                                  ; Length of the record
000000000000ba38         dd         0x00000518                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba3c         db         0xb4, 0x93, 2 dup (0xff)                    ; begin 0x4df0
000000000000ba40         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4dfc)
000000000000ba44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba45         align      8
000000000000ba48         dd         0x00000010                                  ; Length of the record
000000000000ba4c         dd         0x0000052c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba50         db         0xb0, 0x93, 2 dup (0xff)                    ; begin 0x4e00
000000000000ba54         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4e18)
000000000000ba58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba59         align      4
000000000000ba5c         dd         0x00000010                                  ; Length of the record
000000000000ba60         dd         0x00000540                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba64         db         0xbc, 0x93, 2 dup (0xff)                    ; begin 0x4e20
000000000000ba68         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4e34)
000000000000ba6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba6d         align      16
000000000000ba70         dd         0x00000018                                  ; Length of the record
000000000000ba74         dd         0x00000554                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba78         db         0xc8, 0x93, 2 dup (0xff)                    ; begin 0x4e40
000000000000ba7c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x4ece)
000000000000ba80         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba81         db  0x44 ; 'D'
000000000000ba82         db  0x0e ; '.'
000000000000ba83         db  0x50 ; 'P'
000000000000ba84         db  0x02 ; '.'
000000000000ba85         db  0x7f ; '.'
000000000000ba86         db  0x0a ; '.'
000000000000ba87         db  0x0e ; '.'
000000000000ba88         db  0x08 ; '.'
000000000000ba89         db  0x41 ; 'A'
000000000000ba8a         db  0x0b ; '.'
000000000000ba8b         db  0x00 ; '.'
000000000000ba8c         dd         0x00000018                                  ; Length of the record
000000000000ba90         dd         0x00000570                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ba94         db         0x3c, 0x94, 2 dup (0xff)                    ; begin 0x4ed0
000000000000ba98         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x4f5a)
000000000000ba9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba9d         db  0x44 ; 'D'
000000000000ba9e         db  0x0e ; '.'
000000000000ba9f         db  0x50 ; 'P'
000000000000baa0         db  0x02 ; '.'
000000000000baa1         db  0x7b ; '{'
000000000000baa2         db  0x0a ; '.'
000000000000baa3         db  0x0e ; '.'
000000000000baa4         db  0x08 ; '.'
000000000000baa5         db  0x41 ; 'A'
000000000000baa6         db  0x0b ; '.'
000000000000baa7         db  0x00 ; '.'
000000000000baa8         dd         0x00000010                                  ; Length of the record
000000000000baac         dd         0x0000058c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bab0         db         0xb0, 0x94, 2 dup (0xff)                    ; begin 0x4f60
000000000000bab4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4f6c)
000000000000bab8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bab9         align      4
000000000000babc         dd         0x00000010                                  ; Length of the record
000000000000bac0         dd         0x000005a0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bac4         db         0xac, 0x94, 2 dup (0xff)                    ; begin 0x4f70
000000000000bac8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x4f7f)
000000000000bacc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bacd         align      16
000000000000bad0         dd         0x00000018                                  ; Length of the record
000000000000bad4         dd         0x000005b4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bad8         db         0xa8, 0x94, 2 dup (0xff)                    ; begin 0x4f80
000000000000badc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5018)
000000000000bae0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bae1         db  0x44 ; 'D'
000000000000bae2         db  0x0e ; '.'
000000000000bae3         db  0x50 ; 'P'
000000000000bae4         db  0x02 ; '.'
000000000000bae5         db  0x8e ; '.'
000000000000bae6         db  0x0a ; '.'
000000000000bae7         db  0x0e ; '.'
000000000000bae8         db  0x08 ; '.'
000000000000bae9         db  0x41 ; 'A'
000000000000baea         db  0x0b ; '.'
000000000000baeb         db  0x00 ; '.'
000000000000baec         dd         0x00000010                                  ; Length of the record
000000000000baf0         dd         0x000005d0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000baf4         db         0x2c, 0x95, 2 dup (0xff)                    ; begin 0x5020
000000000000baf8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5030)
000000000000bafc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bafd         align      256
000000000000bb00         dd         0x00000010                                  ; Length of the record
000000000000bb04         dd         0x000005e4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb08         db         0x28, 0x95, 2 dup (0xff)                    ; begin 0x5030
000000000000bb0c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5041)
000000000000bb10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb11         align      4
000000000000bb14         dd         0x00000010                                  ; Length of the record
000000000000bb18         dd         0x000005f8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb1c         db         0x34, 0x95, 2 dup (0xff)                    ; begin 0x5050
000000000000bb20         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x505a)
000000000000bb24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb25         align      8
000000000000bb28         dd         0x00000018                                  ; Length of the record
000000000000bb2c         dd         0x0000060c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb30         db         0x30, 0x95, 2 dup (0xff)                    ; begin 0x5060
000000000000bb34         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x50ee)
000000000000bb38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb39         db  0x44 ; 'D'
000000000000bb3a         db  0x0e ; '.'
000000000000bb3b         db  0x50 ; 'P'
000000000000bb3c         db  0x02 ; '.'
000000000000bb3d         db  0x7f ; '.'
000000000000bb3e         db  0x0a ; '.'
000000000000bb3f         db  0x0e ; '.'
000000000000bb40         db  0x08 ; '.'
000000000000bb41         db  0x41 ; 'A'
000000000000bb42         db  0x0b ; '.'
000000000000bb43         db  0x00 ; '.'
000000000000bb44         dd         0x00000018                                  ; Length of the record
000000000000bb48         dd         0x00000628                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb4c         db         0xa4, 0x95, 2 dup (0xff)                    ; begin 0x50f0
000000000000bb50         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5181)
000000000000bb54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb55         db  0x44 ; 'D'
000000000000bb56         db  0x0e ; '.'
000000000000bb57         db  0x50 ; 'P'
000000000000bb58         db  0x02 ; '.'
000000000000bb59         db  0x82 ; '.'
000000000000bb5a         db  0x0a ; '.'
000000000000bb5b         db  0x0e ; '.'
000000000000bb5c         db  0x08 ; '.'
000000000000bb5d         db  0x41 ; 'A'
000000000000bb5e         db  0x0b ; '.'
000000000000bb5f         db  0x00 ; '.'
000000000000bb60         dd         0x00000010                                  ; Length of the record
000000000000bb64         dd         0x00000644                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb68         db         0x28, 0x96, 2 dup (0xff)                    ; begin 0x5190
000000000000bb6c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x519c)
000000000000bb70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb71         align      4
000000000000bb74         dd         0x00000010                                  ; Length of the record
000000000000bb78         dd         0x00000658                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb7c         db         0x24, 0x96, 2 dup (0xff)                    ; begin 0x51a0
000000000000bb80         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x51b7)
000000000000bb84         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb85         align      8
000000000000bb88         dd         0x00000010                                  ; Length of the record
000000000000bb8c         dd         0x0000066c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bb90         db         0x30, 0x96, 2 dup (0xff)                    ; begin 0x51c0
000000000000bb94         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x51d3)
000000000000bb98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb99         align      4
000000000000bb9c         dd         0x00000010                                  ; Length of the record
000000000000bba0         dd         0x00000680                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bba4         db         0x3c, 0x96, 2 dup (0xff)                    ; begin 0x51e0
000000000000bba8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x51ec)
000000000000bbac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbad         align      16
000000000000bbb0         dd         0x00000010                                  ; Length of the record
000000000000bbb4         dd         0x00000694                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bbb8         db         0x38, 0x96, 2 dup (0xff)                    ; begin 0x51f0
000000000000bbbc         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5204)
000000000000bbc0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbc1         align      4
000000000000bbc4         dd         0x00000010                                  ; Length of the record
000000000000bbc8         dd         0x000006a8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bbcc         db         0x44, 0x96, 2 dup (0xff)                    ; begin 0x5210
000000000000bbd0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5223)
000000000000bbd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbd5         align      8
000000000000bbd8         dd         0x00000014                                  ; Length of the record
000000000000bbdc         dd         0x000006bc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bbe0         db         0x50, 0x96, 2 dup (0xff)                    ; begin 0x5230
000000000000bbe4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5248)
000000000000bbe8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbe9         align      16
000000000000bbf0         dd         0x00000024                                  ; Length of the record
000000000000bbf4         dd         0x000006d4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bbf8         db         0x58, 0x96, 2 dup (0xff)                    ; begin 0x5250
000000000000bbfc         db         0x71, 3 dup (0x00)                          ; length 0x71 (end at 0x52c1)
000000000000bc00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc01         db  0x41 ; 'A'
000000000000bc02         db  0x0e ; '.'
000000000000bc03         db  0x10 ; '.'
000000000000bc04         db  0x83 ; '.'
000000000000bc05         db  0x02 ; '.'
000000000000bc06         db  0x56 ; 'V'
000000000000bc07         db  0x0e ; '.'
000000000000bc08         db  0xb0 ; '.'
000000000000bc09         db  0x01 ; '.'
000000000000bc0a         db  0x02 ; '.'
000000000000bc0b         db  0x4c ; 'L'
000000000000bc0c         db  0x0a ; '.'
000000000000bc0d         db  0x0e ; '.'
000000000000bc0e         db  0x10 ; '.'
000000000000bc0f         db  0x41 ; 'A'
000000000000bc10         db  0x0e ; '.'
000000000000bc11         db  0x08 ; '.'
000000000000bc12         db  0x44 ; 'D'
000000000000bc13         db  0x0b ; '.'
000000000000bc14         db  0x00 ; '.'
000000000000bc15         db  0x00 ; '.'
000000000000bc16         db  0x00 ; '.'
000000000000bc17         db  0x00 ; '.'
000000000000bc18         dd         0x00000110                                  ; Length of the record
000000000000bc1c         dd         0x000006fc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bc20         db         0xb0, 0x96, 2 dup (0xff)                    ; begin 0x52d0
000000000000bc24         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x56e7)
000000000000bc28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc29         db  0x42 ; 'B'
000000000000bc2a         db  0x0e ; '.'
000000000000bc2b         db  0x10 ; '.'
000000000000bc2c         db  0x8f ; '.'
000000000000bc2d         db  0x02 ; '.'
000000000000bc2e         db  0x42 ; 'B'
000000000000bc2f         db  0x0e ; '.'
000000000000bc30         db  0x18 ; '.'
000000000000bc31         db  0x8e ; '.'
000000000000bc32         db  0x03 ; '.'
000000000000bc33         db  0x42 ; 'B'
000000000000bc34         db  0x0e ; '.'
000000000000bc35         db  0x20 ; ' '
000000000000bc36         db  0x8d ; '.'
000000000000bc37         db  0x04 ; '.'
000000000000bc38         db  0x42 ; 'B'
000000000000bc39         db  0x0e ; '.'
000000000000bc3a         db  0x28 ; '('
000000000000bc3b         db  0x8c ; '.'
000000000000bc3c         db  0x05 ; '.'
000000000000bc3d         db  0x44 ; 'D'
000000000000bc3e         db  0x0e ; '.'
000000000000bc3f         db  0x30 ; '0'
000000000000bc40         db  0x86 ; '.'
000000000000bc41         db  0x06 ; '.'
000000000000bc42         db  0x41 ; 'A'
000000000000bc43         db  0x0e ; '.'
000000000000bc44         db  0x38 ; '8'
000000000000bc45         db  0x83 ; '.'
000000000000bc46         db  0x07 ; '.'
000000000000bc47         db  0x4a ; 'J'
000000000000bc48         db  0x0e ; '.'
000000000000bc49         db  0x60 ; '`'
000000000000bc4a         db  0x02 ; '.'
000000000000bc4b         db  0xdd ; '.'
000000000000bc4c         db  0x0e ; '.'
000000000000bc4d         db  0x68 ; 'h'
000000000000bc4e         db  0x57 ; 'W'
000000000000bc4f         db  0x0e ; '.'
000000000000bc50         db  0x70 ; 'p'
000000000000bc51         db  0x42 ; 'B'
000000000000bc52         db  0x0e ; '.'
000000000000bc53         db  0x78 ; 'x'
000000000000bc54         db  0x42 ; 'B'
000000000000bc55         db  0x0e ; '.'
000000000000bc56         db  0x80 ; '.'
000000000000bc57         db  0x01 ; '.'
000000000000bc58         db  0x42 ; 'B'
000000000000bc59         db  0x0e ; '.'
000000000000bc5a         db  0x88 ; '.'
000000000000bc5b         db  0x01 ; '.'
000000000000bc5c         db  0x42 ; 'B'
000000000000bc5d         db  0x0e ; '.'
000000000000bc5e         db  0x90 ; '.'
000000000000bc5f         db  0x01 ; '.'
000000000000bc60         db  0x53 ; 'S'
000000000000bc61         db  0x0e ; '.'
000000000000bc62         db  0x60 ; '`'
000000000000bc63         db  0x44 ; 'D'
000000000000bc64         db  0x0a ; '.'
000000000000bc65         db  0x0e ; '.'
000000000000bc66         db  0x38 ; '8'
000000000000bc67         db  0x41 ; 'A'
000000000000bc68         db  0x0e ; '.'
000000000000bc69         db  0x30 ; '0'
000000000000bc6a         db  0x41 ; 'A'
000000000000bc6b         db  0x0e ; '.'
000000000000bc6c         db  0x28 ; '('
000000000000bc6d         db  0x42 ; 'B'
000000000000bc6e         db  0x0e ; '.'
000000000000bc6f         db  0x20 ; ' '
000000000000bc70         db  0x42 ; 'B'
000000000000bc71         db  0x0e ; '.'
000000000000bc72         db  0x18 ; '.'
000000000000bc73         db  0x42 ; 'B'
000000000000bc74         db  0x0e ; '.'
000000000000bc75         db  0x10 ; '.'
000000000000bc76         db  0x42 ; 'B'
000000000000bc77         db  0x0e ; '.'
000000000000bc78         db  0x08 ; '.'
000000000000bc79         db  0x44 ; 'D'
000000000000bc7a         db  0x0b ; '.'
000000000000bc7b         db  0x02 ; '.'
000000000000bc7c         db  0x78 ; 'x'
000000000000bc7d         db  0x0a ; '.'
000000000000bc7e         db  0x0e ; '.'
000000000000bc7f         db  0x68 ; 'h'
000000000000bc80         db  0x48 ; 'H'
000000000000bc81         db  0x0b ; '.'
000000000000bc82         db  0x5a ; 'Z'
000000000000bc83         db  0x0a ; '.'
000000000000bc84         db  0x0e ; '.'
000000000000bc85         db  0x38 ; '8'
000000000000bc86         db  0x47 ; 'G'
000000000000bc87         db  0x0e ; '.'
000000000000bc88         db  0x30 ; '0'
000000000000bc89         db  0x41 ; 'A'
000000000000bc8a         db  0x0e ; '.'
000000000000bc8b         db  0x28 ; '('
000000000000bc8c         db  0x42 ; 'B'
000000000000bc8d         db  0x0e ; '.'
000000000000bc8e         db  0x20 ; ' '
000000000000bc8f         db  0x42 ; 'B'
000000000000bc90         db  0x0e ; '.'
000000000000bc91         db  0x18 ; '.'
000000000000bc92         db  0x42 ; 'B'
000000000000bc93         db  0x0e ; '.'
000000000000bc94         db  0x10 ; '.'
000000000000bc95         db  0x42 ; 'B'
000000000000bc96         db  0x0e ; '.'
000000000000bc97         db  0x08 ; '.'
000000000000bc98         db  0x56 ; 'V'
000000000000bc99         db  0x0b ; '.'
000000000000bc9a         db  0x5e ; '^'
000000000000bc9b         db  0x0a ; '.'
000000000000bc9c         db  0x0e ; '.'
000000000000bc9d         db  0x38 ; '8'
000000000000bc9e         db  0x52 ; 'R'
000000000000bc9f         db  0x0e ; '.'
000000000000bca0         db  0x30 ; '0'
000000000000bca1         db  0x41 ; 'A'
000000000000bca2         db  0x0e ; '.'
000000000000bca3         db  0x28 ; '('
000000000000bca4         db  0x42 ; 'B'
000000000000bca5         db  0x0e ; '.'
000000000000bca6         db  0x20 ; ' '
000000000000bca7         db  0x42 ; 'B'
000000000000bca8         db  0x0e ; '.'
000000000000bca9         db  0x18 ; '.'
000000000000bcaa         db  0x42 ; 'B'
000000000000bcab         db  0x0e ; '.'
000000000000bcac         db  0x10 ; '.'
000000000000bcad         db  0x42 ; 'B'
000000000000bcae         db  0x0e ; '.'
000000000000bcaf         db  0x08 ; '.'
000000000000bcb0         db  0x4f ; 'O'
000000000000bcb1         db  0x0b ; '.'
000000000000bcb2         db  0x62 ; 'b'
000000000000bcb3         db  0x0a ; '.'
000000000000bcb4         db  0x0e ; '.'
000000000000bcb5         db  0x38 ; '8'
000000000000bcb6         db  0x50 ; 'P'
000000000000bcb7         db  0x0e ; '.'
000000000000bcb8         db  0x30 ; '0'
000000000000bcb9         db  0x41 ; 'A'
000000000000bcba         db  0x0e ; '.'
000000000000bcbb         db  0x28 ; '('
000000000000bcbc         db  0x42 ; 'B'
000000000000bcbd         db  0x0e ; '.'
000000000000bcbe         db  0x20 ; ' '
000000000000bcbf         db  0x42 ; 'B'
000000000000bcc0         db  0x0e ; '.'
000000000000bcc1         db  0x18 ; '.'
000000000000bcc2         db  0x42 ; 'B'
000000000000bcc3         db  0x0e ; '.'
000000000000bcc4         db  0x10 ; '.'
000000000000bcc5         db  0x42 ; 'B'
000000000000bcc6         db  0x0e ; '.'
000000000000bcc7         db  0x08 ; '.'
000000000000bcc8         db  0x55 ; 'U'
000000000000bcc9         db  0x0b ; '.'
000000000000bcca         db  0x66 ; 'f'
000000000000bccb         db  0x0e ; '.'
000000000000bccc         db  0x68 ; 'h'
000000000000bccd         db  0x42 ; 'B'
000000000000bcce         db  0x0e ; '.'
000000000000bccf         db  0x70 ; 'p'
000000000000bcd0         db  0x5c ; '\'
000000000000bcd1         db  0x0e ; '.'
000000000000bcd2         db  0x68 ; 'h'
000000000000bcd3         db  0x41 ; 'A'
000000000000bcd4         db  0x0e ; '.'
000000000000bcd5         db  0x60 ; '`'
000000000000bcd6         db  0x44 ; 'D'
000000000000bcd7         db  0x0a ; '.'
000000000000bcd8         db  0x0e ; '.'
000000000000bcd9         db  0x38 ; '8'
000000000000bcda         db  0x41 ; 'A'
000000000000bcdb         db  0x0e ; '.'
000000000000bcdc         db  0x30 ; '0'
000000000000bcdd         db  0x41 ; 'A'
000000000000bcde         db  0x0e ; '.'
000000000000bcdf         db  0x28 ; '('
000000000000bce0         db  0x42 ; 'B'
000000000000bce1         db  0x0e ; '.'
000000000000bce2         db  0x20 ; ' '
000000000000bce3         db  0x42 ; 'B'
000000000000bce4         db  0x0e ; '.'
000000000000bce5         db  0x18 ; '.'
000000000000bce6         db  0x42 ; 'B'
000000000000bce7         db  0x0e ; '.'
000000000000bce8         db  0x10 ; '.'
000000000000bce9         db  0x42 ; 'B'
000000000000bcea         db  0x0e ; '.'
000000000000bceb         db  0x08 ; '.'
000000000000bcec         db  0x45 ; 'E'
000000000000bced         db  0x0b ; '.'
000000000000bcee         db  0x68 ; 'h'
000000000000bcef         db  0x0a ; '.'
000000000000bcf0         db  0x0e ; '.'
000000000000bcf1         db  0x68 ; 'h'
000000000000bcf2         db  0x48 ; 'H'
000000000000bcf3         db  0x0b ; '.'
000000000000bcf4         db  0x72 ; 'r'
000000000000bcf5         db  0x0e ; '.'
000000000000bcf6         db  0x68 ; 'h'
000000000000bcf7         db  0x45 ; 'E'
000000000000bcf8         db  0x0e ; '.'
000000000000bcf9         db  0x70 ; 'p'
000000000000bcfa         db  0x42 ; 'B'
000000000000bcfb         db  0x0e ; '.'
000000000000bcfc         db  0x78 ; 'x'
000000000000bcfd         db  0x42 ; 'B'
000000000000bcfe         db  0x0e ; '.'
000000000000bcff         db  0x80 ; '.'
000000000000bd00         db  0x01 ; '.'
000000000000bd01         db  0x5e ; '^'
000000000000bd02         db  0x0e ; '.'
000000000000bd03         db  0x60 ; '`'
000000000000bd04         db  0x44 ; 'D'
000000000000bd05         db  0x0a ; '.'
000000000000bd06         db  0x0e ; '.'
000000000000bd07         db  0x38 ; '8'
000000000000bd08         db  0x41 ; 'A'
000000000000bd09         db  0x0e ; '.'
000000000000bd0a         db  0x30 ; '0'
000000000000bd0b         db  0x41 ; 'A'
000000000000bd0c         db  0x0e ; '.'
000000000000bd0d         db  0x28 ; '('
000000000000bd0e         db  0x42 ; 'B'
000000000000bd0f         db  0x0e ; '.'
000000000000bd10         db  0x20 ; ' '
000000000000bd11         db  0x42 ; 'B'
000000000000bd12         db  0x0e ; '.'
000000000000bd13         db  0x18 ; '.'
000000000000bd14         db  0x42 ; 'B'
000000000000bd15         db  0x0e ; '.'
000000000000bd16         db  0x10 ; '.'
000000000000bd17         db  0x42 ; 'B'
000000000000bd18         db  0x0e ; '.'
000000000000bd19         db  0x08 ; '.'
000000000000bd1a         db  0x41 ; 'A'
000000000000bd1b         db  0x0b ; '.'
000000000000bd1c         db  0x79 ; 'y'
000000000000bd1d         db  0x0a ; '.'
000000000000bd1e         db  0x0e ; '.'
000000000000bd1f         db  0x68 ; 'h'
000000000000bd20         db  0x42 ; 'B'
000000000000bd21         db  0x0e ; '.'
000000000000bd22         db  0x70 ; 'p'
000000000000bd23         db  0x42 ; 'B'
000000000000bd24         db  0x0e ; '.'
000000000000bd25         db  0x78 ; 'x'
000000000000bd26         db  0x42 ; 'B'
000000000000bd27         db  0x0e ; '.'
000000000000bd28         db  0x80 ; '.'
000000000000bd29         db  0x01 ; '.'
000000000000bd2a         db  0x51 ; 'Q'
000000000000bd2b         db  0x0b ; '.'
000000000000bd2c         dd         0x00000010                                  ; Length of the record
000000000000bd30         dd         0x00000810                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bd34         db         0xbc, 0x99, 2 dup (0xff)                    ; begin 0x56f0
000000000000bd38         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5710)
000000000000bd3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd3d         align      64
000000000000bd40         dd         0x00000018                                  ; Length of the record
000000000000bd44         dd         0x00000824                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bd48         db         0xc8, 0x99, 2 dup (0xff)                    ; begin 0x5710
000000000000bd4c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5788)
000000000000bd50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd51         db  0x44 ; 'D'
000000000000bd52         db  0x0e ; '.'
000000000000bd53         db  0x70 ; 'p'
000000000000bd54         db  0x02 ; '.'
000000000000bd55         db  0x60 ; '`'
000000000000bd56         db  0x0a ; '.'
000000000000bd57         db  0x0e ; '.'
000000000000bd58         db  0x08 ; '.'
000000000000bd59         db  0x41 ; 'A'
000000000000bd5a         db  0x0b ; '.'
000000000000bd5b         db  0x00 ; '.'
000000000000bd5c         dd         0x00000028                                  ; Length of the record
000000000000bd60         dd         0x00000840                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bd64         db         0x2c, 0x9a, 2 dup (0xff)                    ; begin 0x5790
000000000000bd68         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5865)
000000000000bd6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd6d         db  0x41 ; 'A'
000000000000bd6e         db  0x0e ; '.'
000000000000bd6f         db  0x10 ; '.'
000000000000bd70         db  0x86 ; '.'
000000000000bd71         db  0x02 ; '.'
000000000000bd72         db  0x41 ; 'A'
000000000000bd73         db  0x0e ; '.'
000000000000bd74         db  0x18 ; '.'
000000000000bd75         db  0x83 ; '.'
000000000000bd76         db  0x03 ; '.'
000000000000bd77         db  0x50 ; 'P'
000000000000bd78         db  0x0e ; '.'
000000000000bd79         db  0xd0 ; '.'
000000000000bd7a         db  0x01 ; '.'
000000000000bd7b         db  0x02 ; '.'
000000000000bd7c         db  0xab ; '.'
000000000000bd7d         db  0x0a ; '.'
000000000000bd7e         db  0x0e ; '.'
000000000000bd7f         db  0x18 ; '.'
000000000000bd80         db  0x41 ; 'A'
000000000000bd81         db  0x0e ; '.'
000000000000bd82         db  0x10 ; '.'
000000000000bd83         db  0x41 ; 'A'
000000000000bd84         db  0x0e ; '.'
000000000000bd85         db  0x08 ; '.'
000000000000bd86         db  0x41 ; 'A'
000000000000bd87         db  0x0b ; '.'
000000000000bd88         dd         0x0000001c                                  ; Length of the record
000000000000bd8c         dd         0x0000086c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bd90         db         0xe0, 0x9a, 2 dup (0xff)                    ; begin 0x5870
000000000000bd94         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x58f0)
000000000000bd98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd99         db  0x41 ; 'A'
000000000000bd9a         db  0x0e ; '.'
000000000000bd9b         db  0x10 ; '.'
000000000000bd9c         db  0x83 ; '.'
000000000000bd9d         db  0x02 ; '.'
000000000000bd9e         db  0x02 ; '.'
000000000000bd9f         db  0x7a ; 'z'
000000000000bda0         db  0x0e ; '.'
000000000000bda1         db  0x08 ; '.'
000000000000bda2         db  0x00 ; '.'
000000000000bda3         db  0x00 ; '.'
000000000000bda4         db  0x00 ; '.'
000000000000bda5         db  0x00 ; '.'
000000000000bda6         db  0x00 ; '.'
000000000000bda7         db  0x00 ; '.'
000000000000bda8         dd         0x00000018                                  ; Length of the record
000000000000bdac         dd         0x0000088c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bdb0         db         0x40, 0x9b, 2 dup (0xff)                    ; begin 0x58f0
000000000000bdb4         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x590a)
000000000000bdb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdb9         db  0x41 ; 'A'
000000000000bdba         db  0x0e ; '.'
000000000000bdbb         db  0x10 ; '.'
000000000000bdbc         db  0x83 ; '.'
000000000000bdbd         db  0x02 ; '.'
000000000000bdbe         db  0x53 ; 'S'
000000000000bdbf         db  0x0a ; '.'
000000000000bdc0         db  0x0e ; '.'
000000000000bdc1         db  0x08 ; '.'
000000000000bdc2         db  0x41 ; 'A'
000000000000bdc3         db  0x0b ; '.'
000000000000bdc4         dd         0x00000010                                  ; Length of the record
000000000000bdc8         dd         0x000008a8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bdcc         db         0x44, 0x9b, 2 dup (0xff)                    ; begin 0x5910
000000000000bdd0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5934)
000000000000bdd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdd5         db  0x5f ; '_'
000000000000bdd6         db  0x0e ; '.'
000000000000bdd7         db  0x10 ; '.'
000000000000bdd8         dd         0x00000010                                  ; Length of the record
000000000000bddc         dd         0x000008bc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bde0         db         0x60, 0x9b, 2 dup (0xff)                    ; begin 0x5940
000000000000bde4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5942)
000000000000bde8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bde9         align      4
000000000000bdec         dd         0x00000020                                  ; Length of the record
000000000000bdf0         dd         0x000008d0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bdf4         db         0x5c, 0x9b, 2 dup (0xff)                    ; begin 0x5950
000000000000bdf8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5986)
000000000000bdfc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdfd         db  0x44 ; 'D'
000000000000bdfe         db  0x0e ; '.'
000000000000bdff         db  0x10 ; '.'
000000000000be00         db  0x83 ; '.'
000000000000be01         db  0x02 ; '.'
000000000000be02         db  0x5d ; ']'
000000000000be03         db  0x0a ; '.'
000000000000be04         db  0x0e ; '.'
000000000000be05         db  0x08 ; '.'
000000000000be06         db  0x47 ; 'G'
000000000000be07         db  0x0b ; '.'
000000000000be08         db  0x48 ; 'H'
000000000000be09         db  0x0a ; '.'
000000000000be0a         db  0x0e ; '.'
000000000000be0b         db  0x08 ; '.'
000000000000be0c         db  0x41 ; 'A'
000000000000be0d         db  0x0b ; '.'
000000000000be0e         db  0x00 ; '.'
000000000000be0f         db  0x00 ; '.'
000000000000be10         dd         0x00000010                                  ; Length of the record
000000000000be14         dd         0x000008f4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be18         db         0x78, 0x9b, 2 dup (0xff)                    ; begin 0x5990
000000000000be1c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x59b4)
000000000000be20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be21         db  0x5f ; '_'
000000000000be22         db  0x0e ; '.'
000000000000be23         db  0x10 ; '.'
000000000000be24         dd         0x00000014                                  ; Length of the record
000000000000be28         dd         0x00000908                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be2c         db         0x94, 0x9b, 2 dup (0xff)                    ; begin 0x59c0
000000000000be30         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5a42)
000000000000be34         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be35         db  0x02 ; '.'
000000000000be36         db  0x5f ; '_'
000000000000be37         db  0x0e ; '.'
000000000000be38         db  0x10 ; '.'
000000000000be39         db  0x49 ; 'I'
000000000000be3a         db  0x0e ; '.'
000000000000be3b         db  0x08 ; '.'
000000000000be3c         dd         0x00000014                                  ; Length of the record
000000000000be40         dd         0x00000920                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be44         db         0x0c, 0x9c, 2 dup (0xff)                    ; begin 0x5a50
000000000000be48         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5a9a)
000000000000be4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be4d         db  0x02 ; '.'
000000000000be4e         db  0x45 ; 'E'
000000000000be4f         db  0x0e ; '.'
000000000000be50         db  0x10 ; '.'
000000000000be51         db  0x00 ; '.'
000000000000be52         db  0x00 ; '.'
000000000000be53         db  0x00 ; '.'
000000000000be54         dd         0x00000018                                  ; Length of the record
000000000000be58         dd         0x00000938                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be5c         db         0x44, 0x9c, 2 dup (0xff)                    ; begin 0x5aa0
000000000000be60         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5ab7)
000000000000be64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be65         db  0x41 ; 'A'
000000000000be66         db  0x0e ; '.'
000000000000be67         db  0x10 ; '.'
000000000000be68         db  0x83 ; '.'
000000000000be69         db  0x02 ; '.'
000000000000be6a         db  0x51 ; 'Q'
000000000000be6b         db  0x0e ; '.'
000000000000be6c         db  0x08 ; '.'
000000000000be6d         db  0x00 ; '.'
000000000000be6e         db  0x00 ; '.'
000000000000be6f         db  0x00 ; '.'
000000000000be70         dd         0x00000018                                  ; Length of the record
000000000000be74         dd         0x00000954                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be78         db         0x48, 0x9c, 2 dup (0xff)                    ; begin 0x5ac0
000000000000be7c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5aee)
000000000000be80         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be81         db  0x47 ; 'G'
000000000000be82         db  0x0e ; '.'
000000000000be83         db  0x10 ; '.'
000000000000be84         db  0x61 ; 'a'
000000000000be85         db  0x0a ; '.'
000000000000be86         db  0x0e ; '.'
000000000000be87         db  0x08 ; '.'
000000000000be88         db  0x41 ; 'A'
000000000000be89         db  0x0b ; '.'
000000000000be8a         db  0x00 ; '.'
000000000000be8b         db  0x00 ; '.'
000000000000be8c         dd         0x00000024                                  ; Length of the record
000000000000be90         dd         0x00000970                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000be94         db         0x5c, 0x9c, 2 dup (0xff)                    ; begin 0x5af0
000000000000be98         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5b18)
000000000000be9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be9d         db  0x41 ; 'A'
000000000000be9e         db  0x0e ; '.'
000000000000be9f         db  0x10 ; '.'
000000000000bea0         db  0x86 ; '.'
000000000000bea1         db  0x02 ; '.'
000000000000bea2         db  0x41 ; 'A'
000000000000bea3         db  0x0e ; '.'
000000000000bea4         db  0x18 ; '.'
000000000000bea5         db  0x83 ; '.'
000000000000bea6         db  0x03 ; '.'
000000000000bea7         db  0x4d ; 'M'
000000000000bea8         db  0x0e ; '.'
000000000000bea9         db  0x20 ; ' '
000000000000beaa         db  0x49 ; 'I'
000000000000beab         db  0x0e ; '.'
000000000000beac         db  0x18 ; '.'
000000000000bead         db  0x47 ; 'G'
000000000000beae         db  0x0e ; '.'
000000000000beaf         db  0x10 ; '.'
000000000000beb0         db  0x41 ; 'A'
000000000000beb1         db  0x0e ; '.'
000000000000beb2         db  0x08 ; '.'
000000000000beb3         db  0x00 ; '.'
000000000000beb4         dd         0x00000018                                  ; Length of the record
000000000000beb8         dd         0x00000998                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bebc         db         0x64, 0x9c, 2 dup (0xff)                    ; begin 0x5b20
000000000000bec0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5b33)
000000000000bec4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bec5         db  0x41 ; 'A'
000000000000bec6         db  0x0e ; '.'
000000000000bec7         db  0x10 ; '.'
000000000000bec8         db  0x83 ; '.'
000000000000bec9         db  0x02 ; '.'
000000000000beca         db  0x50 ; 'P'
000000000000becb         db  0x0e ; '.'
000000000000becc         db  0x08 ; '.'
000000000000becd         db  0x00 ; '.'
000000000000bece         db  0x00 ; '.'
000000000000becf         db  0x00 ; '.'
000000000000bed0         dd         0x00000014                                  ; Length of the record
000000000000bed4         dd         0x000009b4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bed8         db         0x68, 0x9c, 2 dup (0xff)                    ; begin 0x5b40
000000000000bedc         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5b75)
000000000000bee0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bee1         db  0x4b ; 'K'
000000000000bee2         db  0x0e ; '.'
000000000000bee3         db  0x10 ; '.'
000000000000bee4         db  0x00 ; '.'
000000000000bee5         db  0x00 ; '.'
000000000000bee6         db  0x00 ; '.'
000000000000bee7         db  0x00 ; '.'
000000000000bee8         dd         0x00000018                                  ; Length of the record
000000000000beec         dd         0x000009cc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bef0         db         0x90, 0x9c, 2 dup (0xff)                    ; begin 0x5b80
000000000000bef4         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x5bcf)
000000000000bef8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bef9         db  0x44 ; 'D'
000000000000befa         db  0x0e ; '.'
000000000000befb         db  0x10 ; '.'
000000000000befc         db  0x54 ; 'T'
000000000000befd         db  0x0a ; '.'
000000000000befe         db  0x0e ; '.'
000000000000beff         db  0x08 ; '.'
000000000000bf00         db  0x48 ; 'H'
000000000000bf01         db  0x0b ; '.'
000000000000bf02         db  0x00 ; '.'
000000000000bf03         db  0x00 ; '.'
000000000000bf04         dd         0x00000010                                  ; Length of the record
000000000000bf08         dd         0x000009e8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf0c         db         0xc4, 0x9c, 2 dup (0xff)                    ; begin 0x5bd0
000000000000bf10         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x5bf9)
000000000000bf14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf15         align      8
000000000000bf18         dd         0x00000010                                  ; Length of the record
000000000000bf1c         dd         0x000009fc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf20         db         0xe0, 0x9c, 2 dup (0xff)                    ; begin 0x5c00
000000000000bf24         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5c1a)
000000000000bf28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf29         align      4
000000000000bf2c         dd         0x00000010                                  ; Length of the record
000000000000bf30         dd         0x00000a10                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf34         db         0xec, 0x9c, 2 dup (0xff)                    ; begin 0x5c20
000000000000bf38         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x5c2d)
000000000000bf3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf3d         align      64
000000000000bf40         dd         0x00000010                                  ; Length of the record
000000000000bf44         dd         0x00000a24                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf48         db         0xe8, 0x9c, 2 dup (0xff)                    ; begin 0x5c30
000000000000bf4c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5c3c)
000000000000bf50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf51         align      4
000000000000bf54         dd         0x00000010                                  ; Length of the record
000000000000bf58         dd         0x00000a38                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf5c         db         0xe4, 0x9c, 2 dup (0xff)                    ; begin 0x5c40
000000000000bf60         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5c4a)
000000000000bf64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf65         align      8
000000000000bf68         dd         0x00000010                                  ; Length of the record
000000000000bf6c         dd         0x00000a4c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf70         db         0xe0, 0x9c, 2 dup (0xff)                    ; begin 0x5c50
000000000000bf74         db         0x26, 3 dup (0x00)                          ; length 0x26 (end at 0x5c76)
000000000000bf78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf79         align      4
000000000000bf7c         dd         0x00000038                                  ; Length of the record
000000000000bf80         dd         0x00000a60                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bf84         db         0xfc, 0x9c, 2 dup (0xff)                    ; begin 0x5c80
000000000000bf88         db         0xc5, 0x01, 2 dup (0x00)                    ; length 0x1c5 (end at 0x5e45)
000000000000bf8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf8d         db  0x42 ; 'B'
000000000000bf8e         db  0x0e ; '.'
000000000000bf8f         db  0x10 ; '.'
000000000000bf90         db  0x8c ; '.'
000000000000bf91         db  0x02 ; '.'
000000000000bf92         db  0x41 ; 'A'
000000000000bf93         db  0x0e ; '.'
000000000000bf94         db  0x18 ; '.'
000000000000bf95         db  0x86 ; '.'
000000000000bf96         db  0x03 ; '.'
000000000000bf97         db  0x44 ; 'D'
000000000000bf98         db  0x0e ; '.'
000000000000bf99         db  0x20 ; ' '
000000000000bf9a         db  0x83 ; '.'
000000000000bf9b         db  0x04 ; '.'
000000000000bf9c         db  0x02 ; '.'
000000000000bf9d         db  0x72 ; 'r'
000000000000bf9e         db  0x0a ; '.'
000000000000bf9f         db  0x0e ; '.'
000000000000bfa0         db  0x18 ; '.'
000000000000bfa1         db  0x41 ; 'A'
000000000000bfa2         db  0x0e ; '.'
000000000000bfa3         db  0x10 ; '.'
000000000000bfa4         db  0x42 ; 'B'
000000000000bfa5         db  0x0e ; '.'
000000000000bfa6         db  0x08 ; '.'
000000000000bfa7         db  0x44 ; 'D'
000000000000bfa8         db  0x0b ; '.'
000000000000bfa9         db  0x02 ; '.'
000000000000bfaa         db  0x54 ; 'T'
000000000000bfab         db  0x0a ; '.'
000000000000bfac         db  0x0e ; '.'
000000000000bfad         db  0x18 ; '.'
000000000000bfae         db  0x45 ; 'E'
000000000000bfaf         db  0x0e ; '.'
000000000000bfb0         db  0x10 ; '.'
000000000000bfb1         db  0x42 ; 'B'
000000000000bfb2         db  0x0e ; '.'
000000000000bfb3         db  0x08 ; '.'
000000000000bfb4         db  0x45 ; 'E'
000000000000bfb5         db  0x0b ; '.'
000000000000bfb6         db  0x00 ; '.'
000000000000bfb7         db  0x00 ; '.'
000000000000bfb8         dd         0x0000004c                                  ; Length of the record
000000000000bfbc         dd         0x00000a9c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000bfc0         db         0x90, 0x9e, 2 dup (0xff)                    ; begin 0x5e50
000000000000bfc4         db         0x05, 0x01, 2 dup (0x00)                    ; length 0x105 (end at 0x5f55)
000000000000bfc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bfc9         db  0x42 ; 'B'
000000000000bfca         db  0x0e ; '.'
000000000000bfcb         db  0x10 ; '.'
000000000000bfcc         db  0x8d ; '.'
000000000000bfcd         db  0x02 ; '.'
000000000000bfce         db  0x42 ; 'B'
000000000000bfcf         db  0x0e ; '.'
000000000000bfd0         db  0x18 ; '.'
000000000000bfd1         db  0x8c ; '.'
000000000000bfd2         db  0x03 ; '.'
000000000000bfd3         db  0x44 ; 'D'
000000000000bfd4         db  0x0e ; '.'
000000000000bfd5         db  0x20 ; ' '
000000000000bfd6         db  0x86 ; '.'
000000000000bfd7         db  0x04 ; '.'
000000000000bfd8         db  0x41 ; 'A'
000000000000bfd9         db  0x0e ; '.'
000000000000bfda         db  0x28 ; '('
000000000000bfdb         db  0x83 ; '.'
000000000000bfdc         db  0x05 ; '.'
000000000000bfdd         db  0x4a ; 'J'
000000000000bfde         db  0x0e ; '.'
000000000000bfdf         db  0x30 ; '0'
000000000000bfe0         db  0x02 ; '.'
000000000000bfe1         db  0xb3 ; '.'
000000000000bfe2         db  0x0a ; '.'
000000000000bfe3         db  0x0e ; '.'
000000000000bfe4         db  0x28 ; '('
000000000000bfe5         db  0x41 ; 'A'
000000000000bfe6         db  0x0e ; '.'
000000000000bfe7         db  0x20 ; ' '
000000000000bfe8         db  0x41 ; 'A'
000000000000bfe9         db  0x0e ; '.'
000000000000bfea         db  0x18 ; '.'
000000000000bfeb         db  0x42 ; 'B'
000000000000bfec         db  0x0e ; '.'
000000000000bfed         db  0x10 ; '.'
000000000000bfee         db  0x42 ; 'B'
000000000000bfef         db  0x0e ; '.'
000000000000bff0         db  0x08 ; '.'
000000000000bff1         db  0x44 ; 'D'
000000000000bff2         db  0x0b ; '.'
000000000000bff3         db  0x5d ; ']'
000000000000bff4         db  0x0a ; '.'
000000000000bff5         db  0x0e ; '.'
000000000000bff6         db  0x28 ; '('
000000000000bff7         db  0x44 ; 'D'
000000000000bff8         db  0x0e ; '.'
000000000000bff9         db  0x20 ; ' '
000000000000bffa         db  0x41 ; 'A'
000000000000bffb         db  0x0e ; '.'
000000000000bffc         db  0x18 ; '.'
000000000000bffd         db  0x42 ; 'B'
000000000000bffe         db  0x0e ; '.'
000000000000bfff         db  0x10 ; '.'
000000000000c000         db  0x42 ; 'B'                                         ; DATA XREF=strmode+86
000000000000c001         db  0x0e ; '.'
000000000000c002         db  0x08 ; '.'
000000000000c003         db  0x4a ; 'J'
000000000000c004         db  0x0b ; '.'
000000000000c005         db  0x00 ; '.'
000000000000c006         db  0x00 ; '.'
000000000000c007         db  0x00 ; '.'
000000000000c008         dd         0x00000034                                  ; Length of the record
000000000000c00c         dd         0x00000aec                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c010         db         0x50, 0x9f, 2 dup (0xff)                    ; begin 0x5f60
000000000000c014         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x5fea)
000000000000c018         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c019         db  0x42 ; 'B'
000000000000c01a         db  0x0e ; '.'
000000000000c01b         db  0x10 ; '.'
000000000000c01c         db  0x8d ; '.'
000000000000c01d         db  0x02 ; '.'
000000000000c01e         db  0x42 ; 'B'
000000000000c01f         db  0x0e ; '.'
000000000000c020         db  0x18 ; '.'
000000000000c021         db  0x8c ; '.'
000000000000c022         db  0x03 ; '.'
000000000000c023         db  0x44 ; 'D'
000000000000c024         db  0x0e ; '.'
000000000000c025         db  0x20 ; ' '
000000000000c026         db  0x86 ; '.'
000000000000c027         db  0x04 ; '.'
000000000000c028         db  0x48 ; 'H'
000000000000c029         db  0x0e ; '.'
000000000000c02a         db  0x28 ; '('
000000000000c02b         db  0x83 ; '.'
000000000000c02c         db  0x05 ; '.'
000000000000c02d         db  0x4a ; 'J'
000000000000c02e         db  0x0e ; '.'
000000000000c02f         db  0x30 ; '0'
000000000000c030         db  0x02 ; '.'
000000000000c031         db  0x66 ; 'f'
000000000000c032         db  0x0e ; '.'
000000000000c033         db  0x28 ; '('
000000000000c034         db  0x44 ; 'D'
000000000000c035         db  0x0e ; '.'
000000000000c036         db  0x20 ; ' '
000000000000c037         db  0x41 ; 'A'
000000000000c038         db  0x0e ; '.'
000000000000c039         db  0x18 ; '.'
000000000000c03a         db  0x42 ; 'B'
000000000000c03b         db  0x0e ; '.'
000000000000c03c         db  0x10 ; '.'
000000000000c03d         db  0x42 ; 'B'
000000000000c03e         db  0x0e ; '.'
000000000000c03f         db  0x08 ; '.'
000000000000c040         dd         0x00000028                                  ; Length of the record
000000000000c044         dd         0x00000b24                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c048         db         0xa8, 0x9f, 2 dup (0xff)                    ; begin 0x5ff0
000000000000c04c         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x6032)
000000000000c050         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c051         db  0x46 ; 'F'
000000000000c052         db  0x0e ; '.'
000000000000c053         db  0x10 ; '.'
000000000000c054         db  0x86 ; '.'
000000000000c055         db  0x02 ; '.'
000000000000c056         db  0x41 ; 'A'
000000000000c057         db  0x0e ; '.'
000000000000c058         db  0x18 ; '.'
000000000000c059         db  0x83 ; '.'
000000000000c05a         db  0x03 ; '.'
000000000000c05b         db  0x47 ; 'G'
000000000000c05c         db  0x0e ; '.'
000000000000c05d         db  0x20 ; ' '
000000000000c05e         db  0x68 ; 'h'
000000000000c05f         db  0x0e ; '.'
000000000000c060         db  0x18 ; '.'
000000000000c061         db  0x41 ; 'A'
000000000000c062         db  0x0e ; '.'
000000000000c063         db  0x10 ; '.'
000000000000c064         db  0x41 ; 'A'
000000000000c065         db  0x0e ; '.'
000000000000c066         db  0x08 ; '.'
000000000000c067         db  0x48 ; 'H'
000000000000c068         db  0xc3 ; '.'
000000000000c069         db  0xc6 ; '.'
000000000000c06a         db  0x00 ; '.'
000000000000c06b         db  0x00 ; '.'
000000000000c06c         dd         0x00000018                                  ; Length of the record
000000000000c070         dd         0x00000b50                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c074         db         0xcc, 0x9f, 2 dup (0xff)                    ; begin 0x6040
000000000000c078         db         0x39, 3 dup (0x00)                          ; length 0x39 (end at 0x6079)
000000000000c07c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c07d         db  0x41 ; 'A'
000000000000c07e         db  0x0e ; '.'
000000000000c07f         db  0x10 ; '.'
000000000000c080         db  0x83 ; '.'
000000000000c081         db  0x02 ; '.'
000000000000c082         db  0x68 ; 'h'
000000000000c083         db  0x0a ; '.'
000000000000c084         db  0x0e ; '.'
000000000000c085         db  0x08 ; '.'
000000000000c086         db  0x47 ; 'G'
000000000000c087         db  0x0b ; '.'
000000000000c088         dd         0x00000038                                  ; Length of the record
000000000000c08c         dd         0x00000b6c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c090         db         0xf0, 0x9f, 2 dup (0xff)                    ; begin 0x6080
000000000000c094         db         0x2c, 0x01, 2 dup (0x00)                    ; length 0x12c (end at 0x61ac)
000000000000c098         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c099         db  0x42 ; 'B'
000000000000c09a         db  0x0e ; '.'
000000000000c09b         db  0x10 ; '.'
000000000000c09c         db  0x8d ; '.'
000000000000c09d         db  0x02 ; '.'
000000000000c09e         db  0x42 ; 'B'
000000000000c09f         db  0x0e ; '.'
000000000000c0a0         db  0x18 ; '.'
000000000000c0a1         db  0x8c ; '.'
000000000000c0a2         db  0x03 ; '.'
000000000000c0a3         db  0x41 ; 'A'
000000000000c0a4         db  0x0e ; '.'
000000000000c0a5         db  0x20 ; ' '
000000000000c0a6         db  0x86 ; '.'
000000000000c0a7         db  0x04 ; '.'
000000000000c0a8         db  0x41 ; 'A'
000000000000c0a9         db  0x0e ; '.'
000000000000c0aa         db  0x28 ; '('
000000000000c0ab         db  0x83 ; '.'
000000000000c0ac         db  0x05 ; '.'
000000000000c0ad         db  0x47 ; 'G'
000000000000c0ae         db  0x0e ; '.'
000000000000c0af         db  0xc0 ; '.'
000000000000c0b0         db  0x01 ; '.'
000000000000c0b1         db  0x02 ; '.'
000000000000c0b2         db  0xa4 ; '.'
000000000000c0b3         db  0x0a ; '.'
000000000000c0b4         db  0x0e ; '.'
000000000000c0b5         db  0x28 ; '('
000000000000c0b6         db  0x41 ; 'A'
000000000000c0b7         db  0x0e ; '.'
000000000000c0b8         db  0x20 ; ' '
000000000000c0b9         db  0x41 ; 'A'
000000000000c0ba         db  0x0e ; '.'
000000000000c0bb         db  0x18 ; '.'
000000000000c0bc         db  0x42 ; 'B'
000000000000c0bd         db  0x0e ; '.'
000000000000c0be         db  0x10 ; '.'
000000000000c0bf         db  0x42 ; 'B'
000000000000c0c0         db  0x0e ; '.'
000000000000c0c1         db  0x08 ; '.'
000000000000c0c2         db  0x49 ; 'I'
000000000000c0c3         db  0x0b ; '.'
000000000000c0c4         dd         0x00000020                                  ; Length of the record
000000000000c0c8         dd         0x00000ba8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c0cc         db         0xe4, 0xa0, 2 dup (0xff)                    ; begin 0x61b0
000000000000c0d0         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x621a)
000000000000c0d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0d5         db  0x44 ; 'D'
000000000000c0d6         db  0x0e ; '.'
000000000000c0d7         db  0x10 ; '.'
000000000000c0d8         db  0x72 ; 'r'
000000000000c0d9         db  0x0a ; '.'
000000000000c0da         db  0x0e ; '.'
000000000000c0db         db  0x08 ; '.'
000000000000c0dc         db  0x4a ; 'J'
000000000000c0dd         db  0x0b ; '.'
000000000000c0de         db  0x5b ; '['
000000000000c0df         db  0x0a ; '.'
000000000000c0e0         db  0x0e ; '.'
000000000000c0e1         db  0x08 ; '.'
000000000000c0e2         db  0x45 ; 'E'
000000000000c0e3         db  0x0b ; '.'
000000000000c0e4         db  0x49 ; 'I'
000000000000c0e5         db  0x0e ; '.'
000000000000c0e6         db  0x08 ; '.'
000000000000c0e7         db  0x00 ; '.'
000000000000c0e8         dd         0x00000040                                  ; Length of the record
000000000000c0ec         dd         0x00000bcc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c0f0         db         0x30, 0xa1, 2 dup (0xff)                    ; begin 0x6220
000000000000c0f4         db         0x66, 3 dup (0x00)                          ; length 0x66 (end at 0x6286)
000000000000c0f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0f9         db  0x41 ; 'A'
000000000000c0fa         db  0x0e ; '.'
000000000000c0fb         db  0x10 ; '.'
000000000000c0fc         db  0x86 ; '.'
000000000000c0fd         db  0x02 ; '.'
000000000000c0fe         db  0x41 ; 'A'
000000000000c0ff         db  0x0e ; '.'
000000000000c100         db  0x18 ; '.'
000000000000c101         db  0x83 ; '.'
000000000000c102         db  0x03 ; '.'
000000000000c103         db  0x49 ; 'I'
000000000000c104         db  0x0e ; '.'
000000000000c105         db  0x20 ; ' '
000000000000c106         db  0x61 ; 'a'
000000000000c107         db  0x0a ; '.'
000000000000c108         db  0x0e ; '.'
000000000000c109         db  0x18 ; '.'
000000000000c10a         db  0x41 ; 'A'
000000000000c10b         db  0x0e ; '.'
000000000000c10c         db  0x10 ; '.'
000000000000c10d         db  0x41 ; 'A'
000000000000c10e         db  0x0e ; '.'
000000000000c10f         db  0x08 ; '.'
000000000000c110         db  0x42 ; 'B'
000000000000c111         db  0x0b ; '.'
000000000000c112         db  0x5b ; '['
000000000000c113         db  0x0a ; '.'
000000000000c114         db  0x0e ; '.'
000000000000c115         db  0x18 ; '.'
000000000000c116         db  0x41 ; 'A'
000000000000c117         db  0x0e ; '.'
000000000000c118         db  0x10 ; '.'
000000000000c119         db  0x41 ; 'A'
000000000000c11a         db  0x0e ; '.'
000000000000c11b         db  0x08 ; '.'
000000000000c11c         db  0x43 ; 'C'
000000000000c11d         db  0x0b ; '.'
000000000000c11e         db  0x4e ; 'N'
000000000000c11f         db  0x0a ; '.'
000000000000c120         db  0x0e ; '.'
000000000000c121         db  0x18 ; '.'
000000000000c122         db  0x41 ; 'A'
000000000000c123         db  0x0e ; '.'
000000000000c124         db  0x10 ; '.'
000000000000c125         db  0x41 ; 'A'
000000000000c126         db  0x0e ; '.'
000000000000c127         db  0x08 ; '.'
000000000000c128         db  0x41 ; 'A'
000000000000c129         db  0x0b ; '.'
000000000000c12a         db  0x00 ; '.'
000000000000c12b         db  0x00 ; '.'
000000000000c12c         dd         0x00000028                                  ; Length of the record
000000000000c130         dd         0x00000c10                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c134         db         0x5c, 0xa1, 2 dup (0xff)                    ; begin 0x6290
000000000000c138         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x62ec)
000000000000c13c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c13d         db  0x41 ; 'A'
000000000000c13e         db  0x0e ; '.'
000000000000c13f         db  0x10 ; '.'
000000000000c140         db  0x86 ; '.'
000000000000c141         db  0x02 ; '.'
000000000000c142         db  0x41 ; 'A'
000000000000c143         db  0x0e ; '.'
000000000000c144         db  0x18 ; '.'
000000000000c145         db  0x83 ; '.'
000000000000c146         db  0x03 ; '.'
000000000000c147         db  0x47 ; 'G'
000000000000c148         db  0x0e ; '.'
000000000000c149         db  0x20 ; ' '
000000000000c14a         db  0x6c ; 'l'
000000000000c14b         db  0x0a ; '.'
000000000000c14c         db  0x0e ; '.'
000000000000c14d         db  0x18 ; '.'
000000000000c14e         db  0x43 ; 'C'
000000000000c14f         db  0x0e ; '.'
000000000000c150         db  0x10 ; '.'
000000000000c151         db  0x41 ; 'A'
000000000000c152         db  0x0e ; '.'
000000000000c153         db  0x08 ; '.'
000000000000c154         db  0x47 ; 'G'
000000000000c155         db  0x0b ; '.'
000000000000c156         db  0x00 ; '.'
000000000000c157         db  0x00 ; '.'
000000000000c158         dd         0x00000024                                  ; Length of the record
000000000000c15c         dd         0x00000c3c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c160         db         0x90, 0xa1, 2 dup (0xff)                    ; begin 0x62f0
000000000000c164         db         0x6b, 3 dup (0x00)                          ; length 0x6b (end at 0x635b)
000000000000c168         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c169         db  0x41 ; 'A'
000000000000c16a         db  0x0e ; '.'
000000000000c16b         db  0x10 ; '.'
000000000000c16c         db  0x83 ; '.'
000000000000c16d         db  0x02 ; '.'
000000000000c16e         db  0x6f ; 'o'
000000000000c16f         db  0x0a ; '.'
000000000000c170         db  0x0e ; '.'
000000000000c171         db  0x08 ; '.'
000000000000c172         db  0x48 ; 'H'
000000000000c173         db  0x0b ; '.'
000000000000c174         db  0x5a ; 'Z'
000000000000c175         db  0x0a ; '.'
000000000000c176         db  0x0e ; '.'
000000000000c177         db  0x08 ; '.'
000000000000c178         db  0x46 ; 'F'
000000000000c179         db  0x0b ; '.'
000000000000c17a         db  0x52 ; 'R'
000000000000c17b         db  0x0e ; '.'
000000000000c17c         db  0x08 ; '.'
000000000000c17d         db  0x00 ; '.'
000000000000c17e         db  0x00 ; '.'
000000000000c17f         db  0x00 ; '.'
000000000000c180         dd         0x0000001c                                  ; Length of the record
000000000000c184         dd         0x00000c64                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c188         db         0xd8, 0xa1, 2 dup (0xff)                    ; begin 0x6360
000000000000c18c         db         0x63, 3 dup (0x00)                          ; length 0x63 (end at 0x63c3)
000000000000c190         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c191         db  0x47 ; 'G'
000000000000c192         db  0x0e ; '.'
000000000000c193         db  0x10 ; '.'
000000000000c194         db  0x83 ; '.'
000000000000c195         db  0x02 ; '.'
000000000000c196         db  0x70 ; 'p'
000000000000c197         db  0x0a ; '.'
000000000000c198         db  0x0e ; '.'
000000000000c199         db  0x08 ; '.'
000000000000c19a         db  0x49 ; 'I'
000000000000c19b         db  0x0b ; '.'
000000000000c19c         db  0x62 ; 'b'
000000000000c19d         db  0x0e ; '.'
000000000000c19e         db  0x08 ; '.'
000000000000c19f         db  0x00 ; '.'
000000000000c1a0         dd         0x00000010                                  ; Length of the record
000000000000c1a4         dd         0x00000c84                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c1a8         db         0x28, 0xa2, 2 dup (0xff)                    ; begin 0x63d0
000000000000c1ac         db         0x3a, 3 dup (0x00)                          ; length 0x3a (end at 0x640a)
000000000000c1b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1b1         align      4
000000000000c1b4         dd         0x0000004c                                  ; Length of the record
000000000000c1b8         dd         0x00000c98                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c1bc         db         0x54, 0xa2, 2 dup (0xff)                    ; begin 0x6410
000000000000c1c0         db         0x7a, 0x02, 2 dup (0x00)                    ; length 0x27a (end at 0x668a)
000000000000c1c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1c5         db  0x42 ; 'B'
000000000000c1c6         db  0x0e ; '.'
000000000000c1c7         db  0x10 ; '.'
000000000000c1c8         db  0x8f ; '.'
000000000000c1c9         db  0x02 ; '.'
000000000000c1ca         db  0x42 ; 'B'
000000000000c1cb         db  0x0e ; '.'
000000000000c1cc         db  0x18 ; '.'
000000000000c1cd         db  0x8e ; '.'
000000000000c1ce         db  0x03 ; '.'
000000000000c1cf         db  0x45 ; 'E'
000000000000c1d0         db  0x0e ; '.'
000000000000c1d1         db  0x20 ; ' '
000000000000c1d2         db  0x8d ; '.'
000000000000c1d3         db  0x04 ; '.'
000000000000c1d4         db  0x42 ; 'B'
000000000000c1d5         db  0x0e ; '.'
000000000000c1d6         db  0x28 ; '('
000000000000c1d7         db  0x8c ; '.'
000000000000c1d8         db  0x05 ; '.'
000000000000c1d9         db  0x44 ; 'D'
000000000000c1da         db  0x0e ; '.'
000000000000c1db         db  0x30 ; '0'
000000000000c1dc         db  0x86 ; '.'
000000000000c1dd         db  0x06 ; '.'
000000000000c1de         db  0x41 ; 'A'
000000000000c1df         db  0x0e ; '.'
000000000000c1e0         db  0x38 ; '8'
000000000000c1e1         db  0x83 ; '.'
000000000000c1e2         db  0x07 ; '.'
000000000000c1e3         db  0x4d ; 'M'
000000000000c1e4         db  0x0e ; '.'
000000000000c1e5         db  0xf0 ; '.'
000000000000c1e6         db  0x01 ; '.'
000000000000c1e7         db  0x03 ; '.'
000000000000c1e8         db  0x08 ; '.'
000000000000c1e9         db  0x01 ; '.'
000000000000c1ea         db  0x0a ; '.'
000000000000c1eb         db  0x0e ; '.'
000000000000c1ec         db  0x38 ; '8'
000000000000c1ed         db  0x41 ; 'A'
000000000000c1ee         db  0x0e ; '.'
000000000000c1ef         db  0x30 ; '0'
000000000000c1f0         db  0x41 ; 'A'
000000000000c1f1         db  0x0e ; '.'
000000000000c1f2         db  0x28 ; '('
000000000000c1f3         db  0x42 ; 'B'
000000000000c1f4         db  0x0e ; '.'
000000000000c1f5         db  0x20 ; ' '
000000000000c1f6         db  0x42 ; 'B'
000000000000c1f7         db  0x0e ; '.'
000000000000c1f8         db  0x18 ; '.'
000000000000c1f9         db  0x42 ; 'B'
000000000000c1fa         db  0x0e ; '.'
000000000000c1fb         db  0x10 ; '.'
000000000000c1fc         db  0x42 ; 'B'
000000000000c1fd         db  0x0e ; '.'
000000000000c1fe         db  0x08 ; '.'
000000000000c1ff         db  0x41 ; 'A'
000000000000c200         db  0x0b ; '.'
000000000000c201         db  0x00 ; '.'
000000000000c202         db  0x00 ; '.'
000000000000c203         db  0x00 ; '.'
000000000000c204         dd         0x00000040                                  ; Length of the record
000000000000c208         dd         0x00000ce8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c20c         db         0x84, 0xa4, 2 dup (0xff)                    ; begin 0x6690
000000000000c210         db         0xaf, 3 dup (0x00)                          ; length 0xaf (end at 0x673f)
000000000000c214         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c215         db  0x48 ; 'H'
000000000000c216         db  0x0e ; '.'
000000000000c217         db  0x10 ; '.'
000000000000c218         db  0x8c ; '.'
000000000000c219         db  0x02 ; '.'
000000000000c21a         db  0x44 ; 'D'
000000000000c21b         db  0x0e ; '.'
000000000000c21c         db  0x18 ; '.'
000000000000c21d         db  0x86 ; '.'
000000000000c21e         db  0x03 ; '.'
000000000000c21f         db  0x41 ; 'A'
000000000000c220         db  0x0e ; '.'
000000000000c221         db  0x20 ; ' '
000000000000c222         db  0x83 ; '.'
000000000000c223         db  0x04 ; '.'
000000000000c224         db  0x02 ; '.'
000000000000c225         db  0x65 ; 'e'
000000000000c226         db  0x0a ; '.'
000000000000c227         db  0x0e ; '.'
000000000000c228         db  0x18 ; '.'
000000000000c229         db  0x46 ; 'F'
000000000000c22a         db  0x0e ; '.'
000000000000c22b         db  0x10 ; '.'
000000000000c22c         db  0x42 ; 'B'
000000000000c22d         db  0x0e ; '.'
000000000000c22e         db  0x08 ; '.'
000000000000c22f         db  0x46 ; 'F'
000000000000c230         db  0x0b ; '.'
000000000000c231         db  0x5e ; '^'
000000000000c232         db  0x0a ; '.'
000000000000c233         db  0x0e ; '.'
000000000000c234         db  0x18 ; '.'
000000000000c235         db  0x41 ; 'A'
000000000000c236         db  0x0e ; '.'
000000000000c237         db  0x10 ; '.'
000000000000c238         db  0x42 ; 'B'
000000000000c239         db  0x0e ; '.'
000000000000c23a         db  0x08 ; '.'
000000000000c23b         db  0x47 ; 'G'
000000000000c23c         db  0x0b ; '.'
000000000000c23d         db  0x41 ; 'A'
000000000000c23e         db  0x0e ; '.'
000000000000c23f         db  0x18 ; '.'
000000000000c240         db  0x43 ; 'C'
000000000000c241         db  0x0e ; '.'
000000000000c242         db  0x10 ; '.'
000000000000c243         db  0x42 ; 'B'
000000000000c244         db  0x0e ; '.'
000000000000c245         db  0x08 ; '.'
000000000000c246         db  0x00 ; '.'
000000000000c247         db  0x00 ; '.'
000000000000c248         dd         0x00000018                                  ; Length of the record
000000000000c24c         dd         0x00000d2c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c250         db         0xf0, 0xa4, 2 dup (0xff)                    ; begin 0x6740
000000000000c254         db         0xb8, 3 dup (0x00)                          ; length 0xb8 (end at 0x67f8)
000000000000c258         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c259         db  0x44 ; 'D'
000000000000c25a         db  0x0e ; '.'
000000000000c25b         db  0x30 ; '0'
000000000000c25c         db  0x02 ; '.'
000000000000c25d         db  0x55 ; 'U'
000000000000c25e         db  0x0a ; '.'
000000000000c25f         db  0x0e ; '.'
000000000000c260         db  0x08 ; '.'
000000000000c261         db  0x47 ; 'G'
000000000000c262         db  0x0b ; '.'
000000000000c263         db  0x00 ; '.'
000000000000c264         dd         0x0000004c                                  ; Length of the record
000000000000c268         dd         0x00000d48                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c26c         db         0x94, 0xa5, 2 dup (0xff)                    ; begin 0x6800
000000000000c270         db         0xd1, 0x09, 2 dup (0x00)                    ; length 0x9d1 (end at 0x71d1)
000000000000c274         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c275         db  0x42 ; 'B'
000000000000c276         db  0x0e ; '.'
000000000000c277         db  0x10 ; '.'
000000000000c278         db  0x8f ; '.'
000000000000c279         db  0x02 ; '.'
000000000000c27a         db  0x42 ; 'B'
000000000000c27b         db  0x0e ; '.'
000000000000c27c         db  0x18 ; '.'
000000000000c27d         db  0x8e ; '.'
000000000000c27e         db  0x03 ; '.'
000000000000c27f         db  0x45 ; 'E'
000000000000c280         db  0x0e ; '.'
000000000000c281         db  0x20 ; ' '
000000000000c282         db  0x8d ; '.'
000000000000c283         db  0x04 ; '.'
000000000000c284         db  0x42 ; 'B'
000000000000c285         db  0x0e ; '.'
000000000000c286         db  0x28 ; '('
000000000000c287         db  0x8c ; '.'
000000000000c288         db  0x05 ; '.'
000000000000c289         db  0x41 ; 'A'
000000000000c28a         db  0x0e ; '.'
000000000000c28b         db  0x30 ; '0'
000000000000c28c         db  0x86 ; '.'
000000000000c28d         db  0x06 ; '.'
000000000000c28e         db  0x41 ; 'A'
000000000000c28f         db  0x0e ; '.'
000000000000c290         db  0x38 ; '8'
000000000000c291         db  0x83 ; '.'
000000000000c292         db  0x07 ; '.'
000000000000c293         db  0x44 ; 'D'
000000000000c294         db  0x0e ; '.'
000000000000c295         db  0xb0 ; '.'
000000000000c296         db  0x01 ; '.'
000000000000c297         db  0x03 ; '.'
000000000000c298         db  0xd1 ; '.'
000000000000c299         db  0x05 ; '.'
000000000000c29a         db  0x0a ; '.'
000000000000c29b         db  0x0e ; '.'
000000000000c29c         db  0x38 ; '8'
000000000000c29d         db  0x41 ; 'A'
000000000000c29e         db  0x0e ; '.'
000000000000c29f         db  0x30 ; '0'
000000000000c2a0         db  0x41 ; 'A'
000000000000c2a1         db  0x0e ; '.'
000000000000c2a2         db  0x28 ; '('
000000000000c2a3         db  0x42 ; 'B'
000000000000c2a4         db  0x0e ; '.'
000000000000c2a5         db  0x20 ; ' '
000000000000c2a6         db  0x42 ; 'B'
000000000000c2a7         db  0x0e ; '.'
000000000000c2a8         db  0x18 ; '.'
000000000000c2a9         db  0x42 ; 'B'
000000000000c2aa         db  0x0e ; '.'
000000000000c2ab         db  0x10 ; '.'
000000000000c2ac         db  0x42 ; 'B'
000000000000c2ad         db  0x0e ; '.'
000000000000c2ae         db  0x08 ; '.'
000000000000c2af         db  0x44 ; 'D'
000000000000c2b0         db  0x0b ; '.'
000000000000c2b1         db  0x00 ; '.'
000000000000c2b2         db  0x00 ; '.'
000000000000c2b3         db  0x00 ; '.'
000000000000c2b4         dd         0x00000048                                  ; Length of the record
000000000000c2b8         dd         0x00000d98                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c2bc         db         0x24, 0xaf, 2 dup (0xff)                    ; begin 0x71e0
000000000000c2c0         db         0xaa, 0x03, 2 dup (0x00)                    ; length 0x3aa (end at 0x758a)
000000000000c2c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c2c5         db  0x42 ; 'B'
000000000000c2c6         db  0x0e ; '.'
000000000000c2c7         db  0x10 ; '.'
000000000000c2c8         db  0x8f ; '.'
000000000000c2c9         db  0x02 ; '.'
000000000000c2ca         db  0x42 ; 'B'
000000000000c2cb         db  0x0e ; '.'
000000000000c2cc         db  0x18 ; '.'
000000000000c2cd         db  0x8e ; '.'
000000000000c2ce         db  0x03 ; '.'
000000000000c2cf         db  0x42 ; 'B'
000000000000c2d0         db  0x0e ; '.'
000000000000c2d1         db  0x20 ; ' '
000000000000c2d2         db  0x8d ; '.'
000000000000c2d3         db  0x04 ; '.'
000000000000c2d4         db  0x42 ; 'B'
000000000000c2d5         db  0x0e ; '.'
000000000000c2d6         db  0x28 ; '('
000000000000c2d7         db  0x8c ; '.'
000000000000c2d8         db  0x05 ; '.'
000000000000c2d9         db  0x41 ; 'A'
000000000000c2da         db  0x0e ; '.'
000000000000c2db         db  0x30 ; '0'
000000000000c2dc         db  0x86 ; '.'
000000000000c2dd         db  0x06 ; '.'
000000000000c2de         db  0x41 ; 'A'
000000000000c2df         db  0x0e ; '.'
000000000000c2e0         db  0x38 ; '8'
000000000000c2e1         db  0x83 ; '.'
000000000000c2e2         db  0x07 ; '.'
000000000000c2e3         db  0x44 ; 'D'
000000000000c2e4         db  0x0e ; '.'
000000000000c2e5         db  0x60 ; '`'
000000000000c2e6         db  0x03 ; '.'
000000000000c2e7         db  0xa4 ; '.'
000000000000c2e8         db  0x02 ; '.'
000000000000c2e9         db  0x0a ; '.'
000000000000c2ea         db  0x0e ; '.'
000000000000c2eb         db  0x38 ; '8'
000000000000c2ec         db  0x44 ; 'D'
000000000000c2ed         db  0x0e ; '.'
000000000000c2ee         db  0x30 ; '0'
000000000000c2ef         db  0x41 ; 'A'
000000000000c2f0         db  0x0e ; '.'
000000000000c2f1         db  0x28 ; '('
000000000000c2f2         db  0x42 ; 'B'
000000000000c2f3         db  0x0e ; '.'
000000000000c2f4         db  0x20 ; ' '
000000000000c2f5         db  0x42 ; 'B'
000000000000c2f6         db  0x0e ; '.'
000000000000c2f7         db  0x18 ; '.'
000000000000c2f8         db  0x42 ; 'B'
000000000000c2f9         db  0x0e ; '.'
000000000000c2fa         db  0x10 ; '.'
000000000000c2fb         db  0x42 ; 'B'
000000000000c2fc         db  0x0e ; '.'
000000000000c2fd         db  0x08 ; '.'
000000000000c2fe         db  0x41 ; 'A'
000000000000c2ff         db  0x0b ; '.'
000000000000c300         dd         0x0000002c                                  ; Length of the record
000000000000c304         dd         0x00000de4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c308         db         0x88, 0xb2, 2 dup (0xff)                    ; begin 0x7590
000000000000c30c         db         0x82, 0x01, 2 dup (0x00)                    ; length 0x182 (end at 0x7712)
000000000000c310         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c311         db  0x42 ; 'B'
000000000000c312         db  0x0e ; '.'
000000000000c313         db  0x10 ; '.'
000000000000c314         db  0x8c ; '.'
000000000000c315         db  0x02 ; '.'
000000000000c316         db  0x41 ; 'A'
000000000000c317         db  0x0e ; '.'
000000000000c318         db  0x18 ; '.'
000000000000c319         db  0x86 ; '.'
000000000000c31a         db  0x03 ; '.'
000000000000c31b         db  0x44 ; 'D'
000000000000c31c         db  0x0e ; '.'
000000000000c31d         db  0x20 ; ' '
000000000000c31e         db  0x83 ; '.'
000000000000c31f         db  0x04 ; '.'
000000000000c320         db  0x02 ; '.'
000000000000c321         db  0xc2 ; '.'
000000000000c322         db  0x0a ; '.'
000000000000c323         db  0x0e ; '.'
000000000000c324         db  0x18 ; '.'
000000000000c325         db  0x41 ; 'A'
000000000000c326         db  0x0e ; '.'
000000000000c327         db  0x10 ; '.'
000000000000c328         db  0x42 ; 'B'
000000000000c329         db  0x0e ; '.'
000000000000c32a         db  0x08 ; '.'
000000000000c32b         db  0x44 ; 'D'
000000000000c32c         db  0x0b ; '.'
000000000000c32d         db  0x00 ; '.'
000000000000c32e         db  0x00 ; '.'
000000000000c32f         db  0x00 ; '.'
000000000000c330         dd         0x00000060                                  ; Length of the record
000000000000c334         dd         0x00000e14                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c338         db         0xe8, 0xb3, 2 dup (0xff)                    ; begin 0x7720
000000000000c33c         db         0x78, 0x07, 2 dup (0x00)                    ; length 0x778 (end at 0x7e98)
000000000000c340         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c341         db  0x42 ; 'B'
000000000000c342         db  0x0e ; '.'
000000000000c343         db  0x10 ; '.'
000000000000c344         db  0x8e ; '.'
000000000000c345         db  0x02 ; '.'
000000000000c346         db  0x42 ; 'B'
000000000000c347         db  0x0e ; '.'
000000000000c348         db  0x18 ; '.'
000000000000c349         db  0x8d ; '.'
000000000000c34a         db  0x03 ; '.'
000000000000c34b         db  0x42 ; 'B'
000000000000c34c         db  0x0e ; '.'
000000000000c34d         db  0x20 ; ' '
000000000000c34e         db  0x8c ; '.'
000000000000c34f         db  0x04 ; '.'
000000000000c350         db  0x41 ; 'A'
000000000000c351         db  0x0e ; '.'
000000000000c352         db  0x28 ; '('
000000000000c353         db  0x86 ; '.'
000000000000c354         db  0x05 ; '.'
000000000000c355         db  0x41 ; 'A'
000000000000c356         db  0x0e ; '.'
000000000000c357         db  0x30 ; '0'
000000000000c358         db  0x83 ; '.'
000000000000c359         db  0x06 ; '.'
000000000000c35a         db  0x03 ; '.'
000000000000c35b         db  0x19 ; '.'
000000000000c35c         db  0x01 ; '.'
000000000000c35d         db  0x0a ; '.'
000000000000c35e         db  0x0e ; '.'
000000000000c35f         db  0x28 ; '('
000000000000c360         db  0x44 ; 'D'
000000000000c361         db  0x0e ; '.'
000000000000c362         db  0x20 ; ' '
000000000000c363         db  0x42 ; 'B'
000000000000c364         db  0x0e ; '.'
000000000000c365         db  0x18 ; '.'
000000000000c366         db  0x42 ; 'B'
000000000000c367         db  0x0e ; '.'
000000000000c368         db  0x10 ; '.'
000000000000c369         db  0x42 ; 'B'
000000000000c36a         db  0x0e ; '.'
000000000000c36b         db  0x08 ; '.'
000000000000c36c         db  0x45 ; 'E'
000000000000c36d         db  0x0b ; '.'
000000000000c36e         db  0x02 ; '.'
000000000000c36f         db  0x6b ; 'k'
000000000000c370         db  0x0a ; '.'
000000000000c371         db  0x0e ; '.'
000000000000c372         db  0x28 ; '('
000000000000c373         db  0x44 ; 'D'
000000000000c374         db  0x0e ; '.'
000000000000c375         db  0x20 ; ' '
000000000000c376         db  0x42 ; 'B'
000000000000c377         db  0x0e ; '.'
000000000000c378         db  0x18 ; '.'
000000000000c379         db  0x42 ; 'B'
000000000000c37a         db  0x0e ; '.'
000000000000c37b         db  0x10 ; '.'
000000000000c37c         db  0x42 ; 'B'
000000000000c37d         db  0x0e ; '.'
000000000000c37e         db  0x08 ; '.'
000000000000c37f         db  0x4b ; 'K'
000000000000c380         db  0x0b ; '.'
000000000000c381         db  0x02 ; '.'
000000000000c382         db  0xe2 ; '.'
000000000000c383         db  0x0a ; '.'
000000000000c384         db  0x0e ; '.'
000000000000c385         db  0x28 ; '('
000000000000c386         db  0x41 ; 'A'
000000000000c387         db  0x0e ; '.'
000000000000c388         db  0x20 ; ' '
000000000000c389         db  0x42 ; 'B'
000000000000c38a         db  0x0e ; '.'
000000000000c38b         db  0x18 ; '.'
000000000000c38c         db  0x42 ; 'B'
000000000000c38d         db  0x0e ; '.'
000000000000c38e         db  0x10 ; '.'
000000000000c38f         db  0x42 ; 'B'
000000000000c390         db  0x0e ; '.'
000000000000c391         db  0x08 ; '.'
000000000000c392         db  0x47 ; 'G'
000000000000c393         db  0x0b ; '.'
000000000000c394         dd         0x00000014                                  ; Length of the record
000000000000c398         dd         0x00000e78                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c39c         db         0x04, 0xbb, 2 dup (0xff)                    ; begin 0x7ea0
000000000000c3a0         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x7ec9)
000000000000c3a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c3a5         db  0x54 ; 'T'
000000000000c3a6         db  0x0e ; '.'
000000000000c3a7         db  0x10 ; '.'
000000000000c3a8         db  0x54 ; 'T'
000000000000c3a9         db  0x0e ; '.'
000000000000c3aa         db  0x08 ; '.'
000000000000c3ab         db  0x00 ; '.'
000000000000c3ac         dd         0x00000060                                  ; Length of the record
000000000000c3b0         dd         0x00000e90                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c3b4         db         0x1c, 0xbb, 2 dup (0xff)                    ; begin 0x7ed0
000000000000c3b8         db         0x4e, 0x01, 2 dup (0x00)                    ; length 0x14e (end at 0x801e)
000000000000c3bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c3bd         db  0x42 ; 'B'
000000000000c3be         db  0x0e ; '.'
000000000000c3bf         db  0x10 ; '.'
000000000000c3c0         db  0x8e ; '.'
000000000000c3c1         db  0x02 ; '.'
000000000000c3c2         db  0x42 ; 'B'
000000000000c3c3         db  0x0e ; '.'
000000000000c3c4         db  0x18 ; '.'
000000000000c3c5         db  0x8d ; '.'
000000000000c3c6         db  0x03 ; '.'
000000000000c3c7         db  0x42 ; 'B'
000000000000c3c8         db  0x0e ; '.'
000000000000c3c9         db  0x20 ; ' '
000000000000c3ca         db  0x8c ; '.'
000000000000c3cb         db  0x04 ; '.'
000000000000c3cc         db  0x41 ; 'A'
000000000000c3cd         db  0x0e ; '.'
000000000000c3ce         db  0x28 ; '('
000000000000c3cf         db  0x86 ; '.'
000000000000c3d0         db  0x05 ; '.'
000000000000c3d1         db  0x44 ; 'D'
000000000000c3d2         db  0x0e ; '.'
000000000000c3d3         db  0x30 ; '0'
000000000000c3d4         db  0x83 ; '.'
000000000000c3d5         db  0x06 ; '.'
000000000000c3d6         db  0x02 ; '.'
000000000000c3d7         db  0x8a ; '.'
000000000000c3d8         db  0x0a ; '.'
000000000000c3d9         db  0x0e ; '.'
000000000000c3da         db  0x28 ; '('
000000000000c3db         db  0x41 ; 'A'
000000000000c3dc         db  0x0e ; '.'
000000000000c3dd         db  0x20 ; ' '
000000000000c3de         db  0x42 ; 'B'
000000000000c3df         db  0x0e ; '.'
000000000000c3e0         db  0x18 ; '.'
000000000000c3e1         db  0x42 ; 'B'
000000000000c3e2         db  0x0e ; '.'
000000000000c3e3         db  0x10 ; '.'
000000000000c3e4         db  0x42 ; 'B'
000000000000c3e5         db  0x0e ; '.'
000000000000c3e6         db  0x08 ; '.'
000000000000c3e7         db  0x44 ; 'D'
000000000000c3e8         db  0x0b ; '.'
000000000000c3e9         db  0x41 ; 'A'
000000000000c3ea         db  0x0a ; '.'
000000000000c3eb         db  0x0e ; '.'
000000000000c3ec         db  0x28 ; '('
000000000000c3ed         db  0x45 ; 'E'
000000000000c3ee         db  0x0e ; '.'
000000000000c3ef         db  0x20 ; ' '
000000000000c3f0         db  0x42 ; 'B'
000000000000c3f1         db  0x0e ; '.'
000000000000c3f2         db  0x18 ; '.'
000000000000c3f3         db  0x42 ; 'B'
000000000000c3f4         db  0x0e ; '.'
000000000000c3f5         db  0x10 ; '.'
000000000000c3f6         db  0x42 ; 'B'
000000000000c3f7         db  0x0e ; '.'
000000000000c3f8         db  0x08 ; '.'
000000000000c3f9         db  0x44 ; 'D'
000000000000c3fa         db  0x0b ; '.'
000000000000c3fb         db  0x41 ; 'A'
000000000000c3fc         db  0x0a ; '.'
000000000000c3fd         db  0x0e ; '.'
000000000000c3fe         db  0x28 ; '('
000000000000c3ff         db  0x43 ; 'C'
000000000000c400         db  0x0e ; '.'
000000000000c401         db  0x20 ; ' '
000000000000c402         db  0x42 ; 'B'
000000000000c403         db  0x0e ; '.'
000000000000c404         db  0x18 ; '.'
000000000000c405         db  0x42 ; 'B'
000000000000c406         db  0x0e ; '.'
000000000000c407         db  0x10 ; '.'
000000000000c408         db  0x42 ; 'B'
000000000000c409         db  0x0e ; '.'
000000000000c40a         db  0x08 ; '.'
000000000000c40b         db  0x46 ; 'F'
000000000000c40c         db  0x0b ; '.'
000000000000c40d         db  0x00 ; '.'
000000000000c40e         db  0x00 ; '.'
000000000000c40f         db  0x00 ; '.'
000000000000c410         dd         0x0000003c                                  ; Length of the record
000000000000c414         dd         0x00000ef4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c418         db         0x08, 0xbc, 2 dup (0xff)                    ; begin 0x8020
000000000000c41c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x80a3)
000000000000c420         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c421         db  0x42 ; 'B'
000000000000c422         db  0x0e ; '.'
000000000000c423         db  0x10 ; '.'
000000000000c424         db  0x8d ; '.'
000000000000c425         db  0x02 ; '.'
000000000000c426         db  0x42 ; 'B'
000000000000c427         db  0x0e ; '.'
000000000000c428         db  0x18 ; '.'
000000000000c429         db  0x8c ; '.'
000000000000c42a         db  0x03 ; '.'
000000000000c42b         db  0x44 ; 'D'
000000000000c42c         db  0x0e ; '.'
000000000000c42d         db  0x20 ; ' '
000000000000c42e         db  0x86 ; '.'
000000000000c42f         db  0x04 ; '.'
000000000000c430         db  0x41 ; 'A'
000000000000c431         db  0x0e ; '.'
000000000000c432         db  0x28 ; '('
000000000000c433         db  0x83 ; '.'
000000000000c434         db  0x05 ; '.'
000000000000c435         db  0x4a ; 'J'
000000000000c436         db  0x0e ; '.'
000000000000c437         db  0x40 ; '@'
000000000000c438         db  0x02 ; '.'
000000000000c439         db  0x64 ; 'd'
000000000000c43a         db  0x0a ; '.'
000000000000c43b         db  0x0e ; '.'
000000000000c43c         db  0x28 ; '('
000000000000c43d         db  0x41 ; 'A'
000000000000c43e         db  0x0e ; '.'
000000000000c43f         db  0x20 ; ' '
000000000000c440         db  0x41 ; 'A'
000000000000c441         db  0x0e ; '.'
000000000000c442         db  0x18 ; '.'
000000000000c443         db  0x42 ; 'B'
000000000000c444         db  0x0e ; '.'
000000000000c445         db  0x10 ; '.'
000000000000c446         db  0x42 ; 'B'
000000000000c447         db  0x0e ; '.'
000000000000c448         db  0x08 ; '.'
000000000000c449         db  0x41 ; 'A'
000000000000c44a         db  0x0b ; '.'
000000000000c44b         db  0x00 ; '.'
000000000000c44c         db  0x00 ; '.'
000000000000c44d         db  0x00 ; '.'
000000000000c44e         db  0x00 ; '.'
000000000000c44f         db  0x00 ; '.'
000000000000c450         dd         0x0000004c                                  ; Length of the record
000000000000c454         dd         0x00000f34                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c458         db         0x58, 0xbc, 2 dup (0xff)                    ; begin 0x80b0
000000000000c45c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x812d)
000000000000c460         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c461         db  0x42 ; 'B'
000000000000c462         db  0x0e ; '.'
000000000000c463         db  0x10 ; '.'
000000000000c464         db  0x8c ; '.'
000000000000c465         db  0x02 ; '.'
000000000000c466         db  0x41 ; 'A'
000000000000c467         db  0x0e ; '.'
000000000000c468         db  0x18 ; '.'
000000000000c469         db  0x86 ; '.'
000000000000c46a         db  0x03 ; '.'
000000000000c46b         db  0x44 ; 'D'
000000000000c46c         db  0x0e ; '.'
000000000000c46d         db  0x20 ; ' '
000000000000c46e         db  0x83 ; '.'
000000000000c46f         db  0x04 ; '.'
000000000000c470         db  0x69 ; 'i'
000000000000c471         db  0x0a ; '.'
000000000000c472         db  0x0e ; '.'
000000000000c473         db  0x18 ; '.'
000000000000c474         db  0x41 ; 'A'
000000000000c475         db  0x0e ; '.'
000000000000c476         db  0x10 ; '.'
000000000000c477         db  0x42 ; 'B'
000000000000c478         db  0x0e ; '.'
000000000000c479         db  0x08 ; '.'
000000000000c47a         db  0x45 ; 'E'
000000000000c47b         db  0x0b ; '.'
000000000000c47c         db  0x55 ; 'U'
000000000000c47d         db  0x0a ; '.'
000000000000c47e         db  0x0e ; '.'
000000000000c47f         db  0x18 ; '.'
000000000000c480         db  0x41 ; 'A'
000000000000c481         db  0x0e ; '.'
000000000000c482         db  0x10 ; '.'
000000000000c483         db  0x42 ; 'B'
000000000000c484         db  0x0e ; '.'
000000000000c485         db  0x08 ; '.'
000000000000c486         db  0x48 ; 'H'
000000000000c487         db  0x0b ; '.'
000000000000c488         db  0x41 ; 'A'
000000000000c489         db  0x0a ; '.'
000000000000c48a         db  0x0e ; '.'
000000000000c48b         db  0x18 ; '.'
000000000000c48c         db  0x46 ; 'F'
000000000000c48d         db  0x0e ; '.'
000000000000c48e         db  0x10 ; '.'
000000000000c48f         db  0x42 ; 'B'
000000000000c490         db  0x0e ; '.'
000000000000c491         db  0x08 ; '.'
000000000000c492         db  0x47 ; 'G'
000000000000c493         db  0x0b ; '.'
000000000000c494         db  0x49 ; 'I'
000000000000c495         db  0x0e ; '.'
000000000000c496         db  0x18 ; '.'
000000000000c497         db  0x41 ; 'A'
000000000000c498         db  0x0e ; '.'
000000000000c499         db  0x10 ; '.'
000000000000c49a         db  0x42 ; 'B'
000000000000c49b         db  0x0e ; '.'
000000000000c49c         db  0x08 ; '.'
000000000000c49d         db  0x00 ; '.'
000000000000c49e         db  0x00 ; '.'
000000000000c49f         db  0x00 ; '.'
000000000000c4a0         dd         0x00000010                                  ; Length of the record
000000000000c4a4         dd         0x00000f84                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c4a8         db         0x88, 0xbc, 2 dup (0xff)                    ; begin 0x8130
000000000000c4ac         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x8140)
000000000000c4b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4b1         align      4
000000000000c4b4         dd         0x00000018                                  ; Length of the record
000000000000c4b8         dd         0x00000f98                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c4bc         db         0x84, 0xbc, 2 dup (0xff)                    ; begin 0x8140
000000000000c4c0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x81ca)
000000000000c4c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4c5         db  0x02 ; '.'
000000000000c4c6         db  0x80 ; '.'
000000000000c4c7         db  0x0e ; '.'
000000000000c4c8         db  0x10 ; '.'
000000000000c4c9         db  0x00 ; '.'
000000000000c4ca         db  0x00 ; '.'
000000000000c4cb         db  0x00 ; '.'
000000000000c4cc         db  0x00 ; '.'
000000000000c4cd         db  0x00 ; '.'
000000000000c4ce         db  0x00 ; '.'
000000000000c4cf         db  0x00 ; '.'
000000000000c4d0         dd         0x0000001c                                  ; Length of the record
000000000000c4d4         dd         0x00000fb4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c4d8         db         0xf8, 0xbc, 2 dup (0xff)                    ; begin 0x81d0
000000000000c4dc         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x823e)
000000000000c4e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4e1         db  0x44 ; 'D'
000000000000c4e2         db  0x0e ; '.'
000000000000c4e3         db  0x60 ; '`'
000000000000c4e4         db  0x7f ; '.'
000000000000c4e5         db  0x0a ; '.'
000000000000c4e6         db  0x0e ; '.'
000000000000c4e7         db  0x08 ; '.'
000000000000c4e8         db  0x45 ; 'E'
000000000000c4e9         db  0x0b ; '.'
000000000000c4ea         db  0x00 ; '.'
000000000000c4eb         db  0x00 ; '.'
000000000000c4ec         db  0x00 ; '.'
000000000000c4ed         db  0x00 ; '.'
000000000000c4ee         db  0x00 ; '.'
000000000000c4ef         db  0x00 ; '.'
000000000000c4f0         dd         0x0000001c                                  ; Length of the record
000000000000c4f4         dd         0x00000fd4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c4f8         db         0x48, 0xbd, 2 dup (0xff)                    ; begin 0x8240
000000000000c4fc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x82a0)
000000000000c500         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c501         db  0x44 ; 'D'
000000000000c502         db  0x0e ; '.'
000000000000c503         db  0x10 ; '.'
000000000000c504         db  0x75 ; 'u'
000000000000c505         db  0x0a ; '.'
000000000000c506         db  0x0e ; '.'
000000000000c507         db  0x08 ; '.'
000000000000c508         db  0x47 ; 'G'
000000000000c509         db  0x0b ; '.'
000000000000c50a         db  0x5f ; '_'
000000000000c50b         db  0x0e ; '.'
000000000000c50c         db  0x08 ; '.'
000000000000c50d         db  0x00 ; '.'
000000000000c50e         db  0x00 ; '.'
000000000000c50f         db  0x00 ; '.'
000000000000c510         dd         0x00000010                                  ; Length of the record
000000000000c514         dd         0x00000ff4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c518         db         0x88, 0xbd, 2 dup (0xff)                    ; begin 0x82a0
000000000000c51c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x8333)
000000000000c520         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c521         align      4
000000000000c524         dd         0x00000010                                  ; Length of the record
000000000000c528         dd         0x00001008                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c52c         db         0x14, 0xbe, 2 dup (0xff)                    ; begin 0x8340
000000000000c530         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x8350)
000000000000c534         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c535         align      8
000000000000c538         dd         0x00000010                                  ; Length of the record
000000000000c53c         dd         0x0000101c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c540         db         0x10, 0xbe, 2 dup (0xff)                    ; begin 0x8350
000000000000c544         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x8357)
000000000000c548         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c549         align      4
000000000000c54c         dd         0x00000018                                  ; Length of the record
000000000000c550         dd         0x00001030                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c554         db         0x0c, 0xbe, 2 dup (0xff)                    ; begin 0x8360
000000000000c558         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x8382)
000000000000c55c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c55d         db  0x41 ; 'A'
000000000000c55e         db  0x0e ; '.'
000000000000c55f         db  0x10 ; '.'
000000000000c560         db  0x83 ; '.'
000000000000c561         db  0x02 ; '.'
000000000000c562         db  0x5b ; '['
000000000000c563         db  0x0a ; '.'
000000000000c564         db  0x0e ; '.'
000000000000c565         db  0x08 ; '.'
000000000000c566         db  0x41 ; 'A'
000000000000c567         db  0x0b ; '.'
000000000000c568         dd         0x0000005c                                  ; Length of the record
000000000000c56c         dd         0x0000104c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c570         db         0x20, 0xbe, 2 dup (0xff)                    ; begin 0x8390
000000000000c574         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x84ae)
000000000000c578         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c579         db  0x42 ; 'B'
000000000000c57a         db  0x0e ; '.'
000000000000c57b         db  0x10 ; '.'
000000000000c57c         db  0x8e ; '.'
000000000000c57d         db  0x02 ; '.'
000000000000c57e         db  0x42 ; 'B'
000000000000c57f         db  0x0e ; '.'
000000000000c580         db  0x18 ; '.'
000000000000c581         db  0x8d ; '.'
000000000000c582         db  0x03 ; '.'
000000000000c583         db  0x45 ; 'E'
000000000000c584         db  0x0e ; '.'
000000000000c585         db  0x20 ; ' '
000000000000c586         db  0x8c ; '.'
000000000000c587         db  0x04 ; '.'
000000000000c588         db  0x41 ; 'A'
000000000000c589         db  0x0e ; '.'
000000000000c58a         db  0x28 ; '('
000000000000c58b         db  0x86 ; '.'
000000000000c58c         db  0x05 ; '.'
000000000000c58d         db  0x44 ; 'D'
000000000000c58e         db  0x0e ; '.'
000000000000c58f         db  0x30 ; '0'
000000000000c590         db  0x83 ; '.'
000000000000c591         db  0x06 ; '.'
000000000000c592         db  0x02 ; '.'
000000000000c593         db  0xa1 ; '.'
000000000000c594         db  0x0a ; '.'
000000000000c595         db  0x0e ; '.'
000000000000c596         db  0x28 ; '('
000000000000c597         db  0x44 ; 'D'
000000000000c598         db  0x0e ; '.'
000000000000c599         db  0x20 ; ' '
000000000000c59a         db  0x42 ; 'B'
000000000000c59b         db  0x0e ; '.'
000000000000c59c         db  0x18 ; '.'
000000000000c59d         db  0x42 ; 'B'
000000000000c59e         db  0x0e ; '.'
000000000000c59f         db  0x10 ; '.'
000000000000c5a0         db  0x42 ; 'B'
000000000000c5a1         db  0x0e ; '.'
000000000000c5a2         db  0x08 ; '.'
000000000000c5a3         db  0x47 ; 'G'
000000000000c5a4         db  0x0b ; '.'
000000000000c5a5         db  0x71 ; 'q'
000000000000c5a6         db  0x0a ; '.'
000000000000c5a7         db  0x0e ; '.'
000000000000c5a8         db  0x28 ; '('
000000000000c5a9         db  0x41 ; 'A'
000000000000c5aa         db  0x0e ; '.'
000000000000c5ab         db  0x20 ; ' '
000000000000c5ac         db  0x42 ; 'B'
000000000000c5ad         db  0x0e ; '.'
000000000000c5ae         db  0x18 ; '.'
000000000000c5af         db  0x42 ; 'B'
000000000000c5b0         db  0x0e ; '.'
000000000000c5b1         db  0x10 ; '.'
000000000000c5b2         db  0x42 ; 'B'
000000000000c5b3         db  0x0e ; '.'
000000000000c5b4         db  0x08 ; '.'
000000000000c5b5         db  0x48 ; 'H'
000000000000c5b6         db  0x0b ; '.'
000000000000c5b7         db  0x53 ; 'S'
000000000000c5b8         db  0x0e ; '.'
000000000000c5b9         db  0x28 ; '('
000000000000c5ba         db  0x44 ; 'D'
000000000000c5bb         db  0x0e ; '.'
000000000000c5bc         db  0x20 ; ' '
000000000000c5bd         db  0x42 ; 'B'
000000000000c5be         db  0x0e ; '.'
000000000000c5bf         db  0x18 ; '.'
000000000000c5c0         db  0x42 ; 'B'
000000000000c5c1         db  0x0e ; '.'
000000000000c5c2         db  0x10 ; '.'
000000000000c5c3         db  0x42 ; 'B'
000000000000c5c4         db  0x0e ; '.'
000000000000c5c5         db  0x08 ; '.'
000000000000c5c6         db  0x00 ; '.'
000000000000c5c7         db  0x00 ; '.'
000000000000c5c8         dd         0x00000010                                  ; Length of the record
000000000000c5cc         dd         0x000010ac                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c5d0         db         0xe0, 0xbe, 2 dup (0xff)                    ; begin 0x84b0
000000000000c5d4         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x8527)
000000000000c5d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5d9         align      4
000000000000c5dc         dd         0x0000005c                                  ; Length of the record
000000000000c5e0         dd         0x000010c0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c5e4         db         0x4c, 0xbf, 2 dup (0xff)                    ; begin 0x8530
000000000000c5e8         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x8670)
000000000000c5ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5ed         db  0x42 ; 'B'
000000000000c5ee         db  0x0e ; '.'
000000000000c5ef         db  0x10 ; '.'
000000000000c5f0         db  0x8f ; '.'
000000000000c5f1         db  0x02 ; '.'
000000000000c5f2         db  0x42 ; 'B'
000000000000c5f3         db  0x0e ; '.'
000000000000c5f4         db  0x18 ; '.'
000000000000c5f5         db  0x8e ; '.'
000000000000c5f6         db  0x03 ; '.'
000000000000c5f7         db  0x42 ; 'B'
000000000000c5f8         db  0x0e ; '.'
000000000000c5f9         db  0x20 ; ' '
000000000000c5fa         db  0x8d ; '.'
000000000000c5fb         db  0x04 ; '.'
000000000000c5fc         db  0x42 ; 'B'
000000000000c5fd         db  0x0e ; '.'
000000000000c5fe         db  0x28 ; '('
000000000000c5ff         db  0x8c ; '.'
000000000000c600         db  0x05 ; '.'
000000000000c601         db  0x41 ; 'A'
000000000000c602         db  0x0e ; '.'
000000000000c603         db  0x30 ; '0'
000000000000c604         db  0x86 ; '.'
000000000000c605         db  0x06 ; '.'
000000000000c606         db  0x41 ; 'A'
000000000000c607         db  0x0e ; '.'
000000000000c608         db  0x38 ; '8'
000000000000c609         db  0x83 ; '.'
000000000000c60a         db  0x07 ; '.'
000000000000c60b         db  0x44 ; 'D'
000000000000c60c         db  0x0e ; '.'
000000000000c60d         db  0x40 ; '@'
000000000000c60e         db  0x02 ; '.'
000000000000c60f         db  0xee ; '.'
000000000000c610         db  0x0a ; '.'
000000000000c611         db  0x0e ; '.'
000000000000c612         db  0x38 ; '8'
000000000000c613         db  0x46 ; 'F'
000000000000c614         db  0x0e ; '.'
000000000000c615         db  0x30 ; '0'
000000000000c616         db  0x41 ; 'A'
000000000000c617         db  0x0e ; '.'
000000000000c618         db  0x28 ; '('
000000000000c619         db  0x42 ; 'B'
000000000000c61a         db  0x0e ; '.'
000000000000c61b         db  0x20 ; ' '
000000000000c61c         db  0x42 ; 'B'
000000000000c61d         db  0x0e ; '.'
000000000000c61e         db  0x18 ; '.'
000000000000c61f         db  0x42 ; 'B'
000000000000c620         db  0x0e ; '.'
000000000000c621         db  0x10 ; '.'
000000000000c622         db  0x42 ; 'B'
000000000000c623         db  0x0e ; '.'
000000000000c624         db  0x08 ; '.'
000000000000c625         db  0x45 ; 'E'
000000000000c626         db  0x0b ; '.'
000000000000c627         db  0x63 ; 'c'
000000000000c628         db  0x0e ; '.'
000000000000c629         db  0x38 ; '8'
000000000000c62a         db  0x43 ; 'C'
000000000000c62b         db  0x0e ; '.'
000000000000c62c         db  0x30 ; '0'
000000000000c62d         db  0x41 ; 'A'
000000000000c62e         db  0x0e ; '.'
000000000000c62f         db  0x28 ; '('
000000000000c630         db  0x42 ; 'B'
000000000000c631         db  0x0e ; '.'
000000000000c632         db  0x20 ; ' '
000000000000c633         db  0x42 ; 'B'
000000000000c634         db  0x0e ; '.'
000000000000c635         db  0x18 ; '.'
000000000000c636         db  0x42 ; 'B'
000000000000c637         db  0x0e ; '.'
000000000000c638         db  0x10 ; '.'
000000000000c639         db  0x42 ; 'B'
000000000000c63a         db  0x0e ; '.'
000000000000c63b         db  0x08 ; '.'
000000000000c63c         dd         0x00000010                                  ; Length of the record
000000000000c640         dd         0x00001120                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c644         db         0x2c, 0xc0, 2 dup (0xff)                    ; begin 0x8670
000000000000c648         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8675)
000000000000c64c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c64d         align      16
000000000000c650         dd         0x00000010                                  ; Length of the record
000000000000c654         dd         0x00001134                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c658         db         0x28, 0xc0, 2 dup (0xff)                    ; begin 0x8680
000000000000c65c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8685)
000000000000c660         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c661         align      4
000000000000c664         dd         0x00000010                                  ; Length of the record
000000000000c668         dd         0x00001148                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c66c         db         0x24, 0xc0, 2 dup (0xff)                    ; begin 0x8690
000000000000c670         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8695)
000000000000c674         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c675         align      8
000000000000c678         dd         0x00000010                                  ; Length of the record
000000000000c67c         dd         0x0000115c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c680         db         0x20, 0xc0, 2 dup (0xff)                    ; begin 0x86a0
000000000000c684         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x86e9)
000000000000c688         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c689         align      4
000000000000c68c         dd         0x00000010                                  ; Length of the record
000000000000c690         dd         0x00001170                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c694         db         0x5c, 0xc0, 2 dup (0xff)                    ; begin 0x86f0
000000000000c698         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x8748)
000000000000c69c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c69d         align      32
000000000000c6a0         dd         0x00000038                                  ; Length of the record
000000000000c6a4         dd         0x00001184                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c6a8         db         0xa8, 0xc0, 2 dup (0xff)                    ; begin 0x8750
000000000000c6ac         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x8897)
000000000000c6b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6b1         db  0x42 ; 'B'
000000000000c6b2         db  0x0e ; '.'
000000000000c6b3         db  0x10 ; '.'
000000000000c6b4         db  0x8d ; '.'
000000000000c6b5         db  0x02 ; '.'
000000000000c6b6         db  0x42 ; 'B'
000000000000c6b7         db  0x0e ; '.'
000000000000c6b8         db  0x18 ; '.'
000000000000c6b9         db  0x8c ; '.'
000000000000c6ba         db  0x03 ; '.'
000000000000c6bb         db  0x44 ; 'D'
000000000000c6bc         db  0x0e ; '.'
000000000000c6bd         db  0x20 ; ' '
000000000000c6be         db  0x86 ; '.'
000000000000c6bf         db  0x04 ; '.'
000000000000c6c0         db  0x41 ; 'A'
000000000000c6c1         db  0x0e ; '.'
000000000000c6c2         db  0x28 ; '('
000000000000c6c3         db  0x83 ; '.'
000000000000c6c4         db  0x05 ; '.'
000000000000c6c5         db  0x46 ; 'F'
000000000000c6c6         db  0x0e ; '.'
000000000000c6c7         db  0x30 ; '0'
000000000000c6c8         db  0x02 ; '.'
000000000000c6c9         db  0xcd ; '.'
000000000000c6ca         db  0x0a ; '.'
000000000000c6cb         db  0x0e ; '.'
000000000000c6cc         db  0x28 ; '('
000000000000c6cd         db  0x47 ; 'G'
000000000000c6ce         db  0x0e ; '.'
000000000000c6cf         db  0x20 ; ' '
000000000000c6d0         db  0x41 ; 'A'
000000000000c6d1         db  0x0e ; '.'
000000000000c6d2         db  0x18 ; '.'
000000000000c6d3         db  0x42 ; 'B'
000000000000c6d4         db  0x0e ; '.'
000000000000c6d5         db  0x10 ; '.'
000000000000c6d6         db  0x42 ; 'B'
000000000000c6d7         db  0x0e ; '.'
000000000000c6d8         db  0x08 ; '.'
000000000000c6d9         db  0x58 ; 'X'
000000000000c6da         db  0x0b ; '.'
000000000000c6db         db  0x00 ; '.'
000000000000c6dc         dd         0x00000034                                  ; Length of the record
000000000000c6e0         dd         0x000011c0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c6e4         db         0xbc, 0xc1, 2 dup (0xff)                    ; begin 0x88a0
000000000000c6e8         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x88fb)
000000000000c6ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6ed         db  0x42 ; 'B'
000000000000c6ee         db  0x0e ; '.'
000000000000c6ef         db  0x10 ; '.'
000000000000c6f0         db  0x8c ; '.'
000000000000c6f1         db  0x02 ; '.'
000000000000c6f2         db  0x41 ; 'A'
000000000000c6f3         db  0x0e ; '.'
000000000000c6f4         db  0x18 ; '.'
000000000000c6f5         db  0x86 ; '.'
000000000000c6f6         db  0x03 ; '.'
000000000000c6f7         db  0x44 ; 'D'
000000000000c6f8         db  0x0e ; '.'
000000000000c6f9         db  0x20 ; ' '
000000000000c6fa         db  0x83 ; '.'
000000000000c6fb         db  0x04 ; '.'
000000000000c6fc         db  0x79 ; 'y'
000000000000c6fd         db  0x0a ; '.'
000000000000c6fe         db  0x0e ; '.'
000000000000c6ff         db  0x18 ; '.'
000000000000c700         db  0x44 ; 'D'
000000000000c701         db  0x0e ; '.'
000000000000c702         db  0x10 ; '.'
000000000000c703         db  0x42 ; 'B'
000000000000c704         db  0x0e ; '.'
000000000000c705         db  0x08 ; '.'
000000000000c706         db  0x4a ; 'J'
000000000000c707         db  0x0b ; '.'
000000000000c708         db  0x44 ; 'D'
000000000000c709         db  0x0e ; '.'
000000000000c70a         db  0x18 ; '.'
000000000000c70b         db  0x41 ; 'A'
000000000000c70c         db  0x0e ; '.'
000000000000c70d         db  0x10 ; '.'
000000000000c70e         db  0x45 ; 'E'
000000000000c70f         db  0x0e ; '.'
000000000000c710         db  0x08 ; '.'
000000000000c711         db  0x00 ; '.'
000000000000c712         db  0x00 ; '.'
000000000000c713         db  0x00 ; '.'
000000000000c714         dd         0x00000010                                  ; Length of the record
000000000000c718         dd         0x000011f8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c71c         db         0xe4, 0xc1, 2 dup (0xff)                    ; begin 0x8900
000000000000c720         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x8941)
000000000000c724         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c725         db  0x7c ; '|'
000000000000c726         db  0x0e ; '.'
000000000000c727         db  0x10 ; '.'
000000000000c728         dd         0x00000030                                  ; Length of the record
000000000000c72c         dd         0x0000120c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c730         db         0x20, 0xc2, 2 dup (0xff)                    ; begin 0x8950
000000000000c734         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x89c2)
000000000000c738         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c739         db  0x41 ; 'A'
000000000000c73a         db  0x0e ; '.'
000000000000c73b         db  0x10 ; '.'
000000000000c73c         db  0x86 ; '.'
000000000000c73d         db  0x02 ; '.'
000000000000c73e         db  0x41 ; 'A'
000000000000c73f         db  0x0e ; '.'
000000000000c740         db  0x18 ; '.'
000000000000c741         db  0x83 ; '.'
000000000000c742         db  0x03 ; '.'
000000000000c743         db  0x4a ; 'J'
000000000000c744         db  0x0e ; '.'
000000000000c745         db  0x20 ; ' '
000000000000c746         db  0x02 ; '.'
000000000000c747         db  0x53 ; 'S'
000000000000c748         db  0x0a ; '.'
000000000000c749         db  0x0e ; '.'
000000000000c74a         db  0x18 ; '.'
000000000000c74b         db  0x41 ; 'A'
000000000000c74c         db  0x0e ; '.'
000000000000c74d         db  0x10 ; '.'
000000000000c74e         db  0x41 ; 'A'
000000000000c74f         db  0x0e ; '.'
000000000000c750         db  0x08 ; '.'
000000000000c751         db  0x47 ; 'G'
000000000000c752         db  0x0b ; '.'
000000000000c753         db  0x47 ; 'G'
000000000000c754         db  0x0e ; '.'
000000000000c755         db  0x18 ; '.'
000000000000c756         db  0x41 ; 'A'
000000000000c757         db  0x0e ; '.'
000000000000c758         db  0x10 ; '.'
000000000000c759         db  0x41 ; 'A'
000000000000c75a         db  0x0e ; '.'
000000000000c75b         db  0x08 ; '.'
000000000000c75c         dd         0x00000010                                  ; Length of the record
000000000000c760         dd         0x00001240                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c764         db         0x6c, 0xc2, 2 dup (0xff)                    ; begin 0x89d0
000000000000c768         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x8a35)
000000000000c76c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c76d         align      16
000000000000c770         dd         0x00000048                                  ; Length of the record
000000000000c774         dd         0x00001254                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c778         db         0xc8, 0xc2, 2 dup (0xff)                    ; begin 0x8a40
000000000000c77c         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x8aaa)
000000000000c780         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c781         db  0x42 ; 'B'
000000000000c782         db  0x0e ; '.'
000000000000c783         db  0x10 ; '.'
000000000000c784         db  0x8f ; '.'
000000000000c785         db  0x02 ; '.'
000000000000c786         db  0x42 ; 'B'
000000000000c787         db  0x0e ; '.'
000000000000c788         db  0x18 ; '.'
000000000000c789         db  0x8e ; '.'
000000000000c78a         db  0x03 ; '.'
000000000000c78b         db  0x42 ; 'B'
000000000000c78c         db  0x0e ; '.'
000000000000c78d         db  0x20 ; ' '
000000000000c78e         db  0x8d ; '.'
000000000000c78f         db  0x04 ; '.'
000000000000c790         db  0x42 ; 'B'
000000000000c791         db  0x0e ; '.'
000000000000c792         db  0x28 ; '('
000000000000c793         db  0x8c ; '.'
000000000000c794         db  0x05 ; '.'
000000000000c795         db  0x41 ; 'A'
000000000000c796         db  0x0e ; '.'
000000000000c797         db  0x30 ; '0'
000000000000c798         db  0x86 ; '.'
000000000000c799         db  0x06 ; '.'
000000000000c79a         db  0x41 ; 'A'
000000000000c79b         db  0x0e ; '.'
000000000000c79c         db  0x38 ; '8'
000000000000c79d         db  0x83 ; '.'
000000000000c79e         db  0x07 ; '.'
000000000000c79f         db  0x44 ; 'D'
000000000000c7a0         db  0x0e ; '.'
000000000000c7a1         db  0x40 ; '@'
000000000000c7a2         db  0x02 ; '.'
000000000000c7a3         db  0x4a ; 'J'
000000000000c7a4         db  0x0a ; '.'
000000000000c7a5         db  0x0e ; '.'
000000000000c7a6         db  0x38 ; '8'
000000000000c7a7         db  0x44 ; 'D'
000000000000c7a8         db  0x0e ; '.'
000000000000c7a9         db  0x30 ; '0'
000000000000c7aa         db  0x41 ; 'A'
000000000000c7ab         db  0x0e ; '.'
000000000000c7ac         db  0x28 ; '('
000000000000c7ad         db  0x42 ; 'B'
000000000000c7ae         db  0x0e ; '.'
000000000000c7af         db  0x20 ; ' '
000000000000c7b0         db  0x42 ; 'B'
000000000000c7b1         db  0x0e ; '.'
000000000000c7b2         db  0x18 ; '.'
000000000000c7b3         db  0x42 ; 'B'
000000000000c7b4         db  0x0e ; '.'
000000000000c7b5         db  0x10 ; '.'
000000000000c7b6         db  0x42 ; 'B'
000000000000c7b7         db  0x0e ; '.'
000000000000c7b8         db  0x08 ; '.'
000000000000c7b9         db  0x41 ; 'A'
000000000000c7ba         db  0x0b ; '.'
000000000000c7bb         db  0x00 ; '.'
000000000000c7bc         dd         0x00000010                                  ; Length of the record
000000000000c7c0         dd         0x000012a0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c7c4         db         0xec, 0xc2, 2 dup (0xff)                    ; begin 0x8ab0
000000000000c7c8         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x8ae1)
000000000000c7cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7cd         align      16
000000000000c7d0         dd         0x00000010                                  ; Length of the record
000000000000c7d4         dd         0x000012b4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c7d8         db         0x18, 0xc3, 2 dup (0xff)                    ; begin 0x8af0
000000000000c7dc         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x8b10)
000000000000c7e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7e1         align      4
000000000000c7e4         dd         0x00000048                                  ; Length of the record
000000000000c7e8         dd         0x000012c8                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c7ec         db         0x24, 0xc3, 2 dup (0xff)                    ; begin 0x8b10
000000000000c7f0         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x8cc4)
000000000000c7f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7f5         db  0x42 ; 'B'
000000000000c7f6         db  0x0e ; '.'
000000000000c7f7         db  0x10 ; '.'
000000000000c7f8         db  0x8f ; '.'
000000000000c7f9         db  0x02 ; '.'
000000000000c7fa         db  0x42 ; 'B'
000000000000c7fb         db  0x0e ; '.'
000000000000c7fc         db  0x18 ; '.'
000000000000c7fd         db  0x8e ; '.'
000000000000c7fe         db  0x03 ; '.'
000000000000c7ff         db  0x49 ; 'I'
000000000000c800         db  0x0e ; '.'
000000000000c801         db  0x20 ; ' '
000000000000c802         db  0x8d ; '.'
000000000000c803         db  0x04 ; '.'
000000000000c804         db  0x42 ; 'B'
000000000000c805         db  0x0e ; '.'
000000000000c806         db  0x28 ; '('
000000000000c807         db  0x8c ; '.'
000000000000c808         db  0x05 ; '.'
000000000000c809         db  0x44 ; 'D'
000000000000c80a         db  0x0e ; '.'
000000000000c80b         db  0x30 ; '0'
000000000000c80c         db  0x86 ; '.'
000000000000c80d         db  0x06 ; '.'
000000000000c80e         db  0x41 ; 'A'
000000000000c80f         db  0x0e ; '.'
000000000000c810         db  0x38 ; '8'
000000000000c811         db  0x83 ; '.'
000000000000c812         db  0x07 ; '.'
000000000000c813         db  0x52 ; 'R'
000000000000c814         db  0x0e ; '.'
000000000000c815         db  0x40 ; '@'
000000000000c816         db  0x02 ; '.'
000000000000c817         db  0xd8 ; '.'
000000000000c818         db  0x0a ; '.'
000000000000c819         db  0x0e ; '.'
000000000000c81a         db  0x38 ; '8'
000000000000c81b         db  0x44 ; 'D'
000000000000c81c         db  0x0e ; '.'
000000000000c81d         db  0x30 ; '0'
000000000000c81e         db  0x41 ; 'A'
000000000000c81f         db  0x0e ; '.'
000000000000c820         db  0x28 ; '('
000000000000c821         db  0x42 ; 'B'
000000000000c822         db  0x0e ; '.'
000000000000c823         db  0x20 ; ' '
000000000000c824         db  0x42 ; 'B'
000000000000c825         db  0x0e ; '.'
000000000000c826         db  0x18 ; '.'
000000000000c827         db  0x42 ; 'B'
000000000000c828         db  0x0e ; '.'
000000000000c829         db  0x10 ; '.'
000000000000c82a         db  0x42 ; 'B'
000000000000c82b         db  0x0e ; '.'
000000000000c82c         db  0x08 ; '.'
000000000000c82d         db  0x45 ; 'E'
000000000000c82e         db  0x0b ; '.'
000000000000c82f         db  0x00 ; '.'
000000000000c830         dd         0x00000028                                  ; Length of the record
000000000000c834         dd         0x00001314                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c838         db         0x98, 0xc4, 2 dup (0xff)                    ; begin 0x8cd0
000000000000c83c         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x8d60)
000000000000c840         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c841         db  0x42 ; 'B'
000000000000c842         db  0x0e ; '.'
000000000000c843         db  0x10 ; '.'
000000000000c844         db  0x8c ; '.'
000000000000c845         db  0x02 ; '.'
000000000000c846         db  0x41 ; 'A'
000000000000c847         db  0x0e ; '.'
000000000000c848         db  0x18 ; '.'
000000000000c849         db  0x86 ; '.'
000000000000c84a         db  0x03 ; '.'
000000000000c84b         db  0x44 ; 'D'
000000000000c84c         db  0x0e ; '.'
000000000000c84d         db  0x20 ; ' '
000000000000c84e         db  0x83 ; '.'
000000000000c84f         db  0x04 ; '.'
000000000000c850         db  0x02 ; '.'
000000000000c851         db  0x85 ; '.'
000000000000c852         db  0x0e ; '.'
000000000000c853         db  0x18 ; '.'
000000000000c854         db  0x41 ; 'A'
000000000000c855         db  0x0e ; '.'
000000000000c856         db  0x10 ; '.'
000000000000c857         db  0x42 ; 'B'
000000000000c858         db  0x0e ; '.'
000000000000c859         db  0x08 ; '.'
000000000000c85a         db  0x00 ; '.'
000000000000c85b         db  0x00 ; '.'
000000000000c85c         dd         0x00000028                                  ; Length of the record
000000000000c860         dd         0x00001340                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c864         db         0xfc, 0xc4, 2 dup (0xff)                    ; begin 0x8d60
000000000000c868         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x8e36)
000000000000c86c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c86d         db  0x42 ; 'B'
000000000000c86e         db  0x0e ; '.'
000000000000c86f         db  0x10 ; '.'
000000000000c870         db  0x8c ; '.'
000000000000c871         db  0x02 ; '.'
000000000000c872         db  0x41 ; 'A'
000000000000c873         db  0x0e ; '.'
000000000000c874         db  0x18 ; '.'
000000000000c875         db  0x86 ; '.'
000000000000c876         db  0x03 ; '.'
000000000000c877         db  0x44 ; 'D'
000000000000c878         db  0x0e ; '.'
000000000000c879         db  0x20 ; ' '
000000000000c87a         db  0x83 ; '.'
000000000000c87b         db  0x04 ; '.'
000000000000c87c         db  0x02 ; '.'
000000000000c87d         db  0xc4 ; '.'
000000000000c87e         db  0x0e ; '.'
000000000000c87f         db  0x18 ; '.'
000000000000c880         db  0x44 ; 'D'
000000000000c881         db  0x0e ; '.'
000000000000c882         db  0x10 ; '.'
000000000000c883         db  0x42 ; 'B'
000000000000c884         db  0x0e ; '.'
000000000000c885         db  0x08 ; '.'
000000000000c886         db  0x00 ; '.'
000000000000c887         db  0x00 ; '.'
000000000000c888         dd         0x00000034                                  ; Length of the record
000000000000c88c         dd         0x0000136c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c890         db         0xb0, 0xc5, 2 dup (0xff)                    ; begin 0x8e40
000000000000c894         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x907e)
000000000000c898         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c899         db  0x42 ; 'B'
000000000000c89a         db  0x0e ; '.'
000000000000c89b         db  0x10 ; '.'
000000000000c89c         db  0x8c ; '.'
000000000000c89d         db  0x02 ; '.'
000000000000c89e         db  0x41 ; 'A'
000000000000c89f         db  0x0e ; '.'
000000000000c8a0         db  0x18 ; '.'
000000000000c8a1         db  0x86 ; '.'
000000000000c8a2         db  0x03 ; '.'
000000000000c8a3         db  0x44 ; 'D'
000000000000c8a4         db  0x0e ; '.'
000000000000c8a5         db  0x20 ; ' '
000000000000c8a6         db  0x83 ; '.'
000000000000c8a7         db  0x04 ; '.'
000000000000c8a8         db  0x44 ; 'D'
000000000000c8a9         db  0x0e ; '.'
000000000000c8aa         db  0x80 ; '.'
000000000000c8ab         db  0x01 ; '.'
000000000000c8ac         db  0x03 ; '.'
000000000000c8ad         db  0x91 ; '.'
000000000000c8ae         db  0x01 ; '.'
000000000000c8af         db  0x0a ; '.'
000000000000c8b0         db  0x0e ; '.'
000000000000c8b1         db  0x20 ; ' '
000000000000c8b2         db  0x41 ; 'A'
000000000000c8b3         db  0x0e ; '.'
000000000000c8b4         db  0x18 ; '.'
000000000000c8b5         db  0x41 ; 'A'
000000000000c8b6         db  0x0e ; '.'
000000000000c8b7         db  0x10 ; '.'
000000000000c8b8         db  0x42 ; 'B'
000000000000c8b9         db  0x0e ; '.'
000000000000c8ba         db  0x08 ; '.'
000000000000c8bb         db  0x48 ; 'H'
000000000000c8bc         db  0x0b ; '.'
000000000000c8bd         db  0x00 ; '.'
000000000000c8be         db  0x00 ; '.'
000000000000c8bf         db  0x00 ; '.'
000000000000c8c0         dd         0x00000038                                  ; Length of the record
000000000000c8c4         dd         0x000013a4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c8c8         db         0xb8, 0xc7, 2 dup (0xff)                    ; begin 0x9080
000000000000c8cc         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x9304)
000000000000c8d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8d1         db  0x42 ; 'B'
000000000000c8d2         db  0x0e ; '.'
000000000000c8d3         db  0x10 ; '.'
000000000000c8d4         db  0x8d ; '.'
000000000000c8d5         db  0x02 ; '.'
000000000000c8d6         db  0x42 ; 'B'
000000000000c8d7         db  0x0e ; '.'
000000000000c8d8         db  0x18 ; '.'
000000000000c8d9         db  0x8c ; '.'
000000000000c8da         db  0x03 ; '.'
000000000000c8db         db  0x41 ; 'A'
000000000000c8dc         db  0x0e ; '.'
000000000000c8dd         db  0x20 ; ' '
000000000000c8de         db  0x86 ; '.'
000000000000c8df         db  0x04 ; '.'
000000000000c8e0         db  0x41 ; 'A'
000000000000c8e1         db  0x0e ; '.'
000000000000c8e2         db  0x28 ; '('
000000000000c8e3         db  0x83 ; '.'
000000000000c8e4         db  0x05 ; '.'
000000000000c8e5         db  0x44 ; 'D'
000000000000c8e6         db  0x0e ; '.'
000000000000c8e7         db  0x40 ; '@'
000000000000c8e8         db  0x02 ; '.'
000000000000c8e9         db  0x5a ; 'Z'
000000000000c8ea         db  0x0a ; '.'
000000000000c8eb         db  0x0e ; '.'
000000000000c8ec         db  0x28 ; '('
000000000000c8ed         db  0x41 ; 'A'
000000000000c8ee         db  0x0e ; '.'
000000000000c8ef         db  0x20 ; ' '
000000000000c8f0         db  0x41 ; 'A'
000000000000c8f1         db  0x0e ; '.'
000000000000c8f2         db  0x18 ; '.'
000000000000c8f3         db  0x42 ; 'B'
000000000000c8f4         db  0x0e ; '.'
000000000000c8f5         db  0x10 ; '.'
000000000000c8f6         db  0x42 ; 'B'
000000000000c8f7         db  0x0e ; '.'
000000000000c8f8         db  0x08 ; '.'
000000000000c8f9         db  0x46 ; 'F'
000000000000c8fa         db  0x0b ; '.'
000000000000c8fb         db  0x00 ; '.'
000000000000c8fc         dd         0x00000020                                  ; Length of the record
000000000000c900         dd         0x000013e0                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c904         db         0x0c, 0xca, 2 dup (0xff)                    ; begin 0x9310
000000000000c908         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x9369)
000000000000c90c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c90d         db  0x41 ; 'A'
000000000000c90e         db  0x0e ; '.'
000000000000c90f         db  0x10 ; '.'
000000000000c910         db  0x83 ; '.'
000000000000c911         db  0x02 ; '.'
000000000000c912         db  0x47 ; 'G'
000000000000c913         db  0x0e ; '.'
000000000000c914         db  0x20 ; ' '
000000000000c915         db  0x7c ; '|'
000000000000c916         db  0x0a ; '.'
000000000000c917         db  0x0e ; '.'
000000000000c918         db  0x10 ; '.'
000000000000c919         db  0x41 ; 'A'
000000000000c91a         db  0x0e ; '.'
000000000000c91b         db  0x08 ; '.'
000000000000c91c         db  0x4b ; 'K'
000000000000c91d         db  0x0b ; '.'
000000000000c91e         db  0x00 ; '.'
000000000000c91f         db  0x00 ; '.'
000000000000c920         dd         0x00000034                                  ; Length of the record
000000000000c924         dd         0x00001404                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c928         db         0x48, 0xca, 2 dup (0xff)                    ; begin 0x9370
000000000000c92c         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x9573)
000000000000c930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c931         db  0x42 ; 'B'
000000000000c932         db  0x0e ; '.'
000000000000c933         db  0x10 ; '.'
000000000000c934         db  0x8c ; '.'
000000000000c935         db  0x02 ; '.'
000000000000c936         db  0x41 ; 'A'
000000000000c937         db  0x0e ; '.'
000000000000c938         db  0x18 ; '.'
000000000000c939         db  0x86 ; '.'
000000000000c93a         db  0x03 ; '.'
000000000000c93b         db  0x46 ; 'F'
000000000000c93c         db  0x0e ; '.'
000000000000c93d         db  0x20 ; ' '
000000000000c93e         db  0x83 ; '.'
000000000000c93f         db  0x04 ; '.'
000000000000c940         db  0x47 ; 'G'
000000000000c941         db  0x0e ; '.'
000000000000c942         db  0x30 ; '0'
000000000000c943         db  0x02 ; '.'
000000000000c944         db  0x4a ; 'J'
000000000000c945         db  0x0a ; '.'
000000000000c946         db  0x0e ; '.'
000000000000c947         db  0x20 ; ' '
000000000000c948         db  0x41 ; 'A'
000000000000c949         db  0x0e ; '.'
000000000000c94a         db  0x18 ; '.'
000000000000c94b         db  0x41 ; 'A'
000000000000c94c         db  0x0e ; '.'
000000000000c94d         db  0x10 ; '.'
000000000000c94e         db  0x42 ; 'B'
000000000000c94f         db  0x0e ; '.'
000000000000c950         db  0x08 ; '.'
000000000000c951         db  0x42 ; 'B'
000000000000c952         db  0x0b ; '.'
000000000000c953         db  0x00 ; '.'
000000000000c954         db  0x00 ; '.'
000000000000c955         db  0x00 ; '.'
000000000000c956         db  0x00 ; '.'
000000000000c957         db  0x00 ; '.'
000000000000c958         dd         0x00000010                                  ; Length of the record
000000000000c95c         dd         0x0000143c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c960         db         0x20, 0xcc, 2 dup (0xff)                    ; begin 0x9580
000000000000c964         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x959b)
000000000000c968         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c969         align      4
000000000000c96c         dd         0x00000010                                  ; Length of the record
000000000000c970         dd         0x00001450                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c974         db         0x2c, 0xcc, 2 dup (0xff)                    ; begin 0x95a0
000000000000c978         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x95a5)
000000000000c97c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c97d         align      128
000000000000c980         dd         0x00000010                                  ; Length of the record
000000000000c984         dd         0x00001464                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c988         db         0x28, 0xcc, 2 dup (0xff)                    ; begin 0x95b0
000000000000c98c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x95e5)
000000000000c990         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c991         align      4
000000000000c994         dd         0x00000010                                  ; Length of the record
000000000000c998         dd         0x00001478                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c99c         db         0x54, 0xcc, 2 dup (0xff)                    ; begin 0x95f0
000000000000c9a0         db         0x3e, 3 dup (0x00)                          ; length 0x3e (end at 0x962e)
000000000000c9a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9a5         db  0x79 ; 'y'
000000000000c9a6         db  0x0e ; '.'
000000000000c9a7         db  0x10 ; '.'
000000000000c9a8         dd         0x0000001c                                  ; Length of the record
000000000000c9ac         dd         0x0000148c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c9b0         db         0x80, 0xcc, 2 dup (0xff)                    ; begin 0x9630
000000000000c9b4         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x966c)
000000000000c9b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9b9         db  0x44 ; 'D'
000000000000c9ba         db  0x0e ; '.'
000000000000c9bb         db  0x10 ; '.'
000000000000c9bc         db  0x61 ; 'a'
000000000000c9bd         db  0x0a ; '.'
000000000000c9be         db  0x0e ; '.'
000000000000c9bf         db  0x08 ; '.'
000000000000c9c0         db  0x4b ; 'K'
000000000000c9c1         db  0x0b ; '.'
000000000000c9c2         db  0x4b ; 'K'
000000000000c9c3         db  0x0e ; '.'
000000000000c9c4         db  0x08 ; '.'
000000000000c9c5         db  0x00 ; '.'
000000000000c9c6         db  0x00 ; '.'
000000000000c9c7         db  0x00 ; '.'
000000000000c9c8         dd         0x0000001c                                  ; Length of the record
000000000000c9cc         dd         0x000014ac                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c9d0         db         0xa0, 0xcc, 2 dup (0xff)                    ; begin 0x9670
000000000000c9d4         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x96de)
000000000000c9d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9d9         db  0x44 ; 'D'
000000000000c9da         db  0x0e ; '.'
000000000000c9db         db  0x60 ; '`'
000000000000c9dc         db  0x7e ; '~'
000000000000c9dd         db  0x0a ; '.'
000000000000c9de         db  0x0e ; '.'
000000000000c9df         db  0x08 ; '.'
000000000000c9e0         db  0x46 ; 'F'
000000000000c9e1         db  0x0b ; '.'
000000000000c9e2         db  0x00 ; '.'
000000000000c9e3         db  0x00 ; '.'
000000000000c9e4         db  0x00 ; '.'
000000000000c9e5         db  0x00 ; '.'
000000000000c9e6         db  0x00 ; '.'
000000000000c9e7         db  0x00 ; '.'
000000000000c9e8         dd         0x0000005c                                  ; Length of the record
000000000000c9ec         dd         0x000014cc                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000c9f0         db         0xf0, 0xcc, 2 dup (0xff)                    ; begin 0x96e0
000000000000c9f4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x9760)
000000000000c9f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9f9         db  0x42 ; 'B'
000000000000c9fa         db  0x0e ; '.'
000000000000c9fb         db  0x10 ; '.'
000000000000c9fc         db  0x8d ; '.'
000000000000c9fd         db  0x02 ; '.'
000000000000c9fe         db  0x42 ; 'B'
000000000000c9ff         db  0x0e ; '.'
000000000000ca00         db  0x18 ; '.'
000000000000ca01         db  0x8c ; '.'
000000000000ca02         db  0x03 ; '.'
000000000000ca03         db  0x47 ; 'G'
000000000000ca04         db  0x0e ; '.'
000000000000ca05         db  0x20 ; ' '
000000000000ca06         db  0x86 ; '.'
000000000000ca07         db  0x04 ; '.'
000000000000ca08         db  0x41 ; 'A'
000000000000ca09         db  0x0e ; '.'
000000000000ca0a         db  0x28 ; '('
000000000000ca0b         db  0x83 ; '.'
000000000000ca0c         db  0x05 ; '.'
000000000000ca0d         db  0x49 ; 'I'
000000000000ca0e         db  0x0e ; '.'
000000000000ca0f         db  0x30 ; '0'
000000000000ca10         db  0x62 ; 'b'
000000000000ca11         db  0x0a ; '.'
000000000000ca12         db  0x0e ; '.'
000000000000ca13         db  0x28 ; '('
000000000000ca14         db  0x44 ; 'D'
000000000000ca15         db  0x0e ; '.'
000000000000ca16         db  0x20 ; ' '
000000000000ca17         db  0x41 ; 'A'
000000000000ca18         db  0x0e ; '.'
000000000000ca19         db  0x18 ; '.'
000000000000ca1a         db  0x42 ; 'B'
000000000000ca1b         db  0x0e ; '.'
000000000000ca1c         db  0x10 ; '.'
000000000000ca1d         db  0x42 ; 'B'
000000000000ca1e         db  0x0e ; '.'
000000000000ca1f         db  0x08 ; '.'
000000000000ca20         db  0x48 ; 'H'
000000000000ca21         db  0x0b ; '.'
000000000000ca22         db  0x5d ; ']'
000000000000ca23         db  0x0a ; '.'
000000000000ca24         db  0x0e ; '.'
000000000000ca25         db  0x28 ; '('
000000000000ca26         db  0x41 ; 'A'
000000000000ca27         db  0x0e ; '.'
000000000000ca28         db  0x20 ; ' '
000000000000ca29         db  0x41 ; 'A'
000000000000ca2a         db  0x0e ; '.'
000000000000ca2b         db  0x18 ; '.'
000000000000ca2c         db  0x42 ; 'B'
000000000000ca2d         db  0x0e ; '.'
000000000000ca2e         db  0x10 ; '.'
000000000000ca2f         db  0x42 ; 'B'
000000000000ca30         db  0x0e ; '.'
000000000000ca31         db  0x08 ; '.'
000000000000ca32         db  0x45 ; 'E'
000000000000ca33         db  0x0b ; '.'
000000000000ca34         db  0x44 ; 'D'
000000000000ca35         db  0x0e ; '.'
000000000000ca36         db  0x28 ; '('
000000000000ca37         db  0x43 ; 'C'
000000000000ca38         db  0x0e ; '.'
000000000000ca39         db  0x20 ; ' '
000000000000ca3a         db  0x44 ; 'D'
000000000000ca3b         db  0x0e ; '.'
000000000000ca3c         db  0x18 ; '.'
000000000000ca3d         db  0x42 ; 'B'
000000000000ca3e         db  0x0e ; '.'
000000000000ca3f         db  0x10 ; '.'
000000000000ca40         db  0x42 ; 'B'
000000000000ca41         db  0x0e ; '.'
000000000000ca42         db  0x08 ; '.'
000000000000ca43         db  0x00 ; '.'
000000000000ca44         db  0x00 ; '.'
000000000000ca45         db  0x00 ; '.'
000000000000ca46         db  0x00 ; '.'
000000000000ca47         db  0x00 ; '.'
000000000000ca48         dd         0x00000034                                  ; Length of the record
000000000000ca4c         dd         0x0000152c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ca50         db         0x10, 0xcd, 2 dup (0xff)                    ; begin 0x9760
000000000000ca54         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x979f)
000000000000ca58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca59         db  0x42 ; 'B'
000000000000ca5a         db  0x0e ; '.'
000000000000ca5b         db  0x10 ; '.'
000000000000ca5c         db  0x8d ; '.'
000000000000ca5d         db  0x02 ; '.'
000000000000ca5e         db  0x42 ; 'B'
000000000000ca5f         db  0x0e ; '.'
000000000000ca60         db  0x18 ; '.'
000000000000ca61         db  0x8c ; '.'
000000000000ca62         db  0x03 ; '.'
000000000000ca63         db  0x41 ; 'A'
000000000000ca64         db  0x0e ; '.'
000000000000ca65         db  0x20 ; ' '
000000000000ca66         db  0x86 ; '.'
000000000000ca67         db  0x04 ; '.'
000000000000ca68         db  0x41 ; 'A'
000000000000ca69         db  0x0e ; '.'
000000000000ca6a         db  0x28 ; '('
000000000000ca6b         db  0x83 ; '.'
000000000000ca6c         db  0x05 ; '.'
000000000000ca6d         db  0x46 ; 'F'
000000000000ca6e         db  0x0e ; '.'
000000000000ca6f         db  0x30 ; '0'
000000000000ca70         db  0x6a ; 'j'
000000000000ca71         db  0x0e ; '.'
000000000000ca72         db  0x28 ; '('
000000000000ca73         db  0x43 ; 'C'
000000000000ca74         db  0x0e ; '.'
000000000000ca75         db  0x20 ; ' '
000000000000ca76         db  0x41 ; 'A'
000000000000ca77         db  0x0e ; '.'
000000000000ca78         db  0x18 ; '.'
000000000000ca79         db  0x42 ; 'B'
000000000000ca7a         db  0x0e ; '.'
000000000000ca7b         db  0x10 ; '.'
000000000000ca7c         db  0x42 ; 'B'
000000000000ca7d         db  0x0e ; '.'
000000000000ca7e         db  0x08 ; '.'
000000000000ca7f         db  0x00 ; '.'
000000000000ca80         dd         0x00000034                                  ; Length of the record
000000000000ca84         dd         0x00001564                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000ca88         db         0x18, 0xcd, 2 dup (0xff)                    ; begin 0x97a0
000000000000ca8c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x981b)
000000000000ca90         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca91         db  0x42 ; 'B'
000000000000ca92         db  0x0e ; '.'
000000000000ca93         db  0x10 ; '.'
000000000000ca94         db  0x8c ; '.'
000000000000ca95         db  0x02 ; '.'
000000000000ca96         db  0x41 ; 'A'
000000000000ca97         db  0x0e ; '.'
000000000000ca98         db  0x18 ; '.'
000000000000ca99         db  0x86 ; '.'
000000000000ca9a         db  0x03 ; '.'
000000000000ca9b         db  0x41 ; 'A'
000000000000ca9c         db  0x0e ; '.'
000000000000ca9d         db  0x20 ; ' '
000000000000ca9e         db  0x83 ; '.'
000000000000ca9f         db  0x04 ; '.'
000000000000caa0         db  0x7d ; '}'
000000000000caa1         db  0x0a ; '.'
000000000000caa2         db  0x0e ; '.'
000000000000caa3         db  0x18 ; '.'
000000000000caa4         db  0x41 ; 'A'
000000000000caa5         db  0x0e ; '.'
000000000000caa6         db  0x10 ; '.'
000000000000caa7         db  0x42 ; 'B'
000000000000caa8         db  0x0e ; '.'
000000000000caa9         db  0x08 ; '.'
000000000000caaa         db  0x44 ; 'D'
000000000000caab         db  0x0b ; '.'
000000000000caac         db  0x60 ; '`'
000000000000caad         db  0x0a ; '.'
000000000000caae         db  0x0e ; '.'
000000000000caaf         db  0x18 ; '.'
000000000000cab0         db  0x41 ; 'A'
000000000000cab1         db  0x0e ; '.'
000000000000cab2         db  0x10 ; '.'
000000000000cab3         db  0x42 ; 'B'
000000000000cab4         db  0x0e ; '.'
000000000000cab5         db  0x08 ; '.'
000000000000cab6         db  0x45 ; 'E'
000000000000cab7         db  0x0b ; '.'
000000000000cab8         dd         0x00000034                                  ; Length of the record
000000000000cabc         dd         0x0000159c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cac0         db         0x60, 0xcd, 2 dup (0xff)                    ; begin 0x9820
000000000000cac4         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x9a9e)
000000000000cac8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cac9         db  0x42 ; 'B'
000000000000caca         db  0x0e ; '.'
000000000000cacb         db  0x10 ; '.'
000000000000cacc         db  0x8c ; '.'
000000000000cacd         db  0x02 ; '.'
000000000000cace         db  0x41 ; 'A'
000000000000cacf         db  0x0e ; '.'
000000000000cad0         db  0x18 ; '.'
000000000000cad1         db  0x86 ; '.'
000000000000cad2         db  0x03 ; '.'
000000000000cad3         db  0x43 ; 'C'
000000000000cad4         db  0x0e ; '.'
000000000000cad5         db  0x20 ; ' '
000000000000cad6         db  0x83 ; '.'
000000000000cad7         db  0x04 ; '.'
000000000000cad8         db  0x44 ; 'D'
000000000000cad9         db  0x0e ; '.'
000000000000cada         db  0x70 ; 'p'
000000000000cadb         db  0x02 ; '.'
000000000000cadc         db  0xf0 ; '.'
000000000000cadd         db  0x0a ; '.'
000000000000cade         db  0x0e ; '.'
000000000000cadf         db  0x20 ; ' '
000000000000cae0         db  0x41 ; 'A'
000000000000cae1         db  0x0e ; '.'
000000000000cae2         db  0x18 ; '.'
000000000000cae3         db  0x41 ; 'A'
000000000000cae4         db  0x0e ; '.'
000000000000cae5         db  0x10 ; '.'
000000000000cae6         db  0x42 ; 'B'
000000000000cae7         db  0x0e ; '.'
000000000000cae8         db  0x08 ; '.'
000000000000cae9         db  0x42 ; 'B'
000000000000caea         db  0x0b ; '.'
000000000000caeb         db  0x00 ; '.'
000000000000caec         db  0x00 ; '.'
000000000000caed         db  0x00 ; '.'
000000000000caee         db  0x00 ; '.'
000000000000caef         db  0x00 ; '.'
000000000000caf0         dd         0x0000001c                                  ; Length of the record
000000000000caf4         dd         0x000015d4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000caf8         db         0xa8, 0xcf, 2 dup (0xff)                    ; begin 0x9aa0
000000000000cafc         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x9ae0)
000000000000cb00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb01         db  0x44 ; 'D'
000000000000cb02         db  0x0e ; '.'
000000000000cb03         db  0x10 ; '.'
000000000000cb04         db  0x83 ; '.'
000000000000cb05         db  0x02 ; '.'
000000000000cb06         db  0x5a ; 'Z'
000000000000cb07         db  0x0a ; '.'
000000000000cb08         db  0x0e ; '.'
000000000000cb09         db  0x08 ; '.'
000000000000cb0a         db  0x4a ; 'J'
000000000000cb0b         db  0x0b ; '.'
000000000000cb0c         db  0x53 ; 'S'
000000000000cb0d         db  0x0e ; '.'
000000000000cb0e         db  0x08 ; '.'
000000000000cb0f         db  0x00 ; '.'
000000000000cb10         dd         0x0000002c                                  ; Length of the record
000000000000cb14         dd         0x000015f4                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cb18         db         0xc8, 0xcf, 2 dup (0xff)                    ; begin 0x9ae0
000000000000cb1c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x9b37)
000000000000cb20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb21         db  0x63 ; 'c'
000000000000cb22         db  0x0e ; '.'
000000000000cb23         db  0x10 ; '.'
000000000000cb24         db  0x8c ; '.'
000000000000cb25         db  0x02 ; '.'
000000000000cb26         db  0x41 ; 'A'
000000000000cb27         db  0x0e ; '.'
000000000000cb28         db  0x18 ; '.'
000000000000cb29         db  0x86 ; '.'
000000000000cb2a         db  0x03 ; '.'
000000000000cb2b         db  0x44 ; 'D'
000000000000cb2c         db  0x0e ; '.'
000000000000cb2d         db  0x20 ; ' '
000000000000cb2e         db  0x83 ; '.'
000000000000cb2f         db  0x04 ; '.'
000000000000cb30         db  0x6b ; 'k'
000000000000cb31         db  0x0e ; '.'
000000000000cb32         db  0x18 ; '.'
000000000000cb33         db  0x41 ; 'A'
000000000000cb34         db  0x0e ; '.'
000000000000cb35         db  0x10 ; '.'
000000000000cb36         db  0x42 ; 'B'
000000000000cb37         db  0x0e ; '.'
000000000000cb38         db  0x08 ; '.'
000000000000cb39         db  0x00 ; '.'
000000000000cb3a         db  0x00 ; '.'
000000000000cb3b         db  0x00 ; '.'
000000000000cb3c         db  0x00 ; '.'
000000000000cb3d         db  0x00 ; '.'
000000000000cb3e         db  0x00 ; '.'
000000000000cb3f         db  0x00 ; '.'
000000000000cb40         dd         0x00000014                                  ; Length of the record
000000000000cb44         dd         0x00001624                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cb48         db         0xf8, 0xcf, 2 dup (0xff)                    ; begin 0x9b40
000000000000cb4c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x9b4e)
000000000000cb50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb51         align      8
000000000000cb58         dd         0x00000044                                  ; Length of the record
000000000000cb5c         dd         0x0000163c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cb60         db         0xf0, 0xcf, 2 dup (0xff)                    ; begin 0x9b50
000000000000cb64         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x9bb5)
000000000000cb68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb69         db  0x42 ; 'B'
000000000000cb6a         db  0x0e ; '.'
000000000000cb6b         db  0x10 ; '.'
000000000000cb6c         db  0x8f ; '.'
000000000000cb6d         db  0x02 ; '.'
000000000000cb6e         db  0x42 ; 'B'
000000000000cb6f         db  0x0e ; '.'
000000000000cb70         db  0x18 ; '.'
000000000000cb71         db  0x8e ; '.'
000000000000cb72         db  0x03 ; '.'
000000000000cb73         db  0x45 ; 'E'
000000000000cb74         db  0x0e ; '.'
000000000000cb75         db  0x20 ; ' '
000000000000cb76         db  0x8d ; '.'
000000000000cb77         db  0x04 ; '.'
000000000000cb78         db  0x42 ; 'B'
000000000000cb79         db  0x0e ; '.'
000000000000cb7a         db  0x28 ; '('
000000000000cb7b         db  0x8c ; '.'
000000000000cb7c         db  0x05 ; '.'
000000000000cb7d         db  0x48 ; 'H'
000000000000cb7e         db  0x0e ; '.'
000000000000cb7f         db  0x30 ; '0'
000000000000cb80         db  0x86 ; '.'
000000000000cb81         db  0x06 ; '.'
000000000000cb82         db  0x48 ; 'H'
000000000000cb83         db  0x0e ; '.'
000000000000cb84         db  0x38 ; '8'
000000000000cb85         db  0x83 ; '.'
000000000000cb86         db  0x07 ; '.'
000000000000cb87         db  0x4d ; 'M'
000000000000cb88         db  0x0e ; '.'
000000000000cb89         db  0x40 ; '@'
000000000000cb8a         db  0x72 ; 'r'
000000000000cb8b         db  0x0e ; '.'
000000000000cb8c         db  0x38 ; '8'
000000000000cb8d         db  0x41 ; 'A'
000000000000cb8e         db  0x0e ; '.'
000000000000cb8f         db  0x30 ; '0'
000000000000cb90         db  0x41 ; 'A'
000000000000cb91         db  0x0e ; '.'
000000000000cb92         db  0x28 ; '('
000000000000cb93         db  0x42 ; 'B'
000000000000cb94         db  0x0e ; '.'
000000000000cb95         db  0x20 ; ' '
000000000000cb96         db  0x42 ; 'B'
000000000000cb97         db  0x0e ; '.'
000000000000cb98         db  0x18 ; '.'
000000000000cb99         db  0x42 ; 'B'
000000000000cb9a         db  0x0e ; '.'
000000000000cb9b         db  0x10 ; '.'
000000000000cb9c         db  0x42 ; 'B'
000000000000cb9d         db  0x0e ; '.'
000000000000cb9e         db  0x08 ; '.'
000000000000cb9f         db  0x00 ; '.'
000000000000cba0         dd         0x00000014                                  ; Length of the record
000000000000cba4         dd         0x00001684                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cba8         db         0x18, 0xd0, 2 dup (0xff)                    ; begin 0x9bc0
000000000000cbac         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x9bc2)
000000000000cbb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbb1         align      8
000000000000cbb8         dd         0x00000010                                  ; Length of the record
000000000000cbbc         dd         0x0000169c                                  ; FDE: parent CIE at 0xb520 (FDE encoding = 0x1B)
000000000000cbc0         db         0x10, 0xd0, 2 dup (0xff)                    ; begin 0x9bd0
000000000000cbc4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x9bde)
000000000000cbc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbc9         align      16


        ; Segment Segment 3
        ; Range: [0x20da30; 0x20e280[ (2128 bytes)
        ; File offset : [55856; 57504[ (1648 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20da30; 0x20da38[ (8 bytes)
        ; File offset : [55856; 55864[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020da30         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20da38; 0x20da40[ (8 bytes)
        ; File offset : [55864; 55872[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020da38         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20da40; 0x20dbf8[ (440 bytes)
        ; File offset : [55872; 56312[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000020da40         db  0x9f ; '.'                                         ; DATA XREF=main+168
000000000020da41         db  0x9d ; '.'
000000000020da42         db  0x00 ; '.'
000000000020da43         db  0x00 ; '.'
000000000020da44         db  0x00 ; '.'
000000000020da45         db  0x00 ; '.'
000000000020da46         db  0x00 ; '.'
000000000020da47         db  0x00 ; '.'
000000000020da48         db  0x00 ; '.'
000000000020da49         db  0x00 ; '.'
000000000020da4a         db  0x00 ; '.'
000000000020da4b         db  0x00 ; '.'
000000000020da4c         db  0x00 ; '.'
000000000020da4d         db  0x00 ; '.'
000000000020da4e         db  0x00 ; '.'
000000000020da4f         db  0x00 ; '.'
000000000020da50         db  0x00 ; '.'
000000000020da51         db  0x00 ; '.'
000000000020da52         db  0x00 ; '.'
000000000020da53         db  0x00 ; '.'
000000000020da54         db  0x00 ; '.'
000000000020da55         db  0x00 ; '.'
000000000020da56         db  0x00 ; '.'
000000000020da57         db  0x00 ; '.'
000000000020da58         db  0x63 ; 'c'
000000000020da59         db  0x00 ; '.'
000000000020da5a         db  0x00 ; '.'
000000000020da5b         db  0x00 ; '.'
000000000020da5c         db  0x00 ; '.'
000000000020da5d         db  0x00 ; '.'
000000000020da5e         db  0x00 ; '.'
000000000020da5f         db  0x00 ; '.'
000000000020da60         db  0xa7 ; '.'
000000000020da61         db  0x9d ; '.'
000000000020da62         db  0x00 ; '.'
000000000020da63         db  0x00 ; '.'
000000000020da64         db  0x00 ; '.'
000000000020da65         db  0x00 ; '.'
000000000020da66         db  0x00 ; '.'
000000000020da67         db  0x00 ; '.'
000000000020da68         db  0x00 ; '.'
000000000020da69         db  0x00 ; '.'
000000000020da6a         db  0x00 ; '.'
000000000020da6b         db  0x00 ; '.'
000000000020da6c         db  0x00 ; '.'
000000000020da6d         db  0x00 ; '.'
000000000020da6e         db  0x00 ; '.'
000000000020da6f         db  0x00 ; '.'
000000000020da70         db  0x00 ; '.'
000000000020da71         db  0x00 ; '.'
000000000020da72         db  0x00 ; '.'
000000000020da73         db  0x00 ; '.'
000000000020da74         db  0x00 ; '.'
000000000020da75         db  0x00 ; '.'
000000000020da76         db  0x00 ; '.'
000000000020da77         db  0x00 ; '.'
000000000020da78         db  0x52 ; 'R'
000000000020da79         db  0x00 ; '.'
000000000020da7a         db  0x00 ; '.'
000000000020da7b         db  0x00 ; '.'
000000000020da7c         db  0x00 ; '.'
000000000020da7d         db  0x00 ; '.'
000000000020da7e         db  0x00 ; '.'
000000000020da7f         db  0x00 ; '.'
000000000020da80         db  0xb1 ; '.'
000000000020da81         db  0x9d ; '.'
000000000020da82         db  0x00 ; '.'
000000000020da83         db  0x00 ; '.'
000000000020da84         db  0x00 ; '.'
000000000020da85         db  0x00 ; '.'
000000000020da86         db  0x00 ; '.'
000000000020da87         db  0x00 ; '.'
000000000020da88         db  0x00 ; '.'
000000000020da89         db  0x00 ; '.'
000000000020da8a         db  0x00 ; '.'
000000000020da8b         db  0x00 ; '.'
000000000020da8c         db  0x00 ; '.'
000000000020da8d         db  0x00 ; '.'
000000000020da8e         db  0x00 ; '.'
000000000020da8f         db  0x00 ; '.'
000000000020da90         db  0x00 ; '.'
000000000020da91         db  0x00 ; '.'
000000000020da92         db  0x00 ; '.'
000000000020da93         db  0x00 ; '.'
000000000020da94         db  0x00 ; '.'
000000000020da95         db  0x00 ; '.'
000000000020da96         db  0x00 ; '.'
000000000020da97         db  0x00 ; '.'
000000000020da98         db  0x80 ; '.'
000000000020da99         db  0x00 ; '.'
000000000020da9a         db  0x00 ; '.'
000000000020da9b         db  0x00 ; '.'
000000000020da9c         db  0x00 ; '.'
000000000020da9d         db  0x00 ; '.'
000000000020da9e         db  0x00 ; '.'
000000000020da9f         db  0x00 ; '.'
000000000020daa0         db  0xb4 ; '.'
000000000020daa1         db  0x9d ; '.'
000000000020daa2         db  0x00 ; '.'
000000000020daa3         db  0x00 ; '.'
000000000020daa4         db  0x00 ; '.'
000000000020daa5         db  0x00 ; '.'
000000000020daa6         db  0x00 ; '.'
000000000020daa7         db  0x00 ; '.'
000000000020daa8         db  0x00 ; '.'
000000000020daa9         db  0x00 ; '.'
000000000020daaa         db  0x00 ; '.'
000000000020daab         db  0x00 ; '.'
000000000020daac         db  0x00 ; '.'
000000000020daad         db  0x00 ; '.'
000000000020daae         db  0x00 ; '.'
000000000020daaf         db  0x00 ; '.'
000000000020dab0         db  0x00 ; '.'
000000000020dab1         db  0x00 ; '.'
000000000020dab2         db  0x00 ; '.'
000000000020dab3         db  0x00 ; '.'
000000000020dab4         db  0x00 ; '.'
000000000020dab5         db  0x00 ; '.'
000000000020dab6         db  0x00 ; '.'
000000000020dab7         db  0x00 ; '.'
000000000020dab8         db  0x81 ; '.'
000000000020dab9         db  0x00 ; '.'
000000000020daba         db  0x00 ; '.'
000000000020dabb         db  0x00 ; '.'
000000000020dabc         db  0x00 ; '.'
000000000020dabd         db  0x00 ; '.'
000000000020dabe         db  0x00 ; '.'
000000000020dabf         db  0x00 ; '.'
000000000020dac0         db  0xc2 ; '.'
000000000020dac1         db  0x9d ; '.'
000000000020dac2         db  0x00 ; '.'
000000000020dac3         db  0x00 ; '.'
000000000020dac4         db  0x00 ; '.'
000000000020dac5         db  0x00 ; '.'
000000000020dac6         db  0x00 ; '.'
000000000020dac7         db  0x00 ; '.'
000000000020dac8         db  0x00 ; '.'
000000000020dac9         db  0x00 ; '.'
000000000020daca         db  0x00 ; '.'
000000000020dacb         db  0x00 ; '.'
000000000020dacc         db  0x00 ; '.'
000000000020dacd         db  0x00 ; '.'
000000000020dace         db  0x00 ; '.'
000000000020dacf         db  0x00 ; '.'
000000000020dad0         db  0x00 ; '.'
000000000020dad1         db  0x00 ; '.'
000000000020dad2         db  0x00 ; '.'
000000000020dad3         db  0x00 ; '.'
000000000020dad4         db  0x00 ; '.'
000000000020dad5         db  0x00 ; '.'
000000000020dad6         db  0x00 ; '.'
000000000020dad7         db  0x00 ; '.'
000000000020dad8         db  0x66 ; 'f'
000000000020dad9         db  0x00 ; '.'
000000000020dada         db  0x00 ; '.'
000000000020dadb         db  0x00 ; '.'
000000000020dadc         db  0x00 ; '.'
000000000020dadd         db  0x00 ; '.'
000000000020dade         db  0x00 ; '.'
000000000020dadf         db  0x00 ; '.'
000000000020dae0         db  0xc8 ; '.'
000000000020dae1         db  0x9d ; '.'
000000000020dae2         db  0x00 ; '.'
000000000020dae3         db  0x00 ; '.'
000000000020dae4         db  0x00 ; '.'
000000000020dae5         db  0x00 ; '.'
000000000020dae6         db  0x00 ; '.'
000000000020dae7         db  0x00 ; '.'
000000000020dae8         db  0x01 ; '.'
000000000020dae9         db  0x00 ; '.'
000000000020daea         db  0x00 ; '.'
000000000020daeb         db  0x00 ; '.'
000000000020daec         db  0x00 ; '.'
000000000020daed         db  0x00 ; '.'
000000000020daee         db  0x00 ; '.'
000000000020daef         db  0x00 ; '.'
000000000020daf0         db  0x00 ; '.'
000000000020daf1         db  0x00 ; '.'
000000000020daf2         db  0x00 ; '.'
000000000020daf3         db  0x00 ; '.'
000000000020daf4         db  0x00 ; '.'
000000000020daf5         db  0x00 ; '.'
000000000020daf6         db  0x00 ; '.'
000000000020daf7         db  0x00 ; '.'
000000000020daf8         db  0x82 ; '.'
000000000020daf9         db  0x00 ; '.'
000000000020dafa         db  0x00 ; '.'
000000000020dafb         db  0x00 ; '.'
000000000020dafc         db  0x00 ; '.'
000000000020dafd         db  0x00 ; '.'
000000000020dafe         db  0x00 ; '.'
000000000020daff         db  0x00 ; '.'
000000000020db00         db  0xd2 ; '.'
000000000020db01         db  0x9d ; '.'
000000000020db02         db  0x00 ; '.'
000000000020db03         db  0x00 ; '.'
000000000020db04         db  0x00 ; '.'
000000000020db05         db  0x00 ; '.'
000000000020db06         db  0x00 ; '.'
000000000020db07         db  0x00 ; '.'
000000000020db08         db  0x00 ; '.'
000000000020db09         db  0x00 ; '.'
000000000020db0a         db  0x00 ; '.'
000000000020db0b         db  0x00 ; '.'
000000000020db0c         db  0x00 ; '.'
000000000020db0d         db  0x00 ; '.'
000000000020db0e         db  0x00 ; '.'
000000000020db0f         db  0x00 ; '.'
000000000020db10         db  0x00 ; '.'
000000000020db11         db  0x00 ; '.'
000000000020db12         db  0x00 ; '.'
000000000020db13         db  0x00 ; '.'
000000000020db14         db  0x00 ; '.'
000000000020db15         db  0x00 ; '.'
000000000020db16         db  0x00 ; '.'
000000000020db17         db  0x00 ; '.'
000000000020db18         db  0x66 ; 'f'
000000000020db19         db  0x00 ; '.'
000000000020db1a         db  0x00 ; '.'
000000000020db1b         db  0x00 ; '.'
000000000020db1c         db  0x00 ; '.'
000000000020db1d         db  0x00 ; '.'
000000000020db1e         db  0x00 ; '.'
000000000020db1f         db  0x00 ; '.'
000000000020db20         db  0xd9 ; '.'
000000000020db21         db  0x9d ; '.'
000000000020db22         db  0x00 ; '.'
000000000020db23         db  0x00 ; '.'
000000000020db24         db  0x00 ; '.'
000000000020db25         db  0x00 ; '.'
000000000020db26         db  0x00 ; '.'
000000000020db27         db  0x00 ; '.'
000000000020db28         db  0x00 ; '.'
000000000020db29         db  0x00 ; '.'
000000000020db2a         db  0x00 ; '.'
000000000020db2b         db  0x00 ; '.'
000000000020db2c         db  0x00 ; '.'
000000000020db2d         db  0x00 ; '.'
000000000020db2e         db  0x00 ; '.'
000000000020db2f         db  0x00 ; '.'
000000000020db30         db  0x00 ; '.'
000000000020db31         db  0x00 ; '.'
000000000020db32         db  0x00 ; '.'
000000000020db33         db  0x00 ; '.'
000000000020db34         db  0x00 ; '.'
000000000020db35         db  0x00 ; '.'
000000000020db36         db  0x00 ; '.'
000000000020db37         db  0x00 ; '.'
000000000020db38         db  0x76 ; 'v'
000000000020db39         db  0x00 ; '.'
000000000020db3a         db  0x00 ; '.'
000000000020db3b         db  0x00 ; '.'
000000000020db3c         db  0x00 ; '.'
000000000020db3d         db  0x00 ; '.'
000000000020db3e         db  0x00 ; '.'
000000000020db3f         db  0x00 ; '.'
000000000020db40         db  0xe1 ; '.'
000000000020db41         db  0x9d ; '.'
000000000020db42         db  0x00 ; '.'
000000000020db43         db  0x00 ; '.'
000000000020db44         db  0x00 ; '.'
000000000020db45         db  0x00 ; '.'
000000000020db46         db  0x00 ; '.'
000000000020db47         db  0x00 ; '.'
000000000020db48         db  0x00 ; '.'
000000000020db49         db  0x00 ; '.'
000000000020db4a         db  0x00 ; '.'
000000000020db4b         db  0x00 ; '.'
000000000020db4c         db  0x00 ; '.'
000000000020db4d         db  0x00 ; '.'
000000000020db4e         db  0x00 ; '.'
000000000020db4f         db  0x00 ; '.'
000000000020db50         db  0x00 ; '.'
000000000020db51         db  0x00 ; '.'
000000000020db52         db  0x00 ; '.'
000000000020db53         db  0x00 ; '.'
000000000020db54         db  0x00 ; '.'
000000000020db55         db  0x00 ; '.'
000000000020db56         db  0x00 ; '.'
000000000020db57         db  0x00 ; '.'
000000000020db58         db  0x7e ; '~'
000000000020db59         db  0xff ; '.'
000000000020db5a         db  0xff ; '.'
000000000020db5b         db  0xff ; '.'
000000000020db5c         db  0x00 ; '.'
000000000020db5d         db  0x00 ; '.'
000000000020db5e         db  0x00 ; '.'
000000000020db5f         db  0x00 ; '.'
000000000020db60         db  0xe6 ; '.'
000000000020db61         db  0x9d ; '.'
000000000020db62         db  0x00 ; '.'
000000000020db63         db  0x00 ; '.'
000000000020db64         db  0x00 ; '.'
000000000020db65         db  0x00 ; '.'
000000000020db66         db  0x00 ; '.'
000000000020db67         db  0x00 ; '.'
000000000020db68         db  0x00 ; '.'
000000000020db69         db  0x00 ; '.'
000000000020db6a         db  0x00 ; '.'
000000000020db6b         db  0x00 ; '.'
000000000020db6c         db  0x00 ; '.'
000000000020db6d         db  0x00 ; '.'
000000000020db6e         db  0x00 ; '.'
000000000020db6f         db  0x00 ; '.'
000000000020db70         db  0x00 ; '.'
000000000020db71         db  0x00 ; '.'
000000000020db72         db  0x00 ; '.'
000000000020db73         db  0x00 ; '.'
000000000020db74         db  0x00 ; '.'
000000000020db75         db  0x00 ; '.'
000000000020db76         db  0x00 ; '.'
000000000020db77         db  0x00 ; '.'
000000000020db78         db  0x7d ; '}'
000000000020db79         db  0xff ; '.'
000000000020db7a         db  0xff ; '.'
000000000020db7b         db  0xff ; '.'
000000000020db7c         db  0x00 ; '.'
000000000020db7d         db  0x00 ; '.'
000000000020db7e         db  0x00 ; '.'
000000000020db7f         db  0x00 ; '.'
000000000020db80         db  0x00 ; '.'
000000000020db81         db  0x00 ; '.'
000000000020db82         db  0x00 ; '.'
000000000020db83         db  0x00 ; '.'
000000000020db84         db  0x00 ; '.'
000000000020db85         db  0x00 ; '.'
000000000020db86         db  0x00 ; '.'
000000000020db87         db  0x00 ; '.'
000000000020db88         db  0x00 ; '.'
000000000020db89         db  0x00 ; '.'
000000000020db8a         db  0x00 ; '.'
000000000020db8b         db  0x00 ; '.'
000000000020db8c         db  0x00 ; '.'
000000000020db8d         db  0x00 ; '.'
000000000020db8e         db  0x00 ; '.'
000000000020db8f         db  0x00 ; '.'
000000000020db90         db  0x00 ; '.'
000000000020db91         db  0x00 ; '.'
000000000020db92         db  0x00 ; '.'
000000000020db93         db  0x00 ; '.'
000000000020db94         db  0x00 ; '.'
000000000020db95         db  0x00 ; '.'
000000000020db96         db  0x00 ; '.'
000000000020db97         db  0x00 ; '.'
000000000020db98         db  0x00 ; '.'
000000000020db99         db  0x00 ; '.'
000000000020db9a         db  0x00 ; '.'
000000000020db9b         db  0x00 ; '.'
000000000020db9c         db  0x00 ; '.'
000000000020db9d         db  0x00 ; '.'
000000000020db9e         db  0x00 ; '.'
000000000020db9f         db  0x00 ; '.'
                     quoting_style_args:
000000000020dba0         db  0xa1 ; '.'
000000000020dba1         db  0xa6 ; '.'
000000000020dba2         db  0x00 ; '.'
000000000020dba3         db  0x00 ; '.'
000000000020dba4         db  0x00 ; '.'
000000000020dba5         db  0x00 ; '.'
000000000020dba6         db  0x00 ; '.'
000000000020dba7         db  0x00 ; '.'
000000000020dba8         db  0xa9 ; '.'
000000000020dba9         db  0xa6 ; '.'
000000000020dbaa         db  0x00 ; '.'
000000000020dbab         db  0x00 ; '.'
000000000020dbac         db  0x00 ; '.'
000000000020dbad         db  0x00 ; '.'
000000000020dbae         db  0x00 ; '.'
000000000020dbaf         db  0x00 ; '.'
000000000020dbb0         db  0xaf ; '.'
000000000020dbb1         db  0xa6 ; '.'
000000000020dbb2         db  0x00 ; '.'
000000000020dbb3         db  0x00 ; '.'
000000000020dbb4         db  0x00 ; '.'
000000000020dbb5         db  0x00 ; '.'
000000000020dbb6         db  0x00 ; '.'
000000000020dbb7         db  0x00 ; '.'
000000000020dbb8         db  0xbc ; '.'
000000000020dbb9         db  0xa6 ; '.'
000000000020dbba         db  0x00 ; '.'
000000000020dbbb         db  0x00 ; '.'
000000000020dbbc         db  0x00 ; '.'
000000000020dbbd         db  0x00 ; '.'
000000000020dbbe         db  0x00 ; '.'
000000000020dbbf         db  0x00 ; '.'
000000000020dbc0         db  0xc9 ; '.'
000000000020dbc1         db  0xa6 ; '.'
000000000020dbc2         db  0x00 ; '.'
000000000020dbc3         db  0x00 ; '.'
000000000020dbc4         db  0x00 ; '.'
000000000020dbc5         db  0x00 ; '.'
000000000020dbc6         db  0x00 ; '.'
000000000020dbc7         db  0x00 ; '.'
000000000020dbc8         db  0xfb ; '.'
000000000020dbc9         db  0xae ; '.'
000000000020dbca         db  0x00 ; '.'
000000000020dbcb         db  0x00 ; '.'
000000000020dbcc         db  0x00 ; '.'
000000000020dbcd         db  0x00 ; '.'
000000000020dbce         db  0x00 ; '.'
000000000020dbcf         db  0x00 ; '.'
000000000020dbd0         db  0xdd ; '.'
000000000020dbd1         db  0xa6 ; '.'
000000000020dbd2         db  0x00 ; '.'
000000000020dbd3         db  0x00 ; '.'
000000000020dbd4         db  0x00 ; '.'
000000000020dbd5         db  0x00 ; '.'
000000000020dbd6         db  0x00 ; '.'
000000000020dbd7         db  0x00 ; '.'
000000000020dbd8         db  0xc2 ; '.'
000000000020dbd9         db  0xa6 ; '.'
000000000020dbda         db  0x00 ; '.'
000000000020dbdb         db  0x00 ; '.'
000000000020dbdc         db  0x00 ; '.'
000000000020dbdd         db  0x00 ; '.'
000000000020dbde         db  0x00 ; '.'
000000000020dbdf         db  0x00 ; '.'
000000000020dbe0         db  0xbe ; '.'
000000000020dbe1         db  0x9c ; '.'
000000000020dbe2         db  0x00 ; '.'
000000000020dbe3         db  0x00 ; '.'
000000000020dbe4         db  0x00 ; '.'
000000000020dbe5         db  0x00 ; '.'
000000000020dbe6         db  0x00 ; '.'
000000000020dbe7         db  0x00 ; '.'
000000000020dbe8         db  0xe5 ; '.'
000000000020dbe9         db  0xa6 ; '.'
000000000020dbea         db  0x00 ; '.'
000000000020dbeb         db  0x00 ; '.'
000000000020dbec         db  0x00 ; '.'
000000000020dbed         db  0x00 ; '.'
000000000020dbee         db  0x00 ; '.'
000000000020dbef         db  0x00 ; '.'
000000000020dbf0         db  0x00 ; '.'
000000000020dbf1         db  0x00 ; '.'
000000000020dbf2         db  0x00 ; '.'
000000000020dbf3         db  0x00 ; '.'
000000000020dbf4         db  0x00 ; '.'
000000000020dbf5         db  0x00 ; '.'
000000000020dbf6         db  0x00 ; '.'
000000000020dbf7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20dbf8; 0x20dde8[ (496 bytes)
        ; File offset : [56312; 56808[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020dbf8         db  0x01 ; '.'
000000000020dbf9         db  0x00 ; '.'
000000000020dbfa         db  0x00 ; '.'
000000000020dbfb         db  0x00 ; '.'
000000000020dbfc         db  0x00 ; '.'
000000000020dbfd         db  0x00 ; '.'
000000000020dbfe         db  0x00 ; '.'
000000000020dbff         db  0x00 ; '.'
000000000020dc00         db  0x01 ; '.'
000000000020dc01         db  0x00 ; '.'
000000000020dc02         db  0x00 ; '.'
000000000020dc03         db  0x00 ; '.'
000000000020dc04         db  0x00 ; '.'
000000000020dc05         db  0x00 ; '.'
000000000020dc06         db  0x00 ; '.'
000000000020dc07         db  0x00 ; '.'
000000000020dc08         db  0x0c ; '.'
000000000020dc09         db  0x00 ; '.'
000000000020dc0a         db  0x00 ; '.'
000000000020dc0b         db  0x00 ; '.'
000000000020dc0c         db  0x00 ; '.'
000000000020dc0d         db  0x00 ; '.'
000000000020dc0e         db  0x00 ; '.'
000000000020dc0f         db  0x00 ; '.'
000000000020dc10         db  0xc8 ; '.'
000000000020dc11         db  0x16 ; '.'
000000000020dc12         db  0x00 ; '.'
000000000020dc13         db  0x00 ; '.'
000000000020dc14         db  0x00 ; '.'
000000000020dc15         db  0x00 ; '.'
000000000020dc16         db  0x00 ; '.'
000000000020dc17         db  0x00 ; '.'
000000000020dc18         db  0x0d ; '.'
000000000020dc19         db  0x00 ; '.'
000000000020dc1a         db  0x00 ; '.'
000000000020dc1b         db  0x00 ; '.'
000000000020dc1c         db  0x00 ; '.'
000000000020dc1d         db  0x00 ; '.'
000000000020dc1e         db  0x00 ; '.'
000000000020dc1f         db  0x00 ; '.'
000000000020dc20         db  0xe0 ; '.'
000000000020dc21         db  0x9b ; '.'
000000000020dc22         db  0x00 ; '.'
000000000020dc23         db  0x00 ; '.'
000000000020dc24         db  0x00 ; '.'
000000000020dc25         db  0x00 ; '.'
000000000020dc26         db  0x00 ; '.'
000000000020dc27         db  0x00 ; '.'
000000000020dc28         db  0x19 ; '.'
000000000020dc29         db  0x00 ; '.'
000000000020dc2a         db  0x00 ; '.'
000000000020dc2b         db  0x00 ; '.'
000000000020dc2c         db  0x00 ; '.'
000000000020dc2d         db  0x00 ; '.'
000000000020dc2e         db  0x00 ; '.'
000000000020dc2f         db  0x00 ; '.'
000000000020dc30         db  0x30 ; '0'
000000000020dc31         db  0xda ; '.'
000000000020dc32         db  0x20 ; ' '
000000000020dc33         db  0x00 ; '.'
000000000020dc34         db  0x00 ; '.'
000000000020dc35         db  0x00 ; '.'
000000000020dc36         db  0x00 ; '.'
000000000020dc37         db  0x00 ; '.'
000000000020dc38         db  0x1b ; '.'
000000000020dc39         db  0x00 ; '.'
000000000020dc3a         db  0x00 ; '.'
000000000020dc3b         db  0x00 ; '.'
000000000020dc3c         db  0x00 ; '.'
000000000020dc3d         db  0x00 ; '.'
000000000020dc3e         db  0x00 ; '.'
000000000020dc3f         db  0x00 ; '.'
000000000020dc40         db  0x08 ; '.'
000000000020dc41         db  0x00 ; '.'
000000000020dc42         db  0x00 ; '.'
000000000020dc43         db  0x00 ; '.'
000000000020dc44         db  0x00 ; '.'
000000000020dc45         db  0x00 ; '.'
000000000020dc46         db  0x00 ; '.'
000000000020dc47         db  0x00 ; '.'
000000000020dc48         db  0x1a ; '.'
000000000020dc49         db  0x00 ; '.'
000000000020dc4a         db  0x00 ; '.'
000000000020dc4b         db  0x00 ; '.'
000000000020dc4c         db  0x00 ; '.'
000000000020dc4d         db  0x00 ; '.'
000000000020dc4e         db  0x00 ; '.'
000000000020dc4f         db  0x00 ; '.'
000000000020dc50         db  0x38 ; '8'
000000000020dc51         db  0xda ; '.'
000000000020dc52         db  0x20 ; ' '
000000000020dc53         db  0x00 ; '.'
000000000020dc54         db  0x00 ; '.'
000000000020dc55         db  0x00 ; '.'
000000000020dc56         db  0x00 ; '.'
000000000020dc57         db  0x00 ; '.'
000000000020dc58         db  0x1c ; '.'
000000000020dc59         db  0x00 ; '.'
000000000020dc5a         db  0x00 ; '.'
000000000020dc5b         db  0x00 ; '.'
000000000020dc5c         db  0x00 ; '.'
000000000020dc5d         db  0x00 ; '.'
000000000020dc5e         db  0x00 ; '.'
000000000020dc5f         db  0x00 ; '.'
000000000020dc60         db  0x08 ; '.'
000000000020dc61         db  0x00 ; '.'
000000000020dc62         db  0x00 ; '.'
000000000020dc63         db  0x00 ; '.'
000000000020dc64         db  0x00 ; '.'
000000000020dc65         db  0x00 ; '.'
000000000020dc66         db  0x00 ; '.'
000000000020dc67         db  0x00 ; '.'
000000000020dc68         db  0xf5 ; '.'
000000000020dc69         db  0xfe ; '.'
000000000020dc6a         db  0xff ; '.'
000000000020dc6b         db  0x6f ; 'o'
000000000020dc6c         db  0x00 ; '.'
000000000020dc6d         db  0x00 ; '.'
000000000020dc6e         db  0x00 ; '.'
000000000020dc6f         db  0x00 ; '.'
000000000020dc70         db  0x98 ; '.'
000000000020dc71         db  0x02 ; '.'
000000000020dc72         db  0x00 ; '.'
000000000020dc73         db  0x00 ; '.'
000000000020dc74         db  0x00 ; '.'
000000000020dc75         db  0x00 ; '.'
000000000020dc76         db  0x00 ; '.'
000000000020dc77         db  0x00 ; '.'
000000000020dc78         db  0x05 ; '.'
000000000020dc79         db  0x00 ; '.'
000000000020dc7a         db  0x00 ; '.'
000000000020dc7b         db  0x00 ; '.'
000000000020dc7c         db  0x00 ; '.'
000000000020dc7d         db  0x00 ; '.'
000000000020dc7e         db  0x00 ; '.'
000000000020dc7f         db  0x00 ; '.'
000000000020dc80         db  0xb8 ; '.'
000000000020dc81         db  0x09 ; '.'
000000000020dc82         db  0x00 ; '.'
000000000020dc83         db  0x00 ; '.'
000000000020dc84         db  0x00 ; '.'
000000000020dc85         db  0x00 ; '.'
000000000020dc86         db  0x00 ; '.'
000000000020dc87         db  0x00 ; '.'
000000000020dc88         db  0x06 ; '.'
000000000020dc89         db  0x00 ; '.'
000000000020dc8a         db  0x00 ; '.'
000000000020dc8b         db  0x00 ; '.'
000000000020dc8c         db  0x00 ; '.'
000000000020dc8d         db  0x00 ; '.'
000000000020dc8e         db  0x00 ; '.'
000000000020dc8f         db  0x00 ; '.'
000000000020dc90         db  0xe0 ; '.'
000000000020dc91         db  0x02 ; '.'
000000000020dc92         db  0x00 ; '.'
000000000020dc93         db  0x00 ; '.'
000000000020dc94         db  0x00 ; '.'
000000000020dc95         db  0x00 ; '.'
000000000020dc96         db  0x00 ; '.'
000000000020dc97         db  0x00 ; '.'
000000000020dc98         db  0x0a ; '.'
000000000020dc99         db  0x00 ; '.'
000000000020dc9a         db  0x00 ; '.'
000000000020dc9b         db  0x00 ; '.'
000000000020dc9c         db  0x00 ; '.'
000000000020dc9d         db  0x00 ; '.'
000000000020dc9e         db  0x00 ; '.'
000000000020dc9f         db  0x00 ; '.'
000000000020dca0         db  0x18 ; '.'
000000000020dca1         db  0x03 ; '.'
000000000020dca2         db  0x00 ; '.'
000000000020dca3         db  0x00 ; '.'
000000000020dca4         db  0x00 ; '.'
000000000020dca5         db  0x00 ; '.'
000000000020dca6         db  0x00 ; '.'
000000000020dca7         db  0x00 ; '.'
000000000020dca8         db  0x0b ; '.'
000000000020dca9         db  0x00 ; '.'
000000000020dcaa         db  0x00 ; '.'
000000000020dcab         db  0x00 ; '.'
000000000020dcac         db  0x00 ; '.'
000000000020dcad         db  0x00 ; '.'
000000000020dcae         db  0x00 ; '.'
000000000020dcaf         db  0x00 ; '.'
000000000020dcb0         db  0x18 ; '.'
000000000020dcb1         db  0x00 ; '.'
000000000020dcb2         db  0x00 ; '.'
000000000020dcb3         db  0x00 ; '.'
000000000020dcb4         db  0x00 ; '.'
000000000020dcb5         db  0x00 ; '.'
000000000020dcb6         db  0x00 ; '.'
000000000020dcb7         db  0x00 ; '.'
000000000020dcb8         db  0x15 ; '.'
000000000020dcb9         db  0x00 ; '.'
000000000020dcba         db  0x00 ; '.'
000000000020dcbb         db  0x00 ; '.'
000000000020dcbc         db  0x00 ; '.'
000000000020dcbd         db  0x00 ; '.'
000000000020dcbe         db  0x00 ; '.'
000000000020dcbf         db  0x00 ; '.'
000000000020dcc0         db  0x00 ; '.'
000000000020dcc1         db  0x00 ; '.'
000000000020dcc2         db  0x00 ; '.'
000000000020dcc3         db  0x00 ; '.'
000000000020dcc4         db  0x00 ; '.'
000000000020dcc5         db  0x00 ; '.'
000000000020dcc6         db  0x00 ; '.'
000000000020dcc7         db  0x00 ; '.'
000000000020dcc8         db  0x03 ; '.'
000000000020dcc9         db  0x00 ; '.'
000000000020dcca         db  0x00 ; '.'
000000000020dccb         db  0x00 ; '.'
000000000020dccc         db  0x00 ; '.'
000000000020dccd         db  0x00 ; '.'
000000000020dcce         db  0x00 ; '.'
000000000020dccf         db  0x00 ; '.'
000000000020dcd0         db  0xe8 ; '.'
000000000020dcd1         db  0xdd ; '.'
000000000020dcd2         db  0x20 ; ' '
000000000020dcd3         db  0x00 ; '.'
000000000020dcd4         db  0x00 ; '.'
000000000020dcd5         db  0x00 ; '.'
000000000020dcd6         db  0x00 ; '.'
000000000020dcd7         db  0x00 ; '.'
000000000020dcd8         db  0x02 ; '.'
000000000020dcd9         db  0x00 ; '.'
000000000020dcda         db  0x00 ; '.'
000000000020dcdb         db  0x00 ; '.'
000000000020dcdc         db  0x00 ; '.'
000000000020dcdd         db  0x00 ; '.'
000000000020dcde         db  0x00 ; '.'
000000000020dcdf         db  0x00 ; '.'
000000000020dce0         db  0x70 ; 'p'
000000000020dce1         db  0x05 ; '.'
000000000020dce2         db  0x00 ; '.'
000000000020dce3         db  0x00 ; '.'
000000000020dce4         db  0x00 ; '.'
000000000020dce5         db  0x00 ; '.'
000000000020dce6         db  0x00 ; '.'
000000000020dce7         db  0x00 ; '.'
000000000020dce8         db  0x14 ; '.'
000000000020dce9         db  0x00 ; '.'
000000000020dcea         db  0x00 ; '.'
000000000020dceb         db  0x00 ; '.'
000000000020dcec         db  0x00 ; '.'
000000000020dced         db  0x00 ; '.'
000000000020dcee         db  0x00 ; '.'
000000000020dcef         db  0x00 ; '.'
000000000020dcf0         db  0x07 ; '.'
000000000020dcf1         db  0x00 ; '.'
000000000020dcf2         db  0x00 ; '.'
000000000020dcf3         db  0x00 ; '.'
000000000020dcf4         db  0x00 ; '.'
000000000020dcf5         db  0x00 ; '.'
000000000020dcf6         db  0x00 ; '.'
000000000020dcf7         db  0x00 ; '.'
000000000020dcf8         db  0x17 ; '.'
000000000020dcf9         db  0x00 ; '.'
000000000020dcfa         db  0x00 ; '.'
000000000020dcfb         db  0x00 ; '.'
000000000020dcfc         db  0x00 ; '.'
000000000020dcfd         db  0x00 ; '.'
000000000020dcfe         db  0x00 ; '.'
000000000020dcff         db  0x00 ; '.'
000000000020dd00         db  0x58 ; 'X'
000000000020dd01         db  0x11 ; '.'
000000000020dd02         db  0x00 ; '.'
000000000020dd03         db  0x00 ; '.'
000000000020dd04         db  0x00 ; '.'
000000000020dd05         db  0x00 ; '.'
000000000020dd06         db  0x00 ; '.'
000000000020dd07         db  0x00 ; '.'
000000000020dd08         db  0x07 ; '.'
000000000020dd09         db  0x00 ; '.'
000000000020dd0a         db  0x00 ; '.'
000000000020dd0b         db  0x00 ; '.'
000000000020dd0c         db  0x00 ; '.'
000000000020dd0d         db  0x00 ; '.'
000000000020dd0e         db  0x00 ; '.'
000000000020dd0f         db  0x00 ; '.'
000000000020dd10         db  0xc8 ; '.'
000000000020dd11         db  0x0d ; '.'
000000000020dd12         db  0x00 ; '.'
000000000020dd13         db  0x00 ; '.'
000000000020dd14         db  0x00 ; '.'
000000000020dd15         db  0x00 ; '.'
000000000020dd16         db  0x00 ; '.'
000000000020dd17         db  0x00 ; '.'
000000000020dd18         db  0x08 ; '.'
000000000020dd19         db  0x00 ; '.'
000000000020dd1a         db  0x00 ; '.'
000000000020dd1b         db  0x00 ; '.'
000000000020dd1c         db  0x00 ; '.'
000000000020dd1d         db  0x00 ; '.'
000000000020dd1e         db  0x00 ; '.'
000000000020dd1f         db  0x00 ; '.'
000000000020dd20         db  0x90 ; '.'
000000000020dd21         db  0x03 ; '.'
000000000020dd22         db  0x00 ; '.'
000000000020dd23         db  0x00 ; '.'
000000000020dd24         db  0x00 ; '.'
000000000020dd25         db  0x00 ; '.'
000000000020dd26         db  0x00 ; '.'
000000000020dd27         db  0x00 ; '.'
000000000020dd28         db  0x09 ; '.'
000000000020dd29         db  0x00 ; '.'
000000000020dd2a         db  0x00 ; '.'
000000000020dd2b         db  0x00 ; '.'
000000000020dd2c         db  0x00 ; '.'
000000000020dd2d         db  0x00 ; '.'
000000000020dd2e         db  0x00 ; '.'
000000000020dd2f         db  0x00 ; '.'
000000000020dd30         db  0x18 ; '.'
000000000020dd31         db  0x00 ; '.'
000000000020dd32         db  0x00 ; '.'
000000000020dd33         db  0x00 ; '.'
000000000020dd34         db  0x00 ; '.'
000000000020dd35         db  0x00 ; '.'
000000000020dd36         db  0x00 ; '.'
000000000020dd37         db  0x00 ; '.'
000000000020dd38         db  0x1e ; '.'
000000000020dd39         db  0x00 ; '.'
000000000020dd3a         db  0x00 ; '.'
000000000020dd3b         db  0x00 ; '.'
000000000020dd3c         db  0x00 ; '.'
000000000020dd3d         db  0x00 ; '.'
000000000020dd3e         db  0x00 ; '.'
000000000020dd3f         db  0x00 ; '.'
000000000020dd40         db  0x08 ; '.'
000000000020dd41         db  0x00 ; '.'
000000000020dd42         db  0x00 ; '.'
000000000020dd43         db  0x00 ; '.'
000000000020dd44         db  0x00 ; '.'
000000000020dd45         db  0x00 ; '.'
000000000020dd46         db  0x00 ; '.'
000000000020dd47         db  0x00 ; '.'
000000000020dd48         db  0xfb ; '.'
000000000020dd49         db  0xff ; '.'
000000000020dd4a         db  0xff ; '.'
000000000020dd4b         db  0x6f ; 'o'
000000000020dd4c         db  0x00 ; '.'
000000000020dd4d         db  0x00 ; '.'
000000000020dd4e         db  0x00 ; '.'
000000000020dd4f         db  0x00 ; '.'
000000000020dd50         db  0x01 ; '.'
000000000020dd51         db  0x00 ; '.'
000000000020dd52         db  0x00 ; '.'
000000000020dd53         db  0x08 ; '.'
000000000020dd54         db  0x00 ; '.'
000000000020dd55         db  0x00 ; '.'
000000000020dd56         db  0x00 ; '.'
000000000020dd57         db  0x00 ; '.'
000000000020dd58         db  0xfe ; '.'
000000000020dd59         db  0xff ; '.'
000000000020dd5a         db  0xff ; '.'
000000000020dd5b         db  0x6f ; 'o'
000000000020dd5c         db  0x00 ; '.'
000000000020dd5d         db  0x00 ; '.'
000000000020dd5e         db  0x00 ; '.'
000000000020dd5f         db  0x00 ; '.'
000000000020dd60         db  0x68 ; 'h'
000000000020dd61         db  0x0d ; '.'
000000000020dd62         db  0x00 ; '.'
000000000020dd63         db  0x00 ; '.'
000000000020dd64         db  0x00 ; '.'
000000000020dd65         db  0x00 ; '.'
000000000020dd66         db  0x00 ; '.'
000000000020dd67         db  0x00 ; '.'
000000000020dd68         db  0xff ; '.'
000000000020dd69         db  0xff ; '.'
000000000020dd6a         db  0xff ; '.'
000000000020dd6b         db  0x6f ; 'o'
000000000020dd6c         db  0x00 ; '.'
000000000020dd6d         db  0x00 ; '.'
000000000020dd6e         db  0x00 ; '.'
000000000020dd6f         db  0x00 ; '.'
000000000020dd70         db  0x01 ; '.'
000000000020dd71         db  0x00 ; '.'
000000000020dd72         db  0x00 ; '.'
000000000020dd73         db  0x00 ; '.'
000000000020dd74         db  0x00 ; '.'
000000000020dd75         db  0x00 ; '.'
000000000020dd76         db  0x00 ; '.'
000000000020dd77         db  0x00 ; '.'
000000000020dd78         db  0xf0 ; '.'
000000000020dd79         db  0xff ; '.'
000000000020dd7a         db  0xff ; '.'
000000000020dd7b         db  0x6f ; 'o'
000000000020dd7c         db  0x00 ; '.'
000000000020dd7d         db  0x00 ; '.'
000000000020dd7e         db  0x00 ; '.'
000000000020dd7f         db  0x00 ; '.'
000000000020dd80         db  0xd0 ; '.'
000000000020dd81         db  0x0c ; '.'
000000000020dd82         db  0x00 ; '.'
000000000020dd83         db  0x00 ; '.'
000000000020dd84         db  0x00 ; '.'
000000000020dd85         db  0x00 ; '.'
000000000020dd86         db  0x00 ; '.'
000000000020dd87         db  0x00 ; '.'
000000000020dd88         db  0xf9 ; '.'
000000000020dd89         db  0xff ; '.'
000000000020dd8a         db  0xff ; '.'
000000000020dd8b         db  0x6f ; 'o'
000000000020dd8c         db  0x00 ; '.'
000000000020dd8d         db  0x00 ; '.'
000000000020dd8e         db  0x00 ; '.'
000000000020dd8f         db  0x00 ; '.'
000000000020dd90         db  0x1a ; '.'
000000000020dd91         db  0x00 ; '.'
000000000020dd92         db  0x00 ; '.'
000000000020dd93         db  0x00 ; '.'
000000000020dd94         db  0x00 ; '.'
000000000020dd95         db  0x00 ; '.'
000000000020dd96         db  0x00 ; '.'
000000000020dd97         db  0x00 ; '.'
000000000020dd98         db  0x00 ; '.'
000000000020dd99         db  0x00 ; '.'
000000000020dd9a         db  0x00 ; '.'
000000000020dd9b         db  0x00 ; '.'
000000000020dd9c         db  0x00 ; '.'
000000000020dd9d         db  0x00 ; '.'
000000000020dd9e         db  0x00 ; '.'
000000000020dd9f         db  0x00 ; '.'
000000000020dda0         db  0x00 ; '.'
000000000020dda1         db  0x00 ; '.'
000000000020dda2         db  0x00 ; '.'
000000000020dda3         db  0x00 ; '.'
000000000020dda4         db  0x00 ; '.'
000000000020dda5         db  0x00 ; '.'
000000000020dda6         db  0x00 ; '.'
000000000020dda7         db  0x00 ; '.'
000000000020dda8         db  0x00 ; '.'
000000000020dda9         db  0x00 ; '.'
000000000020ddaa         db  0x00 ; '.'
000000000020ddab         db  0x00 ; '.'
000000000020ddac         db  0x00 ; '.'
000000000020ddad         db  0x00 ; '.'
000000000020ddae         db  0x00 ; '.'
000000000020ddaf         db  0x00 ; '.'
000000000020ddb0         db  0x00 ; '.'
000000000020ddb1         db  0x00 ; '.'
000000000020ddb2         db  0x00 ; '.'
000000000020ddb3         db  0x00 ; '.'
000000000020ddb4         db  0x00 ; '.'
000000000020ddb5         db  0x00 ; '.'
000000000020ddb6         db  0x00 ; '.'
000000000020ddb7         db  0x00 ; '.'
000000000020ddb8         db  0x00 ; '.'
000000000020ddb9         db  0x00 ; '.'
000000000020ddba         db  0x00 ; '.'
000000000020ddbb         db  0x00 ; '.'
000000000020ddbc         db  0x00 ; '.'
000000000020ddbd         db  0x00 ; '.'
000000000020ddbe         db  0x00 ; '.'
000000000020ddbf         db  0x00 ; '.'
000000000020ddc0         db  0x00 ; '.'
000000000020ddc1         db  0x00 ; '.'
000000000020ddc2         db  0x00 ; '.'
000000000020ddc3         db  0x00 ; '.'
000000000020ddc4         db  0x00 ; '.'
000000000020ddc5         db  0x00 ; '.'
000000000020ddc6         db  0x00 ; '.'
000000000020ddc7         db  0x00 ; '.'
000000000020ddc8         db  0x00 ; '.'
000000000020ddc9         db  0x00 ; '.'
000000000020ddca         db  0x00 ; '.'
000000000020ddcb         db  0x00 ; '.'
000000000020ddcc         db  0x00 ; '.'
000000000020ddcd         db  0x00 ; '.'
000000000020ddce         db  0x00 ; '.'
000000000020ddcf         db  0x00 ; '.'
000000000020ddd0         db  0x00 ; '.'
000000000020ddd1         db  0x00 ; '.'
000000000020ddd2         db  0x00 ; '.'
000000000020ddd3         db  0x00 ; '.'
000000000020ddd4         db  0x00 ; '.'
000000000020ddd5         db  0x00 ; '.'
000000000020ddd6         db  0x00 ; '.'
000000000020ddd7         db  0x00 ; '.'
000000000020ddd8         db  0x00 ; '.'
000000000020ddd9         db  0x00 ; '.'
000000000020ddda         db  0x00 ; '.'
000000000020dddb         db  0x00 ; '.'
000000000020dddc         db  0x00 ; '.'
000000000020dddd         db  0x00 ; '.'
000000000020ddde         db  0x00 ; '.'
000000000020dddf         db  0x00 ; '.'
000000000020dde0         db  0x00 ; '.'
000000000020dde1         db  0x00 ; '.'
000000000020dde2         db  0x00 ; '.'
000000000020dde3         db  0x00 ; '.'
000000000020dde4         db  0x00 ; '.'
000000000020dde5         db  0x00 ; '.'
000000000020dde6         db  0x00 ; '.'
000000000020dde7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20dde8; 0x20e000[ (536 bytes)
        ; File offset : [56808; 57344[ (536 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020dde8         db  0xf8 ; '.'
000000000020dde9         db  0xdb ; '.'
000000000020ddea         db  0x20 ; ' '
000000000020ddeb         db  0x00 ; '.'
000000000020ddec         db  0x00 ; '.'
000000000020dded         db  0x00 ; '.'
000000000020ddee         db  0x00 ; '.'
000000000020ddef         db  0x00 ; '.'
                     qword_20ddf0:
000000000020ddf0         dq         0x0000000000000000                          ; DATA XREF=0x16e0
000000000020ddf8         db  0x00 ; '.'                                         ; DATA XREF=0x16e6
000000000020ddf9         db  0x00 ; '.'
000000000020ddfa         db  0x00 ; '.'
000000000020ddfb         db  0x00 ; '.'
000000000020ddfc         db  0x00 ; '.'
000000000020ddfd         db  0x00 ; '.'
000000000020ddfe         db  0x00 ; '.'
000000000020ddff         db  0x00 ; '.'
                     abort@GOT:        // abort
000000000020de00         dq         0x000000000020e298                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020de08         dq         0x000000000020e2a0                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020de10         dq         0x000000000020e2a8                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020de18         dq         0x000000000020e2b8                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020de20         dq         0x000000000020e2c0                          ; DATA XREF=j___fpending
                     qsort@GOT:        // qsort
000000000020de28         dq         0x000000000020e2c8                          ; DATA XREF=j_qsort
                     fcntl@GOT:        // fcntl
000000000020de30         dq         0x000000000020e2d0                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
000000000020de38         dq         0x000000000020e2d8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020de40         dq         0x000000000020e2e0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020de48         dq         0x000000000020e2e8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020de50         dq         0x000000000020e2f0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020de58         dq         0x000000000020e2f8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020de60         dq         0x000000000020e300                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000020de68         dq         0x000000000020e308                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
000000000020de70         dq         0x000000000020e310                          ; DATA XREF=j_openat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020de78         dq         0x000000000020e318                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020de80         dq         0x000000000020e320                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020de88         dq         0x000000000020e328                          ; DATA XREF=j_mbrtowc
                     __fxstatat@GOT:        // __fxstatat
000000000020de90         dq         0x000000000020e330                          ; DATA XREF=j___fxstatat
                     strrchr@GOT:        // strrchr
000000000020de98         dq         0x000000000020e338                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020dea0         dq         0x000000000020e340                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020dea8         dq         0x000000000020e348                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020deb0         dq         0x000000000020e350                          ; DATA XREF=j_memset
                     close@GOT:        // close
000000000020deb8         dq         0x000000000020e358                          ; DATA XREF=j_close
                     closedir@GOT:        // closedir
000000000020dec0         dq         0x000000000020e360                          ; DATA XREF=j_closedir
                     memcmp@GOT:        // memcmp
000000000020dec8         dq         0x000000000020e370                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020ded0         dq         0x000000000020e378                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020ded8         dq         0x000000000020e380                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020dee0         dq         0x000000000020e388                          ; DATA XREF=j_strcmp
                     dirfd@GOT:        // dirfd
000000000020dee8         dq         0x000000000020e390                          ; DATA XREF=j_dirfd
                     umask@GOT:        // umask
000000000020def0         dq         0x000000000020e3a0                          ; DATA XREF=j_umask
                     memcpy@GOT:        // memcpy
000000000020def8         dq         0x000000000020e3a8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020df00         dq         0x000000000020e3b0                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020df08         dq         0x000000000020e3b8                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000020df10         dq         0x000000000020e3c0                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
000000000020df18         dq         0x000000000020e3c8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020df20         dq         0x000000000020e3d0                          ; DATA XREF=j_fflush
                     fchmodat@GOT:        // fchmodat
000000000020df28         dq         0x000000000020e3d8                          ; DATA XREF=j_fchmodat
                     nl_langinfo@GOT:        // nl_langinfo
000000000020df30         dq         0x000000000020e3e0                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020df38         dq         0x000000000020e3e8                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
000000000020df40         dq         0x000000000020e3f0                          ; DATA XREF=j___freading
                     fchdir@GOT:        // fchdir
000000000020df48         dq         0x000000000020e3f8                          ; DATA XREF=j_fchdir
                     realloc@GOT:        // realloc
000000000020df50         dq         0x000000000020e400                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020df58         dq         0x000000000020e408                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020df60         dq         0x000000000020e410                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
000000000020df68         dq         0x000000000020e418                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020df70         dq         0x000000000020e420                          ; DATA XREF=j_error
                     open@GOT:        // open
000000000020df78         dq         0x000000000020e428                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020df80         dq         0x000000000020e430                          ; DATA XREF=j_fseeko
                     fdopendir@GOT:        // fdopendir
000000000020df88         dq         0x000000000020e438                          ; DATA XREF=j_fdopendir
                     fstatfs@GOT:        // fstatfs
000000000020df90         dq         0x000000000020e440                          ; DATA XREF=j_fstatfs
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020df98         dq         0x000000000020e448                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020dfa0         dq         0x000000000020e450                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020dfa8         dq         0x000000000020e458                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020dfb0         dq         0x000000000020e460                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020dfb8         dq         0x000000000020e470                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020dfc0         dq         0x000000000020e478                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020dfc8         dq         0x000000000020e488                          ; DATA XREF=j___ctype_b_loc
                     qword_20dfd0:
000000000020dfd0         dq         0x0000000000000000                          ; DATA XREF=sub_1a90, filesystem_type+96, setup_dir.isra.4+12
                     qword_20dfd8:
000000000020dfd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020dfe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020dfe1         db  0x00 ; '.'
000000000020dfe2         db  0x00 ; '.'
000000000020dfe3         db  0x00 ; '.'
000000000020dfe4         db  0x00 ; '.'
000000000020dfe5         db  0x00 ; '.'
000000000020dfe6         db  0x00 ; '.'
000000000020dfe7         db  0x00 ; '.'
                     qword_20dfe8:
000000000020dfe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20dff0:
000000000020dff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20dff8:
000000000020dff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20dff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20e000; 0x20e0a0[ (160 bytes)
        ; File offset : [57344; 57504[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020e000         align      8
                     __dso_handle:
000000000020e008         dq         0x000000000020e008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     verbosity:
000000000020e010         dd         0x00000002                                  ; DATA XREF=main+576, main+592, main+1104, main+1113, sub_1fe0+482, sub_1fe0+572, sub_1fe0+1045
000000000020e014         align      8
                     Version:
000000000020e018         dq         0x000000000000a5ac                          ; "8.31", DATA XREF=main+345
                     exit_failure:
000000000020e020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020e024         db  0x00 ; '.'
000000000020e025         db  0x00 ; '.'
000000000020e026         db  0x00 ; '.'
000000000020e027         db  0x00 ; '.'
000000000020e028         db  0x00 ; '.'
000000000020e029         db  0x00 ; '.'
000000000020e02a         db  0x00 ; '.'
000000000020e02b         db  0x00 ; '.'
000000000020e02c         db  0x00 ; '.'
000000000020e02d         db  0x00 ; '.'
000000000020e02e         db  0x00 ; '.'
000000000020e02f         db  0x00 ; '.'
000000000020e030         db  0x00 ; '.'
000000000020e031         db  0x00 ; '.'
000000000020e032         db  0x00 ; '.'
000000000020e033         db  0x00 ; '.'
000000000020e034         db  0x00 ; '.'
000000000020e035         db  0x00 ; '.'
000000000020e036         db  0x00 ; '.'
000000000020e037         db  0x00 ; '.'
000000000020e038         db  0x00 ; '.'
000000000020e039         db  0x00 ; '.'
000000000020e03a         db  0x00 ; '.'
000000000020e03b         db  0x00 ; '.'
000000000020e03c         db  0x00 ; '.'
000000000020e03d         db  0x00 ; '.'
000000000020e03e         db  0x00 ; '.'
000000000020e03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020e040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020e041         db  0x00 ; '.'
000000000020e042         db  0x00 ; '.'
000000000020e043         db  0x00 ; '.'
000000000020e044         db  0x00 ; '.'
000000000020e045         db  0x00 ; '.'
000000000020e046         db  0x00 ; '.'
000000000020e047         db  0x00 ; '.'
000000000020e048         db  0x00 ; '.'
000000000020e049         db  0x00 ; '.'
000000000020e04a         db  0x00 ; '.'
000000000020e04b         db  0x00 ; '.'
000000000020e04c         db  0x00 ; '.'
000000000020e04d         db  0x00 ; '.'
000000000020e04e         db  0x00 ; '.'
000000000020e04f         db  0x00 ; '.'
000000000020e050         db  0x00 ; '.'
000000000020e051         db  0x00 ; '.'
000000000020e052         db  0x00 ; '.'
000000000020e053         db  0x00 ; '.'
000000000020e054         db  0x00 ; '.'
000000000020e055         db  0x00 ; '.'
000000000020e056         db  0x00 ; '.'
000000000020e057         db  0x00 ; '.'
000000000020e058         db  0x00 ; '.'
000000000020e059         db  0x00 ; '.'
000000000020e05a         db  0x00 ; '.'
000000000020e05b         db  0x00 ; '.'
000000000020e05c         db  0x00 ; '.'
000000000020e05d         db  0x00 ; '.'
000000000020e05e         db  0x00 ; '.'
000000000020e05f         db  0x00 ; '.'
000000000020e060         db  0x00 ; '.'
000000000020e061         db  0x00 ; '.'
000000000020e062         db  0x00 ; '.'
000000000020e063         db  0x00 ; '.'
000000000020e064         db  0x00 ; '.'
000000000020e065         db  0x00 ; '.'
000000000020e066         db  0x00 ; '.'
000000000020e067         db  0x00 ; '.'
000000000020e068         db  0x00 ; '.'
000000000020e069         db  0x00 ; '.'
000000000020e06a         db  0x00 ; '.'
000000000020e06b         db  0x00 ; '.'
000000000020e06c         db  0x00 ; '.'
000000000020e06d         db  0x00 ; '.'
000000000020e06e         db  0x00 ; '.'
000000000020e06f         db  0x00 ; '.'
000000000020e070         db  0x00 ; '.'
000000000020e071         db  0x00 ; '.'
000000000020e072         db  0x00 ; '.'
000000000020e073         db  0x00 ; '.'
000000000020e074         db  0x00 ; '.'
000000000020e075         db  0x00 ; '.'
000000000020e076         db  0x00 ; '.'
000000000020e077         db  0x00 ; '.'
                     nslots:
000000000020e078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020e07c         db  0x00 ; '.'
000000000020e07d         db  0x00 ; '.'
000000000020e07e         db  0x00 ; '.'
000000000020e07f         db  0x00 ; '.'
                     slotvec:
000000000020e080         dq         0x000000000020e090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020e088         db  0x00 ; '.'
000000000020e089         db  0x00 ; '.'
000000000020e08a         db  0x00 ; '.'
000000000020e08b         db  0x00 ; '.'
000000000020e08c         db  0x00 ; '.'
000000000020e08d         db  0x00 ; '.'
000000000020e08e         db  0x00 ; '.'
000000000020e08f         db  0x00 ; '.'
                     slotvec0:
000000000020e090         dq         1.26481e-321, 1.06462e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20e0a0; 0x20e280[ (480 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020e0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020e0a1         db  0x00 ; '.'
000000000020e0a2         db  0x00 ; '.'
000000000020e0a3         db  0x00 ; '.'
000000000020e0a4         db  0x00 ; '.'
000000000020e0a5         db  0x00 ; '.'
000000000020e0a6         db  0x00 ; '.'
000000000020e0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020e0a8         db  0x00 ; '.'                                         ; DATA XREF=main+338, usage+131, usage+168, usage+205, usage+242, usage+279, usage+316, usage+353, usage+390, usage+984, close_stdout+6
000000000020e0a9         db  0x00 ; '.'
000000000020e0aa         db  0x00 ; '.'
000000000020e0ab         db  0x00 ; '.'
000000000020e0ac         db  0x00 ; '.'
000000000020e0ad         db  0x00 ; '.'
000000000020e0ae         db  0x00 ; '.'
000000000020e0af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020e0b0         db  0x00 ; '.'                                         ; DATA XREF=main+472, main+710, main+794, sub_1fe0+272, sub_1fe0+1673
000000000020e0b1         db  0x00 ; '.'
000000000020e0b2         db  0x00 ; '.'
000000000020e0b3         db  0x00 ; '.'
000000000020e0b4         db  0x00 ; '.'
000000000020e0b5         db  0x00 ; '.'
000000000020e0b6         db  0x00 ; '.'
000000000020e0b7         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020e0b8         db  0x00 ; '.'                                         ; DATA XREF=main+269
000000000020e0b9         db  0x00 ; '.'
000000000020e0ba         db  0x00 ; '.'
000000000020e0bb         db  0x00 ; '.'
000000000020e0bc         db  0x00 ; '.'
000000000020e0bd         db  0x00 ; '.'
000000000020e0be         db  0x00 ; '.'
000000000020e0bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020e0c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020e0c1         db  0x00 ; '.'
000000000020e0c2         db  0x00 ; '.'
000000000020e0c3         db  0x00 ; '.'
000000000020e0c4         db  0x00 ; '.'
000000000020e0c5         db  0x00 ; '.'
000000000020e0c6         db  0x00 ; '.'
000000000020e0c7         db  0x00 ; '.'
000000000020e0c8         db  0x00 ; '.'
000000000020e0c9         db  0x00 ; '.'
000000000020e0ca         db  0x00 ; '.'
000000000020e0cb         db  0x00 ; '.'
000000000020e0cc         db  0x00 ; '.'
000000000020e0cd         db  0x00 ; '.'
000000000020e0ce         db  0x00 ; '.'
000000000020e0cf         db  0x00 ; '.'
000000000020e0d0         db  0x00 ; '.'
000000000020e0d1         db  0x00 ; '.'
000000000020e0d2         db  0x00 ; '.'
000000000020e0d3         db  0x00 ; '.'
000000000020e0d4         db  0x00 ; '.'
000000000020e0d5         db  0x00 ; '.'
000000000020e0d6         db  0x00 ; '.'
000000000020e0d7         db  0x00 ; '.'
000000000020e0d8         db  0x00 ; '.'
000000000020e0d9         db  0x00 ; '.'
000000000020e0da         db  0x00 ; '.'
000000000020e0db         db  0x00 ; '.'
000000000020e0dc         db  0x00 ; '.'
000000000020e0dd         db  0x00 ; '.'
000000000020e0de         db  0x00 ; '.'
000000000020e0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020e0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020e0e1         db  0x00 ; '.'
000000000020e0e2         db  0x00 ; '.'
000000000020e0e3         db  0x00 ; '.'
000000000020e0e4         db  0x00 ; '.'
000000000020e0e5         db  0x00 ; '.'
000000000020e0e6         db  0x00 ; '.'
000000000020e0e7         db  0x00 ; '.'
                     completed.7697:
000000000020e0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020e0e9         db  0x00 ; '.'
000000000020e0ea         db  0x00 ; '.'
000000000020e0eb         db  0x00 ; '.'
000000000020e0ec         db  0x00 ; '.'
000000000020e0ed         db  0x00 ; '.'
000000000020e0ee         db  0x00 ; '.'
000000000020e0ef         db  0x00 ; '.'
                     dev_ino_buf.7087:
000000000020e0f0         db  0x00 ; '.'                                         ; DATA XREF=sub_1fe0+1537
000000000020e0f1         db  0x00 ; '.'
000000000020e0f2         db  0x00 ; '.'
000000000020e0f3         db  0x00 ; '.'
000000000020e0f4         db  0x00 ; '.'
000000000020e0f5         db  0x00 ; '.'
000000000020e0f6         db  0x00 ; '.'
000000000020e0f7         db  0x00 ; '.'
000000000020e0f8         db  0x00 ; '.'
000000000020e0f9         db  0x00 ; '.'
000000000020e0fa         db  0x00 ; '.'
000000000020e0fb         db  0x00 ; '.'
000000000020e0fc         db  0x00 ; '.'
000000000020e0fd         db  0x00 ; '.'
000000000020e0fe         db  0x00 ; '.'
000000000020e0ff         db  0x00 ; '.'
                     root_dev_ino:
000000000020e100         db  0x00 ; '.'                                         ; DATA XREF=main+783, sub_1fe0+47, sub_1fe0+1552
000000000020e101         db  0x00 ; '.'
000000000020e102         db  0x00 ; '.'
000000000020e103         db  0x00 ; '.'
000000000020e104         db  0x00 ; '.'
000000000020e105         db  0x00 ; '.'
000000000020e106         db  0x00 ; '.'
000000000020e107         db  0x00 ; '.'
                     diagnose_surprises:
000000000020e108         db  0x00 ; '.'                                         ; DATA XREF=main+136, main+557, sub_1fe0+753
                     force_silent:
000000000020e109         db  0x00 ; '.'                                         ; DATA XREF=main+143, main+420, main+965, main+1081, main+1163, main+1244, main+1316, sub_1fe0+180, sub_1fe0+979
                     recurse:
000000000020e10a         db  0x00 ; '.'                                         ; DATA XREF=main+150, main+437, main+757, main+1129
000000000020e10b         db  0x00 ; '.'
                     umask_value:
000000000020e10c         db  0x00 ; '.'                                         ; DATA XREF=sub_1fe0+88, sub_1fe0+324
000000000020e10d         db  0x00 ; '.'
000000000020e10e         db  0x00 ; '.'
000000000020e10f         db  0x00 ; '.'
                     change:
000000000020e110         db  0x00 ; '.'                                         ; DATA XREF=main+733, sub_1fe0+94, sub_1fe0+304, sub_1fe0+774
000000000020e111         db  0x00 ; '.'
000000000020e112         db  0x00 ; '.'
000000000020e113         db  0x00 ; '.'
000000000020e114         db  0x00 ; '.'
000000000020e115         db  0x00 ; '.'
000000000020e116         db  0x00 ; '.'
000000000020e117         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020e118         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020e119         db  0x00 ; '.'
000000000020e11a         db  0x00 ; '.'
000000000020e11b         db  0x00 ; '.'
000000000020e11c         db  0x00 ; '.'
000000000020e11d         db  0x00 ; '.'
000000000020e11e         db  0x00 ; '.'
000000000020e11f         db  0x00 ; '.'
                     file_name:
000000000020e120         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020e121         db  0x00 ; '.'
000000000020e122         db  0x00 ; '.'
000000000020e123         db  0x00 ; '.'
000000000020e124         db  0x00 ; '.'
000000000020e125         db  0x00 ; '.'
000000000020e126         db  0x00 ; '.'
000000000020e127         db  0x00 ; '.'
                     program_name:
000000000020e128         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020e129         db  0x00 ; '.'
000000000020e12a         db  0x00 ; '.'
000000000020e12b         db  0x00 ; '.'
000000000020e12c         db  0x00 ; '.'
000000000020e12d         db  0x00 ; '.'
000000000020e12e         db  0x00 ; '.'
000000000020e12f         db  0x00 ; '.'
000000000020e130         db  0x00 ; '.'
000000000020e131         db  0x00 ; '.'
000000000020e132         db  0x00 ; '.'
000000000020e133         db  0x00 ; '.'
000000000020e134         db  0x00 ; '.'
000000000020e135         db  0x00 ; '.'
000000000020e136         db  0x00 ; '.'
000000000020e137         db  0x00 ; '.'
000000000020e138         db  0x00 ; '.'
000000000020e139         db  0x00 ; '.'
000000000020e13a         db  0x00 ; '.'
000000000020e13b         db  0x00 ; '.'
000000000020e13c         db  0x00 ; '.'
000000000020e13d         db  0x00 ; '.'
000000000020e13e         db  0x00 ; '.'
000000000020e13f         db  0x00 ; '.'
                     slot0:
000000000020e140         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020e141         db  0x00 ; '.'
000000000020e142         db  0x00 ; '.'
000000000020e143         db  0x00 ; '.'
000000000020e144         db  0x00 ; '.'
000000000020e145         db  0x00 ; '.'
000000000020e146         db  0x00 ; '.'
000000000020e147         db  0x00 ; '.'
000000000020e148         db  0x00 ; '.'
000000000020e149         db  0x00 ; '.'
000000000020e14a         db  0x00 ; '.'
000000000020e14b         db  0x00 ; '.'
000000000020e14c         db  0x00 ; '.'
000000000020e14d         db  0x00 ; '.'
000000000020e14e         db  0x00 ; '.'
000000000020e14f         db  0x00 ; '.'
000000000020e150         db  0x00 ; '.'
000000000020e151         db  0x00 ; '.'
000000000020e152         db  0x00 ; '.'
000000000020e153         db  0x00 ; '.'
000000000020e154         db  0x00 ; '.'
000000000020e155         db  0x00 ; '.'
000000000020e156         db  0x00 ; '.'
000000000020e157         db  0x00 ; '.'
000000000020e158         db  0x00 ; '.'
000000000020e159         db  0x00 ; '.'
000000000020e15a         db  0x00 ; '.'
000000000020e15b         db  0x00 ; '.'
000000000020e15c         db  0x00 ; '.'
000000000020e15d         db  0x00 ; '.'
000000000020e15e         db  0x00 ; '.'
000000000020e15f         db  0x00 ; '.'
000000000020e160         db  0x00 ; '.'
000000000020e161         db  0x00 ; '.'
000000000020e162         db  0x00 ; '.'
000000000020e163         db  0x00 ; '.'
000000000020e164         db  0x00 ; '.'
000000000020e165         db  0x00 ; '.'
000000000020e166         db  0x00 ; '.'
000000000020e167         db  0x00 ; '.'
000000000020e168         db  0x00 ; '.'
000000000020e169         db  0x00 ; '.'
000000000020e16a         db  0x00 ; '.'
000000000020e16b         db  0x00 ; '.'
000000000020e16c         db  0x00 ; '.'
000000000020e16d         db  0x00 ; '.'
000000000020e16e         db  0x00 ; '.'
000000000020e16f         db  0x00 ; '.'
000000000020e170         db  0x00 ; '.'
000000000020e171         db  0x00 ; '.'
000000000020e172         db  0x00 ; '.'
000000000020e173         db  0x00 ; '.'
000000000020e174         db  0x00 ; '.'
000000000020e175         db  0x00 ; '.'
000000000020e176         db  0x00 ; '.'
000000000020e177         db  0x00 ; '.'
000000000020e178         db  0x00 ; '.'
000000000020e179         db  0x00 ; '.'
000000000020e17a         db  0x00 ; '.'
000000000020e17b         db  0x00 ; '.'
000000000020e17c         db  0x00 ; '.'
000000000020e17d         db  0x00 ; '.'
000000000020e17e         db  0x00 ; '.'
000000000020e17f         db  0x00 ; '.'
000000000020e180         db  0x00 ; '.'
000000000020e181         db  0x00 ; '.'
000000000020e182         db  0x00 ; '.'
000000000020e183         db  0x00 ; '.'
000000000020e184         db  0x00 ; '.'
000000000020e185         db  0x00 ; '.'
000000000020e186         db  0x00 ; '.'
000000000020e187         db  0x00 ; '.'
000000000020e188         db  0x00 ; '.'
000000000020e189         db  0x00 ; '.'
000000000020e18a         db  0x00 ; '.'
000000000020e18b         db  0x00 ; '.'
000000000020e18c         db  0x00 ; '.'
000000000020e18d         db  0x00 ; '.'
000000000020e18e         db  0x00 ; '.'
000000000020e18f         db  0x00 ; '.'
000000000020e190         db  0x00 ; '.'
000000000020e191         db  0x00 ; '.'
000000000020e192         db  0x00 ; '.'
000000000020e193         db  0x00 ; '.'
000000000020e194         db  0x00 ; '.'
000000000020e195         db  0x00 ; '.'
000000000020e196         db  0x00 ; '.'
000000000020e197         db  0x00 ; '.'
000000000020e198         db  0x00 ; '.'
000000000020e199         db  0x00 ; '.'
000000000020e19a         db  0x00 ; '.'
000000000020e19b         db  0x00 ; '.'
000000000020e19c         db  0x00 ; '.'
000000000020e19d         db  0x00 ; '.'
000000000020e19e         db  0x00 ; '.'
000000000020e19f         db  0x00 ; '.'
000000000020e1a0         db  0x00 ; '.'
000000000020e1a1         db  0x00 ; '.'
000000000020e1a2         db  0x00 ; '.'
000000000020e1a3         db  0x00 ; '.'
000000000020e1a4         db  0x00 ; '.'
000000000020e1a5         db  0x00 ; '.'
000000000020e1a6         db  0x00 ; '.'
000000000020e1a7         db  0x00 ; '.'
000000000020e1a8         db  0x00 ; '.'
000000000020e1a9         db  0x00 ; '.'
000000000020e1aa         db  0x00 ; '.'
000000000020e1ab         db  0x00 ; '.'
000000000020e1ac         db  0x00 ; '.'
000000000020e1ad         db  0x00 ; '.'
000000000020e1ae         db  0x00 ; '.'
000000000020e1af         db  0x00 ; '.'
000000000020e1b0         db  0x00 ; '.'
000000000020e1b1         db  0x00 ; '.'
000000000020e1b2         db  0x00 ; '.'
000000000020e1b3         db  0x00 ; '.'
000000000020e1b4         db  0x00 ; '.'
000000000020e1b5         db  0x00 ; '.'
000000000020e1b6         db  0x00 ; '.'
000000000020e1b7         db  0x00 ; '.'
000000000020e1b8         db  0x00 ; '.'
000000000020e1b9         db  0x00 ; '.'
000000000020e1ba         db  0x00 ; '.'
000000000020e1bb         db  0x00 ; '.'
000000000020e1bc         db  0x00 ; '.'
000000000020e1bd         db  0x00 ; '.'
000000000020e1be         db  0x00 ; '.'
000000000020e1bf         db  0x00 ; '.'
000000000020e1c0         db  0x00 ; '.'
000000000020e1c1         db  0x00 ; '.'
000000000020e1c2         db  0x00 ; '.'
000000000020e1c3         db  0x00 ; '.'
000000000020e1c4         db  0x00 ; '.'
000000000020e1c5         db  0x00 ; '.'
000000000020e1c6         db  0x00 ; '.'
000000000020e1c7         db  0x00 ; '.'
000000000020e1c8         db  0x00 ; '.'
000000000020e1c9         db  0x00 ; '.'
000000000020e1ca         db  0x00 ; '.'
000000000020e1cb         db  0x00 ; '.'
000000000020e1cc         db  0x00 ; '.'
000000000020e1cd         db  0x00 ; '.'
000000000020e1ce         db  0x00 ; '.'
000000000020e1cf         db  0x00 ; '.'
000000000020e1d0         db  0x00 ; '.'
000000000020e1d1         db  0x00 ; '.'
000000000020e1d2         db  0x00 ; '.'
000000000020e1d3         db  0x00 ; '.'
000000000020e1d4         db  0x00 ; '.'
000000000020e1d5         db  0x00 ; '.'
000000000020e1d6         db  0x00 ; '.'
000000000020e1d7         db  0x00 ; '.'
000000000020e1d8         db  0x00 ; '.'
000000000020e1d9         db  0x00 ; '.'
000000000020e1da         db  0x00 ; '.'
000000000020e1db         db  0x00 ; '.'
000000000020e1dc         db  0x00 ; '.'
000000000020e1dd         db  0x00 ; '.'
000000000020e1de         db  0x00 ; '.'
000000000020e1df         db  0x00 ; '.'
000000000020e1e0         db  0x00 ; '.'
000000000020e1e1         db  0x00 ; '.'
000000000020e1e2         db  0x00 ; '.'
000000000020e1e3         db  0x00 ; '.'
000000000020e1e4         db  0x00 ; '.'
000000000020e1e5         db  0x00 ; '.'
000000000020e1e6         db  0x00 ; '.'
000000000020e1e7         db  0x00 ; '.'
000000000020e1e8         db  0x00 ; '.'
000000000020e1e9         db  0x00 ; '.'
000000000020e1ea         db  0x00 ; '.'
000000000020e1eb         db  0x00 ; '.'
000000000020e1ec         db  0x00 ; '.'
000000000020e1ed         db  0x00 ; '.'
000000000020e1ee         db  0x00 ; '.'
000000000020e1ef         db  0x00 ; '.'
000000000020e1f0         db  0x00 ; '.'
000000000020e1f1         db  0x00 ; '.'
000000000020e1f2         db  0x00 ; '.'
000000000020e1f3         db  0x00 ; '.'
000000000020e1f4         db  0x00 ; '.'
000000000020e1f5         db  0x00 ; '.'
000000000020e1f6         db  0x00 ; '.'
000000000020e1f7         db  0x00 ; '.'
000000000020e1f8         db  0x00 ; '.'
000000000020e1f9         db  0x00 ; '.'
000000000020e1fa         db  0x00 ; '.'
000000000020e1fb         db  0x00 ; '.'
000000000020e1fc         db  0x00 ; '.'
000000000020e1fd         db  0x00 ; '.'
000000000020e1fe         db  0x00 ; '.'
000000000020e1ff         db  0x00 ; '.'
000000000020e200         db  0x00 ; '.'
000000000020e201         db  0x00 ; '.'
000000000020e202         db  0x00 ; '.'
000000000020e203         db  0x00 ; '.'
000000000020e204         db  0x00 ; '.'
000000000020e205         db  0x00 ; '.'
000000000020e206         db  0x00 ; '.'
000000000020e207         db  0x00 ; '.'
000000000020e208         db  0x00 ; '.'
000000000020e209         db  0x00 ; '.'
000000000020e20a         db  0x00 ; '.'
000000000020e20b         db  0x00 ; '.'
000000000020e20c         db  0x00 ; '.'
000000000020e20d         db  0x00 ; '.'
000000000020e20e         db  0x00 ; '.'
000000000020e20f         db  0x00 ; '.'
000000000020e210         db  0x00 ; '.'
000000000020e211         db  0x00 ; '.'
000000000020e212         db  0x00 ; '.'
000000000020e213         db  0x00 ; '.'
000000000020e214         db  0x00 ; '.'
000000000020e215         db  0x00 ; '.'
000000000020e216         db  0x00 ; '.'
000000000020e217         db  0x00 ; '.'
000000000020e218         db  0x00 ; '.'
000000000020e219         db  0x00 ; '.'
000000000020e21a         db  0x00 ; '.'
000000000020e21b         db  0x00 ; '.'
000000000020e21c         db  0x00 ; '.'
000000000020e21d         db  0x00 ; '.'
000000000020e21e         db  0x00 ; '.'
000000000020e21f         db  0x00 ; '.'
000000000020e220         db  0x00 ; '.'
000000000020e221         db  0x00 ; '.'
000000000020e222         db  0x00 ; '.'
000000000020e223         db  0x00 ; '.'
000000000020e224         db  0x00 ; '.'
000000000020e225         db  0x00 ; '.'
000000000020e226         db  0x00 ; '.'
000000000020e227         db  0x00 ; '.'
000000000020e228         db  0x00 ; '.'
000000000020e229         db  0x00 ; '.'
000000000020e22a         db  0x00 ; '.'
000000000020e22b         db  0x00 ; '.'
000000000020e22c         db  0x00 ; '.'
000000000020e22d         db  0x00 ; '.'
000000000020e22e         db  0x00 ; '.'
000000000020e22f         db  0x00 ; '.'
000000000020e230         db  0x00 ; '.'
000000000020e231         db  0x00 ; '.'
000000000020e232         db  0x00 ; '.'
000000000020e233         db  0x00 ; '.'
000000000020e234         db  0x00 ; '.'
000000000020e235         db  0x00 ; '.'
000000000020e236         db  0x00 ; '.'
000000000020e237         db  0x00 ; '.'
000000000020e238         db  0x00 ; '.'
000000000020e239         db  0x00 ; '.'
000000000020e23a         db  0x00 ; '.'
000000000020e23b         db  0x00 ; '.'
000000000020e23c         db  0x00 ; '.'
000000000020e23d         db  0x00 ; '.'
000000000020e23e         db  0x00 ; '.'
000000000020e23f         db  0x00 ; '.'
                     default_quoting_options:
000000000020e240         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020e241         db  0x00 ; '.'
000000000020e242         db  0x00 ; '.'
000000000020e243         db  0x00 ; '.'
000000000020e244         db  0x00 ; '.'
000000000020e245         db  0x00 ; '.'
000000000020e246         db  0x00 ; '.'
000000000020e247         db  0x00 ; '.'
000000000020e248         db  0x00 ; '.'
000000000020e249         db  0x00 ; '.'
000000000020e24a         db  0x00 ; '.'
000000000020e24b         db  0x00 ; '.'
000000000020e24c         db  0x00 ; '.'
000000000020e24d         db  0x00 ; '.'
000000000020e24e         db  0x00 ; '.'
000000000020e24f         db  0x00 ; '.'
000000000020e250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020e251         db  0x00 ; '.'
000000000020e252         db  0x00 ; '.'
000000000020e253         db  0x00 ; '.'
000000000020e254         db  0x00 ; '.'
000000000020e255         db  0x00 ; '.'
000000000020e256         db  0x00 ; '.'
000000000020e257         db  0x00 ; '.'
000000000020e258         db  0x00 ; '.'
000000000020e259         db  0x00 ; '.'
000000000020e25a         db  0x00 ; '.'
000000000020e25b         db  0x00 ; '.'
000000000020e25c         db  0x00 ; '.'
000000000020e25d         db  0x00 ; '.'
000000000020e25e         db  0x00 ; '.'
000000000020e25f         db  0x00 ; '.'
000000000020e260         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020e261         db  0x00 ; '.'
000000000020e262         db  0x00 ; '.'
000000000020e263         db  0x00 ; '.'
000000000020e264         db  0x00 ; '.'
000000000020e265         db  0x00 ; '.'
000000000020e266         db  0x00 ; '.'
000000000020e267         db  0x00 ; '.'
000000000020e268         db  0x00 ; '.'
000000000020e269         db  0x00 ; '.'
000000000020e26a         db  0x00 ; '.'
000000000020e26b         db  0x00 ; '.'
000000000020e26c         db  0x00 ; '.'
000000000020e26d         db  0x00 ; '.'
000000000020e26e         db  0x00 ; '.'
000000000020e26f         db  0x00 ; '.'
                     qword_20e270:
000000000020e270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020e271         db  0x00 ; '.'
000000000020e272         db  0x00 ; '.'
000000000020e273         db  0x00 ; '.'
000000000020e274         db  0x00 ; '.'
000000000020e275         db  0x00 ; '.'
000000000020e276         db  0x00 ; '.'
000000000020e277         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020e278         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020e279         db  0x00 ; '.'
000000000020e27a         db  0x00 ; '.'
000000000020e27b         db  0x00 ; '.'
000000000020e27c         db  0x00 ; '.'
000000000020e27d         db  0x00 ; '.'
000000000020e27e         db  0x00 ; '.'
000000000020e27f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20e290; 0x20e690[ (1024 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20e290; 0x41c920[ (2156176 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020e290         extern function code
                     abort:
000000000020e298         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020e2a0         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020e2a8         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020e2b0         extern function code
                     _exit:
000000000020e2b8         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020e2c0         extern function code                                   ; DATA XREF=__fpending@GOT
                     qsort:
000000000020e2c8         extern function code                                   ; DATA XREF=qsort@GOT
                     fcntl:
000000000020e2d0         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
000000000020e2d8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020e2e0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020e2e8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020e2f0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020e2f8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020e300         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020e308         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
000000000020e310         extern function code                                   ; DATA XREF=openat@GOT
                     __stack_chk_fail:
000000000020e318         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020e320         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020e328         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __fxstatat:
000000000020e330         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     strrchr:
000000000020e338         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020e340         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020e348         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020e350         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020e358         extern function code                                   ; DATA XREF=close@GOT
                     closedir:
000000000020e360         extern function code                                   ; DATA XREF=closedir@GOT
                     __libc_start_main:
000000000020e368         extern function code
                     memcmp:
000000000020e370         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020e378         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020e380         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020e388         extern function code                                   ; DATA XREF=strcmp@GOT
                     dirfd:
000000000020e390         extern function code                                   ; DATA XREF=dirfd@GOT
                     __gmon_start__:
000000000020e398         extern function code
                     umask:
000000000020e3a0         extern function code                                   ; DATA XREF=umask@GOT
                     memcpy:
000000000020e3a8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020e3b0         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020e3b8         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
000000000020e3c0         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000020e3c8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020e3d0         extern function code                                   ; DATA XREF=fflush@GOT
                     fchmodat:
000000000020e3d8         extern function code                                   ; DATA XREF=fchmodat@GOT
                     nl_langinfo:
000000000020e3e0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020e3e8         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020e3f0         extern function code                                   ; DATA XREF=__freading@GOT
                     fchdir:
000000000020e3f8         extern function code                                   ; DATA XREF=fchdir@GOT
                     realloc:
000000000020e400         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020e408         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020e410         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020e418         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020e420         extern function code                                   ; DATA XREF=error@GOT
                     open:
000000000020e428         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020e430         extern function code                                   ; DATA XREF=fseeko@GOT
                     fdopendir:
000000000020e438         extern function code                                   ; DATA XREF=fdopendir@GOT
                     fstatfs:
000000000020e440         extern function code                                   ; DATA XREF=fstatfs@GOT
                     __cxa_atexit:
000000000020e448         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020e450         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020e458         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020e460         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020e468         extern function code
                     mbsinit:
000000000020e470         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020e478         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020e480         extern function code
                     __ctype_b_loc:
000000000020e488         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020e490         extern function code
                     abort@@GLIBC_2.2.5:
000000000020e498         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020e4a0         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020e4a8         extern function code
                     _ITM_deregisterTMCloneTable_20e4b0:        // _ITM_deregisterTMCloneTable
000000000020e4b0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020e4b8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020e4c0         extern function code
                     qsort@@GLIBC_2.2.5:
000000000020e4c8         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020e4d0         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020e4d8         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020e4e0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020e4e8         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020e4f0         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020e4f8         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020e500         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020e508         extern function code
                     openat@@GLIBC_2.4:
000000000020e510         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020e518         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020e520         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020e528         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020e530         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020e538         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020e540         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020e548         extern function code
                     memset@@GLIBC_2.2.5:
000000000020e550         extern function code
                     close@@GLIBC_2.2.5:
000000000020e558         extern function code
                     closedir@@GLIBC_2.2.5:
000000000020e560         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020e568         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020e570         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020e578         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020e580         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020e588         extern function code
                     dirfd@@GLIBC_2.2.5:
000000000020e590         extern function code
                     __gmon_start___20e598:        // __gmon_start__
000000000020e598         extern function code
                     umask@@GLIBC_2.2.5:
000000000020e5a0         extern function code
                     memcpy@@GLIBC_2.14:
000000000020e5a8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020e5b0         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020e5b8         extern function code
                     readdir@@GLIBC_2.2.5:
000000000020e5c0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020e5c8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020e5d0         extern function code
                     fchmodat@@GLIBC_2.4:
000000000020e5d8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020e5e0         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020e5e8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020e5f0         extern function code
                     fchdir@@GLIBC_2.2.5:
000000000020e5f8         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020e600         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020e608         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020e610         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020e618         extern function code
                     error@@GLIBC_2.2.5:
000000000020e620         extern function code
                     open@@GLIBC_2.2.5:
000000000020e628         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020e630         extern function code
                     fdopendir@@GLIBC_2.4:
000000000020e638         extern function code
                     fstatfs@@GLIBC_2.2.5:
000000000020e640         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020e648         extern function code
                     exit@@GLIBC_2.2.5:
000000000020e650         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020e658         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020e660         extern function code
                     _ITM_registerTMCloneTable_20e668:        // _ITM_registerTMCloneTable
000000000020e668         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020e670         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020e678         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020e680         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020e688         extern function code
