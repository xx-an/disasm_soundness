
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/chcon
        UUID: 5D6E7807-C33A-AD87-67B4-A9E13AE86202
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xd060[ (53344 bytes)
        ; File offset : [0; 53344[ (53344 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x90 ; '.'
0000000000000019         db  0x27 ; '''
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x98 ; '.'
0000000000000029         db  0x51 ; 'Q'
000000000000002a         db  0x04 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x60 ; '`'
00000000000000d1         db  0xd0 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x60 ; '`'
00000000000000d9         db  0xd0 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x90 ; '.'
00000000000000f1         db  0xd9 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x90 ; '.'
00000000000000f9         db  0xd9 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x90 ; '.'                                         ; DATA XREF=quotearg_free+87, fts_stat+144, fts_build+1222, rpl_fflush+18, slotvec0
0000000000000101         db  0xd9 ; '.'
0000000000000102         db  0x20 ; ' '                                         ; DATA XREF=setup_dir.isra.4, enter_dir.isra.10, leave_dir.isra.12+23, rpl_fts_close+159, rpl_fts_read+688
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xf0 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xd0 ; '.'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xb8 ; '.'
0000000000000129         db  0xdb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xb8 ; '.'
0000000000000131         db  0xdb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xb8 ; '.'
0000000000000139         db  0xdb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xd4 ; '.'
0000000000000199         db  0xb3 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xd4 ; '.'
00000000000001a1         db  0xb3 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xd4 ; '.'
00000000000001a9         db  0xb3 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xc4 ; '.'
00000000000001b1         db  0x04 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xc4 ; '.'
00000000000001b9         db  0x04 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xfts_open+4, diropen.isra.6+20, fts_build+1173, fts_build+1365
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'                                         ; DATA XREF=fts_build+1159, rpl_fts_open+30, rpl_fts_open+35, rpl_fts_open+629
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x90 ; '.'
0000000000000209         db  0xd9 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x90 ; '.'
0000000000000211         db  0xd9 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x90 ; '.'
0000000000000219         db  0xd9 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x70 ; 'p'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x70 ; 'p'
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x5d ; ']'
0000000000000285         db  0x6e ; 'n'
0000000000000286         db  0x78 ; 'x'
0000000000000287         db  0x07 ; '.'
0000000000000288         db  0xc3 ; '.'
0000000000000289         db  0x3a ; ':'
000000000000028a         db  0xad ; '.'
000000000000028b         db  0x87 ; '.'
000000000000028c         db  0x67 ; 'g'
000000000000028d         db  0xb4 ; '.'
000000000000028e         db  0xa9 ; '.'
000000000000028f         db  0xe1 ; '.'
0000000000000290         db  0x3a ; ':'
0000000000000291         db  0xe8 ; '.'
0000000000000292         db  0x62 ; 'b'
0000000000000293         db  0x02 ; '.'
0000000000000294         db  0x9c ; '.'
0000000000000295         db  0xef ; '.'
0000000000000296         db  0x6a ; 'j'
0000000000000297         db  0x55 ; 'U'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x47 ; 'G'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x47 ; 'G'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x48 ; 'H'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x4d ; 'M'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xa48[ (1896 bytes)
        ; File offset : [736; 2632[ (1896 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x99 ; '.'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0xaa ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x1e ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x40 ; '@'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xfd ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xb0 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x12 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xd5 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x03 ; '.'
00000000000003b9         db  0x02 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x18 ; '.'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x47 ; 'G'
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x58 ; 'X'                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x01 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=fts_build+2307, rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x43 ; 'C'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x57 ; 'W'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xf2 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x10 ; '.'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x88 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x2c ; ','
0000000000000491         db  0x02 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x6b ; 'k'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x77 ; 'w'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xab ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x38 ; '8'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x59 ; 'Y'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x4f ; 'O'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x4b ; 'K'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xe4 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x17 ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xc7 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x59 ; 'Y'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xc5 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x61 ; 'a'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xb6 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x6b ; 'k'
00000000000005f9         db  0x02 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x2f ; '/'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x8a ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x09 ; '.'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x64 ; 'd'
0000000000000659         db  0x02 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x7d ; '}'
0000000000000671         db  0x02 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x19 ; '.'
0000000000000689         db  0x03 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x20 ; ' '
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x51 ; 'Q'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0xc0 ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x33 ; '3'
00000000000006d1         db  0x02 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x26 ; '&'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x5f ; '_'
0000000000000701         db  0x01 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x0b ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x78 ; 'x'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xb7 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x99 ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x6a ; 'j'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x9a ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x2e ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x19 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x3b ; ';'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x71 ; 'q'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xbd ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xe0 ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x52 ; 'R'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x83 ; '.'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x66 ; 'f'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xa2 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xb9 ; '.'
0000000000000899         db  0x02 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xb1 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xce ; '.'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x36 ; '6'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x28 ; '('
00000000000008f9         db  0x03 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x20 ; ' '
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x70 ; 'p'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x91 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x09 ; '.'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x22 ; '"'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x84 ; '.'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x1e ; '.'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x44 ; 'D'
0000000000000989         db  0x01 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x11 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x19 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x88 ; '.'
0000000000000991         db  0xe0 ; '.'
0000000000000992         db  0x20 ; ' '
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x08 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x9e ; '.'
00000000000009a1         db  0x02 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x11 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x19 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x80 ; '.'
00000000000009a9         db  0xe0 ; '.'
00000000000009aa         db  0x20 ; ' '
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x08 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0xcc ; '.'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x21 ; '!'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0xa0 ; '.'
00000000000009c1         db  0xe0 ; '.'
00000000000009c2         db  0x20 ; ' '
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x08 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xa9 ; '.'
00000000000009d1         db  0x02 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x11 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x19 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0xa0 ; '.'
00000000000009d9         db  0xe0 ; '.'
00000000000009da         db  0x20 ; ' '
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x08 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xe5 ; '.'
00000000000009e9         db  0x01 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x21 ; '!'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x19 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x80 ; '.'
00000000000009f1         db  0xe0 ; '.'
00000000000009f2         db  0x20 ; ' '
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x08 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0xa4 ; '.'
0000000000000a01         db  0x01 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x11 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x19 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0xc0 ; '.'
0000000000000a09         db  0xe0 ; '.'
0000000000000a0a         db  0x20 ; ' '
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x08 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x48 ; 'H'
0000000000000a19         db  0x00 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x11 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x19 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x90 ; '.'
0000000000000a21         db  0xe0 ; '.'
0000000000000a22         db  0x20 ; ' '
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x04 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x92 ; '.'
0000000000000a31         db  0x01 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x11 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x19 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x98 ; '.'
0000000000000a39         db  0xe0 ; '.'
0000000000000a3a         db  0x20 ; ' '
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x08 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xa48; 0xd8a[ (834 bytes)
        ; File offset : [2632; 3466[ (834 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000a48         db  0x00 ; '.'
0000000000000a49         db  0x6c ; 'l'
0000000000000a4a         db  0x69 ; 'i'
0000000000000a4b         db  0x62 ; 'b'
0000000000000a4c         db  0x63 ; 'c'
0000000000000a4d         db  0x2e ; '.'
0000000000000a4e         db  0x73 ; 's'
0000000000000a4f         db  0x6f ; 'o'
0000000000000a50         db  0x2e ; '.'
0000000000000a51         db  0x36 ; '6'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x66 ; 'f'
0000000000000a54         db  0x66 ; 'f'
0000000000000a55         db  0x6c ; 'l'
0000000000000a56         db  0x75 ; 'u'
0000000000000a57         db  0x73 ; 's'
0000000000000a58         db  0x68 ; 'h'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x73 ; 's'
0000000000000a5b         db  0x74 ; 't'
0000000000000a5c         db  0x72 ; 'r'
0000000000000a5d         db  0x63 ; 'c'
0000000000000a5e         db  0x70 ; 'p'
0000000000000a5f         db  0x79 ; 'y'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x5f ; '_'
0000000000000a63         db  0x70 ; 'p'
0000000000000a64         db  0x72 ; 'r'
0000000000000a65         db  0x69 ; 'i'
0000000000000a66         db  0x6e ; 'n'
0000000000000a67         db  0x74 ; 't'
0000000000000a68         db  0x66 ; 'f'
0000000000000a69         db  0x5f ; '_'
0000000000000a6a         db  0x63 ; 'c'
0000000000000a6b         db  0x68 ; 'h'
0000000000000a6c         db  0x6b ; 'k'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x72 ; 'r'
0000000000000a6f         db  0x65 ; 'e'
0000000000000a70         db  0x61 ; 'a'
0000000000000a71         db  0x64 ; 'd'
0000000000000a72         db  0x64 ; 'd'
0000000000000a73         db  0x69 ; 'i'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x73 ; 's'
0000000000000a77         db  0x65 ; 'e'
0000000000000a78         db  0x74 ; 't'
0000000000000a79         db  0x6c ; 'l'
0000000000000a7a         db  0x6f ; 'o'
0000000000000a7b         db  0x63 ; 'c'
0000000000000a7c         db  0x61 ; 'a'
0000000000000a7d         db  0x6c ; 'l'
0000000000000a7e         db  0x65 ; 'e'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x6d ; 'm'
0000000000000a81         db  0x62 ; 'b'
0000000000000a82         db  0x72 ; 'r'
0000000000000a83         db  0x74 ; 't'
0000000000000a84         db  0x6f ; 'o'
0000000000000a85         db  0x77 ; 'w'
0000000000000a86         db  0x63 ; 'c'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x73 ; 's'
0000000000000a89         db  0x74 ; 't'
0000000000000a8a         db  0x72 ; 'r'
0000000000000a8b         db  0x6e ; 'n'
0000000000000a8c         db  0x63 ; 'c'
0000000000000a8d         db  0x6d ; 'm'
0000000000000a8e         db  0x70 ; 'p'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x6f ; 'o'
0000000000000a91         db  0x70 ; 'p'
0000000000000a92         db  0x74 ; 't'
0000000000000a93         db  0x69 ; 'i'
0000000000000a94         db  0x6e ; 'n'
0000000000000a95         db  0x64 ; 'd'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x73 ; 's'
0000000000000a98         db  0x74 ; 't'
0000000000000a99         db  0x72 ; 'r'
0000000000000a9a         db  0x72 ; 'r'
0000000000000a9b         db  0x63 ; 'c'
0000000000000a9c         db  0x68 ; 'h'
0000000000000a9d         db  0x72 ; 'r'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x64 ; 'd'
0000000000000aa0         db  0x63 ; 'c'
0000000000000aa1         db  0x67 ; 'g'
0000000000000aa2         db  0x65 ; 'e'
0000000000000aa3         db  0x74 ; 't'
0000000000000aa4         db  0x74 ; 't'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x78 ; 'x'
0000000000000aa7         db  0x74 ; 't'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x63 ; 'c'
0000000000000aaa         db  0x6c ; 'l'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x73 ; 's'
0000000000000aad         db  0x65 ; 'e'
0000000000000aae         db  0x64 ; 'd'
0000000000000aaf         db  0x69 ; 'i'
0000000000000ab0         db  0x72 ; 'r'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x66 ; 'f'
0000000000000ab3         db  0x63 ; 'c'
0000000000000ab4         db  0x68 ; 'h'
0000000000000ab5         db  0x64 ; 'd'
0000000000000ab6         db  0x69 ; 'i'
0000000000000ab7         db  0x72 ; 'r'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x65 ; 'e'
0000000000000aba         db  0x72 ; 'r'
0000000000000abb         db  0x72 ; 'r'
0000000000000abc         db  0x6f ; 'o'
0000000000000abd         db  0x72 ; 'r'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x5f ; '_'
0000000000000ac1         db  0x73 ; 's'
0000000000000ac2         db  0x74 ; 't'
0000000000000ac3         db  0x61 ; 'a'
0000000000000ac4         db  0x63 ; 'c'
0000000000000ac5         db  0x6b ; 'k'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x63 ; 'c'
0000000000000ac8         db  0x68 ; 'h'
0000000000000ac9         db  0x6b ; 'k'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x66 ; 'f'
0000000000000acc         db  0x61 ; 'a'
0000000000000acd         db  0x69 ; 'i'
0000000000000ace         db  0x6c ; 'l'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x5f ; '_'
0000000000000ad1         db  0x5f ; '_'
0000000000000ad2         db  0x6c ; 'l'
0000000000000ad3         db  0x78 ; 'x'
0000000000000ad4         db  0x73 ; 's'
0000000000000ad5         db  0x74 ; 't'
0000000000000ad6         db  0x61 ; 'a'
0000000000000ad7         db  0x74 ; 't'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x69 ; 'i'
0000000000000ada         db  0x73 ; 's'
0000000000000adb         db  0x77 ; 'w'
0000000000000adc         db  0x70 ; 'p'
0000000000000add         db  0x72 ; 'r'
0000000000000ade         db  0x69 ; 'i'
0000000000000adf         db  0x6e ; 'n'
0000000000000ae0         db  0x74 ; 't'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x72 ; 'r'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x61 ; 'a'
0000000000000ae5         db  0x6c ; 'l'
0000000000000ae6         db  0x6c ; 'l'
0000000000000ae7         db  0x6f ; 'o'
0000000000000ae8         db  0x63 ; 'c'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x66 ; 'f'
0000000000000aeb         db  0x73 ; 's'
0000000000000aec         db  0x74 ; 't'
0000000000000aed         db  0x61 ; 'a'
0000000000000aee         db  0x74 ; 't'
0000000000000aef         db  0x66 ; 'f'
0000000000000af0         db  0x73 ; 's'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x61 ; 'a'
0000000000000af3         db  0x62 ; 'b'
0000000000000af4         db  0x6f ; 'o'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x74 ; 't'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x65 ; 'e'
0000000000000afa         db  0x78 ; 'x'
0000000000000afb         db  0x69 ; 'i'
0000000000000afc         db  0x74 ; 't'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x6d ; 'm'
0000000000000aff         db  0x65 ; 'e'
                     aMchr:
0000000000000b00         db         "mchr", 0
0000000000000b05         db  0x6d ; 'm'
0000000000000b06         db  0x65 ; 'e'
0000000000000b07         db  0x6d ; 'm'
0000000000000b08         db  0x72 ; 'r'
0000000000000b09         db  0x63 ; 'c'
0000000000000b0a         db  0x68 ; 'h'
0000000000000b0b         db  0x72 ; 'r'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x73 ; 's'
0000000000000b0e         db  0x74 ; 't'
0000000000000b0f         db  0x72 ; 'r'
0000000000000b10         db  0x73 ; 's'
0000000000000b11         db  0x70 ; 'p'
0000000000000b12         db  0x6e ; 'n'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x70 ; 'p'
0000000000000b15         db  0x72 ; 'r'
0000000000000b16         db  0x6f ; 'o'
0000000000000b17         db  0x67 ; 'g'
0000000000000b18         db  0x72 ; 'r'
0000000000000b19         db  0x61 ; 'a'
0000000000000b1a         db  0x6d ; 'm'
0000000000000b1b         db  0x5f ; '_'
0000000000000b1c         db  0x69 ; 'i'
0000000000000b1d         db  0x6e ; 'n'
0000000000000b1e         db  0x76 ; 'v'
0000000000000b1f         db  0x6f ; 'o'
0000000000000b20         db  0x63 ; 'c'
0000000000000b21         db  0x61 ; 'a'
0000000000000b22         db  0x74 ; 't'
0000000000000b23         db  0x69 ; 'i'
0000000000000b24         db  0x6f ; 'o'
0000000000000b25         db  0x6e ; 'n'
0000000000000b26         db  0x5f ; '_'
0000000000000b27         db  0x6e ; 'n'
0000000000000b28         db  0x61 ; 'a'
0000000000000b29         db  0x6d ; 'm'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x5f ; '_'
0000000000000b2e         db  0x61 ; 'a'
0000000000000b2f         db  0x73 ; 's'
0000000000000b30         db  0x73 ; 's'
0000000000000b31         db  0x65 ; 'e'
0000000000000b32         db  0x72 ; 'r'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x5f ; '_'
0000000000000b35         db  0x66 ; 'f'
0000000000000b36         db  0x61 ; 'a'
0000000000000b37         db  0x69 ; 'i'
0000000000000b38         db  0x6c ; 'l'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x63 ; 'c'
0000000000000b3d         db  0x74 ; 't'
0000000000000b3e         db  0x79 ; 'y'
0000000000000b3f         db  0x70 ; 'p'
0000000000000b40         db  0x65 ; 'e'
0000000000000b41         db  0x5f ; '_'
0000000000000b42         db  0x67 ; 'g'
0000000000000b43         db  0x65 ; 'e'
0000000000000b44         db  0x74 ; 't'
0000000000000b45         db  0x5f ; '_'
                     aMbcurmax:
0000000000000b46         db         "mb_cur_max", 0
0000000000000b51         db  0x63 ; 'c'
0000000000000b52         db  0x61 ; 'a'
0000000000000b53         db  0x6c ; 'l'
0000000000000b54         db  0x6c ; 'l'
0000000000000b55         db  0x6f ; 'o'
0000000000000b56         db  0x63 ; 'c'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x73 ; 's'
0000000000000b59         db  0x74 ; 't'
0000000000000b5a         db  0x72 ; 'r'
0000000000000b5b         db  0x6c ; 'l'
0000000000000b5c         db  0x65 ; 'e'
0000000000000b5d         db  0x6e ; 'n'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x6d ; 'm'
0000000000000b60         db  0x65 ; 'e'
0000000000000b61         db  0x6d ; 'm'
0000000000000b62         db  0x73 ; 's'
0000000000000b63         db  0x65 ; 'e'
0000000000000b64         db  0x74 ; 't'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x5f ; '_'
0000000000000b67         db  0x5f ; '_'
0000000000000b68         db  0x65 ; 'e'
0000000000000b69         db  0x72 ; 'r'
0000000000000b6a         db  0x72 ; 'r'
0000000000000b6b         db  0x6e ; 'n'
0000000000000b6c         db  0x6f ; 'o'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x6c ; 'l'
0000000000000b6f         db  0x6f ; 'o'
0000000000000b70         db  0x63 ; 'c'
0000000000000b71         db  0x61 ; 'a'
0000000000000b72         db  0x74 ; 't'
0000000000000b73         db  0x69 ; 'i'
0000000000000b74         db  0x6f ; 'o'
0000000000000b75         db  0x6e ; 'n'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x6d ; 'm'
0000000000000b78         db  0x65 ; 'e'
0000000000000b79         db  0x6d ; 'm'
0000000000000b7a         db  0x63 ; 'c'
0000000000000b7b         db  0x6d ; 'm'
0000000000000b7c         db  0x70 ; 'p'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x5f ; '_'
0000000000000b7f         db  0x5f ; '_'
0000000000000b80         db  0x66 ; 'f'
0000000000000b81         db  0x70 ; 'p'
0000000000000b82         db  0x72 ; 'r'
0000000000000b83         db  0x69 ; 'i'
0000000000000b84         db  0x6e ; 'n'
0000000000000b85         db  0x74 ; 't'
0000000000000b86         db  0x66 ; 'f'
0000000000000b87         db  0x5f ; '_'
0000000000000b88         db  0x63 ; 'c'
0000000000000b89         db  0x68 ; 'h'
0000000000000b8a         db  0x6b ; 'k'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x73 ; 's'
0000000000000b8d         db  0x74 ; 't'
0000000000000b8e         db  0x64 ; 'd'
0000000000000b8f         db  0x6f ; 'o'
0000000000000b90         db  0x75 ; 'u'
0000000000000b91         db  0x74 ; 't'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x6c ; 'l'
0000000000000b94         db  0x73 ; 's'
0000000000000b95         db  0x65 ; 'e'
0000000000000b96         db  0x65 ; 'e'
0000000000000b97         db  0x6b ; 'k'
0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x6d ; 'm'
0000000000000b9a         db  0x65 ; 'e'
0000000000000b9b         db  0x6d ; 'm'
0000000000000b9c         db  0x63 ; 'c'
0000000000000b9d         db  0x70 ; 'p'
0000000000000b9e         db  0x79 ; 'y'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x66 ; 'f'
0000000000000ba1         db  0x63 ; 'c'
0000000000000ba2         db  0x6c ; 'l'
0000000000000ba3         db  0x6f ; 'o'
0000000000000ba4         db  0x73 ; 's'
0000000000000ba5         db  0x65 ; 'e'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x6d ; 'm'
0000000000000ba8         db  0x61 ; 'a'
0000000000000ba9         db  0x6c ; 'l'
0000000000000baa         db  0x6c ; 'l'
0000000000000bab         db  0x6f ; 'o'
0000000000000bac         db  0x63 ; 'c'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x66 ; 'f'
0000000000000baf         db  0x64 ; 'd'
0000000000000bb0         db  0x6f ; 'o'
0000000000000bb1         db  0x70 ; 'p'
0000000000000bb2         db  0x65 ; 'e'
0000000000000bb3         db  0x6e ; 'n'
0000000000000bb4         db  0x64 ; 'd'
0000000000000bb5         db  0x69 ; 'i'
0000000000000bb6         db  0x72 ; 'r'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x6d ; 'm'
0000000000000bb9         db  0x62 ; 'b'
0000000000000bba         db  0x73 ; 's'
0000000000000bbb         db  0x69 ; 'i'
0000000000000bbc         db  0x6e ; 'n'
0000000000000bbd         db  0x69 ; 'i'
0000000000000bbe         db  0x74 ; 't'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x6e ; 'n'
0000000000000bc1         db  0x6c ; 'l'
0000000000000bc2         db  0x5f ; '_'
0000000000000bc3         db  0x6c ; 'l'
0000000000000bc4         db  0x61 ; 'a'
0000000000000bc5         db  0x6e ; 'n'
0000000000000bc6         db  0x67 ; 'g'
0000000000000bc7         db  0x69 ; 'i'
0000000000000bc8         db  0x6e ; 'n'
0000000000000bc9         db  0x66 ; 'f'
0000000000000bca         db  0x6f ; 'o'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x5f ; '_'
0000000000000bcd         db  0x5f ; '_'
0000000000000bce         db  0x63 ; 'c'
0000000000000bcf         db  0x74 ; 't'
0000000000000bd0         db  0x79 ; 'y'
0000000000000bd1         db  0x70 ; 'p'
0000000000000bd2         db  0x65 ; 'e'
0000000000000bd3         db  0x5f ; '_'
0000000000000bd4         db  0x62 ; 'b'
0000000000000bd5         db  0x5f ; '_'
0000000000000bd6         db  0x6c ; 'l'
0000000000000bd7         db  0x6f ; 'o'
0000000000000bd8         db  0x63 ; 'c'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x6f ; 'o'
0000000000000bdb         db  0x70 ; 'p'
0000000000000bdc         db  0x74 ; 't'
0000000000000bdd         db  0x61 ; 'a'
0000000000000bde         db  0x72 ; 'r'
0000000000000bdf         db  0x67 ; 'g'
0000000000000be0         db  0x00 ; '.'
0000000000000be1         db  0x5f ; '_'
0000000000000be2         db  0x5f ; '_'
0000000000000be3         db  0x66 ; 'f'
0000000000000be4         db  0x72 ; 'r'
0000000000000be5         db  0x65 ; 'e'
0000000000000be6         db  0x61 ; 'a'
0000000000000be7         db  0x64 ; 'd'
0000000000000be8         db  0x69 ; 'i'
0000000000000be9         db  0x6e ; 'n'
0000000000000bea         db  0x67 ; 'g'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x73 ; 's'
0000000000000bed         db  0x74 ; 't'
0000000000000bee         db  0x64 ; 'd'
0000000000000bef         db  0x65 ; 'e'
0000000000000bf0         db  0x72 ; 'r'
0000000000000bf1         db  0x72 ; 'r'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x67 ; 'g'
0000000000000bf4         db  0x65 ; 'e'
0000000000000bf5         db  0x74 ; 't'
0000000000000bf6         db  0x6f ; 'o'
0000000000000bf7         db  0x70 ; 'p'
0000000000000bf8         db  0x74 ; 't'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x6c ; 'l'
0000000000000bfb         db  0x6f ; 'o'
0000000000000bfc         db  0x6e ; 'n'
0000000000000bfd         db  0x67 ; 'g'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x5f ; '_'
                     aFxstat:
0000000000000c00         db         "_fxstat", 0
0000000000000c08         db  0x66 ; 'f'
0000000000000c09         db  0x69 ; 'i'
0000000000000c0a         db  0x6c ; 'l'
0000000000000c0b         db  0x65 ; 'e'
0000000000000c0c         db  0x6e ; 'n'
0000000000000c0d         db  0x6f ; 'o'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x67 ; 'g'
0000000000000c10         db  0x65 ; 'e'
0000000000000c11         db  0x74 ; 't'
0000000000000c12         db  0x63 ; 'c'
0000000000000c13         db  0x77 ; 'w'
0000000000000c14         db  0x64 ; 'd'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x66 ; 'f'
0000000000000c17         db  0x77 ; 'w'
0000000000000c18         db  0x72 ; 'r'
0000000000000c19         db  0x69 ; 'i'
0000000000000c1a         db  0x74 ; 't'
0000000000000c1b         db  0x65 ; 'e'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x5f ; '_'
0000000000000c1f         db  0x66 ; 'f'
0000000000000c20         db  0x70 ; 'p'
0000000000000c21         db  0x65 ; 'e'
0000000000000c22         db  0x6e ; 'n'
0000000000000c23         db  0x64 ; 'd'
0000000000000c24         db  0x69 ; 'i'
0000000000000c25         db  0x6e ; 'n'
0000000000000c26         db  0x67 ; 'g'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x6f ; 'o'
0000000000000c29         db  0x70 ; 'p'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x6e ; 'n'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x70 ; 'p'
0000000000000c2e         db  0x72 ; 'r'
0000000000000c2f         db  0x6f ; 'o'
0000000000000c30         db  0x67 ; 'g'
0000000000000c31         db  0x72 ; 'r'
0000000000000c32         db  0x61 ; 'a'
0000000000000c33         db  0x6d ; 'm'
0000000000000c34         db  0x5f ; '_'
0000000000000c35         db  0x69 ; 'i'
0000000000000c36         db  0x6e ; 'n'
0000000000000c37         db  0x76 ; 'v'
0000000000000c38         db  0x6f ; 'o'
0000000000000c39         db  0x63 ; 'c'
0000000000000c3a         db  0x61 ; 'a'
0000000000000c3b         db  0x74 ; 't'
0000000000000c3c         db  0x69 ; 'i'
0000000000000c3d         db  0x6f ; 'o'
0000000000000c3e         db  0x6e ; 'n'
0000000000000c3f         db  0x5f ; '_'
0000000000000c40         db  0x73 ; 's'
0000000000000c41         db  0x68 ; 'h'
0000000000000c42         db  0x6f ; 'o'
0000000000000c43         db  0x72 ; 'r'
0000000000000c44         db  0x74 ; 't'
0000000000000c45         db  0x5f ; '_'
0000000000000c46         db  0x6e ; 'n'
0000000000000c47         db  0x61 ; 'a'
0000000000000c48         db  0x6d ; 'm'
0000000000000c49         db  0x65 ; 'e'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x71 ; 'q'
0000000000000c4c         db  0x73 ; 's'
0000000000000c4d         db  0x6f ; 'o'
0000000000000c4e         db  0x72 ; 'r'
0000000000000c4f         db  0x74 ; 't'
0000000000000c50         db  0x00 ; '.'
0000000000000c51         db  0x5f ; '_'
0000000000000c52         db  0x5f ; '_'
0000000000000c53         db  0x63 ; 'c'
0000000000000c54         db  0x78 ; 'x'
0000000000000c55         db  0x61 ; 'a'
0000000000000c56         db  0x5f ; '_'
0000000000000c57         db  0x66 ; 'f'
0000000000000c58         db  0x69 ; 'i'
0000000000000c59         db  0x6e ; 'n'
0000000000000c5a         db  0x61 ; 'a'
0000000000000c5b         db  0x6c ; 'l'
0000000000000c5c         db  0x69 ; 'i'
0000000000000c5d         db  0x7a ; 'z'
0000000000000c5e         db  0x65 ; 'e'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x66 ; 'f'
0000000000000c61         db  0x63 ; 'c'
0000000000000c62         db  0x6e ; 'n'
0000000000000c63         db  0x74 ; 't'
0000000000000c64         db  0x6c ; 'l'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x5f ; '_'
0000000000000c67         db  0x5f ; '_'
0000000000000c68         db  0x73 ; 's'
0000000000000c69         db  0x70 ; 'p'
0000000000000c6a         db  0x72 ; 'r'
0000000000000c6b         db  0x69 ; 'i'
0000000000000c6c         db  0x6e ; 'n'
0000000000000c6d         db  0x74 ; 't'
0000000000000c6e         db  0x66 ; 'f'
0000000000000c6f         db  0x5f ; '_'
0000000000000c70         db  0x63 ; 'c'
0000000000000c71         db  0x68 ; 'h'
0000000000000c72         db  0x6b ; 'k'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x6f ; 'o'
0000000000000c75         db  0x70 ; 'p'
0000000000000c76         db  0x65 ; 'e'
0000000000000c77         db  0x6e ; 'n'
0000000000000c78         db  0x61 ; 'a'
0000000000000c79         db  0x74 ; 't'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x5f ; '_'
0000000000000c7c         db  0x5f ; '_'
0000000000000c7d         db  0x78 ; 'x'
0000000000000c7e         db  0x73 ; 's'
0000000000000c7f         db  0x74 ; 't'
0000000000000c80         db  0x61 ; 'a'
0000000000000c81         db  0x74 ; 't'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x6d ; 'm'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x6d ; 'm'
0000000000000c86         db  0x6d ; 'm'
0000000000000c87         db  0x6f ; 'o'
0000000000000c88         db  0x76 ; 'v'
0000000000000c89         db  0x65 ; 'e'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x62 ; 'b'
0000000000000c8c         db  0x69 ; 'i'
0000000000000c8d         db  0x6e ; 'n'
0000000000000c8e         db  0x64 ; 'd'
0000000000000c8f         db  0x74 ; 't'
0000000000000c90         db  0x65 ; 'e'
0000000000000c91         db  0x78 ; 'x'
0000000000000c92         db  0x74 ; 't'
0000000000000c93         db  0x64 ; 'd'
0000000000000c94         db  0x6f ; 'o'
0000000000000c95         db  0x6d ; 'm'
0000000000000c96         db  0x61 ; 'a'
0000000000000c97         db  0x69 ; 'i'
0000000000000c98         db  0x6e ; 'n'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x61 ; 'a'
0000000000000c9b         db  0x63 ; 'c'
0000000000000c9c         db  0x63 ; 'c'
0000000000000c9d         db  0x65 ; 'e'
0000000000000c9e         db  0x73 ; 's'
0000000000000c9f         db  0x73 ; 's'
0000000000000ca0         db  0x00 ; '.'
0000000000000ca1         db  0x5f ; '_'
0000000000000ca2         db  0x5f ; '_'
0000000000000ca3         db  0x66 ; 'f'
0000000000000ca4         db  0x78 ; 'x'
0000000000000ca5         db  0x73 ; 's'
0000000000000ca6         db  0x74 ; 't'
0000000000000ca7         db  0x61 ; 'a'
0000000000000ca8         db  0x74 ; 't'
0000000000000ca9         db  0x61 ; 'a'
0000000000000caa         db  0x74 ; 't'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x73 ; 's'
0000000000000cad         db  0x74 ; 't'
0000000000000cae         db  0x72 ; 'r'
0000000000000caf         db  0x63 ; 'c'
0000000000000cb0         db  0x6d ; 'm'
0000000000000cb1         db  0x70 ; 'p'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x5f ; '_'
0000000000000cb4         db  0x5f ; '_'
0000000000000cb5         db  0x6c ; 'l'
0000000000000cb6         db  0x69 ; 'i'
0000000000000cb7         db  0x62 ; 'b'
0000000000000cb8         db  0x63 ; 'c'
0000000000000cb9         db  0x5f ; '_'
0000000000000cba         db  0x73 ; 's'
0000000000000cbb         db  0x74 ; 't'
0000000000000cbc         db  0x61 ; 'a'
0000000000000cbd         db  0x72 ; 'r'
0000000000000cbe         db  0x74 ; 't'
0000000000000cbf         db  0x5f ; '_'
0000000000000cc0         db  0x6d ; 'm'
0000000000000cc1         db  0x61 ; 'a'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x6e ; 'n'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x64 ; 'd'
0000000000000cc6         db  0x69 ; 'i'
0000000000000cc7         db  0x72 ; 'r'
0000000000000cc8         db  0x66 ; 'f'
0000000000000cc9         db  0x64 ; 'd'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x66 ; 'f'
0000000000000ccc         db  0x73 ; 's'
0000000000000ccd         db  0x65 ; 'e'
0000000000000cce         db  0x65 ; 'e'
0000000000000ccf         db  0x6b ; 'k'
0000000000000cd0         db  0x6f ; 'o'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x66 ; 'f'
0000000000000cd3         db  0x70 ; 'p'
0000000000000cd4         db  0x75 ; 'u'
0000000000000cd5         db  0x74 ; 't'
0000000000000cd6         db  0x73 ; 's'
0000000000000cd7         db  0x5f ; '_'
0000000000000cd8         db  0x75 ; 'u'
0000000000000cd9         db  0x6e ; 'n'
0000000000000cda         db  0x6c ; 'l'
0000000000000cdb         db  0x6f ; 'o'
0000000000000cdc         db  0x63 ; 'c'
0000000000000cdd         db  0x6b ; 'k'
0000000000000cde         db  0x65 ; 'e'
0000000000000cdf         db  0x64 ; 'd'
0000000000000ce0         db  0x00 ; '.'
0000000000000ce1         db  0x66 ; 'f'
0000000000000ce2         db  0x72 ; 'r'
0000000000000ce3         db  0x65 ; 'e'
0000000000000ce4         db  0x65 ; 'e'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x5f ; '_'
0000000000000ce8         db  0x70 ; 'p'
0000000000000ce9         db  0x72 ; 'r'
0000000000000cea         db  0x6f ; 'o'
0000000000000ceb         db  0x67 ; 'g'
0000000000000cec         db  0x6e ; 'n'
0000000000000ced         db  0x61 ; 'a'
0000000000000cee         db  0x6d ; 'm'
0000000000000cef         db  0x65 ; 'e'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x5f ; '_'
0000000000000cf2         db  0x5f ; '_'
0000000000000cf3         db  0x70 ; 'p'
0000000000000cf4         db  0x72 ; 'r'
0000000000000cf5         db  0x6f ; 'o'
0000000000000cf6         db  0x67 ; 'g'
0000000000000cf7         db  0x6e ; 'n'
0000000000000cf8         db  0x61 ; 'a'
0000000000000cf9         db  0x6d ; 'm'
0000000000000cfa         db  0x65 ; 'e'
0000000000000cfb         db  0x5f ; '_'
0000000000000cfc         db  0x66 ; 'f'
0000000000000cfd         db  0x75 ; 'u'
0000000000000cfe         db  0x6c ; 'l'
0000000000000cff         db  0x6c ; 'l'
0000000000000d00         db  0x00 ; '.'
0000000000000d01         db  0x5f ; '_'
0000000000000d02         db  0x5f ; '_'
0000000000000d03         db  0x63 ; 'c'
0000000000000d04         db  0x78 ; 'x'
0000000000000d05         db  0x61 ; 'a'
0000000000000d06         db  0x5f ; '_'
0000000000000d07         db  0x61 ; 'a'
0000000000000d08         db  0x74 ; 't'
0000000000000d09         db  0x65 ; 'e'
0000000000000d0a         db  0x78 ; 'x'
0000000000000d0b         db  0x69 ; 'i'
0000000000000d0c         db  0x74 ; 't'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x47 ; 'G'
0000000000000d0f         db  0x4c ; 'L'
0000000000000d10         db  0x49 ; 'I'
0000000000000d11         db  0x42 ; 'B'
0000000000000d12         db  0x43 ; 'C'
0000000000000d13         db  0x5f ; '_'
0000000000000d14         db  0x32 ; '2'
0000000000000d15         db  0x2e ; '.'
0000000000000d16         db  0x33 ; '3'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x47 ; 'G'
0000000000000d19         db  0x4c ; 'L'
0000000000000d1a         db  0x49 ; 'I'
0000000000000d1b         db  0x42 ; 'B'
0000000000000d1c         db  0x43 ; 'C'
0000000000000d1d         db  0x5f ; '_'
0000000000000d1e         db  0x32 ; '2'
0000000000000d1f         db  0x2e ; '.'
0000000000000d20         db  0x33 ; '3'
0000000000000d21         db  0x2e ; '.'
0000000000000d22         db  0x34 ; '4'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x47 ; 'G'
0000000000000d25         db  0x4c ; 'L'
0000000000000d26         db  0x49 ; 'I'
0000000000000d27         db  0x42 ; 'B'
0000000000000d28         db  0x43 ; 'C'
0000000000000d29         db  0x5f ; '_'
0000000000000d2a         db  0x32 ; '2'
0000000000000d2b         db  0x2e ; '.'
0000000000000d2c         db  0x31 ; '1'
0000000000000d2d         db  0x34 ; '4'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x47 ; 'G'
0000000000000d30         db  0x4c ; 'L'
0000000000000d31         db  0x49 ; 'I'
0000000000000d32         db  0x42 ; 'B'
0000000000000d33         db  0x43 ; 'C'
0000000000000d34         db  0x5f ; '_'
0000000000000d35         db  0x32 ; '2'
0000000000000d36         db  0x2e ; '.'
0000000000000d37         db  0x34 ; '4'
0000000000000d38         db  0x00 ; '.'
0000000000000d39         db  0x47 ; 'G'
0000000000000d3a         db  0x4c ; 'L'
0000000000000d3b         db  0x49 ; 'I'
0000000000000d3c         db  0x42 ; 'B'
0000000000000d3d         db  0x43 ; 'C'
0000000000000d3e         db  0x5f ; '_'
0000000000000d3f         db  0x32 ; '2'
0000000000000d40         db  0x2e ; '.'
0000000000000d41         db  0x32 ; '2'
0000000000000d42         db  0x2e ; '.'
0000000000000d43         db  0x35 ; '5'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x5f ; '_'
0000000000000d46         db  0x49 ; 'I'
0000000000000d47         db  0x54 ; 'T'
0000000000000d48         db  0x4d ; 'M'
0000000000000d49         db  0x5f ; '_'
0000000000000d4a         db  0x64 ; 'd'
0000000000000d4b         db  0x65 ; 'e'
0000000000000d4c         db  0x72 ; 'r'
0000000000000d4d         db  0x65 ; 'e'
0000000000000d4e         db  0x67 ; 'g'
0000000000000d4f         db  0x69 ; 'i'
0000000000000d50         db  0x73 ; 's'
0000000000000d51         db  0x74 ; 't'
0000000000000d52         db  0x65 ; 'e'
0000000000000d53         db  0x72 ; 'r'
0000000000000d54         db  0x54 ; 'T'
0000000000000d55         db  0x4d ; 'M'
0000000000000d56         db  0x43 ; 'C'
0000000000000d57         db  0x6c ; 'l'
0000000000000d58         db  0x6f ; 'o'
0000000000000d59         db  0x6e ; 'n'
0000000000000d5a         db  0x65 ; 'e'
0000000000000d5b         db  0x54 ; 'T'
0000000000000d5c         db  0x61 ; 'a'
0000000000000d5d         db  0x62 ; 'b'
0000000000000d5e         db  0x6c ; 'l'
0000000000000d5f         db  0x65 ; 'e'
0000000000000d60         db  0x00 ; '.'
0000000000000d61         db  0x5f ; '_'
0000000000000d62         db  0x5f ; '_'
0000000000000d63         db  0x67 ; 'g'
0000000000000d64         db  0x6d ; 'm'
0000000000000d65         db  0x6f ; 'o'
0000000000000d66         db  0x6e ; 'n'
0000000000000d67         db  0x5f ; '_'
0000000000000d68         db  0x73 ; 's'
0000000000000d69         db  0x74 ; 't'
0000000000000d6a         db  0x61 ; 'a'
0000000000000d6b         db  0x72 ; 'r'
0000000000000d6c         db  0x74 ; 't'
0000000000000d6d         db  0x5f ; '_'
0000000000000d6e         db  0x5f ; '_'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x5f ; '_'
0000000000000d71         db  0x49 ; 'I'
0000000000000d72         db  0x54 ; 'T'
0000000000000d73         db  0x4d ; 'M'
0000000000000d74         db  0x5f ; '_'
0000000000000d75         db  0x72 ; 'r'
0000000000000d76         db  0x65 ; 'e'
0000000000000d77         db  0x67 ; 'g'
0000000000000d78         db  0x69 ; 'i'
0000000000000d79         db  0x73 ; 's'
0000000000000d7a         db  0x74 ; 't'
0000000000000d7b         db  0x65 ; 'e'
0000000000000d7c         db  0x72 ; 'r'
0000000000000d7d         db  0x54 ; 'T'
0000000000000d7e         db  0x4d ; 'M'
0000000000000d7f         db  0x43 ; 'C'
0000000000000d80         db  0x6c ; 'l'
0000000000000d81         db  0x6f ; 'o'
0000000000000d82         db  0x6e ; 'n'
0000000000000d83         db  0x65 ; 'e'
0000000000000d84         db  0x54 ; 'T'
0000000000000d85         db  0x61 ; 'a'
0000000000000d86         db  0x62 ; 'b'
0000000000000d87         db  0x6c ; 'l'
0000000000000d88         db  0x65 ; 'e'
0000000000000d89         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xd8a; 0xe28[ (158 bytes)
        ; File offset : [3466; 3624[ (158 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x02 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x02 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x02 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x02 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x02 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x02 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x02 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x02 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x02 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x02 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x02 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x02 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x02 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x02 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x02 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x02 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x03 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x02 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x03 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x02 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x02 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x03 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x02 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x02 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x02 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x02 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x02 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x02 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x02 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x02 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x02 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x02 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x02 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x02 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x02 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x02 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x02 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x00 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x04 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x02 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x02 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x02 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x02 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x02 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x02 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x02 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x02 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x02 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x02 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x02 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x05 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x02 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x02 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x02 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x02 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x02 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x02 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x03 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x02 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x02 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x02 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x02 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x05 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x02 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x02 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x02 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x06 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x05 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x02 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x02 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x02 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x02 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x02 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x02 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x02 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x02 ; '.'
0000000000000e27         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xe28; 0xe88[ (96 bytes)
        ; File offset : [3624; 3720[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000e28         db  0x01 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x05 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x01 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x10 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x13 ; '.'
0000000000000e39         db  0x69 ; 'i'
0000000000000e3a         db  0x69 ; 'i'
0000000000000e3b         db  0x0d ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x06 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xc6 ; '.'
0000000000000e41         db  0x02 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x10 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x74 ; 't'
0000000000000e49         db  0x19 ; '.'
0000000000000e4a         db  0x69 ; 'i'
0000000000000e4b         db  0x09 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x05 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xd0 ; '.'
0000000000000e51         db  0x02 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x10 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x94 ; '.'
0000000000000e59         db  0x91 ; '.'
0000000000000e5a         db  0x96 ; '.'
0000000000000e5b         db  0x06 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x04 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xdc ; '.'
0000000000000e61         db  0x02 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x10 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x14 ; '.'
0000000000000e69         db  0x69 ; 'i'
0000000000000e6a         db  0x69 ; 'i'
0000000000000e6b         db  0x0d ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x03 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xe7 ; '.'
0000000000000e71         db  0x02 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x10 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x75 ; 'u'
0000000000000e79         db  0x1a ; '.'
0000000000000e7a         db  0x69 ; 'i'
0000000000000e7b         db  0x09 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x02 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xf1 ; '.'
0000000000000e81         db  0x02 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xe88; 0x1260[ (984 bytes)
        ; File offset : [3720; 4704[ (984 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e88         db  0x90 ; '.'
0000000000000e89         db  0xd9 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x90 ; '.'
0000000000000e99         db  0x28 ; '('
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x98 ; '.'
0000000000000ea1         db  0xd9 ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x50 ; 'P'
0000000000000eb1         db  0x28 ; '('
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xa0 ; '.'
0000000000000eb9         db  0xd9 ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x49 ; 'I'
0000000000000ec9         db  0x9d ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xc0 ; '.'
0000000000000ed1         db  0xd9 ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x56 ; 'V'
0000000000000ee1         db  0x9d ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xe0 ; '.'
0000000000000ee9         db  0xd9 ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x53 ; 'S'
0000000000000ef9         db  0x9d ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0xda ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x08 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x62 ; 'b'
0000000000000f11         db  0x9d ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x20 ; ' '
0000000000000f19         db  0xda ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x65 ; 'e'
0000000000000f29         db  0x9d ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x40 ; '@'
0000000000000f31         db  0xda ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x58 ; 'X'
0000000000000f41         db  0x9d ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x60 ; '`'
0000000000000f49         db  0xda ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x73 ; 's'
0000000000000f59         db  0x9d ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x80 ; '.'
0000000000000f61         db  0xda ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x78 ; 'x'
0000000000000f71         db  0x9d ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xa0 ; '.'
0000000000000f79         db  0xda ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x7d ; '}'
0000000000000f89         db  0x9d ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xc0 ; '.'
0000000000000f91         db  0xda ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x82 ; '.'
0000000000000fa1         db  0x9d ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xe0 ; '.'
0000000000000fa9         db  0xda ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x88 ; '.'
0000000000000fb9         db  0x9d ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'                                         ; DATA XREF=openat_proc_name+80
0000000000000fc1         db  0xdb ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x08 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x90 ; '.'
0000000000000fd1         db  0x9d ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x20 ; ' '
0000000000000fd9         db  0xdb ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x08 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x95 ; '.'                                         ; DATA XREF=getfileconat+11, getfileconat+207
0000000000000fe9         db  0x9d ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x60 ; '`'
0000000000000ff1         db  0xdb ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x08 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=chdir_long+124, chdir_long+209, chdir_long+238, chdir_long+304
0000000000001000         db  0xef ; '.'                                         ; DATA XREF=rpl_fts_open+165, rpl_fts_open+170, rpl_fts_open+735, rpl_fts_children+80, rpl_fts_children+95, chdir_long+316
0000000000001001         db  0xa8 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x68 ; 'h'
0000000000001009         db  0xdb ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x08 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xf7 ; '.'
0000000000001019         db  0xa8 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x70 ; 'p'
0000000000001021         db  0xdb ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x08 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xfd ; '.'
0000000000001031         db  0xa8 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x78 ; 'x'
0000000000001039         db  0xdb ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x08 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x0a ; '.'
0000000000001049         db  0xa9 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x80 ; '.'
0000000000001051         db  0xdb ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x08 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x17 ; '.'
0000000000001061         db  0xa9 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x88 ; '.'
0000000000001069         db  0xdb ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x08 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x3b ; ';'
0000000000001079         db  0xb1 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x90 ; '.'
0000000000001081         db  0xdb ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x08 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x2b ; '+'
0000000000001091         db  0xa9 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x98 ; '.'
0000000000001099         db  0xdb ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x08 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x10 ; '.'
00000000000010a9         db  0xa9 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0xa0 ; '.'
00000000000010b1         db  0xdb ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x08 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x7e ; '~'
00000000000010c1         db  0x9c ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0xa8 ; '.'
00000000000010c9         db  0xdb ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x08 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x33 ; '3'
00000000000010d9         db  0xa9 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x08 ; '.'
00000000000010e1         db  0xe0 ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x08 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x08 ; '.'
00000000000010f1         db  0xe0 ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x10 ; '.'
00000000000010f9         db  0xe0 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x08 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x7c ; '|'
0000000000001109         db  0xa8 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x60 ; '`'
0000000000001111         db  0xe0 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x08 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x70 ; 'p'
0000000000001121         db  0xe0 ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x78 ; 'x'
0000000000001129         db  0xe0 ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x08 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x20 ; ' '
0000000000001139         db  0xe1 ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xc0 ; '.'
0000000000001141         db  0xdf ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x06 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x01 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xc8 ; '.'
0000000000001159         db  0xdf ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x06 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x05 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xd0 ; '.'
0000000000001171         db  0xdf ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x06 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x21 ; '!'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0xd8 ; '.'
0000000000001189         db  0xdf ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x06 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x27 ; '''
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0xe0 ; '.'
00000000000011a1         db  0xdf ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x06 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x41 ; 'A'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0xe8 ; '.'
00000000000011b9         db  0xdf ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x06 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x44 ; 'D'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x80 ; '.'
00000000000011d1         db  0xe0 ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x05 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x48 ; 'H'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x88 ; '.'
00000000000011e9         db  0xe0 ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x05 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x47 ; 'G'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x90 ; '.'
0000000000001201         db  0xe0 ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x05 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x4d ; 'M'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x98 ; '.'
0000000000001219         db  0xe0 ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x05 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x4e ; 'N'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0xa0 ; '.'
0000000000001231         db  0xe0 ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x05 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x4a ; 'J'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0xc0 ; '.'
0000000000001249         db  0xe0 ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x05 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x4c ; 'L'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1260; 0x1860[ (1536 bytes)
        ; File offset : [4704; 6240[ (1536 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001260         db  0xc0 ; '.'
0000000000001261         db  0xdd ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x02 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0xc8 ; '.'
0000000000001279         db  0xdd ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x03 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0xd0 ; '.'
0000000000001291         db  0xdd ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x04 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0xd8 ; '.'
00000000000012a9         db  0xdd ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x06 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0xe0 ; '.'
00000000000012c1         db  0xdd ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x07 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0xe8 ; '.'
00000000000012d9         db  0xdd ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x08 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0xf0 ; '.'
00000000000012f1         db  0xdd ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x09 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0xf8 ; '.'
0000000000001309         db  0xdd ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x0a ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0xde ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x0b ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x08 ; '.'
0000000000001339         db  0xde ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x0c ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x10 ; '.'
0000000000001351         db  0xde ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x0d ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x18 ; '.'
0000000000001369         db  0xde ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x0e ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x20 ; ' '
0000000000001381         db  0xde ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x0f ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x28 ; '('
0000000000001399         db  0xde ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x10 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x30 ; '0'
00000000000013b1         db  0xde ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x11 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x38 ; '8'
00000000000013c9         db  0xde ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x12 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x40 ; '@'
00000000000013e1         db  0xde ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x13 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x48 ; 'H'
00000000000013f9         db  0xde ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x14 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x50 ; 'P'
0000000000001411         db  0xde ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x15 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x58 ; 'X'
0000000000001429         db  0xde ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x16 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x60 ; '`'
0000000000001441         db  0xde ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x17 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x68 ; 'h'
0000000000001459         db  0xde ; '.'
000000000000145a         db  0x20 ; ' '
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x07 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x18 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x70 ; 'p'
0000000000001471         db  0xde ; '.'
0000000000001472         db  0x20 ; ' '
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x07 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x19 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x00 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x78 ; 'x'
0000000000001489         db  0xde ; '.'
000000000000148a         db  0x20 ; ' '
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x07 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x1a ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x80 ; '.'
00000000000014a1         db  0xde ; '.'
00000000000014a2         db  0x20 ; ' '
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x07 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x1b ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x00 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x88 ; '.'
00000000000014b9         db  0xde ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x07 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x1c ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x90 ; '.'
00000000000014d1         db  0xde ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x07 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x1d ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x98 ; '.'
00000000000014e9         db  0xde ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x07 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x1e ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0xa0 ; '.'
0000000000001501         db  0xde ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x07 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x1f ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0xa8 ; '.'
0000000000001519         db  0xde ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x07 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x20 ; ' '
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0xb0 ; '.'
0000000000001531         db  0xde ; '.'
0000000000001532         db  0x20 ; ' '
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x22 ; '"'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0xb8 ; '.'
0000000000001549         db  0xde ; '.'
000000000000154a         db  0x20 ; ' '
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x07 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x23 ; '#'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0xc0 ; '.'
0000000000001561         db  0xde ; '.'
0000000000001562         db  0x20 ; ' '
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x07 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x24 ; '$'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0xc8 ; '.'
0000000000001579         db  0xde ; '.'
000000000000157a         db  0x20 ; ' '
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x07 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x25 ; '%'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0xd0 ; '.'
0000000000001591         db  0xde ; '.'
0000000000001592         db  0x20 ; ' '
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x07 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x26 ; '&'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0xd8 ; '.'
00000000000015a9         db  0xde ; '.'
00000000000015aa         db  0x20 ; ' '
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x07 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x28 ; '('
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0xe0 ; '.'
00000000000015c1         db  0xde ; '.'
00000000000015c2         db  0x20 ; ' '
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x07 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x29 ; ')'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0xe8 ; '.'
00000000000015d9         db  0xde ; '.'
00000000000015da         db  0x20 ; ' '
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x07 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x2a ; '*'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0xf0 ; '.'
00000000000015f1         db  0xde ; '.'
00000000000015f2         db  0x20 ; ' '
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x07 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x2b ; '+'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x00 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0xf8 ; '.'
0000000000001609         db  0xde ; '.'
000000000000160a         db  0x20 ; ' '
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x07 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x2c ; ','
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x00 ; '.'
0000000000001621         db  0xdf ; '.'
0000000000001622         db  0x20 ; ' '
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x07 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x2d ; '-'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x00 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x08 ; '.'
0000000000001639         db  0xdf ; '.'
000000000000163a         db  0x20 ; ' '
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x07 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x2e ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x10 ; '.'
0000000000001651         db  0xdf ; '.'
0000000000001652         db  0x20 ; ' '
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x07 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x2f ; '/'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x18 ; '.'
0000000000001669         db  0xdf ; '.'
000000000000166a         db  0x20 ; ' '
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x07 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x30 ; '0'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x20 ; ' '
0000000000001681         db  0xdf ; '.'
0000000000001682         db  0x20 ; ' '
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x07 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x31 ; '1'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x28 ; '('
0000000000001699         db  0xdf ; '.'
000000000000169a         db  0x20 ; ' '
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x07 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x32 ; '2'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x00 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x30 ; '0'
00000000000016b1         db  0xdf ; '.'
00000000000016b2         db  0x20 ; ' '
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x07 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x33 ; '3'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x00 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x38 ; '8'
00000000000016c9         db  0xdf ; '.'
00000000000016ca         db  0x20 ; ' '
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x07 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x34 ; '4'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x00 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x40 ; '@'
00000000000016e1         db  0xdf ; '.'
00000000000016e2         db  0x20 ; ' '
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x07 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x35 ; '5'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x00 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x48 ; 'H'
00000000000016f9         db  0xdf ; '.'
00000000000016fa         db  0x20 ; ' '
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x07 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x36 ; '6'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x00 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x50 ; 'P'
0000000000001711         db  0xdf ; '.'
0000000000001712         db  0x20 ; ' '
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x07 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x37 ; '7'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x00 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x58 ; 'X'
0000000000001729         db  0xdf ; '.'
000000000000172a         db  0x20 ; ' '
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x07 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x38 ; '8'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x00 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x60 ; '`'
0000000000001741         db  0xdf ; '.'
0000000000001742         db  0x20 ; ' '
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x07 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x39 ; '9'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x00 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x68 ; 'h'
0000000000001759         db  0xdf ; '.'
000000000000175a         db  0x20 ; ' '
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x07 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x3a ; ':'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x00 ; '.'
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x70 ; 'p'
0000000000001771         db  0xdf ; '.'
0000000000001772         db  0x20 ; ' '
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x07 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x3b ; ';'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x00 ; '.'
0000000000001781         db  0x00 ; '.'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x78 ; 'x'
0000000000001789         db  0xdf ; '.'
000000000000178a         db  0x20 ; ' '
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x07 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x3c ; '<'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x00 ; '.'
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x80 ; '.'
00000000000017a1         db  0xdf ; '.'
00000000000017a2         db  0x20 ; ' '
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x07 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x3d ; '='
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x00 ; '.'
00000000000017b1         db  0x00 ; '.'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x88 ; '.'
00000000000017b9         db  0xdf ; '.'
00000000000017ba         db  0x20 ; ' '
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x07 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x3e ; '>'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x00 ; '.'
00000000000017c9         db  0x00 ; '.'
00000000000017ca         db  0x00 ; '.'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x90 ; '.'
00000000000017d1         db  0xdf ; '.'
00000000000017d2         db  0x20 ; ' '
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x07 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x3f ; '?'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x00 ; '.'
00000000000017e1         db  0x00 ; '.'
00000000000017e2         db  0x00 ; '.'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x98 ; '.'
00000000000017e9         db  0xdf ; '.'
00000000000017ea         db  0x20 ; ' '
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x07 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x40 ; '@'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x00 ; '.'
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0xa0 ; '.'
0000000000001801         db  0xdf ; '.'
0000000000001802         db  0x20 ; ' '
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x07 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x42 ; 'B'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x00 ; '.'
0000000000001811         db  0x00 ; '.'
0000000000001812         db  0x00 ; '.'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0xa8 ; '.'
0000000000001819         db  0xdf ; '.'
000000000000181a         db  0x20 ; ' '
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x07 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x43 ; 'C'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x00 ; '.'
0000000000001829         db  0x00 ; '.'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0xb0 ; '.'
0000000000001831         db  0xdf ; '.'
0000000000001832         db  0x20 ; ' '
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x07 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x45 ; 'E'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x00 ; '.'
0000000000001841         db  0x00 ; '.'
0000000000001842         db  0x00 ; '.'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0xb8 ; '.'
0000000000001849         db  0xdf ; '.'
000000000000184a         db  0x20 ; ' '
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x07 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x46 ; 'F'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x00 ; '.'
0000000000001859         db  0x00 ; '.'
000000000000185a         db  0x00 ; '.'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1860; 0x1877[ (23 bytes)
        ; File offset : [6240; 6263[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001860         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001864         mov        rax, qword [qword_20dfd8]                   ; qword_20dfd8
000000000000186b         test       rax, rax
000000000000186e         je         loc_1872

0000000000001870         call       rax

                     loc_1872:
0000000000001872         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001876         ret
                        ; endp
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x00 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1880; 0x1c90[ (1040 bytes)
        ; File offset : [6272; 7312[ (1040 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1880:
0000000000001880         push       qword [qword_20ddb0]                        ; Begin of unwind block (FDE at 0xb8e4), qword_20ddb0, CODE XREF=sub_1896+5
0000000000001886         jmp        qword [qword_20ddb0+8]                      ; 0x20ddb8
                        ; endp
000000000000188c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001890         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_36b0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, filesystem_type+295, cwd_advance_fd+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x0
000000000000189b         jmp        loc_1880


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000018a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+593, sub_2150+1390, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xfts_open+32, fts_stat+49, fts_stat+320, fts_palloc.isra.2+68
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x1
00000000000018ab         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000018b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+812, usage+1005
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x2
00000000000018bb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000018c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x3
00000000000018cb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
00000000000018d0         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=openat_proc_name+147
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x4
00000000000018db         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000018e0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x5
00000000000018eb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
00000000000018f0         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=fts_sort+124
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x6
00000000000018fb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001900         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x7
000000000000190b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001910         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x8
000000000000191b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001920         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x9
000000000000192b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001930         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+93
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0xa
000000000000193b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001940         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+796, main+909, main+1175, sub_2150+131, sub_2150+170, sub_2150+360, sub_2150+462, sub_2150+575, sub_2150+649, sub_2150+711, sub_2150+856
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0xb
000000000000194b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001950         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0xc
000000000000195b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001960         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_36b0+411, sub_36b0+1742, xstrdup+4, fts_build+539, rpl_fts_open+136, rpl_fts_open+452, rpl_fts_read+784, chdir_long+99, openat_proc_name+71
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0xd
000000000000196b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000001970         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=get_root_dev_ino+45, fts_stat+348
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0xe
000000000000197b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
0000000000001980         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34, cdb_advance_fd+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0xf
000000000000198b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chdir:        // chdir
0000000000001990         jmp        qword [chdir@GOT]                           ; chdir, chdir@GOT, CODE XREF=chdir_long+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x10
000000000000199b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000019a0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sub_2150+1490, sub_36b0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, get_root_dev_ino+108, version_etc_va+101, version_etc+192, filesystem_type+290
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x11
00000000000019ab         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000019b0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x12
00000000000019bb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000019c0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x13
00000000000019cb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
00000000000019d0         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=fts_stat+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x14
00000000000019db         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000019e0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14, rpl_fts_read+758
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x15
00000000000019eb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000019f0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x16
00000000000019fb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001a00         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=sub_546f+27, cycle_check+133, cdb_free+60, chdir_long+588, chdir_long+624, chdir_long+655, chdir_long+686, chdir_long+717
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x17
0000000000001a0b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001a10         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x18
0000000000001a1b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getcwd:        // getcwd
0000000000001a20         jmp        qword [getcwd@GOT]                          ; getcwd, getcwd@GOT, CODE XREF=save_cwd+52
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x19
0000000000001a2b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001a30         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fd_ring_clear+50, cwd_advance_fd+63, cwd_advance_fd+82, fts_safe_changedir+226, fts_safe_changedir+437, fts_build+1383, rpl_fts_close+243, rpl_fts_close+272, rpl_fts_close+333, rpl_fts_read+238, rpl_fts_read+1603
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x1a
0000000000001a3b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001a40         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=chdir_long+146, chdir_long+289, chdir_long+435
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x1b
0000000000001a4b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000001a50         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=fts_lfree+29, fts_build+1348, fts_build+1444, fts_build+1647, fts_build+1979, fts_build+2427
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x1c
0000000000001a5b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001a60         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=chdir_long+382
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x1d
0000000000001a6b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001a70         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x1e
0000000000001a7b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001a80         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+163, usage+200, usage+237, usage+274, usage+311, usage+348, usage+385, usage+422, usage+459, usage+496, usage+540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x1f
0000000000001a8b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001a90         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26, rpl_fts_open+72, hash_initialize+177, hash_rehash+198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x20
0000000000001a9b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001aa0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=sub_2150+83, sub_2150+808
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x21
0000000000001aab         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
0000000000001ab0         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=fts_build+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x22
0000000000001abb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001ac0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, fts_alloc+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x23
0000000000001acb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001ad0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x24
0000000000001adb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001ae0         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=fts_stat+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x25
0000000000001aeb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000001af0         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=fts_build+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x26
0000000000001afb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001b00         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, fts_alloc+30, filesystem_type+224, setup_dir.isra.4+69, enter_dir.isra.10+23, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, openat_proc_name+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x27
0000000000001b0b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001b10         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x28
0000000000001b1b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001b20         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x29
0000000000001b2b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001b30         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=fts_safe_changedir+189
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x2a
0000000000001b3b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001b40         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x2b
0000000000001b4b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchdir:        // fchdir
0000000000001b50         jmp        qword [fchdir@GOT]                          ; fchdir, fchdir@GOT, CODE XREF=restore_initial_cwd+29, fts_safe_changedir+380, rpl_fts_close+231, rpl_fts_read+1677, rpl_fts_children+236, getfileconat+130, restore_cwd+8, chdir_long+504
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x2c
0000000000001b5b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001b60         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, fts_sort+64, fts_palloc.isra.2+29
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x2d
0000000000001b6b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001b70         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+74, usage+787, usage+980, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x2e
0000000000001b7b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001b80         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=sub_2150+380, usage+126, usage+775, usage+868, usage+929, usage+968, usage+1071, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x2f
0000000000001b8b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001b90         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=fts_build+949, rpl_fts_read+745, rpl_fts_read+802, rpl_fts_read+998
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x30
0000000000001b9b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001ba0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+818, main+924, main+1195, sub_2150+148, sub_2150+184, sub_2150+254, sub_2150+483, sub_2150+589, sub_2150+675, sub_2150+726, sub_2150+873
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x31
0000000000001bab         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memrchr:        // memrchr
0000000000001bb0         jmp        qword [memrchr@GOT]                         ; memrchr, memrchr@GOT, CODE XREF=chdir_long+329
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x32
0000000000001bbb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001bc0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35, openat_proc_name+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x33
0000000000001bcb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_access:        // access
0000000000001bd0         jmp        qword [access@GOT]                          ; access, access@GOT, CODE XREF=openat_proc_name+294
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0x34
0000000000001bdb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001be0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0x35
0000000000001beb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000001bf0         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0x36
0000000000001bfb         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fstatfs:        // fstatfs
0000000000001c00         jmp        qword [fstatfs@GOT]                         ; fstatfs, fstatfs@GOT, CODE XREF=filesystem_type+200
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0x37
0000000000001c0b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001c10         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0x38
0000000000001c1b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001c20         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+410, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0x39
0000000000001c2b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001c30         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x3a
0000000000001c3b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001c40         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872, hash_print_statistics+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x3b
0000000000001c4b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001c50         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_36b0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x3c
0000000000001c5b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001c60         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_36b0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c66:
0000000000001c66         push       0x3d
0000000000001c6b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001c70         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3450+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c76:
0000000000001c76         push       0x3e
0000000000001c7b         jmp        0x1880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000001c80         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=openat_proc_name+133, openat_proc_name+284
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c86:
0000000000001c86         push       0x3f
0000000000001c8b         jmp        0x1880
                        ; endp


        ; Section .plt.got
        ; Range: [0x1c90; 0x1ca0[ (16 bytes)
        ; File offset : [7312; 7328[ (16 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c90:
0000000000001c90         jmp        qword [qword_20dfc0]                        ; qword, End of unwind block (FDE at 0xb8e4), Begin of unwind block (FDE at 0xb90c), qword_20dfc0, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, fts_sort+212, fts_lfree+40, filesystem_type+283, fts_palloc.isra.2+56, fts_palloc.isra.2+91, enter_dir.isra.10+86
                        ; endp
0000000000001c96         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20dfe8:        // qword_20dfe8
0000000000001c98         jmp        qword [qword_20dfe8]                        ; qword, qword_20dfe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001c9e         align      32


        ; Section .text
        ; Range: [0x1ca0; 0x9bae[ (32526 bytes)
        ; File offset : [7328; 39854[ (32526 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_51: int8_t, -81
        ;    var_60: int64_t, -96


                     main:
0000000000001ca0         push       r15                                         ; End of unwind block (FDE at 0xb90c), Begin of unwind block (FDE at 0xb950), DATA XREF=_start+29
0000000000001ca2         push       r14
0000000000001ca4         xor        r15d, r15d
0000000000001ca7         push       r13
0000000000001ca9         push       r12
0000000000001cab         xor        r13d, r13d
0000000000001cae         push       rbp
0000000000001caf         push       rbx
0000000000001cb0         movsxd     rbp, edi
0000000000001cb3         mov        rbx, rsi
0000000000001cb6         mov        r14d, 0xffffffff
0000000000001cbc         mov        r12d, 0x10
0000000000001cc2         sub        rsp, 0x38
0000000000001cc6         mov        rdi, qword [rsi]
0000000000001cc9         mov        rax, qword [fs:0x28]
0000000000001cd2         mov        qword [rsp+0x68+var_40], rax
0000000000001cd7         xor        eax, eax
0000000000001cd9         call       set_program_name                            ; set_program_name
0000000000001cde         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xae01
0000000000001ce5         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001cea         call       j_setlocale                                 ; setlocale
0000000000001cef         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001cf6         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001cfd         call       j_bindtextdomain                            ; bindtextdomain
0000000000001d02         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001d09         call       j_textdomain                                ; textdomain
0000000000001d0e         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001d15         call       atexit                                      ; atexit
0000000000001d1a         mov        qword [rsp+0x68+var_60], 0x0
0000000000001d23         nop        dword [rax+rax]

                     loc_1d28:
0000000000001d28         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+237, main+269, main+283, main+306, main+421, main+432, main+448, main+460, main+471, main+483, main+503
0000000000001d2f         lea        rdx, qword [aHlprhvurtl]                    ; argument "__shortopts" for method j_getopt_long, "HLPRhvu:r:t:l:"
0000000000001d36         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001d39         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001d3c         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001d3e         call       j_getopt_long                               ; getopt_long
0000000000001d43         cmp        eax, 0xffffffff
0000000000001d46         je         loc_1ea4

0000000000001d4c         cmp        eax, 0x6c
0000000000001d4f         je         loc_1dcc

0000000000001d51         jle        loc_1d90

0000000000001d53         cmp        eax, 0x76
0000000000001d56         je         loc_1e7c

0000000000001d5c         jle        loc_1dc0

0000000000001d5e         cmp        eax, 0x81
0000000000001d63         je         loc_1e9c

0000000000001d69         jle        loc_1e88

0000000000001d6f         cmp        eax, 0x82
0000000000001d74         je         loc_1e71

0000000000001d7a         cmp        eax, 0x83
0000000000001d7f         jne        loc_1df7

0000000000001d81         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001d88         mov        qword [rsp+0x68+var_60], rax
0000000000001d8d         jmp        loc_1d28
0000000000001d8f         align      16

                     loc_1d90:
0000000000001d90         cmp        eax, 0x4c                                   ; CODE XREF=main+177
0000000000001d93         je         loc_1e4a

0000000000001d99         jle        loc_1de0

0000000000001d9b         cmp        eax, 0x52
0000000000001d9e         je         loc_1e65

0000000000001da4         jle        loc_1e55

0000000000001daa         cmp        eax, 0x66
0000000000001dad         je         loc_1d28

0000000000001db3         cmp        eax, 0x68
0000000000001db6         jne        loc_1df7

0000000000001db8         xor        r14d, r14d
0000000000001dbb         jmp        loc_1d28

                     loc_1dc0:
0000000000001dc0         cmp        eax, 0x74                                   ; CODE XREF=main+188
0000000000001dc3         je         loc_1dcc

0000000000001dc5         jg         loc_1dcc

0000000000001dc7         cmp        eax, 0x72
0000000000001dca         jne        loc_1df7

                     loc_1dcc:
0000000000001dcc         mov        r13d, 0x1                                   ; CODE XREF=main+175, main+291, main+293
0000000000001dd2         jmp        loc_1d28
0000000000001dd7         align      32

                     loc_1de0:
0000000000001de0         cmp        eax, 0xffffff7e                             ; CODE XREF=main+249
0000000000001de5         je         loc_2662

0000000000001deb         cmp        eax, 0x48
0000000000001dee         je         loc_1e3f

0000000000001df0         cmp        eax, 0xffffff7d
0000000000001df5         je         loc_1e01

                     loc_1df7:
0000000000001df7         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+223, main+278, main+298, main+440, main+491, sub_2150+594, sub_2150+1580
0000000000001dfc         call       usage                                       ; usage

                     loc_1e01:
0000000000001e01         sub        rsp, 0x8                                    ; CODE XREF=main+341
0000000000001e05         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001e0c         mov        rcx, qword [Version]                        ; Version
0000000000001e13         push       0x0
0000000000001e15         lea        r9, qword [aJimMeyering]                    ; "Jim Meyering"
0000000000001e1c         lea        r8, qword [aRussellCoker]                   ; "Russell Coker"
0000000000001e23         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c40
0000000000001e2a         lea        rsi, qword [aChcon]                         ; "chcon"
0000000000001e31         xor        eax, eax
0000000000001e33         call       version_etc                                 ; version_etc
0000000000001e38         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001e3a         call       j_exit                                      ; exit
                        ; endp

                     loc_1e3f:
0000000000001e3f         mov        r12d, 0x11                                  ; CODE XREF=main+334
0000000000001e45         jmp        loc_1d28

                     loc_1e4a:
0000000000001e4a         mov        r12d, 0x2                                   ; CODE XREF=main+243
0000000000001e50         jmp        loc_1d28

                     loc_1e55:
0000000000001e55         cmp        eax, 0x50                                   ; CODE XREF=main+260
0000000000001e58         jne        loc_1df7

0000000000001e5a         mov        r12d, 0x10
0000000000001e60         jmp        loc_1d28

                     loc_1e65:
0000000000001e65         mov        byte [recurse], 0x1                         ; recurse, CODE XREF=main+254
0000000000001e6c         jmp        loc_1d28

                     loc_1e71:
0000000000001e71         mov        r15d, 0x1                                   ; CODE XREF=main+212
0000000000001e77         jmp        loc_1d28

                     loc_1e7c:
0000000000001e7c         mov        byte [verbose], 0x1                         ; verbose, CODE XREF=main+182
0000000000001e83         jmp        loc_1d28

                     loc_1e88:
0000000000001e88         add        eax, 0xffffff80                             ; CODE XREF=main+201
0000000000001e8b         jne        loc_1df7

0000000000001e91         mov        r14d, 0x1
0000000000001e97         jmp        loc_1d28

                     loc_1e9c:
0000000000001e9c         xor        r15d, r15d                                  ; CODE XREF=main+195
0000000000001e9f         jmp        loc_1d28

                     loc_1ea4:
0000000000001ea4         movzx      edx, byte [recurse]                         ; recurse, CODE XREF=main+166
0000000000001eab         test       dl, dl
0000000000001ead         jne        loc_2279

0000000000001eb3         test       r14d, r14d
0000000000001eb6         mov        r12d, 0x10
0000000000001ebc         setne      byte [affect_symlink_referent]              ; affect_symlink_referent

                     loc_1ec3:
0000000000001ec3         movsxd     r14, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=sub_2150+323, sub_2150+936
0000000000001eca         mov        ecx, ebp
0000000000001ecc         sub        ecx, r14d
0000000000001ecf         cmp        qword [rsp+0x68+var_60], 0x0
0000000000001ed5         setne      al
0000000000001ed8         or         al, r13b
0000000000001edb         mov        byte [rsp+0x68+var_51], al
0000000000001edf         je         loc_236f

0000000000001ee5         test       ecx, ecx
0000000000001ee7         jle        loc_2378

0000000000001eed         mov        byte [rsp+0x68+var_50], dl
0000000000001ef1         call       j___errno_location                          ; __errno_location
0000000000001ef6         cmp        qword [rsp+0x68+var_60], 0x0
0000000000001efc         mov        rbp, rax
0000000000001eff         movzx      edx, byte [rsp+0x68+var_50]
0000000000001f04         jne        loc_2669

0000000000001f0a         test       dl, dl
0000000000001f0c         mov        qword [specified_context], 0x0              ; specified_context
0000000000001f17         je         loc_1f22

0000000000001f19         test       r15b, r15b
0000000000001f1c         jne        loc_24fd

                     loc_1f22:
0000000000001f22         mov        qword [root_dev_ino], 0x0                   ; root_dev_ino, CODE XREF=main+631

                     loc_1f2d:
0000000000001f2d         lea        rdi, qword [rbx+r14*8]                      ; CODE XREF=sub_2150+970
0000000000001f31         mov        esi, r12d
0000000000001f34         xor        edx, edx
0000000000001f36         or         esi, 0x8
0000000000001f39         lea        r14, qword [aFailedToChange+40]             ; 0xa850
0000000000001f40         call       xfts_open                                   ; xfts_open
0000000000001f45         mov        r12, rax
0000000000001f48         lea        rax, qword [rsp+0x68+var_48]
0000000000001f4d         movzx      ebx, byte [rsp+0x68+var_51]
0000000000001f52         mov        rdi, r12
0000000000001f55         mov        qword [rsp+0x68+var_60], rax
0000000000001f5a         call       rpl_fts_read                                ; rpl_fts_read
0000000000001f5f         test       rax, rax
0000000000001f62         mov        r13, rax
0000000000001f65         je         loc_2007

0000000000001f6b         nop        dword [rax+rax]

                     loc_1f70:
0000000000001f70         cmp        word [rax+0x70], 0xa                        ; CODE XREF=main+865
0000000000001f75         mov        rcx, qword [rax+0x38]
0000000000001f79         ja         loc_2098

0000000000001f7f         movzx      eax, word [rax+0x70]
0000000000001f83         movsxd     rax, dword [r14+rax*4]
0000000000001f87         add        rax, r14
0000000000001f8a         jmp        rax
                        ; endp
0000000000001f8c         cmp        qword [r13+0x58], 0x0
0000000000001f91         jne        main+766
0000000000001f93         cmp        qword [r13+0x20], 0x0
0000000000001f98         je         sub_2150+508
0000000000001f9e         mov        rsi, rcx                                    ; CODE XREF=main+753
0000000000001fa1         mov        edi, 0x4
0000000000001fa6         call       quotearg_style                              ; quotearg_style
0000000000001fab         lea        rsi, qword [aCannotAccessS]                 ; "cannot access %s"
0000000000001fb2         mov        r15, rax
0000000000001fb5         mov        edx, 0x5
0000000000001fba         xor        edi, edi                                    ; CODE XREF=sub_2150+292
0000000000001fbc         call       j_dcgettext                                 ; dcgettext
0000000000001fc1         mov        esi, dword [r13+0x40]
0000000000001fc5         mov        rcx, r15
0000000000001fc8         mov        rdx, rax
0000000000001fcb         xor        edi, edi
0000000000001fcd         xor        eax, eax
0000000000001fcf         xor        r15d, r15d
0000000000001fd2         call       j_error                                     ; error

                     loc_1fd7:
0000000000001fd7         cmp        byte [recurse], 0x0                         ; recurse, CODE XREF=main+1113, sub_2150+259, sub_2150+488, sub_2150+680, sub_2150+914, sub_2150+1091
0000000000001fde         jne        loc_1ff0

0000000000001fe0         mov        edx, 0x4
0000000000001fe5         mov        rsi, r13
0000000000001fe8         mov        rdi, r12
0000000000001feb         call       rpl_fts_set                                 ; rpl_fts_set

                     loc_1ff0:
0000000000001ff0         mov        rdi, r12                                    ; CODE XREF=main+830, sub_2150, sub_2150+32, sub_2150+48, sub_2150+62, sub_2150+213, sub_2150+538
0000000000001ff3         and        ebx, r15d
0000000000001ff6         call       rpl_fts_read                                ; rpl_fts_read
0000000000001ffb         test       rax, rax
0000000000001ffe         mov        r13, rax
0000000000002001         jne        loc_1f70

                     loc_2007:
0000000000002007         cmp        dword [rbp], 0x0                            ; CODE XREF=main+709
000000000000200b         jne        loc_2407

                     loc_2011:
0000000000002011         mov        rdi, r12                                    ; CODE XREF=sub_2150+731
0000000000002014         call       rpl_fts_close                               ; rpl_fts_close
0000000000002019         test       eax, eax
000000000000201b         je         loc_2041

000000000000201d         lea        rsi, qword [aFtscloseFailed]                ; argument "msgid" for method j_dcgettext, "fts_close failed"
0000000000002024         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002029         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000202b         xor        ebx, ebx
000000000000202d         call       j_dcgettext                                 ; dcgettext
0000000000002032         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000002035         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002038         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000203a         xor        eax, eax
000000000000203c         call       j_error                                     ; error

                     loc_2041:
0000000000002041         xor        ebx, 0x1                                    ; CODE XREF=main+891
0000000000002044         movzx      eax, bl
0000000000002047         mov        rbx, qword [rsp+0x68+var_40]
000000000000204c         xor        rbx, qword [fs:0x28]
0000000000002055         jne        loc_2722

000000000000205b         add        rsp, 0x38
000000000000205f         pop        rbx
0000000000002060         pop        rbp
0000000000002061         pop        r12
0000000000002063         pop        r13
0000000000002065         pop        r14
0000000000002067         pop        r15
0000000000002069         ret
                        ; endp
000000000000206a         cmp        byte [recurse], 0x0                         ; recurse
0000000000002071         je         sub_2150+532
0000000000002077         mov        rax, qword [root_dev_ino]                   ; root_dev_ino
000000000000207e         test       rax, rax
0000000000002081         je         main+1016
0000000000002083         mov        rdx, qword [rax]
0000000000002086         cmp        qword [r13+0x80], rdx
000000000000208d         je         sub_2150+779
0000000000002093         nop        dword [rax+rax]

                     loc_2098:
0000000000002098         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=main+729, main+993, main+1141, sub_2150+16, sub_2150+787
000000000000209f         mov        r15, qword [r13+0x30]
00000000000020a3         jne        loc_2298

                     loc_20a9:
00000000000020a9         mov        rcx, qword [specified_context]              ; specified_context, CODE XREF=sub_2150+385
00000000000020b0         mov        edi, dword [r12+0x2c]
00000000000020b5         mov        qword [rsp+0x68+var_48], 0x0
00000000000020be         movzx      eax, byte [affect_symlink_referent]         ; affect_symlink_referent
00000000000020c5         test       rcx, rcx
00000000000020c8         je         loc_22d6

00000000000020ce         test       al, al
00000000000020d0         mov        rdx, rcx
00000000000020d3         mov        qword [rsp+0x68+var_50], rcx
00000000000020d8         mov        rsi, r15
00000000000020db         je         loc_233d

00000000000020e1         call       setfileconat                                ; setfileconat
00000000000020e6         mov        rcx, qword [rsp+0x68+var_50]

                     loc_20eb:
00000000000020eb         test       eax, eax                                    ; CODE XREF=sub_2150+503
00000000000020ed         jne        loc_23a7

00000000000020f3         movzx      r15d, byte [rsp+0x68+var_51]
00000000000020f9         jmp        loc_1fd7
00000000000020fe         mov        rsi, r13
0000000000002101         mov        rdi, r12
0000000000002104         mov        qword [rsp+0x18], rcx
0000000000002109         call       cycle_warning_required                      ; cycle_warning_required
000000000000210e         test       al, al
0000000000002110         mov        rcx, qword [rsp+0x18]
0000000000002115         je         main+1016
0000000000002117         mov        rdx, rcx
000000000000211a         mov        esi, 0x3
000000000000211f         xor        edi, edi
0000000000002121         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002126         lea        rsi, qword [aWarningCircula]                ; "WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n"
000000000000212d         mov        r15, rax
0000000000002130         mov        edx, 0x5
0000000000002135         xor        edi, edi
0000000000002137         call       j_dcgettext                                 ; dcgettext
000000000000213c         mov        rcx, r15
000000000000213f         mov        rdx, rax
0000000000002142         xor        esi, esi
0000000000002144         xor        edi, edi
0000000000002146         xor        eax, eax
0000000000002148         xor        r15d, r15d
000000000000214b         call       j_error                                     ; error


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2150:
0000000000002150         jmp        main+848
                        ; endp
0000000000002155         movzx      r15d, byte [recurse]                        ; recurse
000000000000215d         test       r15b, r15b
0000000000002160         je         main+1016
0000000000002166         mov        rax, qword [root_dev_ino]                   ; root_dev_ino
000000000000216d         test       rax, rax
0000000000002170         je         main+848
0000000000002176         mov        rdx, qword [rax]
0000000000002179         cmp        qword [r13+0x80], rdx
0000000000002180         jne        main+848
0000000000002186         mov        rax, qword [rax+8]
000000000000218a         cmp        qword [r13+0x78], rax
000000000000218e         jne        main+848
0000000000002194         lea        rsi, qword [aProcselffdd+16]                ; 0xb3d0
000000000000219b         mov        rdi, rcx
000000000000219e         mov        qword [rsp+0x18], rcx
00000000000021a3         call       j_strcmp                                    ; strcmp
00000000000021a8         test       eax, eax
00000000000021aa         mov        rcx, qword [rsp+0x18]
00000000000021af         jne        sub_2150+1197
00000000000021b5         mov        rsi, rcx
00000000000021b8         mov        edi, 0x4
00000000000021bd         call       quotearg_style                              ; quotearg_style
00000000000021c2         lea        rsi, qword [aItIsDangerousT]                ; "it is dangerous to operate recursively on %s"
00000000000021c9         mov        r15, rax
00000000000021cc         mov        edx, 0x5
00000000000021d1         xor        edi, edi
00000000000021d3         call       j_dcgettext                                 ; dcgettext
00000000000021d8         mov        rcx, r15
00000000000021db         mov        rdx, rax
00000000000021de         xor        esi, esi
00000000000021e0         xor        edi, edi
00000000000021e2         xor        eax, eax
00000000000021e4         call       j_error                                     ; error
00000000000021e9         lea        rsi, qword [aUseNopreserver]                ; "use --no-preserve-root to override this failsafe", CODE XREF=sub_2150+1293
00000000000021f0         mov        edx, 0x5
00000000000021f5         xor        edi, edi
00000000000021f7         xor        r15d, r15d
00000000000021fa         call       j_dcgettext                                 ; dcgettext
00000000000021ff         xor        esi, esi
0000000000002201         mov        rdx, rax
0000000000002204         xor        edi, edi
0000000000002206         xor        eax, eax
0000000000002208         call       j_error                                     ; error
000000000000220d         mov        edx, 0x4
0000000000002212         mov        rsi, r13
0000000000002215         mov        rdi, r12
0000000000002218         call       rpl_fts_set                                 ; rpl_fts_set
000000000000221d         mov        rdi, r12
0000000000002220         call       rpl_fts_read                                ; rpl_fts_read
0000000000002225         jmp        main+848
000000000000222a         mov        rdx, rcx
000000000000222d         mov        esi, 0x3
0000000000002232         xor        edi, edi
0000000000002234         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002239         mov        esi, dword [r13+0x40]
000000000000223d         lea        rdx, qword [aSS+4]                          ; 0xa891
0000000000002244         mov        rcx, rax
0000000000002247         xor        edi, edi
0000000000002249         xor        eax, eax
000000000000224b         xor        r15d, r15d
000000000000224e         call       j_error                                     ; error
0000000000002253         jmp        main+823
0000000000002258         mov        rsi, rcx
000000000000225b         mov        edi, 0x4
0000000000002260         call       quotearg_style                              ; quotearg_style
0000000000002265         mov        edx, 0x5
000000000000226a         mov        r15, rax
000000000000226d         lea        rsi, qword [aCannotReadDire]                ; "cannot read directory %s"
0000000000002274         jmp        main+794

                     loc_2279:
0000000000002279         cmp        r12d, 0x10                                  ; CODE XREF=main+525
000000000000227d         je         loc_24e7

0000000000002283         test       r14d, r14d
0000000000002286         je         loc_2727

000000000000228c         mov        byte [affect_symlink_referent], 0x1         ; affect_symlink_referent
0000000000002293         jmp        loc_1ec3

                     loc_2298:
0000000000002298         mov        rsi, rcx                                    ; CODE XREF=main+1027
000000000000229b         mov        edi, 0x4
00000000000022a0         call       quotearg_style                              ; quotearg_style
00000000000022a5         lea        rsi, qword [aChangingSecuri]                ; argument "msgid" for method j_dcgettext, "changing security context of %s\\n"
00000000000022ac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022ae         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022b3         mov        qword [rsp+0x68+var_50], rax
00000000000022b8         call       j_dcgettext                                 ; dcgettext
00000000000022bd         mov        rdx, qword [rsp+0x68+var_50]
00000000000022c2         mov        rsi, rax
00000000000022c5         mov        edi, 0x1
00000000000022ca         xor        eax, eax
00000000000022cc         call       j___printf_chk                              ; __printf_chk
00000000000022d1         jmp        loc_20a9

                     loc_22d6:
00000000000022d6         test       al, al                                      ; CODE XREF=main+1064
00000000000022d8         mov        rdx, qword [rsp+0x68+var_60]
00000000000022dd         mov        rsi, r15
00000000000022e0         je         loc_23fd

00000000000022e6         call       getfileconat                                ; getfileconat

                     loc_22eb:
00000000000022eb         test       eax, eax                                    ; CODE XREF=sub_2150+690
00000000000022ed         js         loc_2430

                     loc_22f3:
00000000000022f3         mov        rdi, qword [rsp+0x68+var_48]                ; CODE XREF=sub_2150+740
00000000000022f8         test       rdi, rdi
00000000000022fb         je         loc_255c

0000000000002301         mov        dword [rbp], 0x5f
0000000000002308         call       quote                                       ; quote
000000000000230d         lea        rsi, qword [aFailedToCreate]                ; "failed to create security context: %s"
0000000000002314         mov        r15, rax
0000000000002317         mov        edx, 0x5

                     loc_231c:
000000000000231c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=sub_2150+774
000000000000231e         call       j_dcgettext                                 ; dcgettext
0000000000002323         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000002326         mov        rcx, r15
0000000000002329         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000232c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000232e         xor        eax, eax
0000000000002330         xor        r15d, r15d
0000000000002333         call       j_error                                     ; error
0000000000002338         jmp        loc_1fd7

                     loc_233d:
000000000000233d         call       lsetfileconat                               ; lsetfileconat, CODE XREF=main+1083
0000000000002342         mov        rcx, qword [rsp+0x68+var_50]
0000000000002347         jmp        loc_20eb
000000000000234c         mov        qword [r13+0x20], 0x1                       ; CODE XREF=main+760
0000000000002354         mov        edx, 0x1
0000000000002359         mov        rsi, r13
000000000000235c         mov        rdi, r12
000000000000235f         call       rpl_fts_set                                 ; rpl_fts_set
0000000000002364         movzx      r15d, byte [rsp+0x17]                       ; CODE XREF=main+977
000000000000236a         jmp        main+848

                     loc_236f:
000000000000236f         sub        ecx, 0x1                                    ; CODE XREF=main+575
0000000000002372         jg         loc_26a9

                     loc_2378:
0000000000002378         cmp        r14d, ebp                                   ; CODE XREF=main+583
000000000000237b         jl         loc_274b

0000000000002381         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand"
0000000000002388         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000238a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000238f         call       j_dcgettext                                 ; dcgettext
0000000000002394         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002396         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002399         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000239b         xor        eax, eax
000000000000239d         call       j_error                                     ; error
00000000000023a2         jmp        loc_1df7

                     loc_23a7:
00000000000023a7         mov        rsi, rcx                                    ; CODE XREF=main+1101
00000000000023aa         mov        edi, 0x1
00000000000023af         call       quote_n                                     ; quote_n
00000000000023b4         mov        rdx, r15
00000000000023b7         mov        esi, 0x4
00000000000023bc         xor        edi, edi
00000000000023be         mov        qword [rsp+0x68+var_50], rax
00000000000023c3         call       quotearg_n_style                            ; quotearg_n_style
00000000000023c8         lea        rsi, qword [aFailedToChange]                ; argument "msgid" for method j_dcgettext, "failed to change context of %s to %s"
00000000000023cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d6         mov        r15, rax
00000000000023d9         call       j_dcgettext                                 ; dcgettext
00000000000023de         mov        r8, qword [rsp+0x68+var_50]
00000000000023e3         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
00000000000023e6         mov        rcx, r15
00000000000023e9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000023ec         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000023ee         xor        eax, eax
00000000000023f0         xor        r15d, r15d
00000000000023f3         call       j_error                                     ; error
00000000000023f8         jmp        loc_1fd7

                     loc_23fd:
00000000000023fd         call       lgetfileconat                               ; lgetfileconat, CODE XREF=sub_2150+400
0000000000002402         jmp        loc_22eb

                     loc_2407:
0000000000002407         lea        rsi, qword [aFtsreadFailed]                 ; argument "msgid" for method j_dcgettext, "fts_read failed", CODE XREF=main+875
000000000000240e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002413         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002415         xor        ebx, ebx
0000000000002417         call       j_dcgettext                                 ; dcgettext
000000000000241c         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
000000000000241f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002422         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002424         xor        eax, eax
0000000000002426         call       j_error                                     ; error
000000000000242b         jmp        loc_2011

                     loc_2430:
0000000000002430         cmp        dword [rbp], 0x3d                           ; CODE XREF=sub_2150+413
0000000000002434         je         loc_22f3

000000000000243a         mov        rsi, r15
000000000000243d         mov        edi, 0x4
0000000000002442         call       quotearg_style                              ; quotearg_style
0000000000002447         mov        edx, 0x5
000000000000244c         mov        r15, rax
000000000000244f         lea        rsi, qword [aFailedToGetSec]                ; "failed to get security context of %s"
0000000000002456         jmp        loc_231c
000000000000245b         mov        rax, qword [rax+8]                          ; CODE XREF=main+1005
000000000000245f         cmp        qword [r13+0x78], rax
0000000000002463         jne        main+1016
0000000000002469         lea        rsi, qword [aProcselffdd+16]                ; 0xb3d0
0000000000002470         mov        rdi, rcx
0000000000002473         mov        qword [rsp+0x18], rcx
0000000000002478         call       j_strcmp                                    ; strcmp
000000000000247d         test       eax, eax
000000000000247f         mov        rcx, qword [rsp+0x18]
0000000000002484         jne        sub_2150+1096
000000000000248a         mov        rsi, rcx
000000000000248d         mov        edi, 0x4
0000000000002492         call       quotearg_style                              ; quotearg_style
0000000000002497         lea        rsi, qword [aItIsDangerousT]                ; "it is dangerous to operate recursively on %s"
000000000000249e         mov        r15, rax
00000000000024a1         mov        edx, 0x5
00000000000024a6         xor        edi, edi
00000000000024a8         call       j_dcgettext                                 ; dcgettext
00000000000024ad         mov        rcx, r15
00000000000024b0         mov        rdx, rax
00000000000024b3         xor        esi, esi
00000000000024b5         xor        edi, edi
00000000000024b7         xor        eax, eax
00000000000024b9         call       j_error                                     ; error
00000000000024be         lea        rsi, qword [aUseNopreserver]                ; "use --no-preserve-root to override this failsafe", CODE XREF=sub_2150+1192
00000000000024c5         mov        edx, 0x5
00000000000024ca         xor        edi, edi
00000000000024cc         xor        r15d, r15d
00000000000024cf         call       j_dcgettext                                 ; dcgettext
00000000000024d4         xor        esi, esi
00000000000024d6         mov        rdx, rax
00000000000024d9         xor        edi, edi
00000000000024db         xor        eax, eax
00000000000024dd         call       j_error                                     ; error
00000000000024e2         jmp        main+823

                     loc_24e7:
00000000000024e7         sub        r14d, 0x1                                   ; CODE XREF=sub_2150+301
00000000000024eb         je         loc_26fe

00000000000024f1         mov        byte [affect_symlink_referent], 0x0         ; affect_symlink_referent
00000000000024f8         jmp        loc_1ec3

                     loc_24fd:
00000000000024fd         lea        rdi, qword [dev_ino_buf.7158]               ; dev_ino_buf.7158, CODE XREF=main+636
0000000000002504         call       get_root_dev_ino                            ; get_root_dev_ino
0000000000002509         test       rax, rax
000000000000250c         mov        qword [root_dev_ino], rax                   ; root_dev_ino
0000000000002513         movsxd     r14, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000251a         jne        loc_1f2d

0000000000002520         lea        rsi, qword [aProcselffdd+16]                ; 0xb3d0
0000000000002527         mov        edi, 0x4
000000000000252c         call       quotearg_style                              ; quotearg_style
0000000000002531         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
0000000000002538         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000253d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000253f         mov        rbx, rax
0000000000002542         call       j_dcgettext                                 ; dcgettext
0000000000002547         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
000000000000254a         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000254d         mov        rcx, rbx
0000000000002550         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002555         xor        eax, eax
0000000000002557         call       j_error                                     ; error

                     loc_255c:
000000000000255c         mov        rsi, r15                                    ; CODE XREF=sub_2150+427
000000000000255f         mov        edi, 0x4
0000000000002564         call       quotearg_style                              ; quotearg_style
0000000000002569         lea        rsi, qword [aCantApplyParti]                ; argument "msgid" for method j_dcgettext, "can't apply partial context to unlabeled file %s"
0000000000002570         mov        r15, rax
0000000000002573         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002578         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000257a         call       j_dcgettext                                 ; dcgettext
000000000000257f         mov        rcx, r15
0000000000002582         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002585         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002587         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002589         xor        eax, eax
000000000000258b         xor        r15d, r15d
000000000000258e         call       j_error                                     ; error
0000000000002593         jmp        loc_1fd7
0000000000002598         lea        rdx, qword [aProcselffdd+16]                ; 0xb3d0, CODE XREF=sub_2150+820
000000000000259f         mov        esi, 0x4
00000000000025a4         mov        edi, 0x1
00000000000025a9         mov        qword [rsp+0x18], rcx
00000000000025ae         call       quotearg_n_style                            ; quotearg_n_style
00000000000025b3         mov        rcx, qword [rsp+0x18]
00000000000025b8         xor        edi, edi
00000000000025ba         mov        esi, 0x4
00000000000025bf         mov        r15, rax
00000000000025c2         mov        rdx, rcx
00000000000025c5         call       quotearg_n_style                            ; quotearg_n_style
00000000000025ca         lea        rsi, qword [aItIsDangerousT_a668]           ; "it is dangerous to operate recursively on %s (same as %s)"
00000000000025d1         xor        edi, edi
00000000000025d3         mov        edx, 0x5
00000000000025d8         mov        qword [rsp+0x18], rax
00000000000025dd         call       j_dcgettext                                 ; dcgettext
00000000000025e2         mov        rcx, qword [rsp+0x18]
00000000000025e7         mov        rdx, rax
00000000000025ea         mov        r8, r15
00000000000025ed         xor        esi, esi
00000000000025ef         xor        edi, edi
00000000000025f1         xor        eax, eax
00000000000025f3         call       j_error                                     ; error
00000000000025f8         jmp        sub_2150+878
00000000000025fd         lea        rdx, qword [aProcselffdd+16]                ; 0xb3d0, CODE XREF=sub_2150+95
0000000000002604         mov        esi, 0x4
0000000000002609         mov        edi, 0x1
000000000000260e         mov        qword [rsp+0x18], rcx
0000000000002613         call       quotearg_n_style                            ; quotearg_n_style
0000000000002618         mov        rcx, qword [rsp+0x18]
000000000000261d         xor        edi, edi
000000000000261f         mov        esi, 0x4
0000000000002624         mov        r15, rax
0000000000002627         mov        rdx, rcx
000000000000262a         call       quotearg_n_style                            ; quotearg_n_style
000000000000262f         lea        rsi, qword [aItIsDangerousT_a668]           ; "it is dangerous to operate recursively on %s (same as %s)"
0000000000002636         xor        edi, edi
0000000000002638         mov        edx, 0x5
000000000000263d         mov        qword [rsp+0x18], rax
0000000000002642         call       j_dcgettext                                 ; dcgettext
0000000000002647         mov        rcx, qword [rsp+0x18]
000000000000264c         mov        rdx, rax
000000000000264f         mov        r8, r15
0000000000002652         xor        esi, esi
0000000000002654         xor        edi, edi
0000000000002656         xor        eax, eax
0000000000002658         call       j_error                                     ; error
000000000000265d         jmp        sub_2150+153

                     loc_2662:
0000000000002662         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+325
0000000000002664         call       usage                                       ; usage

                     loc_2669:
0000000000002669         mov        rsi, qword [rsp+0x68+var_60]                ; CODE XREF=main+612
000000000000266e         mov        edi, 0x4
0000000000002673         mov        dword [rax], 0x5f
0000000000002679         call       quotearg_style                              ; quotearg_style
000000000000267e         lea        rsi, qword [aFailedToGetSec]                ; argument "msgid" for method j_dcgettext, "failed to get security context of %s"
0000000000002685         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000268a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000268c         mov        rbx, rax
000000000000268f         call       j_dcgettext                                 ; dcgettext
0000000000002694         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000002697         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000269a         mov        rcx, rbx
000000000000269d         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000026a2         xor        eax, eax
00000000000026a4         call       j_error                                     ; error

                     loc_26a9:
00000000000026a9         mov        rbp, qword [rbx+r14*8]                      ; CODE XREF=sub_2150+546
00000000000026ad         lea        eax, dword [r14+1]
00000000000026b1         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
00000000000026b7         mov        qword [specified_context], rbp              ; specified_context
00000000000026be         call       j___errno_location                          ; __errno_location
00000000000026c3         mov        rdi, rbp
00000000000026c6         mov        dword [rax], 0x5f
00000000000026cc         mov        rbx, rax
00000000000026cf         call       quote                                       ; quote
00000000000026d4         lea        rsi, qword [aInvalidContext]                ; argument "msgid" for method j_dcgettext, "invalid context: %s"
00000000000026db         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026e0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026e2         mov        rbp, rax
00000000000026e5         call       j_dcgettext                                 ; dcgettext
00000000000026ea         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000026ec         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000026ef         mov        rcx, rbp
00000000000026f2         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000026f7         xor        eax, eax
00000000000026f9         call       j_error                                     ; error

                     loc_26fe:
00000000000026fe         lea        rsi, qword [aRDereferenceRe]                ; argument "msgid" for method j_dcgettext, "-R --dereference requires either -H or -L", CODE XREF=sub_2150+923
0000000000002705         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000270a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000270c         call       j_dcgettext                                 ; dcgettext
0000000000002711         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002713         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002716         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000271b         xor        eax, eax
000000000000271d         call       j_error                                     ; error

                     loc_2722:
0000000000002722         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+949
                        ; endp

                     loc_2727:
0000000000002727         lea        rsi, qword [aRHRequiresP]                   ; argument "msgid" for method j_dcgettext, "-R -h requires -P", CODE XREF=sub_2150+310
000000000000272e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002733         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002735         call       j_dcgettext                                 ; dcgettext
000000000000273a         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000273c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000273f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002744         xor        eax, eax
0000000000002746         call       j_error                                     ; error

                     loc_274b:
000000000000274b         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=sub_2150+555
0000000000002750         call       quote                                       ; quote
0000000000002755         lea        rsi, qword [aMissingOperand_9cd1]           ; argument "msgid" for method j_dcgettext, "missing operand after %s"
000000000000275c         mov        rbx, rax
000000000000275f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002761         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002766         call       j_dcgettext                                 ; dcgettext
000000000000276b         mov        rcx, rbx
000000000000276e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002771         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002773         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002775         xor        eax, eax
0000000000002777         call       j_error                                     ; error
000000000000277c         jmp        loc_1df7
0000000000002781         align      16                                          ; End of unwind block (FDE at 0xb950)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002790         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xb8b4)
0000000000002792         mov        r9, rdx
0000000000002795         pop        rsi
0000000000002796         mov        rdx, rsp
0000000000002799         and        rsp, 0xfffffffffffffff0
000000000000279d         push       rax
000000000000279e         push       rsp
000000000000279f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000027a6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000027ad         lea        rdi, qword [main]                           ; main
00000000000027b4         call       qword [qword_20dfc8+8]                      ; 0x20dfd0
00000000000027ba         hlt
                        ; endp
00000000000027bb         align      64                                          ; End of unwind block (FDE at 0xb8b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000027c0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
00000000000027c7         push       rbp
00000000000027c8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000027cf         cmp        rax, rdi
00000000000027d2         mov        rbp, rsp
00000000000027d5         je         loc_27f0

00000000000027d7         mov        rax, qword [qword_20dfc8]                   ; qword_20dfc8
00000000000027de         test       rax, rax
00000000000027e1         je         loc_27f0

00000000000027e3         pop        rbp
00000000000027e4         jmp        rax
                        ; endp
00000000000027e6         align      16

                     loc_27f0:
00000000000027f0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000027f1         ret
                        ; endp
00000000000027f2         align      2048

                     register_tm_clones:
0000000000002800         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002807         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000280e         push       rbp
000000000000280f         sub        rsi, rdi
0000000000002812         mov        rbp, rsp
0000000000002815         sar        rsi, 0x3
0000000000002819         mov        rax, rsi
000000000000281c         shr        rax, 0x3f
0000000000002820         add        rsi, rax
0000000000002823         sar        rsi, 0x1
0000000000002826         je         loc_2840

0000000000002828         mov        rax, qword [qword_20dfe0]                   ; qword_20dfe0
000000000000282f         test       rax, rax
0000000000002832         je         loc_2840

0000000000002834         pop        rbp
0000000000002835         jmp        rax
                        ; endp
0000000000002837         align      64

                     loc_2840:
0000000000002840         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002841         ret
                        ; endp
0000000000002842         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002850         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002857         jne        loc_2888

0000000000002859         cmp        qword [qword_20dfe8], 0x0                   ; qword_20dfe8
0000000000002861         push       rbp
0000000000002862         mov        rbp, rsp
0000000000002865         je         loc_2873

0000000000002867         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000286e         call       j_qword_20dfe8                              ; qword_20dfe8

                     loc_2873:
0000000000002873         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002878         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000287f         pop        rbp
0000000000002880         ret
                        ; endp
0000000000002881         align      8

                     loc_2888:
0000000000002888         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000288a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002890         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002891         mov        rbp, rsp
0000000000002894         pop        rbp
0000000000002895         jmp        register_tm_clones                          ; register_tm_clones
000000000000289a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000028a0         push       r13                                         ; Begin of unwind block (FDE at 0xb924), CODE XREF=main+348, sub_2150+1300
00000000000028a2         push       r12
00000000000028a4         mov        edx, 0x5
00000000000028a9         push       rbp
00000000000028aa         push       rbx
00000000000028ab         mov        ebp, edi
00000000000028ad         sub        rsp, 0x88
00000000000028b4         mov        rbx, qword [program_name]                   ; program_name
00000000000028bb         mov        rax, qword [fs:0x28]
00000000000028c4         mov        qword [rsp+0xa8+var_30], rax
00000000000028c9         xor        eax, eax
00000000000028cb         test       edi, edi
00000000000028cd         je         loc_28fd

00000000000028cf         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000028d6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028d8         call       j_dcgettext                                 ; dcgettext
00000000000028dd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000028e4         mov        rdx, rax
00000000000028e7         mov        rcx, rbx
00000000000028ea         mov        esi, 0x1
00000000000028ef         xor        eax, eax
00000000000028f1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_28f6:
00000000000028f6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+934
00000000000028f8         call       j_exit                                      ; exit
                        ; endp

                     loc_28fd:
00000000000028fd         lea        rsi, qword [aUsageSOptionCo]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... CONTEXT FILE...\\n  or:  %s [OPTION]... [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n", CODE XREF=usage+45
0000000000002904         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002906         call       j_dcgettext                                 ; dcgettext
000000000000290b         mov        rcx, rbx
000000000000290e         mov        r8, rbx
0000000000002911         mov        rdx, rbx
0000000000002914         mov        rsi, rax
0000000000002917         mov        edi, 0x1
000000000000291c         xor        eax, eax
000000000000291e         call       j___printf_chk                              ; __printf_chk
0000000000002923         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000292a         lea        rsi, qword [aChangeTheSelin]                ; argument "msgid" for method j_dcgettext, "Change the SELinux security context of each FILE to CONTEXT.\\nWith --reference, change the security context of each FILE to that of RFILE.\\n"
0000000000002931         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002936         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002938         call       j_dcgettext                                 ; dcgettext
000000000000293d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002940         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002943         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002948         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000294f         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002956         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000295b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000295d         call       j_dcgettext                                 ; dcgettext
0000000000002962         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002965         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002968         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000296d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002974         lea        rsi, qword [aNmandatoryArgu+80]             ; argument "msgid" for method j_dcgettext, 0x9f48
000000000000297b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002980         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002982         call       j_dcgettext                                 ; dcgettext
0000000000002987         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000298a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000298d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002992         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002999         lea        rsi, qword [aUUseruserSetUs]                ; argument "msgid" for method j_dcgettext, "  -u, --user=USER        set user USER in the target security context\\n  -r, --role=ROLE        set role ROLE in the target security context\\n  -t, --type=TYPE        set type TYPE in the target security context\\n  -l, --range=RANGE      set range RANGE in th…"
00000000000029a0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029a7         call       j_dcgettext                                 ; dcgettext
00000000000029ac         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029af         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029b2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029b7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029be         lea        rsi, qword [aNopreserveroot]                ; argument "msgid" for method j_dcgettext, "      --no-preserve-root  do not treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n"
00000000000029c5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029ca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029cc         call       j_dcgettext                                 ; dcgettext
00000000000029d1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029d4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029d7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029dc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029e3         lea        rsi, qword [aReferencerfile]                ; argument "msgid" for method j_dcgettext, "      --reference=RFILE  use RFILE's security context rather than specifying\\n                         a CONTEXT value\\n"
00000000000029ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029ef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029f1         call       j_dcgettext                                 ; dcgettext
00000000000029f6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029f9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029fc         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a01         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a08         lea        rsi, qword [aRRecursiveOper]                ; argument "msgid" for method j_dcgettext, "  -R, --recursive        operate on files and directories recursively\\n"
0000000000002a0f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a14         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a16         call       j_dcgettext                                 ; dcgettext
0000000000002a1b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a1e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a21         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a26         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a2d         lea        rsi, qword [aVVerboseOutput]                ; argument "msgid" for method j_dcgettext, "  -v, --verbose          output a diagnostic for every file processed\\n"
0000000000002a34         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a39         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a3b         call       j_dcgettext                                 ; dcgettext
0000000000002a40         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a43         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a46         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a4b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a52         lea        rsi, qword [aNtheFollowingO]                ; argument "msgid" for method j_dcgettext, "\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                      …"
0000000000002a59         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a5e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a60         call       j_dcgettext                                 ; dcgettext
0000000000002a65         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a68         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a6b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a70         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a77         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002a7e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a83         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a85         call       j_dcgettext                                 ; dcgettext
0000000000002a8a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a8d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a90         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a95         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a9c         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002aa3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002aa8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002aaa         call       j_dcgettext                                 ; dcgettext
0000000000002aaf         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002ab2         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002ab5         lea        rbx, qword [aChcon]                         ; "chcon"
0000000000002abc         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002ac1         lea        rax, qword [aChcon+6]                       ; 0x9bca
0000000000002ac8         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002acf         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002ad8         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002ae1         mov        rdx, rsp
0000000000002ae4         mov        qword [rsp+0xa8+var_A8], rax
0000000000002ae8         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002aef         mov        qword [rsp+0xa8+var_78], rcx
0000000000002af4         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002afb         mov        qword [rsp+0xa8+var_A0], rax
0000000000002b00         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002b07         mov        qword [rsp+0xa8+var_68], rcx
0000000000002b0c         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002b13         mov        qword [rsp+0xa8+var_98], rax
0000000000002b18         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002b1f         mov        qword [rsp+0xa8+var_58], rcx
0000000000002b24         mov        qword [rsp+0xa8+var_90], rax
0000000000002b29         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002b30         mov        qword [rsp+0xa8+var_88], rax
0000000000002b35         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002b3c         mov        qword [rsp+0xa8+var_80], rax
0000000000002b41         mov        qword [rsp+0xa8+var_70], rax
0000000000002b46         mov        qword [rsp+0xa8+var_60], rax
0000000000002b4b         mov        qword [rsp+0xa8+var_50], rax

                     loc_2b50:
0000000000002b50         add        rdx, 0x10                                   ; CODE XREF=usage+717
0000000000002b54         mov        rdi, qword [rdx]
0000000000002b57         test       rdi, rdi
0000000000002b5a         je         loc_2b6f

0000000000002b5c         mov        ecx, 0x6
0000000000002b61         mov        rsi, rbx
0000000000002b64         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b66         seta       al
0000000000002b69         sbb        al, 0x0
0000000000002b6b         test       al, al
0000000000002b6d         jne        loc_2b50

                     loc_2b6f:
0000000000002b6f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+698
0000000000002b73         xor        edi, edi
0000000000002b75         mov        edx, 0x5
0000000000002b7a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002b81         test       r12, r12
0000000000002b84         je         loc_2c4b

0000000000002b8a         call       j_dcgettext                                 ; dcgettext
0000000000002b8f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002b96         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c40
0000000000002b9d         mov        rsi, rax
0000000000002ba0         mov        edi, 0x1
0000000000002ba5         xor        eax, eax
0000000000002ba7         call       j___printf_chk                              ; __printf_chk
0000000000002bac         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002bae         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002bb3         call       j_setlocale                                 ; setlocale
0000000000002bb8         test       rax, rax
0000000000002bbb         je         loc_2bd9

0000000000002bbd         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9c4e
0000000000002bc4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002bc9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002bcc         call       j_strncmp                                   ; strncmp
0000000000002bd1         test       eax, eax
0000000000002bd3         jne        loc_2ce0

                     loc_2bd9:
0000000000002bd9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+795, usage+1125
0000000000002be0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002be2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002be7         call       j_dcgettext                                 ; dcgettext
0000000000002bec         lea        rcx, qword [aChcon]                         ; "chcon"
0000000000002bf3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002bfa         mov        rsi, rax
0000000000002bfd         mov        edi, 0x1
0000000000002c02         xor        eax, eax
0000000000002c04         call       j___printf_chk                              ; __printf_chk
0000000000002c09         cmp        r12, rbx
0000000000002c0c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x9be6
0000000000002c13         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xae01
0000000000002c1a         cmove      rbx, rcx

                     loc_2c1e:
0000000000002c1e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1076
0000000000002c25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c2c         call       j_dcgettext                                 ; dcgettext
0000000000002c31         mov        rcx, rbx
0000000000002c34         mov        rsi, rax
0000000000002c37         mov        rdx, r12
0000000000002c3a         mov        edi, 0x1
0000000000002c3f         xor        eax, eax
0000000000002c41         call       j___printf_chk                              ; __printf_chk
0000000000002c46         jmp        loc_28f6

                     loc_2c4b:
0000000000002c4b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+740
0000000000002c50         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002c57         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c40
0000000000002c5e         mov        rsi, rax
0000000000002c61         mov        edi, 0x1
0000000000002c66         xor        eax, eax
0000000000002c68         call       j___printf_chk                              ; __printf_chk
0000000000002c6d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002c6f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002c74         call       j_setlocale                                 ; setlocale
0000000000002c79         test       rax, rax
0000000000002c7c         je         loc_2c96

0000000000002c7e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9c4e
0000000000002c85         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002c8a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002c8d         call       j_strncmp                                   ; strncmp
0000000000002c92         test       eax, eax
0000000000002c94         jne        loc_2cd9

                     loc_2c96:
0000000000002c96         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+988
0000000000002c9d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ca2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ca4         lea        r12, qword [aChcon]                         ; "chcon"
0000000000002cab         lea        rbx, qword [aMulticallInvoc+10]             ; 0x9be6
0000000000002cb2         call       j_dcgettext                                 ; dcgettext
0000000000002cb7         lea        rcx, qword [aChcon]                         ; "chcon"
0000000000002cbe         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002cc5         mov        rsi, rax
0000000000002cc8         mov        edi, 0x1
0000000000002ccd         xor        eax, eax
0000000000002ccf         call       j___printf_chk                              ; __printf_chk
0000000000002cd4         jmp        loc_2c1e

                     loc_2cd9:
0000000000002cd9         lea        r12, qword [aChcon]                         ; "chcon", CODE XREF=usage+1012

                     loc_2ce0:
0000000000002ce0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+819
0000000000002ce7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002cee         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002cf0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002cf5         call       j_dcgettext                                 ; dcgettext
0000000000002cfa         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002cfd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002d00         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002d05         jmp        loc_2bd9
0000000000002d0a         align      16                                          ; End of unwind block (FDE at 0xb924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002d10         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xb9ac), file_name
0000000000002d17         ret
                        ; endp
0000000000002d18         align      32                                          ; End of unwind block (FDE at 0xb9ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002d20         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xb9c0), ignore_EPIPE
0000000000002d27         ret
                        ; endp
0000000000002d28         align      16                                          ; End of unwind block (FDE at 0xb9c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002d30         push       rbp                                         ; Begin of unwind block (FDE at 0xb9d4), DATA XREF=main+110
0000000000002d31         push       rbx
0000000000002d32         sub        rsp, 0x8
0000000000002d36         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002d3d         call       close_stream                                ; close_stream
0000000000002d42         test       eax, eax
0000000000002d44         je         loc_2d5c

0000000000002d46         call       j___errno_location                          ; __errno_location
0000000000002d4b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002d52         mov        rbx, rax
0000000000002d55         je         loc_2d73

0000000000002d57         cmp        dword [rax], 0x20
0000000000002d5a         jne        loc_2d73

                     loc_2d5c:
0000000000002d5c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002d63         call       close_stream                                ; close_stream
0000000000002d68         test       eax, eax
0000000000002d6a         jne        loc_2db2

0000000000002d6c         add        rsp, 0x8
0000000000002d70         pop        rbx
0000000000002d71         pop        rbp
0000000000002d72         ret
                        ; endp

                     loc_2d73:
0000000000002d73         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002d7a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d7c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d81         call       j_dcgettext                                 ; dcgettext
0000000000002d86         mov        rdi, qword [file_name]                      ; file_name
0000000000002d8d         mov        rbp, rax
0000000000002d90         test       rdi, rdi
0000000000002d93         je         loc_2dbd

0000000000002d95         call       quotearg_colon                              ; quotearg_colon
0000000000002d9a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002d9c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002da3         mov        rcx, rax
0000000000002da6         mov        r8, rbp
0000000000002da9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002dab         xor        eax, eax
0000000000002dad         call       j_error                                     ; error

                     loc_2db2:
0000000000002db2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002db8         call       j__exit                                     ; _exit
                        ; endp

                     loc_2dbd:
0000000000002dbd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002dbf         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xa891
0000000000002dc6         mov        rcx, rax
0000000000002dc9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002dcb         xor        eax, eax
0000000000002dcd         call       j_error                                     ; error
0000000000002dd2         jmp        loc_2db2
0000000000002dd4         align      32                                          ; End of unwind block (FDE at 0xb9d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002de0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xba04), CODE XREF=main+57
0000000000002de3         push       rbx
0000000000002de4         je         loc_2e5d

0000000000002de6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002deb         mov        rbx, rdi
0000000000002dee         call       j_strrchr                                   ; strrchr
0000000000002df3         test       rax, rax
0000000000002df6         je         loc_2e4d

0000000000002df8         lea        r8, qword [rax+1]
0000000000002dfc         mov        rdx, r8
0000000000002dff         sub        rdx, rbx
0000000000002e02         cmp        rdx, 0x6
0000000000002e06         jle        loc_2e4d

0000000000002e08         lea        rsi, qword [rax-6]
0000000000002e0c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002e13         mov        ecx, 0x7
0000000000002e18         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e1a         seta       dl
0000000000002e1d         sbb        dl, 0x0
0000000000002e20         test       dl, dl
0000000000002e22         jne        loc_2e4d

0000000000002e24         lea        rdi, qword [aLibs+8]                        ; 0xa8d8
0000000000002e2b         mov        ecx, 0x3
0000000000002e30         mov        rsi, r8
0000000000002e33         mov        rbx, r8
0000000000002e36         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e38         seta       dl
0000000000002e3b         sbb        dl, 0x0
0000000000002e3e         test       dl, dl
0000000000002e40         jne        loc_2e4d

0000000000002e42         lea        rbx, qword [rax+4]
0000000000002e46         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2e4d:
0000000000002e4d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002e54         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002e5b         pop        rbx
0000000000002e5c         ret
                        ; endp

                     loc_2e5d:
0000000000002e5d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002e64         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002e6b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002e70         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002e75         call       j_fwrite                                    ; fwrite
0000000000002e7a         call       j_abort                                     ; abort
                        ; endp
0000000000002e7f         align      128                                         ; End of unwind block (FDE at 0xba04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002e80         push       rbp                                         ; Begin of unwind block (FDE at 0xba24), CODE XREF=sub_36b0+2597, sub_36b0+2619
0000000000002e81         push       rbx
0000000000002e82         mov        rbp, rdi
0000000000002e85         mov        ebx, esi
0000000000002e87         sub        rsp, 0x8
0000000000002e8b         call       locale_charset                              ; locale_charset
0000000000002e90         movzx      edx, byte [rax]
0000000000002e93         and        edx, 0xffffffdf
0000000000002e96         cmp        dl, 0x55
0000000000002e99         je         loc_2f10

0000000000002e9b         cmp        dl, 0x47
0000000000002e9e         je         loc_2ec0

                     loc_2ea0:
0000000000002ea0         lea        rax, qword [aLibs+27]                       ; 0xa8eb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002ea7         lea        rdx, qword [a4096Len+22]                    ; 0xb35b
0000000000002eae         cmp        ebx, 0x9
0000000000002eb1         cmovne     rax, rdx
0000000000002eb5         add        rsp, 0x8
0000000000002eb9         pop        rbx
0000000000002eba         pop        rbp
0000000000002ebb         ret
                        ; endp
0000000000002ebc         align      64

                     loc_2ec0:
0000000000002ec0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002ec4         and        edx, 0xffffffdf
0000000000002ec7         cmp        dl, 0x42
0000000000002eca         jne        loc_2ea0

0000000000002ecc         cmp        byte [rax+2], 0x31
0000000000002ed0         jne        loc_2ea0

0000000000002ed2         cmp        byte [rax+3], 0x38
0000000000002ed6         jne        loc_2ea0

0000000000002ed8         cmp        byte [rax+4], 0x30
0000000000002edc         jne        loc_2ea0

0000000000002ede         cmp        byte [rax+5], 0x33
0000000000002ee2         jne        loc_2ea0

0000000000002ee4         cmp        byte [rax+6], 0x30
0000000000002ee8         jne        loc_2ea0

0000000000002eea         cmp        byte [rax+7], 0x0
0000000000002eee         jne        loc_2ea0

0000000000002ef0         cmp        byte [rbp], 0x60
0000000000002ef4         lea        rax, qword [aLibs+20]                       ; 0xa8e4
0000000000002efb         lea        rdx, qword [aLibs+24]                       ; 0xa8e8
0000000000002f02         cmovne     rax, rdx
0000000000002f06         add        rsp, 0x8
0000000000002f0a         pop        rbx
0000000000002f0b         pop        rbp
0000000000002f0c         ret
                        ; endp
0000000000002f0d         align      16

                     loc_2f10:
0000000000002f10         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002f14         and        edx, 0xffffffdf
0000000000002f17         cmp        dl, 0x54
0000000000002f1a         jne        loc_2ea0

0000000000002f1c         movzx      edx, byte [rax+2]
0000000000002f20         and        edx, 0xffffffdf
0000000000002f23         cmp        dl, 0x46
0000000000002f26         jne        loc_2ea0

0000000000002f2c         cmp        byte [rax+3], 0x2d
0000000000002f30         jne        loc_2ea0

0000000000002f36         cmp        byte [rax+4], 0x38
0000000000002f3a         jne        loc_2ea0

0000000000002f40         cmp        byte [rax+5], 0x0
0000000000002f44         jne        loc_2ea0

0000000000002f4a         cmp        byte [rbp], 0x60
0000000000002f4e         lea        rax, qword [aLibs+12]                       ; 0xa8dc
0000000000002f55         lea        rdx, qword [aLibs+16]                       ; 0xa8e0
0000000000002f5c         cmovne     rax, rdx
0000000000002f60         add        rsp, 0x8
0000000000002f64         pop        rbx
0000000000002f65         pop        rbp
0000000000002f66         ret
                        ; endp
0000000000002f67         align      16                                          ; End of unwind block (FDE at 0xba24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002f70         push       r15                                         ; Begin of unwind block (FDE at 0xba68), CODE XREF=sub_36b0+1165, sub_36b0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002f72         push       r14
0000000000002f74         mov        r15d, r8d
0000000000002f77         push       r13
0000000000002f79         push       r12
0000000000002f7b         mov        r14, rdi
0000000000002f7e         push       rbp
0000000000002f7f         push       rbx
0000000000002f80         mov        ebx, r9d
0000000000002f83         mov        r13, rsi
0000000000002f86         mov        rbp, rcx
0000000000002f89         and        ebx, 0x2
0000000000002f8c         sub        rsp, 0xb8
0000000000002f93         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002f9b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002fa0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002fa5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002faa         mov        qword [rsp+0xe8+var_C8], rax
0000000000002faf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002fb7         mov        qword [rsp+0xe8+var_80], rax
0000000000002fbc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002fc4         mov        qword [rsp+0xe8+var_88], rax
0000000000002fc9         mov        rax, qword [fs:0x28]
0000000000002fd2         mov        qword [rsp+0xe8+var_40], rax
0000000000002fda         xor        eax, eax
0000000000002fdc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002fe1         cmp        r15d, 0xa
0000000000002fe5         mov        qword [rsp+0xe8+var_90], rax
0000000000002fea         ja         loc_419f

0000000000002ff0         lea        rcx, qword [switch_table_a940]              ; switch_table_a940
0000000000002ff7         mov        edx, r15d
0000000000002ffa         movsxd     rax, dword [rcx+rdx*4]
0000000000002ffe         add        rax, rcx
0000000000003001         jmp        rax                                         ; switch statement using table at 0xa940, with 11 cases, 0x3003,0x3bd4,0x3c30,0x3c85,0x3cca,0x3d04,0x3daa,0x3de4,0x3fd8

                     loc_3003:
0000000000003003         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_36b0+1318
0000000000003008         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000300d         xor        r12d, r12d
0000000000003010         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003019         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000301e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3023:
0000000000003023         lea        rax, qword [a4096Len+22]                    ; 0xb35b, CODE XREF=sub_36b0+1876
000000000000302a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003033         xor        r15d, r15d
0000000000003036         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000303e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3043:
0000000000003043         xor        r11d, r11d                                  ; CODE XREF=sub_36b0+180, sub_36b0+1400, sub_36b0+1488, sub_36b0+1557, sub_36b0+1615, sub_36b0+1781, sub_36b0+1839, sub_36b0+2408, sub_36b0+2485
0000000000003046         mov        rax, rbp
0000000000003049         mov        r8d, r12d
000000000000304c         mov        rbp, r11
000000000000304f         mov        r11, rax
0000000000003052         nop        word [rax+rax]

                     loc_3058:
0000000000003058         cmp        r11, rbp                                    ; CODE XREF=sub_3160+194
000000000000305b         setne      r12b
000000000000305f         cmp        r11, 0xffffffffffffffff
0000000000003063         jne        loc_3072

0000000000003065         mov        rax, qword [rsp+0xe8+var_D8]
000000000000306a         cmp        byte [rax+rbp], 0x0
000000000000306e         setne      r12b

                     loc_3072:
0000000000003072         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003075         je         loc_36d0

000000000000307b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003080         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003085         lea        r9, qword [rdi+rbp]
0000000000003089         setne      al
000000000000308c         and        al, byte [rsp+0xe8+var_DB]
0000000000003090         mov        r10d, eax
0000000000003093         je         loc_3140

0000000000003099         mov        rax, qword [rsp+0xe8+var_D0]
000000000000309e         test       rax, rax
00000000000030a1         je         loc_34d0

00000000000030a7         cmp        r11, 0xffffffffffffffff
00000000000030ab         lea        rbx, qword [rbp+rax]
00000000000030b0         jne        loc_30e0

00000000000030b2         cmp        rax, 0x1
00000000000030b6         jbe        loc_30e0

00000000000030b8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000030bd         mov        byte [rsp+0xe8+var_B8], r10b
00000000000030c2         mov        qword [rsp+0xe8+var_C0], r9
00000000000030c7         call       j_strlen                                    ; strlen
00000000000030cc         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000030d2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000030d8         mov        r11, rax
00000000000030db         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_30e0:
00000000000030e0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000030e3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000030e8         ja         loc_36a0

00000000000030ee         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000030f3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000030f8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000030fb         mov        qword [rsp+0xe8+var_A8], r11
0000000000003100         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003105         mov        qword [rsp+0xe8+var_B8], r9
000000000000310a         call       j_memcmp                                    ; memcmp
000000000000310f         test       eax, eax
0000000000003111         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003116         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000311c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003121         jne        loc_36a0

0000000000003127         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000312c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003132         jne        loc_40b5

0000000000003138         nop        dword [rax+rax]

                     loc_3140:
0000000000003140         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3690+19
0000000000003144         cmp        bl, 0x7e
0000000000003147         ja         loc_3468

000000000000314d         lea        rcx, qword [switch_table_a940+44]           ; 0xa96c
0000000000003154         movzx      edx, bl
0000000000003157         movsxd     rax, dword [rcx+rdx*4]
000000000000315b         add        rax, rcx
000000000000315e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3160:
0000000000003160         xor        r10d, r10d
0000000000003163         cmp        r11, 0x1
0000000000003167         setne      al
000000000000316a         cmp        r11, 0xffffffffffffffff
000000000000316e         jne        loc_317c

0000000000003170         mov        rax, qword [rsp+arg_8]
0000000000003175         cmp        byte [rax+1], 0x0
0000000000003179         setne      al

                     loc_317c:
000000000000317c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3160+14
0000000000003181         sete       dl
0000000000003184         test       al, al
0000000000003186         je         loc_33d8

                     loc_318c:
000000000000318c         xor        r12d, r12d                                  ; CODE XREF=sub_33d0+11
000000000000318f         xor        eax, eax
0000000000003191         nop        dword [rax]
                        ; endp

                     loc_3198:
0000000000003198         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3380+50, sub_3450+119
000000000000319d         jne        loc_32b2

00000000000031a3         test       dl, dl
00000000000031a5         jne        loc_32b2

                     loc_31ab:
00000000000031ab         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3260+87
00000000000031b0         test       rsi, rsi
00000000000031b3         je         loc_31c9

00000000000031b5         mov        edx, ebx
00000000000031b7         shr        dl, 0x5
00000000000031ba         movzx      edx, dl
00000000000031bd         mov        edx, dword [rsi+rdx*4]
00000000000031c0         bt         edx, ebx
00000000000031c3         jb         loc_3313

                     loc_31c9:
00000000000031c9         test       r10b, r10b                                  ; CODE XREF=sub_3160+83, sub_3260+93
00000000000031cc         jne        loc_3313

00000000000031d2         xor        eax, 0x1
00000000000031d5         add        rbp, 0x1
00000000000031d9         and        eax, r8d

                     loc_31dc:
00000000000031dc         test       al, al                                      ; CODE XREF=sub_36b0+936
00000000000031de         je         loc_3200

00000000000031e0         cmp        r13, r15
00000000000031e3         jbe        loc_31ea

00000000000031e5         mov        byte [r14+r15], 0x27

                     loc_31ea:
00000000000031ea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+131
00000000000031ee         cmp        r13, rax
00000000000031f1         jbe        loc_31f9

00000000000031f3         mov        byte [r14+r15+1], 0x27

                     loc_31f9:
00000000000031f9         add        r15, 0x2                                    ; CODE XREF=sub_3160+145
00000000000031fd         xor        r8d, r8d

                     loc_3200:
0000000000003200         cmp        r15, r13                                    ; CODE XREF=sub_3160+126, sub_3260+275, sub_36b0+869
0000000000003203         jae        loc_3209

0000000000003205         mov        byte [r14+r15], bl

                     loc_3209:
0000000000003209         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3160+163
000000000000320e         add        r15, 0x1
0000000000003212         mov        eax, 0x0
0000000000003217         test       r12b, r12b
000000000000321a         cmove      edi, eax
000000000000321d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003222         jmp        loc_3058
0000000000003227         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3230:
0000000000003230         xor        r10d, r10d
0000000000003233         mov        eax, dword [rsp+arg_0]
0000000000003237         cmp        eax, 0x2
000000000000323a         je         loc_37f8

0000000000003240         cmp        eax, 0x5
0000000000003243         je         loc_37b8

0000000000003249         cmp        eax, 0x2
000000000000324c         mov        ebx, 0x3f
0000000000003251         sete       dl
0000000000003254         xor        r12d, r12d
0000000000003257         xor        eax, eax
0000000000003259         jmp        sub_3160+56
                        ; endp
000000000000325e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3260:
0000000000003260         xor        r10d, r10d
0000000000003263         cmp        dword [rsp+arg_0], 0x2
0000000000003268         je         loc_3770

000000000000326e         mov        byte [rsp+arg_74], r12b
0000000000003273         xor        edx, edx
0000000000003275         xor        eax, eax
0000000000003277         mov        ebx, 0x27
000000000000327c         jmp        sub_3160+56
                        ; endp
0000000000003281         nop        dword [rax]
0000000000003288         mov        edx, 0x9
000000000000328d         mov        ebx, 0x74

                     loc_3292:
0000000000003292         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3420+10, sub_3510+37, sub_3650+53
0000000000003297         sete       al
000000000000329a         and        al, byte [rsp+arg_7]
000000000000329e         jne        sub_33d0+30

00000000000032a4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3260+114
00000000000032a9         jne        loc_3310

                     loc_32ab:
00000000000032ab         mov        ebx, edx                                    ; CODE XREF=sub_3380+18
00000000000032ad         xor        r12d, r12d
00000000000032b0         xor        eax, eax
                        ; endp

                     loc_32b2:
00000000000032b2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3160+61, sub_3160+69
00000000000032b7         jne        loc_31ab

00000000000032bd         jmp        loc_31c9
00000000000032c2         nop        word [rax+rax]
00000000000032c8         mov        edx, 0x8
00000000000032cd         mov        ebx, 0x62
00000000000032d2         jmp        sub_3260+68
00000000000032d4         nop        dword [rax]
00000000000032d8         cmp        dword [rsp+8], 0x2
00000000000032dd         je         sub_36b0                                    ; sub_36b0
00000000000032e3         cmp        byte [rsp+0xd], 0x0
00000000000032e8         je         sub_34f0+16

                     loc_32ee:
00000000000032ee         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_34f0+8
00000000000032f3         je         loc_3500

00000000000032f9         cmp        qword [rsp+arg_10], 0x0
00000000000032ff         jne        loc_36bb

0000000000003305         mov        ebx, 0x5c
000000000000330a         nop        word [rax+rax]
                        ; endp

                     loc_3310:
0000000000003310         xor        r12d, r12d                                  ; CODE XREF=sub_3260+73, sub_3650+29
                        ; endp

                     loc_3313:
0000000000003313         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3160+99, sub_3160+108
0000000000003318         sete       dl
000000000000331b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003320         mov        eax, edx
0000000000003322         jne        loc_3b78

0000000000003328         mov        eax, r8d
000000000000332b         xor        eax, 0x1
000000000000332e         and        al, dl
0000000000003330         je         loc_3361

0000000000003332         cmp        r13, r15
0000000000003335         jbe        loc_333c

0000000000003337         mov        byte [r14+r15], 0x27

                     loc_333c:
000000000000333c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3260+213
0000000000003340         cmp        r13, rdx
0000000000003343         jbe        loc_334b

0000000000003345         mov        byte [r14+r15+1], 0x24

                     loc_334b:
000000000000334b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3260+227
000000000000334f         cmp        r13, rdx
0000000000003352         jbe        loc_335a

0000000000003354         mov        byte [r14+r15+2], 0x27

                     loc_335a:
000000000000335a         add        r15, 0x3                                    ; CODE XREF=sub_3260+242
000000000000335e         mov        r8d, eax

                     loc_3361:
0000000000003361         cmp        r13, r15                                    ; CODE XREF=sub_3260+208
0000000000003364         jbe        loc_336b

0000000000003366         mov        byte [r14+r15], 0x5c

                     loc_336b:
000000000000336b         add        r15, 0x1                                    ; CODE XREF=sub_3260+260
000000000000336f         add        rbp, 0x1
0000000000003373         jmp        loc_3200
0000000000003378         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3380:
0000000000003380         cmp        byte [rsp+arg_5], 0x0
0000000000003385         jne        loc_3553

000000000000338b         xor        edx, edx
000000000000338d         test       byte [rsp+arg_70], 0x1
0000000000003392         je         loc_32ab

0000000000003398         add        rbp, 0x1
000000000000339c         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000033a1         nop        dword [rax]
00000000000033a8         cmp        dword [rsp+8], 0x2
00000000000033ad         sete       dl
00000000000033b0         xor        eax, eax
00000000000033b2         jmp        sub_3160+56
00000000000033b7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33c0:
00000000000033c0         mov        edx, 0x7
00000000000033c5         mov        ebx, 0x61
00000000000033ca         jmp        sub_3260+68
                        ; endp
00000000000033cf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33d0:
00000000000033d0         cmp        dword [rsp+8], 0x2
00000000000033d5         sete       dl
                        ; endp

                     loc_33d8:
00000000000033d8         test       rbp, rbp                                    ; CODE XREF=sub_3160+38, sub_35f0+35
00000000000033db         jne        loc_318c

00000000000033e1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3620+43
00000000000033e6         and        al, dl
00000000000033e8         je         sub_3160+56

00000000000033ee         mov        rbp, r11
00000000000033f1         mov        dword [rsp+arg_0], 0x2
00000000000033f9         jmp        sub_36b0+1097
                        ; endp
00000000000033fe         align      1024


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3400:
0000000000003400         cmp        dword [rsp+arg_0], 0x2
0000000000003405         sete       dl
0000000000003408         xor        r12d, r12d
000000000000340b         jmp        sub_33d0+17
                        ; endp
000000000000340d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3410:
0000000000003410         cmp        dword [rsp+arg_0], 0x2
0000000000003415         mov        ebx, 0x20
000000000000341a         sete       dl
000000000000341d         jmp        sub_33d0+17
                        ; endp
000000000000341f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3420:
0000000000003420         mov        edx, 0xd
0000000000003425         mov        ebx, 0x72
000000000000342a         jmp        loc_3292
000000000000342f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3430:
0000000000003430         mov        edx, 0xc
0000000000003435         mov        ebx, 0x66
000000000000343a         jmp        sub_3260+68
                        ; endp
000000000000343f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3440:
0000000000003440         mov        edx, 0xb
0000000000003445         mov        ebx, 0x76
000000000000344a         jmp        sub_3260+68
                        ; endp
000000000000344f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3450:
0000000000003450         mov        edx, 0xa
0000000000003455         mov        ebx, 0x6e
000000000000345a         jmp        sub_3260+50
                        ; endp
000000000000345f         align      32

                     loc_3460:
0000000000003460         xor        r10d, r10d                                  ; CODE XREF=sub_3450+135
0000000000003463         nop        dword [rax+rax]

                     loc_3468:
0000000000003468         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000346e         jne        loc_3818

0000000000003474         mov        qword [rsp+0xe8+var_B0], r11
0000000000003479         mov        byte [rsp+0xe8+var_B8], r8b
000000000000347e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003483         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003488         mov        rcx, qword [rax]
000000000000348b         movzx      edx, bl
000000000000348e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003494         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000349a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000349f         mov        edi, 0x1
00000000000034a4         movzx      eax, word [rcx+rdx*2]
00000000000034a8         and        ax, 0x4000
00000000000034ac         setne      r12b
00000000000034b0         sete       al
00000000000034b3         and        al, byte [rsp+0xe8+var_DB]

                     loc_34b7:
00000000000034b7         test       al, al                                      ; CODE XREF=sub_36b0+2221
00000000000034b9         jne        loc_3e51

00000000000034bf         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000034c4         sete       dl
00000000000034c7         jmp        loc_3198
00000000000034cc         align      16

                     loc_34d0:
00000000000034d0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000034d4         cmp        bl, 0x7e
00000000000034d7         ja         loc_3460

00000000000034d9         lea        rcx, qword [switch_table_a940+552]          ; 0xab68
00000000000034e0         movzx      edx, bl
00000000000034e3         movsxd     rax, dword [rcx+rdx*4]
00000000000034e7         add        rax, rcx
00000000000034ea         jmp        rax
                        ; endp
00000000000034ec         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_34f0:
00000000000034f0         xor        r10d, r10d
00000000000034f3         cmp        byte [rsp+arg_5], 0x0
00000000000034f8         jne        loc_32ee

00000000000034fe         nop

                     loc_3500:
0000000000003500         mov        edx, 0x5c                                   ; CODE XREF=sub_3260+136, sub_3260+147
0000000000003505         mov        ebx, 0x5c
000000000000350a         jmp        sub_3260+68
                        ; endp
000000000000350f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3510:
0000000000003510         mov        edx, 0xc
0000000000003515         xor        r10d, r10d
0000000000003518         mov        ebx, 0x66
000000000000351d         jmp        sub_3260+68
                        ; endp
0000000000003522         nop        word [rax+rax]
0000000000003528         mov        edx, 0xa
000000000000352d         xor        r10d, r10d
0000000000003530         mov        ebx, 0x6e
0000000000003535         jmp        sub_3260+50
000000000000353a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3540:
0000000000003540         mov        ebx, 0x61
0000000000003545         jmp        sub_3260+176
                        ; endp
000000000000354a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3550:
0000000000003550         xor        r10d, r10d
                        ; endp

                     loc_3553:
0000000000003553         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3380+5
0000000000003558         sete       dl
000000000000355b         cmp        byte [rsp+arg_7], 0x0
0000000000003560         jne        loc_40fa

0000000000003566         mov        eax, r8d
0000000000003569         mov        rcx, r15
000000000000356c         xor        eax, 0x1
000000000000356f         and        al, dl
0000000000003571         je         loc_35a0

0000000000003573         cmp        r13, r15
0000000000003576         jbe        loc_357d

0000000000003578         mov        byte [r14+r15], 0x27

                     loc_357d:
000000000000357d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3550+38
0000000000003581         cmp        r13, rcx
0000000000003584         jbe        loc_358c

0000000000003586         mov        byte [r14+r15+1], 0x24

                     loc_358c:
000000000000358c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3550+52
0000000000003590         cmp        r13, rcx
0000000000003593         ja         loc_3bc9

                     loc_3599:
0000000000003599         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_36b0+1311
000000000000359d         mov        r8d, eax

                     loc_35a0:
00000000000035a0         cmp        r13, rcx                                    ; CODE XREF=sub_3550+33
00000000000035a3         jbe        loc_35aa

00000000000035a5         mov        byte [r14+rcx], 0x5c

                     loc_35aa:
00000000000035aa         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3550+83
00000000000035af         lea        r15, qword [rcx+1]
00000000000035b3         je         loc_3bb9

00000000000035b9         lea        rax, qword [rbp+1]
00000000000035bd         cmp        rax, r11
00000000000035c0         jae        loc_35db

00000000000035c2         mov        rax, qword [rsp+arg_8]
00000000000035c7         movzx      eax, byte [rax+rbp+1]
00000000000035cc         mov        byte [rsp+arg_20], al
00000000000035d0         sub        eax, 0x30
00000000000035d3         cmp        al, 0x9
00000000000035d5         jbe        loc_3e09

                     loc_35db:
00000000000035db         mov        eax, r12d                                   ; CODE XREF=sub_3550+112
00000000000035de         mov        ebx, 0x30
00000000000035e3         xor        r12d, r12d
00000000000035e6         jmp        sub_3160+56
                        ; endp
00000000000035eb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_35f0:
00000000000035f0         cmp        dword [rsp+arg_0], 0x2
00000000000035f5         mov        r12d, r10d
00000000000035f8         sete       dl
00000000000035fb         xor        r10d, r10d
00000000000035fe         xor        eax, eax
0000000000003600         jmp        sub_3160+56
                        ; endp
0000000000003605         nop        dword [rax]
0000000000003608         cmp        dword [rsp+8], 0x2
000000000000360d         sete       dl
0000000000003610         xor        r10d, r10d
0000000000003613         jmp        sub_33d0+8
0000000000003618         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3620:
0000000000003620         cmp        dword [rsp+8], 0x2
0000000000003625         sete       dl
0000000000003628         xor        r10d, r10d
000000000000362b         xor        r12d, r12d
000000000000362e         jmp        sub_33d0+17
                        ; endp
0000000000003633         nop        dword [rax+rax]
0000000000003638         cmp        dword [rsp+8], 0x2
000000000000363d         mov        r12d, r10d
0000000000003640         mov        ebx, 0x20
0000000000003645         sete       dl
0000000000003648         xor        r10d, r10d
000000000000364b         jmp        sub_33d0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3650:
0000000000003650         mov        edx, 0xd
0000000000003655         xor        r10d, r10d
0000000000003658         mov        ebx, 0x72
000000000000365d         jmp        sub_3260+50
                        ; endp
0000000000003662         nop        word [rax+rax]
0000000000003668         mov        ebx, 0x76
000000000000366d         jmp        sub_3260+176
0000000000003672         nop        word [rax+rax]
0000000000003678         mov        edx, 0x9
000000000000367d         xor        r10d, r10d
0000000000003680         mov        ebx, 0x74
0000000000003685         jmp        sub_3260+50
000000000000368a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3690:
0000000000003690         mov        ebx, 0x62
0000000000003695         jmp        sub_3260+176
                        ; endp
000000000000369a         nop        word [rax+rax]

                     loc_36a0:
00000000000036a0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000036a3         jmp        loc_3140
00000000000036a8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_36b0:
00000000000036b0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3260+125
00000000000036b5         jne        sub_36b0+2416
                        ; endp

                     loc_36bb:
00000000000036bb         add        rbp, 0x1                                    ; CODE XREF=sub_3260+159
00000000000036bf         mov        eax, r8d
00000000000036c2         xor        r12d, r12d
00000000000036c5         mov        ebx, 0x5c
00000000000036ca         jmp        sub_3160+124
                        ; endp
00000000000036cf         align      16

                     loc_36d0:
00000000000036d0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000036d5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000036da         mov        r12d, r8d
00000000000036dd         mov        rbp, r11
00000000000036e0         sete       dl
00000000000036e3         mov        eax, ebx
00000000000036e5         test       r15, r15
00000000000036e8         sete       cl
00000000000036eb         and        eax, edx
00000000000036ed         and        al, cl
00000000000036ef         jne        loc_4156

00000000000036f5         mov        eax, ebx
00000000000036f7         xor        eax, 0x1
00000000000036fa         and        dl, al
00000000000036fc         je         loc_406c

0000000000003702         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003707         je         loc_406a

000000000000370d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003712         jne        loc_410d

0000000000003718         test       r13, r13
000000000000371b         sete       al
000000000000371e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003724         setne      dl
0000000000003727         and        al, dl
0000000000003729         je         loc_414c

000000000000372f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3734:
0000000000003734         lea        rbx, qword [a4096Len+22]                    ; 0xb35b, CODE XREF=sub_36b0+2781
000000000000373b         mov        byte [r14], 0x27
000000000000373f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003747         mov        r15d, 0x1
000000000000374d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003756         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000375b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003760         mov        byte [rsp+0xe8+var_6C], al
0000000000003764         jmp        loc_3043
0000000000003769         align      16

                     loc_3770:
0000000000003770         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3260+8
0000000000003775         jne        sub_36b0+2416

000000000000377b         test       r13, r13
000000000000377e         je         loc_3b80

0000000000003784         xor        edx, edx
0000000000003786         cmp        qword [rsp+arg_48], 0x0
000000000000378c         jne        loc_3b80

                     loc_3792:
0000000000003792         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_36b0+1284, sub_36b0+2794
0000000000003797         add        r15, 0x3
000000000000379b         xor        eax, eax
000000000000379d         mov        byte [rsp+arg_74], r12b
00000000000037a2         xor        r8d, r8d
00000000000037a5         mov        r13, rdx
00000000000037a8         mov        ebx, 0x27
00000000000037ad         jmp        sub_3160+105
                        ; endp
00000000000037b2         align      8

                     loc_37b8:
00000000000037b8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3230+19
00000000000037bd         je         loc_37e0

00000000000037bf         lea        rcx, qword [rbp+2]
00000000000037c3         cmp        rcx, r11
00000000000037c6         jae        loc_37e0

00000000000037c8         mov        rax, qword [rsp+arg_8]
00000000000037cd         cmp        byte [rax+rbp+1], 0x3f
00000000000037d2         je         loc_3f62

00000000000037d8         nop        dword [rax+rax]

                     loc_37e0:
00000000000037e0         xor        edx, edx                                    ; CODE XREF=sub_36b0+269, sub_36b0+278, sub_36b0+2233, sub_36b0+2253
00000000000037e2         xor        r12d, r12d
00000000000037e5         xor        eax, eax
00000000000037e7         mov        ebx, 0x3f
00000000000037ec         jmp        sub_3160+56
                        ; endp
00000000000037f1         align      8

                     loc_37f8:
00000000000037f8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3230+10
00000000000037fd         jne        loc_4020

0000000000003803         xor        r12d, r12d
0000000000003806         xor        eax, eax
0000000000003808         mov        ebx, 0x3f
000000000000380d         jmp        sub_3160+105
                        ; endp
0000000000003812         align      8

                     loc_3818:
0000000000003818         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3450+30
0000000000003820         cmp        r11, 0xffffffffffffffff
0000000000003824         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003830         mov        qword [rsp+0xe8+var_C0], rax
0000000000003835         jne        loc_3864

0000000000003837         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000383c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003841         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003846         mov        qword [rsp+0xe8+var_B8], r9
000000000000384b         call       j_strlen                                    ; strlen
0000000000003850         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003856         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000385c         mov        r11, rax
000000000000385f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3864:
0000000000003864         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_36b0+389
000000000000386c         xor        ecx, ecx
000000000000386e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003872         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003877         mov        rbx, rcx
000000000000387a         mov        qword [rsp+0xe8+var_60], r9
0000000000003882         mov        qword [rsp+0xe8+var_B0], rax
0000000000003887         mov        byte [rsp+0xe8+var_69], r10b
000000000000388c         mov        qword [rsp+0xe8+var_68], r15
0000000000003894         mov        qword [rsp+0xe8+var_A8], r14
0000000000003899         mov        qword [rsp+0xe8+var_78], r13
000000000000389e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_38a3:
00000000000038a3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_36b0+623
00000000000038a8         lea        r14, qword [rbp+rbx]
00000000000038ad         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000038b2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000038b7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000038bc         lea        r13, qword [rax+r14]
00000000000038c0         sub        rdx, r14
00000000000038c3         mov        rsi, r13
00000000000038c6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000038cb         test       rax, rax
00000000000038ce         mov        r15, rax
00000000000038d1         je         loc_3921

00000000000038d3         cmp        rax, 0xffffffffffffffff
00000000000038d7         je         loc_3ef5

00000000000038dd         cmp        rax, 0xfffffffffffffffe
00000000000038e1         je         loc_3e81

00000000000038e7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000038ec         sete       al
00000000000038ef         and        al, byte [rsp+0xe8+var_D9]
00000000000038f3         jne        loc_3a90

                     loc_38f9:
00000000000038f9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_36b0+996, sub_36b0+1031
0000000000003900         call       j_iswprint                                  ; iswprint
0000000000003905         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000390a         test       eax, eax
000000000000390c         mov        eax, 0x0
0000000000003911         cmove      r12d, eax
0000000000003915         add        rbx, r15
0000000000003918         call       j_mbsinit                                   ; mbsinit
000000000000391d         test       eax, eax
000000000000391f         je         loc_38a3

                     loc_3921:
0000000000003921         mov        edx, r12d                                   ; CODE XREF=sub_36b0+545
0000000000003924         mov        rdi, rbx
0000000000003927         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000392d         xor        edx, 0x1
0000000000003930         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003935         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000393b         and        dl, byte [rsp+0xe8+var_DB]
000000000000393f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003947         mov        r14, qword [rsp+0xe8+var_A8]
000000000000394c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003951         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3956:
0000000000003956         cmp        rdi, 0x1                                    ; CODE XREF=sub_36b0+2112, sub_36b0+2168
000000000000395a         jbe        loc_3f5b

                     loc_3960:
0000000000003960         mov        rcx, rdi                                    ; CODE XREF=sub_36b0+1961
0000000000003963         xor        esi, esi
0000000000003965         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000396b         add        rcx, rbp
000000000000396e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003973         jmp        loc_3a2e
0000000000003978         align      128

                     loc_3980:
0000000000003980         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36b0+896
0000000000003985         sete       al
0000000000003988         test       r9b, r9b
000000000000398b         jne        loc_3e40

0000000000003991         mov        esi, r8d
0000000000003994         xor        esi, 0x1
0000000000003997         and        al, sil
000000000000399a         je         loc_39cb

000000000000399c         cmp        r13, r15
000000000000399f         jbe        loc_39a6

00000000000039a1         mov        byte [r14+r15], 0x27

                     loc_39a6:
00000000000039a6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_36b0+751
00000000000039aa         cmp        r13, rsi
00000000000039ad         jbe        loc_39b5

00000000000039af         mov        byte [r14+r15+1], 0x24

                     loc_39b5:
00000000000039b5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_36b0+765
00000000000039b9         cmp        r13, rsi
00000000000039bc         jbe        loc_39c4

00000000000039be         mov        byte [r14+r15+2], 0x27

                     loc_39c4:
00000000000039c4         add        r15, 0x3                                    ; CODE XREF=sub_36b0+780
00000000000039c8         mov        r8d, eax

                     loc_39cb:
00000000000039cb         cmp        r13, r15                                    ; CODE XREF=sub_36b0+746
00000000000039ce         jbe        loc_39d5

00000000000039d0         mov        byte [r14+r15], 0x5c

                     loc_39d5:
00000000000039d5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+798
00000000000039d9         cmp        r13, rax
00000000000039dc         jbe        loc_39eb

00000000000039de         mov        eax, ebx
00000000000039e0         shr        al, 0x6
00000000000039e3         add        eax, 0x30
00000000000039e6         mov        byte [r14+r15+1], al

                     loc_39eb:
00000000000039eb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+812
00000000000039ef         cmp        r13, rax
00000000000039f2         jbe        loc_3a04

00000000000039f4         mov        eax, ebx
00000000000039f6         shr        al, 0x3
00000000000039f9         and        eax, 0x7
00000000000039fc         add        eax, 0x30
00000000000039ff         mov        byte [r14+r15+2], al

                     loc_3a04:
0000000000003a04         and        ebx, 0x7                                    ; CODE XREF=sub_36b0+834
0000000000003a07         add        rbp, 0x1
0000000000003a0b         add        r15, 0x3
0000000000003a0f         add        ebx, 0x30
0000000000003a12         cmp        rbp, rcx
0000000000003a15         jae        loc_3200

0000000000003a1b         mov        esi, edx

                     loc_3a1d:
0000000000003a1d         cmp        r13, r15                                    ; CODE XREF=sub_36b0+985, sub_36b0+1969
0000000000003a20         jbe        loc_3a26

0000000000003a22         mov        byte [r14+r15], bl

                     loc_3a26:
0000000000003a26         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_36b0+880
0000000000003a2a         add        r15, 0x1

                     loc_3a2e:
0000000000003a2e         test       dl, dl                                      ; CODE XREF=sub_36b0+707
0000000000003a30         jne        loc_3980

0000000000003a36         mov        eax, esi
0000000000003a38         xor        eax, 0x1
0000000000003a3b         and        eax, r8d
0000000000003a3e         test       r10b, r10b
0000000000003a41         je         loc_3a51

0000000000003a43         cmp        r13, r15
0000000000003a46         jbe        loc_3a4d

0000000000003a48         mov        byte [r14+r15], 0x5c

                     loc_3a4d:
0000000000003a4d         add        r15, 0x1                                    ; CODE XREF=sub_36b0+918

                     loc_3a51:
0000000000003a51         add        rbp, 0x1                                    ; CODE XREF=sub_36b0+913
0000000000003a55         cmp        rbp, rcx
0000000000003a58         jae        loc_31dc

0000000000003a5e         test       al, al
0000000000003a60         je         loc_3e5e

0000000000003a66         cmp        r13, r15
0000000000003a69         jbe        loc_3a70

0000000000003a6b         mov        byte [r14+r15], 0x27

                     loc_3a70:
0000000000003a70         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+953
0000000000003a74         cmp        r13, rax
0000000000003a77         jbe        loc_3a7f

0000000000003a79         mov        byte [r14+r15+1], 0x27

                     loc_3a7f:
0000000000003a7f         add        r15, 0x2                                    ; CODE XREF=sub_36b0+967
0000000000003a83         xor        r10d, r10d
0000000000003a86         xor        r8d, r8d
0000000000003a89         jmp        loc_3a1d
0000000000003a8b         align      16

                     loc_3a90:
0000000000003a90         cmp        r15, 0x1                                    ; CODE XREF=sub_36b0+579
0000000000003a94         je         loc_38f9

0000000000003a9a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003a9f         lea        rcx, qword [rdi+r15]
0000000000003aa3         lea        rdx, qword [rdi+r14+1]
0000000000003aa8         lea        r8, qword [rcx+r14]
0000000000003aac         jmp        loc_3abd
0000000000003aae         align      16

                     loc_3ab0:
0000000000003ab0         add        rdx, 0x1                                    ; CODE XREF=sub_36b0+1046, sub_36b0+1072
0000000000003ab4         cmp        r8, rdx
0000000000003ab7         je         loc_38f9

                     loc_3abd:
0000000000003abd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_36b0+1020
0000000000003ac0         sub        ecx, 0x5b
0000000000003ac3         cmp        cl, 0x21
0000000000003ac6         ja         loc_3ab0

0000000000003ac8         mov        esi, 0x1
0000000000003acd         shl        rsi, cl
0000000000003ad0         mov        rcx, rsi
0000000000003ad3         movabs     rsi, 0x20000002b
0000000000003add         test       rcx, rsi
0000000000003ae0         je         loc_3ab0

0000000000003ae2         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ae7         mov        r13, qword [rsp+0xe8+var_78]
0000000000003aec         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003af1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3af9:
0000000000003af9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36b0+1227, sub_36b0+1948, sub_36b0+2585, sub_36b0+2734
0000000000003afe         je         loc_3b10

0000000000003b00         test       al, al
0000000000003b02         mov        eax, 0x4
0000000000003b07         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003b0c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3b10:
0000000000003b10         sub        rsp, 0x8                                    ; CODE XREF=sub_36b0+1102
0000000000003b14         mov        rcx, rbp
0000000000003b17         mov        rsi, r13
0000000000003b1a         push       qword [rsp+0xf0+var_88]
0000000000003b1e         push       qword [rsp+0xf8+var_80]
0000000000003b22         mov        rdi, r14
0000000000003b25         push       0x0
0000000000003b27         mov        r9d, dword [rsp+0x108+var_70]
0000000000003b2f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003b34         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003b39         and        r9d, 0xfffffffd
0000000000003b3d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b42         add        rsp, 0x20
0000000000003b46         mov        r15, rax

                     loc_3b49:
0000000000003b49         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_36b0+2549, sub_36b0+2560, sub_36b0+2711
0000000000003b51         xor        rbx, qword [fs:0x28]
0000000000003b5a         mov        rax, r15
0000000000003b5d         jne        loc_4163

0000000000003b63         add        rsp, 0xb8
0000000000003b6a         pop        rbx
0000000000003b6b         pop        rbp
0000000000003b6c         pop        r12
0000000000003b6e         pop        r13
0000000000003b70         pop        r14
0000000000003b72         pop        r15
0000000000003b74         ret
                        ; endp
0000000000003b75         align      8

                     loc_3b78:
0000000000003b78         mov        rbp, r11                                    ; CODE XREF=sub_3260+194
0000000000003b7b         jmp        loc_3af9

                     loc_3b80:
0000000000003b80         cmp        r13, r15                                    ; CODE XREF=sub_36b0+206, sub_36b0+220
0000000000003b83         jbe        loc_3b8a

0000000000003b85         mov        byte [r14+r15], 0x27

                     loc_3b8a:
0000000000003b8a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+1235
0000000000003b8e         cmp        r13, rax
0000000000003b91         jbe        loc_3b99

0000000000003b93         mov        byte [r14+r15+1], 0x5c

                     loc_3b99:
0000000000003b99         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+1249
0000000000003b9d         cmp        r13, rax
0000000000003ba0         jbe        loc_4192

0000000000003ba6         mov        rdx, r13
0000000000003ba9         mov        byte [r14+r15+2], 0x27
0000000000003baf         mov        r13, qword [rsp+arg_48]
0000000000003bb4         jmp        loc_3792

                     loc_3bb9:
0000000000003bb9         mov        eax, r12d                                   ; CODE XREF=sub_3550+99
0000000000003bbc         mov        ebx, 0x30
0000000000003bc1         xor        r12d, r12d
0000000000003bc4         jmp        sub_3160+105
                        ; endp

                     loc_3bc9:
0000000000003bc9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3550+67
0000000000003bcf         jmp        loc_3599

                     loc_3bd4:
0000000000003bd4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003bd6         jne        loc_3003

0000000000003bdc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3be1:
0000000000003be1         test       r13, r13                                    ; CODE XREF=sub_36b0+2749
0000000000003be4         jne        loc_417a

0000000000003bea         lea        rax, qword [a4096Len+22]                    ; 0xb35b
0000000000003bf1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003bfa         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003bff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c04         xor        r12d, r12d
0000000000003c07         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c0c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c15         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c1a         mov        r15d, 0x1
0000000000003c20         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003c28         jmp        loc_3043
0000000000003c2d         align      16

                     loc_3c30:
0000000000003c30         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003c32         jne        loc_402d

0000000000003c38         test       r13, r13
0000000000003c3b         je         loc_3e66

0000000000003c41         mov        byte [r14], 0x22
0000000000003c45         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c4a         xor        r12d, r12d
0000000000003c4d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c52         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3c5b:
0000000000003c5b         lea        rax, qword [aLibs+27]                       ; 0xa8eb, CODE XREF=sub_36b0+1996
0000000000003c62         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c67         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c6c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c75         mov        r15d, 0x1
0000000000003c7b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c80         jmp        loc_3043

                     loc_3c85:
0000000000003c85         lea        rax, qword [aLibs+27]                       ; case 6, 0xa8eb, CODE XREF=quotearg_buffer_restyled+145
0000000000003c8c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c91         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c96         xor        r12d, r12d
0000000000003c99         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ca2         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003ca7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003cac         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003cb5         xor        r15d, r15d
0000000000003cb8         mov        qword [rsp+0xe8+var_A0], rax
0000000000003cbd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003cc5         jmp        loc_3043

                     loc_3cca:
0000000000003cca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003ccf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cd4         xor        r12d, r12d
0000000000003cd7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ce0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ce5         xor        r15d, r15d
0000000000003ce8         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ced         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003cf6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003cff         jmp        loc_3043

                     loc_3d04:
0000000000003d04         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003d09         je         loc_3d61

0000000000003d0b         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xa8ed
0000000000003d12         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d14         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d19         call       j_dcgettext                                 ; dcgettext
0000000000003d1e         mov        rcx, rax
0000000000003d21         mov        qword [rsp+0xe8+var_80], rax
0000000000003d26         lea        rax, qword [aLibs+29]                       ; 0xa8ed
0000000000003d2d         cmp        rcx, rax
0000000000003d30         je         loc_40ce

                     loc_3d36:
0000000000003d36         lea        rsi, qword [a4096Len+22]                    ; argument "msgid" for method j_dcgettext, 0xb35b, CODE XREF=sub_36b0+2607
0000000000003d3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d44         call       j_dcgettext                                 ; dcgettext
0000000000003d49         mov        rcx, rax
0000000000003d4c         mov        qword [rsp+0xe8+var_88], rax
0000000000003d51         lea        rax, qword [a4096Len+22]                    ; 0xb35b
0000000000003d58         cmp        rcx, rax
0000000000003d5b         je         loc_40e4

                     loc_3d61:
0000000000003d61         xor        r15d, r15d                                  ; CODE XREF=sub_36b0+1625, sub_36b0+2629
0000000000003d64         test       ebx, ebx
0000000000003d66         je         loc_3f2d

                     loc_3d6c:
0000000000003d6c         test       ebx, ebx                                    ; CODE XREF=sub_36b0+2183, sub_36b0+2214
0000000000003d6e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003d73         setne      byte [rsp+0xe8+var_D9]
0000000000003d78         xor        r12d, r12d
0000000000003d7b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003d7e         call       j_strlen                                    ; strlen
0000000000003d83         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003d88         mov        qword [rsp+0xe8+var_D0], rax
0000000000003d8d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d92         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003da0         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003da5         jmp        loc_3043

                     loc_3daa:
0000000000003daa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003daf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003db4         xor        r12d, r12d
0000000000003db7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dc0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003dc5         xor        r15d, r15d
0000000000003dc8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003dcd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003dd6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003ddf         jmp        loc_3043

                     loc_3de4:
0000000000003de4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003de9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dee         xor        r12d, r12d
0000000000003df1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dfa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003dff         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e04         jmp        loc_3023

                     loc_3e09:
0000000000003e09         cmp        r13, r15                                    ; CODE XREF=sub_3550+133
0000000000003e0c         jbe        loc_3e13

0000000000003e0e         mov        byte [r14+r15], 0x30

                     loc_3e13:
0000000000003e13         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_36b0+1884
0000000000003e17         cmp        r13, rax
0000000000003e1a         jbe        loc_3e22

0000000000003e1c         mov        byte [r14+rcx+2], 0x30

                     loc_3e22:
0000000000003e22         mov        eax, r12d                                   ; CODE XREF=sub_36b0+1898
0000000000003e25         lea        r15, qword [rcx+3]
0000000000003e29         xor        r12d, r12d
0000000000003e2c         mov        ebx, 0x30
0000000000003e31         jmp        sub_3160+56
                        ; endp
0000000000003e36         align      64

                     loc_3e40:
0000000000003e40         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_36b0+731
0000000000003e45         mov        rbp, r11
0000000000003e48         mov        byte [rsp+0xe8+var_DB], bl
0000000000003e4c         jmp        loc_3af9

                     loc_3e51:
0000000000003e51         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3450+105
0000000000003e56         xor        r12d, r12d
0000000000003e59         jmp        loc_3960

                     loc_3e5e:
0000000000003e5e         xor        r10d, r10d                                  ; CODE XREF=sub_36b0+944
0000000000003e61         jmp        loc_3a1d

                     loc_3e66:
0000000000003e66         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_36b0+1419
0000000000003e6f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e74         xor        r12d, r12d
0000000000003e77         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e7c         jmp        loc_3c5b

                     loc_3e81:
0000000000003e81         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_36b0+561
0000000000003e86         mov        rsi, r14
0000000000003e89         mov        rcx, r13
0000000000003e8c         mov        rax, rbx
0000000000003e8f         mov        rdi, rbx
0000000000003e92         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003e98         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003e9d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003ea5         cmp        rsi, r11
0000000000003ea8         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003eae         mov        r15, qword [rsp+0xe8+var_68]
0000000000003eb6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ebb         mov        r13, qword [rsp+0xe8+var_78]
0000000000003ec0         jae        loc_3ee8

0000000000003ec2         cmp        byte [rcx], 0x0
0000000000003ec5         jne        loc_3ed7

0000000000003ec7         jmp        loc_3ee8
0000000000003ec9         align      16

                     loc_3ed0:
0000000000003ed0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_36b0+2099
0000000000003ed5         je         loc_3ee5

                     loc_3ed7:
0000000000003ed7         add        rax, 0x1                                    ; CODE XREF=sub_36b0+2069
0000000000003edb         lea        rdx, qword [rbp+rax]
0000000000003ee0         cmp        r11, rdx
0000000000003ee3         ja         loc_3ed0

                     loc_3ee5:
0000000000003ee5         mov        rdi, rax                                    ; CODE XREF=sub_36b0+2085

                     loc_3ee8:
0000000000003ee8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_36b0+2064, sub_36b0+2071
0000000000003eed         xor        r12d, r12d
0000000000003ef0         jmp        loc_3956

                     loc_3ef5:
0000000000003ef5         mov        rdi, rbx                                    ; CODE XREF=sub_36b0+551
0000000000003ef8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003efe         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003f03         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003f09         mov        r15, qword [rsp+0xe8+var_68]
0000000000003f11         xor        r12d, r12d
0000000000003f14         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003f19         mov        r13, qword [rsp+0xe8+var_78]
0000000000003f1e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003f23         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003f28         jmp        loc_3956

                     loc_3f2d:
0000000000003f2d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_36b0+1718
0000000000003f32         movzx      eax, byte [rdx]
0000000000003f35         test       al, al
0000000000003f37         je         loc_3d6c

0000000000003f3d         nop        dword [rax]

                     loc_3f40:
0000000000003f40         cmp        r13, r15                                    ; CODE XREF=sub_36b0+2212
0000000000003f43         jbe        loc_3f49

0000000000003f45         mov        byte [r14+r15], al

                     loc_3f49:
0000000000003f49         add        r15, 0x1                                    ; CODE XREF=sub_36b0+2195
0000000000003f4d         movzx      eax, byte [rdx+r15]
0000000000003f52         test       al, al
0000000000003f54         jne        loc_3f40

0000000000003f56         jmp        loc_3d6c

                     loc_3f5b:
0000000000003f5b         mov        eax, edx                                    ; CODE XREF=sub_36b0+682
0000000000003f5d         jmp        loc_34b7

                     loc_3f62:
0000000000003f62         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_36b0+290
0000000000003f66         cmp        bl, 0x3e
0000000000003f69         ja         loc_37e0

0000000000003f6f         movabs     rax, 0x7000a38200000000
0000000000003f79         bt         rax, rbx
0000000000003f7d         jae        loc_37e0

0000000000003f83         cmp        byte [rsp+arg_7], 0x0
0000000000003f88         jne        loc_4172

0000000000003f8e         cmp        r13, r15
0000000000003f91         jbe        loc_3f98

0000000000003f93         mov        byte [r14+r15], 0x3f

                     loc_3f98:
0000000000003f98         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+2273
0000000000003f9c         cmp        r13, rax
0000000000003f9f         jbe        loc_3fa7

0000000000003fa1         mov        byte [r14+r15+1], 0x22

                     loc_3fa7:
0000000000003fa7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+2287
0000000000003fab         cmp        r13, rax
0000000000003fae         jbe        loc_3fb6

0000000000003fb0         mov        byte [r14+r15+2], 0x22

                     loc_3fb6:
0000000000003fb6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_36b0+2302
0000000000003fba         cmp        r13, rax
0000000000003fbd         jbe        loc_3fc5

0000000000003fbf         mov        byte [r14+r15+3], 0x3f

                     loc_3fc5:
0000000000003fc5         add        r15, 0x4                                    ; CODE XREF=sub_36b0+2317
0000000000003fc9         xor        edx, edx
0000000000003fcb         xor        r12d, r12d
0000000000003fce         xor        eax, eax
0000000000003fd0         mov        rbp, rcx
0000000000003fd3         jmp        sub_3160+56
                        ; endp

                     loc_3fd8:
0000000000003fd8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003fda         je         loc_4168

0000000000003fe0         lea        rax, qword [a4096Len+22]                    ; 0xb35b
0000000000003fe7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003fec         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ff1         xor        r12d, r12d
0000000000003ff4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ffd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004002         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004007         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004010         xor        r15d, r15d
0000000000004013         mov        qword [rsp+0xe8+var_A0], rax
0000000000004018         jmp        loc_3043
000000000000401d         align      32

                     loc_4020:
0000000000004020         mov        rbp, r11                                    ; CODE XREF=sub_36b0+333
0000000000004023         movzx      eax, byte [rsp+arg_7]
0000000000004028         jmp        sub_36b0+1097
                        ; endp

                     loc_402d:
000000000000402d         lea        rax, qword [aLibs+27]                       ; 0xa8eb, CODE XREF=sub_36b0+1410
0000000000004034         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004039         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000403e         xor        r12d, r12d
0000000000004041         mov        qword [rsp+0xe8+var_98], 0x0
000000000000404a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000404f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004054         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000405d         xor        r15d, r15d
0000000000004060         mov        qword [rsp+0xe8+var_A0], rax
0000000000004065         jmp        loc_3043

                     loc_406a:
000000000000406a         mov        eax, edx                                    ; CODE XREF=sub_36b0+87

                     loc_406c:
000000000000406c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_36b0+76, sub_36b0+2721
0000000000004071         test       rbx, rbx
0000000000004074         je         loc_40a2

0000000000004076         test       al, al
0000000000004078         je         loc_40a2

000000000000407a         movzx      ecx, byte [rbx]
000000000000407d         mov        rax, rbx
0000000000004080         test       cl, cl
0000000000004082         je         loc_40a2

0000000000004084         mov        rdx, r15
0000000000004087         sub        rax, r15

                     loc_408a:
000000000000408a         cmp        r13, rdx                                    ; CODE XREF=sub_36b0+2541
000000000000408d         jbe        loc_4093

000000000000408f         mov        byte [r14+rdx], cl

                     loc_4093:
0000000000004093         add        rdx, 0x1                                    ; CODE XREF=sub_36b0+2525
0000000000004097         movzx      ecx, byte [rax+rdx]
000000000000409b         test       cl, cl
000000000000409d         jne        loc_408a

000000000000409f         mov        r15, rdx

                     loc_40a2:
00000000000040a2         cmp        r13, r15                                    ; CODE XREF=sub_36b0+2500, sub_36b0+2504, sub_36b0+2514
00000000000040a5         jbe        loc_3b49

00000000000040ab         mov        byte [r14+r15], 0x0
00000000000040b0         jmp        loc_3b49

                     loc_40b5:
00000000000040b5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000040ba         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000040bf         mov        rbp, r11
00000000000040c2         sete       al
00000000000040c5         mov        byte [rsp+0xe8+var_DB], bl
00000000000040c9         jmp        loc_3af9

                     loc_40ce:
00000000000040ce         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36b0+1664
00000000000040d2         mov        rdi, rcx
00000000000040d5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000040da         mov        qword [rsp+0xe8+var_80], rax
00000000000040df         jmp        loc_3d36

                     loc_40e4:
00000000000040e4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36b0+1707
00000000000040e8         mov        rdi, rcx
00000000000040eb         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000040f0         mov        qword [rsp+0xe8+var_88], rax
00000000000040f5         jmp        loc_3d61

                     loc_40fa:
00000000000040fa         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3550+16
00000000000040ff         mov        rbp, r11
0000000000004102         mov        eax, edx
0000000000004104         mov        byte [rsp+arg_5], bl
0000000000004108         jmp        sub_36b0+1097
                        ; endp

                     loc_410d:
000000000000410d         sub        rsp, 0x8                                    ; CODE XREF=sub_36b0+98
0000000000004111         mov        r8d, 0x5
0000000000004117         mov        rcx, r11
000000000000411a         push       qword [rsp+0xf0+var_88]
000000000000411e         push       qword [rsp+0xf8+var_80]
0000000000004122         mov        rdi, r14
0000000000004125         push       qword [rsp+0x100+var_C8]
0000000000004129         mov        r9d, dword [rsp+0x108+var_70]
0000000000004131         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004136         mov        rsi, qword [rsp+0x108+var_98]
000000000000413b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004140         add        rsp, 0x20
0000000000004144         mov        r15, rax
0000000000004147         jmp        loc_3b49

                     loc_414c:
000000000000414c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_36b0+121
0000000000004151         jmp        loc_406c

                     loc_4156:
0000000000004156         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36b0+63
000000000000415e         jmp        loc_3af9

                     loc_4163:
0000000000004163         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_36b0+1197
                        ; endp

                     loc_4168:
0000000000004168         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36b0+2346
000000000000416d         jmp        loc_3be1

                     loc_4172:
0000000000004172         mov        rbp, r11                                    ; CODE XREF=sub_36b0+2264
0000000000004175         jmp        sub_36b0+1120
                        ; endp

                     loc_417a:
000000000000417a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_36b0+1332
000000000000417f         xor        eax, eax
0000000000004181         xor        r12d, r12d
0000000000004184         mov        qword [rsp+0xe8+var_98], 0x0
000000000000418d         jmp        loc_3734

                     loc_4192:
0000000000004192         mov        rdx, r13                                    ; CODE XREF=sub_36b0+1264
0000000000004195         mov        r13, qword [rsp+arg_48]
000000000000419a         jmp        loc_3792

                     loc_419f:
000000000000419f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000041a4         align      16                                          ; End of unwind block (FDE at 0xba68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000041b0         push       r15                                         ; Begin of unwind block (FDE at 0xbae0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000041b2         push       r14
00000000000041b4         movsxd     r15, edi
00000000000041b7         push       r13
00000000000041b9         push       r12
00000000000041bb         mov        r14, rdx
00000000000041be         push       rbp
00000000000041bf         push       rbx
00000000000041c0         mov        rbp, rcx
00000000000041c3         sub        rsp, 0x28
00000000000041c7         mov        qword [rsp+0x58+var_50], rsi
00000000000041cc         call       j___errno_location                          ; __errno_location
00000000000041d1         mov        r13, rax
00000000000041d4         mov        eax, dword [rax]
00000000000041d6         test       r15d, r15d
00000000000041d9         mov        rbx, qword [slotvec]                        ; slotvec
00000000000041e0         mov        dword [rsp+0x58+var_40], eax
00000000000041e4         js         loc_4351

00000000000041ea         cmp        dword [nslots], r15d                        ; nslots
00000000000041f1         jg         loc_4255

00000000000041f3         cmp        r15d, 0x7fffffff
00000000000041fa         je         loc_4356

0000000000004200         lea        r12d, dword [r15+1]
0000000000004204         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000420b         movsxd     rsi, r12d
000000000000420e         shl        rsi, 0x4
0000000000004212         cmp        rbx, rax
0000000000004215         je         loc_4330

000000000000421b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000421e         call       xrealloc                                    ; xrealloc
0000000000004223         mov        rbx, rax
0000000000004226         mov        qword [slotvec], rax                        ; slotvec

                     loc_422d:
000000000000422d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004234         mov        edx, r12d
0000000000004237         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004239         sub        edx, edi
000000000000423b         shl        rdi, 0x4
000000000000423f         movsxd     rdx, edx
0000000000004242         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004245         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004249         call       j_memset                                    ; memset
000000000000424e         mov        dword [nslots], r12d                        ; nslots

                     loc_4255:
0000000000004255         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004258         shl        r15, 0x4
000000000000425c         sub        rsp, 0x8
0000000000004260         add        rbx, r15
0000000000004263         lea        r15, qword [rbp+8]
0000000000004267         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000426b         mov        r11, qword [rbx]
000000000000426e         mov        r12, qword [rbx+8]
0000000000004272         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004275         or         eax, 0x1
0000000000004278         mov        dword [rsp+0x60+var_3C], eax
000000000000427c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000427f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004282         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004285         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004287         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000428a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000428f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004292         mov        qword [rsp+0x78+var_48], r11
0000000000004297         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000429c         add        rsp, 0x20
00000000000042a0         mov        r11, qword [rsp+0x58+var_48]
00000000000042a5         cmp        r11, rax
00000000000042a8         ja         loc_4311

00000000000042aa         lea        rsi, qword [rax+1]
00000000000042ae         lea        rax, qword [slot0]                          ; slot0
00000000000042b5         cmp        r12, rax
00000000000042b8         mov        qword [rbx], rsi
00000000000042bb         je         loc_42cf

00000000000042bd         mov        rdi, r12
00000000000042c0         mov        qword [rsp+0x58+var_48], rsi
00000000000042c5         call       sub_1c90                                    ; sub_1c90
00000000000042ca         mov        rsi, qword [rsp+0x58+var_48]

                     loc_42cf:
00000000000042cf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000042d2         mov        qword [rsp+0x58+var_48], rsi
00000000000042d7         call       xmalloc                                     ; xmalloc
00000000000042dc         sub        rsp, 0x8
00000000000042e0         mov        qword [rbx+8], rax
00000000000042e4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000042e8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000042eb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000042ee         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000042f1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000042f3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000042f8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000042fb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004300         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004305         mov        r12, rax
0000000000004308         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000430d         add        rsp, 0x20

                     loc_4311:
0000000000004311         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004315         mov        dword [r13], eax
0000000000004319         add        rsp, 0x28
000000000000431d         mov        rax, r12
0000000000004320         pop        rbx
0000000000004321         pop        rbp
0000000000004322         pop        r12
0000000000004324         pop        r13
0000000000004326         pop        r14
0000000000004328         pop        r15
000000000000432a         ret
                        ; endp
000000000000432b         align      16

                     loc_4330:
0000000000004330         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004332         call       xrealloc                                    ; xrealloc
0000000000004337         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000433f         mov        rbx, rax
0000000000004342         mov        qword [slotvec], rax                        ; slotvec
0000000000004349         movups     xmmword [rax], xmm0
000000000000434c         jmp        loc_422d

                     loc_4351:
0000000000004351         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4356:
0000000000004356         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_435b:
000000000000435b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xbae0)
                     clone_quoting_options:
0000000000004360         push       r12                                         ; Begin of unwind block (FDE at 0xbb4c)
0000000000004362         push       rbp
0000000000004363         push       rbx
0000000000004364         mov        rbx, rdi
0000000000004367         call       j___errno_location                          ; __errno_location
000000000000436c         mov        r12d, dword [rax]
000000000000436f         mov        rbp, rax
0000000000004372         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004379         test       rbx, rbx
000000000000437c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004381         cmove      rbx, rax
0000000000004385         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004388         call       xmemdup                                     ; xmemdup
000000000000438d         mov        dword [rbp], r12d
0000000000004391         pop        rbx
0000000000004392         pop        rbp
0000000000004393         pop        r12
0000000000004395         ret
                        ; endp
0000000000004396         align      32                                          ; End of unwind block (FDE at 0xbb4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000043a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbb78), default_quoting_options
00000000000043a7         test       rdi, rdi
00000000000043aa         cmove      rdi, rax
00000000000043ae         mov        eax, dword [rdi]
00000000000043b0         ret
                        ; endp
00000000000043b1         align      64                                          ; End of unwind block (FDE at 0xbb78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000043c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbb8c), default_quoting_options
00000000000043c7         test       rdi, rdi
00000000000043ca         cmove      rdi, rax
00000000000043ce         mov        dword [rdi], esi
00000000000043d0         ret
                        ; endp
00000000000043d1         align      32                                          ; End of unwind block (FDE at 0xbb8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000043e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbba0), default_quoting_options
00000000000043e7         test       rdi, rdi
00000000000043ea         mov        ecx, esi
00000000000043ec         cmove      rdi, rax
00000000000043f0         mov        eax, esi
00000000000043f2         and        ecx, 0x1f
00000000000043f5         shr        al, 0x5
00000000000043f8         movzx      eax, al
00000000000043fb         lea        rdi, qword [rdi+rax*4+8]
0000000000004400         mov        esi, dword [rdi]
0000000000004402         mov        eax, esi
0000000000004404         shr        eax, cl
0000000000004406         xor        edx, eax
0000000000004408         and        eax, 0x1
000000000000440b         and        edx, 0x1
000000000000440e         shl        edx, cl
0000000000004410         xor        edx, esi
0000000000004412         mov        dword [rdi], edx
0000000000004414         ret
                        ; endp
0000000000004415         align      32                                          ; End of unwind block (FDE at 0xbba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004420         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbbb4), default_quoting_options
0000000000004427         test       rdi, rdi
000000000000442a         cmove      rdi, rax
000000000000442e         mov        eax, dword [rdi+4]
0000000000004431         mov        dword [rdi+4], esi
0000000000004434         ret
                        ; endp
0000000000004435         align      64                                          ; End of unwind block (FDE at 0xbbb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004440         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbbc8), default_quoting_options
0000000000004447         test       rdi, rdi
000000000000444a         cmove      rdi, rax
000000000000444e         test       rsi, rsi
0000000000004451         mov        dword [rdi], 0xa
0000000000004457         je         loc_4467

0000000000004459         test       rdx, rdx
000000000000445c         je         loc_4467

000000000000445e         mov        qword [rdi+0x28], rsi
0000000000004462         mov        qword [rdi+0x30], rdx
0000000000004466         ret
                        ; endp

                     loc_4467:
0000000000004467         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000446b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004470         push       r15                                         ; End of unwind block (FDE at 0xbbc8), Begin of unwind block (FDE at 0xbbdc)
0000000000004472         push       r14
0000000000004474         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000447b         push       r13
000000000000447d         push       r12
000000000000447f         mov        r13, rdi
0000000000004482         push       rbp
0000000000004483         push       rbx
0000000000004484         mov        rbx, r8
0000000000004487         mov        r14, rsi
000000000000448a         mov        r15, rdx
000000000000448d         sub        rsp, 0x18
0000000000004491         test       r8, r8
0000000000004494         cmove      rbx, rax
0000000000004498         mov        qword [rsp+0x48+var_40], rcx
000000000000449d         call       j___errno_location                          ; __errno_location
00000000000044a2         mov        r12d, dword [rax]
00000000000044a5         mov        rbp, rax
00000000000044a8         lea        rax, qword [rbx+8]
00000000000044ac         sub        rsp, 0x8
00000000000044b0         mov        r9d, dword [rbx+4]
00000000000044b4         push       qword [rbx+0x30]
00000000000044b7         mov        r8d, dword [rbx]
00000000000044ba         push       qword [rbx+0x28]
00000000000044bd         mov        rdx, r15
00000000000044c0         push       rax
00000000000044c1         mov        rcx, qword [rsp+0x68+var_40]
00000000000044c6         mov        rsi, r14
00000000000044c9         mov        rdi, r13
00000000000044cc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044d1         mov        dword [rbp], r12d
00000000000044d5         add        rsp, 0x38
00000000000044d9         pop        rbx
00000000000044da         pop        rbp
00000000000044db         pop        r12
00000000000044dd         pop        r13
00000000000044df         pop        r14
00000000000044e1         pop        r15
00000000000044e3         ret
                        ; endp
00000000000044e4         align      16                                          ; End of unwind block (FDE at 0xbbdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000044f0         push       r15                                         ; Begin of unwind block (FDE at 0xbc30), CODE XREF=quotearg_alloc+5
00000000000044f2         push       r14
00000000000044f4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000044fb         push       r13
00000000000044fd         push       r12
00000000000044ff         mov        r12, rdx
0000000000004502         push       rbp
0000000000004503         push       rbx
0000000000004504         mov        rbx, rcx
0000000000004507         mov        r14, rdi
000000000000450a         mov        r15, rsi
000000000000450d         sub        rsp, 0x38
0000000000004511         test       rcx, rcx
0000000000004514         cmove      rbx, rax
0000000000004518         xor        ebp, ebp
000000000000451a         call       j___errno_location                          ; __errno_location
000000000000451f         test       r12, r12
0000000000004522         mov        r13, rax
0000000000004525         mov        eax, dword [rax]
0000000000004527         sete       bpl
000000000000452b         or         ebp, dword [rbx+4]
000000000000452e         lea        r10, qword [rbx+8]
0000000000004532         sub        rsp, 0x8
0000000000004536         mov        r8d, dword [rbx]
0000000000004539         mov        rcx, r15
000000000000453c         mov        dword [rsp+0x70+var_5C], eax
0000000000004540         push       qword [rbx+0x30]
0000000000004543         mov        rdx, r14
0000000000004546         push       qword [rbx+0x28]
0000000000004549         push       r10
000000000000454b         xor        esi, esi
000000000000454d         mov        r9d, ebp
0000000000004550         xor        edi, edi
0000000000004552         mov        qword [rsp+0x88+var_48], r10
0000000000004557         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000455c         lea        rsi, qword [rax+1]
0000000000004560         mov        qword [rsp+0x88+var_40], rax
0000000000004565         add        rsp, 0x20
0000000000004569         mov        rdi, rsi
000000000000456c         mov        qword [rsp+0x68+var_50], rsi
0000000000004571         call       xmalloc                                     ; xmalloc
0000000000004576         mov        qword [rsp+0x68+var_58], rax
000000000000457b         sub        rsp, 0x8
000000000000457f         push       qword [rbx+0x30]
0000000000004582         push       qword [rbx+0x28]
0000000000004585         mov        r10, qword [rsp+0x80+var_48]
000000000000458a         mov        r9d, ebp
000000000000458d         mov        r8d, dword [rbx]
0000000000004590         mov        rcx, r15
0000000000004593         mov        rdx, r14
0000000000004596         mov        rdi, rax
0000000000004599         push       r10
000000000000459b         mov        rsi, qword [rsp+0x88+var_50]
00000000000045a0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000045a5         mov        eax, dword [rsp+0x88+var_5C]
00000000000045a9         add        rsp, 0x20
00000000000045ad         test       r12, r12
00000000000045b0         mov        dword [r13], eax
00000000000045b4         je         loc_45bf

00000000000045b6         mov        r11, qword [rsp+0x68+var_40]
00000000000045bb         mov        qword [r12], r11

                     loc_45bf:
00000000000045bf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000045c4         add        rsp, 0x38
00000000000045c8         pop        rbx
00000000000045c9         pop        rbp
00000000000045ca         pop        r12
00000000000045cc         pop        r13
00000000000045ce         pop        r14
00000000000045d0         pop        r15
00000000000045d2         ret
                        ; endp
00000000000045d3         align      32                                          ; End of unwind block (FDE at 0xbc30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000045e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbc9c)
00000000000045e3         xor        edx, edx
00000000000045e5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000045ea         align      16                                          ; End of unwind block (FDE at 0xbc9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000045f0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xbcb0), nslots
00000000000045f6         push       r12
00000000000045f8         mov        r12, qword [slotvec]                        ; slotvec
00000000000045ff         push       rbp
0000000000004600         push       rbx
0000000000004601         cmp        eax, 0x1
0000000000004604         jle        loc_4631

0000000000004606         sub        eax, 0x2
0000000000004609         lea        rbx, qword [r12+0x18]
000000000000460e         shl        rax, 0x4
0000000000004612         lea        rbp, qword [r12+rax+0x28]
0000000000004617         nop        word [rax+rax]

                     loc_4620:
0000000000004620         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
0000000000004623         add        rbx, 0x10
0000000000004627         call       sub_1c90                                    ; sub_1c90
000000000000462c         cmp        rbx, rbp
000000000000462f         jne        loc_4620

                     loc_4631:
0000000000004631         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004636         lea        rbx, qword [slot0]                          ; slot0
000000000000463d         cmp        rdi, rbx
0000000000004640         je         loc_4659

0000000000004642         call       sub_1c90                                    ; sub_1c90
0000000000004647         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004652         mov        qword [slotvec0+8], rbx                     ; 0x20e078

                     loc_4659:
0000000000004659         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004660         cmp        r12, rbx
0000000000004663         je         loc_4674

0000000000004665         mov        rdi, r12
0000000000004668         call       sub_1c90                                    ; sub_1c90
000000000000466d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4674:
0000000000004674         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004675         mov        dword [nslots], 0x1                         ; nslots
000000000000467f         pop        rbp
0000000000004680         pop        r12
0000000000004682         ret
                        ; endp
0000000000004683         align      16                                          ; End of unwind block (FDE at 0xbcb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004690         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbcdc), default_quoting_options
0000000000004697         mov        rdx, 0xffffffffffffffff
000000000000469e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046a3         align      16                                          ; End of unwind block (FDE at 0xbcdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000046b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbcf0), default_quoting_options
00000000000046b7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046bc         align      64                                          ; End of unwind block (FDE at 0xbcf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000046c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbd04), default_quoting_options
00000000000046c7         mov        rsi, rdi
00000000000046ca         mov        rdx, 0xffffffffffffffff
00000000000046d1         xor        edi, edi
00000000000046d3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046d8         align      32                                          ; End of unwind block (FDE at 0xbd04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000046e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbd18), default_quoting_options
00000000000046e7         mov        rdx, rsi
00000000000046ea         mov        rsi, rdi
00000000000046ed         xor        edi, edi
00000000000046ef         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046f4         align      256                                         ; End of unwind block (FDE at 0xbd18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004700         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbd2c), CODE XREF=sub_2150+627, sub_2150+1118, sub_2150+1141, sub_2150+1219, sub_2150+1242
0000000000004704         mov        rax, rdx
0000000000004707         mov        rdx, qword [fs:0x28]
0000000000004710         mov        qword [rsp+0x48+var_10], rdx
0000000000004715         xor        edx, edx
0000000000004717         cmp        esi, 0xa
000000000000471a         je         loc_4784

000000000000471c         mov        dword [rsp+0x48+var_48], esi
000000000000471f         mov        rcx, rsp
0000000000004722         mov        rdx, 0xffffffffffffffff
0000000000004729         mov        rsi, rax
000000000000472c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004735         mov        qword [rsp+0x48+var_3C], 0x0
000000000000473e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004747         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004750         mov        qword [rsp+0x48+var_24], 0x0
0000000000004759         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004762         mov        dword [rsp+0x48+var_14], 0x0
000000000000476a         call       quotearg_n_options                          ; quotearg_n_options
000000000000476f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004774         xor        rcx, qword [fs:0x28]
000000000000477d         jne        loc_4789

000000000000477f         add        rsp, 0x48
0000000000004783         ret
                        ; endp

                     loc_4784:
0000000000004784         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4789:
0000000000004789         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000478e         align      16                                          ; End of unwind block (FDE at 0xbd2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004790         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbd48), CODE XREF=quotearg_style_mem+10
0000000000004794         mov        rax, rdx
0000000000004797         mov        rdx, rcx
000000000000479a         mov        rcx, qword [fs:0x28]
00000000000047a3         mov        qword [rsp+0x48+var_10], rcx
00000000000047a8         xor        ecx, ecx
00000000000047aa         cmp        esi, 0xa
00000000000047ad         je         loc_4810

00000000000047af         mov        dword [rsp+0x48+var_48], esi
00000000000047b2         mov        rcx, rsp
00000000000047b5         mov        rsi, rax
00000000000047b8         mov        qword [rsp+0x48+var_44], 0x0
00000000000047c1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000047ca         mov        qword [rsp+0x48+var_34], 0x0
00000000000047d3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000047dc         mov        qword [rsp+0x48+var_24], 0x0
00000000000047e5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000047ee         mov        dword [rsp+0x48+var_14], 0x0
00000000000047f6         call       quotearg_n_options                          ; quotearg_n_options
00000000000047fb         mov        rdx, qword [rsp+0x48+var_10]
0000000000004800         xor        rdx, qword [fs:0x28]
0000000000004809         jne        loc_4815

000000000000480b         add        rsp, 0x48
000000000000480f         ret
                        ; endp

                     loc_4810:
0000000000004810         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4815:
0000000000004815         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000481a         align      32                                          ; End of unwind block (FDE at 0xbd48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004820         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xbd64), CODE XREF=main+774, sub_2150+109, sub_2150+272, sub_2150+336, sub_2150+754, sub_2150+834, sub_2150+988, sub_2150+1044, sub_2150+1321
0000000000004823         mov        esi, edi
0000000000004825         xor        edi, edi
0000000000004827         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000482c         align      16                                          ; End of unwind block (FDE at 0xbd64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004830         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbd78)
0000000000004833         mov        rdx, rsi
0000000000004836         mov        esi, edi
0000000000004838         xor        edi, edi
000000000000483a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000483f         align      64                                          ; End of unwind block (FDE at 0xbd78)

                     quotearg_char_mem:
0000000000004840         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbd8c), CODE XREF=quotearg_char+11
0000000000004844         mov        ecx, edx
0000000000004846         mov        rax, qword [fs:0x28]
000000000000484f         mov        qword [rsp+0x48+var_10], rax
0000000000004854         xor        eax, eax
0000000000004856         mov        rax, qword [qword_20e250]                   ; qword_20e250
000000000000485d         mov        r8, rsp
0000000000004860         and        ecx, 0x1f
0000000000004863         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000486b         mov        qword [rsp+0x48+var_18], rax
0000000000004870         mov        eax, edx
0000000000004872         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004876         shr        al, 0x5
0000000000004879         movzx      eax, al
000000000000487c         lea        r9, qword [r8+rax*4+8]
0000000000004881         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e230
0000000000004889         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000488e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e240
0000000000004896         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000489b         mov        edx, dword [r9]
000000000000489e         mov        eax, edx
00000000000048a0         shr        eax, cl
00000000000048a2         not        eax
00000000000048a4         and        eax, 0x1
00000000000048a7         shl        eax, cl
00000000000048a9         mov        rcx, r8
00000000000048ac         xor        eax, edx
00000000000048ae         mov        rdx, rsi
00000000000048b1         mov        rsi, rdi
00000000000048b4         mov        dword [r9], eax
00000000000048b7         xor        edi, edi
00000000000048b9         call       quotearg_n_options                          ; quotearg_n_options
00000000000048be         mov        rsi, qword [rsp+0x48+var_10]
00000000000048c3         xor        rsi, qword [fs:0x28]
00000000000048cc         jne        loc_48d3

00000000000048ce         add        rsp, 0x48
00000000000048d2         ret
                        ; endp

                     loc_48d3:
00000000000048d3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000048d8         align      32                                          ; End of unwind block (FDE at 0xbd8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000048e0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xbda8)
00000000000048e4         mov        rsi, 0xffffffffffffffff
00000000000048eb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000048f0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xbda8), Begin of unwind block (FDE at 0xbdbc), CODE XREF=close_stdout+101
00000000000048f5         mov        rsi, 0xffffffffffffffff
00000000000048fc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004901         align      16                                          ; End of unwind block (FDE at 0xbdbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004910         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xbdd0)
0000000000004915         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000491a         align      32                                          ; End of unwind block (FDE at 0xbdd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004920         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbde4), CODE XREF=main+1153, sub_2150+228
0000000000004924         mov        rax, rdx
0000000000004927         mov        rdx, qword [fs:0x28]
0000000000004930         mov        qword [rsp+0x48+var_10], rdx
0000000000004935         xor        edx, edx
0000000000004937         cmp        esi, 0xa
000000000000493a         je         loc_49a4

000000000000493c         mov        dword [rsp+0x48+var_48], esi
000000000000493f         mov        rcx, rsp
0000000000004942         mov        rdx, 0xffffffffffffffff
0000000000004949         mov        rsi, rax
000000000000494c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004955         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000495e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004967         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004970         mov        qword [rsp+0x48+var_24], 0x0
0000000000004979         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004982         mov        dword [rsp+0x48+var_14], 0x0
000000000000498a         call       quotearg_n_options                          ; quotearg_n_options
000000000000498f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004994         xor        rcx, qword [fs:0x28]
000000000000499d         jne        loc_49a9

000000000000499f         add        rsp, 0x48
00000000000049a3         ret
                        ; endp

                     loc_49a4:
00000000000049a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_49a9:
00000000000049a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000049ae         align      16                                          ; End of unwind block (FDE at 0xbde4)

                     quotearg_n_custom_mem:
00000000000049b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbe00), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000049b4         mov        r9, rcx
00000000000049b7         mov        rcx, qword [qword_20e250]                   ; qword_20e250
00000000000049be         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000049c6         mov        rax, qword [fs:0x28]
00000000000049cf         mov        qword [rsp+0x48+var_10], rax
00000000000049d4         xor        eax, eax
00000000000049d6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000049da         test       rsi, rsi
00000000000049dd         mov        qword [rsp+0x48+var_18], rcx
00000000000049e2         mov        dword [rsp+0x48+var_48], 0xa
00000000000049e9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e230
00000000000049f1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000049f6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e240
00000000000049fe         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004a03         je         loc_4a37

0000000000004a05         test       rdx, rdx
0000000000004a08         je         loc_4a37

0000000000004a0a         mov        qword [rsp+0x48+var_20], rsi
0000000000004a0f         mov        qword [rsp+0x48+var_18], rdx
0000000000004a14         mov        rcx, rsp
0000000000004a17         mov        rdx, r8
0000000000004a1a         mov        rsi, r9
0000000000004a1d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004a22         mov        rdi, qword [rsp+0x48+var_10]
0000000000004a27         xor        rdi, qword [fs:0x28]
0000000000004a30         jne        loc_4a3c

0000000000004a32         add        rsp, 0x48
0000000000004a36         ret
                        ; endp

                     loc_4a37:
0000000000004a37         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_4a3c:
0000000000004a3c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004a41         align      16                                          ; End of unwind block (FDE at 0xbe00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004a50         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xbe1c)
0000000000004a57         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000004a5c         align      32                                          ; End of unwind block (FDE at 0xbe1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004a60         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbe30)
0000000000004a63         mov        r8, 0xffffffffffffffff
0000000000004a6a         mov        rdx, rsi
0000000000004a6d         mov        rsi, rdi
0000000000004a70         xor        edi, edi
0000000000004a72         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a77         align      128                                         ; End of unwind block (FDE at 0xbe30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004a80         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xbe44)
0000000000004a83         mov        rcx, rdx
0000000000004a86         mov        rdx, rsi
0000000000004a89         mov        rsi, rdi
0000000000004a8c         xor        edi, edi
0000000000004a8e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a93         align      32                                          ; End of unwind block (FDE at 0xbe44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004aa0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbe58), quote_quoting_options
0000000000004aa7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004aac         align      16                                          ; End of unwind block (FDE at 0xbe58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004ab0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbe6c), quote_quoting_options
0000000000004ab7         mov        rdx, rsi
0000000000004aba         mov        rsi, rdi
0000000000004abd         xor        edi, edi
0000000000004abf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ac4         align      16                                          ; End of unwind block (FDE at 0xbe6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004ad0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbe80), quote_quoting_options, CODE XREF=sub_2150+607
0000000000004ad7         mov        rdx, 0xffffffffffffffff
0000000000004ade         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ae3         align      16                                          ; End of unwind block (FDE at 0xbe80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004af0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xbe94), quote_quoting_options, CODE XREF=sub_2150+440, sub_2150+1407, sub_2150+1536
0000000000004af7         mov        rsi, rdi
0000000000004afa         mov        rdx, 0xffffffffffffffff
0000000000004b01         xor        edi, edi
0000000000004b03         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b08         align      16                                          ; End of unwind block (FDE at 0xbe94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     get_root_dev_ino:
0000000000004b10         push       rbx                                         ; Begin of unwind block (FDE at 0xbeac), CODE XREF=sub_2150+948
0000000000004b11         lea        rsi, qword [aProcselffdd+16]                ; argument "__filename" for method j___lxstat, 0xb3d0
0000000000004b18         mov        rbx, rdi
0000000000004b1b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000004b20         sub        rsp, 0xa0
0000000000004b27         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
0000000000004b2a         mov        rax, qword [fs:0x28]
0000000000004b33         mov        qword [rsp+0xa8+var_10], rax
0000000000004b3b         xor        eax, eax
0000000000004b3d         call       j___lxstat                                  ; __lxstat
0000000000004b42         test       eax, eax
0000000000004b44         jne        loc_4b78

0000000000004b46         mov        rax, qword [rsp+0xa8+var_A0]
0000000000004b4b         mov        qword [rbx], rax
0000000000004b4e         mov        rax, qword [rsp+0xa8+var_A8]
0000000000004b52         mov        qword [rbx+8], rax
0000000000004b56         mov        rax, rbx

                     loc_4b59:
0000000000004b59         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=get_root_dev_ino+106
0000000000004b61         xor        rcx, qword [fs:0x28]
0000000000004b6a         jne        loc_4b7c

0000000000004b6c         add        rsp, 0xa0
0000000000004b73         pop        rbx
0000000000004b74         ret
                        ; endp
0000000000004b75         align      8

                     loc_4b78:
0000000000004b78         xor        eax, eax                                    ; CODE XREF=get_root_dev_ino+52
0000000000004b7a         jmp        loc_4b59

                     loc_4b7c:
0000000000004b7c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=get_root_dev_ino+90
                        ; endp
0000000000004b81         align      16                                          ; End of unwind block (FDE at 0xbeac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004b90         push       r15                                         ; Begin of unwind block (FDE at 0xbed4), CODE XREF=version_etc_va+75, version_etc+161
0000000000004b92         push       r14
0000000000004b94         push       r13
0000000000004b96         push       r12
0000000000004b98         mov        r12, r9
0000000000004b9b         push       rbp
0000000000004b9c         push       rbx
0000000000004b9d         mov        rbp, rdi
0000000000004ba0         mov        rbx, r8
0000000000004ba3         sub        rsp, 0x28
0000000000004ba7         test       rsi, rsi
0000000000004baa         je         loc_4cc8

0000000000004bb0         mov        r8, rdx
0000000000004bb3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004bba         mov        r9, rcx
0000000000004bbd         xor        eax, eax
0000000000004bbf         mov        rcx, rsi
0000000000004bc2         mov        esi, 0x1
0000000000004bc7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4bcc:
0000000000004bcc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xadbb, CODE XREF=version_etc_arn+337
0000000000004bd3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bd5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bda         call       j_dcgettext                                 ; dcgettext
0000000000004bdf         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004be6         mov        rcx, rax
0000000000004be9         mov        r8d, 0x7e3
0000000000004bef         mov        esi, 0x1
0000000000004bf4         mov        rdi, rbp
0000000000004bf7         xor        eax, eax
0000000000004bf9         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004bfe         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004c05         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c07         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c0c         call       j_dcgettext                                 ; dcgettext
0000000000004c11         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004c14         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004c17         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004c1c         cmp        r12, 0x9
0000000000004c20         ja         loc_4f60

0000000000004c26         lea        rdx, qword [switch_table_b0a4]              ; switch_table_b0a4
0000000000004c2d         movsxd     rax, dword [rdx+r12*4]
0000000000004c31         add        rax, rdx
0000000000004c34         jmp        rax                                         ; switch statement using table at 0xb0a4, with 10 cases, 0x4c40,0x4cb6,0x4cf0,0x4d48,0x4d88,0x4dd0,0x4e20,0x4e78,0x4ea8,0x4f10
0000000000004c36         align      64

                     loc_4c40:
0000000000004c40         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004c44         mov        rax, qword [rbx+0x10]
0000000000004c48         lea        rsi, qword [aWrittenBySSSns_afb8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004c4f         mov        r8, qword [rbx+8]
0000000000004c53         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c58         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c5a         mov        r13, qword [rbx+0x30]
0000000000004c5e         mov        r12, qword [rbx+0x28]
0000000000004c62         mov        qword [rsp+0x58+var_48], r9
0000000000004c67         mov        r15, qword [rbx+0x20]
0000000000004c6b         mov        r14, qword [rbx+0x18]
0000000000004c6f         mov        qword [rsp+0x58+var_58], rax
0000000000004c73         mov        qword [rsp+0x58+var_50], r8
0000000000004c78         mov        rbx, qword [rbx]
0000000000004c7b         call       j_dcgettext                                 ; dcgettext
0000000000004c80         sub        rsp, 0x8

                     loc_4c84:
0000000000004c84         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004c89         mov        rdx, rax
0000000000004c8c         mov        rcx, rbx
0000000000004c8f         mov        esi, 0x1
0000000000004c94         mov        rdi, rbp
0000000000004c97         xor        eax, eax
0000000000004c99         push       r9
0000000000004c9b         push       r13
0000000000004c9d         push       r12
0000000000004c9f         push       r15
0000000000004ca1         push       r14
0000000000004ca3         mov        r9, qword [rsp+0x88+var_58]
0000000000004ca8         mov        r8, qword [rsp+0x88+var_50]
0000000000004cad         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004cb2         add        rsp, 0x30

                     loc_4cb6:
0000000000004cb6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004cba         pop        rbx
0000000000004cbb         pop        rbp
0000000000004cbc         pop        r12
0000000000004cbe         pop        r13
0000000000004cc0         pop        r14
0000000000004cc2         pop        r15
0000000000004cc4         ret
                        ; endp
0000000000004cc5         align      8

                     loc_4cc8:
0000000000004cc8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004ccb         mov        rcx, rdx
0000000000004cce         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004cd5         mov        esi, 0x1
0000000000004cda         xor        eax, eax
0000000000004cdc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004ce1         jmp        loc_4bcc
0000000000004ce6         align      16

                     loc_4cf0:
0000000000004cf0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004cf4         mov        r9, qword [rbx+0x38]
0000000000004cf8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004cff         mov        rax, qword [rbx+0x10]
0000000000004d03         mov        r8, qword [rbx+8]
0000000000004d07         mov        edx, 0x5
0000000000004d0c         mov        r13, qword [rbx+0x30]
0000000000004d10         mov        r12, qword [rbx+0x28]
0000000000004d14         mov        r15, qword [rbx+0x20]
0000000000004d18         mov        r14, qword [rbx+0x18]
0000000000004d1c         mov        rbx, qword [rbx]
0000000000004d1f         mov        qword [rsp+0x58+var_40], r10
0000000000004d24         mov        qword [rsp+0x58+var_48], r9
0000000000004d29         mov        qword [rsp+0x58+var_58], rax
0000000000004d2d         mov        qword [rsp+0x58+var_50], r8

                     loc_4d32:
0000000000004d32         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004d34         call       j_dcgettext                                 ; dcgettext
0000000000004d39         mov        r10, qword [rsp+0x58+var_40]
0000000000004d3e         push       r10
0000000000004d40         jmp        loc_4c84
0000000000004d45         align      8

                     loc_4d48:
0000000000004d48         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004d4b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004d52         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d57         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d59         call       j_dcgettext                                 ; dcgettext
0000000000004d5e         add        rsp, 0x28
0000000000004d62         mov        rcx, rbx
0000000000004d65         mov        rdi, rbp
0000000000004d68         pop        rbx
0000000000004d69         pop        rbp
0000000000004d6a         pop        r12
0000000000004d6c         pop        r13
0000000000004d6e         pop        r14
0000000000004d70         pop        r15
0000000000004d72         mov        rdx, rax
0000000000004d75         mov        esi, 0x1
0000000000004d7a         xor        eax, eax
0000000000004d7c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d81         align      8

                     loc_4d88:
0000000000004d88         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004d8c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004d93         mov        rbx, qword [rbx]
0000000000004d96         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d9b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d9d         call       j_dcgettext                                 ; dcgettext
0000000000004da2         add        rsp, 0x28
0000000000004da6         mov        r8, r12
0000000000004da9         mov        rcx, rbx
0000000000004dac         mov        rdi, rbp
0000000000004daf         mov        rdx, rax
0000000000004db2         mov        esi, 0x1
0000000000004db7         pop        rbx
0000000000004db8         pop        rbp
0000000000004db9         pop        r12
0000000000004dbb         pop        r13
0000000000004dbd         pop        r14
0000000000004dbf         pop        r15
0000000000004dc1         xor        eax, eax
0000000000004dc3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004dc8         align      16

                     loc_4dd0:
0000000000004dd0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004dd4         mov        r12, qword [rbx+8]
0000000000004dd8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004ddf         mov        rbx, qword [rbx]
0000000000004de2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004de7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004de9         call       j_dcgettext                                 ; dcgettext
0000000000004dee         add        rsp, 0x28
0000000000004df2         mov        r9, r13
0000000000004df5         mov        r8, r12
0000000000004df8         mov        rcx, rbx
0000000000004dfb         mov        rdi, rbp
0000000000004dfe         mov        rdx, rax
0000000000004e01         pop        rbx
0000000000004e02         pop        rbp
0000000000004e03         pop        r12
0000000000004e05         pop        r13
0000000000004e07         pop        r14
0000000000004e09         pop        r15
0000000000004e0b         mov        esi, 0x1
0000000000004e10         xor        eax, eax
0000000000004e12         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004e17         align      32

                     loc_4e20:
0000000000004e20         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004e27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e2c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e2e         mov        r14, qword [rbx+0x18]
0000000000004e32         mov        r13, qword [rbx+0x10]
0000000000004e36         mov        r12, qword [rbx+8]
0000000000004e3a         mov        rbx, qword [rbx]
0000000000004e3d         call       j_dcgettext                                 ; dcgettext
0000000000004e42         sub        rsp, 0x8

                     loc_4e46:
0000000000004e46         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004e48         mov        rdx, rax
0000000000004e4b         mov        r9, r13
0000000000004e4e         mov        r8, r12
0000000000004e51         mov        rcx, rbx
0000000000004e54         mov        rdi, rbp
0000000000004e57         mov        esi, 0x1
0000000000004e5c         xor        eax, eax
0000000000004e5e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004e63         pop        rax
0000000000004e64         pop        rdx
0000000000004e65         add        rsp, 0x28
0000000000004e69         pop        rbx
0000000000004e6a         pop        rbp
0000000000004e6b         pop        r12
0000000000004e6d         pop        r13
0000000000004e6f         pop        r14
0000000000004e71         pop        r15
0000000000004e73         ret
                        ; endp
0000000000004e74         align      8

                     loc_4e78:
0000000000004e78         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004e7c         lea        rsi, qword [aWrittenBySSSns_af38]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004e83         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e8a         mov        r14, qword [rbx+0x18]
0000000000004e8e         mov        r13, qword [rbx+0x10]
0000000000004e92         mov        r12, qword [rbx+8]
0000000000004e96         mov        rbx, qword [rbx]
0000000000004e99         call       j_dcgettext                                 ; dcgettext
0000000000004e9e         push       r15
0000000000004ea0         jmp        loc_4e46
0000000000004ea2         align      8

                     loc_4ea8:
0000000000004ea8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004eac         mov        r12, qword [rbx+0x28]
0000000000004eb0         lea        rsi, qword [aWrittenBySSSns_af60]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004eb7         mov        r15, qword [rbx+0x20]
0000000000004ebb         mov        r14, qword [rbx+0x18]
0000000000004ebf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ec4         mov        r13, qword [rbx+0x10]
0000000000004ec8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eca         mov        rbx, qword [rbx]
0000000000004ecd         mov        qword [rsp+0x58+var_58], r8
0000000000004ed1         call       j_dcgettext                                 ; dcgettext
0000000000004ed6         sub        rsp, 0x8
0000000000004eda         mov        r9, r13
0000000000004edd         push       r12
0000000000004edf         push       r15
0000000000004ee1         push       r14

                     loc_4ee3:
0000000000004ee3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004ee8         mov        rcx, rbx
0000000000004eeb         mov        rdx, rax
0000000000004eee         mov        rdi, rbp
0000000000004ef1         mov        esi, 0x1
0000000000004ef6         xor        eax, eax
0000000000004ef8         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004efd         add        rsp, 0x20
0000000000004f01         add        rsp, 0x28
0000000000004f05         pop        rbx
0000000000004f06         pop        rbp
0000000000004f07         pop        r12
0000000000004f09         pop        r13
0000000000004f0b         pop        r14
0000000000004f0d         pop        r15
0000000000004f0f         ret
                        ; endp

                     loc_4f10:
0000000000004f10         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004f14         mov        r13, qword [rbx+0x30]
0000000000004f18         lea        rsi, qword [aWrittenBySSSns_af88]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004f1f         mov        r12, qword [rbx+0x28]
0000000000004f23         mov        r15, qword [rbx+0x20]
0000000000004f27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f2c         mov        r14, qword [rbx+0x18]
0000000000004f30         mov        r8, qword [rbx+8]
0000000000004f34         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f36         mov        qword [rsp+0x58+var_50], r9
0000000000004f3b         mov        rbx, qword [rbx]
0000000000004f3e         mov        qword [rsp+0x58+var_58], r8
0000000000004f42         call       j_dcgettext                                 ; dcgettext
0000000000004f47         push       r13
0000000000004f49         push       r12
0000000000004f4b         push       r15
0000000000004f4d         push       r14
0000000000004f4f         mov        r9, qword [rsp+0x78+var_50]
0000000000004f54         jmp        loc_4ee3
0000000000004f56         align      32

                     loc_4f60:
0000000000004f60         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004f64         mov        r9, qword [rbx+0x38]
0000000000004f68         mov        edx, 0x5
0000000000004f6d         mov        rax, qword [rbx+0x10]
0000000000004f71         mov        r8, qword [rbx+8]
0000000000004f75         lea        rsi, qword [aWrittenBySSSns_b020]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004f7c         mov        r13, qword [rbx+0x30]
0000000000004f80         mov        r12, qword [rbx+0x28]
0000000000004f84         mov        r15, qword [rbx+0x20]
0000000000004f88         mov        r14, qword [rbx+0x18]
0000000000004f8c         mov        qword [rsp+0x58+var_40], r10
0000000000004f91         mov        qword [rsp+0x58+var_48], r9
0000000000004f96         mov        qword [rsp+0x58+var_58], rax
0000000000004f9a         mov        qword [rsp+0x58+var_50], r8
0000000000004f9f         mov        rbx, qword [rbx]
0000000000004fa2         jmp        loc_4d32
0000000000004fa7         align      16                                          ; End of unwind block (FDE at 0xbed4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004fb0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xbfe8)
0000000000004fb3         cmp        qword [r8], 0x0
0000000000004fb7         je         j_version_etc_arn                           ; version_etc_arn

0000000000004fb9         nop        dword [rax]

                     loc_4fc0:
0000000000004fc0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004fc4         cmp        qword [r8+r9*8], 0x0
0000000000004fc9         jne        loc_4fc0

                     j_version_etc_arn:        // version_etc_arn
0000000000004fcb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004fd0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xbfe8), Begin of unwind block (FDE at 0xbffc)
0000000000004fd4         mov        r10, r8
0000000000004fd7         xor        r9d, r9d
0000000000004fda         mov        rax, qword [fs:0x28]
0000000000004fe3         mov        qword [rsp+0x68+var_10], rax
0000000000004fe8         xor        eax, eax
0000000000004fea         mov        r8, rsp
0000000000004fed         nop        dword [rax]

                     loc_4ff0:
0000000000004ff0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004ff3         cmp        eax, 0x2f
0000000000004ff6         ja         loc_503a

0000000000004ff8         mov        r11d, eax
0000000000004ffb         add        r11, qword [r10+0x10]
0000000000004fff         add        eax, 0x8
0000000000005002         mov        dword [r10], eax

                     loc_5005:
0000000000005005         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005008         test       rax, rax
000000000000500b         mov        qword [r8+r9*8], rax
000000000000500f         je         loc_501b

0000000000005011         add        r9, 0x1
0000000000005015         cmp        r9, 0xa
0000000000005019         jne        loc_4ff0

                     loc_501b:
000000000000501b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005020         mov        rax, qword [rsp+0x68+var_10]
0000000000005025         xor        rax, qword [fs:0x28]
000000000000502e         jne        loc_5035

0000000000005030         add        rsp, 0x68
0000000000005034         ret
                        ; endp

                     loc_5035:
0000000000005035         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_503a:
000000000000503a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000503e         lea        rax, qword [r11+8]
0000000000005042         mov        qword [r10+8], rax
0000000000005046         jmp        loc_5005
0000000000005048         align      16                                          ; End of unwind block (FDE at 0xbffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005050         push       rbp                                         ; Begin of unwind block (FDE at 0xc018), CODE XREF=main+403
0000000000005051         push       rbx
0000000000005052         mov        r10d, 0x20
0000000000005058         xor        r11d, r11d
000000000000505b         sub        rsp, 0xb8
0000000000005062         mov        rax, qword [fs:0x28]
000000000000506b         mov        qword [rsp+0xc8+var_50], rax
0000000000005070         xor        eax, eax
0000000000005072         lea        rax, qword [rsp+0xc8+arg_0]
000000000000507a         mov        qword [rsp+0xc8+var_28], r8
0000000000005082         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000508a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000508f         mov        qword [rsp+0xc8+var_20], r9
0000000000005097         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000509f         mov        qword [rsp+0xc8+var_B8], rax
00000000000050a4         lea        rax, qword [rsp+0xc8+var_48]
00000000000050ac         xor        r9d, r9d
00000000000050af         mov        qword [rsp+0xc8+var_B0], rax
00000000000050b4         mov        rbp, rax
00000000000050b7         nop        word [rax+rax]

                     loc_50c0:
00000000000050c0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000050c4         ja         loc_511c

00000000000050c6         mov        eax, r10d
00000000000050c9         mov        r11d, 0x1
00000000000050cf         add        r10d, 0x8
00000000000050d3         add        rax, rbp

                     loc_50d6:
00000000000050d6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000050d9         test       rax, rax
00000000000050dc         mov        qword [r8+r9*8], rax
00000000000050e0         je         loc_50ec

00000000000050e2         add        r9, 0x1
00000000000050e6         cmp        r9, 0xa
00000000000050ea         jne        loc_50c0

                     loc_50ec:
00000000000050ec         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000050ef         jne        loc_5115

                     loc_50f1:
00000000000050f1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000050f6         mov        rax, qword [rsp+0xc8+var_50]
00000000000050fb         xor        rax, qword [fs:0x28]
0000000000005104         jne        loc_5110

0000000000005106         add        rsp, 0xb8
000000000000510d         pop        rbx
000000000000510e         pop        rbp
000000000000510f         ret
                        ; endp

                     loc_5110:
0000000000005110         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5115:
0000000000005115         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000511a         jmp        loc_50f1

                     loc_511c:
000000000000511c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000511f         add        rbx, 0x8
0000000000005123         jmp        loc_50d6
0000000000005125         align      16                                          ; End of unwind block (FDE at 0xc018)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005130         push       rbx                                         ; Begin of unwind block (FDE at 0xc044)
0000000000005131         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005138         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000513d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000513f         call       j_dcgettext                                 ; dcgettext
0000000000005144         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000514b         mov        rsi, rax
000000000000514e         mov        edi, 0x1
0000000000005153         xor        eax, eax
0000000000005155         call       j___printf_chk                              ; __printf_chk
000000000000515a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005161         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005166         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005168         call       j_dcgettext                                 ; dcgettext
000000000000516d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005174         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x9c40
000000000000517b         mov        rsi, rax
000000000000517e         mov        edi, 0x1
0000000000005183         xor        eax, eax
0000000000005185         call       j___printf_chk                              ; __printf_chk
000000000000518a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005191         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005198         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000519a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000519f         call       j_dcgettext                                 ; dcgettext
00000000000051a4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000051a7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000051aa         pop        rbx
00000000000051ab         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000051b0         push       rbx                                         ; End of unwind block (FDE at 0xc044), Begin of unwind block (FDE at 0xc064), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000051b1         mov        rbx, rdi
00000000000051b4         call       j_malloc                                    ; malloc
00000000000051b9         test       rax, rax
00000000000051bc         jne        loc_51c3

00000000000051be         test       rbx, rbx
00000000000051c1         jne        loc_51c5

                     loc_51c3:
00000000000051c3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000051c4         ret
                        ; endp

                     loc_51c5:
00000000000051c5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51ca:
00000000000051ca         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xc064)
                     xnmalloc:
00000000000051d0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc080)
00000000000051d3         mul        rsi
00000000000051d6         mov        rdi, rax
00000000000051d9         seto       al
00000000000051dc         test       rdi, rdi
00000000000051df         js         loc_51eb

00000000000051e1         movzx      eax, al
00000000000051e4         test       rax, rax
00000000000051e7         jne        loc_51eb

00000000000051e9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_51eb:
00000000000051eb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000051ef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51f4:
00000000000051f4         nop                                                    ; End of unwind block (FDE at 0xc080)
00000000000051f6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005200         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xc094)
                        ; endp
0000000000005202         align      16                                          ; End of unwind block (FDE at 0xc094)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005210         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xc0a8), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005213         push       rbx
0000000000005214         mov        rbx, rsi
0000000000005217         jne        loc_521e

0000000000005219         test       rdi, rdi
000000000000521c         jne        loc_5238

                     loc_521e:
000000000000521e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005221         call       j_realloc                                   ; realloc
0000000000005226         test       rax, rax
0000000000005229         jne        loc_5230

000000000000522b         test       rbx, rbx
000000000000522e         jne        loc_5241

                     loc_5230:
0000000000005230         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005231         ret
                        ; endp
0000000000005232         align      8

                     loc_5238:
0000000000005238         call       sub_1c90                                    ; sub_1c90, CODE XREF=xrealloc+12
000000000000523d         xor        eax, eax
000000000000523f         pop        rbx
0000000000005240         ret
                        ; endp

                     loc_5241:
0000000000005241         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5246:
0000000000005246         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xc0a8)
                     xnrealloc:
0000000000005250         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xc0cc)
0000000000005253         mul        rdx
0000000000005256         mov        rsi, rax
0000000000005259         seto       al
000000000000525c         test       rsi, rsi
000000000000525f         js         loc_526b

0000000000005261         movzx      eax, al
0000000000005264         test       rax, rax
0000000000005267         jne        loc_526b

0000000000005269         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_526b:
000000000000526b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000526f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5274:
0000000000005274         nop                                                    ; End of unwind block (FDE at 0xc0cc)
0000000000005276         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005280         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc0e0)
0000000000005283         mov        r9, rdx
0000000000005286         mov        rcx, qword [rsi]
0000000000005289         je         loc_52c0

000000000000528b         xor        edx, edx
000000000000528d         movabs     rax, 0x5555555555555554
0000000000005297         div        r9
000000000000529a         cmp        rax, rcx
000000000000529d         jbe        loc_52db

000000000000529f         mov        rax, rcx
00000000000052a2         shr        rax, 0x1
00000000000052a5         lea        rcx, qword [rax+rcx+1]

                     loc_52aa:
00000000000052aa         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000052ad         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000052b1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000052b4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000052b9         align      64

                     loc_52c0:
00000000000052c0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000052c3         je         loc_52e8

                     loc_52c5:
00000000000052c5         mov        rax, rcx                                    ; CODE XREF=sub_52e4+28
00000000000052c8         mul        r9
00000000000052cb         seto       dl
00000000000052ce         test       rax, rax
00000000000052d1         movzx      edx, dl
00000000000052d4         js         loc_52db

00000000000052d6         test       rdx, rdx
00000000000052d9         je         loc_52aa

                     loc_52db:
00000000000052db         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000052df         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_52e4:
00000000000052e4         nop        dword [rax]
                        ; endp

                     loc_52e8:
00000000000052e8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000052ea         mov        eax, 0x80
00000000000052ef         xor        r8d, r8d
00000000000052f2         div        r9
00000000000052f5         test       rax, rax
00000000000052f8         sete       r8b
00000000000052fc         lea        rcx, qword [r8+rax]
0000000000005300         jmp        loc_52c5
0000000000005302         align      16                                          ; End of unwind block (FDE at 0xc0e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005310         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc0f8)
0000000000005313         mov        rax, qword [rsi]
0000000000005316         je         loc_5340

0000000000005318         movabs     rdx, 0x5555555555555553
0000000000005322         cmp        rax, rdx
0000000000005325         ja         loc_5351

0000000000005327         mov        rdx, rax
000000000000532a         shr        rdx, 0x1
000000000000532d         lea        rax, qword [rdx+rax+1]

                     loc_5332:
0000000000005332         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005335         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005338         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000533d         align      64

                     loc_5340:
0000000000005340         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005343         mov        edx, 0x80
0000000000005348         cmove      rax, rdx
000000000000534c         test       rax, rax
000000000000534f         jns        loc_5332

                     loc_5351:
0000000000005351         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005355         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_535a:
000000000000535a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xc0f8)
                     xzalloc:
0000000000005360         push       rbx                                         ; Begin of unwind block (FDE at 0xc110)
0000000000005361         mov        rbx, rdi
0000000000005364         call       xmalloc                                     ; xmalloc
0000000000005369         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000536c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000536e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005371         pop        rbx
0000000000005372         jmp        j_memset                                    ; memset
                        ; endp
0000000000005377         align      128                                         ; End of unwind block (FDE at 0xc110)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005380         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc12c)
0000000000005383         sub        rsp, 0x8
0000000000005387         mul        rsi
000000000000538a         seto       dl
000000000000538d         test       rax, rax
0000000000005390         js         loc_53a9

0000000000005392         movzx      edx, dl
0000000000005395         test       rdx, rdx
0000000000005398         jne        loc_53a9

000000000000539a         call       j_calloc                                    ; calloc
000000000000539f         test       rax, rax
00000000000053a2         je         loc_53a9

00000000000053a4         add        rsp, 0x8
00000000000053a8         ret
                        ; endp

                     loc_53a9:
00000000000053a9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_53ae:
00000000000053ae         nop                                                    ; End of unwind block (FDE at 0xc12c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000053b0         push       rbp                                         ; Begin of unwind block (FDE at 0xc148), CODE XREF=clone_quoting_options+40
00000000000053b1         push       rbx
00000000000053b2         mov        rbp, rdi
00000000000053b5         mov        rdi, rsi
00000000000053b8         mov        rbx, rsi
00000000000053bb         sub        rsp, 0x8
00000000000053bf         call       xmalloc                                     ; xmalloc
00000000000053c4         add        rsp, 0x8
00000000000053c8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000053cb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000053ce         pop        rbx
00000000000053cf         pop        rbp
00000000000053d0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000053d3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000053d8         align      32                                          ; End of unwind block (FDE at 0xc148)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000053e0         push       rbx                                         ; Begin of unwind block (FDE at 0xc170)
00000000000053e1         mov        rbx, rdi
00000000000053e4         call       j_strlen                                    ; strlen
00000000000053e9         mov        rdi, rbx
00000000000053ec         lea        rsi, qword [rax+1]
00000000000053f0         pop        rbx
00000000000053f1         jmp        xmemdup                                     ; xmemdup
                        ; endp
00000000000053f3         align      1024                                        ; End of unwind block (FDE at 0xc170)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005400         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xc18c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xfts_open+42
0000000000005407         sub        rsp, 0x8
000000000000540b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005410         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005412         call       j_dcgettext                                 ; dcgettext
0000000000005417         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000541d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xa891
0000000000005424         mov        rcx, rax
0000000000005427         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005429         xor        eax, eax
000000000000542b         call       j_error                                     ; error
0000000000005430         call       j_abort                                     ; abort
                        ; endp
0000000000005435         align      64                                          ; End of unwind block (FDE at 0xc18c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xfts_open:
0000000000005440         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc1a4), CODE XREF=main+672
0000000000005444         or         esi, 0x200
000000000000544a         call       rpl_fts_open                                ; rpl_fts_open
000000000000544f         test       rax, rax
0000000000005452         je         loc_5460

0000000000005454         add        rsp, 0x8
0000000000005458         ret
                        ; endp
0000000000005459         align      32

                     loc_5460:
0000000000005460         call       j___errno_location                          ; __errno_location, CODE XREF=xfts_open+18
0000000000005465         cmp        dword [rax], 0x16
0000000000005468         je         loc_5470

000000000000546a         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_546f:
000000000000546f         nop
                        ; endp

                     loc_5470:
0000000000005470         lea        rcx, qword [__PRETTY_FUNCTION__.3434]       ; argument "__function" for method j___assert_fail, "xfts_open", CODE XREF=xfts_open+40
0000000000005477         lea        rsi, qword [aCoreutils831li_b120]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xfts.c"
000000000000547e         lea        rdi, qword [aErrnoEinval]                   ; argument "__assertion" for method j___assert_fail, "errno != EINVAL"
0000000000005485         mov        edx, 0x29                                   ; argument "__line" for method j___assert_fail
000000000000548a         call       j___assert_fail                             ; __assert_fail
                        ; endp
000000000000548f         align      16                                          ; End of unwind block (FDE at 0xc1a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_warning_required:
0000000000005490         mov        edx, dword [rdi+0x48]                       ; Begin of unwind block (FDE at 0xc1c0), CODE XREF=main+1129
0000000000005493         mov        eax, 0x1
0000000000005498         and        edx, 0x11
000000000000549b         cmp        edx, 0x10
000000000000549e         je         loc_54a7

00000000000054a0         xor        eax, eax
00000000000054a2         cmp        edx, 0x11
00000000000054a5         je         loc_54b0

                     loc_54a7:
00000000000054a7         ret                                                    ; CODE XREF=cycle_warning_required+14
                        ; endp
00000000000054a9         align      16

                     loc_54b0:
00000000000054b0         cmp        qword [rsi+0x58], 0x0                       ; CODE XREF=cycle_warning_required+21
00000000000054b5         setne      al
00000000000054b8         ret
                        ; endp
00000000000054b9         align      64                                          ; End of unwind block (FDE at 0xc1c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_compare:
00000000000054c0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xc1d4), DATA XREF=setup_dir.isra.4+19
00000000000054c2         mov        rdx, qword [rsi+8]
00000000000054c6         cmp        qword [rdi+8], rdx
00000000000054ca         je         loc_54d0

00000000000054cc         ret
                        ; endp
00000000000054ce         align      16

                     loc_54d0:
00000000000054d0         mov        rax, qword [rsi]                            ; CODE XREF=AD_compare+10
00000000000054d3         cmp        qword [rdi], rax
00000000000054d6         sete       al
00000000000054d9         ret
                        ; endp
00000000000054da         align      32                                          ; End of unwind block (FDE at 0xc1d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     AD_hash:
00000000000054e0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0xc1e8), DATA XREF=setup_dir.isra.4+26
00000000000054e4         xor        edx, edx
00000000000054e6         div        rsi
00000000000054e9         mov        rax, rdx
00000000000054ec         ret
                        ; endp
00000000000054ed         align      16                                          ; End of unwind block (FDE at 0xc1e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_hash:
00000000000054f0         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0xc1fc), DATA XREF=filesystem_type+110
00000000000054f3         xor        edx, edx
00000000000054f5         div        rsi
00000000000054f8         mov        rax, rdx
00000000000054fb         ret
                        ; endp
00000000000054fc         align      256                                         ; End of unwind block (FDE at 0xc1fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_type_compare:
0000000000005500         mov        rax, qword [rsi]                            ; Begin of unwind block (FDE at 0xc210), DATA XREF=filesystem_type+103
0000000000005503         cmp        qword [rdi], rax
0000000000005506         sete       al
0000000000005509         ret
                        ; endp
000000000000550a         align      16                                          ; End of unwind block (FDE at 0xc210)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_compare_ino:
0000000000005510         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xc224), DATA XREF=fts_build+2040
0000000000005513         mov        rax, qword [rsi]
0000000000005516         mov        rax, qword [rax+0x80]
000000000000551d         cmp        qword [rdx+0x80], rax
0000000000005524         jb         loc_5530

0000000000005526         seta       al
0000000000005529         movzx      eax, al
000000000000552c         ret
                        ; endp
000000000000552d         align      16

                     loc_5530:
0000000000005530         mov        eax, 0xffffffff                             ; CODE XREF=fts_compare_ino+20
0000000000005535         ret
                        ; endp
0000000000005536         align      64                                          ; End of unwind block (FDE at 0xc224)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_stat:
0000000000005540         push       r12                                         ; Begin of unwind block (FDE at 0xc238), CODE XREF=fts_build+1104, fts_build+1543, fts_build+2136, rpl_fts_open+765, rpl_fts_read+440, rpl_fts_read+645, rpl_fts_read+1452, rpl_fts_read+1624
0000000000005542         push       rbp
0000000000005543         mov        rbp, rsi
0000000000005546         push       rbx
0000000000005547         cmp        qword [rbp+0x58], 0x0
000000000000554c         lea        rbx, qword [rsi+0x78]
0000000000005550         mov        r12, rdi
0000000000005553         mov        eax, dword [rdi+0x48]
0000000000005556         mov        rsi, qword [rsi+0x30]
000000000000555a         jne        loc_55c0

000000000000555c         test       al, 0x1
000000000000555e         je         loc_55c0

                     loc_5560:
0000000000005560         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___xstat, CODE XREF=fts_stat+130, fts_stat+134
0000000000005563         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000005568         call       j___xstat                                   ; __xstat
000000000000556d         test       eax, eax
000000000000556f         je         loc_55eb

0000000000005571         call       j___errno_location                          ; __errno_location
0000000000005576         mov        r12, rax
0000000000005579         mov        eax, dword [rax]
000000000000557b         cmp        eax, 0x2
000000000000557e         je         loc_5690

                     loc_5584:
0000000000005584         lea        rdi, qword [rbx+8]                          ; CODE XREF=fts_stat+327, fts_stat+361
0000000000005588         mov        dword [rbp+0x40], eax
000000000000558b         mov        qword [rbp+0x78], 0x0
0000000000005593         mov        qword [rbx+0x88], 0x0
000000000000559e         xor        eax, eax
00000000000055a0         and        rdi, 0xfffffffffffffff8
00000000000055a4         sub        rbx, rdi
00000000000055a7         lea        ecx, dword [rbx+0x90]
00000000000055ad         shr        ecx, 0x3
00000000000055b0         rep stosq  qword [rdi], rax
00000000000055b3         mov        eax, 0xa

                     loc_55b8:
00000000000055b8         pop        rbx                                         ; CODE XREF=fts_stat+278, fts_stat+310, fts_stat+397, fts_stat+413, fts_stat+442
00000000000055b9         pop        rbp
00000000000055ba         pop        r12
00000000000055bc         ret
                        ; endp
00000000000055bd         align      64

                     loc_55c0:
00000000000055c0         test       al, 0x2                                     ; CODE XREF=fts_stat+26, fts_stat+30
00000000000055c2         jne        loc_5560

00000000000055c4         test       dl, dl
00000000000055c6         jne        loc_5560

00000000000055c8         mov        rdx, rsi                                    ; argument "__filename" for method j___fxstatat
00000000000055cb         mov        esi, dword [r12+0x2c]                       ; argument "__fildes" for method j___fxstatat
00000000000055d0         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
00000000000055d6         mov        rcx, rbx                                    ; argument "__stat_buf" for method j___fxstatat
00000000000055d9         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
00000000000055de         call       j___fxstatat                                ; __fxstatat
00000000000055e3         test       eax, eax
00000000000055e5         jne        loc_5680

                     loc_55eb:
00000000000055eb         mov        eax, dword [rbp+0x90]                       ; CODE XREF=fts_stat+47
00000000000055f1         and        eax, 0xf000
00000000000055f6         cmp        eax, 0x4000
00000000000055fb         je         loc_5620

00000000000055fd         cmp        eax, aSymbolicLinksI                        ; "symbolic links instead of any referenced file\\n"
0000000000005602         je         loc_56d8

0000000000005608         cmp        eax, 0x8000
000000000000560d         sete       al
0000000000005610         movzx      eax, al
0000000000005613         pop        rbx
0000000000005614         lea        eax, dword [rax+rax*4+3]
0000000000005618         pop        rbp
0000000000005619         pop        r12
000000000000561b         ret
                        ; endp
000000000000561c         align      32

                     loc_5620:
0000000000005620         mov        rax, qword [rbp+0x88]                       ; CODE XREF=fts_stat+187
0000000000005627         cmp        rax, 0x1
000000000000562b         jbe        loc_56b0

0000000000005631         cmp        qword [rbp+0x58], 0x0
0000000000005636         jle        loc_56b0

0000000000005638         test       byte [r12+0x48], 0x20
000000000000563e         lea        rdx, qword [rax-2]
0000000000005642         cmove      rax, rdx

                     loc_5646:
0000000000005646         cmp        byte [rbp+0x108], 0x2e                      ; CODE XREF=fts_stat+375
000000000000564d         mov        qword [rbp+0x68], rax
0000000000005651         mov        eax, 0x1
0000000000005656         jne        loc_55b8

000000000000565c         cmp        byte [rbp+0x109], 0x0
0000000000005663         jne        loc_56e8

                     loc_5669:
0000000000005669         cmp        qword [rbp+0x58], 0x1                       ; CODE XREF=fts_stat+448
000000000000566e         sbb        eax, eax
0000000000005670         and        eax, 0xfffffffc
0000000000005673         add        eax, 0x5
0000000000005676         jmp        loc_55b8
000000000000567b         align      128

                     loc_5680:
0000000000005680         call       j___errno_location                          ; __errno_location, CODE XREF=fts_stat+165
0000000000005685         mov        eax, dword [rax]
0000000000005687         jmp        loc_5584
000000000000568c         align      16

                     loc_5690:
0000000000005690         mov        rsi, qword [rbp+0x30]                       ; argument "__filename" for method j___lxstat, CODE XREF=fts_stat+62
0000000000005694         mov        rdx, rbx                                    ; argument "__stat_buf" for method j___lxstat
0000000000005697         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000569c         call       j___lxstat                                  ; __lxstat
00000000000056a1         test       eax, eax
00000000000056a3         je         loc_56c0

00000000000056a5         mov        eax, dword [r12]
00000000000056a9         jmp        loc_5584
00000000000056ae         align      16

                     loc_56b0:
00000000000056b0         mov        rax, 0xffffffffffffffff                     ; CODE XREF=fts_stat+235, fts_stat+246
00000000000056b7         jmp        loc_5646
00000000000056b9         align      64

                     loc_56c0:
00000000000056c0         mov        dword [r12], 0x0                            ; CODE XREF=fts_stat+355
00000000000056c8         mov        eax, 0xd
00000000000056cd         jmp        loc_55b8
00000000000056d2         align      8

                     loc_56d8:
00000000000056d8         mov        eax, 0xc                                    ; CODE XREF=fts_stat+194
00000000000056dd         jmp        loc_55b8
00000000000056e2         align      8

                     loc_56e8:
00000000000056e8         mov        edx, dword [rbp+0x108]                      ; CODE XREF=fts_stat+291
00000000000056ee         and        edx, 0xffff00
00000000000056f4         cmp        edx, 0x2e00
00000000000056fa         jne        loc_55b8

0000000000005700         jmp        loc_5669
0000000000005705         align      16                                          ; End of unwind block (FDE at 0xc238)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_sort:
0000000000005710         push       r13                                         ; Begin of unwind block (FDE at 0xc274), CODE XREF=fts_build+1825, fts_build+2062, rpl_fts_open+548
0000000000005712         push       r12
0000000000005714         mov        r12, rdx
0000000000005717         push       rbp
0000000000005718         push       rbx
0000000000005719         mov        rbp, rdi
000000000000571c         mov        rbx, rsi
000000000000571f         sub        rsp, 0x8
0000000000005723         cmp        qword [rbp+0x38], rdx
0000000000005727         mov        r13, qword [rdi+0x40]
000000000000572b         mov        rdi, qword [rdi+0x10]
000000000000572f         jae        loc_5765

0000000000005731         lea        rsi, qword [rdx+0x28]
0000000000005735         movabs     rax, 0x1fffffffffffffff
000000000000573f         cmp        rsi, rax
0000000000005742         mov        qword [rbp+0x38], rsi
0000000000005746         ja         loc_57e4

000000000000574c         shl        rsi, 0x3                                    ; argument "__size" for method j_realloc
0000000000005750         call       j_realloc                                   ; realloc
0000000000005755         test       rax, rax
0000000000005758         mov        rdi, rax
000000000000575b         je         loc_57e0

0000000000005761         mov        qword [rbp+0x10], rax

                     loc_5765:
0000000000005765         test       rbx, rbx                                    ; CODE XREF=fts_sort+31
0000000000005768         je         loc_5781

000000000000576a         mov        rdx, rdi
000000000000576d         nop        dword [rax]

                     loc_5770:
0000000000005770         add        rdx, 0x8                                    ; CODE XREF=fts_sort+111
0000000000005774         mov        qword [rdx-8], rbx
0000000000005778         mov        rbx, qword [rbx+0x10]
000000000000577c         test       rbx, rbx
000000000000577f         jne        loc_5770

                     loc_5781:
0000000000005781         mov        rcx, r13                                    ; argument "__compar" for method j_qsort, CODE XREF=fts_sort+88
0000000000005784         mov        edx, 0x8                                    ; argument "__size" for method j_qsort
0000000000005789         mov        rsi, r12                                    ; argument "__nmemb" for method j_qsort
000000000000578c         call       j_qsort                                     ; qsort
0000000000005791         mov        r8, qword [rbp+0x10]
0000000000005795         mov        rcx, r12
0000000000005798         sub        rcx, 0x1
000000000000579c         mov        rax, qword [r8]
000000000000579f         je         loc_5810

00000000000057a1         mov        rdi, rax
00000000000057a4         mov        rdx, r8
00000000000057a7         jmp        loc_57b3
00000000000057a9         align      16

                     loc_57b0:
00000000000057b0         mov        rdi, qword [rdx]                            ; CODE XREF=fts_sort+179

                     loc_57b3:
00000000000057b3         mov        rsi, qword [rdx+8]                          ; CODE XREF=fts_sort+151
00000000000057b7         add        rdx, 0x8
00000000000057bb         sub        rcx, 0x1
00000000000057bf         mov        qword [rdi+0x10], rsi
00000000000057c3         jne        loc_57b0

00000000000057c5         mov        rdx, qword [r8+r12*8-8]

                     loc_57ca:
00000000000057ca         mov        qword [rdx+0x10], 0x0                       ; CODE XREF=fts_sort+259
00000000000057d2         add        rsp, 0x8
00000000000057d6         pop        rbx
00000000000057d7         pop        rbp
00000000000057d8         pop        r12
00000000000057da         pop        r13
00000000000057dc         ret
                        ; endp
00000000000057dd         align      32

                     loc_57e0:
00000000000057e0         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=fts_sort+75

                     loc_57e4:
00000000000057e4         call       sub_1c90                                    ; sub_1c90, CODE XREF=fts_sort+54
00000000000057e9         mov        qword [rbp+0x10], 0x0
00000000000057f1         mov        qword [rbp+0x38], 0x0
00000000000057f9         add        rsp, 0x8
00000000000057fd         mov        rax, rbx
0000000000005800         pop        rbx
0000000000005801         pop        rbp
0000000000005802         pop        r12
0000000000005804         pop        r13
0000000000005806         ret
                        ; endp
0000000000005807         align      16

                     loc_5810:
0000000000005810         mov        rdx, rax                                    ; CODE XREF=fts_sort+143
0000000000005813         jmp        loc_57ca
0000000000005815         align      32                                          ; End of unwind block (FDE at 0xc274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_alloc:
0000000000005820         push       r13                                         ; Begin of unwind block (FDE at 0xc2c4), CODE XREF=fts_build+556, rpl_fts_open+231, rpl_fts_open+334, rpl_fts_open+568
0000000000005822         push       r12
0000000000005824         mov        r12, rdi
0000000000005827         push       rbp
0000000000005828         lea        rdi, qword [rdx+0x110]
000000000000582f         push       rbx
0000000000005830         mov        r13, rsi
0000000000005833         mov        rbp, rdx
0000000000005836         sub        rsp, 0x8
000000000000583a         and        rdi, 0xfffffffffffffff8                     ; argument "__size" for method j_malloc
000000000000583e         call       j_malloc                                    ; malloc
0000000000005843         test       rax, rax
0000000000005846         mov        rbx, rax
0000000000005849         je         loc_589c

000000000000584b         lea        rdi, qword [rax+0x108]                      ; argument "__dest" for method j_memcpy
0000000000005852         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000005855         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
0000000000005858         call       j_memcpy                                    ; memcpy
000000000000585d         mov        rax, qword [r12+0x20]
0000000000005862         mov        byte [rbx+rbp+0x108], 0x0
000000000000586a         mov        qword [rbx+0x60], rbp
000000000000586e         mov        qword [rbx+0x50], r12
0000000000005872         mov        dword [rbx+0x40], 0x0
0000000000005879         mov        qword [rbx+0x18], 0x0
0000000000005881         mov        qword [rbx+0x38], rax
0000000000005885         mov        dword [rbx+0x72], 0x30000
000000000000588c         mov        qword [rbx+0x20], 0x0
0000000000005894         mov        qword [rbx+0x28], 0x0

                     loc_589c:
000000000000589c         add        rsp, 0x8                                    ; CODE XREF=fts_alloc+41
00000000000058a0         mov        rax, rbx
00000000000058a3         pop        rbx
00000000000058a4         pop        rbp
00000000000058a5         pop        r12
00000000000058a7         pop        r13
00000000000058a9         ret
                        ; endp
00000000000058aa         align      16                                          ; End of unwind block (FDE at 0xc2c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_lfree:
00000000000058b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc2fc), CODE XREF=fts_build+1638, fts_build+1893, fts_build+2281, fts_build+2418, rpl_fts_open+851, rpl_fts_close+92, rpl_fts_read+367, rpl_fts_read+1034, rpl_fts_children+75
00000000000058b3         je         loc_58f0

00000000000058b5         push       rbp
00000000000058b6         push       rbx
00000000000058b7         mov        rbx, rdi
00000000000058ba         sub        rsp, 0x8
00000000000058be         nop

                     loc_58c0:
00000000000058c0         mov        rdi, qword [rbx+0x18]                       ; CODE XREF=fts_lfree+48
00000000000058c4         mov        rbp, qword [rbx+0x10]
00000000000058c8         test       rdi, rdi
00000000000058cb         je         loc_58d2

00000000000058cd         call       j_closedir                                  ; closedir

                     loc_58d2:
00000000000058d2         mov        rdi, rbx                                    ; CODE XREF=fts_lfree+27
00000000000058d5         mov        rbx, rbp
00000000000058d8         call       sub_1c90                                    ; sub_1c90
00000000000058dd         test       rbp, rbp
00000000000058e0         jne        loc_58c0

00000000000058e2         add        rsp, 0x8
00000000000058e6         pop        rbx
00000000000058e7         pop        rbp
00000000000058e8         ret
                        ; endp
00000000000058e9         align      16

                     loc_58f0:
00000000000058f0         ret                                                    ; CODE XREF=fts_lfree+3
                        ; endp
00000000000058f2         align      256                                         ; End of unwind block (FDE at 0xc2fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_ring_clear:
0000000000005900         push       rbx                                         ; Begin of unwind block (FDE at 0xc328), CODE XREF=restore_initial_cwd+44, rpl_fts_close+140
0000000000005901         mov        rbx, rdi
0000000000005904         jmp        loc_591c
0000000000005906         align      16

                     loc_5910:
0000000000005910         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+38
0000000000005913         call       i_ring_pop                                  ; i_ring_pop
0000000000005918         test       eax, eax
000000000000591a         jns        loc_5930

                     loc_591c:
000000000000591c         mov        rdi, rbx                                    ; CODE XREF=fd_ring_clear+4, fd_ring_clear+55
000000000000591f         call       i_ring_empty                                ; i_ring_empty
0000000000005924         test       al, al
0000000000005926         je         loc_5910

0000000000005928         pop        rbx
0000000000005929         ret
                        ; endp
000000000000592a         align      16

                     loc_5930:
0000000000005930         mov        edi, eax                                    ; argument "__fd" for method j_close, CODE XREF=fd_ring_clear+26
0000000000005932         call       j_close                                     ; close
0000000000005937         jmp        loc_591c
0000000000005939         align      64                                          ; End of unwind block (FDE at 0xc328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_A8: int64_t, -168
        ;    var_B8: int64_t, -184


                     filesystem_type:
0000000000005940         push       r13                                         ; Begin of unwind block (FDE at 0xc344), CODE XREF=leaf_optimization+4, fts_build+708
0000000000005942         push       r12
0000000000005944         push       rbp
0000000000005945         push       rbx
0000000000005946         sub        rsp, 0x98
000000000000594d         mov        rbx, qword [rdi+0x50]
0000000000005951         mov        rax, qword [fs:0x28]
000000000000595a         mov        qword [rsp+0xb8+var_30], rax
0000000000005962         xor        eax, eax
0000000000005964         test       byte [rbx+0x49], 0x2
0000000000005968         je         loc_59d2

000000000000596a         mov        r12, qword [rbx+0x50]
000000000000596e         mov        rbp, rdi
0000000000005971         mov        r13d, esi
0000000000005974         test       r12, r12
0000000000005977         je         loc_59a0

                     loc_5979:
0000000000005979         mov        rax, qword [rbp+0x78]                       ; CODE XREF=filesystem_type+139
000000000000597d         mov        rsi, rsp
0000000000005980         mov        rdi, r12
0000000000005983         mov        qword [rsp+0xb8+var_B8], rax
0000000000005987         call       hash_lookup                                 ; hash_lookup
000000000000598c         test       rax, rax
000000000000598f         je         loc_59cd

0000000000005991         mov        rbx, qword [rax+8]
0000000000005995         jmp        loc_59d4
0000000000005997         align      32

                     loc_59a0:
00000000000059a0         mov        r8, qword [qword_20dfc0]                    ; qword_20dfc0, CODE XREF=filesystem_type+55
00000000000059a7         lea        rcx, qword [dev_type_compare]               ; dev_type_compare
00000000000059ae         lea        rdx, qword [dev_type_hash]                  ; dev_type_hash
00000000000059b5         xor        esi, esi
00000000000059b7         mov        edi, 0xd
00000000000059bc         call       hash_initialize                             ; hash_initialize
00000000000059c1         test       rax, rax
00000000000059c4         mov        r12, rax
00000000000059c7         mov        qword [rbx+0x50], rax
00000000000059cb         jne        loc_5979

                     loc_59cd:
00000000000059cd         test       r13d, r13d                                  ; CODE XREF=filesystem_type+79
00000000000059d0         jns        loc_5a00

                     loc_59d2:
00000000000059d2         xor        ebx, ebx                                    ; CODE XREF=filesystem_type+40, filesystem_type+207

                     loc_59d4:
00000000000059d4         mov        rdx, qword [rsp+0xb8+var_30]                ; CODE XREF=filesystem_type+85, filesystem_type+217, filesystem_type+235, filesystem_type+275
00000000000059dc         xor        rdx, qword [fs:0x28]
00000000000059e5         mov        rax, rbx
00000000000059e8         jne        loc_5a62

00000000000059ea         add        rsp, 0x98
00000000000059f1         pop        rbx
00000000000059f2         pop        rbp
00000000000059f3         pop        r12
00000000000059f5         pop        r13
00000000000059f7         ret
                        ; endp
00000000000059f8         align      512

                     loc_5a00:
0000000000005a00         lea        rsi, qword [rsp+0xb8+var_A8]                ; argument "__buf" for method j_fstatfs, CODE XREF=filesystem_type+144
0000000000005a05         mov        edi, r13d                                   ; argument "__fildes" for method j_fstatfs
0000000000005a08         call       j_fstatfs                                   ; fstatfs
0000000000005a0d         test       eax, eax
0000000000005a0f         jne        loc_59d2

0000000000005a11         test       r12, r12
0000000000005a14         mov        rbx, qword [rsp+0xb8+var_A8]
0000000000005a19         je         loc_59d4

0000000000005a1b         mov        edi, 0x10                                   ; argument "__size" for method j_malloc
0000000000005a20         call       j_malloc                                    ; malloc
0000000000005a25         test       rax, rax
0000000000005a28         mov        r13, rax
0000000000005a2b         je         loc_59d4

0000000000005a2d         mov        rax, qword [rbp+0x78]
0000000000005a31         mov        qword [r13+8], rbx
0000000000005a35         mov        rsi, r13
0000000000005a38         mov        rdi, r12
0000000000005a3b         mov        qword [r13], rax
0000000000005a3f         call       hash_insert                                 ; hash_insert
0000000000005a44         test       rax, rax
0000000000005a47         je         loc_5a58

0000000000005a49         cmp        r13, rax
0000000000005a4c         jne        loc_5a67

                     loc_5a4e:
0000000000005a4e         mov        rbx, qword [rsp+0xb8+var_A8]                ; CODE XREF=filesystem_type+288
0000000000005a53         jmp        loc_59d4

                     loc_5a58:
0000000000005a58         mov        rdi, r13                                    ; CODE XREF=filesystem_type+263
0000000000005a5b         call       sub_1c90                                    ; sub_1c90
0000000000005a60         jmp        loc_5a4e

                     loc_5a62:
0000000000005a62         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=filesystem_type+168
                        ; endp

                     loc_5a67:
0000000000005a67         call       j_abort                                     ; abort, CODE XREF=filesystem_type+268
                        ; endp
0000000000005a6c         align      16                                          ; End of unwind block (FDE at 0xc344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     leaf_optimization:
0000000000005a70         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc380), CODE XREF=fts_build+2231, rpl_fts_read+1797
0000000000005a74         call       filesystem_type                             ; filesystem_type
0000000000005a79         cmp        rax, 0x52654973
0000000000005a7f         je         loc_5ad0

0000000000005a81         jle        loc_5ab0

0000000000005a83         cmp        rax, 0x58465342
0000000000005a89         je         loc_5ad0

0000000000005a8b         mov        edx, 0xff534d42
0000000000005a90         cmp        rax, rdx
0000000000005a93         je         loc_5ac5

0000000000005a95         cmp        rax, 0x5346414f
0000000000005a9b         je         loc_5ac5

                     loc_5a9d:
0000000000005a9d         mov        eax, 0x1                                    ; CODE XREF=leaf_optimization+83
0000000000005aa2         add        rsp, 0x8
0000000000005aa6         ret
                        ; endp
0000000000005aa7         align      16

                     loc_5ab0:
0000000000005ab0         cmp        rax, 0x6969                                 ; CODE XREF=leaf_optimization+17
0000000000005ab6         je         loc_5ac5

0000000000005ab8         cmp        rax, 0x9fa0
0000000000005abe         je         loc_5ac5

0000000000005ac0         test       rax, rax
0000000000005ac3         jne        loc_5a9d

                     loc_5ac5:
0000000000005ac5         xor        eax, eax                                    ; CODE XREF=leaf_optimization+35, leaf_optimization+43, leaf_optimization+70, leaf_optimization+78
0000000000005ac7         add        rsp, 0x8
0000000000005acb         ret
                        ; endp
0000000000005acc         align      16

                     loc_5ad0:
0000000000005ad0         mov        eax, 0x2                                    ; CODE XREF=leaf_optimization+15, leaf_optimization+25
0000000000005ad5         add        rsp, 0x8
0000000000005ad9         ret
                        ; endp
0000000000005ada         align      32                                          ; End of unwind block (FDE at 0xc380)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cwd_advance_fd:
0000000000005ae0         push       rbp                                         ; Begin of unwind block (FDE at 0xc3a4), CODE XREF=restore_initial_cwd+74, fts_safe_changedir+542, rpl_fts_read+1279, rpl_fts_children+290
0000000000005ae1         push       rbx
0000000000005ae2         mov        ebp, esi
0000000000005ae4         mov        rbx, rdi
0000000000005ae7         sub        rsp, 0x8
0000000000005aeb         mov        esi, dword [rdi+0x2c]
0000000000005aee         cmp        esi, ebp
0000000000005af0         jne        loc_5af7

0000000000005af2         cmp        esi, 0xffffff9c
0000000000005af5         jne        loc_5b41

                     loc_5af7:
0000000000005af7         test       dl, dl                                      ; CODE XREF=cwd_advance_fd+16
0000000000005af9         jne        loc_5b10

0000000000005afb         test       byte [rbx+0x48], 0x4
0000000000005aff         jne        loc_5b05

0000000000005b01         test       esi, esi
0000000000005b03         jns        loc_5b30

                     loc_5b05:
0000000000005b05         mov        dword [rbx+0x2c], ebp                       ; CODE XREF=cwd_advance_fd+31, cwd_advance_fd+59
0000000000005b08         add        rsp, 0x8
0000000000005b0c         pop        rbx
0000000000005b0d         pop        rbp
0000000000005b0e         ret
                        ; endp
0000000000005b0f         align      16

                     loc_5b10:
0000000000005b10         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=cwd_advance_fd+25
0000000000005b14         call       i_ring_push                                 ; i_ring_push
0000000000005b19         test       eax, eax
0000000000005b1b         js         loc_5b05

0000000000005b1d         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000005b1f         call       j_close                                     ; close
0000000000005b24         mov        dword [rbx+0x2c], ebp
0000000000005b27         add        rsp, 0x8
0000000000005b2b         pop        rbx
0000000000005b2c         pop        rbp
0000000000005b2d         ret
                        ; endp
0000000000005b2e         align      16

                     loc_5b30:
0000000000005b30         mov        edi, esi                                    ; argument "__fd" for method j_close, CODE XREF=cwd_advance_fd+35
0000000000005b32         call       j_close                                     ; close
0000000000005b37         mov        dword [rbx+0x2c], ebp
0000000000005b3a         add        rsp, 0x8
0000000000005b3e         pop        rbx
0000000000005b3f         pop        rbp
0000000000005b40         ret
                        ; endp

                     loc_5b41:
0000000000005b41         call       j_abort                                     ; abort, CODE XREF=cwd_advance_fd+21
                        ; endp
0000000000005b46         align      16                                          ; End of unwind block (FDE at 0xc3a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     restore_initial_cwd:
0000000000005b50         push       rbp                                         ; Begin of unwind block (FDE at 0xc3e8), CODE XREF=fts_build+1854, rpl_fts_read+675, rpl_fts_read+1171
0000000000005b51         push       rbx
0000000000005b52         mov        rbx, rdi
0000000000005b55         sub        rsp, 0x8
0000000000005b59         mov        edx, dword [rdi+0x48]
0000000000005b5c         mov        ebp, edx
0000000000005b5e         and        ebp, 0x4
0000000000005b61         jne        loc_5ba8

0000000000005b63         and        dh, 0x2
0000000000005b66         jne        loc_5b90

0000000000005b68         mov        edi, dword [rdi+0x28]                       ; argument "__fd" for method j_fchdir
0000000000005b6b         xor        ebp, ebp
0000000000005b6d         call       j_fchdir                                    ; fchdir
0000000000005b72         test       eax, eax
0000000000005b74         setne      bpl

                     loc_5b78:
0000000000005b78         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=restore_initial_cwd+79, restore_initial_cwd+90
0000000000005b7c         call       fd_ring_clear                               ; fd_ring_clear
0000000000005b81         add        rsp, 0x8
0000000000005b85         mov        eax, ebp
0000000000005b87         pop        rbx
0000000000005b88         pop        rbp
0000000000005b89         ret
                        ; endp
0000000000005b8a         align      16

                     loc_5b90:
0000000000005b90         mov        edx, 0x1                                    ; CODE XREF=restore_initial_cwd+22
0000000000005b95         mov        esi, 0xffffff9c
0000000000005b9a         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000005b9f         jmp        loc_5b78
0000000000005ba1         align      8

                     loc_5ba8:
0000000000005ba8         xor        ebp, ebp                                    ; CODE XREF=restore_initial_cwd+17
0000000000005baa         jmp        loc_5b78
0000000000005bac         align      16                                          ; End of unwind block (FDE at 0xc3e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fts_palloc.isra.2:
0000000000005bb0         push       rbx                                         ; Begin of unwind block (FDE at 0xc414), CODE XREF=fts_build+611, rpl_fts_open+189
0000000000005bb1         mov        rcx, qword [rsi]
0000000000005bb4         mov        rbx, rdi
0000000000005bb7         mov        rdi, qword [rdi]
0000000000005bba         lea        rax, qword [rcx+rdx+0x100]
0000000000005bc2         cmp        rcx, rax
0000000000005bc5         ja         loc_5be8

0000000000005bc7         mov        qword [rsi], rax
0000000000005bca         mov        rsi, rax                                    ; argument "__size" for method j_realloc
0000000000005bcd         call       j_realloc                                   ; realloc
0000000000005bd2         test       rax, rax
0000000000005bd5         je         loc_5c08

0000000000005bd7         mov        qword [rbx], rax
0000000000005bda         mov        eax, 0x1
0000000000005bdf         pop        rbx
0000000000005be0         ret
                        ; endp
0000000000005be1         align      8

                     loc_5be8:
0000000000005be8         call       sub_1c90                                    ; sub_1c90, CODE XREF=fts_palloc.isra.2+21
0000000000005bed         mov        qword [rbx], 0x0
0000000000005bf4         call       j___errno_location                          ; __errno_location
0000000000005bf9         mov        dword [rax], 0x24
0000000000005bff         xor        eax, eax
0000000000005c01         pop        rbx
0000000000005c02         ret
                        ; endp
0000000000005c03         align      8

                     loc_5c08:
0000000000005c08         mov        rdi, qword [rbx]                            ; CODE XREF=fts_palloc.isra.2+37
0000000000005c0b         call       sub_1c90                                    ; sub_1c90
0000000000005c10         mov        qword [rbx], 0x0
0000000000005c17         xor        eax, eax
0000000000005c19         pop        rbx
0000000000005c1a         ret
                        ; endp
0000000000005c1b         align      32                                          ; End of unwind block (FDE at 0xc414)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setup_dir.isra.4:
0000000000005c20         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xc43c), CODE XREF=rpl_fts_open+613, rpl_fts_read+837
0000000000005c26         push       rbx
0000000000005c27         mov        rbx, rsi
0000000000005c2a         je         loc_5c60

0000000000005c2c         mov        r8, qword [qword_20dfc0]                    ; qword_20dfc0
0000000000005c33         lea        rcx, qword [AD_compare]                     ; AD_compare
0000000000005c3a         lea        rdx, qword [AD_hash]                        ; AD_hash
0000000000005c41         xor        esi, esi
0000000000005c43         mov        edi, 0x1f
0000000000005c48         call       hash_initialize                             ; hash_initialize
0000000000005c4d         test       rax, rax
0000000000005c50         mov        qword [rbx], rax
0000000000005c53         setne      al

                     loc_5c56:
0000000000005c56         pop        rbx                                         ; CODE XREF=setup_dir.isra.4+85
0000000000005c57         ret
                        ; endp
0000000000005c58         align      32

                     loc_5c60:
0000000000005c60         mov        edi, 0x20                                   ; argument "__size" for method j_malloc, CODE XREF=setup_dir.isra.4+10
0000000000005c65         call       j_malloc                                    ; malloc
0000000000005c6a         mov        rdi, rax
0000000000005c6d         mov        qword [rbx], rax
0000000000005c70         xor        eax, eax
0000000000005c72         test       rdi, rdi
0000000000005c75         je         loc_5c56

0000000000005c77         call       cycle_check_init                            ; cycle_check_init
0000000000005c7c         mov        eax, 0x1
0000000000005c81         pop        rbx
0000000000005c82         ret
                        ; endp
0000000000005c83         align      16                                          ; End of unwind block (FDE at 0xc43c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     diropen.isra.6:
0000000000005c90         mov        rax, rdx                                    ; Begin of unwind block (FDE at 0xc45c), CODE XREF=fts_safe_changedir+141, rpl_fts_open+647, rpl_fts_read+1752, rpl_fts_read+1832, rpl_fts_children+202
0000000000005c93         mov        edx, esi
0000000000005c95         shl        edx, 0xd
0000000000005c98         and        edx, 0x20000
0000000000005c9e         or         edx, 0x90900
0000000000005ca4         and        esi, 0x200
0000000000005caa         jne        loc_5cc0

0000000000005cac         mov        rdi, rax
0000000000005caf         mov        esi, edx
0000000000005cb1         xor        eax, eax
0000000000005cb3         jmp        open_safer                                  ; open_safer
0000000000005cb8         align      64

                     loc_5cc0:
0000000000005cc0         mov        rsi, rax                                    ; CODE XREF=diropen.isra.6+26
0000000000005cc3         xor        eax, eax
0000000000005cc5         jmp        openat_safer                                ; openat_safer
0000000000005cca         align      16                                          ; End of unwind block (FDE at 0xc45c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217


                     fts_safe_changedir:
0000000000005cd0         push       r15                                         ; Begin of unwind block (FDE at 0xc470), CODE XREF=fts_build+2169, fts_build+2194, rpl_fts_read+542, rpl_fts_read+1123
0000000000005cd2         push       r14
0000000000005cd4         mov        r14, rsi
0000000000005cd7         push       r13
0000000000005cd9         push       r12
0000000000005cdb         mov        r13, rdi
0000000000005cde         push       rbp
0000000000005cdf         push       rbx
0000000000005ce0         mov        r12d, edx
0000000000005ce3         mov        rbp, rcx
0000000000005ce6         sub        rsp, 0xb8
0000000000005ced         mov        ebx, dword [rdi+0x48]
0000000000005cf0         mov        rax, qword [fs:0x28]
0000000000005cf9         mov        qword [rsp+0xe8+var_40], rax
0000000000005d01         xor        eax, eax
0000000000005d03         mov        r9d, ebx
0000000000005d06         and        r9d, 0x4
0000000000005d0a         test       rcx, rcx
0000000000005d0d         je         loc_5dc0

0000000000005d13         lea        rdx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xb15a
0000000000005d1a         mov        ecx, 0x3
0000000000005d1f         mov        rsi, rbp
0000000000005d22         mov        rdi, rdx
0000000000005d25         rep  cmpsb byte [rsi], byte [rdi]
0000000000005d27         seta       al
0000000000005d2a         sbb        al, 0x0
0000000000005d2c         test       al, al
0000000000005d2e         jne        loc_5dc0

0000000000005d34         test       r9d, r9d
0000000000005d37         jne        loc_5dc5

0000000000005d3d         test       r12d, r12d
0000000000005d40         jns        loc_5f2a

0000000000005d46         test       bh, 0x2
0000000000005d49         jne        loc_5e90

                     loc_5d4f:
0000000000005d4f         mov        byte [rsp+0xe8+var_D9], 0x1                 ; CODE XREF=fts_safe_changedir+489

                     loc_5d54:
0000000000005d54         mov        edi, dword [r13+0x2c]                       ; CODE XREF=fts_safe_changedir+466, fts_safe_changedir+629
0000000000005d58         mov        rdx, rbp
0000000000005d5b         mov        esi, ebx
0000000000005d5d         call       diropen.isra.6                              ; diropen.isra.6
0000000000005d62         test       eax, eax
0000000000005d64         mov        r15d, eax
0000000000005d67         js         loc_5f1b

0000000000005d6d         mov        ebx, dword [r13+0x48]
0000000000005d71         test       bl, 0x2
0000000000005d74         je         loc_5e1a

0000000000005d7a         nop        word [rax+rax]

                     loc_5d80:
0000000000005d80         lea        rdx, qword [rsp+0xe8+var_D8]                ; argument "__stat_buf" for method j___fxstat, CODE XREF=fts_safe_changedir+324, fts_safe_changedir+362, fts_safe_changedir+512, fts_safe_changedir+619
0000000000005d85         mov        esi, r15d                                   ; argument "__fildes" for method j___fxstat
0000000000005d88         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000005d8d         call       j___fxstat                                  ; __fxstat
0000000000005d92         test       eax, eax
0000000000005d94         je         loc_5e60

                     loc_5d9a:
0000000000005d9a         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+426

                     loc_5d9f:
0000000000005d9f         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+387
0000000000005da2         jns        loc_5dd5

0000000000005da4         call       j___errno_location                          ; __errno_location
0000000000005da9         mov        r12d, dword [rax]
0000000000005dac         mov        rbp, rax
0000000000005daf         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000005db2         call       j_close                                     ; close
0000000000005db7         mov        dword [rbp], r12d
0000000000005dbb         jmp        loc_5dd5
0000000000005dbd         align      64

                     loc_5dc0:
0000000000005dc0         test       r9d, r9d                                    ; CODE XREF=fts_safe_changedir+61, fts_safe_changedir+94
0000000000005dc3         je         loc_5e00

                     loc_5dc5:
0000000000005dc5         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+103
0000000000005dc8         je         loc_5dd3

0000000000005dca         test       r12d, r12d
0000000000005dcd         jns        loc_5e80

                     loc_5dd3:
0000000000005dd3         xor        ebx, ebx                                    ; CODE XREF=fts_safe_changedir+248

                     loc_5dd5:
0000000000005dd5         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=fts_safe_changedir+210, fts_safe_changedir+235, fts_safe_changedir+442, fts_safe_changedir+547, fts_safe_changedir+592
0000000000005ddd         xor        rcx, qword [fs:0x28]
0000000000005de6         mov        eax, ebx
0000000000005de8         jne        loc_5f25

0000000000005dee         add        rsp, 0xb8
0000000000005df5         pop        rbx
0000000000005df6         pop        rbp
0000000000005df7         pop        r12
0000000000005df9         pop        r13
0000000000005dfb         pop        r14
0000000000005dfd         pop        r15
0000000000005dff         ret
                        ; endp

                     loc_5e00:
0000000000005e00         test       r12d, r12d                                  ; CODE XREF=fts_safe_changedir+243
0000000000005e03         js         loc_5f40

0000000000005e09         test       bl, 0x2
0000000000005e0c         mov        r15d, r12d
0000000000005e0f         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005e14         jne        loc_5d80

                     loc_5e1a:
0000000000005e1a         test       rbp, rbp                                    ; CODE XREF=fts_safe_changedir+164
0000000000005e1d         je         loc_5e40

0000000000005e1f         lea        rdx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xb15a

                     loc_5e26:
0000000000005e26         mov        ecx, 0x3                                    ; CODE XREF=fts_safe_changedir+613
0000000000005e2b         mov        rsi, rbp
0000000000005e2e         mov        rdi, rdx
0000000000005e31         rep  cmpsb byte [rsi], byte [rdi]
0000000000005e33         seta       al
0000000000005e36         sbb        al, 0x0
0000000000005e38         test       al, al
0000000000005e3a         je         loc_5d80

                     loc_5e40:
0000000000005e40         and        bh, 0x2                                     ; CODE XREF=fts_safe_changedir+333, fts_safe_changedir+506, fts_safe_changedir+582
0000000000005e43         jne        loc_5ed8

0000000000005e49         mov        edi, r15d                                   ; argument "__fd" for method j_fchdir
0000000000005e4c         call       j_fchdir                                    ; fchdir
0000000000005e51         mov        ebx, eax
0000000000005e53         jmp        loc_5d9f
0000000000005e58         align      32

                     loc_5e60:
0000000000005e60         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=fts_safe_changedir+196
0000000000005e65         cmp        qword [r14+0x78], rax
0000000000005e69         je         loc_5f00

                     loc_5e6f:
0000000000005e6f         call       j___errno_location                          ; __errno_location, CODE XREF=fts_safe_changedir+572
0000000000005e74         mov        dword [rax], 0x2
0000000000005e7a         jmp        loc_5d9a
0000000000005e7f         align      128

                     loc_5e80:
0000000000005e80         mov        edi, r12d                                   ; argument "__fd" for method j_close, CODE XREF=fts_safe_changedir+253
0000000000005e83         xor        ebx, ebx
0000000000005e85         call       j_close                                     ; close
0000000000005e8a         jmp        loc_5dd5
0000000000005e8f         align      16

                     loc_5e90:
0000000000005e90         lea        r15, qword [r13+0x60]                       ; CODE XREF=fts_safe_changedir+121
0000000000005e94         mov        rdi, r15
0000000000005e97         call       i_ring_empty                                ; i_ring_empty
0000000000005e9c         test       al, al
0000000000005e9e         mov        byte [rsp+0xe8+var_D9], al
0000000000005ea2         jne        loc_5d54

0000000000005ea8         mov        rdi, r15
0000000000005eab         call       i_ring_pop                                  ; i_ring_pop
0000000000005eb0         test       eax, eax
0000000000005eb2         mov        r15d, eax
0000000000005eb5         mov        ebx, dword [r13+0x48]
0000000000005eb9         js         loc_5d4f

0000000000005ebf         test       bl, 0x2
0000000000005ec2         mov        r12d, eax
0000000000005ec5         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005eca         je         loc_5e40

0000000000005ed0         jmp        loc_5d80
0000000000005ed5         align      8

                     loc_5ed8:
0000000000005ed8         movzx      r14d, byte [rsp+0xe8+var_D9]                ; CODE XREF=fts_safe_changedir+371
0000000000005ede         mov        esi, r15d
0000000000005ee1         mov        rdi, r13
0000000000005ee4         xor        ebx, ebx
0000000000005ee6         xor        r14d, 0x1
0000000000005eea         movzx      edx, r14b
0000000000005eee         call       cwd_advance_fd                              ; cwd_advance_fd
0000000000005ef3         jmp        loc_5dd5
0000000000005ef8         align      256

                     loc_5f00:
0000000000005f00         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=fts_safe_changedir+409
0000000000005f05         cmp        qword [r14+0x80], rax
0000000000005f0c         jne        loc_5e6f

0000000000005f12         mov        ebx, dword [r13+0x48]
0000000000005f16         jmp        loc_5e40

                     loc_5f1b:
0000000000005f1b         mov        ebx, 0xffffffff                             ; CODE XREF=fts_safe_changedir+151
0000000000005f20         jmp        loc_5dd5

                     loc_5f25:
0000000000005f25         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_safe_changedir+280
                        ; endp

                     loc_5f2a:
0000000000005f2a         test       bl, 0x2                                     ; CODE XREF=fts_safe_changedir+112
0000000000005f2d         mov        r15d, r12d
0000000000005f30         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005f35         je         loc_5e26

0000000000005f3b         jmp        loc_5d80

                     loc_5f40:
0000000000005f40         mov        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=fts_safe_changedir+307
0000000000005f45         jmp        loc_5d54
0000000000005f4a         align      16                                          ; End of unwind block (FDE at 0xc470)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     enter_dir.isra.10:
0000000000005f50         and        edi, 0x102                                  ; Begin of unwind block (FDE at 0xc4c0), CODE XREF=fts_build+1558, rpl_fts_read+899
0000000000005f56         push       r12
0000000000005f58         mov        r12, rsi
0000000000005f5b         push       rbp
0000000000005f5c         push       rbx
0000000000005f5d         mov        rbx, rdx
0000000000005f60         je         loc_5fd0

0000000000005f62         mov        edi, 0x18                                   ; argument "__size" for method j_malloc
0000000000005f67         call       j_malloc                                    ; malloc
0000000000005f6c         test       rax, rax
0000000000005f6f         mov        rbp, rax
0000000000005f72         je         loc_5ff8

0000000000005f78         mov        rax, qword [rbx+0x78]
0000000000005f7c         mov        rdi, qword [r12]
0000000000005f80         mov        rsi, rbp
0000000000005f83         mov        qword [rbp+0x10], rbx
0000000000005f87         mov        qword [rbp], rax
0000000000005f8b         mov        rax, qword [rbx+0x80]
0000000000005f92         mov        qword [rbp+8], rax
0000000000005f96         call       hash_insert                                 ; hash_insert
0000000000005f9b         cmp        rbp, rax
0000000000005f9e         mov        r12, rax
0000000000005fa1         je         loc_5fc1

0000000000005fa3         mov        rdi, rbp
0000000000005fa6         call       sub_1c90                                    ; sub_1c90
0000000000005fab         test       r12, r12
0000000000005fae         je         loc_5ff8

0000000000005fb0         mov        rax, qword [r12+0x10]
0000000000005fb5         mov        ecx, 0x2
0000000000005fba         mov        word [rbx+0x70], cx
0000000000005fbe         mov        qword [rbx], rax

                     loc_5fc1:
0000000000005fc1         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+81, enter_dir.isra.10+143
0000000000005fc2         mov        eax, 0x1
0000000000005fc7         pop        rbp
0000000000005fc8         pop        r12
0000000000005fca         ret
                        ; endp
0000000000005fcb         align      16

                     loc_5fd0:
0000000000005fd0         mov        rdi, qword [r12]                            ; CODE XREF=enter_dir.isra.10+16
0000000000005fd4         lea        rsi, qword [rdx+0x78]
0000000000005fd8         call       cycle_check                                 ; cycle_check
0000000000005fdd         test       al, al
0000000000005fdf         je         loc_5fc1

0000000000005fe1         mov        edx, 0x2
0000000000005fe6         mov        qword [rbx], rbx
0000000000005fe9         mov        word [rbx+0x70], dx
0000000000005fed         pop        rbx
0000000000005fee         pop        rbp
0000000000005fef         pop        r12
0000000000005ff1         ret
                        ; endp
0000000000005ff2         align      8

                     loc_5ff8:
0000000000005ff8         pop        rbx                                         ; CODE XREF=enter_dir.isra.10+34, enter_dir.isra.10+94
0000000000005ff9         xor        eax, eax
0000000000005ffb         pop        rbp
0000000000005ffc         pop        r12
0000000000005ffe         ret
                        ; endp
0000000000005fff         align      8192                                        ; End of unwind block (FDE at 0xc4c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     leave_dir.isra.12:
0000000000006000         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0xc504), CODE XREF=fts_build+1530, rpl_fts_read+405, rpl_fts_read+1209, rpl_fts_read+1368
0000000000006004         mov        rcx, rsi
0000000000006007         mov        rax, qword [fs:0x28]
0000000000006010         mov        qword [rsp+0x28+var_10], rax
0000000000006015         xor        eax, eax
0000000000006017         and        edi, 0x102
000000000000601d         jne        loc_6060

000000000000601f         mov        rax, qword [rdx+8]
0000000000006023         test       rax, rax
0000000000006026         je         loc_6045

0000000000006028         cmp        qword [rax+0x58], 0x0
000000000000602d         js         loc_6045

000000000000602f         mov        rcx, qword [rsi]
0000000000006032         cmp        qword [rcx+0x10], 0x0
0000000000006037         je         loc_60b3

0000000000006039         mov        rsi, qword [rdx+0x80]
0000000000006040         cmp        qword [rcx], rsi
0000000000006043         je         loc_6090

                     loc_6045:
0000000000006045         mov        rax, qword [rsp+0x28+var_10]                ; CODE XREF=leave_dir.isra.12+38, leave_dir.isra.12+45, leave_dir.isra.12+140, leave_dir.isra.12+152, leave_dir.isra.12+172
000000000000604a         xor        rax, qword [fs:0x28]
0000000000006053         jne        loc_60ae

0000000000006055         add        rsp, 0x28
0000000000006059         ret
                        ; endp
000000000000605a         align      32

                     loc_6060:
0000000000006060         mov        rax, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+29
0000000000006064         mov        rdi, qword [rcx]
0000000000006067         mov        rsi, rsp
000000000000606a         mov        qword [rsp+0x28+var_28], rax
000000000000606e         mov        rax, qword [rdx+0x80]
0000000000006075         mov        qword [rsp+0x28+var_20], rax
000000000000607a         call       hash_delete                                 ; hash_delete
000000000000607f         test       rax, rax
0000000000006082         je         loc_60b3

0000000000006084         mov        rdi, rax
0000000000006087         call       sub_1c90                                    ; sub_1c90
000000000000608c         jmp        loc_6045
000000000000608e         align      16

                     loc_6090:
0000000000006090         mov        rsi, qword [rdx+0x78]                       ; CODE XREF=leave_dir.isra.12+67
0000000000006094         cmp        qword [rcx+8], rsi
0000000000006098         jne        loc_6045

000000000000609a         mov        rdx, qword [rax+0x78]
000000000000609e         mov        rax, qword [rax+0x80]
00000000000060a5         mov        qword [rcx+8], rdx
00000000000060a9         mov        qword [rcx], rax
00000000000060ac         jmp        loc_6045

                     loc_60ae:
00000000000060ae         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=leave_dir.isra.12+83
                        ; endp

                     loc_60b3:
00000000000060b3         call       j_abort                                     ; abort, CODE XREF=leave_dir.isra.12+55, leave_dir.isra.12+130
                        ; endp
00000000000060b8         align      64                                          ; End of unwind block (FDE at 0xc504)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_49: int8_t, -73
        ;    var_4A: int8_t, -74
        ;    var_4B: int8_t, -75
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     fts_build:
00000000000060c0         push       r15                                         ; Begin of unwind block (FDE at 0xc520), CODE XREF=rpl_fts_read+1056, rpl_fts_read+1561, rpl_fts_children+139, rpl_fts_children+219
00000000000060c2         push       r14
00000000000060c4         mov        r15, rdi
00000000000060c7         push       r13
00000000000060c9         push       r12
00000000000060cb         push       rbp
00000000000060cc         push       rbx
00000000000060cd         sub        rsp, 0x78
00000000000060d1         mov        rbp, qword [rdi]
00000000000060d4         mov        rax, qword [fs:0x28]
00000000000060dd         mov        qword [rsp+0xa8+var_40], rax
00000000000060e2         xor        eax, eax
00000000000060e4         mov        dword [rsp+0xa8+var_50], esi
00000000000060e8         mov        rax, qword [rbp+0x18]
00000000000060ec         test       rax, rax
00000000000060ef         mov        qword [rsp+0xa8+var_58], rax
00000000000060f4         je         loc_6530

00000000000060fa         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
00000000000060fd         call       j_dirfd                                     ; dirfd
0000000000006102         test       eax, eax
0000000000006104         mov        dword [rsp+0xa8+var_44], eax
0000000000006108         js         loc_6660

000000000000610e         cmp        qword [r15+0x40], 0x0
0000000000006113         je         loc_68e8

0000000000006119         mov        qword [rsp+0xa8+var_70], 0xffffffffffffffff

                     loc_6122:
0000000000006122         mov        edi, dword [r15+0x48]                       ; CODE XREF=fts_build+2207
0000000000006126         mov        byte [rsp+0xa8+var_49], 0x1

                     loc_612b:
000000000000612b         mov        rcx, qword [rbp+0x48]                       ; CODE XREF=fts_build+1405, fts_build+2106, fts_build+2121
000000000000612f         mov        rdx, qword [rbp+0x38]
0000000000006133         mov        qword [rsp+0xa8+var_68], 0x0
000000000000613c         cmp        byte [rdx+rcx-1], 0x2f
0000000000006141         lea        rax, qword [rcx-1]
0000000000006145         cmovne     rax, rcx
0000000000006149         and        edi, 0x4
000000000000614c         mov        qword [rsp+0xa8+var_60], rax
0000000000006151         je         loc_6163

0000000000006153         add        rax, qword [r15+0x20]
0000000000006157         lea        rbx, qword [rax+1]
000000000000615b         mov        byte [rax], 0x2f
000000000000615e         mov        qword [rsp+0xa8+var_68], rbx

                     loc_6163:
0000000000006163         mov        rax, qword [rsp+0xa8+var_60]                ; CODE XREF=fts_build+145
0000000000006168         mov        rbx, qword [r15+0x30]
000000000000616c         mov        byte [rsp+0xa8+var_4A], 0x0
0000000000006171         mov        byte [rsp+0xa8+var_4B], 0x0
0000000000006176         mov        qword [rsp+0xa8+var_A0], 0x0
000000000000617f         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006188         add        rax, 0x1
000000000000618c         mov        qword [rsp+0xa8+var_88], rbp
0000000000006191         sub        rbx, rax
0000000000006194         mov        qword [rsp+0xa8+var_90], rax
0000000000006199         mov        rax, qword [rbp+0x58]
000000000000619d         mov        qword [rsp+0xa8+var_80], rbx
00000000000061a2         xor        ebx, ebx
00000000000061a4         add        rax, 0x1
00000000000061a8         mov        qword [rsp+0xa8+var_78], rax
00000000000061ad         jmp        loc_628f
00000000000061b2         align      8

                     loc_61b8:
00000000000061b8         mov        r9, r14                                     ; CODE XREF=fts_build+578, fts_build+678
00000000000061bb         add        r9, qword [rsp+0xa8+var_90]
00000000000061c0         jb         loc_6a20

00000000000061c6         mov        rax, qword [rsp+0xa8+var_78]
00000000000061cb         lea        rsi, qword [r13+0x108]
00000000000061d2         mov        qword [r13+0x58], rax
00000000000061d6         mov        rax, qword [r15]
00000000000061d9         mov        qword [r13+0x48], r9
00000000000061dd         mov        qword [r13+8], rax
00000000000061e1         mov        rax, qword [rbp]
00000000000061e5         mov        qword [r13+0x80], rax
00000000000061ec         mov        eax, dword [r15+0x48]
00000000000061f0         test       al, 0x4
00000000000061f2         jne        loc_6460

00000000000061f8         mov        qword [r13+0x30], rsi

                     loc_61fc:
00000000000061fc         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+958
0000000000006201         je         loc_620c

0000000000006203         test       ah, 0x4
0000000000006206         je         loc_6508

                     loc_620c:
000000000000620c         movzx      edx, byte [rbp+0x12]                        ; CODE XREF=fts_build+321
0000000000006210         and        eax, 0x18
0000000000006213         mov        esi, edx
0000000000006215         sub        edx, 0x1
0000000000006218         cmp        eax, 0x18
000000000000621b         je         loc_64d0

                     loc_6221:
0000000000006221         mov        ecx, 0xb                                    ; CODE XREF=fts_build+1046
0000000000006226         cmp        edx, 0xb
0000000000006229         mov        word [r13+0x70], cx
000000000000622e         ja         loc_6498

0000000000006234         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53
000000000000623b         mov        eax, dword [rax+rdx*4]
000000000000623e         mov        dword [r13+0x90], eax
0000000000006245         mov        eax, 0x2

                     loc_624a:
000000000000624a         mov        qword [r13+0xa8], rax                       ; CODE XREF=fts_build+1000, fts_build+1087, fts_build+2508

                     loc_6251:
0000000000006251         cmp        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+1114
0000000000006257         mov        qword [r13+0x10], 0x0
000000000000625f         je         loc_6488

0000000000006265         mov        rax, qword [rsp+0xa8+var_A0]
000000000000626a         mov        qword [rax+0x10], r13

                     loc_626e:
000000000000626e         cmp        rbx, 0x2710                                 ; CODE XREF=fts_build+973
0000000000006275         je         loc_6370

                     loc_627b:
000000000000627b         add        rbx, 0x1                                    ; CODE XREF=fts_build+693, fts_build+1605
000000000000627f         cmp        rbx, qword [rsp+0xa8+var_70]
0000000000006284         jae        loc_63c8

                     loc_628a:
000000000000628a         mov        qword [rsp+0xa8+var_A0], r13                ; CODE XREF=fts_build+765, fts_build+1030

                     loc_628f:
000000000000628f         mov        rax, qword [rsp+0xa8+var_88]                ; CODE XREF=fts_build+237
0000000000006294         mov        r13, qword [rax+0x18]
0000000000006298         test       r13, r13
000000000000629b         je         loc_6768

00000000000062a1         call       j___errno_location                          ; __errno_location
00000000000062a6         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
00000000000062a9         mov        dword [rax], 0x0
00000000000062af         mov        r12, rax
00000000000062b2         call       j_readdir                                   ; readdir
00000000000062b7         test       rax, rax
00000000000062ba         mov        rbp, rax
00000000000062bd         je         loc_6840

00000000000062c3         test       byte [r15+0x48], 0x20
00000000000062c8         jne        loc_62d4

00000000000062ca         cmp        byte [rax+0x13], 0x2e
00000000000062ce         je         loc_64b0

                     loc_62d4:
00000000000062d4         lea        r13, qword [rbp+0x13]                       ; CODE XREF=fts_build+520, fts_build+1019
00000000000062d8         mov        rdi, r13                                    ; argument "__s" for method j_strlen
00000000000062db         call       j_strlen                                    ; strlen
00000000000062e0         mov        rsi, r13
00000000000062e3         mov        rdx, rax
00000000000062e6         mov        rdi, r15
00000000000062e9         mov        r14, rax
00000000000062ec         call       fts_alloc                                   ; fts_alloc
00000000000062f1         test       rax, rax
00000000000062f4         mov        r13, rax
00000000000062f7         je         loc_6710

00000000000062fd         cmp        qword [rsp+0xa8+var_80], r14
0000000000006302         ja         loc_61b8

0000000000006308         mov        rax, qword [r15+0x20]
000000000000630c         lea        rsi, qword [r15+0x30]
0000000000006310         lea        rdi, qword [r15+0x20]
0000000000006314         mov        qword [rsp+0xa8+var_80], rax
0000000000006319         mov        rax, qword [rsp+0xa8+var_60]
000000000000631e         lea        rdx, qword [rax+r14+2]
0000000000006323         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
0000000000006328         test       al, al
000000000000632a         je         loc_6710

0000000000006330         mov        rdx, qword [r15+0x20]
0000000000006334         cmp        rdx, qword [rsp+0xa8+var_80]
0000000000006339         je         loc_6520

000000000000633f         add        rdx, qword [rsp+0xa8+var_90]
0000000000006344         test       byte [r15+0x48], 0x4
0000000000006349         cmove      rdx, qword [rsp+0xa8+var_68]
000000000000634f         mov        qword [rsp+0xa8+var_68], rdx

                     loc_6354:
0000000000006354         mov        rcx, qword [r15+0x30]                       ; CODE XREF=fts_build+1125
0000000000006358         sub        rcx, qword [rsp+0xa8+var_90]
000000000000635d         mov        byte [rsp+0xa8+var_4B], al
0000000000006361         mov        qword [rsp+0xa8+var_80], rcx
0000000000006366         jmp        loc_61b8
000000000000636b         align      16

                     loc_6370:
0000000000006370         cmp        qword [r15+0x40], 0x0                       ; CODE XREF=fts_build+437
0000000000006375         jne        loc_627b

000000000000637b         mov        esi, dword [rsp+0xa8+var_44]
000000000000637f         mov        rdi, qword [rsp+0xa8+var_88]
0000000000006384         call       filesystem_type                             ; filesystem_type
0000000000006389         cmp        rax, 0x1021994
000000000000638f         je         loc_6700

0000000000006395         mov        ecx, 0xff534d42
000000000000639a         cmp        rax, rcx
000000000000639d         je         loc_6700

00000000000063a3         cmp        rax, 0x6969
00000000000063a9         je         loc_6700

00000000000063af         add        rbx, 0x1
00000000000063b3         cmp        rbx, qword [rsp+0xa8+var_70]
00000000000063b8         mov        byte [rsp+0xa8+var_4A], 0x1
00000000000063bd         jb         loc_628a

00000000000063c3         nop        dword [rax+rax]

                     loc_63c8:
00000000000063c8         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+452
00000000000063cd         mov        rbp, qword [rsp+0xa8+var_88]
00000000000063d2         je         loc_6776

                     loc_63d8:
00000000000063d8         mov        rax, qword [r15+8]                          ; CODE XREF=fts_build+1712
00000000000063dc         mov        rcx, qword [r15+0x20]
00000000000063e0         test       rax, rax
00000000000063e3         je         loc_6410

00000000000063e5         nop        dword [rax]

                     loc_63e8:
00000000000063e8         mov        rdx, qword [rax+0x30]                       ; CODE XREF=fts_build+846
00000000000063ec         lea        rsi, qword [rax+0x108]
00000000000063f3         cmp        rdx, rsi
00000000000063f6         je         loc_6403

00000000000063f8         sub        rdx, qword [rax+0x38]
00000000000063fc         add        rdx, rcx
00000000000063ff         mov        qword [rax+0x30], rdx

                     loc_6403:
0000000000006403         mov        qword [rax+0x38], rcx                       ; CODE XREF=fts_build+822
0000000000006407         mov        rax, qword [rax+0x10]
000000000000640b         test       rax, rax
000000000000640e         jne        loc_63e8

                     loc_6410:
0000000000006410         mov        rax, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+803
0000000000006415         jmp        loc_6423
0000000000006417         align      32

                     loc_6420:
0000000000006420         mov        rax, rdx                                    ; CODE XREF=fts_build+916, fts_build+922

                     loc_6423:
0000000000006423         cmp        qword [rax+0x58], 0x0                       ; CODE XREF=fts_build+853
0000000000006428         js         loc_6776

000000000000642e         mov        rdx, qword [rax+0x30]
0000000000006432         lea        rsi, qword [rax+0x108]
0000000000006439         cmp        rdx, rsi
000000000000643c         je         loc_6449

000000000000643e         sub        rdx, qword [rax+0x38]
0000000000006442         add        rdx, rcx
0000000000006445         mov        qword [rax+0x30], rdx

                     loc_6449:
0000000000006449         mov        rdx, qword [rax+0x10]                       ; CODE XREF=fts_build+892
000000000000644d         mov        qword [rax+0x38], rcx
0000000000006451         test       rdx, rdx
0000000000006454         jne        loc_6420

0000000000006456         mov        rdx, qword [rax+8]
000000000000645a         jmp        loc_6420
000000000000645c         align      32

                     loc_6460:
0000000000006460         mov        rax, qword [r13+0x38]                       ; CODE XREF=fts_build+306
0000000000006464         mov        rdi, qword [rsp+0xa8+var_68]                ; argument "__dest" for method j_memmove
0000000000006469         mov        qword [r13+0x30], rax
000000000000646d         mov        rax, qword [r13+0x60]
0000000000006471         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
0000000000006475         call       j_memmove                                   ; memmove
000000000000647a         mov        eax, dword [r15+0x48]
000000000000647e         jmp        loc_61fc
0000000000006483         align      8

                     loc_6488:
0000000000006488         mov        qword [rsp+0xa8+var_98], r13                ; CODE XREF=fts_build+415
000000000000648d         jmp        loc_626e
0000000000006492         align      8

                     loc_6498:
0000000000006498         mov        dword [r13+0x90], 0x0                       ; CODE XREF=fts_build+366
00000000000064a3         mov        eax, 0x2
00000000000064a8         jmp        loc_624a
00000000000064ad         align      16

                     loc_64b0:
00000000000064b0         cmp        byte [rax+0x14], 0x0                        ; CODE XREF=fts_build+526
00000000000064b4         je         loc_64c1

00000000000064b6         cmp        word [rax+0x14], 0x2e
00000000000064bb         jne        loc_62d4

                     loc_64c1:
00000000000064c1         mov        r13, qword [rsp+0xa8+var_A0]                ; CODE XREF=fts_build+1012
00000000000064c6         jmp        loc_628a
00000000000064cb         align      16

                     loc_64d0:
00000000000064d0         and        esi, 0xfb                                   ; CODE XREF=fts_build+347
00000000000064d6         je         loc_6221

00000000000064dc         mov        eax, 0xb
00000000000064e1         cmp        edx, 0xb
00000000000064e4         mov        word [r13+0x70], ax
00000000000064e9         jbe        loc_6a76

00000000000064ef         mov        dword [r13+0x90], 0x0
00000000000064fa         mov        eax, 0x1
00000000000064ff         jmp        loc_624a
0000000000006504         align      8

                     loc_6508:
0000000000006508         xor        edx, edx                                    ; CODE XREF=fts_build+326
000000000000650a         mov        rsi, r13
000000000000650d         mov        rdi, r15
0000000000006510         call       fts_stat                                    ; fts_stat
0000000000006515         mov        word [r13+0x70], ax
000000000000651a         jmp        loc_6251
000000000000651f         align      32

                     loc_6520:
0000000000006520         movzx      eax, byte [rsp+0xa8+var_4B]                 ; CODE XREF=fts_build+633
0000000000006525         jmp        loc_6354
000000000000652a         align      16

                     loc_6530:
0000000000006530         mov        eax, dword [rdi+0x48]                       ; CODE XREF=fts_build+52
0000000000006533         mov        edx, eax
0000000000006535         and        edx, 0x10
0000000000006538         je         loc_6547

000000000000653a         test       al, 0x1
000000000000653c         mov        edx, 0x20000
0000000000006541         jne        loc_6648

                     loc_6547:
0000000000006547         and        eax, 0x204                                  ; CODE XREF=fts_build+1144, fts_build+1429
000000000000654c         mov        rsi, qword [rbp+0x30]
0000000000006550         mov        edi, 0xffffff9c
0000000000006555         cmp        eax, 0x200
000000000000655a         jne        loc_6560

000000000000655c         mov        edi, dword [r15+0x2c]

                     loc_6560:
0000000000006560         lea        rcx, qword [rsp+0xa8+var_44]                ; CODE XREF=fts_build+1178
0000000000006565         call       opendirat                                   ; opendirat
000000000000656a         test       rax, rax
000000000000656d         mov        qword [rbp+0x18], rax
0000000000006571         je         loc_6890

0000000000006577         cmp        word [rbp+0x70], 0xb
000000000000657c         je         loc_6910

0000000000006582         mov        edi, dword [r15+0x48]
0000000000006586         test       edi, 0x100
000000000000658c         jne        loc_66b0

                     loc_6592:
0000000000006592         cmp        qword [r15+0x40], 0x1                       ; CODE XREF=fts_build+1565, fts_build+2145
0000000000006597         sbb        rax, rax
000000000000659a         and        eax, 0x186a1
000000000000659f         sub        rax, 0x1
00000000000065a3         cmp        dword [rsp+0xa8+var_50], 0x2
00000000000065a8         mov        qword [rsp+0xa8+var_70], rax
00000000000065ad         je         loc_6900

00000000000065b3         mov        edx, dword [r15+0x48]
00000000000065b7         mov        eax, dword [rsp+0xa8+var_44]
00000000000065bb         and        edx, 0x38
00000000000065be         cmp        edx, 0x18
00000000000065c1         je         loc_6964

                     loc_65c7:
00000000000065c7         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2220, fts_build+2244
00000000000065cc         mov        r12d, 0x1
00000000000065d2         sete       bl

                     loc_65d5:
00000000000065d5         test       byte [r15+0x49], 0x2                        ; CODE XREF=fts_build+2389
00000000000065da         jne        loc_69bc

                     loc_65e0:
00000000000065e0         test       eax, eax                                    ; CODE XREF=fts_build+2323
00000000000065e2         jns        loc_6948

                     loc_65e8:
00000000000065e8         test       bl, bl                                      ; CODE XREF=fts_build+2201
00000000000065ea         je         loc_65fb

00000000000065ec         test       r12b, r12b
00000000000065ef         je         loc_65fb

00000000000065f1         call       j___errno_location                          ; __errno_location
00000000000065f6         mov        eax, dword [rax]
00000000000065f8         mov        dword [rbp+0x40], eax

                     loc_65fb:
00000000000065fb         or         word [rbp+0x72], 0x1                        ; CODE XREF=fts_build+1322, fts_build+1327
0000000000006600         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
0000000000006604         call       j_closedir                                  ; closedir
0000000000006609         mov        edi, dword [r15+0x48]
000000000000660d         mov        qword [rbp+0x18], 0x0
0000000000006615         test       edi, 0x200
000000000000661b         je         loc_6630

000000000000661d         mov        eax, dword [rsp+0xa8+var_44]
0000000000006621         test       eax, eax
0000000000006623         js         loc_6630

0000000000006625         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000006627         call       j_close                                     ; close
000000000000662c         mov        edi, dword [r15+0x48]

                     loc_6630:
0000000000006630         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=fts_build+1371, fts_build+1379
0000000000006638         mov        byte [rsp+0xa8+var_49], 0x0
000000000000663d         jmp        loc_612b
0000000000006642         align      8

                     loc_6648:
0000000000006648         xor        edx, edx                                    ; CODE XREF=fts_build+1153
000000000000664a         cmp        qword [rbp+0x58], 0x0
000000000000664f         setne      dl
0000000000006652         shl        edx, 0x11
0000000000006655         jmp        loc_6547
000000000000665a         align      32

                     loc_6660:
0000000000006660         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir, CODE XREF=fts_build+72
0000000000006664         call       j_closedir                                  ; closedir
0000000000006669         cmp        dword [rsp+0xa8+var_50], 0x3
000000000000666e         mov        qword [rbp+0x18], 0x0
0000000000006676         je         loc_689b

                     loc_667c:
000000000000667c         mov        qword [rsp+0xa8+var_98], 0x0                ; CODE XREF=fts_build+2005, fts_build+2032

                     loc_6685:
0000000000006685         mov        rbx, qword [rsp+0xa8+var_40]                ; CODE XREF=fts_build+1591, fts_build+1692, fts_build+1798, fts_build+1808, fts_build+1835, fts_build+1907, fts_build+2080, fts_build+2295, fts_build+2476
000000000000668a         xor        rbx, qword [fs:0x28]
0000000000006693         mov        rax, qword [rsp+0xa8+var_98]
0000000000006698         jne        loc_6a71

000000000000669e         add        rsp, 0x78
00000000000066a2         pop        rbx
00000000000066a3         pop        rbp
00000000000066a4         pop        r12
00000000000066a6         pop        r13
00000000000066a8         pop        r14
00000000000066aa         pop        r15
00000000000066ac         ret
                        ; endp
00000000000066ad         align      16

                     loc_66b0:
00000000000066b0         lea        rbx, qword [r15+0x58]                       ; CODE XREF=fts_build+1228
00000000000066b4         mov        rdx, rbp
00000000000066b7         mov        rsi, rbx
00000000000066ba         call       leave_dir.isra.12                           ; leave_dir.isra.12
00000000000066bf         xor        edx, edx
00000000000066c1         mov        rsi, rbp
00000000000066c4         mov        rdi, r15
00000000000066c7         call       fts_stat                                    ; fts_stat
00000000000066cc         mov        edi, dword [r15+0x48]
00000000000066d0         mov        rdx, rbp
00000000000066d3         mov        rsi, rbx
00000000000066d6         call       enter_dir.isra.10                           ; enter_dir.isra.10
00000000000066db         test       al, al
00000000000066dd         jne        loc_6592

00000000000066e3         call       j___errno_location                          ; __errno_location
00000000000066e8         mov        qword [rsp+0xa8+var_98], 0x0
00000000000066f1         mov        dword [rax], 0xc
00000000000066f7         jmp        loc_6685
00000000000066f9         align      256

                     loc_6700:
0000000000006700         mov        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+719, fts_build+733, fts_build+745
0000000000006705         jmp        loc_627b
000000000000670a         align      16

                     loc_6710:
0000000000006710         mov        rdi, r13                                    ; CODE XREF=fts_build+567, fts_build+618
0000000000006713         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006718         mov        ebx, dword [r12]
000000000000671c         call       sub_1c90                                    ; sub_1c90
0000000000006721         mov        rdi, qword [rsp+0xa8+var_98]
0000000000006726         call       fts_lfree                                   ; fts_lfree
000000000000672b         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
000000000000672f         call       j_closedir                                  ; closedir
0000000000006734         mov        r9d, 0x7
000000000000673a         mov        qword [rbp+0x18], 0x0
0000000000006742         mov        qword [rsp+0xa8+var_98], 0x0
000000000000674b         mov        word [rbp+0x70], r9w
0000000000006750         or         dword [r15+0x48], 0x2000
0000000000006758         mov        dword [r12], ebx
000000000000675c         jmp        loc_6685
0000000000006761         align      8

                     loc_6768:
0000000000006768         mov        rbp, rax                                    ; CODE XREF=fts_build+475

                     loc_676b:
000000000000676b         cmp        byte [rsp+0xa8+var_4B], 0x0                 ; CODE XREF=fts_build+1973, fts_build+1992
0000000000006770         jne        loc_63d8

                     loc_6776:
0000000000006776         test       byte [r15+0x48], 0x4                        ; CODE XREF=fts_build+786, fts_build+872
000000000000677b         je         loc_679b

000000000000677d         mov        rax, qword [rsp+0xa8+var_90]
0000000000006782         cmp        qword [r15+0x30], rax
0000000000006786         je         loc_678d

0000000000006788         test       rbx, rbx
000000000000678b         jne        loc_6793

                     loc_678d:
000000000000678d         sub        qword [rsp+0xa8+var_68], 0x1                ; CODE XREF=fts_build+1734

                     loc_6793:
0000000000006793         mov        rax, qword [rsp+0xa8+var_68]                ; CODE XREF=fts_build+1739
0000000000006798         mov        byte [rax], 0x0

                     loc_679b:
000000000000679b         cmp        qword [rsp+0xa8+var_58], 0x0                ; CODE XREF=fts_build+1723
00000000000067a1         jne        loc_6810

00000000000067a3         cmp        byte [rsp+0xa8+var_49], 0x0
00000000000067a8         je         loc_6810

00000000000067aa         cmp        dword [rsp+0xa8+var_50], 0x1
00000000000067af         je         loc_67f0

00000000000067b1         test       rbx, rbx
00000000000067b4         je         loc_67f0

                     loc_67b6:
00000000000067b6         cmp        byte [rsp+0xa8+var_4A], 0x0                 ; CODE XREF=fts_build+1875
00000000000067bb         jne        loc_68b8

00000000000067c1         cmp        qword [r15+0x40], 0x0
00000000000067c6         je         loc_6685

00000000000067cc         cmp        rbx, 0x1
00000000000067d0         je         loc_6685

00000000000067d6         mov        rsi, qword [rsp+0xa8+var_98]
00000000000067db         mov        rdx, rbx
00000000000067de         mov        rdi, r15
00000000000067e1         call       fts_sort                                    ; fts_sort
00000000000067e6         mov        qword [rsp+0xa8+var_98], rax
00000000000067eb         jmp        loc_6685

                     loc_67f0:
00000000000067f0         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=fts_build+1775, fts_build+1780
00000000000067f5         jne        loc_6926

00000000000067fb         mov        rdi, r15
00000000000067fe         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000006803         test       eax, eax
0000000000006805         setne      al

                     loc_6808:
0000000000006808         test       al, al                                      ; CODE XREF=fts_build+2179
000000000000680a         jne        loc_6993

                     loc_6810:
0000000000006810         test       rbx, rbx                                    ; CODE XREF=fts_build+1761, fts_build+1768
0000000000006813         jne        loc_67b6

0000000000006815         cmp        dword [rsp+0xa8+var_50], 0x3
000000000000681a         je         loc_69d8

                     loc_6820:
0000000000006820         mov        rdi, qword [rsp+0xa8+var_98]                ; CODE XREF=fts_build+2336, fts_build+2346, fts_build+2361
0000000000006825         call       fts_lfree                                   ; fts_lfree
000000000000682a         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006833         jmp        loc_6685
0000000000006838         align      64

                     loc_6840:
0000000000006840         mov        eax, dword [r12]                            ; CODE XREF=fts_build+509
0000000000006844         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006849         test       eax, eax
000000000000684b         je         loc_686e

000000000000684d         test       rbx, rbx
0000000000006850         mov        dword [rbp+0x40], eax
0000000000006853         jne        loc_6989

0000000000006859         cmp        qword [rsp+0xa8+var_58], 0x0
000000000000685f         mov        eax, 0x4
0000000000006864         jne        loc_6989

                     loc_686a:
000000000000686a         mov        word [rbp+0x70], ax                         ; CODE XREF=fts_build+2254

                     loc_686e:
000000000000686e         mov        rdi, qword [rbp+0x18]                       ; CODE XREF=fts_build+1931
0000000000006872         test       rdi, rdi
0000000000006875         je         loc_676b

000000000000687b         call       j_closedir                                  ; closedir
0000000000006880         mov        qword [rbp+0x18], 0x0
0000000000006888         jmp        loc_676b
000000000000688d         align      16

                     loc_6890:
0000000000006890         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+1201
0000000000006895         jne        loc_667c

                     loc_689b:
000000000000689b         mov        r10d, 0x4                                   ; CODE XREF=fts_build+1462
00000000000068a1         mov        word [rbp+0x70], r10w
00000000000068a6         call       j___errno_location                          ; __errno_location
00000000000068ab         mov        eax, dword [rax]
00000000000068ad         mov        dword [rbp+0x40], eax
00000000000068b0         jmp        loc_667c
00000000000068b5         align      8

                     loc_68b8:
00000000000068b8         lea        rax, qword [fts_compare_ino]                ; fts_compare_ino, CODE XREF=fts_build+1787
00000000000068bf         mov        rsi, qword [rsp+0xa8+var_98]
00000000000068c4         mov        rdx, rbx
00000000000068c7         mov        rdi, r15
00000000000068ca         mov        qword [r15+0x40], rax
00000000000068ce         call       fts_sort                                    ; fts_sort
00000000000068d3         mov        qword [r15+0x40], 0x0
00000000000068db         mov        qword [rsp+0xa8+var_98], rax
00000000000068e0         jmp        loc_6685
00000000000068e5         align      8

                     loc_68e8:
00000000000068e8         mov        qword [rsp+0xa8+var_70], 0x186a0            ; CODE XREF=fts_build+83
00000000000068f1         mov        byte [rsp+0xa8+var_49], 0x1
00000000000068f6         mov        edi, dword [r15+0x48]
00000000000068fa         jmp        loc_612b
00000000000068ff         align      256

                     loc_6900:
0000000000006900         mov        byte [rsp+0xa8+var_49], 0x0                 ; CODE XREF=fts_build+1261, fts_build+2371
0000000000006905         mov        edi, dword [r15+0x48]
0000000000006909         jmp        loc_612b
000000000000690e         align      16

                     loc_6910:
0000000000006910         xor        edx, edx                                    ; CODE XREF=fts_build+1212
0000000000006912         mov        rsi, rbp
0000000000006915         mov        rdi, r15
0000000000006918         call       fts_stat                                    ; fts_stat
000000000000691d         mov        word [rbp+0x70], ax
0000000000006921         jmp        loc_6592

                     loc_6926:
0000000000006926         mov        rsi, qword [rbp+8]                          ; CODE XREF=fts_build+1845
000000000000692a         lea        rcx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xb15a
0000000000006931         mov        edx, 0xffffffff
0000000000006936         mov        rdi, r15
0000000000006939         call       fts_safe_changedir                          ; fts_safe_changedir
000000000000693e         test       eax, eax
0000000000006940         setne      al
0000000000006943         jmp        loc_6808

                     loc_6948:
0000000000006948         xor        ecx, ecx                                    ; CODE XREF=fts_build+1314
000000000000694a         mov        edx, eax
000000000000694c         mov        rsi, rbp
000000000000694f         mov        rdi, r15
0000000000006952         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000006957         test       eax, eax
0000000000006959         jne        loc_65e8

000000000000695f         jmp        loc_6122

                     loc_6964:
0000000000006964         cmp        qword [rbp+0x88], 0x2                       ; CODE XREF=fts_build+1281
000000000000696c         jne        loc_65c7

0000000000006972         mov        esi, eax
0000000000006974         mov        rdi, rbp
0000000000006977         call       leaf_optimization                           ; leaf_optimization
000000000000697c         test       eax, eax
000000000000697e         jne        loc_69fe

0000000000006980         mov        eax, dword [rsp+0xa8+var_44]
0000000000006984         jmp        loc_65c7

                     loc_6989:
0000000000006989         mov        eax, 0x7                                    ; CODE XREF=fts_build+1939, fts_build+1956
000000000000698e         jmp        loc_686a

                     loc_6993:
0000000000006993         mov        edi, 0x7                                    ; CODE XREF=fts_build+1866
0000000000006998         mov        word [rbp+0x70], di
000000000000699c         or         dword [r15+0x48], 0x2000
00000000000069a4         mov        rdi, qword [rsp+0xa8+var_98]
00000000000069a9         call       fts_lfree                                   ; fts_lfree
00000000000069ae         mov        qword [rsp+0xa8+var_98], 0x0
00000000000069b7         jmp        loc_6685

                     loc_69bc:
00000000000069bc         mov        edi, eax                                    ; CODE XREF=fts_build+1306
00000000000069be         mov        edx, 0x3
00000000000069c3         mov        esi, 0x406
00000000000069c8         xor        eax, eax
00000000000069ca         call       rpl_fcntl                                   ; rpl_fcntl
00000000000069cf         mov        dword [rsp+0xa8+var_44], eax
00000000000069d3         jmp        loc_65e0

                     loc_69d8:
00000000000069d8         movzx      eax, word [rbp+0x70]                        ; CODE XREF=fts_build+1882
00000000000069dc         cmp        ax, 0x7
00000000000069e0         je         loc_6820

00000000000069e6         cmp        ax, 0x4
00000000000069ea         je         loc_6820

00000000000069f0         mov        esi, 0x6
00000000000069f5         mov        word [rbp+0x70], si
00000000000069f9         jmp        loc_6820

                     loc_69fe:
00000000000069fe         cmp        dword [rsp+0xa8+var_50], 0x3                ; CODE XREF=fts_build+2238
0000000000006a03         jne        loc_6900

0000000000006a09         mov        eax, dword [rsp+0xa8+var_44]
0000000000006a0d         xor        r12d, r12d
0000000000006a10         mov        ebx, 0x1
0000000000006a15         jmp        loc_65d5
0000000000006a1a         align      32

                     loc_6a20:
0000000000006a20         mov        rdi, r13                                    ; CODE XREF=fts_build+256
0000000000006a23         mov        rbp, qword [rsp+0xa8+var_88]
0000000000006a28         call       sub_1c90                                    ; sub_1c90
0000000000006a2d         mov        rdi, qword [rsp+0xa8+var_98]
0000000000006a32         call       fts_lfree                                   ; fts_lfree
0000000000006a37         mov        rdi, qword [rbp+0x18]                       ; argument "__dirp" for method j_closedir
0000000000006a3b         call       j_closedir                                  ; closedir
0000000000006a40         mov        r8d, 0x7
0000000000006a46         mov        qword [rbp+0x18], 0x0
0000000000006a4e         mov        qword [rsp+0xa8+var_98], 0x0
0000000000006a57         mov        word [rbp+0x70], r8w
0000000000006a5c         or         dword [r15+0x48], 0x2000
0000000000006a64         mov        dword [r12], 0x24
0000000000006a6c         jmp        loc_6685

                     loc_6a71:
0000000000006a71         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fts_build+1496
                        ; endp

                     loc_6a76:
0000000000006a76         lea        rax, qword [CSWTCH.53]                      ; CSWTCH.53, CODE XREF=fts_build+1065
0000000000006a7d         mov        eax, dword [rax+rdx*4]
0000000000006a80         mov        dword [r13+0x90], eax
0000000000006a87         mov        eax, 0x1
0000000000006a8c         jmp        loc_624a
0000000000006a91         align      32                                          ; End of unwind block (FDE at 0xc520)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_50: int64_t, -80


                     rpl_fts_open:
0000000000006aa0         push       r15                                         ; Begin of unwind block (FDE at 0xc570), CODE XREF=xfts_open+10
0000000000006aa2         push       r14
0000000000006aa4         push       r13
0000000000006aa6         push       r12
0000000000006aa8         push       rbp
0000000000006aa9         push       rbx
0000000000006aaa         sub        rsp, 0x28
0000000000006aae         test       esi, 0xfffff000
0000000000006ab4         jne        loc_6e38

0000000000006aba         mov        eax, esi
0000000000006abc         mov        ebp, esi
0000000000006abe         and        eax, 0x204
0000000000006ac3         cmp        eax, 0x204
0000000000006ac8         je         loc_6e38

0000000000006ace         test       sil, 0x12
0000000000006ad2         je         loc_6e38

0000000000006ad8         mov        r13, rdi
0000000000006adb         mov        esi, 0x1                                    ; argument "__size" for method j_calloc
0000000000006ae0         mov        edi, 0x80                                   ; argument "__nmemb" for method j_calloc
0000000000006ae5         mov        r14, rdx
0000000000006ae8         call       j_calloc                                    ; calloc
0000000000006aed         test       rax, rax
0000000000006af0         mov        rbx, rax
0000000000006af3         je         loc_6d4e

0000000000006af9         test       bpl, 0x2
0000000000006afd         mov        qword [rax+0x40], r14
0000000000006b01         jne        loc_6d60

0000000000006b07         mov        rdi, qword [r13]
0000000000006b0b         mov        dword [rax+0x48], ebp
0000000000006b0e         mov        dword [rbx+0x2c], 0xffffff9c
0000000000006b15         test       rdi, rdi
0000000000006b18         je         loc_6d7f

                     loc_6b1e:
0000000000006b1e         mov        r15, r13                                    ; CODE XREF=rpl_fts_open+729
0000000000006b21         xor        r12d, r12d
0000000000006b24         nop        dword [rax]

                     loc_6b28:
0000000000006b28         call       j_strlen                                    ; strlen, CODE XREF=rpl_fts_open+158
0000000000006b2d         cmp        r12, rax
0000000000006b30         cmovb      r12, rax
0000000000006b34         add        r15, 0x8
0000000000006b38         mov        rdi, qword [r15]
0000000000006b3b         test       rdi, rdi
0000000000006b3e         jne        loc_6b28

0000000000006b40         lea        rdx, qword [r12+1]
0000000000006b45         mov        eax, 0x1000
0000000000006b4a         cmp        rdx, 0x1000
0000000000006b51         cmovb      rdx, rax

                     loc_6b55:
0000000000006b55         lea        rsi, qword [rbx+0x30]                       ; CODE XREF=rpl_fts_open+740
0000000000006b59         lea        rdi, qword [rbx+0x20]
0000000000006b5d         call       fts_palloc.isra.2                           ; fts_palloc.isra.2
0000000000006b62         test       al, al
0000000000006b64         mov        byte [rsp+0x58+var_42], al
0000000000006b68         je         loc_6e09

0000000000006b6e         mov        rsi, qword [r13]
0000000000006b72         test       rsi, rsi
0000000000006b75         je         loc_6e20

0000000000006b7b         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xae01
0000000000006b82         xor        edx, edx
0000000000006b84         mov        rdi, rbx
0000000000006b87         call       fts_alloc                                   ; fts_alloc
0000000000006b8c         test       rax, rax
0000000000006b8f         mov        r15, rax
0000000000006b92         je         loc_6e00

0000000000006b98         mov        rax, 0xffffffffffffffff
0000000000006b9f         test       r14, r14
0000000000006ba2         mov        rsi, qword [r13]
0000000000006ba6         mov        qword [r15+0x58], rax
0000000000006baa         mov        qword [r15+0x68], rax
0000000000006bae         je         loc_6bbd

                     loc_6bb0:
0000000000006bb0         mov        eax, dword [rbx+0x48]                       ; CODE XREF=rpl_fts_open+902
0000000000006bb3         shr        eax, 0xa
0000000000006bb6         and        eax, 0x1
0000000000006bb9         mov        byte [rsp+0x58+var_42], al

                     loc_6bbd:
0000000000006bbd         test       rsi, rsi                                    ; CODE XREF=rpl_fts_open+270
0000000000006bc0         je         loc_6e2c

0000000000006bc6         shr        ebp, 0xb
0000000000006bc9         mov        qword [rsp+0x58+var_40], 0x0
0000000000006bd2         xor        r12d, r12d
0000000000006bd5         xor        ebp, 0x1
0000000000006bd8         mov        eax, ebp
0000000000006bda         xor        ebp, ebp
0000000000006bdc         and        eax, 0x1
0000000000006bdf         mov        byte [rsp+0x58+var_41], al
0000000000006be3         jmp        loc_6c5c
0000000000006be5         align      8

                     loc_6be8:
0000000000006be8         mov        rdx, rax                                    ; CODE XREF=rpl_fts_open+466, rpl_fts_open+477, rpl_fts_open+488, rpl_fts_open+501, rpl_fts_open+517
0000000000006beb         mov        rdi, rbx
0000000000006bee         call       fts_alloc                                   ; fts_alloc
0000000000006bf3         test       rax, rax
0000000000006bf6         mov        rcx, rax
0000000000006bf9         je         loc_6df0

0000000000006bff         mov        qword [rax+0x58], 0x0
0000000000006c07         mov        qword [rax+8], r15
0000000000006c0b         lea        rax, qword [rax+0x108]
0000000000006c12         test       r12, r12
0000000000006c15         mov        qword [rcx+0x30], rax
0000000000006c19         je         loc_6d90

0000000000006c1f         cmp        byte [rsp+0x58+var_42], 0x0
0000000000006c24         je         loc_6d90

0000000000006c2a         mov        esi, 0xb
0000000000006c2f         test       r14, r14
0000000000006c32         mov        qword [rcx+0xa8], 0x2
0000000000006c3d         mov        word [rcx+0x70], si
0000000000006c41         je         loc_6dd0

                     loc_6c47:
0000000000006c47         mov        qword [rcx+0x10], r12                       ; CODE XREF=rpl_fts_open+782
0000000000006c4b         mov        r12, rcx

                     loc_6c4e:
0000000000006c4e         add        rbp, 0x1                                    ; CODE XREF=rpl_fts_open+809, rpl_fts_open+838
0000000000006c52         mov        rsi, qword [r13+rbp*8]
0000000000006c57         test       rsi, rsi
0000000000006c5a         je         loc_6cb0

                     loc_6c5c:
0000000000006c5c         mov        rdi, rsi                                    ; argument "__s" for method j_strlen, CODE XREF=rpl_fts_open+323
0000000000006c5f         mov        qword [rsp+0x58+var_50], rsi
0000000000006c64         call       j_strlen                                    ; strlen
0000000000006c69         cmp        rax, 0x2
0000000000006c6d         mov        rsi, qword [rsp+0x58+var_50]
0000000000006c72         jbe        loc_6be8

0000000000006c78         cmp        byte [rsp+0x58+var_41], 0x0
0000000000006c7d         je         loc_6be8

0000000000006c83         cmp        byte [rsi+rax-1], 0x2f
0000000000006c88         jne        loc_6be8

0000000000006c8e         nop

                     loc_6c90:
0000000000006c90         cmp        byte [rsi+rax-2], 0x2f                      ; CODE XREF=rpl_fts_open+515
0000000000006c95         jne        loc_6be8

0000000000006c9b         sub        rax, 0x1
0000000000006c9f         cmp        rax, 0x1
0000000000006ca3         jne        loc_6c90

0000000000006ca5         jmp        loc_6be8
0000000000006caa         align      16

                     loc_6cb0:
0000000000006cb0         test       r14, r14                                    ; CODE XREF=rpl_fts_open+442
0000000000006cb3         je         loc_6ccc

0000000000006cb5         cmp        rbp, 0x1
0000000000006cb9         jbe        loc_6ccc

0000000000006cbb         mov        rsi, r12
0000000000006cbe         mov        rdx, rbp
0000000000006cc1         mov        rdi, rbx
0000000000006cc4         call       fts_sort                                    ; fts_sort
0000000000006cc9         mov        r12, rax

                     loc_6ccc:
0000000000006ccc         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0xae01, CODE XREF=rpl_fts_open+531, rpl_fts_open+537, rpl_fts_open+911
0000000000006cd3         xor        edx, edx
0000000000006cd5         mov        rdi, rbx
0000000000006cd8         call       fts_alloc                                   ; fts_alloc
0000000000006cdd         test       rax, rax
0000000000006ce0         mov        qword [rbx], rax
0000000000006ce3         je         loc_6df0

0000000000006ce9         mov        edi, dword [rbx+0x48]
0000000000006cec         mov        edx, 0x9
0000000000006cf1         lea        rsi, qword [rbx+0x58]
0000000000006cf5         mov        qword [rax+0x10], r12
0000000000006cf9         mov        word [rax+0x70], dx
0000000000006cfd         mov        qword [rax+0x58], 0x1
0000000000006d05         call       setup_dir.isra.4                            ; setup_dir.isra.4
0000000000006d0a         test       al, al
0000000000006d0c         je         loc_6df0

0000000000006d12         mov        esi, dword [rbx+0x48]
0000000000006d15         test       esi, 0x204
0000000000006d1b         jne        loc_6d40

0000000000006d1d         mov        edi, dword [rbx+0x2c]
0000000000006d20         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xb15b
0000000000006d27         call       diropen.isra.6                              ; diropen.isra.6
0000000000006d2c         test       eax, eax
0000000000006d2e         mov        dword [rbx+0x28], eax
0000000000006d31         jns        loc_6d40

0000000000006d33         or         dword [rbx+0x48], 0x4
0000000000006d37         nop        word [rax+rax]

                     loc_6d40:
0000000000006d40         lea        rdi, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_open+635, rpl_fts_open+657
0000000000006d44         mov        esi, 0xffffffff
0000000000006d49         call       i_ring_init                                 ; i_ring_init

                     loc_6d4e:
0000000000006d4e         add        rsp, 0x28                                   ; CODE XREF=rpl_fts_open+83, rpl_fts_open+883, rpl_fts_open+933
0000000000006d52         mov        rax, rbx
0000000000006d55         pop        rbx
0000000000006d56         pop        rbp
0000000000006d57         pop        r12
0000000000006d59         pop        r13
0000000000006d5b         pop        r14
0000000000006d5d         pop        r15
0000000000006d5f         ret
                        ; endp

                     loc_6d60:
0000000000006d60         mov        rdi, qword [r13]                            ; CODE XREF=rpl_fts_open+97
0000000000006d64         mov        eax, ebp
0000000000006d66         mov        dword [rbx+0x2c], 0xffffff9c
0000000000006d6d         and        ah, 0xfd
0000000000006d70         or         eax, 0x4
0000000000006d73         test       rdi, rdi
0000000000006d76         mov        dword [rbx+0x48], eax
0000000000006d79         jne        loc_6b1e

                     loc_6d7f:
0000000000006d7f         mov        edx, 0x1000                                 ; CODE XREF=rpl_fts_open+120
0000000000006d84         jmp        loc_6b55
0000000000006d89         align      16

                     loc_6d90:
0000000000006d90         xor        edx, edx                                    ; CODE XREF=rpl_fts_open+377, rpl_fts_open+388
0000000000006d92         mov        rsi, rcx
0000000000006d95         mov        rdi, rbx
0000000000006d98         mov        qword [rsp+0x58+var_50], rcx
0000000000006d9d         call       fts_stat                                    ; fts_stat
0000000000006da2         mov        rcx, qword [rsp+0x58+var_50]
0000000000006da7         test       r14, r14
0000000000006daa         mov        word [rcx+0x70], ax
0000000000006dae         jne        loc_6c47

0000000000006db4         test       r12, r12
0000000000006db7         mov        qword [rcx+0x10], 0x0
0000000000006dbf         jne        loc_6dd8

0000000000006dc1         mov        qword [rsp+0x58+var_40], rcx
0000000000006dc6         mov        r12, rcx
0000000000006dc9         jmp        loc_6c4e
0000000000006dce         align      16

                     loc_6dd0:
0000000000006dd0         mov        qword [rcx+0x10], 0x0                       ; CODE XREF=rpl_fts_open+417

                     loc_6dd8:
0000000000006dd8         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=rpl_fts_open+799
0000000000006ddd         mov        qword [rsp+0x58+var_40], rcx
0000000000006de2         mov        qword [rax+0x10], rcx
0000000000006de6         jmp        loc_6c4e
0000000000006deb         align      16

                     loc_6df0:
0000000000006df0         mov        rdi, r12                                    ; CODE XREF=rpl_fts_open+345, rpl_fts_open+579, rpl_fts_open+620
0000000000006df3         call       fts_lfree                                   ; fts_lfree
0000000000006df8         mov        rdi, r15
0000000000006dfb         call       sub_1c90                                    ; sub_1c90

                     loc_6e00:
0000000000006e00         mov        rdi, qword [rbx+0x20]                       ; CODE XREF=rpl_fts_open+242
0000000000006e04         call       sub_1c90                                    ; sub_1c90

                     loc_6e09:
0000000000006e09         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_open+200
0000000000006e0c         xor        ebx, ebx
0000000000006e0e         call       sub_1c90                                    ; sub_1c90
0000000000006e13         jmp        loc_6d4e
0000000000006e18         align      32

                     loc_6e20:
0000000000006e20         xor        r15d, r15d                                  ; CODE XREF=rpl_fts_open+213
0000000000006e23         test       r14, r14
0000000000006e26         jne        loc_6bb0

                     loc_6e2c:
0000000000006e2c         xor        r12d, r12d                                  ; CODE XREF=rpl_fts_open+288
0000000000006e2f         jmp        loc_6ccc
0000000000006e34         align      8

                     loc_6e38:
0000000000006e38         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_open+20, rpl_fts_open+40, rpl_fts_open+50
0000000000006e3d         xor        ebx, ebx
0000000000006e3f         mov        dword [rax], 0x16
0000000000006e45         jmp        loc_6d4e
0000000000006e4a         align      16                                          ; End of unwind block (FDE at 0xc570)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_close:
0000000000006e50         push       r12                                         ; Begin of unwind block (FDE at 0xc5bc), CODE XREF=main+884
0000000000006e52         push       rbp
0000000000006e53         mov        rbp, rdi
0000000000006e56         push       rbx
0000000000006e57         mov        rdi, qword [rdi]
0000000000006e5a         test       rdi, rdi
0000000000006e5d         je         loc_6ea3

0000000000006e5f         cmp        qword [rdi+0x58], 0x0
0000000000006e64         jns        loc_6e7f

0000000000006e66         jmp        loc_6f80
0000000000006e6b         align      16

                     loc_6e70:
0000000000006e70         call       sub_1c90                                    ; sub_1c90, CODE XREF=rpl_fts_close+54
0000000000006e75         cmp        qword [rbx+0x58], 0x0
0000000000006e7a         mov        rdi, rbx
0000000000006e7d         js         loc_6e9b

                     loc_6e7f:
0000000000006e7f         mov        rbx, qword [rdi+0x10]                       ; CODE XREF=rpl_fts_close+20, rpl_fts_close+73
0000000000006e83         test       rbx, rbx
0000000000006e86         jne        loc_6e70

0000000000006e88         mov        rbx, qword [rdi+8]
0000000000006e8c         call       sub_1c90                                    ; sub_1c90
0000000000006e91         cmp        qword [rbx+0x58], 0x0
0000000000006e96         mov        rdi, rbx
0000000000006e99         jns        loc_6e7f

                     loc_6e9b:
0000000000006e9b         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_close+45
0000000000006e9e         call       sub_1c90                                    ; sub_1c90

                     loc_6ea3:
0000000000006ea3         mov        rdi, qword [rbp+8]                          ; CODE XREF=rpl_fts_close+13, rpl_fts_close+315
0000000000006ea7         test       rdi, rdi
0000000000006eaa         je         loc_6eb1

0000000000006eac         call       fts_lfree                                   ; fts_lfree

                     loc_6eb1:
0000000000006eb1         mov        rdi, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_close+90
0000000000006eb5         call       sub_1c90                                    ; sub_1c90
0000000000006eba         mov        rdi, qword [rbp+0x20]
0000000000006ebe         call       sub_1c90                                    ; sub_1c90
0000000000006ec3         mov        eax, dword [rbp+0x48]
0000000000006ec6         test       ah, 0x2
0000000000006ec9         je         loc_6f30

0000000000006ecb         mov        edi, dword [rbp+0x2c]
0000000000006ece         test       edi, edi
0000000000006ed0         jns        loc_6f60

                     loc_6ed6:
0000000000006ed6         xor        ebx, ebx                                    ; CODE XREF=rpl_fts_close+226, rpl_fts_close+250, rpl_fts_close+279

                     loc_6ed8:
0000000000006ed8         lea        rdi, qword [rbp+0x60]                       ; CODE XREF=rpl_fts_close+292, rpl_fts_close+340, rpl_fts_close+348, rpl_fts_close+364
0000000000006edc         call       fd_ring_clear                               ; fd_ring_clear
0000000000006ee1         mov        rdi, qword [rbp+0x50]
0000000000006ee5         test       rdi, rdi
0000000000006ee8         je         loc_6eef

0000000000006eea         call       hash_free                                   ; hash_free

                     loc_6eef:
0000000000006eef         test       dword [rbp+0x48], 0x102                     ; CODE XREF=rpl_fts_close+152
0000000000006ef6         mov        rdi, qword [rbp+0x58]
0000000000006efa         je         loc_6f20

0000000000006efc         test       rdi, rdi
0000000000006eff         je         loc_6f06

0000000000006f01         call       hash_free                                   ; hash_free

                     loc_6f06:
0000000000006f06         mov        rdi, rbp                                    ; CODE XREF=rpl_fts_close+175, rpl_fts_close+213
0000000000006f09         call       sub_1c90                                    ; sub_1c90
0000000000006f0e         test       ebx, ebx
0000000000006f10         jne        loc_6fc1

                     loc_6f16:
0000000000006f16         mov        eax, ebx                                    ; CODE XREF=rpl_fts_close+381
0000000000006f18         pop        rbx
0000000000006f19         pop        rbp
0000000000006f1a         pop        r12
0000000000006f1c         ret
                        ; endp
0000000000006f1d         align      32

                     loc_6f20:
0000000000006f20         call       sub_1c90                                    ; sub_1c90, CODE XREF=rpl_fts_close+170
0000000000006f25         jmp        loc_6f06
0000000000006f27         align      16

                     loc_6f30:
0000000000006f30         test       al, 0x4                                     ; CODE XREF=rpl_fts_close+121
0000000000006f32         jne        loc_6ed6

0000000000006f34         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_fchdir
0000000000006f37         call       j_fchdir                                    ; fchdir
0000000000006f3c         test       eax, eax
0000000000006f3e         jne        loc_6f90

0000000000006f40         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
0000000000006f43         call       j_close                                     ; close
0000000000006f48         test       eax, eax
0000000000006f4a         je         loc_6ed6

0000000000006f4c         call       j___errno_location                          ; __errno_location
0000000000006f51         mov        r12, rax
0000000000006f54         jmp        loc_6fb8
0000000000006f56         align      32

                     loc_6f60:
0000000000006f60         call       j_close                                     ; close, CODE XREF=rpl_fts_close+128
0000000000006f65         test       eax, eax
0000000000006f67         je         loc_6ed6

0000000000006f6d         call       j___errno_location                          ; __errno_location
0000000000006f72         mov        ebx, dword [rax]
0000000000006f74         jmp        loc_6ed8
0000000000006f79         align      128

                     loc_6f80:
0000000000006f80         mov        rbx, rdi                                    ; CODE XREF=rpl_fts_close+22
0000000000006f83         mov        rdi, rbx
0000000000006f86         call       sub_1c90                                    ; sub_1c90
0000000000006f8b         jmp        loc_6ea3

                     loc_6f90:
0000000000006f90         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+238
0000000000006f95         mov        edi, dword [rbp+0x28]                       ; argument "__fd" for method j_close
0000000000006f98         mov        r12, rax
0000000000006f9b         mov        ebx, dword [rax]
0000000000006f9d         call       j_close                                     ; close
0000000000006fa2         test       eax, eax
0000000000006fa4         je         loc_6ed8

0000000000006faa         test       ebx, ebx
0000000000006fac         jne        loc_6ed8

0000000000006fb2         nop        word [rax+rax]

                     loc_6fb8:
0000000000006fb8         mov        ebx, dword [r12]                            ; CODE XREF=rpl_fts_close+260
0000000000006fbc         jmp        loc_6ed8

                     loc_6fc1:
0000000000006fc1         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_close+192
0000000000006fc6         mov        dword [rax], ebx
0000000000006fc8         mov        ebx, 0xffffffff
0000000000006fcd         jmp        loc_6f16
0000000000006fd2         align      32                                          ; End of unwind block (FDE at 0xc5bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_read:
0000000000006fe0         push       r14                                         ; Begin of unwind block (FDE at 0xc5ec), CODE XREF=main+698, main+854, sub_2150+208
0000000000006fe2         push       r13
0000000000006fe4         push       r12
0000000000006fe6         push       rbp
0000000000006fe7         push       rbx
0000000000006fe8         mov        rbp, qword [rdi]
0000000000006feb         test       rbp, rbp
0000000000006fee         je         loc_70fe

0000000000006ff4         mov        edx, dword [rdi+0x48]
0000000000006ff7         test       dh, 0x20
0000000000006ffa         jne        loc_70fe

0000000000007000         movzx      eax, word [rbp+0x74]
0000000000007004         mov        ebx, 0x3
0000000000007009         mov        r12, rdi
000000000000700c         mov        word [rbp+0x74], bx
0000000000007010         cmp        ax, 0x1
0000000000007014         je         loc_7260

000000000000701a         cmp        ax, 0x2
000000000000701e         movzx      ecx, word [rbp+0x70]
0000000000007022         je         loc_7110

0000000000007028         cmp        cx, 0x1
000000000000702c         jne        loc_7060

000000000000702e         jmp        loc_7250
0000000000007033         align      8

                     loc_7038:
0000000000007038         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+135
000000000000703c         mov        rdi, rbp
000000000000703f         call       sub_1c90                                    ; sub_1c90
0000000000007044         cmp        qword [rbx+0x58], 0x0
0000000000007049         je         loc_7280

000000000000704f         movzx      eax, word [rbx+0x74]
0000000000007053         mov        rbp, rbx
0000000000007056         cmp        ax, 0x4
000000000000705a         jne        loc_7388

                     loc_7060:
0000000000007060         mov        rbx, qword [rbp+0x10]                       ; CODE XREF=rpl_fts_read+76, rpl_fts_read+317
0000000000007064         test       rbx, rbx
0000000000007067         jne        loc_7038

0000000000007069         mov        rbx, qword [rbp+8]
000000000000706d         cmp        qword [rbx+0x18], 0x0
0000000000007072         jne        loc_75e0

                     loc_7078:
0000000000007078         mov        qword [r12], rbx                            ; CODE XREF=rpl_fts_read+1672
000000000000707c         mov        rdi, rbp
000000000000707f         call       sub_1c90                                    ; sub_1c90
0000000000007084         cmp        qword [rbx+0x58], 0xffffffffffffffff
0000000000007089         je         loc_7542

000000000000708f         cmp        word [rbx+0x70], 0xb
0000000000007094         je         loc_71cf

000000000000709a         mov        rdx, qword [r12+0x20]
000000000000709f         mov        rax, qword [rbx+0x48]
00000000000070a3         mov        byte [rdx+rax], 0x0
00000000000070a7         cmp        qword [rbx+0x58], 0x0
00000000000070ac         je         loc_7470

00000000000070b2         movzx      eax, word [rbx+0x72]
00000000000070b6         test       al, 0x2
00000000000070b8         je         loc_7428

00000000000070be         mov        eax, dword [r12+0x48]
00000000000070c3         mov        edi, dword [rbx+0x44]
00000000000070c6         test       al, 0x4
00000000000070c8         je         loc_74cc

                     loc_70ce:
00000000000070ce         call       j_close                                     ; close, CODE XREF=rpl_fts_read+1287, rpl_fts_read+1708

                     loc_70d3:
00000000000070d3         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1098, rpl_fts_read+1130, rpl_fts_read+1180

                     loc_70d8:
00000000000070d8         cmp        word [rbx+0x70], 0x2                        ; CODE XREF=rpl_fts_read+1162
00000000000070dd         je         loc_70f3

00000000000070df         mov        ecx, dword [rbx+0x40]
00000000000070e2         test       ecx, ecx
00000000000070e4         je         loc_7488

00000000000070ea         mov        edx, 0x7
00000000000070ef         mov        word [rbx+0x70], dx

                     loc_70f3:
00000000000070f3         and        edi, 0x2000                                 ; CODE XREF=rpl_fts_read+253, rpl_fts_read+1219
00000000000070f9         mov        rbp, rbx
00000000000070fc         je         loc_717a

                     loc_70fe:
00000000000070fe         xor        ebp, ebp                                    ; CODE XREF=rpl_fts_read+14, rpl_fts_read+26, rpl_fts_read+1327, rpl_fts_read+1662
0000000000007100         pop        rbx
0000000000007101         mov        rax, rbp
0000000000007104         pop        rbp
0000000000007105         pop        r12
0000000000007107         pop        r13
0000000000007109         pop        r14
000000000000710b         ret
                        ; endp
000000000000710c         align      16

                     loc_7110:
0000000000007110         lea        eax, dword [rcx-0xc]                        ; CODE XREF=rpl_fts_read+66
0000000000007113         cmp        ax, 0x1
0000000000007117         jbe        loc_7190

0000000000007119         cmp        cx, 0x1
000000000000711d         jne        loc_7060

                     loc_7123:
0000000000007123         test       dl, 0x40                                    ; CODE XREF=rpl_fts_read+628
0000000000007126         je         loc_71d8

000000000000712c         mov        rax, qword [r12+0x18]
0000000000007131         cmp        qword [rbp+0x78], rax
0000000000007135         je         loc_71d8

                     loc_713b:
000000000000713b         test       byte [rbp+0x72], 0x2                        ; CODE XREF=rpl_fts_read+634
000000000000713f         jne        loc_7620

                     loc_7145:
0000000000007145         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+1608
000000000000714a         test       rdi, rdi
000000000000714d         je         loc_715d

000000000000714f         call       fts_lfree                                   ; fts_lfree
0000000000007154         mov        qword [r12+8], 0x0

                     loc_715d:
000000000000715d         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+365
0000000000007162         mov        r10d, 0x6
0000000000007168         lea        rsi, qword [r12+0x58]
000000000000716d         mov        word [rbp+0x70], r10w
0000000000007172         mov        rdx, rbp
0000000000007175         call       leave_dir.isra.12                           ; leave_dir.isra.12

                     loc_717a:
000000000000717a         pop        rbx                                         ; CODE XREF=rpl_fts_read+284, rpl_fts_read+467, rpl_fts_read+493, rpl_fts_read+864, rpl_fts_read+906, rpl_fts_read+925, rpl_fts_read+1373, rpl_fts_read+1407, rpl_fts_read+1518, rpl_fts_read+1724, rpl_fts_read+1778
000000000000717b         mov        rax, rbp
000000000000717e         pop        rbp
000000000000717f         pop        r12
0000000000007181         pop        r13
0000000000007183         pop        r14
0000000000007185         ret
                        ; endp
0000000000007186         align      16

                     loc_7190:
0000000000007190         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+311
0000000000007195         mov        rsi, rbp
0000000000007198         call       fts_stat                                    ; fts_stat
000000000000719d         cmp        ax, 0x1
00000000000071a1         mov        word [rbp+0x70], ax
00000000000071a5         je         loc_74ec

00000000000071ab         cmp        ax, 0xb
00000000000071af         mov        qword [r12], rbp
00000000000071b3         jne        loc_717a

00000000000071b5         nop        dword [rax]

                     loc_71b8:
00000000000071b8         mov        rax, qword [rbp+0xa8]                       ; CODE XREF=rpl_fts_read+854
00000000000071bf         cmp        rax, 0x2
00000000000071c3         je         loc_7568

00000000000071c9         cmp        rax, 0x1
00000000000071cd         je         loc_717a

                     loc_71cf:
00000000000071cf         call       j_abort                                     ; abort, CODE XREF=rpl_fts_read+180
                        ; endp
00000000000071d4         align      8

                     loc_71d8:
00000000000071d8         mov        rdi, qword [r12+8]                          ; CODE XREF=rpl_fts_read+326, rpl_fts_read+341
00000000000071dd         test       rdi, rdi
00000000000071e0         je         loc_73f8

00000000000071e6         test       dh, 0x10
00000000000071e9         jne        loc_73e2

00000000000071ef         mov        rcx, qword [rbp+0x30]
00000000000071f3         mov        edx, 0xffffffff
00000000000071f8         mov        rsi, rbp
00000000000071fb         mov        rdi, r12
00000000000071fe         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000007203         test       eax, eax
0000000000007205         je         loc_74c2

000000000000720b         call       j___errno_location                          ; __errno_location
0000000000007210         mov        eax, dword [rax]
0000000000007212         or         word [rbp+0x72], 0x1
0000000000007217         mov        dword [rbp+0x40], eax
000000000000721a         mov        rbp, qword [r12+8]
000000000000721f         test       rbp, rbp
0000000000007222         je         loc_7416

0000000000007228         mov        rax, rbp
000000000000722b         nop        dword [rax+rax]

                     loc_7230:
0000000000007230         mov        rdx, qword [rax+8]                          ; CODE XREF=rpl_fts_read+611
0000000000007234         mov        rdx, qword [rdx+0x30]
0000000000007238         mov        qword [rax+0x30], rdx
000000000000723c         mov        rax, qword [rax+0x10]
0000000000007240         test       rax, rax
0000000000007243         jne        loc_7230

0000000000007245         jmp        loc_7416
000000000000724a         align      16

                     loc_7250:
0000000000007250         cmp        ax, 0x4                                     ; CODE XREF=rpl_fts_read+78
0000000000007254         jne        loc_7123

000000000000725a         jmp        loc_713b
000000000000725f         align      32

                     loc_7260:
0000000000007260         mov        rsi, rbp                                    ; CODE XREF=rpl_fts_read+52
0000000000007263         xor        edx, edx
0000000000007265         call       fts_stat                                    ; fts_stat
000000000000726a         mov        word [rbp+0x70], ax
000000000000726e         mov        rax, rbp
0000000000007271         pop        rbx
0000000000007272         pop        rbp
0000000000007273         pop        r12
0000000000007275         pop        r13
0000000000007277         pop        r14
0000000000007279         ret
                        ; endp
000000000000727a         align      128

                     loc_7280:
0000000000007280         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+105
0000000000007283         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000007288         test       eax, eax
000000000000728a         jne        loc_7691

0000000000007290         test       dword [r12+0x48], 0x102
0000000000007299         mov        rdi, qword [r12+0x58]
000000000000729e         je         loc_73d8

00000000000072a4         test       rdi, rdi
00000000000072a7         je         loc_72ae

00000000000072a9         call       hash_free                                   ; hash_free

                     loc_72ae:
00000000000072ae         mov        rdx, qword [rbx+0x60]                       ; CODE XREF=rpl_fts_read+711, rpl_fts_read+1021
00000000000072b2         lea        rbp, qword [rbx+0x108]
00000000000072b9         mov        rdi, qword [r12+0x20]                       ; argument "__dest" for method j_memmove
00000000000072be         mov        rsi, rbp                                    ; argument "__src" for method j_memmove
00000000000072c1         mov        qword [rbx+0x48], rdx
00000000000072c5         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
00000000000072c9         call       j_memmove                                   ; memmove
00000000000072ce         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000072d3         mov        rdi, rbp                                    ; argument "__s" for method j_strrchr
00000000000072d6         call       j_strrchr                                   ; strrchr
00000000000072db         test       rax, rax
00000000000072de         je         loc_730b

00000000000072e0         cmp        rbp, rax
00000000000072e3         je         loc_74b0

                     loc_72e9:
00000000000072e9         lea        r13, qword [rax+1]                          ; CODE XREF=rpl_fts_read+1239
00000000000072ed         mov        rdi, r13                                    ; argument "__s" for method j_strlen
00000000000072f0         call       j_strlen                                    ; strlen
00000000000072f5         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
00000000000072f9         mov        r14, rax
00000000000072fc         mov        rsi, r13                                    ; argument "__src" for method j_memmove
00000000000072ff         mov        rdi, rbp                                    ; argument "__dest" for method j_memmove
0000000000007302         call       j_memmove                                   ; memmove
0000000000007307         mov        qword [rbx+0x60], r14

                     loc_730b:
000000000000730b         mov        rax, qword [r12+0x20]                       ; CODE XREF=rpl_fts_read+766, rpl_fts_read+1245
0000000000007310         mov        edi, dword [r12+0x48]
0000000000007315         lea        rsi, qword [r12+0x58]
000000000000731a         mov        rbp, rbx
000000000000731d         mov        qword [rbx+0x38], rax
0000000000007321         mov        qword [rbx+0x30], rax
0000000000007325         call       setup_dir.isra.4                            ; setup_dir.isra.4
000000000000732a         movzx      eax, word [rbx+0x70]

                     loc_732e:
000000000000732e         cmp        ax, 0xb                                     ; CODE XREF=rpl_fts_read+1007, rpl_fts_read+1853
0000000000007332         mov        qword [r12], rbp
0000000000007336         je         loc_71b8

                     loc_733c:
000000000000733c         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1479, rpl_fts_read+1815
0000000000007340         jne        loc_717a

                     loc_7346:
0000000000007346         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_read+1311
000000000000734b         jne        loc_7356

                     loc_734d:
000000000000734d         mov        rax, qword [rbp+0x78]                       ; CODE XREF=rpl_fts_read+1784
0000000000007351         mov        qword [r12+0x18], rax

                     loc_7356:
0000000000007356         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+875, rpl_fts_read+1524
000000000000735b         lea        rsi, qword [r12+0x58]
0000000000007360         mov        rdx, rbp
0000000000007363         call       enter_dir.isra.10                           ; enter_dir.isra.10
0000000000007368         test       al, al
000000000000736a         jne        loc_717a

0000000000007370         call       j___errno_location                          ; __errno_location
0000000000007375         xor        ebp, ebp
0000000000007377         mov        dword [rax], 0xc
000000000000737d         jmp        loc_717a
0000000000007382         align      8

                     loc_7388:
0000000000007388         cmp        ax, 0x2                                     ; CODE XREF=rpl_fts_read+122
000000000000738c         je         loc_762d

                     loc_7392:
0000000000007392         mov        rax, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+1087, rpl_fts_read+1585, rpl_fts_read+1651
0000000000007396         lea        rsi, qword [rbp+0x108]                      ; argument "__src" for method j_memmove
000000000000739d         mov        rdi, qword [rax+0x48]
00000000000073a1         mov        rax, qword [rax+0x38]
00000000000073a5         cmp        byte [rax+rdi-1], 0x2f
00000000000073aa         lea        rdx, qword [rdi-1]
00000000000073ae         cmove      rdi, rdx
00000000000073b2         add        rdi, qword [r12+0x20]
00000000000073b7         mov        byte [rdi], 0x2f
00000000000073ba         mov        rax, qword [rbp+0x60]
00000000000073be         add        rdi, 0x1                                    ; argument "__dest" for method j_memmove
00000000000073c2         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memmove
00000000000073c6         call       j_memmove                                   ; memmove
00000000000073cb         movzx      eax, word [rbp+0x70]
00000000000073cf         jmp        loc_732e
00000000000073d4         align      8

                     loc_73d8:
00000000000073d8         call       sub_1c90                                    ; sub_1c90, CODE XREF=rpl_fts_read+702
00000000000073dd         jmp        loc_72ae

                     loc_73e2:
00000000000073e2         and        dh, 0xef                                    ; CODE XREF=rpl_fts_read+521
00000000000073e5         mov        dword [r12+0x48], edx
00000000000073ea         call       fts_lfree                                   ; fts_lfree
00000000000073ef         mov        qword [r12+8], 0x0

                     loc_73f8:
00000000000073f8         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+512
00000000000073fd         mov        rdi, r12
0000000000007400         call       fts_build                                   ; fts_build
0000000000007405         test       rax, rax
0000000000007408         mov        qword [r12+8], rax
000000000000740d         je         loc_7504

0000000000007413         mov        rbp, rax

                     loc_7416:
0000000000007416         mov        qword [r12+8], 0x0                          ; CODE XREF=rpl_fts_read+578, rpl_fts_read+613, rpl_fts_read+1255
000000000000741f         jmp        loc_7392
0000000000007424         align      8

                     loc_7428:
0000000000007428         test       al, 0x1                                     ; CODE XREF=rpl_fts_read+216
000000000000742a         jne        loc_70d3

0000000000007430         mov        rsi, qword [rbx+8]
0000000000007434         lea        rcx, qword [__PRETTY_FUNCTION__.3434+10]    ; 0xb15a
000000000000743b         mov        edx, 0xffffffff
0000000000007440         mov        rdi, r12
0000000000007443         call       fts_safe_changedir                          ; fts_safe_changedir
0000000000007448         test       eax, eax
000000000000744a         je         loc_70d3

                     loc_7450:
0000000000007450         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1178
0000000000007455         mov        edi, dword [r12+0x48]
000000000000745a         mov        eax, dword [rax]
000000000000745c         or         edi, 0x2000
0000000000007462         mov        dword [rbx+0x40], eax
0000000000007465         mov        dword [r12+0x48], edi
000000000000746a         jmp        loc_70d8
000000000000746f         align      16

                     loc_7470:
0000000000007470         mov        rdi, r12                                    ; CODE XREF=rpl_fts_read+204
0000000000007473         call       restore_initial_cwd                         ; restore_initial_cwd
0000000000007478         test       eax, eax
000000000000747a         jne        loc_7450

000000000000747c         jmp        loc_70d3
0000000000007481         align      8

                     loc_7488:
0000000000007488         mov        eax, 0x6                                    ; CODE XREF=rpl_fts_read+260
000000000000748d         lea        rsi, qword [r12+0x58]
0000000000007492         mov        rdx, rbx
0000000000007495         mov        word [rbx+0x70], ax
0000000000007499         call       leave_dir.isra.12                           ; leave_dir.isra.12
000000000000749e         mov        edi, dword [r12+0x48]
00000000000074a3         jmp        loc_70f3
00000000000074a8         align      16

                     loc_74b0:
00000000000074b0         cmp        byte [rbx+0x109], 0x0                       ; CODE XREF=rpl_fts_read+771
00000000000074b7         jne        loc_72e9

00000000000074bd         jmp        loc_730b

                     loc_74c2:
00000000000074c2         mov        rbp, qword [r12+8]                          ; CODE XREF=rpl_fts_read+549
00000000000074c7         jmp        loc_7416

                     loc_74cc:
00000000000074cc         test       ah, 0x2                                     ; CODE XREF=rpl_fts_read+232
00000000000074cf         je         loc_766d

00000000000074d5         mov        esi, edi
00000000000074d7         mov        edx, 0x1
00000000000074dc         mov        rdi, r12
00000000000074df         call       cwd_advance_fd                              ; cwd_advance_fd
00000000000074e4         mov        edi, dword [rbx+0x44]
00000000000074e7         jmp        loc_70ce

                     loc_74ec:
00000000000074ec         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+453
00000000000074f1         test       sil, 0x4
00000000000074f5         je         loc_76fc

00000000000074fb         mov        qword [r12], rbp
00000000000074ff         jmp        loc_7346

                     loc_7504:
0000000000007504         mov        edi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1069
0000000000007509         test       edi, 0x2000
000000000000750f         jne        loc_70fe

0000000000007515         mov        r9d, dword [rbp+0x40]
0000000000007519         test       r9d, r9d
000000000000751c         je         loc_7530

000000000000751e         cmp        word [rbp+0x70], 0x4
0000000000007523         je         loc_7530

0000000000007525         mov        r8d, 0x7
000000000000752b         mov        word [rbp+0x70], r8w

                     loc_7530:
0000000000007530         lea        rsi, qword [r12+0x58]                       ; CODE XREF=rpl_fts_read+1340, rpl_fts_read+1347
0000000000007535         mov        rdx, rbp
0000000000007538         call       leave_dir.isra.12                           ; leave_dir.isra.12
000000000000753d         jmp        loc_717a

                     loc_7542:
0000000000007542         mov        rdi, rbx                                    ; CODE XREF=rpl_fts_read+169
0000000000007545         xor        ebp, ebp
0000000000007547         call       sub_1c90                                    ; sub_1c90
000000000000754c         call       j___errno_location                          ; __errno_location
0000000000007551         mov        dword [rax], 0x0
0000000000007557         mov        qword [r12], 0x0
000000000000755f         jmp        loc_717a
0000000000007564         align      8

                     loc_7568:
0000000000007568         mov        rbx, qword [rbp+8]                          ; CODE XREF=rpl_fts_read+483
000000000000756c         cmp        qword [rbx+0x68], 0x0
0000000000007571         jne        loc_7584

0000000000007573         mov        eax, dword [r12+0x48]
0000000000007578         and        eax, 0x18
000000000000757b         cmp        eax, 0x18
000000000000757e         je         loc_76dd

                     loc_7584:
0000000000007584         xor        edx, edx                                    ; CODE XREF=rpl_fts_read+1425, rpl_fts_read+1805
0000000000007586         mov        rsi, rbp
0000000000007589         mov        rdi, r12
000000000000758c         call       fts_stat                                    ; fts_stat
0000000000007591         mov        edx, dword [rbp+0x90]
0000000000007597         mov        word [rbp+0x70], ax
000000000000759b         and        edx, 0xf000
00000000000075a1         cmp        edx, 0x4000
00000000000075a7         jne        loc_733c

00000000000075ad         cmp        qword [rbp+0x58], 0x0
00000000000075b2         je         loc_76ce

00000000000075b8         mov        rcx, qword [rbx+0x68]
00000000000075bc         lea        rdx, qword [rcx-1]
00000000000075c0         cmp        rdx, 0xfffffffffffffffd
00000000000075c4         ja         loc_75ca

00000000000075c6         mov        qword [rbx+0x68], rdx

                     loc_75ca:
00000000000075ca         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1508
00000000000075ce         jne        loc_717a

00000000000075d4         jmp        loc_7356
00000000000075d9         align      32

                     loc_75e0:
00000000000075e0         mov        rax, qword [rbx+0x48]                       ; CODE XREF=rpl_fts_read+146
00000000000075e4         mov        rdx, qword [r12+0x20]
00000000000075e9         mov        esi, 0x3
00000000000075ee         mov        qword [r12], rbx
00000000000075f2         mov        rdi, r12
00000000000075f5         mov        byte [rdx+rax], 0x0
00000000000075f9         call       fts_build                                   ; fts_build
00000000000075fe         test       rax, rax
0000000000007601         mov        rbx, rax
0000000000007604         je         loc_7658

0000000000007606         mov        rdi, rbp
0000000000007609         mov        rbp, rbx
000000000000760c         call       sub_1c90                                    ; sub_1c90
0000000000007611         jmp        loc_7392
0000000000007616         align      32

                     loc_7620:
0000000000007620         mov        edi, dword [rbp+0x44]                       ; argument "__fd" for method j_close, CODE XREF=rpl_fts_read+351
0000000000007623         call       j_close                                     ; close
0000000000007628         jmp        loc_7145

                     loc_762d:
000000000000762d         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_read+940
0000000000007632         mov        rsi, rbx
0000000000007635         mov        rdi, r12
0000000000007638         call       fts_stat                                    ; fts_stat
000000000000763d         cmp        ax, 0x1
0000000000007641         mov        word [rbx+0x70], ax
0000000000007645         je         loc_76a1

                     loc_7647:
0000000000007647         mov        esi, 0x3                                    ; CODE XREF=rpl_fts_read+1738, rpl_fts_read+1769, rpl_fts_read+1907
000000000000764c         mov        rbp, rbx
000000000000764f         mov        word [rbx+0x74], si
0000000000007653         jmp        loc_7392

                     loc_7658:
0000000000007658         test       byte [r12+0x49], 0x20                       ; CODE XREF=rpl_fts_read+1572
000000000000765e         jne        loc_70fe

0000000000007664         mov        rbx, qword [rbp+8]
0000000000007668         jmp        loc_7078

                     loc_766d:
000000000000766d         call       j_fchdir                                    ; fchdir, CODE XREF=rpl_fts_read+1263
0000000000007672         test       eax, eax
0000000000007674         je         loc_7689

0000000000007676         call       j___errno_location                          ; __errno_location
000000000000767b         mov        eax, dword [rax]
000000000000767d         mov        dword [rbx+0x40], eax
0000000000007680         or         dword [r12+0x48], 0x2000

                     loc_7689:
0000000000007689         mov        edi, dword [rbx+0x44]                       ; CODE XREF=rpl_fts_read+1684
000000000000768c         jmp        loc_70ce

                     loc_7691:
0000000000007691         or         dword [r12+0x48], 0x2000                    ; CODE XREF=rpl_fts_read+682
000000000000769a         xor        ebp, ebp
000000000000769c         jmp        loc_717a

                     loc_76a1:
00000000000076a1         mov        esi, dword [r12+0x48]                       ; CODE XREF=rpl_fts_read+1637
00000000000076a6         test       sil, 0x4
00000000000076aa         jne        loc_7647

00000000000076ac         mov        edi, dword [r12+0x2c]
00000000000076b1         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xb15b
00000000000076b8         call       diropen.isra.6                              ; diropen.isra.6
00000000000076bd         test       eax, eax
00000000000076bf         mov        dword [rbx+0x44], eax
00000000000076c2         js         loc_7740

00000000000076c4         or         word [rbx+0x72], 0x2
00000000000076c9         jmp        loc_7647

                     loc_76ce:
00000000000076ce         cmp        ax, 0x1                                     ; CODE XREF=rpl_fts_read+1490
00000000000076d2         jne        loc_717a

00000000000076d8         jmp        loc_734d

                     loc_76dd:
00000000000076dd         mov        esi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1438
00000000000076e2         mov        rdi, rbx
00000000000076e5         call       leaf_optimization                           ; leaf_optimization
00000000000076ea         cmp        eax, 0x2
00000000000076ed         jne        loc_7584

00000000000076f3         movzx      eax, word [rbp+0x70]
00000000000076f7         jmp        loc_733c

                     loc_76fc:
00000000000076fc         mov        edi, dword [r12+0x2c]                       ; CODE XREF=rpl_fts_read+1301
0000000000007701         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xb15b
0000000000007708         call       diropen.isra.6                              ; diropen.isra.6
000000000000770d         test       eax, eax
000000000000770f         mov        dword [rbp+0x44], eax
0000000000007712         js         loc_7722

0000000000007714         or         word [rbp+0x72], 0x2
0000000000007719         movzx      eax, word [rbp+0x70]
000000000000771d         jmp        loc_732e

                     loc_7722:
0000000000007722         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1842
0000000000007727         mov        eax, dword [rax]
0000000000007729         mov        r11d, 0x7
000000000000772f         mov        word [rbp+0x70], r11w
0000000000007734         mov        dword [rbp+0x40], eax
0000000000007737         mov        qword [r12], rbp
000000000000773b         jmp        loc_717a

                     loc_7740:
0000000000007740         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fts_read+1762
0000000000007745         mov        eax, dword [rax]
0000000000007747         mov        edi, 0x7
000000000000774c         mov        word [rbx+0x70], di
0000000000007750         mov        dword [rbx+0x40], eax
0000000000007753         jmp        loc_7647
0000000000007758         align      32                                          ; End of unwind block (FDE at 0xc5ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_set:
0000000000007760         cmp        edx, 0x4                                    ; Begin of unwind block (FDE at 0xc650), CODE XREF=main+843, sub_2150+200, sub_2150+527
0000000000007763         ja         loc_7770

0000000000007765         mov        word [rsi+0x74], dx
0000000000007769         xor        eax, eax
000000000000776b         ret
                        ; endp
000000000000776c         align      16

                     loc_7770:
0000000000007770         sub        rsp, 0x8                                    ; CODE XREF=rpl_fts_set+3
0000000000007774         call       j___errno_location                          ; __errno_location
0000000000007779         mov        dword [rax], 0x16
000000000000777f         mov        eax, 0x1
0000000000007784         add        rsp, 0x8
0000000000007788         ret
                        ; endp
0000000000007789         align      16                                          ; End of unwind block (FDE at 0xc650)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fts_children:
0000000000007790         push       r14                                         ; Begin of unwind block (FDE at 0xc668)
0000000000007792         push       r13
0000000000007794         push       r12
0000000000007796         push       rbp
0000000000007797         mov        r12d, esi
000000000000779a         push       rbx
000000000000779b         mov        rbx, rdi
000000000000779e         call       j___errno_location                          ; __errno_location
00000000000077a3         test       r12d, 0xffffefff
00000000000077aa         mov        r13, rax
00000000000077ad         jne        loc_7898

00000000000077b3         mov        rbp, qword [rbx]
00000000000077b6         mov        dword [rax], 0x0
00000000000077bc         test       byte [rbx+0x49], 0x20
00000000000077c0         jne        loc_7840

00000000000077c2         movzx      eax, word [rbp+0x70]
00000000000077c6         cmp        ax, 0x9
00000000000077ca         je         loc_7830

00000000000077cc         cmp        ax, 0x1
00000000000077d0         jne        loc_7840

00000000000077d2         mov        rdi, qword [rbx+8]
00000000000077d6         test       rdi, rdi
00000000000077d9         je         loc_77e0

00000000000077db         call       fts_lfree                                   ; fts_lfree

                     loc_77e0:
00000000000077e0         cmp        r12d, 0x1000                                ; CODE XREF=rpl_fts_children+73
00000000000077e7         mov        r14d, 0x1
00000000000077ed         jne        loc_77fc

00000000000077ef         or         dword [rbx+0x48], 0x1000
00000000000077f6         mov        r14d, 0x2

                     loc_77fc:
00000000000077fc         cmp        qword [rbp+0x58], 0x0                       ; CODE XREF=rpl_fts_children+93
0000000000007801         jne        loc_7815

0000000000007803         mov        rax, qword [rbp+0x30]
0000000000007807         cmp        byte [rax], 0x2f
000000000000780a         je         loc_7815

000000000000780c         mov        esi, dword [rbx+0x48]
000000000000780f         test       sil, 0x4
0000000000007813         je         loc_7850

                     loc_7815:
0000000000007815         mov        esi, r14d                                   ; CODE XREF=rpl_fts_children+113, rpl_fts_children+122
0000000000007818         mov        rdi, rbx
000000000000781b         call       fts_build                                   ; fts_build
0000000000007820         mov        qword [rbx+8], rax

                     loc_7824:
0000000000007824         pop        rbx                                         ; CODE XREF=rpl_fts_children+256, rpl_fts_children+272, rpl_fts_children+307, rpl_fts_children+329
0000000000007825         pop        rbp
0000000000007826         pop        r12
0000000000007828         pop        r13
000000000000782a         pop        r14
000000000000782c         ret
                        ; endp
000000000000782d         align      16

                     loc_7830:
0000000000007830         pop        rbx                                         ; CODE XREF=rpl_fts_children+58
0000000000007831         mov        rax, qword [rbp+0x10]
0000000000007835         pop        rbp
0000000000007836         pop        r12
0000000000007838         pop        r13
000000000000783a         pop        r14
000000000000783c         ret
                        ; endp
000000000000783d         align      64

                     loc_7840:
0000000000007840         pop        rbx                                         ; CODE XREF=rpl_fts_children+48, rpl_fts_children+64
0000000000007841         xor        eax, eax
0000000000007843         pop        rbp
0000000000007844         pop        r12
0000000000007846         pop        r13
0000000000007848         pop        r14
000000000000784a         ret
                        ; endp
000000000000784b         align      16

                     loc_7850:
0000000000007850         mov        edi, dword [rbx+0x2c]                       ; CODE XREF=rpl_fts_children+131
0000000000007853         lea        rdx, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xb15b
000000000000785a         call       diropen.isra.6                              ; diropen.isra.6
000000000000785f         test       eax, eax
0000000000007861         mov        ebp, eax
0000000000007863         js         loc_78b9

0000000000007865         mov        esi, r14d
0000000000007868         mov        rdi, rbx
000000000000786b         call       fts_build                                   ; fts_build
0000000000007870         test       byte [rbx+0x49], 0x2
0000000000007874         mov        qword [rbx+8], rax
0000000000007878         jne        loc_78a8

000000000000787a         mov        edi, ebp                                    ; argument "__fd" for method j_fchdir
000000000000787c         call       j_fchdir                                    ; fchdir
0000000000007881         test       eax, eax
0000000000007883         jne        loc_78c8

0000000000007885         mov        edi, ebp                                    ; argument "__fd" for method j_close
0000000000007887         call       j_close                                     ; close

                     loc_788c:
000000000000788c         mov        rax, qword [rbx+8]                          ; CODE XREF=rpl_fts_children+295
0000000000007890         jmp        loc_7824
0000000000007892         align      8

                     loc_7898:
0000000000007898         mov        dword [rax], 0x16                           ; CODE XREF=rpl_fts_children+29
000000000000789e         xor        eax, eax
00000000000078a0         jmp        loc_7824
00000000000078a5         align      8

                     loc_78a8:
00000000000078a8         mov        edx, 0x1                                    ; CODE XREF=rpl_fts_children+232
00000000000078ad         mov        esi, ebp
00000000000078af         mov        rdi, rbx
00000000000078b2         call       cwd_advance_fd                              ; cwd_advance_fd
00000000000078b7         jmp        loc_788c

                     loc_78b9:
00000000000078b9         mov        qword [rbx+8], 0x0                          ; CODE XREF=rpl_fts_children+211
00000000000078c1         xor        eax, eax
00000000000078c3         jmp        loc_7824

                     loc_78c8:
00000000000078c8         mov        ebx, dword [r13]                            ; CODE XREF=rpl_fts_children+243
00000000000078cc         mov        edi, ebp                                    ; argument "__fd" for method j_close
00000000000078ce         call       j_close                                     ; close
00000000000078d3         xor        eax, eax
00000000000078d5         mov        dword [r13], ebx
00000000000078d9         jmp        loc_7824
00000000000078de         align      32                                          ; End of unwind block (FDE at 0xc668)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000078e0         push       r13                                         ; Begin of unwind block (FDE at 0xc6cc), CODE XREF=sub_36b0+534
00000000000078e2         push       r12
00000000000078e4         mov        r13, rsi
00000000000078e7         push       rbp
00000000000078e8         push       rbx
00000000000078e9         mov        rbx, rdi
00000000000078ec         mov        r12, rdx
00000000000078ef         sub        rsp, 0x18
00000000000078f3         mov        rax, qword [fs:0x28]
00000000000078fc         mov        qword [rsp+0x38+var_30], rax
0000000000007901         xor        eax, eax
0000000000007903         lea        rax, qword [rsp+0x38+var_34]
0000000000007908         test       rdi, rdi
000000000000790b         cmove      rbx, rax
000000000000790f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000007912         call       j_mbrtowc                                   ; mbrtowc
0000000000007917         cmp        rax, 0xfffffffffffffffd
000000000000791b         mov        rbp, rax
000000000000791e         jbe        loc_7940

0000000000007920         test       r12, r12
0000000000007923         je         loc_7940

0000000000007925         xor        edi, edi
0000000000007927         call       hard_locale                                 ; hard_locale
000000000000792c         test       al, al
000000000000792e         jne        loc_7940

0000000000007930         movzx      eax, byte [r13]
0000000000007935         mov        ebp, 0x1
000000000000793a         mov        dword [rbx], eax
000000000000793c         nop        dword [rax]

                     loc_7940:
0000000000007940         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000007945         xor        rdx, qword [fs:0x28]
000000000000794e         mov        rax, rbp
0000000000007951         jne        loc_795e

0000000000007953         add        rsp, 0x18
0000000000007957         pop        rbx
0000000000007958         pop        rbp
0000000000007959         pop        r12
000000000000795b         pop        r13
000000000000795d         ret
                        ; endp

                     loc_795e:
000000000000795e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000007963         align      16                                          ; End of unwind block (FDE at 0xc6cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_FF8: int8_t, -4088
        ;    var_1008: int32_t, -4104


                     getfileconat:
0000000000007970         push       r13                                         ; Begin of unwind block (FDE at 0xc70c), CODE XREF=sub_2150+406, lgetfileconat, setfileconat, lsetfileconat
0000000000007972         push       r12
0000000000007974         mov        r12, rsi
0000000000007977         push       rbp
0000000000007978         push       rbx
0000000000007979         mov        ebx, edi
000000000000797b         sub        rsp, 0xfe8
0000000000007982         mov        rax, qword [fs:0x28]
000000000000798b         mov        qword [rsp+0x1008+var_30], rax
0000000000007993         xor        eax, eax
0000000000007995         call       j___errno_location                          ; __errno_location
000000000000799a         cmp        ebx, 0xffffff9c
000000000000799d         mov        rbp, rax
00000000000079a0         je         loc_7a20

00000000000079a2         cmp        byte [r12], 0x2f
00000000000079a7         je         loc_7a20

00000000000079a9         lea        r13, qword [rsp+0x1008+var_FF8]
00000000000079ae         mov        rdx, r12
00000000000079b1         mov        esi, ebx
00000000000079b3         mov        rdi, r13
00000000000079b6         call       openat_proc_name                            ; openat_proc_name
00000000000079bb         test       rax, rax
00000000000079be         je         loc_79d4

00000000000079c0         cmp        rax, r13
00000000000079c3         mov        dword [rbp], 0x5f
00000000000079ca         je         loc_79d4

00000000000079cc         mov        rdi, rax
00000000000079cf         call       sub_1c90                                    ; sub_1c90

                     loc_79d4:
00000000000079d4         mov        r12, rsp                                    ; CODE XREF=getfileconat+78, getfileconat+90
00000000000079d7         mov        rdi, r12
00000000000079da         call       save_cwd                                    ; save_cwd
00000000000079df         test       eax, eax
00000000000079e1         jne        loc_7a7e

00000000000079e7         test       ebx, ebx
00000000000079e9         js         loc_79f0

00000000000079eb         cmp        dword [rsp+0x1008+var_1008], ebx
00000000000079ee         je         loc_7a60

                     loc_79f0:
00000000000079f0         mov        edi, ebx                                    ; argument "__fd" for method j_fchdir, CODE XREF=getfileconat+121
00000000000079f2         call       j_fchdir                                    ; fchdir
00000000000079f7         test       eax, eax
00000000000079f9         jne        loc_7a50

00000000000079fb         mov        dword [rbp], 0x5f
0000000000007a02         mov        rdi, r12
0000000000007a05         call       restore_cwd                                 ; restore_cwd
0000000000007a0a         test       eax, eax
0000000000007a0c         jne        loc_7a76

0000000000007a0e         mov        rdi, r12
0000000000007a11         call       free_cwd                                    ; free_cwd
0000000000007a16         nop        word [cs:rax+rax]

                     loc_7a20:
0000000000007a20         mov        dword [rbp], 0x5f                           ; CODE XREF=getfileconat+48, getfileconat+55

                     loc_7a27:
0000000000007a27         mov        rcx, qword [rsp+0x1008+var_30]              ; CODE XREF=getfileconat+238, getfileconat+255
0000000000007a2f         xor        rcx, qword [fs:0x28]
0000000000007a38         mov        eax, 0xffffffff
0000000000007a3d         jne        loc_7a71

0000000000007a3f         add        rsp, 0xfe8
0000000000007a46         pop        rbx
0000000000007a47         pop        rbp
0000000000007a48         pop        r12
0000000000007a4a         pop        r13
0000000000007a4c         ret
                        ; endp
0000000000007a4d         align      16

                     loc_7a50:
0000000000007a50         mov        ebx, dword [rbp]                            ; CODE XREF=getfileconat+137
0000000000007a53         mov        rdi, r12
0000000000007a56         call       free_cwd                                    ; free_cwd
0000000000007a5b         mov        dword [rbp], ebx
0000000000007a5e         jmp        loc_7a27

                     loc_7a60:
0000000000007a60         mov        rdi, r12                                    ; CODE XREF=getfileconat+126
0000000000007a63         call       free_cwd                                    ; free_cwd
0000000000007a68         mov        dword [rbp], 0x9
0000000000007a6f         jmp        loc_7a27

                     loc_7a71:
0000000000007a71         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=getfileconat+205
                        ; endp

                     loc_7a76:
0000000000007a76         mov        edi, dword [rbp]                            ; argument #1 for method openat_restore_fail, CODE XREF=getfileconat+156
0000000000007a79         call       openat_restore_fail                         ; openat_restore_fail
                        ; endp

                     loc_7a7e:
0000000000007a7e         mov        edi, dword [rbp]                            ; argument #1 for method openat_save_fail, CODE XREF=getfileconat+113
0000000000007a81         call       openat_save_fail                            ; openat_save_fail
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7a86:
0000000000007a86         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xc70c)
                     lgetfileconat:
0000000000007a90         jmp        getfileconat                                ; getfileconat, Begin of unwind block (FDE at 0xc748), CODE XREF=sub_2150+685
                        ; endp
0000000000007a95         align      32                                          ; End of unwind block (FDE at 0xc748)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setfileconat:
0000000000007aa0         jmp        getfileconat                                ; getfileconat, Begin of unwind block (FDE at 0xc75c), CODE XREF=main+1089
                        ; endp
0000000000007aa5         align      16                                          ; End of unwind block (FDE at 0xc75c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     lsetfileconat:
0000000000007ab0         jmp        getfileconat                                ; getfileconat, Begin of unwind block (FDE at 0xc770), CODE XREF=sub_2150+493
                        ; endp
0000000000007ab5         align      64                                          ; End of unwind block (FDE at 0xc770)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000007ac0         push       r12                                         ; Begin of unwind block (FDE at 0xc784), CODE XREF=close_stdout+13, close_stdout+51
0000000000007ac2         push       rbp
0000000000007ac3         mov        rbp, rdi
0000000000007ac6         push       rbx
0000000000007ac7         call       j___fpending                                ; __fpending
0000000000007acc         mov        ebx, dword [rbp]
0000000000007acf         mov        rdi, rbp
0000000000007ad2         mov        r12, rax
0000000000007ad5         call       rpl_fclose                                  ; rpl_fclose
0000000000007ada         and        ebx, 0x20
0000000000007add         test       ebx, ebx
0000000000007adf         jne        loc_7af8

0000000000007ae1         test       eax, eax
0000000000007ae3         je         loc_7aef

0000000000007ae5         test       r12, r12
0000000000007ae8         mov        eax, 0xffffffff
0000000000007aed         je         loc_7b28

                     loc_7aef:
0000000000007aef         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000007af0         pop        rbp
0000000000007af1         pop        r12
0000000000007af3         ret
                        ; endp
0000000000007af4         align      8

                     loc_7af8:
0000000000007af8         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000007afa         jne        loc_7b18

0000000000007afc         call       j___errno_location                          ; __errno_location
0000000000007b01         mov        dword [rax], 0x0
0000000000007b07         mov        eax, 0xffffffff
0000000000007b0c         pop        rbx
0000000000007b0d         pop        rbp
0000000000007b0e         pop        r12
0000000000007b10         ret
                        ; endp
0000000000007b11         align      8

                     loc_7b18:
0000000000007b18         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000007b19         mov        eax, 0xffffffff
0000000000007b1e         pop        rbp
0000000000007b1f         pop        r12
0000000000007b21         ret
                        ; endp
0000000000007b22         align      8

                     loc_7b28:
0000000000007b28         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000007b2d         cmp        dword [rax], 0x9
0000000000007b30         pop        rbx
0000000000007b31         pop        rbp
0000000000007b32         pop        r12
0000000000007b34         setne      al
0000000000007b37         movzx      eax, al
0000000000007b3a         neg        eax
0000000000007b3c         ret
                        ; endp
0000000000007b3d         align      64                                          ; End of unwind block (FDE at 0xc784)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check_init:
0000000000007b40         mov        qword [rdi+0x10], 0x0                       ; Begin of unwind block (FDE at 0xc7d4), CODE XREF=setup_dir.isra.4+87
0000000000007b48         mov        dword [rdi+0x18], 0x95f616
0000000000007b4f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cycle_check:
0000000000007b50         cmp        dword [rdi+0x18], 0x95f616                  ; End of unwind block (FDE at 0xc7d4), Begin of unwind block (FDE at 0xc7e8), CODE XREF=enter_dir.isra.10+136
0000000000007b57         jne        loc_7bb7

0000000000007b59         mov        rdx, qword [rdi+0x10]
0000000000007b5d         mov        rcx, qword [rsi+8]
0000000000007b61         test       rdx, rdx
0000000000007b64         je         loc_7b80

0000000000007b66         cmp        qword [rdi], rcx
0000000000007b69         je         loc_7b98

                     loc_7b6b:
0000000000007b6b         lea        r8, qword [rdx+1]                           ; CODE XREF=cycle_check+79
0000000000007b6f         xor        eax, eax
0000000000007b71         test       rdx, r8
0000000000007b74         mov        qword [rdi+0x10], r8
0000000000007b78         je         loc_7bb0

0000000000007b7a         ret
                        ; endp
0000000000007b7c         align      128

                     loc_7b80:
0000000000007b80         mov        qword [rdi+0x10], 0x1                       ; CODE XREF=cycle_check+20

                     loc_7b88:
0000000000007b88         mov        rax, qword [rsi]                            ; CODE XREF=cycle_check+101
0000000000007b8b         mov        qword [rdi], rcx
0000000000007b8e         mov        qword [rdi+8], rax
0000000000007b92         xor        eax, eax
0000000000007b94         ret
                        ; endp
0000000000007b95         align      8

                     loc_7b98:
0000000000007b98         mov        rax, qword [rdi+8]                          ; CODE XREF=cycle_check+25
0000000000007b9c         cmp        qword [rsi], rax
0000000000007b9f         jne        loc_7b6b

                     loc_7ba1:
0000000000007ba1         mov        eax, 0x1                                    ; CODE XREF=cycle_check+99
0000000000007ba6         ret
                        ; endp
0000000000007ba7         align      16

                     loc_7bb0:
0000000000007bb0         test       r8, r8                                      ; CODE XREF=cycle_check+40
0000000000007bb3         je         loc_7ba1

0000000000007bb5         jmp        loc_7b88

                     loc_7bb7:
0000000000007bb7         lea        rcx, qword [__PRETTY_FUNCTION__.3994]       ; argument "__function" for method j___assert_fail, "cycle_check", CODE XREF=cycle_check+7
0000000000007bbe         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/cycle-check.c"
0000000000007bc5         lea        rdi, qword [aStatemagic9827]                ; argument "__assertion" for method j___assert_fail, "state->magic == 9827862"
0000000000007bcc         sub        rsp, 0x8
0000000000007bd0         mov        edx, 0x3c                                   ; argument "__line" for method j___assert_fail
0000000000007bd5         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000007bda         align      32                                          ; End of unwind block (FDE at 0xc7e8)

                     open_safer:
0000000000007be0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xc804), CODE XREF=diropen.isra.6+35, save_cwd+26
0000000000007be4         mov        qword [rsp+0x58+var_28], rdx
0000000000007be9         xor        edx, edx
0000000000007beb         mov        rax, qword [fs:0x28]
0000000000007bf4         mov        qword [rsp+0x58+var_40], rax
0000000000007bf9         xor        eax, eax
0000000000007bfb         test       sil, 0x40
0000000000007bff         jne        loc_7c28

                     loc_7c01:
0000000000007c01         xor        eax, eax                                    ; CODE XREF=open_safer+103
0000000000007c03         call       j_open                                      ; open
0000000000007c08         mov        edi, eax
0000000000007c0a         call       fd_safer                                    ; fd_safer
0000000000007c0f         mov        rcx, qword [rsp+0x58+var_40]
0000000000007c14         xor        rcx, qword [fs:0x28]
0000000000007c1d         jne        loc_7c49

0000000000007c1f         add        rsp, 0x58
0000000000007c23         ret
                        ; endp
0000000000007c24         align      8

                     loc_7c28:
0000000000007c28         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
0000000000007c2d         mov        dword [rsp+0x58+var_58], 0x10
0000000000007c34         mov        edx, dword [rsp+0x58+var_28]
0000000000007c38         mov        qword [rsp+0x58+var_50], rax
0000000000007c3d         lea        rax, qword [rsp+0x58+var_38]
0000000000007c42         mov        qword [rsp+0x58+var_48], rax
0000000000007c47         jmp        loc_7c01

                     loc_7c49:
0000000000007c49         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
0000000000007c4e         align      16                                          ; End of unwind block (FDE at 0xc804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000007c50         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc824), CODE XREF=rpl_mbrtowc+71
0000000000007c54         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000007c56         call       j_setlocale                                 ; setlocale
0000000000007c5b         mov        rdx, rax
0000000000007c5e         mov        eax, 0x1
0000000000007c63         test       rdx, rdx
0000000000007c66         je         loc_7c85

0000000000007c68         lea        rdi, qword [__PRETTY_FUNCTION__.3994+12]    ; 0xb1dc
0000000000007c6f         mov        ecx, 0x2
0000000000007c74         mov        rsi, rdx
0000000000007c77         rep  cmpsb byte [rsi], byte [rdi]
0000000000007c79         seta       cl
0000000000007c7c         sbb        cl, 0x0
0000000000007c7f         xor        eax, eax
0000000000007c81         test       cl, cl
0000000000007c83         jne        loc_7c90

                     loc_7c85:
0000000000007c85         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000007c89         ret
                        ; endp
0000000000007c8a         align      16

                     loc_7c90:
0000000000007c90         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000007c97         mov        ecx, 0x6
0000000000007c9c         mov        rsi, rdx
0000000000007c9f         rep  cmpsb byte [rsi], byte [rdi]
0000000000007ca1         seta       al
0000000000007ca4         sbb        al, 0x0
0000000000007ca6         test       al, al
0000000000007ca8         setne      al
0000000000007cab         add        rsp, 0x8
0000000000007caf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
0000000000007cb0         cmp        rdi, 0xa                                    ; End of unwind block (FDE at 0xc824), Begin of unwind block (FDE at 0xc844), CODE XREF=hash_initialize+123, hash_rehash+123
0000000000007cb4         mov        eax, 0xa
0000000000007cb9         movabs     r9, 0xaaaaaaaaaaaaaaab
0000000000007cc3         cmovb      rdi, rax
0000000000007cc7         or         rdi, 0x1
0000000000007ccb         cmp        rdi, 0xffffffffffffffff
0000000000007ccf         je         loc_7d3f

0000000000007cd1         nop        dword [rax]

                     loc_7cd8:
0000000000007cd8         mov        rax, rdi                                    ; CODE XREF=next_prime+141
0000000000007cdb         mov        rcx, rdi
0000000000007cde         mul        r9
0000000000007ce1         mov        rax, rdx
0000000000007ce4         shr        rax, 0x1
0000000000007ce7         lea        rax, qword [rax+rax*2]
0000000000007ceb         sub        rcx, rax
0000000000007cee         cmp        rdi, 0x9
0000000000007cf2         mov        rax, rcx
0000000000007cf5         jbe        loc_7d30

0000000000007cf7         test       rcx, rcx
0000000000007cfa         je         loc_7d35

0000000000007cfc         mov        r8d, 0x10
0000000000007d02         mov        esi, 0x9
0000000000007d07         mov        ecx, 0x3
0000000000007d0c         jmp        loc_7d19
0000000000007d0e         align      16

                     loc_7d10:
0000000000007d10         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000007d14         test       rdx, rdx
0000000000007d17         je         loc_7d35

                     loc_7d19:
0000000000007d19         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
0000000000007d1d         xor        edx, edx
0000000000007d1f         mov        rax, rdi
0000000000007d22         div        rcx
0000000000007d25         add        rsi, r8
0000000000007d28         cmp        rsi, rdi
0000000000007d2b         mov        rax, rdx
0000000000007d2e         jb         loc_7d10

                     loc_7d30:
0000000000007d30         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000007d33         jne        loc_7d3f

                     loc_7d35:
0000000000007d35         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000007d39         cmp        rdi, 0xffffffffffffffff
0000000000007d3d         jne        loc_7cd8

                     loc_7d3f:
0000000000007d3f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000007d42         ret
                        ; endp
0000000000007d43         align      16                                          ; End of unwind block (FDE at 0xc844)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000007d50         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc858), DATA XREF=hash_initialize+4
0000000000007d53         xor        edx, edx
0000000000007d55         ror        rax, 0x3
0000000000007d59         div        rsi
0000000000007d5c         mov        rax, rdx
0000000000007d5f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
0000000000007d60         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0xc858), Begin of unwind block (FDE at 0xc86c), DATA XREF=hash_initialize+48
0000000000007d63         sete       al
0000000000007d66         ret
                        ; endp
0000000000007d67         align      16                                          ; End of unwind block (FDE at 0xc86c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
0000000000007d70         push       rbx                                         ; Begin of unwind block (FDE at 0xc880), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
0000000000007d71         mov        rbx, rdi
0000000000007d74         mov        rdi, rsi
0000000000007d77         mov        rsi, qword [rbx+0x10]
0000000000007d7b         call       qword [rbx+0x30]
0000000000007d7e         cmp        qword [rbx+0x10], rax
0000000000007d82         jbe        loc_7d8d

0000000000007d84         shl        rax, 0x4
0000000000007d88         add        rax, qword [rbx]
0000000000007d8b         pop        rbx
0000000000007d8c         ret
                        ; endp

                     loc_7d8d:
0000000000007d8d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
0000000000007d92         align      32                                          ; End of unwind block (FDE at 0xc880)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
0000000000007da0         push       r14                                         ; Begin of unwind block (FDE at 0xc89c), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
0000000000007da2         push       r13
0000000000007da4         mov        r14, rdx
0000000000007da7         push       r12
0000000000007da9         push       rbp
0000000000007daa         mov        r12, rdi
0000000000007dad         push       rbx
0000000000007dae         mov        rbp, rsi
0000000000007db1         mov        r13d, ecx
0000000000007db4         call       safe_hasher                                 ; safe_hasher
0000000000007db9         mov        qword [r14], rax
0000000000007dbc         mov        rsi, qword [rax]
0000000000007dbf         test       rsi, rsi
0000000000007dc2         je         loc_7eb0

0000000000007dc8         cmp        rsi, rbp
0000000000007dcb         mov        rbx, rax
0000000000007dce         je         loc_7e63

0000000000007dd4         mov        rdi, rbp
0000000000007dd7         call       qword [r12+0x38]
0000000000007ddc         test       al, al
0000000000007dde         jne        loc_7e60

0000000000007de4         mov        rax, qword [rbx+8]
0000000000007de8         test       rax, rax
0000000000007deb         je         loc_7eb0

0000000000007df1         mov        rsi, qword [rax]
0000000000007df4         cmp        rbp, rsi
0000000000007df7         jne        loc_7e19

0000000000007df9         jmp        loc_7e2c
0000000000007dfb         align      512

                     loc_7e00:
0000000000007e00         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
0000000000007e04         mov        rax, qword [rbx+8]
0000000000007e08         test       rax, rax
0000000000007e0b         je         loc_7eb0

0000000000007e11         mov        rsi, qword [rax]
0000000000007e14         cmp        rsi, rbp
0000000000007e17         je         loc_7e2c

                     loc_7e19:
0000000000007e19         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
0000000000007e1c         call       qword [r12+0x38]
0000000000007e21         test       al, al
0000000000007e23         je         loc_7e00

0000000000007e25         mov        rax, qword [rbx+8]
0000000000007e29         mov        rsi, qword [rax]

                     loc_7e2c:
0000000000007e2c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
0000000000007e2f         je         loc_7e4e

0000000000007e31         mov        rdx, qword [rax+8]
0000000000007e35         mov        qword [rbx+8], rdx
0000000000007e39         mov        qword [rax], 0x0
0000000000007e40         mov        rdx, qword [r12+0x48]
0000000000007e45         mov        qword [rax+8], rdx
0000000000007e49         mov        qword [r12+0x48], rax

                     loc_7e4e:
0000000000007e4e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
0000000000007e4f         mov        rax, rsi
0000000000007e52         pop        rbp
0000000000007e53         pop        r12
0000000000007e55         pop        r13
0000000000007e57         pop        r14
0000000000007e59         ret
                        ; endp
0000000000007e5a         align      32

                     loc_7e60:
0000000000007e60         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_7e63:
0000000000007e63         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
0000000000007e66         je         loc_7e4e

0000000000007e68         mov        rax, qword [rbx+8]
0000000000007e6c         test       rax, rax
0000000000007e6f         je         loc_7ea0

0000000000007e71         movdqu     xmm0, xmmword [rax]
0000000000007e75         movups     xmmword [rbx], xmm0
0000000000007e78         mov        qword [rax], 0x0
0000000000007e7f         mov        rdx, qword [r12+0x48]
0000000000007e84         mov        qword [rax+8], rdx
0000000000007e88         mov        qword [r12+0x48], rax
0000000000007e8d         mov        rax, rsi
0000000000007e90         pop        rbx
0000000000007e91         pop        rbp
0000000000007e92         pop        r12
0000000000007e94         pop        r13
0000000000007e96         pop        r14
0000000000007e98         ret
                        ; endp
0000000000007e99         align      32

                     loc_7ea0:
0000000000007ea0         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
0000000000007ea7         jmp        loc_7e4e
0000000000007ea9         align      16

                     loc_7eb0:
0000000000007eb0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
0000000000007eb2         pop        rbx
0000000000007eb3         mov        rax, rsi
0000000000007eb6         pop        rbp
0000000000007eb7         pop        r12
0000000000007eb9         pop        r13
0000000000007ebb         pop        r14
0000000000007ebd         ret
                        ; endp
0000000000007ebe         align      64                                          ; End of unwind block (FDE at 0xc89c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
0000000000007ec0         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xc8fc), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
0000000000007ec3         lea        rcx, qword [default_tuning]                 ; default_tuning
0000000000007eca         mov        eax, 0x1
0000000000007ecf         cmp        rdx, rcx
0000000000007ed2         je         loc_7f35

0000000000007ed4         movss      xmm0, dword [rdx+8]
0000000000007ed9         ucomiss    xmm0, dword [float_b274]                    ; float_b274
0000000000007ee0         jbe        loc_7f30

0000000000007ee2         movss      xmm1, dword [float_b278]                    ; float_b278
0000000000007eea         ucomiss    xmm1, xmm0
0000000000007eed         jbe        loc_7f30

0000000000007eef         movss      xmm1, dword [rdx+0xc]
0000000000007ef4         ucomiss    xmm1, dword [float_b27c]                    ; float_b27c
0000000000007efb         jbe        loc_7f30

0000000000007efd         movss      xmm1, dword [rdx]
0000000000007f01         ucomiss    xmm1, dword [float_b280]                    ; float_b280
0000000000007f08         jb         loc_7f30

0000000000007f0a         addss      xmm1, dword [float_b274]                    ; float_b274
0000000000007f12         movss      xmm2, dword [rdx+4]
0000000000007f17         ucomiss    xmm2, xmm1
0000000000007f1a         jbe        loc_7f30

0000000000007f1c         movss      xmm3, dword [float_b284]                    ; float_b284
0000000000007f24         ucomiss    xmm3, xmm2
0000000000007f27         jb         loc_7f30

0000000000007f29         ucomiss    xmm0, xmm1
0000000000007f2c         ja         loc_7f35

0000000000007f2e         nop

                     loc_7f30:
0000000000007f30         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000007f33         xor        eax, eax

                     loc_7f35:
0000000000007f35         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000007f37         align      64                                          ; End of unwind block (FDE at 0xc8fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000007f40         push       r15                                         ; Begin of unwind block (FDE at 0xc910), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000007f42         push       r14
0000000000007f44         push       r13
0000000000007f46         push       r12
0000000000007f48         push       rbp
0000000000007f49         push       rbx
0000000000007f4a         sub        rsp, 0x8
0000000000007f4e         mov        r12, qword [rsi]
0000000000007f51         cmp        r12, qword [rsi+8]
0000000000007f55         jae        loc_8038

0000000000007f5b         mov        rbp, rdi
0000000000007f5e         mov        r13, rsi
0000000000007f61         mov        r14d, edx
0000000000007f64         nop        dword [rax]

                     loc_7f68:
0000000000007f68         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
0000000000007f6c         test       r15, r15
0000000000007f6f         je         loc_802a

0000000000007f75         mov        rbx, qword [r12+8]
0000000000007f7a         test       rbx, rbx
0000000000007f7d         jne        loc_7f9c

0000000000007f7f         jmp        loc_7fdb
0000000000007f81         align      8

                     loc_7f88:
0000000000007f88         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
0000000000007f8c         test       rdx, rdx
0000000000007f8f         mov        qword [rbx+8], rcx
0000000000007f93         mov        qword [rax+8], rbx
0000000000007f97         mov        rbx, rdx
0000000000007f9a         je         loc_7fd7

                     loc_7f9c:
0000000000007f9c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
0000000000007f9f         mov        rdi, rbp
0000000000007fa2         mov        rsi, r15
0000000000007fa5         call       safe_hasher                                 ; safe_hasher
0000000000007faa         cmp        qword [rax], 0x0
0000000000007fae         mov        rdx, qword [rbx+8]
0000000000007fb2         jne        loc_7f88

0000000000007fb4         mov        qword [rax], r15
0000000000007fb7         add        qword [rbp+0x18], 0x1
0000000000007fbc         test       rdx, rdx
0000000000007fbf         mov        qword [rbx], 0x0
0000000000007fc6         mov        rax, qword [rbp+0x48]
0000000000007fca         mov        qword [rbx+8], rax
0000000000007fce         mov        qword [rbp+0x48], rbx
0000000000007fd2         mov        rbx, rdx
0000000000007fd5         jne        loc_7f9c

                     loc_7fd7:
0000000000007fd7         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_7fdb:
0000000000007fdb         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
0000000000007fde         mov        qword [r12+8], 0x0
0000000000007fe7         jne        loc_802a

0000000000007fe9         mov        rsi, r15
0000000000007fec         mov        rdi, rbp
0000000000007fef         call       safe_hasher                                 ; safe_hasher
0000000000007ff4         cmp        qword [rax], 0x0
0000000000007ff8         mov        rbx, rax
0000000000007ffb         je         loc_8050

0000000000007ffd         mov        rax, qword [rbp+0x48]
0000000000008001         test       rax, rax
0000000000008004         je         loc_8060

0000000000008006         mov        rdx, qword [rax+8]
000000000000800a         mov        qword [rbp+0x48], rdx

                     loc_800e:
000000000000800e         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
0000000000008012         mov        qword [rax], r15
0000000000008015         mov        qword [rax+8], rdx
0000000000008019         mov        qword [rbx+8], rax

                     loc_801d:
000000000000801d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
0000000000008025         sub        qword [r13+0x18], 0x1

                     loc_802a:
000000000000802a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000802e         cmp        qword [r13+8], r12
0000000000008032         ja         loc_7f68

                     loc_8038:
0000000000008038         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000803c         mov        eax, 0x1
0000000000008041         pop        rbx
0000000000008042         pop        rbp
0000000000008043         pop        r12
0000000000008045         pop        r13
0000000000008047         pop        r14
0000000000008049         pop        r15
000000000000804b         ret
                        ; endp
000000000000804c         align      16

                     loc_8050:
0000000000008050         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000008053         add        qword [rbp+0x18], 0x1
0000000000008058         jmp        loc_801d
000000000000805a         align      32

                     loc_8060:
0000000000008060         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000008065         call       j_malloc                                    ; malloc
000000000000806a         test       rax, rax
000000000000806d         jne        loc_800e

000000000000806f         add        rsp, 0x8
0000000000008073         xor        eax, eax
0000000000008075         pop        rbx
0000000000008076         pop        rbp
0000000000008077         pop        r12
0000000000008079         pop        r13
000000000000807b         pop        r14
000000000000807d         pop        r15
000000000000807f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000008080         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0xc910), Begin of unwind block (FDE at 0xc970)
0000000000008084         ret
                        ; endp
0000000000008085         align      16                                          ; End of unwind block (FDE at 0xc970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000008090         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0xc984)
0000000000008094         ret
                        ; endp
0000000000008095         align      32                                          ; End of unwind block (FDE at 0xc984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
00000000000080a0         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0xc998)
00000000000080a4         ret
                        ; endp
00000000000080a5         align      16                                          ; End of unwind block (FDE at 0xc998)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
00000000000080b0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0xc9ac)
00000000000080b3         mov        rdi, qword [rdi+8]
00000000000080b7         xor        eax, eax
00000000000080b9         cmp        rsi, rdi
00000000000080bc         jae        loc_80f7

00000000000080be         nop

                     loc_80c0:
00000000000080c0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
00000000000080c4         je         loc_80ec

00000000000080c6         mov        rdx, qword [rsi+8]
00000000000080ca         mov        ecx, 0x1
00000000000080cf         test       rdx, rdx
00000000000080d2         je         loc_80e5

00000000000080d4         nop        dword [rax]

                     loc_80d8:
00000000000080d8         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
00000000000080dc         add        rcx, 0x1
00000000000080e0         test       rdx, rdx
00000000000080e3         jne        loc_80d8

                     loc_80e5:
00000000000080e5         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
00000000000080e8         cmovb      rax, rcx

                     loc_80ec:
00000000000080ec         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
00000000000080f0         cmp        rsi, rdi
00000000000080f3         jb         loc_80c0

00000000000080f5         ret
                        ; endp

                     loc_80f7:
00000000000080f7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
00000000000080f9         align      256                                         ; End of unwind block (FDE at 0xc9ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
0000000000008100         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0xc9c0)
0000000000008103         mov        r8, qword [rdi+8]
0000000000008107         xor        edx, edx
0000000000008109         xor        esi, esi
000000000000810b         cmp        rcx, r8
000000000000810e         jae        loc_8146

                     loc_8110:
0000000000008110         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
0000000000008114         je         loc_813d

0000000000008116         mov        rax, qword [rcx+8]
000000000000811a         add        rsi, 0x1
000000000000811e         add        rdx, 0x1
0000000000008122         test       rax, rax
0000000000008125         je         loc_813d

0000000000008127         nop        word [rax+rax]

                     loc_8130:
0000000000008130         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
0000000000008134         add        rdx, 0x1
0000000000008138         test       rax, rax
000000000000813b         jne        loc_8130

                     loc_813d:
000000000000813d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
0000000000008141         cmp        rcx, r8
0000000000008144         jb         loc_8110

                     loc_8146:
0000000000008146         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
0000000000008148         cmp        qword [rdi+0x18], rsi
000000000000814c         je         loc_8150

000000000000814e         ret
                        ; endp

                     loc_8150:
0000000000008150         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000008154         sete       al
0000000000008157         ret
                        ; endp
0000000000008158         align      32                                          ; End of unwind block (FDE at 0xc9c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000008160         push       r13                                         ; Begin of unwind block (FDE at 0xc9d4)
0000000000008162         push       r12
0000000000008164         mov        r12, rsi
0000000000008167         push       rbp
0000000000008168         push       rbx
0000000000008169         xor        ebx, ebx
000000000000816b         sub        rsp, 0x8
000000000000816f         mov        rsi, qword [rdi]
0000000000008172         mov        rcx, qword [rdi+0x20]
0000000000008176         mov        rbp, qword [rdi+0x10]
000000000000817a         mov        r13, qword [rdi+0x18]
000000000000817e         mov        rdi, qword [rdi+8]
0000000000008182         cmp        rsi, rdi
0000000000008185         jae        loc_81c5

0000000000008187         nop        word [rax+rax]

                     loc_8190:
0000000000008190         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000008194         je         loc_81bc

0000000000008196         mov        rax, qword [rsi+8]
000000000000819a         mov        edx, 0x1
000000000000819f         test       rax, rax
00000000000081a2         je         loc_81b5

00000000000081a4         nop        dword [rax]

                     loc_81a8:
00000000000081a8         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
00000000000081ac         add        rdx, 0x1
00000000000081b0         test       rax, rax
00000000000081b3         jne        loc_81a8

                     loc_81b5:
00000000000081b5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
00000000000081b8         cmovb      rbx, rdx

                     loc_81bc:
00000000000081bc         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
00000000000081c0         cmp        rsi, rdi
00000000000081c3         jb         loc_8190

                     loc_81c5:
00000000000081c5         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
00000000000081cc         mov        esi, 0x1
00000000000081d1         mov        rdi, r12
00000000000081d4         xor        eax, eax
00000000000081d6         call       j___fprintf_chk                             ; __fprintf_chk
00000000000081db         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
00000000000081e2         xor        eax, eax
00000000000081e4         mov        rcx, rbp
00000000000081e7         mov        esi, 0x1
00000000000081ec         mov        rdi, r12
00000000000081ef         call       j___fprintf_chk                             ; __fprintf_chk
00000000000081f4         test       r13, r13
00000000000081f7         js         loc_8260

00000000000081f9         pxor       xmm0, xmm0
00000000000081fd         test       rbp, rbp
0000000000008200         cvtsi2sd   xmm0, r13
0000000000008205         mulsd      xmm0, qword [float_b290+8]                  ; 0xb298
000000000000820d         js         loc_8289

                     loc_820f:
000000000000820f         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
0000000000008213         cvtsi2sd   xmm1, rbp

                     loc_8218:
0000000000008218         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000821c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
0000000000008223         mov        rcx, r13
0000000000008226         mov        rdi, r12
0000000000008229         mov        esi, 0x1
000000000000822e         mov        eax, 0x1
0000000000008233         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008238         add        rsp, 0x8
000000000000823c         mov        rcx, rbx
000000000000823f         mov        rdi, r12
0000000000008242         pop        rbx
0000000000008243         pop        rbp
0000000000008244         pop        r12
0000000000008246         pop        r13
0000000000008248         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000824f         mov        esi, 0x1
0000000000008254         xor        eax, eax
0000000000008256         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000825b         align      32

                     loc_8260:
0000000000008260         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000008263         mov        rdx, r13
0000000000008266         pxor       xmm0, xmm0
000000000000826a         shr        rax, 0x1
000000000000826d         and        edx, 0x1
0000000000008270         or         rax, rdx
0000000000008273         test       rbp, rbp
0000000000008276         cvtsi2sd   xmm0, rax
000000000000827b         addsd      xmm0, xmm0
000000000000827f         mulsd      xmm0, qword [float_b290+8]                  ; 0xb298
0000000000008287         jns        loc_820f

                     loc_8289:
0000000000008289         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000828c         pxor       xmm1, xmm1
0000000000008290         shr        rax, 0x1
0000000000008293         and        ebp, 0x1
0000000000008296         or         rax, rbp
0000000000008299         cvtsi2sd   xmm1, rax
000000000000829e         addsd      xmm1, xmm1
00000000000082a2         jmp        loc_8218
00000000000082a7         align      16                                          ; End of unwind block (FDE at 0xc9d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
00000000000082b0         push       r12                                         ; Begin of unwind block (FDE at 0xca10), CODE XREF=filesystem_type+71
00000000000082b2         push       rbp
00000000000082b3         mov        r12, rdi
00000000000082b6         push       rbx
00000000000082b7         mov        rbp, rsi
00000000000082ba         call       safe_hasher                                 ; safe_hasher
00000000000082bf         mov        rsi, qword [rax]
00000000000082c2         test       rsi, rsi
00000000000082c5         je         loc_82ed

00000000000082c7         mov        rbx, rax
00000000000082ca         jmp        loc_82d3
00000000000082cc         align      16

                     loc_82d0:
00000000000082d0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_82d3:
00000000000082d3         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
00000000000082d6         je         loc_82ef

00000000000082d8         mov        rdi, rbp
00000000000082db         call       qword [r12+0x38]
00000000000082e0         test       al, al
00000000000082e2         jne        loc_8300

00000000000082e4         mov        rbx, qword [rbx+8]
00000000000082e8         test       rbx, rbx
00000000000082eb         jne        loc_82d0

                     loc_82ed:
00000000000082ed         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_82ef:
00000000000082ef         pop        rbx                                         ; CODE XREF=hash_lookup+38
00000000000082f0         mov        rax, rsi
00000000000082f3         pop        rbp
00000000000082f4         pop        r12
00000000000082f6         ret
                        ; endp
00000000000082f7         align      256

                     loc_8300:
0000000000008300         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
0000000000008303         pop        rbx
0000000000008304         pop        rbp
0000000000008305         mov        rax, rsi
0000000000008308         pop        r12
000000000000830a         ret
                        ; endp
000000000000830b         align      16                                          ; End of unwind block (FDE at 0xca10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
0000000000008310         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0xca48)
0000000000008315         je         loc_8343

0000000000008317         mov        rdx, qword [rdi]
000000000000831a         mov        rcx, qword [rdi+8]
000000000000831e         cmp        rdx, rcx
0000000000008321         jae        loc_8348

0000000000008323         mov        rax, qword [rdx]
0000000000008326         test       rax, rax
0000000000008329         jne        loc_8346

000000000000832b         nop        dword [rax+rax]

                     loc_8330:
0000000000008330         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
0000000000008334         cmp        rdx, rcx
0000000000008337         jae        loc_8348

0000000000008339         mov        rax, qword [rdx]
000000000000833c         test       rax, rax
000000000000833f         je         loc_8330

0000000000008341         ret
                        ; endp

                     loc_8343:
0000000000008343         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
0000000000008345         ret
                        ; endp

                     loc_8346:
0000000000008346         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_8348:
0000000000008348         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000834c         call       j_abort                                     ; abort
                        ; endp
0000000000008351         align      32                                          ; End of unwind block (FDE at 0xca48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000008360         push       rbp                                         ; Begin of unwind block (FDE at 0xca5c)
0000000000008361         push       rbx
0000000000008362         mov        rbp, rdi
0000000000008365         mov        rbx, rsi
0000000000008368         sub        rsp, 0x8
000000000000836c         call       safe_hasher                                 ; safe_hasher
0000000000008371         mov        rdx, rax
0000000000008374         mov        rcx, rax
0000000000008377         mov        rax, qword [rdx]
000000000000837a         mov        rdx, qword [rdx+8]
000000000000837e         cmp        rax, rbx
0000000000008381         je         loc_8399

0000000000008383         nop        dword [rax+rax]

                     loc_8388:
0000000000008388         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000838b         je         loc_839e

000000000000838d         mov        rax, qword [rdx]
0000000000008390         mov        rdx, qword [rdx+8]
0000000000008394         cmp        rax, rbx
0000000000008397         jne        loc_8388

                     loc_8399:
0000000000008399         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000839c         jne        loc_83c8

                     loc_839e:
000000000000839e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
00000000000083a2         jmp        loc_83b0
00000000000083a4         align      8

                     loc_83a8:
00000000000083a8         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
00000000000083ab         test       rax, rax
00000000000083ae         jne        loc_83bb

                     loc_83b0:
00000000000083b0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
00000000000083b4         cmp        rdx, rcx
00000000000083b7         ja         loc_83a8

00000000000083b9         xor        eax, eax

                     loc_83bb:
00000000000083bb         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
00000000000083bf         pop        rbx
00000000000083c0         pop        rbp
00000000000083c1         ret
                        ; endp
00000000000083c2         align      8

                     loc_83c8:
00000000000083c8         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
00000000000083cb         add        rsp, 0x8
00000000000083cf         pop        rbx
00000000000083d0         pop        rbp
00000000000083d1         ret
                        ; endp
00000000000083d2         align      32                                          ; End of unwind block (FDE at 0xca5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
00000000000083e0         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0xca90)
00000000000083e3         cmp        qword [rdi+8], r9
00000000000083e7         jbe        loc_8442

00000000000083e9         xor        r8d, r8d

                     loc_83ec:
00000000000083ec         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
00000000000083ef         test       rcx, rcx
00000000000083f2         je         loc_842d

00000000000083f4         cmp        rdx, r8
00000000000083f7         jbe        loc_8437

00000000000083f9         mov        qword [rsi+r8*8], rcx
00000000000083fd         mov        rcx, qword [r9+8]
0000000000008401         lea        rax, qword [r8+1]
0000000000008405         test       rcx, rcx
0000000000008408         je         loc_842a

000000000000840a         nop        word [rax+rax]

                     loc_8410:
0000000000008410         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
0000000000008413         je         loc_8440

0000000000008415         mov        r8, qword [rcx]
0000000000008418         add        rax, 0x1
000000000000841c         mov        qword [rsi+rax*8-8], r8
0000000000008421         mov        rcx, qword [rcx+8]
0000000000008425         test       rcx, rcx
0000000000008428         jne        loc_8410

                     loc_842a:
000000000000842a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_842d:
000000000000842d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
0000000000008431         cmp        qword [rdi+8], r9
0000000000008435         ja         loc_83ec

                     loc_8437:
0000000000008437         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
000000000000843a         ret
                        ; endp
000000000000843b         align      64

                     loc_8440:
0000000000008440         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_8442:
0000000000008442         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
0000000000008444         ret
                        ; endp
0000000000008445         align      16                                          ; End of unwind block (FDE at 0xca90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000008450         push       r15                                         ; Begin of unwind block (FDE at 0xcaa4)
0000000000008452         push       r14
0000000000008454         push       r13
0000000000008456         push       r12
0000000000008458         push       rbp
0000000000008459         push       rbx
000000000000845a         sub        rsp, 0x8
000000000000845e         mov        r14, qword [rdi]
0000000000008461         cmp        qword [rdi+8], r14
0000000000008465         jbe        loc_84b6

0000000000008467         mov        r13, rdx
000000000000846a         mov        r12, rsi
000000000000846d         mov        r15, rdi
0000000000008470         xor        ebp, ebp

                     loc_8472:
0000000000008472         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000008475         test       rdi, rdi
0000000000008478         je         loc_849a

000000000000847a         mov        rbx, r14
000000000000847d         jmp        loc_8483
000000000000847f         align      128

                     loc_8480:
0000000000008480         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_8483:
0000000000008483         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
0000000000008486         call       r12
0000000000008489         test       al, al
000000000000848b         je         loc_84a4

000000000000848d         mov        rbx, qword [rbx+8]
0000000000008491         add        rbp, 0x1
0000000000008495         test       rbx, rbx
0000000000008498         jne        loc_8480

                     loc_849a:
000000000000849a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
000000000000849e         cmp        qword [r15+8], r14
00000000000084a2         ja         loc_8472

                     loc_84a4:
00000000000084a4         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
00000000000084a8         mov        rax, rbp
00000000000084ab         pop        rbx
00000000000084ac         pop        rbp
00000000000084ad         pop        r12
00000000000084af         pop        r13
00000000000084b1         pop        r14
00000000000084b3         pop        r15
00000000000084b5         ret
                        ; endp

                     loc_84b6:
00000000000084b6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
00000000000084b8         jmp        loc_84a4
00000000000084ba         align      64                                          ; End of unwind block (FDE at 0xcaa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
00000000000084c0         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0xcaf0)
00000000000084c3         xor        edx, edx
00000000000084c5         test       cl, cl
00000000000084c7         je         loc_84ed

00000000000084c9         nop        dword [rax]

                     loc_84d0:
00000000000084d0         mov        rax, rdx                                    ; CODE XREF=hash_string+43
00000000000084d3         add        rdi, 0x1
00000000000084d7         shl        rax, 0x5
00000000000084db         sub        rax, rdx
00000000000084de         xor        edx, edx
00000000000084e0         add        rax, rcx
00000000000084e3         movzx      ecx, byte [rdi]
00000000000084e6         div        rsi
00000000000084e9         test       cl, cl
00000000000084eb         jne        loc_84d0

                     loc_84ed:
00000000000084ed         mov        rax, rdx                                    ; CODE XREF=hash_string+7
00000000000084f0         ret
                        ; endp
00000000000084f1         align      256                                         ; End of unwind block (FDE at 0xcaf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
0000000000008500         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0xcb04)
000000000000850a         mov        byte [rdi+0x10], 0x0
000000000000850e         mov        qword [rdi], rax
0000000000008511         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000851b         mov        qword [rdi+8], rax
000000000000851f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
0000000000008520         push       r15                                         ; End of unwind block (FDE at 0xcb04), Begin of unwind block (FDE at 0xcb18), CODE XREF=filesystem_type+124, setup_dir.isra.4+40
0000000000008522         push       r14
0000000000008524         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000852b         push       r13
000000000000852d         push       r12
000000000000852f         mov        r12, rdx
0000000000008532         push       rbp
0000000000008533         push       rbx
0000000000008534         mov        r13, rcx
0000000000008537         mov        rbp, rdi
000000000000853a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
000000000000853f         mov        r15, rsi
0000000000008542         sub        rsp, 0x8
0000000000008546         test       rdx, rdx
0000000000008549         mov        r14, r8
000000000000854c         cmove      r12, rax
0000000000008550         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000008557         test       rcx, rcx
000000000000855a         cmove      r13, rax
000000000000855e         call       j_malloc                                    ; malloc
0000000000008563         test       rax, rax
0000000000008566         mov        rbx, rax
0000000000008569         je         loc_861a

000000000000856f         test       r15, r15
0000000000008572         lea        rdi, qword [rax+0x28]
0000000000008576         je         loc_8630

000000000000857c         mov        qword [rax+0x28], r15
0000000000008580         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008585         test       al, al
0000000000008587         je         loc_8610

000000000000858d         cmp        byte [r15+0x10], 0x0
0000000000008592         je         loc_8690

                     loc_8598:
0000000000008598         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
000000000000859b         call       next_prime                                  ; next_prime
00000000000085a0         mov        edx, 0x8
00000000000085a5         mov        rbp, rax
00000000000085a8         xor        ecx, ecx
00000000000085aa         mov        rax, rdx
00000000000085ad         mul        rbp
00000000000085b0         jo         loc_86ca

                     loc_85b6:
00000000000085b6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
00000000000085b9         js         loc_8610

00000000000085bb         test       rcx, rcx
00000000000085be         jne        loc_8610

00000000000085c0         test       rbp, rbp
00000000000085c3         mov        qword [rbx+0x10], rbp
00000000000085c7         je         loc_8610

00000000000085c9         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
00000000000085ce         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
00000000000085d1         call       j_calloc                                    ; calloc
00000000000085d6         test       rax, rax
00000000000085d9         mov        qword [rbx], rax
00000000000085dc         je         loc_8610

00000000000085de         shl        rbp, 0x4
00000000000085e2         mov        qword [rbx+0x18], 0x0
00000000000085ea         mov        qword [rbx+0x20], 0x0
00000000000085f2         add        rbp, rax
00000000000085f5         mov        qword [rbx+0x30], r12
00000000000085f9         mov        qword [rbx+0x38], r13
00000000000085fd         mov        qword [rbx+8], rbp
0000000000008601         mov        qword [rbx+0x40], r14
0000000000008605         mov        qword [rbx+0x48], 0x0
000000000000860d         jmp        loc_861a
000000000000860f         align      16

                     loc_8610:
0000000000008610         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
0000000000008613         xor        ebx, ebx
0000000000008615         call       sub_1c90                                    ; sub_1c90

                     loc_861a:
000000000000861a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000861e         mov        rax, rbx
0000000000008621         pop        rbx
0000000000008622         pop        rbp
0000000000008623         pop        r12
0000000000008625         pop        r13
0000000000008627         pop        r14
0000000000008629         pop        r15
000000000000862b         ret
                        ; endp
000000000000862c         align      16

                     loc_8630:
0000000000008630         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
0000000000008637         mov        qword [rbx+0x28], rax
000000000000863b         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008640         test       al, al
0000000000008642         movss      xmm1, dword [float_b288]                    ; float_b288
000000000000864a         je         loc_8610

000000000000864c         test       rbp, rbp
000000000000864f         js         loc_869b

                     loc_8651:
0000000000008651         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000008655         cvtsi2ss   xmm0, rbp

                     loc_865a:
000000000000865a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000865e         ucomiss    xmm0, dword [float_b28c]                    ; float_b28c
0000000000008665         jae        loc_8610

0000000000008667         ucomiss    xmm0, dword [float_b290]                    ; float_b290
000000000000866e         jb         loc_86c0

0000000000008670         subss      xmm0, dword [float_b290]                    ; float_b290
0000000000008678         movabs     rax, 0x8000000000000000
0000000000008682         cvttss2si  rbp, xmm0
0000000000008687         xor        rbp, rax
000000000000868a         jmp        loc_8598
000000000000868f         align      16

                     loc_8690:
0000000000008690         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
0000000000008693         movss      xmm1, dword [r15+8]
0000000000008699         jns        loc_8651

                     loc_869b:
000000000000869b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
000000000000869e         pxor       xmm0, xmm0
00000000000086a2         shr        rax, 0x1
00000000000086a5         and        ebp, 0x1
00000000000086a8         or         rax, rbp
00000000000086ab         cvtsi2ss   xmm0, rax
00000000000086b0         addss      xmm0, xmm0
00000000000086b4         jmp        loc_865a
00000000000086b6         align      64

                     loc_86c0:
00000000000086c0         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
00000000000086c5         jmp        loc_8598

                     loc_86ca:
00000000000086ca         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
00000000000086cf         jmp        loc_85b6
00000000000086d4         align      32                                          ; End of unwind block (FDE at 0xcb18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
00000000000086e0         push       r12                                         ; Begin of unwind block (FDE at 0xcb64)
00000000000086e2         push       rbp
00000000000086e3         mov        rbp, rdi
00000000000086e6         push       rbx
00000000000086e7         mov        r12, qword [rdi]
00000000000086ea         cmp        r12, qword [rdi+8]
00000000000086ee         jae        loc_875b

                     loc_86f0:
00000000000086f0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
00000000000086f5         je         loc_8751

00000000000086f7         mov        rbx, qword [r12+8]
00000000000086fc         mov        rax, qword [rbp+0x40]
0000000000008700         test       rbx, rbx
0000000000008703         je         loc_8735

0000000000008705         nop        dword [rax]

                     loc_8708:
0000000000008708         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000870b         je         loc_8716

000000000000870d         mov        rdi, qword [rbx]
0000000000008710         call       rax
0000000000008712         mov        rax, qword [rbp+0x40]

                     loc_8716:
0000000000008716         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000871a         mov        rcx, qword [rbp+0x48]
000000000000871e         mov        qword [rbx], 0x0
0000000000008725         test       rdx, rdx
0000000000008728         mov        qword [rbx+8], rcx
000000000000872c         mov        qword [rbp+0x48], rbx
0000000000008730         mov        rbx, rdx
0000000000008733         jne        loc_8708

                     loc_8735:
0000000000008735         test       rax, rax                                    ; CODE XREF=hash_clear+35
0000000000008738         je         loc_8740

000000000000873a         mov        rdi, qword [r12]
000000000000873e         call       rax

                     loc_8740:
0000000000008740         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
0000000000008748         mov        qword [r12+8], 0x0

                     loc_8751:
0000000000008751         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000008755         cmp        qword [rbp+8], r12
0000000000008759         ja         loc_86f0

                     loc_875b:
000000000000875b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
0000000000008763         mov        qword [rbp+0x20], 0x0
000000000000876b         pop        rbx
000000000000876c         pop        rbp
000000000000876d         pop        r12
000000000000876f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
0000000000008770         push       r12                                         ; End of unwind block (FDE at 0xcb64), Begin of unwind block (FDE at 0xcb90), CODE XREF=rpl_fts_close+154, rpl_fts_close+177, rpl_fts_read+713
0000000000008772         push       rbp
0000000000008773         mov        r12, rdi
0000000000008776         push       rbx
0000000000008777         cmp        qword [rdi+0x40], 0x0
000000000000877c         mov        rbp, qword [rdi]
000000000000877f         mov        rax, qword [rdi+8]
0000000000008783         je         loc_87d3

0000000000008785         cmp        qword [rdi+0x20], 0x0
000000000000878a         je         loc_87d3

000000000000878c         cmp        rbp, rax
000000000000878f         jae        loc_880c

0000000000008791         nop        dword [rax]

                     loc_8798:
0000000000008798         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
000000000000879c         test       rdi, rdi
000000000000879f         je         loc_87c6

00000000000087a1         mov        rbx, rbp
00000000000087a4         jmp        loc_87b3
00000000000087a6         align      16

                     loc_87b0:
00000000000087b0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_87b3:
00000000000087b3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
00000000000087b8         mov        rbx, qword [rbx+8]
00000000000087bc         test       rbx, rbx
00000000000087bf         jne        loc_87b0

00000000000087c1         mov        rax, qword [r12+8]

                     loc_87c6:
00000000000087c6         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
00000000000087ca         cmp        rax, rbp
00000000000087cd         ja         loc_8798

00000000000087cf         mov        rbp, qword [r12]

                     loc_87d3:
00000000000087d3         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
00000000000087d6         jae        loc_880c

00000000000087d8         nop        dword [rax+rax]

                     loc_87e0:
00000000000087e0         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
00000000000087e4         test       rdi, rdi
00000000000087e7         je         loc_8801

00000000000087e9         nop        dword [rax]

                     loc_87f0:
00000000000087f0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
00000000000087f4         call       sub_1c90                                    ; sub_1c90
00000000000087f9         test       rbx, rbx
00000000000087fc         mov        rdi, rbx
00000000000087ff         jne        loc_87f0

                     loc_8801:
0000000000008801         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
0000000000008805         cmp        qword [r12+8], rbp
000000000000880a         ja         loc_87e0

                     loc_880c:
000000000000880c         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
0000000000008811         test       rdi, rdi
0000000000008814         je         loc_8831

0000000000008816         nop        word [cs:rax+rax]

                     loc_8820:
0000000000008820         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
0000000000008824         call       sub_1c90                                    ; sub_1c90
0000000000008829         test       rbx, rbx
000000000000882c         mov        rdi, rbx
000000000000882f         jne        loc_8820

                     loc_8831:
0000000000008831         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
0000000000008835         call       sub_1c90                                    ; sub_1c90
000000000000883a         pop        rbx
000000000000883b         mov        rdi, r12
000000000000883e         pop        rbp
000000000000883f         pop        r12
0000000000008841         jmp        sub_1c90                                    ; sub_1c90
                        ; endp
0000000000008846         align      16                                          ; End of unwind block (FDE at 0xcb90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000008850         push       r12                                         ; Begin of unwind block (FDE at 0xcbbc), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000008852         push       rbp
0000000000008853         mov        rbp, rdi
0000000000008856         push       rbx
0000000000008857         sub        rsp, 0x60
000000000000885b         mov        r12, qword [rdi+0x28]
000000000000885f         mov        rax, qword [fs:0x28]
0000000000008868         mov        qword [rsp+0x78+var_20], rax
000000000000886d         xor        eax, eax
000000000000886f         cmp        byte [r12+0x10], 0x0
0000000000008875         jne        loc_88c8

0000000000008877         test       rsi, rsi
000000000000887a         js         loc_89f8

0000000000008880         pxor       xmm0, xmm0
0000000000008884         cvtsi2ss   xmm0, rsi

                     loc_8889:
0000000000008889         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
0000000000008890         ucomiss    xmm0, dword [float_b28c]                    ; float_b28c
0000000000008897         jae        loc_89d0

000000000000889d         ucomiss    xmm0, dword [float_b290]                    ; float_b290
00000000000088a4         jb         loc_8a20

00000000000088aa         subss      xmm0, dword [float_b290]                    ; float_b290
00000000000088b2         movabs     rax, 0x8000000000000000
00000000000088bc         cvttss2si  rsi, xmm0
00000000000088c1         xor        rsi, rax
00000000000088c4         nop        dword [rax]

                     loc_88c8:
00000000000088c8         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
00000000000088cb         call       next_prime                                  ; next_prime
00000000000088d0         mov        edx, 0x8
00000000000088d5         mov        rbx, rax
00000000000088d8         xor        ecx, ecx
00000000000088da         mov        rax, rdx
00000000000088dd         mul        rbx
00000000000088e0         jo         loc_8a7f

                     loc_88e6:
00000000000088e6         test       rax, rax                                    ; CODE XREF=hash_rehash+564
00000000000088e9         mov        eax, 0x1
00000000000088ee         cmovs      rcx, rax
00000000000088f2         test       rbx, rbx
00000000000088f5         je         loc_89d0

00000000000088fb         and        ecx, 0x1
00000000000088fe         jne        loc_89d0

0000000000008904         cmp        qword [rbp+0x10], rbx
0000000000008908         je         loc_8a30

000000000000890e         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000008913         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
0000000000008916         call       j_calloc                                    ; calloc
000000000000891b         test       rax, rax
000000000000891e         mov        qword [rsp+0x78+var_78], rax
0000000000008922         je         loc_89d0

0000000000008928         mov        qword [rsp+0x78+var_68], rbx
000000000000892d         shl        rbx, 0x4
0000000000008931         mov        qword [rsp+0x78+var_50], r12
0000000000008936         add        rbx, rax
0000000000008939         mov        rax, qword [rbp+0x30]
000000000000893d         mov        r12, rsp
0000000000008940         xor        edx, edx
0000000000008942         mov        rsi, rbp
0000000000008945         mov        rdi, r12
0000000000008948         mov        qword [rsp+0x78+var_70], rbx
000000000000894d         mov        qword [rsp+0x78+var_60], 0x0
0000000000008956         mov        qword [rsp+0x78+var_48], rax
000000000000895b         mov        rax, qword [rbp+0x38]
000000000000895f         mov        qword [rsp+0x78+var_58], 0x0
0000000000008968         mov        qword [rsp+0x78+var_40], rax
000000000000896d         mov        rax, qword [rbp+0x40]
0000000000008971         mov        qword [rsp+0x78+var_38], rax
0000000000008976         mov        rax, qword [rbp+0x48]
000000000000897a         mov        qword [rsp+0x78+var_30], rax
000000000000897f         call       transfer_entries                            ; transfer_entries
0000000000008984         test       al, al
0000000000008986         mov        ebx, eax
0000000000008988         jne        loc_8a40

000000000000898e         mov        rax, qword [rsp+0x78+var_30]
0000000000008993         mov        edx, 0x1
0000000000008998         mov        rsi, r12
000000000000899b         mov        rdi, rbp
000000000000899e         mov        qword [rbp+0x48], rax
00000000000089a2         call       transfer_entries                            ; transfer_entries
00000000000089a7         test       al, al
00000000000089a9         je         loc_8a89

00000000000089af         xor        edx, edx
00000000000089b1         mov        rsi, r12
00000000000089b4         mov        rdi, rbp
00000000000089b7         call       transfer_entries                            ; transfer_entries
00000000000089bc         test       al, al
00000000000089be         je         loc_8a89

00000000000089c4         mov        rdi, qword [rsp+0x78+var_78]
00000000000089c8         call       sub_1c90                                    ; sub_1c90
00000000000089cd         jmp        loc_89d2
00000000000089cf         align      16

                     loc_89d0:
00000000000089d0         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_89d2:
00000000000089d2         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
00000000000089d7         xor        rcx, qword [fs:0x28]
00000000000089e0         mov        eax, ebx
00000000000089e2         jne        loc_8a7a

00000000000089e8         add        rsp, 0x60
00000000000089ec         pop        rbx
00000000000089ed         pop        rbp
00000000000089ee         pop        r12
00000000000089f0         ret
                        ; endp
00000000000089f1         align      8

                     loc_89f8:
00000000000089f8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
00000000000089fb         pxor       xmm0, xmm0
00000000000089ff         shr        rax, 0x1
0000000000008a02         and        esi, 0x1
0000000000008a05         or         rax, rsi
0000000000008a08         cvtsi2ss   xmm0, rax
0000000000008a0d         addss      xmm0, xmm0
0000000000008a11         jmp        loc_8889
0000000000008a16         align      32

                     loc_8a20:
0000000000008a20         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000008a25         jmp        loc_88c8
0000000000008a2a         align      16

                     loc_8a30:
0000000000008a30         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000008a35         jmp        loc_89d2
0000000000008a37         align      64

                     loc_8a40:
0000000000008a40         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
0000000000008a44         call       sub_1c90                                    ; sub_1c90
0000000000008a49         mov        rax, qword [rsp+0x78+var_78]
0000000000008a4d         mov        qword [rbp], rax
0000000000008a51         mov        rax, qword [rsp+0x78+var_70]
0000000000008a56         mov        qword [rbp+8], rax
0000000000008a5a         mov        rax, qword [rsp+0x78+var_68]
0000000000008a5f         mov        qword [rbp+0x10], rax
0000000000008a63         mov        rax, qword [rsp+0x78+var_60]
0000000000008a68         mov        qword [rbp+0x18], rax
0000000000008a6c         mov        rax, qword [rsp+0x78+var_30]
0000000000008a71         mov        qword [rbp+0x48], rax
0000000000008a75         jmp        loc_89d2

                     loc_8a7a:
0000000000008a7a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_8a7f:
0000000000008a7f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
0000000000008a84         jmp        loc_88e6

                     loc_8a89:
0000000000008a89         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
0000000000008a8e         align      16                                          ; End of unwind block (FDE at 0xcbbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
0000000000008a90         push       r13                                         ; Begin of unwind block (FDE at 0xcbf4), CODE XREF=hash_insert+27
0000000000008a92         push       r12
0000000000008a94         push       rbp
0000000000008a95         push       rbx
0000000000008a96         sub        rsp, 0x18
0000000000008a9a         mov        rax, qword [fs:0x28]
0000000000008aa3         mov        qword [rsp+0x38+var_30], rax
0000000000008aa8         xor        eax, eax
0000000000008aaa         test       rsi, rsi
0000000000008aad         je         loc_8c6d

0000000000008ab3         mov        r12, rsp
0000000000008ab6         xor        ecx, ecx
0000000000008ab8         mov        r13, rdx
0000000000008abb         mov        rdx, r12
0000000000008abe         mov        rbx, rdi
0000000000008ac1         mov        rbp, rsi
0000000000008ac4         call       hash_find_entry                             ; hash_find_entry
0000000000008ac9         test       rax, rax
0000000000008acc         mov        rdx, rax
0000000000008acf         je         loc_8b00

0000000000008ad1         xor        eax, eax
0000000000008ad3         test       r13, r13
0000000000008ad6         je         loc_8adc

0000000000008ad8         mov        qword [r13], rdx

                     loc_8adc:
0000000000008adc         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
0000000000008ae1         xor        rcx, qword [fs:0x28]
0000000000008aea         jne        loc_8d0f

0000000000008af0         add        rsp, 0x18
0000000000008af4         pop        rbx
0000000000008af5         pop        rbp
0000000000008af6         pop        r12
0000000000008af8         pop        r13
0000000000008afa         ret
                        ; endp
0000000000008afb         align      256

                     loc_8b00:
0000000000008b00         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
0000000000008b04         test       rax, rax
0000000000008b07         js         loc_8b80

0000000000008b09         pxor       xmm1, xmm1
0000000000008b0d         mov        rdx, qword [rbx+0x28]
0000000000008b11         cvtsi2ss   xmm1, rax
0000000000008b16         mov        rax, qword [rbx+0x10]
0000000000008b1a         test       rax, rax
0000000000008b1d         js         loc_8baa

                     loc_8b23:
0000000000008b23         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000008b27         cvtsi2ss   xmm0, rax

                     loc_8b2c:
0000000000008b2c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000008b31         ucomiss    xmm1, xmm0
0000000000008b34         ja         loc_8bd0

                     loc_8b3a:
0000000000008b3a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
0000000000008b3e         cmp        qword [r12], 0x0
0000000000008b43         je         loc_8c78

0000000000008b49         mov        rax, qword [rbx+0x48]
0000000000008b4d         test       rax, rax
0000000000008b50         je         loc_8c90

0000000000008b56         mov        rdx, qword [rax+8]
0000000000008b5a         mov        qword [rbx+0x48], rdx

                     loc_8b5e:
0000000000008b5e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
0000000000008b63         mov        qword [rax], rbp
0000000000008b66         mov        qword [rax+8], rdx
0000000000008b6a         mov        qword [r12+8], rax
0000000000008b6f         mov        eax, 0x1
0000000000008b74         add        qword [rbx+0x20], 0x1
0000000000008b79         jmp        loc_8adc
0000000000008b7e         align      128

                     loc_8b80:
0000000000008b80         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
0000000000008b83         pxor       xmm1, xmm1
0000000000008b87         and        eax, 0x1
0000000000008b8a         shr        rdx, 0x1
0000000000008b8d         or         rdx, rax
0000000000008b90         mov        rax, qword [rbx+0x10]
0000000000008b94         cvtsi2ss   xmm1, rdx
0000000000008b99         mov        rdx, qword [rbx+0x28]
0000000000008b9d         test       rax, rax
0000000000008ba0         addss      xmm1, xmm1
0000000000008ba4         jns        loc_8b23

                     loc_8baa:
0000000000008baa         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
0000000000008bad         pxor       xmm0, xmm0
0000000000008bb1         shr        rcx, 0x1
0000000000008bb4         and        eax, 0x1
0000000000008bb7         or         rcx, rax
0000000000008bba         cvtsi2ss   xmm0, rcx
0000000000008bbf         addss      xmm0, xmm0
0000000000008bc3         jmp        loc_8b2c
0000000000008bc8         align      16

                     loc_8bd0:
0000000000008bd0         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
0000000000008bd4         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008bd9         mov        rax, qword [rbx+0x10]
0000000000008bdd         mov        rdx, qword [rbx+0x28]
0000000000008be1         test       rax, rax
0000000000008be4         movss      xmm2, dword [rdx+8]
0000000000008be9         js         loc_8cb0

0000000000008bef         pxor       xmm0, xmm0
0000000000008bf3         cvtsi2ss   xmm0, rax

                     loc_8bf8:
0000000000008bf8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
0000000000008bfc         test       rax, rax
0000000000008bff         js         loc_8cd0

0000000000008c05         pxor       xmm1, xmm1
0000000000008c09         cvtsi2ss   xmm1, rax

                     loc_8c0e:
0000000000008c0e         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000008c11         mulss      xmm3, xmm0
0000000000008c15         ucomiss    xmm1, xmm3
0000000000008c18         jbe        loc_8b3a

0000000000008c1e         cmp        byte [rdx+0x10], 0x0
0000000000008c22         mulss      xmm0, dword [rdx+0xc]
0000000000008c27         jne        loc_8c2d

0000000000008c29         mulss      xmm0, xmm2

                     loc_8c2d:
0000000000008c2d         ucomiss    xmm0, dword [float_b28c]                    ; float_b28c, CODE XREF=hash_insert_if_absent+407
0000000000008c34         jae        loc_8ca3

0000000000008c36         ucomiss    xmm0, dword [float_b290]                    ; float_b290
0000000000008c3d         jae        loc_8cf0

0000000000008c43         cvttss2si  rsi, xmm0

                     loc_8c48:
0000000000008c48         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
0000000000008c4b         call       hash_rehash                                 ; hash_rehash
0000000000008c50         test       al, al
0000000000008c52         je         loc_8ca3

0000000000008c54         xor        ecx, ecx
0000000000008c56         mov        rdx, r12
0000000000008c59         mov        rsi, rbp
0000000000008c5c         mov        rdi, rbx
0000000000008c5f         call       hash_find_entry                             ; hash_find_entry
0000000000008c64         test       rax, rax
0000000000008c67         je         loc_8b3a

                     loc_8c6d:
0000000000008c6d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
0000000000008c72         align      8

                     loc_8c78:
0000000000008c78         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
0000000000008c7c         mov        eax, 0x1
0000000000008c81         add        qword [rbx+0x20], 0x1
0000000000008c86         add        qword [rbx+0x18], 0x1
0000000000008c8b         jmp        loc_8adc

                     loc_8c90:
0000000000008c90         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
0000000000008c95         call       j_malloc                                    ; malloc
0000000000008c9a         test       rax, rax
0000000000008c9d         jne        loc_8b5e

                     loc_8ca3:
0000000000008ca3         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
0000000000008ca8         jmp        loc_8adc
0000000000008cad         align      16

                     loc_8cb0:
0000000000008cb0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
0000000000008cb3         pxor       xmm0, xmm0
0000000000008cb7         shr        rcx, 0x1
0000000000008cba         and        eax, 0x1
0000000000008cbd         or         rcx, rax
0000000000008cc0         cvtsi2ss   xmm0, rcx
0000000000008cc5         addss      xmm0, xmm0
0000000000008cc9         jmp        loc_8bf8
0000000000008cce         align      16

                     loc_8cd0:
0000000000008cd0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
0000000000008cd3         pxor       xmm1, xmm1
0000000000008cd7         shr        rcx, 0x1
0000000000008cda         and        eax, 0x1
0000000000008cdd         or         rcx, rax
0000000000008ce0         cvtsi2ss   xmm1, rcx
0000000000008ce5         addss      xmm1, xmm1
0000000000008ce9         jmp        loc_8c0e
0000000000008cee         align      16

                     loc_8cf0:
0000000000008cf0         subss      xmm0, dword [float_b290]                    ; float_b290, CODE XREF=hash_insert_if_absent+429
0000000000008cf8         movabs     rax, 0x8000000000000000
0000000000008d02         cvttss2si  rsi, xmm0
0000000000008d07         xor        rsi, rax
0000000000008d0a         jmp        loc_8c48

                     loc_8d0f:
0000000000008d0f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000008d14         align      32                                          ; End of unwind block (FDE at 0xcbf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000008d20         push       rbx                                         ; Begin of unwind block (FDE at 0xcc30), CODE XREF=filesystem_type+255, enter_dir.isra.10+70
0000000000008d21         mov        rbx, rsi
0000000000008d24         sub        rsp, 0x10
0000000000008d28         mov        rdx, rsp
0000000000008d2b         mov        rax, qword [fs:0x28]
0000000000008d34         mov        qword [rsp+0x18+var_10], rax
0000000000008d39         xor        eax, eax
0000000000008d3b         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000008d40         cmp        eax, 0xffffffff
0000000000008d43         je         loc_8d70

0000000000008d45         test       eax, eax
0000000000008d47         jne        loc_8d4d

0000000000008d49         mov        rbx, qword [rsp+0x18+var_18]

                     loc_8d4d:
0000000000008d4d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000008d52         xor        rcx, qword [fs:0x28]
0000000000008d5b         mov        rax, rbx
0000000000008d5e         jne        loc_8d74

0000000000008d60         add        rsp, 0x10
0000000000008d64         pop        rbx
0000000000008d65         ret
                        ; endp
0000000000008d66         align      16

                     loc_8d70:
0000000000008d70         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
0000000000008d72         jmp        loc_8d4d

                     loc_8d74:
0000000000008d74         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
0000000000008d79         align      128                                         ; End of unwind block (FDE at 0xcc30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
0000000000008d80         push       r12                                         ; Begin of unwind block (FDE at 0xcc54), CODE XREF=leave_dir.isra.12+122
0000000000008d82         push       rbp
0000000000008d83         mov        ecx, 0x1
0000000000008d88         push       rbx
0000000000008d89         mov        rbx, rdi
0000000000008d8c         sub        rsp, 0x10
0000000000008d90         mov        rdx, rsp
0000000000008d93         mov        rax, qword [fs:0x28]
0000000000008d9c         mov        qword [rsp+0x28+var_20], rax
0000000000008da1         xor        eax, eax
0000000000008da3         call       hash_find_entry                             ; hash_find_entry
0000000000008da8         test       rax, rax
0000000000008dab         mov        rbp, rax
0000000000008dae         je         loc_8dbf

0000000000008db0         mov        rax, qword [rsp+0x28+var_28]
0000000000008db4         sub        qword [rbx+0x20], 0x1
0000000000008db9         cmp        qword [rax], 0x0
0000000000008dbd         je         loc_8de0

                     loc_8dbf:
0000000000008dbf         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
0000000000008dc4         xor        rcx, qword [fs:0x28]
0000000000008dcd         mov        rax, rbp
0000000000008dd0         jne        loc_8f7e

0000000000008dd6         add        rsp, 0x10
0000000000008dda         pop        rbx
0000000000008ddb         pop        rbp
0000000000008ddc         pop        r12
0000000000008dde         ret
                        ; endp
0000000000008ddf         align      32

                     loc_8de0:
0000000000008de0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
0000000000008de4         sub        rax, 0x1
0000000000008de8         test       rax, rax
0000000000008deb         mov        qword [rbx+0x18], rax
0000000000008def         js         loc_8ef0

0000000000008df5         pxor       xmm0, xmm0
0000000000008df9         cvtsi2ss   xmm0, rax

                     loc_8dfe:
0000000000008dfe         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
0000000000008e02         mov        rdx, qword [rbx+0x28]
0000000000008e06         test       rax, rax
0000000000008e09         js         loc_8ed0

0000000000008e0f         pxor       xmm1, xmm1
0000000000008e13         cvtsi2ss   xmm1, rax

                     loc_8e18:
0000000000008e18         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
0000000000008e1c         ucomiss    xmm1, xmm0
0000000000008e1f         jbe        loc_8dbf

0000000000008e21         lea        rdi, qword [rbx+0x28]
0000000000008e25         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000008e2a         mov        rax, qword [rbx+0x10]
0000000000008e2e         mov        rdx, qword [rbx+0x28]
0000000000008e32         test       rax, rax
0000000000008e35         js         loc_8f60

0000000000008e3b         pxor       xmm0, xmm0
0000000000008e3f         cvtsi2ss   xmm0, rax

                     loc_8e44:
0000000000008e44         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000008e48         test       rax, rax
0000000000008e4b         js         loc_8f40

0000000000008e51         pxor       xmm1, xmm1
0000000000008e55         cvtsi2ss   xmm1, rax

                     loc_8e5a:
0000000000008e5a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
0000000000008e5e         mulss      xmm2, xmm0
0000000000008e62         ucomiss    xmm2, xmm1
0000000000008e65         jbe        loc_8dbf

0000000000008e6b         cmp        byte [rdx+0x10], 0x0
0000000000008e6f         mulss      xmm0, dword [rdx+4]
0000000000008e74         je         loc_8f30

                     loc_8e7a:
0000000000008e7a         ucomiss    xmm0, dword [float_b290]                    ; float_b290, CODE XREF=hash_delete+437
0000000000008e81         jae        loc_8f10

0000000000008e87         cvttss2si  rsi, xmm0

                     loc_8e8c:
0000000000008e8c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
0000000000008e8f         call       hash_rehash                                 ; hash_rehash
0000000000008e94         test       al, al
0000000000008e96         jne        loc_8dbf

0000000000008e9c         mov        rdi, qword [rbx+0x48]
0000000000008ea0         test       rdi, rdi
0000000000008ea3         je         loc_8eb9

0000000000008ea5         nop        dword [rax]

                     loc_8ea8:
0000000000008ea8         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
0000000000008eac         call       sub_1c90                                    ; sub_1c90
0000000000008eb1         test       r12, r12
0000000000008eb4         mov        rdi, r12
0000000000008eb7         jne        loc_8ea8

                     loc_8eb9:
0000000000008eb9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
0000000000008ec1         jmp        loc_8dbf
0000000000008ec6         align      16

                     loc_8ed0:
0000000000008ed0         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
0000000000008ed3         pxor       xmm1, xmm1
0000000000008ed7         shr        rcx, 0x1
0000000000008eda         and        eax, 0x1
0000000000008edd         or         rcx, rax
0000000000008ee0         cvtsi2ss   xmm1, rcx
0000000000008ee5         addss      xmm1, xmm1
0000000000008ee9         jmp        loc_8e18
0000000000008eee         align      16

                     loc_8ef0:
0000000000008ef0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
0000000000008ef3         pxor       xmm0, xmm0
0000000000008ef7         shr        rdx, 0x1
0000000000008efa         and        eax, 0x1
0000000000008efd         or         rdx, rax
0000000000008f00         cvtsi2ss   xmm0, rdx
0000000000008f05         addss      xmm0, xmm0
0000000000008f09         jmp        loc_8dfe
0000000000008f0e         align      16

                     loc_8f10:
0000000000008f10         subss      xmm0, dword [float_b290]                    ; float_b290, CODE XREF=hash_delete+257
0000000000008f18         movabs     rax, 0x8000000000000000
0000000000008f22         cvttss2si  rsi, xmm0
0000000000008f27         xor        rsi, rax
0000000000008f2a         jmp        loc_8e8c
0000000000008f2f         align      16

                     loc_8f30:
0000000000008f30         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000008f35         jmp        loc_8e7a
0000000000008f3a         align      64

                     loc_8f40:
0000000000008f40         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000008f43         pxor       xmm1, xmm1
0000000000008f47         shr        rcx, 0x1
0000000000008f4a         and        eax, 0x1
0000000000008f4d         or         rcx, rax
0000000000008f50         cvtsi2ss   xmm1, rcx
0000000000008f55         addss      xmm1, xmm1
0000000000008f59         jmp        loc_8e5a
0000000000008f5e         align      32

                     loc_8f60:
0000000000008f60         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000008f63         pxor       xmm0, xmm0
0000000000008f67         shr        rcx, 0x1
0000000000008f6a         and        eax, 0x1
0000000000008f6d         or         rcx, rax
0000000000008f70         cvtsi2ss   xmm0, rcx
0000000000008f75         addss      xmm0, xmm0
0000000000008f79         jmp        loc_8e44

                     loc_8f7e:
0000000000008f7e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000008f83         align      16                                          ; End of unwind block (FDE at 0xcc54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_init:
0000000000008f90         mov        byte [rdi+0x1c], 0x1                        ; Begin of unwind block (FDE at 0xcc8c), CODE XREF=rpl_fts_open+681
0000000000008f94         mov        qword [rdi+0x14], 0x0
0000000000008f9c         mov        dword [rdi], esi
0000000000008f9e         mov        dword [rdi+4], esi
0000000000008fa1         mov        dword [rdi+8], esi
0000000000008fa4         mov        dword [rdi+0xc], esi
0000000000008fa7         mov        dword [rdi+0x10], esi
0000000000008faa         ret
                        ; endp
0000000000008fab         align      16                                          ; End of unwind block (FDE at 0xcc8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_empty:
0000000000008fb0         movzx      eax, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xcca0), CODE XREF=fd_ring_clear+31, fts_safe_changedir+455
0000000000008fb4         ret
                        ; endp
0000000000008fb5         align      64                                          ; End of unwind block (FDE at 0xcca0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_push:
0000000000008fc0         movzx      edx, byte [rdi+0x1c]                        ; Begin of unwind block (FDE at 0xccb4), CODE XREF=cwd_advance_fd+52
0000000000008fc4         mov        ecx, dword [rdi+0x14]
0000000000008fc7         xor        edx, 0x1
0000000000008fca         movzx      edx, dl
0000000000008fcd         add        ecx, edx
0000000000008fcf         and        ecx, 0x3
0000000000008fd2         mov        eax, ecx
0000000000008fd4         lea        r8, qword [rdi+rax*4]
0000000000008fd8         mov        eax, dword [r8]
0000000000008fdb         mov        dword [r8], esi
0000000000008fde         mov        esi, dword [rdi+0x18]
0000000000008fe1         mov        dword [rdi+0x14], ecx
0000000000008fe4         cmp        esi, ecx
0000000000008fe6         jne        loc_8ff0

0000000000008fe8         add        edx, esi
0000000000008fea         and        edx, 0x3
0000000000008fed         mov        dword [rdi+0x18], edx

                     loc_8ff0:
0000000000008ff0         mov        byte [rdi+0x1c], 0x0                        ; CODE XREF=i_ring_push+38
0000000000008ff4         ret
                        ; endp
0000000000008ff5         align      4096                                        ; End of unwind block (FDE at 0xccb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     i_ring_pop:
0000000000009000         cmp        byte [rdi+0x1c], 0x0                        ; Begin of unwind block (FDE at 0xccc8), CODE XREF=fd_ring_clear+19, fts_safe_changedir+475
0000000000009004         jne        loc_9035

0000000000009006         mov        eax, dword [rdi+0x14]
0000000000009009         mov        esi, dword [rdi+0x10]
000000000000900c         lea        rcx, qword [rdi+rax*4]
0000000000009010         mov        rdx, rax
0000000000009013         mov        eax, dword [rcx]
0000000000009015         mov        dword [rcx], esi
0000000000009017         cmp        edx, dword [rdi+0x18]
000000000000901a         je         loc_9030

000000000000901c         add        edx, 0x3
000000000000901f         and        edx, 0x3
0000000000009022         mov        dword [rdi+0x14], edx
0000000000009025         ret
                        ; endp
0000000000009026         align      16

                     loc_9030:
0000000000009030         mov        byte [rdi+0x1c], 0x1                        ; CODE XREF=i_ring_pop+26
0000000000009034         ret
                        ; endp

                     loc_9035:
0000000000009035         sub        rsp, 0x8                                    ; CODE XREF=i_ring_pop+4
0000000000009039         call       j_abort                                     ; abort
                        ; endp
000000000000903e         align      64                                          ; End of unwind block (FDE at 0xccc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000009040         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xccdc), CODE XREF=gettext_quote.part.1+11
0000000000009044         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000009049         call       j_nl_langinfo                               ; nl_langinfo
000000000000904e         test       rax, rax
0000000000009051         je         loc_9070

0000000000009053         cmp        byte [rax], 0x0
0000000000009056         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000905d         cmove      rax, rdx
0000000000009061         add        rsp, 0x8
0000000000009065         ret
                        ; endp
0000000000009066         align      16

                     loc_9070:
0000000000009070         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000009077         add        rsp, 0x8
000000000000907b         ret
                        ; endp
000000000000907c         align      128                                         ; End of unwind block (FDE at 0xccdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     openat_save_fail:
0000000000009080         push       rbx                                         ; Begin of unwind block (FDE at 0xccfc), CODE XREF=getfileconat+273
0000000000009081         lea        rsi, qword [aUnableToRecord]                ; argument "msgid" for method j_dcgettext, "unable to record current working directory"
0000000000009088         mov        ebx, edi
000000000000908a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000908f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009091         call       j_dcgettext                                 ; dcgettext
0000000000009096         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000909c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000909f         mov        esi, ebx                                    ; argument "__errnum" for method j_error
00000000000090a1         xor        eax, eax
00000000000090a3         call       j_error                                     ; error
00000000000090a8         call       j_abort                                     ; abort
                        ; endp
00000000000090ad         align      16                                          ; End of unwind block (FDE at 0xccfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     openat_restore_fail:
00000000000090b0         push       rbx                                         ; Begin of unwind block (FDE at 0xcd14), CODE XREF=getfileconat+265
00000000000090b1         lea        rsi, qword [aFailedToReturn]                ; argument "msgid" for method j_dcgettext, "failed to return to initial working directory"
00000000000090b8         mov        ebx, edi
00000000000090ba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000090bf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000090c1         call       j_dcgettext                                 ; dcgettext
00000000000090c6         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000090cc         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000090cf         mov        esi, ebx                                    ; argument "__errnum" for method j_error
00000000000090d1         xor        eax, eax
00000000000090d3         call       j_error                                     ; error
00000000000090d8         call       j_abort                                     ; abort
                        ; endp
00000000000090dd         align      32                                          ; End of unwind block (FDE at 0xcd14)

                     openat_safer:
00000000000090e0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xcd2c), CODE XREF=diropen.isra.6+53, opendirat+21
00000000000090e4         mov        qword [rsp+0x58+var_20], rcx
00000000000090e9         xor        ecx, ecx
00000000000090eb         mov        rax, qword [fs:0x28]
00000000000090f4         mov        qword [rsp+0x58+var_40], rax
00000000000090f9         xor        eax, eax
00000000000090fb         test       dl, 0x40
00000000000090fe         jne        loc_9128

                     loc_9100:
0000000000009100         xor        eax, eax                                    ; CODE XREF=openat_safer+103
0000000000009102         call       j_openat                                    ; openat
0000000000009107         mov        edi, eax
0000000000009109         call       fd_safer                                    ; fd_safer
000000000000910e         mov        rsi, qword [rsp+0x58+var_40]
0000000000009113         xor        rsi, qword [fs:0x28]
000000000000911c         jne        loc_9149

000000000000911e         add        rsp, 0x58
0000000000009122         ret
                        ; endp
0000000000009123         align      8

                     loc_9128:
0000000000009128         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
000000000000912d         mov        dword [rsp+0x58+var_58], 0x18
0000000000009134         mov        ecx, dword [rsp+0x58+var_20]
0000000000009138         mov        qword [rsp+0x58+var_50], rax
000000000000913d         lea        rax, qword [rsp+0x58+var_38]
0000000000009142         mov        qword [rsp+0x58+var_48], rax
0000000000009147         jmp        loc_9100

                     loc_9149:
0000000000009149         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
000000000000914e         align      16                                          ; End of unwind block (FDE at 0xcd2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
0000000000009150         push       r13                                         ; Begin of unwind block (FDE at 0xcd4c), CODE XREF=fts_build+1189
0000000000009152         push       r12
0000000000009154         or         edx, 0x90900
000000000000915a         push       rbp
000000000000915b         push       rbx
000000000000915c         xor        eax, eax
000000000000915e         mov        r12, rcx
0000000000009161         sub        rsp, 0x8
0000000000009165         call       openat_safer                                ; openat_safer
000000000000916a         test       eax, eax
000000000000916c         js         loc_91c0

000000000000916e         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
0000000000009170         mov        ebx, eax
0000000000009172         call       j_fdopendir                                 ; fdopendir
0000000000009177         test       rax, rax
000000000000917a         mov        rbp, rax
000000000000917d         je         loc_9198

000000000000917f         mov        dword [r12], ebx
0000000000009183         add        rsp, 0x8
0000000000009187         mov        rax, rbp
000000000000918a         pop        rbx
000000000000918b         pop        rbp
000000000000918c         pop        r12
000000000000918e         pop        r13
0000000000009190         ret
                        ; endp
0000000000009191         align      8

                     loc_9198:
0000000000009198         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
000000000000919d         mov        r13d, dword [rax]
00000000000091a0         mov        r12, rax
00000000000091a3         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000091a5         call       j_close                                     ; close
00000000000091aa         mov        rax, rbp
00000000000091ad         mov        dword [r12], r13d
00000000000091b1         add        rsp, 0x8
00000000000091b5         pop        rbx
00000000000091b6         pop        rbp
00000000000091b7         pop        r12
00000000000091b9         pop        r13
00000000000091bb         ret
                        ; endp
00000000000091bc         align      64

                     loc_91c0:
00000000000091c0         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
00000000000091c4         xor        ebp, ebp
00000000000091c6         pop        rbx
00000000000091c7         mov        rax, rbp
00000000000091ca         pop        rbp
00000000000091cb         pop        r12
00000000000091cd         pop        r13
00000000000091cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     save_cwd:
00000000000091d0         push       rbx                                         ; End of unwind block (FDE at 0xcd4c), Begin of unwind block (FDE at 0xcdac), CODE XREF=getfileconat+106
00000000000091d1         mov        rbx, rdi
00000000000091d4         mov        qword [rdi+8], 0x0
00000000000091dc         lea        rdi, qword [__PRETTY_FUNCTION__.3434+11]    ; 0xb15b
00000000000091e3         xor        eax, eax
00000000000091e5         mov        esi, 0x80000
00000000000091ea         call       open_safer                                  ; open_safer
00000000000091ef         mov        edx, eax
00000000000091f1         mov        dword [rbx], eax
00000000000091f3         xor        eax, eax
00000000000091f5         test       edx, edx
00000000000091f7         js         loc_9200

00000000000091f9         pop        rbx
00000000000091fa         ret
                        ; endp
00000000000091fb         align      512

                     loc_9200:
0000000000009200         xor        esi, esi                                    ; argument "__size" for method j_getcwd, CODE XREF=save_cwd+39
0000000000009202         xor        edi, edi                                    ; argument "__buf" for method j_getcwd
0000000000009204         call       j_getcwd                                    ; getcwd
0000000000009209         test       rax, rax
000000000000920c         mov        qword [rbx+8], rax
0000000000009210         sete       al
0000000000009213         movzx      eax, al
0000000000009216         neg        eax
0000000000009218         pop        rbx
0000000000009219         ret
                        ; endp
000000000000921a         align      32                                          ; End of unwind block (FDE at 0xcdac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     restore_cwd:
0000000000009220         mov        eax, dword [rdi]                            ; Begin of unwind block (FDE at 0xcdcc), CODE XREF=getfileconat+149
0000000000009222         test       eax, eax
0000000000009224         js         loc_9230

0000000000009226         mov        edi, eax                                    ; argument "__fd" for method j_fchdir
0000000000009228         jmp        j_fchdir                                    ; fchdir
                        ; endp
000000000000922d         align      16

                     loc_9230:
0000000000009230         mov        rdi, qword [rdi+8]                          ; CODE XREF=restore_cwd+4
0000000000009234         jmp        chdir_long                                  ; chdir_long
                        ; endp
0000000000009239         align      64                                          ; End of unwind block (FDE at 0xcdcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     free_cwd:
0000000000009240         push       rbx                                         ; Begin of unwind block (FDE at 0xcde0), CODE XREF=getfileconat+161, getfileconat+230, getfileconat+243
0000000000009241         mov        rbx, rdi
0000000000009244         mov        edi, dword [rdi]
0000000000009246         test       edi, edi
0000000000009248         js         loc_924f

000000000000924a         call       j_close                                     ; close

                     loc_924f:
000000000000924f         mov        rdi, qword [rbx+8]                          ; CODE XREF=free_cwd+8
0000000000009253         pop        rbx
0000000000009254         jmp        sub_1c90                                    ; sub_1c90
                        ; endp
0000000000009259         align      32                                          ; End of unwind block (FDE at 0xcde0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000009260         push       r13                                         ; Begin of unwind block (FDE at 0xcdfc), CODE XREF=open_safer+42, openat_safer+41
0000000000009262         push       r12
0000000000009264         push       rbp
0000000000009265         push       rbx
0000000000009266         mov        ebx, edi
0000000000009268         sub        rsp, 0x8
000000000000926c         cmp        edi, 0x2
000000000000926f         ja         loc_9292

0000000000009271         call       dup_safer                                   ; dup_safer
0000000000009276         mov        r12d, eax
0000000000009279         call       j___errno_location                          ; __errno_location
000000000000927e         mov        r13d, dword [rax]
0000000000009281         mov        rbp, rax
0000000000009284         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000009286         call       j_close                                     ; close
000000000000928b         mov        ebx, r12d
000000000000928e         mov        dword [rbp], r13d

                     loc_9292:
0000000000009292         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000009296         mov        eax, ebx
0000000000009298         pop        rbx
0000000000009299         pop        rbp
000000000000929a         pop        r12
000000000000929c         pop        r13
000000000000929e         ret
                        ; endp
000000000000929f         align      32                                          ; End of unwind block (FDE at 0xcdfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cdb_free:
00000000000092a0         mov        edi, dword [rdi]                            ; Begin of unwind block (FDE at 0xce34), CODE XREF=cdb_advance_fd+32, chdir_long+462, chdir_long+518
00000000000092a2         test       edi, edi
00000000000092a4         js         loc_92c0

00000000000092a6         sub        rsp, 0x8
00000000000092aa         call       j_close                                     ; close
00000000000092af         test       eax, eax
00000000000092b1         jne        loc_92c2

00000000000092b3         add        rsp, 0x8
00000000000092b7         ret
                        ; endp
00000000000092b8         align      64

                     loc_92c0:
00000000000092c0         ret                                                    ; CODE XREF=cdb_free+4
                        ; endp

                     loc_92c2:
00000000000092c2         lea        rcx, qword [__PRETTY_FUNCTION__.5081]       ; argument "__function" for method j___assert_fail, "cdb_free", CODE XREF=cdb_free+17
00000000000092c9         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
00000000000092d0         lea        rdi, qword [aClosefail]                     ; argument "__assertion" for method j___assert_fail, "! close_fail"
00000000000092d7         mov        edx, 0x40                                   ; argument "__line" for method j___assert_fail
00000000000092dc         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000092e1         align      16                                          ; End of unwind block (FDE at 0xce34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cdb_advance_fd:
00000000000092f0         push       rbp                                         ; Begin of unwind block (FDE at 0xce50), CODE XREF=chdir_long+259, chdir_long+409, chdir_long+491, chdir_long+543
00000000000092f1         push       rbx
00000000000092f2         mov        rbx, rdi
00000000000092f5         xor        eax, eax
00000000000092f7         mov        edx, 0x10900                                ; argument "__oflag" for method j_openat
00000000000092fc         sub        rsp, 0x8
0000000000009300         mov        edi, dword [rdi]                            ; argument "__fd" for method j_openat
0000000000009302         call       j_openat                                    ; openat
0000000000009307         test       eax, eax
0000000000009309         js         loc_9320

000000000000930b         mov        ebp, eax
000000000000930d         mov        rdi, rbx                                    ; argument #1 for method cdb_free
0000000000009310         call       cdb_free                                    ; cdb_free
0000000000009315         mov        dword [rbx], ebp
0000000000009317         xor        eax, eax

                     loc_9319:
0000000000009319         add        rsp, 0x8                                    ; CODE XREF=cdb_advance_fd+53
000000000000931d         pop        rbx
000000000000931e         pop        rbp
000000000000931f         ret
                        ; endp

                     loc_9320:
0000000000009320         mov        eax, 0xffffffff                             ; CODE XREF=cdb_advance_fd+25
0000000000009325         jmp        loc_9319
0000000000009327         align      16                                          ; End of unwind block (FDE at 0xce50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68


                     chdir_long:
0000000000009330         push       r15                                         ; Begin of unwind block (FDE at 0xce7c), CODE XREF=restore_cwd+20
0000000000009332         push       r14
0000000000009334         push       r13
0000000000009336         push       r12
0000000000009338         push       rbp
0000000000009339         push       rbx
000000000000933a         mov        rbp, rdi
000000000000933d         sub        rsp, 0x18
0000000000009341         mov        rax, qword [fs:0x28]
000000000000934a         mov        qword [rsp+0x48+var_40], rax
000000000000934f         xor        eax, eax
0000000000009351         call       j_chdir                                     ; chdir
0000000000009356         test       eax, eax
0000000000009358         mov        ebx, eax
000000000000935a         je         loc_9369

000000000000935c         call       j___errno_location                          ; __errno_location
0000000000009361         cmp        dword [rax], 0x24
0000000000009364         mov        r14, rax
0000000000009367         je         loc_9390

                     loc_9369:
0000000000009369         mov        rcx, qword [rsp+0x48+var_40]                ; CODE XREF=chdir_long+42, chdir_long+354, chdir_long+475, chdir_long+523
000000000000936e         xor        rcx, qword [fs:0x28]
0000000000009377         mov        eax, ebx
0000000000009379         jne        loc_9581

000000000000937f         add        rsp, 0x18
0000000000009383         pop        rbx
0000000000009384         pop        rbp
0000000000009385         pop        r12
0000000000009387         pop        r13
0000000000009389         pop        r14
000000000000938b         pop        r15
000000000000938d         ret
                        ; endp
000000000000938e         align      16

                     loc_9390:
0000000000009390         mov        rdi, rbp                                    ; argument "__s" for method j_strlen, CODE XREF=chdir_long+55
0000000000009393         call       j_strlen                                    ; strlen
0000000000009398         test       rax, rax
000000000000939b         mov        r12, rax
000000000000939e         mov        dword [rsp+0x48+var_44], 0xffffff9c
00000000000093a6         je         loc_9586

00000000000093ac         cmp        rax, 0xfff
00000000000093b2         jbe        loc_95a5

00000000000093b8         lea        rsi, qword [aProcselffdd+16]                ; argument "__accept" for method j_strspn, 0xb3d0
00000000000093bf         mov        rdi, rbp                                    ; argument "__s" for method j_strspn
00000000000093c2         call       j_strspn                                    ; strspn
00000000000093c7         cmp        rax, 0x2
00000000000093cb         mov        rbx, rax
00000000000093ce         je         loc_94a0

00000000000093d4         test       rax, rax
00000000000093d7         mov        r15, rbp
00000000000093da         jne        loc_9540

                     loc_93e0:
00000000000093e0         cmp        byte [r15], 0x2f                            ; CODE XREF=chdir_long+444, chdir_long+557
00000000000093e4         je         loc_95e3

00000000000093ea         add        rbp, r12
00000000000093ed         cmp        r15, rbp
00000000000093f0         ja         loc_95c4

00000000000093f6         mov        rax, rbp
00000000000093f9         lea        r12, qword [rsp+0x48+var_44]
00000000000093fe         sub        rax, r15
0000000000009401         cmp        rax, 0xfff
0000000000009407         mov        r13, r12
000000000000940a         jg         loc_946c

000000000000940c         jmp        loc_9510
0000000000009411         align      8

                     loc_9418:
0000000000009418         mov        byte [rax], 0x0                             ; CODE XREF=chdir_long+340
000000000000941b         sub        rax, r15
000000000000941e         cmp        rax, 0xfff
0000000000009424         jg         loc_9562

000000000000942a         mov        rsi, r15
000000000000942d         mov        rdi, r12
0000000000009430         mov        r13, r12
0000000000009433         call       cdb_advance_fd                              ; cdb_advance_fd
0000000000009438         test       eax, eax
000000000000943a         mov        byte [rbx], 0x2f
000000000000943d         jne        loc_94f8

0000000000009443         add        rbx, 0x1
0000000000009447         lea        rsi, qword [aProcselffdd+16]                ; argument "__accept" for method j_strspn, 0xb3d0
000000000000944e         mov        rdi, rbx                                    ; argument "__s" for method j_strspn
0000000000009451         call       j_strspn                                    ; strspn
0000000000009456         lea        r15, qword [rbx+rax]
000000000000945a         mov        rax, rbp
000000000000945d         sub        rax, r15
0000000000009460         cmp        rax, 0xfff
0000000000009466         jle        loc_9510

                     loc_946c:
000000000000946c         mov        edx, 0x1000                                 ; argument "__n" for method j_memrchr, CODE XREF=chdir_long+218
0000000000009471         mov        esi, 0x2f                                   ; argument "__c" for method j_memrchr
0000000000009476         mov        rdi, r15                                    ; argument "__s" for method j_memrchr
0000000000009479         call       j_memrchr                                   ; memrchr
000000000000947e         test       rax, rax
0000000000009481         mov        rbx, rax
0000000000009484         jne        loc_9418

0000000000009486         mov        dword [r14], 0x24
000000000000948d         mov        ebx, 0xffffffff
0000000000009492         jmp        loc_9369
0000000000009497         align      32

                     loc_94a0:
00000000000094a0         lea        rdx, qword [r12-3]                          ; argument "__n" for method j_memchr, CODE XREF=chdir_long+158
00000000000094a5         lea        rdi, qword [rbp+3]                          ; argument "__s" for method j_memchr
00000000000094a9         mov        esi, 0x2f                                   ; argument "__c" for method j_memchr
00000000000094ae         call       j_memchr                                    ; memchr
00000000000094b3         test       rax, rax
00000000000094b6         mov        rbx, rax
00000000000094b9         je         loc_9506

00000000000094bb         lea        r13, qword [rsp+0x48+var_44]
00000000000094c0         mov        byte [rax], 0x0
00000000000094c3         mov        rsi, rbp
00000000000094c6         mov        rdi, r13
00000000000094c9         call       cdb_advance_fd                              ; cdb_advance_fd
00000000000094ce         test       eax, eax
00000000000094d0         mov        byte [rbx], 0x2f
00000000000094d3         jne        loc_94f8

00000000000094d5         add        rbx, 0x1
00000000000094d9         lea        rsi, qword [aProcselffdd+16]                ; argument "__accept" for method j_strspn, 0xb3d0
00000000000094e0         mov        rdi, rbx                                    ; argument "__s" for method j_strspn
00000000000094e3         call       j_strspn                                    ; strspn
00000000000094e8         lea        r15, qword [rbx+rax]
00000000000094ec         jmp        loc_93e0
00000000000094f1         align      8

                     loc_94f8:
00000000000094f8         mov        ebx, dword [r14]                            ; CODE XREF=chdir_long+269, chdir_long+419, chdir_long+498, chdir_long+513, chdir_long+550
00000000000094fb         mov        rdi, r13                                    ; argument #1 for method cdb_free
00000000000094fe         call       cdb_free                                    ; cdb_free
0000000000009503         mov        dword [r14], ebx

                     loc_9506:
0000000000009506         mov        ebx, 0xffffffff                             ; CODE XREF=chdir_long+393
000000000000950b         jmp        loc_9369

                     loc_9510:
0000000000009510         cmp        rbp, r15                                    ; CODE XREF=chdir_long+220, chdir_long+310
0000000000009513         jbe        loc_9524

0000000000009515         mov        rsi, r15
0000000000009518         mov        rdi, r13
000000000000951b         call       cdb_advance_fd                              ; cdb_advance_fd
0000000000009520         test       eax, eax
0000000000009522         jne        loc_94f8

                     loc_9524:
0000000000009524         mov        edi, dword [rsp+0x48+var_44]                ; argument "__fd" for method j_fchdir, CODE XREF=chdir_long+483
0000000000009528         call       j_fchdir                                    ; fchdir
000000000000952d         test       eax, eax
000000000000952f         mov        ebx, eax
0000000000009531         jne        loc_94f8

0000000000009533         mov        rdi, r13                                    ; argument #1 for method cdb_free
0000000000009536         call       cdb_free                                    ; cdb_free
000000000000953b         jmp        loc_9369

                     loc_9540:
0000000000009540         lea        r13, qword [rsp+0x48+var_44]                ; CODE XREF=chdir_long+170
0000000000009545         lea        rsi, qword [aProcselffdd+16]                ; 0xb3d0
000000000000954c         mov        rdi, r13
000000000000954f         call       cdb_advance_fd                              ; cdb_advance_fd
0000000000009554         test       eax, eax
0000000000009556         jne        loc_94f8

0000000000009558         lea        r15, qword [rbp+rbx]
000000000000955d         jmp        loc_93e0

                     loc_9562:
0000000000009562         lea        rcx, qword [__PRETTY_FUNCTION__.5099]       ; argument "__function" for method j___assert_fail, "chdir_long", CODE XREF=chdir_long+244
0000000000009569         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
0000000000009570         lea        rdi, qword [aSlashDir4096]                  ; argument "__assertion" for method j___assert_fail, "slash - dir < 4096"
0000000000009577         mov        edx, 0xb3                                   ; argument "__line" for method j___assert_fail
000000000000957c         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9581:
0000000000009581         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=chdir_long+73
                        ; endp

                     loc_9586:
0000000000009586         lea        rcx, qword [__PRETTY_FUNCTION__.5099]       ; argument "__function" for method j___assert_fail, "chdir_long", CODE XREF=chdir_long+118
000000000000958d         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
0000000000009594         lea        rdi, qword [a0Len]                          ; argument "__assertion" for method j___assert_fail, "0 < len"
000000000000959b         mov        edx, 0x7e                                   ; argument "__line" for method j___assert_fail
00000000000095a0         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_95a5:
00000000000095a5         lea        rcx, qword [__PRETTY_FUNCTION__.5099]       ; argument "__function" for method j___assert_fail, "chdir_long", CODE XREF=chdir_long+130
00000000000095ac         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
00000000000095b3         lea        rdi, qword [a4096Len]                       ; argument "__assertion" for method j___assert_fail, "4096 <= len"
00000000000095ba         mov        edx, 0x7f                                   ; argument "__line" for method j___assert_fail
00000000000095bf         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_95c4:
00000000000095c4         lea        rcx, qword [__PRETTY_FUNCTION__.5099]       ; argument "__function" for method j___assert_fail, "chdir_long", CODE XREF=chdir_long+192
00000000000095cb         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
00000000000095d2         lea        rdi, qword [aDirDirend]                     ; argument "__assertion" for method j___assert_fail, "dir <= dir_end"
00000000000095d9         mov        edx, 0xa3                                   ; argument "__line" for method j___assert_fail
00000000000095de         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_95e3:
00000000000095e3         lea        rcx, qword [__PRETTY_FUNCTION__.5099]       ; argument "__function" for method j___assert_fail, "chdir_long", CODE XREF=chdir_long+180
00000000000095ea         lea        rsi, qword [aCoreutils831li_b308]           ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/chdir-long.c"
00000000000095f1         lea        rdi, qword [a4096Len+12]                    ; argument "__assertion" for method j___assert_fail, 0xb351
00000000000095f8         mov        edx, 0xa2                                   ; argument "__line" for method j___assert_fail
00000000000095fd         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000009602         align      16                                          ; End of unwind block (FDE at 0xce7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000009610         push       r12                                         ; Begin of unwind block (FDE at 0xcecc), CODE XREF=close_stream+21
0000000000009612         push       rbp
0000000000009613         push       rbx
0000000000009614         mov        rbx, rdi
0000000000009617         call       j_fileno                                    ; fileno
000000000000961c         test       eax, eax
000000000000961e         mov        rdi, rbx
0000000000009621         js         loc_9677

0000000000009623         call       j___freading                                ; __freading
0000000000009628         test       eax, eax
000000000000962a         jne        loc_9658

                     loc_962c:
000000000000962c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000962f         call       rpl_fflush                                  ; rpl_fflush
0000000000009634         test       eax, eax
0000000000009636         je         loc_9674

0000000000009638         call       j___errno_location                          ; __errno_location
000000000000963d         mov        r12d, dword [rax]
0000000000009640         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000009643         mov        rbp, rax
0000000000009646         call       j_fclose                                    ; fclose
000000000000964b         test       r12d, r12d
000000000000964e         jne        loc_9680

                     loc_9650:
0000000000009650         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000009651         pop        rbp
0000000000009652         pop        r12
0000000000009654         ret
                        ; endp
0000000000009655         align      8

                     loc_9658:
0000000000009658         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000965b         call       j_fileno                                    ; fileno
0000000000009660         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000009662         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000009667         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000009669         call       j_lseek                                     ; lseek
000000000000966e         cmp        rax, 0xffffffffffffffff
0000000000009672         jne        loc_962c

                     loc_9674:
0000000000009674         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_9677:
0000000000009677         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000009678         pop        rbp
0000000000009679         pop        r12
000000000000967b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_9680:
0000000000009680         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000009684         mov        eax, 0xffffffff
0000000000009689         jmp        loc_9650
000000000000968b         align      16                                          ; End of unwind block (FDE at 0xcecc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000009690         push       r12                                         ; Begin of unwind block (FDE at 0xcf04), CODE XREF=fts_build+2314, dup_safer+9
0000000000009692         push       rbp
0000000000009693         mov        ebp, edi
0000000000009695         push       rbx
0000000000009696         sub        rsp, 0x50
000000000000969a         mov        rax, qword [fs:0x28]
00000000000096a3         mov        qword [rsp+0x68+var_50], rax
00000000000096a8         xor        eax, eax
00000000000096aa         lea        rax, qword [rsp+0x68+arg_0]
00000000000096af         test       esi, esi
00000000000096b1         mov        qword [rsp+0x68+var_38], rdx
00000000000096b6         mov        qword [rsp+0x68+var_30], rcx
00000000000096bb         mov        qword [rsp+0x68+var_28], r8
00000000000096c0         mov        qword [rsp+0x68+var_60], rax
00000000000096c5         lea        rax, qword [rsp+0x68+var_48]
00000000000096ca         mov        qword [rsp+0x68+var_20], r9
00000000000096cf         mov        dword [rsp+0x68+var_68], 0x10
00000000000096d6         mov        qword [rsp+0x68+var_58], rax
00000000000096db         je         loc_98e2

00000000000096e1         cmp        esi, 0x406
00000000000096e7         jne        loc_9730

00000000000096e9         mov        rax, qword [rsp+0x68+var_58]
00000000000096ee         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
00000000000096f5         mov        dword [rsp+0x68+var_68], 0x18
00000000000096fc         mov        r12d, dword [rax+0x10]
0000000000009700         mov        edx, r12d
0000000000009703         js         loc_9833

0000000000009709         xor        eax, eax
000000000000970b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000009710         call       j_fcntl                                     ; fcntl
0000000000009715         test       eax, eax
0000000000009717         mov        ebx, eax
0000000000009719         js         loc_98a8

                     loc_971f:
000000000000971f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000009729         jmp        loc_9770
000000000000972b         align      16

                     loc_9730:
0000000000009730         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000009733         je         loc_9760

0000000000009735         jg         loc_9790

0000000000009737         cmp        esi, 0x4
000000000000973a         je         loc_9810

0000000000009740         jg         loc_9800

0000000000009746         cmp        esi, 0x2
0000000000009749         je         loc_9810

000000000000974f         jg         loc_9760

0000000000009751         cmp        esi, 0x1
0000000000009754         jne        loc_97b8

0000000000009756         nop        word [cs:rax+rax]

                     loc_9760:
0000000000009760         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000009762         xor        eax, eax
0000000000009764         call       j_fcntl                                     ; fcntl
0000000000009769         mov        ebx, eax
000000000000976b         nop        dword [rax+rax]

                     loc_9770:
0000000000009770         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000009775         xor        rcx, qword [fs:0x28]
000000000000977e         mov        eax, ebx
0000000000009780         jne        loc_98dd

0000000000009786         add        rsp, 0x50
000000000000978a         pop        rbx
000000000000978b         pop        rbp
000000000000978c         pop        r12
000000000000978e         ret
                        ; endp
000000000000978f         align      16

                     loc_9790:
0000000000009790         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000009796         jg         loc_97e0

0000000000009798         cmp        esi, 0x406
000000000000979e         jge        loc_9810

00000000000097a0         cmp        esi, 0x401
00000000000097a6         je         loc_9760

00000000000097a8         cmp        esi, 0x402
00000000000097ae         je         loc_9810

00000000000097b0         cmp        esi, 0x400
00000000000097b6         je         loc_9810

                     loc_97b8:
00000000000097b8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
00000000000097bb         cmp        eax, 0x2f
00000000000097be         ja         loc_98fa

00000000000097c4         add        rax, qword [rsp+0x68+var_58]

                     loc_97c9:
00000000000097c9         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
00000000000097cc         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000097ce         xor        eax, eax
00000000000097d0         call       j_fcntl                                     ; fcntl
00000000000097d5         mov        ebx, eax
00000000000097d7         jmp        loc_9770
00000000000097d9         align      32

                     loc_97e0:
00000000000097e0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
00000000000097e6         je         loc_9810

00000000000097e8         jl         loc_9760

00000000000097ee         cmp        esi, 0x40a
00000000000097f4         jne        loc_97b8

00000000000097f6         jmp        loc_9760
00000000000097fb         align      2048

                     loc_9800:
0000000000009800         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000009803         je         loc_9760

0000000000009809         jg         loc_9810

000000000000980b         cmp        esi, 0x8
000000000000980e         jne        loc_97b8

                     loc_9810:
0000000000009810         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000009813         cmp        eax, 0x2f
0000000000009816         ja         loc_9904

000000000000981c         add        rax, qword [rsp+0x68+var_58]

                     loc_9821:
0000000000009821         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000009823         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000009825         xor        eax, eax
0000000000009827         call       j_fcntl                                     ; fcntl
000000000000982c         mov        ebx, eax
000000000000982e         jmp        loc_9770

                     loc_9833:
0000000000009833         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000009835         xor        eax, eax
0000000000009837         call       j_fcntl                                     ; fcntl
000000000000983c         test       eax, eax
000000000000983e         mov        ebx, eax
0000000000009840         js         loc_9770

0000000000009846         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000984d         jne        loc_9770

                     loc_9853:
0000000000009853         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000009855         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000985a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000985c         call       j_fcntl                                     ; fcntl
0000000000009861         test       eax, eax
0000000000009863         js         loc_9881

0000000000009865         or         eax, 0x1
0000000000009868         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000986d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000986f         mov        edx, eax
0000000000009871         xor        eax, eax
0000000000009873         call       j_fcntl                                     ; fcntl
0000000000009878         cmp        eax, 0xffffffff
000000000000987b         jne        loc_9770

                     loc_9881:
0000000000009881         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000009886         mov        r12d, dword [rax]
0000000000009889         mov        rbp, rax
000000000000988c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000988e         call       j_close                                     ; close
0000000000009893         mov        ebx, 0xffffffff
0000000000009898         mov        dword [rbp], r12d
000000000000989c         jmp        loc_9770
00000000000098a1         align      8

                     loc_98a8:
00000000000098a8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
00000000000098ad         cmp        dword [rax], 0x16
00000000000098b0         jne        loc_971f

00000000000098b6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000098b8         xor        eax, eax
00000000000098ba         mov        edx, r12d
00000000000098bd         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000098bf         call       j_fcntl                                     ; fcntl
00000000000098c4         test       eax, eax
00000000000098c6         mov        ebx, eax
00000000000098c8         js         loc_9770

00000000000098ce         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000098d8         jmp        loc_9853

                     loc_98dd:
00000000000098dd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_98e2:
00000000000098e2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
00000000000098e7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000098e9         mov        edx, dword [rax+0x10]
00000000000098ec         xor        eax, eax
00000000000098ee         call       j_fcntl                                     ; fcntl
00000000000098f3         mov        ebx, eax
00000000000098f5         jmp        loc_9770

                     loc_98fa:
00000000000098fa         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
00000000000098ff         jmp        loc_97c9

                     loc_9904:
0000000000009904         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000009909         jmp        loc_9821
000000000000990e         align      16                                          ; End of unwind block (FDE at 0xcf04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000009910         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xcf3c), CODE XREF=rpl_fclose+31
0000000000009913         push       rbx
0000000000009914         mov        rbx, rdi
0000000000009917         je         loc_992a

0000000000009919         call       j___freading                                ; __freading
000000000000991e         test       eax, eax
0000000000009920         je         loc_992a

0000000000009922         test       dword [rbx], 0x100
0000000000009928         jne        loc_9938

                     loc_992a:
000000000000992a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000992d         pop        rbx
000000000000992e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000009933         align      8

                     loc_9938:
0000000000009938         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000993b         mov        edx, 0x1
0000000000009940         xor        esi, esi
0000000000009942         call       rpl_fseeko                                  ; rpl_fseeko
0000000000009947         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000994a         pop        rbx
000000000000994b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000009950         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xcf3c), Begin of unwind block (FDE at 0xcf5c), CODE XREF=rpl_fflush+50
0000000000009954         cmp        qword [rdi+0x10], rax
0000000000009958         je         loc_9960

                     j_j_fseeko:        // fseeko
000000000000995a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000995f         align      32

                     loc_9960:
0000000000009960         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000009964         cmp        qword [rdi+0x28], rax
0000000000009968         jne        j_j_fseeko                                  ; fseeko

000000000000996a         cmp        qword [rdi+0x48], 0x0
000000000000996f         jne        j_j_fseeko                                  ; fseeko

0000000000009971         push       r12
0000000000009973         push       rbp
0000000000009974         mov        r12d, edx
0000000000009977         push       rbx
0000000000009978         mov        rbp, rsi
000000000000997b         mov        rbx, rdi
000000000000997e         call       j_fileno                                    ; fileno
0000000000009983         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000009986         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000009989         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000998b         call       j_lseek                                     ; lseek
0000000000009990         cmp        rax, 0xffffffffffffffff
0000000000009994         je         loc_99a2

0000000000009996         and        dword [rbx], 0xffffffef
0000000000009999         mov        qword [rbx+0x90], rax
00000000000099a0         xor        eax, eax

                     loc_99a2:
00000000000099a2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000099a3         pop        rbp
00000000000099a4         pop        r12
00000000000099a6         ret
                        ; endp
00000000000099a7         align      16                                          ; End of unwind block (FDE at 0xcf5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48


                     openat_proc_name:
00000000000099b0         push       r14                                         ; Begin of unwind block (FDE at 0xcf8c), CODE XREF=getfileconat+70
00000000000099b2         push       r13
00000000000099b4         push       r12
00000000000099b6         push       rbp
00000000000099b7         push       rbx
00000000000099b8         mov        rbx, rdi
00000000000099bb         sub        rsp, 0x30
00000000000099bf         mov        rax, qword [fs:0x28]
00000000000099c8         mov        qword [rsp+0x58+var_30], rax
00000000000099cd         xor        eax, eax
00000000000099cf         cmp        byte [rdx], 0x0
00000000000099d2         je         loc_9a70

00000000000099d8         mov        eax, dword [proc_status.5461]               ; proc_status.5461
00000000000099de         mov        r12d, esi
00000000000099e1         mov        rbp, rdx
00000000000099e4         test       eax, eax
00000000000099e6         je         loc_9a80

                     loc_99ec:
00000000000099ec         test       eax, eax                                    ; CODE XREF=openat_proc_name+330
00000000000099ee         js         loc_9b00

00000000000099f4         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
00000000000099f7         call       j_strlen                                    ; strlen
00000000000099fc         lea        rdi, qword [rax+0x1b]
0000000000009a00         cmp        rdi, 0xfc0
0000000000009a07         jbe        loc_9a1a

0000000000009a09         call       j_malloc                                    ; malloc
0000000000009a0e         test       rax, rax
0000000000009a11         mov        rbx, rax
0000000000009a14         je         loc_9b00

                     loc_9a1a:
0000000000009a1a         lea        rcx, qword [aProcselffdd]                   ; "/proc/self/fd/%d/", CODE XREF=openat_proc_name+87
0000000000009a21         mov        r8d, r12d
0000000000009a24         mov        rdx, 0xffffffffffffffff
0000000000009a2b         mov        esi, 0x1
0000000000009a30         mov        rdi, rbx
0000000000009a33         xor        eax, eax
0000000000009a35         call       j___sprintf_chk                             ; __sprintf_chk
0000000000009a3a         movsxd     rdi, eax
0000000000009a3d         mov        rsi, rbp                                    ; argument "__src" for method j_strcpy
0000000000009a40         add        rdi, rbx                                    ; argument "__dest" for method j_strcpy
0000000000009a43         call       j_strcpy                                    ; strcpy
0000000000009a48         mov        rax, rbx

                     loc_9a4b:
0000000000009a4b         mov        rcx, qword [rsp+0x58+var_30]                ; CODE XREF=openat_proc_name+198, openat_proc_name+244, openat_proc_name+338
0000000000009a50         xor        rcx, qword [fs:0x28]
0000000000009a59         jne        loc_9b07

0000000000009a5f         add        rsp, 0x30
0000000000009a63         pop        rbx
0000000000009a64         pop        rbp
0000000000009a65         pop        r12
0000000000009a67         pop        r13
0000000000009a69         pop        r14
0000000000009a6b         ret
                        ; endp
0000000000009a6c         align      16

                     loc_9a70:
0000000000009a70         mov        byte [rdi], 0x0                             ; CODE XREF=openat_proc_name+34
0000000000009a73         mov        rax, rdi
0000000000009a76         jmp        loc_9a4b
0000000000009a78         align      128

                     loc_9a80:
0000000000009a80         lea        rdi, qword [aProcselffd]                    ; argument "__file" for method j_open, "/proc/self/fd", CODE XREF=openat_proc_name+54
0000000000009a87         mov        esi, 0x10900                                ; argument "__oflag" for method j_open
0000000000009a8c         call       j_open                                      ; open
0000000000009a91         test       eax, eax
0000000000009a93         mov        r13d, eax
0000000000009a96         jns        loc_9ab0

0000000000009a98         mov        dword [proc_status.5461], 0xffffffff        ; proc_status.5461
0000000000009aa2         xor        eax, eax
0000000000009aa4         jmp        loc_9a4b
0000000000009aa6         align      16

                     loc_9ab0:
0000000000009ab0         lea        rcx, qword [aProcselffddfd]                 ; "/proc/self/fd/%d/../fd", CODE XREF=openat_proc_name+230
0000000000009ab7         mov        r14, rsp
0000000000009aba         mov        r8d, eax
0000000000009abd         mov        edx, 0x20
0000000000009ac2         mov        esi, 0x1
0000000000009ac7         mov        rdi, r14
0000000000009aca         xor        eax, eax
0000000000009acc         call       j___sprintf_chk                             ; __sprintf_chk
0000000000009ad1         xor        esi, esi                                    ; argument "__type" for method j_access
0000000000009ad3         mov        rdi, r14                                    ; argument "__name" for method j_access
0000000000009ad6         call       j_access                                    ; access
0000000000009adb         cmp        eax, 0x1
0000000000009ade         mov        edi, r13d                                   ; argument "__fd" for method j_close
0000000000009ae1         sbb        eax, eax
0000000000009ae3         and        eax, 0x2
0000000000009ae6         sub        eax, 0x1
0000000000009ae9         mov        dword [proc_status.5461], eax               ; proc_status.5461
0000000000009aef         call       j_close                                     ; close
0000000000009af4         mov        eax, dword [proc_status.5461]               ; proc_status.5461
0000000000009afa         jmp        loc_99ec
0000000000009aff         align      256

                     loc_9b00:
0000000000009b00         xor        eax, eax                                    ; CODE XREF=openat_proc_name+62, openat_proc_name+100
0000000000009b02         jmp        loc_9a4b

                     loc_9b07:
0000000000009b07         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_proc_name+169
                        ; endp
0000000000009b0c         align      16                                          ; End of unwind block (FDE at 0xcf8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000009b10         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xcfd4), CODE XREF=fd_safer+17
0000000000009b15         xor        esi, esi
0000000000009b17         xor        eax, eax
0000000000009b19         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
0000000000009b1e         align      32                                          ; End of unwind block (FDE at 0xcfd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000009b20         push       r15                                         ; Begin of unwind block (FDE at 0xcfec), DATA XREF=_start+22
0000000000009b22         push       r14
0000000000009b24         mov        r15, rdx
0000000000009b27         push       r13
0000000000009b29         push       r12
0000000000009b2b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000009b32         push       rbp
0000000000009b33         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000009b3a         push       rbx
0000000000009b3b         mov        r13d, edi
0000000000009b3e         mov        r14, rsi
0000000000009b41         sub        rbp, r12
0000000000009b44         sub        rsp, 0x8
0000000000009b48         sar        rbp, 0x3
0000000000009b4c         call       _init                                       ; _init
0000000000009b51         test       rbp, rbp
0000000000009b54         je         loc_9b76

0000000000009b56         xor        ebx, ebx
0000000000009b58         nop        dword [rax+rax]

                     loc_9b60:
0000000000009b60         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000009b63         mov        rsi, r14
0000000000009b66         mov        edi, r13d
0000000000009b69         call       qword [r12+rbx*8]
0000000000009b6d         add        rbx, 0x1
0000000000009b71         cmp        rbp, rbx
0000000000009b74         jne        loc_9b60

                     loc_9b76:
0000000000009b76         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000009b7a         pop        rbx
0000000000009b7b         pop        rbp
0000000000009b7c         pop        r12
0000000000009b7e         pop        r13
0000000000009b80         pop        r14
0000000000009b82         pop        r15
0000000000009b84         ret
                        ; endp
0000000000009b85         align      16                                          ; End of unwind block (FDE at 0xcfec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000009b90         ret                                                    ; Begin of unwind block (FDE at 0xd034), DATA XREF=_start+15
                        ; endp
0000000000009b92         align      32                                          ; End of unwind block (FDE at 0xd034)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000009ba0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xd04c), __dso_handle, CODE XREF=main+117
0000000000009ba7         xor        esi, esi
0000000000009ba9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000009bae         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xd04c)
0000000000009baf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x9bb0; 0x9bb9[ (9 bytes)
        ; File offset : [39856; 39865[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000009bb0         sub        rsp, 0x8
0000000000009bb4         add        rsp, 0x8
0000000000009bb8         ret
                        ; endp
0000000000009bb9         db  0x00 ; '.'
0000000000009bba         db  0x00 ; '.'
0000000000009bbb         db  0x00 ; '.'
0000000000009bbc         db  0x00 ; '.'
0000000000009bbd         db  0x00 ; '.'
0000000000009bbe         db  0x00 ; '.'
0000000000009bbf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x9bc0; 0xb3d2[ (6162 bytes)
        ; File offset : [39872; 46034[ (6162 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000009bc0         db  0x01 ; '.'
0000000000009bc1         db  0x00 ; '.'
0000000000009bc2         db  0x02 ; '.'
0000000000009bc3         db  0x00 ; '.'
                     aChcon:
0000000000009bc4         db         "chcon", 0                                  ; DATA XREF=main+394, usage+533, usage+844, usage+1028, usage+1047, usage+1081
0000000000009bca         db  0x5b ; '['                                         ; DATA XREF=usage+545
0000000000009bcb         db  0x00 ; '.'
                     aTestInvocation:
0000000000009bcc         db         "test invocation", 0                        ; DATA XREF=usage+584
                     aMulticallInvoc:
0000000000009bdc         db         "Multi-call invocation", 0                  ; DATA XREF=usage+632
                     aSha224sum:
0000000000009bf2         db         "sha224sum", 0                              ; DATA XREF=usage+649
                     aSha2Utilities:
0000000000009bfc         db         "sha2 utilities", 0                         ; DATA XREF=usage+661
                     aSha256sum:
0000000000009c0b         db         "sha256sum", 0                              ; DATA XREF=usage+552
                     aSha384sum:
0000000000009c15         db         "sha384sum", 0                              ; DATA XREF=usage+596
                     aSha512sum:
0000000000009c1f         db         "sha512sum", 0                              ; DATA XREF=usage+620
                     aNsOnlineHelpSn:
0000000000009c29         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+730
0000000000009c40         db  0x47 ; 'G'                                         ; DATA XREF=main+387, usage+758, usage+951, emit_bug_reporting_address+68
0000000000009c41         db  0x4e ; 'N'
0000000000009c42         db  0x55 ; 'U'
0000000000009c43         db  0x20 ; ' '
                     aCoreutils:
0000000000009c44         db         "coreutils", 0                              ; DATA XREF=main+86, main+98, usage+608
0000000000009c4e         db  0x65 ; 'e'                                         ; DATA XREF=usage+797, usage+990
0000000000009c4f         db  0x6e ; 'n'
0000000000009c50         db  0x5f ; '_'
0000000000009c51         db  0x00 ; '.'
                     aFullDocumentat:
0000000000009c52         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+825, usage+1014
                     aUsrlocalsharel:
0000000000009c6d         db         "/usr/local/share/locale", 0                ; DATA XREF=main+79
                     aJimMeyering:
0000000000009c85         db         "Jim Meyering", 0                           ; DATA XREF=main+373
                     aRussellCoker:
0000000000009c92         db         "Russell Coker", 0                          ; DATA XREF=main+380
                     aHlprhvurtl:
0000000000009ca0         db         "HLPRhvu:r:t:l:", 0                         ; DATA XREF=main+143
                     aRHRequiresP:
0000000000009caf         db         "-R -h requires -P", 0                      ; DATA XREF=sub_2150+1495
                     aMissingOperand:
0000000000009cc1         db         "missing operand", 0                        ; DATA XREF=sub_2150+561
                     aMissingOperand_9cd1:        // aMissingOperand
0000000000009cd1         db         "missing operand after %s", 0               ; DATA XREF=sub_2150+1541
                     aInvalidContext:
0000000000009cea         db         "invalid context: %s", 0                    ; DATA XREF=sub_2150+1412
                     aFtsreadFailed:
0000000000009cfe         db         "fts_read failed", 0                        ; DATA XREF=sub_2150+695
                     aCannotAccessS:
0000000000009d0e         db         "cannot access %s", 0                       ; DATA XREF=main+779
                     aCannotReadDire:
0000000000009d1f         db         "cannot read directory %s", 0               ; DATA XREF=sub_2150+285
                     aFtscloseFailed:
0000000000009d38         db         "fts_close failed", 0                       ; DATA XREF=main+893
                     aRecursive:
0000000000009d49         db         "recursive", 0
0000000000009d53         db  0x6e ; 'n'
0000000000009d54         db  0x6f ; 'o'
0000000000009d55         db  0x2d ; '-'
0000000000009d56         db  0x64 ; 'd'
0000000000009d57         db  0x65 ; 'e'
                     aReference:
0000000000009d58         db         "reference", 0
0000000000009d62         db  0x6e ; 'n'
0000000000009d63         db  0x6f ; 'o'
0000000000009d64         db  0x2d ; '-'
                     aPreserveroot:
0000000000009d65         db         "preserve-root", 0
                     aUser:
0000000000009d73         db         "user", 0
                     aRole:
0000000000009d78         db         "role", 0
                     aType:
0000000000009d7d         db         "type", 0
                     aRange:
0000000000009d82         db         "range", 0
                     aVerbose:
0000000000009d88         db         "verbose", 0
                     aHelp:
0000000000009d90         db         "help", 0
                     aVersion:
0000000000009d95         db         "version", 0
0000000000009d9d         align      32
                     aTrySHelpForMor:
0000000000009da0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000009dc7         align      8
                     aUsageSOptionCo:
0000000000009dc8         db         "Usage: %s [OPTION]... CONTEXT FILE...\n  or:  %s [OPTION]... [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n", 0 ; DATA XREF=usage+93
0000000000009e66         align      8
                     aChangeTheSelin:
0000000000009e68         db         "Change the SELinux security context of each FILE to CONTEXT.\nWith --reference, change the security context of each FILE to that of RFILE.\n", 0 ; DATA XREF=usage+138
0000000000009ef3         align      8
                     aNmandatoryArgu:
0000000000009ef8         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+175
0000000000009f43         db  0x00 ; '.'
0000000000009f44         db  0x00 ; '.'
0000000000009f45         db  0x00 ; '.'
0000000000009f46         db  0x00 ; '.'
0000000000009f47         db  0x00 ; '.'
0000000000009f48         db  0x20 ; ' '                                         ; DATA XREF=usage+212
0000000000009f49         db  0x20 ; ' '
0000000000009f4a         db  0x20 ; ' '
0000000000009f4b         db  0x20 ; ' '
0000000000009f4c         db  0x20 ; ' '
0000000000009f4d         db  0x20 ; ' '
0000000000009f4e         db  0x2d ; '-'
0000000000009f4f         db  0x2d ; '-'
0000000000009f50         db  0x64 ; 'd'
0000000000009f51         db  0x65 ; 'e'
0000000000009f52         db  0x72 ; 'r'
0000000000009f53         db  0x65 ; 'e'
0000000000009f54         db  0x66 ; 'f'
0000000000009f55         db  0x65 ; 'e'
0000000000009f56         db  0x72 ; 'r'
0000000000009f57         db  0x65 ; 'e'
0000000000009f58         db  0x6e ; 'n'
0000000000009f59         db  0x63 ; 'c'
0000000000009f5a         db  0x65 ; 'e'
0000000000009f5b         db  0x20 ; ' '
0000000000009f5c         db  0x20 ; ' '
0000000000009f5d         db  0x20 ; ' '
0000000000009f5e         db  0x20 ; ' '
0000000000009f5f         db  0x20 ; ' '
0000000000009f60         db  0x20 ; ' '
0000000000009f61         db  0x61 ; 'a'
0000000000009f62         db  0x66 ; 'f'
0000000000009f63         db  0x66 ; 'f'
0000000000009f64         db  0x65 ; 'e'
0000000000009f65         db  0x63 ; 'c'
0000000000009f66         db  0x74 ; 't'
0000000000009f67         db  0x20 ; ' '
0000000000009f68         db  0x74 ; 't'
0000000000009f69         db  0x68 ; 'h'
0000000000009f6a         db  0x65 ; 'e'
0000000000009f6b         db  0x20 ; ' '
0000000000009f6c         db  0x72 ; 'r'
0000000000009f6d         db  0x65 ; 'e'
0000000000009f6e         db  0x66 ; 'f'
0000000000009f6f         db  0x65 ; 'e'
0000000000009f70         db  0x72 ; 'r'
0000000000009f71         db  0x65 ; 'e'
0000000000009f72         db  0x6e ; 'n'
0000000000009f73         db  0x74 ; 't'
0000000000009f74         db  0x20 ; ' '
0000000000009f75         db  0x6f ; 'o'
0000000000009f76         db  0x66 ; 'f'
0000000000009f77         db  0x20 ; ' '
0000000000009f78         db  0x65 ; 'e'
0000000000009f79         db  0x61 ; 'a'
0000000000009f7a         db  0x63 ; 'c'
0000000000009f7b         db  0x68 ; 'h'
0000000000009f7c         db  0x20 ; ' '
0000000000009f7d         db  0x73 ; 's'
0000000000009f7e         db  0x79 ; 'y'
0000000000009f7f         db  0x6d ; 'm'
0000000000009f80         db  0x62 ; 'b'
0000000000009f81         db  0x6f ; 'o'
0000000000009f82         db  0x6c ; 'l'
0000000000009f83         db  0x69 ; 'i'
0000000000009f84         db  0x63 ; 'c'
0000000000009f85         db  0x20 ; ' '
0000000000009f86         db  0x6c ; 'l'
0000000000009f87         db  0x69 ; 'i'
0000000000009f88         db  0x6e ; 'n'
0000000000009f89         db  0x6b ; 'k'
0000000000009f8a         db  0x20 ; ' '
0000000000009f8b         db  0x28 ; '('
0000000000009f8c         db  0x74 ; 't'
0000000000009f8d         db  0x68 ; 'h'
0000000000009f8e         db  0x69 ; 'i'
0000000000009f8f         db  0x73 ; 's'
0000000000009f90         db  0x20 ; ' '
0000000000009f91         db  0x69 ; 'i'
0000000000009f92         db  0x73 ; 's'
0000000000009f93         db  0x0a ; '.'
0000000000009f94         db  0x20 ; ' '
0000000000009f95         db  0x20 ; ' '
0000000000009f96         db  0x20 ; ' '
0000000000009f97         db  0x20 ; ' '
0000000000009f98         db  0x20 ; ' '
0000000000009f99         db  0x20 ; ' '
0000000000009f9a         db  0x20 ; ' '
0000000000009f9b         db  0x20 ; ' '
0000000000009f9c         db  0x20 ; ' '
0000000000009f9d         db  0x20 ; ' '
0000000000009f9e         db  0x20 ; ' '
0000000000009f9f         db  0x20 ; ' '
0000000000009fa0         db  0x20 ; ' '                                         ; DATA XREF=leaf_optimization+72
0000000000009fa1         db  0x20 ; ' '
0000000000009fa2         db  0x20 ; ' '
0000000000009fa3         db  0x20 ; ' '
0000000000009fa4         db  0x20 ; ' '
0000000000009fa5         db  0x20 ; ' '
0000000000009fa6         db  0x20 ; ' '
0000000000009fa7         db  0x20 ; ' '
0000000000009fa8         db  0x20 ; ' '
0000000000009fa9         db  0x20 ; ' '
0000000000009faa         db  0x20 ; ' '
0000000000009fab         db  0x20 ; ' '
0000000000009fac         db  0x20 ; ' '
0000000000009fad         db  0x74 ; 't'
0000000000009fae         db  0x68 ; 'h'
0000000000009faf         db  0x65 ; 'e'
0000000000009fb0         db  0x20 ; ' '
0000000000009fb1         db  0x64 ; 'd'
0000000000009fb2         db  0x65 ; 'e'
0000000000009fb3         db  0x66 ; 'f'
0000000000009fb4         db  0x61 ; 'a'
0000000000009fb5         db  0x75 ; 'u'
0000000000009fb6         db  0x6c ; 'l'
0000000000009fb7         db  0x74 ; 't'
0000000000009fb8         db  0x29 ; ')'
0000000000009fb9         db  0x2c ; ','
0000000000009fba         db  0x20 ; ' '
0000000000009fbb         db  0x72 ; 'r'
0000000000009fbc         db  0x61 ; 'a'
0000000000009fbd         db  0x74 ; 't'
0000000000009fbe         db  0x68 ; 'h'
0000000000009fbf         db  0x65 ; 'e'
0000000000009fc0         db  0x72 ; 'r'
0000000000009fc1         db  0x20 ; ' '
0000000000009fc2         db  0x74 ; 't'
0000000000009fc3         db  0x68 ; 'h'
0000000000009fc4         db  0x61 ; 'a'
0000000000009fc5         db  0x6e ; 'n'
0000000000009fc6         db  0x20 ; ' '
0000000000009fc7         db  0x74 ; 't'
0000000000009fc8         db  0x68 ; 'h'
0000000000009fc9         db  0x65 ; 'e'
0000000000009fca         db  0x20 ; ' '
0000000000009fcb         db  0x73 ; 's'
0000000000009fcc         db  0x79 ; 'y'
0000000000009fcd         db  0x6d ; 'm'
0000000000009fce         db  0x62 ; 'b'
0000000000009fcf         db  0x6f ; 'o'
0000000000009fd0         db  0x6c ; 'l'
0000000000009fd1         db  0x69 ; 'i'
0000000000009fd2         db  0x63 ; 'c'
0000000000009fd3         db  0x20 ; ' '
0000000000009fd4         db  0x6c ; 'l'
0000000000009fd5         db  0x69 ; 'i'
0000000000009fd6         db  0x6e ; 'n'
0000000000009fd7         db  0x6b ; 'k'
0000000000009fd8         db  0x20 ; ' '
0000000000009fd9         db  0x69 ; 'i'
0000000000009fda         db  0x74 ; 't'
0000000000009fdb         db  0x73 ; 's'
0000000000009fdc         db  0x65 ; 'e'
0000000000009fdd         db  0x6c ; 'l'
0000000000009fde         db  0x66 ; 'f'
0000000000009fdf         db  0x0a ; '.'
0000000000009fe0         db  0x20 ; ' '
0000000000009fe1         db  0x20 ; ' '
0000000000009fe2         db  0x2d ; '-'
0000000000009fe3         db  0x68 ; 'h'
0000000000009fe4         db  0x2c ; ','
0000000000009fe5         db  0x20 ; ' '
0000000000009fe6         db  0x2d ; '-'
0000000000009fe7         db  0x2d ; '-'
0000000000009fe8         db  0x6e ; 'n'
0000000000009fe9         db  0x6f ; 'o'
0000000000009fea         db  0x2d ; '-'
0000000000009feb         db  0x64 ; 'd'
0000000000009fec         db  0x65 ; 'e'
0000000000009fed         db  0x72 ; 'r'
0000000000009fee         db  0x65 ; 'e'
0000000000009fef         db  0x66 ; 'f'
0000000000009ff0         db  0x65 ; 'e'
0000000000009ff1         db  0x72 ; 'r'
0000000000009ff2         db  0x65 ; 'e'
0000000000009ff3         db  0x6e ; 'n'
0000000000009ff4         db  0x63 ; 'c'
0000000000009ff5         db  0x65 ; 'e'
0000000000009ff6         db  0x20 ; ' '
0000000000009ff7         db  0x20 ; ' '
0000000000009ff8         db  0x20 ; ' '
0000000000009ff9         db  0x61 ; 'a'
0000000000009ffa         db  0x66 ; 'f'
0000000000009ffb         db  0x66 ; 'f'
0000000000009ffc         db  0x65 ; 'e'
0000000000009ffd         db  0x63 ; 'c'
0000000000009ffe         db  0x74 ; 't'
0000000000009fff         db  0x20 ; ' '
                     aSymbolicLinksI:
000000000000a000         db         "symbolic links instead of any referenced file\n", 0 ; DATA XREF=fts_stat+189
000000000000a02f         align      16
                     aUUseruserSetUs:
000000000000a030         db         "  -u, --user=USER        set user USER in the target security context\n  -r, --role=ROLE        set role ROLE in the target security context\n  -t, --type=TYPE        set type TYPE in the target security context\n  -l, --range=RANGE      set range RANGE in th" ; DATA XREF=usage+249
000000000000a130         db         "e target security context\n", 0
000000000000a14b         align      16
                     aNopreserveroot:
000000000000a150         db         "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n", 0 ; DATA XREF=usage+286
                     aReferencerfile:
000000000000a1d0         db         "      --reference=RFILE  use RFILE's security context rather than specifying\n                         a CONTEXT value\n", 0 ; DATA XREF=usage+323
000000000000a247         align      8
                     aRRecursiveOper:
000000000000a248         db         "  -R, --recursive        operate on files and directories recursively\n", 0 ; DATA XREF=usage+360
000000000000a28f         align      16
                     aVVerboseOutput:
000000000000a290         db         "  -v, --verbose          output a diagnostic for every file processed\n", 0 ; DATA XREF=usage+397
000000000000a2d7         align      8
                     aNtheFollowingO:
000000000000a2d8         db         "\nThe following options modify how a hierarchy is traversed when the -R\noption is also specified.  If more than one is specified, only the final\none takes effect.\n\n  -H                     if a command line argument is a symbolic link\n                      " ; DATA XREF=usage+434
000000000000a3d8         db         "   to a directory, traverse it\n  -L                     traverse every symbolic link to a directory\n                         encountered\n  -P                     do not traverse any symbolic links (default)\n\n", 0
000000000000a4a9         align      16
                     aHelpDisplayThi:
000000000000a4b0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+471
000000000000a4dd         align      32
                     aVersionOutputV:
000000000000a4e0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+508
000000000000a516         align      8
                     aHttpswwwgnuorg:
000000000000a518         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+751, usage+851, usage+944, usage+1054, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000a540         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1095
000000000000a587         align      8
                     aOrAvailableLoc:
000000000000a588         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+894
000000000000a5bb         align      64
                     aRDereferenceRe:
000000000000a5c0         db         "-R --dereference requires either -H or -L", 0 ; DATA XREF=sub_2150+1454
000000000000a5ea         align      16
                     aFailedToGetSec:
000000000000a5f0         db         "failed to get security context of %s", 0   ; DATA XREF=sub_2150+767, sub_2150+1326
000000000000a615         align      8
                     aFailedToGetAtt:
000000000000a618         db         "failed to get attributes of %s", 0         ; DATA XREF=sub_2150+993
000000000000a637         db  0x00 ; '.'
                     aItIsDangerousT:
000000000000a638         db         "it is dangerous to operate recursively on %s", 0 ; DATA XREF=sub_2150+114, sub_2150+839
000000000000a665         db  0x00 ; '.'
000000000000a666         db  0x00 ; '.'
000000000000a667         db  0x00 ; '.'
                     aItIsDangerousT_a668:        // aItIsDangerousT
000000000000a668         db         "it is dangerous to operate recursively on %s (same as %s)", 0 ; DATA XREF=sub_2150+1146, sub_2150+1247
000000000000a6a2         db  0x00 ; '.'
000000000000a6a3         db  0x00 ; '.'
000000000000a6a4         db  0x00 ; '.'
000000000000a6a5         db  0x00 ; '.'
000000000000a6a6         db  0x00 ; '.'
000000000000a6a7         db  0x00 ; '.'
                     aUseNopreserver:
000000000000a6a8         db         "use --no-preserve-root to override this failsafe", 0 ; DATA XREF=sub_2150+153, sub_2150+878
000000000000a6d9         db  0x00 ; '.'
000000000000a6da         db  0x00 ; '.'
000000000000a6db         db  0x00 ; '.'
000000000000a6dc         db  0x00 ; '.'
000000000000a6dd         db  0x00 ; '.'
000000000000a6de         db  0x00 ; '.'
000000000000a6df         db  0x00 ; '.'
                     aWarningCircula:
000000000000a6e0         db         "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 0 ; DATA XREF=main+1158
000000000000a79a         db  0x00 ; '.'
000000000000a79b         db  0x00 ; '.'
000000000000a79c         db  0x00 ; '.'
000000000000a79d         db  0x00 ; '.'
000000000000a79e         db  0x00 ; '.'
000000000000a79f         db  0x00 ; '.'
                     aChangingSecuri:
000000000000a7a0         db         "changing security context of %s\n", 0      ; DATA XREF=sub_2150+341
000000000000a7c1         align      8
                     aCantApplyParti:
000000000000a7c8         db         "can't apply partial context to unlabeled file %s", 0 ; DATA XREF=sub_2150+1049
000000000000a7f9         align      2048
                     aFailedToCreate:
000000000000a800         db         "failed to create security context: %s", 0  ; DATA XREF=sub_2150+445
000000000000a826         align      8
                     aFailedToChange:
000000000000a828         db         "failed to change context of %s to %s", 0   ; DATA XREF=sub_2150+632
000000000000a84d         db  0x00 ; '.'
000000000000a84e         db  0x00 ; '.'
000000000000a84f         db  0x00 ; '.'
000000000000a850         db  0x48 ; 'H'                                         ; DATA XREF=main+665
000000000000a851         db  0x78 ; 'x'
000000000000a852         db  0xff ; '.'
000000000000a853         db  0xff ; '.'
000000000000a854         db  0x05 ; '.'
000000000000a855         db  0x79 ; 'y'
000000000000a856         db  0xff ; '.'
000000000000a857         db  0xff ; '.'
000000000000a858         db  0xae ; '.'
000000000000a859         db  0x78 ; 'x'
000000000000a85a         db  0xff ; '.'
000000000000a85b         db  0xff ; '.'
000000000000a85c         db  0x48 ; 'H'
000000000000a85d         db  0x78 ; 'x'
000000000000a85e         db  0xff ; '.'
000000000000a85f         db  0xff ; '.'
000000000000a860         db  0x08 ; '.'
000000000000a861         db  0x7a ; 'z'
000000000000a862         db  0xff ; '.'
000000000000a863         db  0xff ; '.'
000000000000a864         db  0x48 ; 'H'
000000000000a865         db  0x78 ; 'x'
000000000000a866         db  0xff ; '.'
000000000000a867         db  0xff ; '.'
000000000000a868         db  0x1a ; '.'
000000000000a869         db  0x78 ; 'x'
000000000000a86a         db  0xff ; '.'
000000000000a86b         db  0xff ; '.'
000000000000a86c         db  0xda ; '.'
000000000000a86d         db  0x79 ; 'y'
000000000000a86e         db  0xff ; '.'
000000000000a86f         db  0xff ; '.'
000000000000a870         db  0x48 ; 'H'
000000000000a871         db  0x78 ; 'x'
000000000000a872         db  0xff ; '.'
000000000000a873         db  0xff ; '.'
000000000000a874         db  0x48 ; 'H'
000000000000a875         db  0x78 ; 'x'
000000000000a876         db  0xff ; '.'
000000000000a877         db  0xff ; '.'
000000000000a878         db  0x3c ; '<'
000000000000a879         db  0x77 ; 'w'
000000000000a87a         db  0xff ; '.'
000000000000a87b         db  0xff ; '.'
                     a831:
000000000000a87c         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000a881         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000a88d         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
000000000000a894         align      8
                     aANullArgv0WasP:
000000000000a898         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000a8d0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000a8d8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000a8d9         db  0x74 ; 't'
000000000000a8da         db  0x2d ; '-'
000000000000a8db         db  0x00 ; '.'
000000000000a8dc         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000a8dd         db  0x80 ; '.'
000000000000a8de         db  0x98 ; '.'
000000000000a8df         db  0x00 ; '.'
000000000000a8e0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000a8e1         db  0x80 ; '.'
000000000000a8e2         db  0x99 ; '.'
000000000000a8e3         db  0x00 ; '.'
000000000000a8e4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000a8e5         db  0x07 ; '.'
000000000000a8e6         db  0x65 ; 'e'
000000000000a8e7         db  0x00 ; '.'
000000000000a8e8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000a8e9         db  0xaf ; '.'
000000000000a8ea         db  0x00 ; '.'
000000000000a8eb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_36b0+1451, sub_36b0+1493, sub_36b0+2429
000000000000a8ec         db  0x00 ; '.'
000000000000a8ed         db  0x60 ; '`'                                         ; DATA XREF=sub_36b0+1627, sub_36b0+1654
000000000000a8ee         db  0x00 ; '.'
                     aLiteral:
000000000000a8ef         db         "literal", 0
                     aShell:
000000000000a8f7         db         "shell", 0
                     aShellalways:
000000000000a8fd         db         "shell-always", 0
000000000000a90a         db  0x73 ; 's'
000000000000a90b         db  0x68 ; 'h'
000000000000a90c         db  0x65 ; 'e'
000000000000a90d         db  0x6c ; 'l'
000000000000a90e         db  0x6c ; 'l'
000000000000a90f         db  0x2d ; '-'
                     aEscape:
000000000000a910         db         "escape", 0
                     aShellescapealw:
000000000000a917         db         "shell-escape-always", 0
                     aCmaybe:
000000000000a92b         db         "c-maybe", 0
                     aClocale:
000000000000a933         db         "clocale", 0
000000000000a93b         align      64
                     switch_table_a940:        // switch_table
000000000000a940         dd         quotearg_buffer_restyled.loc_3daa-switch_table_a940, quotearg_buffer_restyled.loc_3003-switch_table_a940, quotearg_buffer_restyled.loc_3fd8-switch_table_a940, quotearg_buffer_restyled.loc_3de4-switch_table_a940 ; switch table used at 0x3001 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000a950         dd         quotearg_buffer_restyled.loc_3bd4-switch_table_a940, quotearg_buffer_restyled.loc_3c30-switch_table_a940, quotearg_buffer_restyled.loc_3c85-switch_table_a940, quotearg_buffer_restyled.loc_3cca-switch_table_a940
000000000000a960         dd         3 dup (quotearg_buffer_restyled.loc_3d04-switch_table_a940)
000000000000a96c         db  0x14 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000a96d         db  0x8a ; '.'
000000000000a96e         db  0xff ; '.'
000000000000a96f         db  0xff ; '.'
000000000000a970         db  0xfc ; '.'
000000000000a971         db  0x8a ; '.'
000000000000a972         db  0xff ; '.'
000000000000a973         db  0xff ; '.'
000000000000a974         db  0xfc ; '.'
000000000000a975         db  0x8a ; '.'
000000000000a976         db  0xff ; '.'
000000000000a977         db  0xff ; '.'
000000000000a978         db  0xfc ; '.'
000000000000a979         db  0x8a ; '.'
000000000000a97a         db  0xff ; '.'
000000000000a97b         db  0xff ; '.'
000000000000a97c         db  0xfc ; '.'
000000000000a97d         db  0x8a ; '.'
000000000000a97e         db  0xff ; '.'
000000000000a97f         db  0xff ; '.'
000000000000a980         db  0xfc ; '.'
000000000000a981         db  0x8a ; '.'
000000000000a982         db  0xff ; '.'
000000000000a983         db  0xff ; '.'
000000000000a984         db  0xfc ; '.'
000000000000a985         db  0x8a ; '.'
000000000000a986         db  0xff ; '.'
000000000000a987         db  0xff ; '.'
000000000000a988         db  0x54 ; 'T'
000000000000a989         db  0x8a ; '.'
000000000000a98a         db  0xff ; '.'
000000000000a98b         db  0xff ; '.'
000000000000a98c         db  0x5c ; '\'
000000000000a98d         db  0x89 ; '.'
000000000000a98e         db  0xff ; '.'
000000000000a98f         db  0xff ; '.'
000000000000a990         db  0x1c ; '.'
000000000000a991         db  0x89 ; '.'
000000000000a992         db  0xff ; '.'
000000000000a993         db  0xff ; '.'
000000000000a994         db  0xe4 ; '.'
000000000000a995         db  0x8a ; '.'
000000000000a996         db  0xff ; '.'
000000000000a997         db  0xff ; '.'
000000000000a998         db  0xd4 ; '.'
000000000000a999         db  0x8a ; '.'
000000000000a99a         db  0xff ; '.'
000000000000a99b         db  0xff ; '.'
000000000000a99c         db  0xc4 ; '.'
000000000000a99d         db  0x8a ; '.'
000000000000a99e         db  0xff ; '.'
000000000000a99f         db  0xff ; '.'
000000000000a9a0         db  0xb4 ; '.'
000000000000a9a1         db  0x8a ; '.'
000000000000a9a2         db  0xff ; '.'
000000000000a9a3         db  0xff ; '.'
000000000000a9a4         db  0xfc ; '.'
000000000000a9a5         db  0x8a ; '.'
000000000000a9a6         db  0xff ; '.'
000000000000a9a7         db  0xff ; '.'
000000000000a9a8         db  0xfc ; '.'
000000000000a9a9         db  0x8a ; '.'
000000000000a9aa         db  0xff ; '.'
000000000000a9ab         db  0xff ; '.'
000000000000a9ac         db  0xfc ; '.'
000000000000a9ad         db  0x8a ; '.'
000000000000a9ae         db  0xff ; '.'
000000000000a9af         db  0xff ; '.'
000000000000a9b0         db  0xfc ; '.'
000000000000a9b1         db  0x8a ; '.'
000000000000a9b2         db  0xff ; '.'
000000000000a9b3         db  0xff ; '.'
000000000000a9b4         db  0xfc ; '.'
000000000000a9b5         db  0x8a ; '.'
000000000000a9b6         db  0xff ; '.'
000000000000a9b7         db  0xff ; '.'
000000000000a9b8         db  0xfc ; '.'
000000000000a9b9         db  0x8a ; '.'
000000000000a9ba         db  0xff ; '.'
000000000000a9bb         db  0xff ; '.'
000000000000a9bc         db  0xfc ; '.'
000000000000a9bd         db  0x8a ; '.'
000000000000a9be         db  0xff ; '.'
000000000000a9bf         db  0xff ; '.'
000000000000a9c0         db  0xfc ; '.'
000000000000a9c1         db  0x8a ; '.'
000000000000a9c2         db  0xff ; '.'
000000000000a9c3         db  0xff ; '.'
000000000000a9c4         db  0xfc ; '.'
000000000000a9c5         db  0x8a ; '.'
000000000000a9c6         db  0xff ; '.'
000000000000a9c7         db  0xff ; '.'
000000000000a9c8         db  0xfc ; '.'
000000000000a9c9         db  0x8a ; '.'
000000000000a9ca         db  0xff ; '.'
000000000000a9cb         db  0xff ; '.'
000000000000a9cc         db  0xfc ; '.'
000000000000a9cd         db  0x8a ; '.'
000000000000a9ce         db  0xff ; '.'
000000000000a9cf         db  0xff ; '.'
000000000000a9d0         db  0xfc ; '.'
000000000000a9d1         db  0x8a ; '.'
000000000000a9d2         db  0xff ; '.'
000000000000a9d3         db  0xff ; '.'
000000000000a9d4         db  0xfc ; '.'
000000000000a9d5         db  0x8a ; '.'
000000000000a9d6         db  0xff ; '.'
000000000000a9d7         db  0xff ; '.'
000000000000a9d8         db  0xfc ; '.'
000000000000a9d9         db  0x8a ; '.'
000000000000a9da         db  0xff ; '.'
000000000000a9db         db  0xff ; '.'
000000000000a9dc         db  0xfc ; '.'
000000000000a9dd         db  0x8a ; '.'
000000000000a9de         db  0xff ; '.'
000000000000a9df         db  0xff ; '.'
000000000000a9e0         db  0xfc ; '.'
000000000000a9e1         db  0x8a ; '.'
000000000000a9e2         db  0xff ; '.'
000000000000a9e3         db  0xff ; '.'
000000000000a9e4         db  0xfc ; '.'
000000000000a9e5         db  0x8a ; '.'
000000000000a9e6         db  0xff ; '.'
000000000000a9e7         db  0xff ; '.'
000000000000a9e8         db  0xfc ; '.'
000000000000a9e9         db  0x8a ; '.'
000000000000a9ea         db  0xff ; '.'
000000000000a9eb         db  0xff ; '.'
000000000000a9ec         db  0xa4 ; '.'
000000000000a9ed         db  0x8a ; '.'
000000000000a9ee         db  0xff ; '.'
000000000000a9ef         db  0xff ; '.'
000000000000a9f0         db  0x94 ; '.'
000000000000a9f1         db  0x8a ; '.'
000000000000a9f2         db  0xff ; '.'
000000000000a9f3         db  0xff ; '.'
000000000000a9f4         db  0x94 ; '.'
000000000000a9f5         db  0x8a ; '.'
000000000000a9f6         db  0xff ; '.'
000000000000a9f7         db  0xff ; '.'
000000000000a9f8         db  0x64 ; 'd'
000000000000a9f9         db  0x8a ; '.'
000000000000a9fa         db  0xff ; '.'
000000000000a9fb         db  0xff ; '.'
000000000000a9fc         db  0x94 ; '.'
000000000000a9fd         db  0x8a ; '.'
000000000000a9fe         db  0xff ; '.'
000000000000a9ff         db  0xff ; '.'
000000000000aa00         db  0x3c ; '<'
000000000000aa01         db  0x8a ; '.'
000000000000aa02         db  0xff ; '.'
000000000000aa03         db  0xff ; '.'
000000000000aa04         db  0x94 ; '.'
000000000000aa05         db  0x8a ; '.'
000000000000aa06         db  0xff ; '.'
000000000000aa07         db  0xff ; '.'
000000000000aa08         db  0xf7 ; '.'
000000000000aa09         db  0x88 ; '.'
000000000000aa0a         db  0xff ; '.'
000000000000aa0b         db  0xff ; '.'
000000000000aa0c         db  0x94 ; '.'
000000000000aa0d         db  0x8a ; '.'
000000000000aa0e         db  0xff ; '.'
000000000000aa0f         db  0xff ; '.'
000000000000aa10         db  0x94 ; '.'
000000000000aa11         db  0x8a ; '.'
000000000000aa12         db  0xff ; '.'
000000000000aa13         db  0xff ; '.'
000000000000aa14         db  0x94 ; '.'
000000000000aa15         db  0x8a ; '.'
000000000000aa16         db  0xff ; '.'
000000000000aa17         db  0xff ; '.'
000000000000aa18         db  0x3c ; '<'
000000000000aa19         db  0x8a ; '.'
000000000000aa1a         db  0xff ; '.'
000000000000aa1b         db  0xff ; '.'
000000000000aa1c         db  0x3c ; '<'
000000000000aa1d         db  0x8a ; '.'
000000000000aa1e         db  0xff ; '.'
000000000000aa1f         db  0xff ; '.'
000000000000aa20         db  0x3c ; '<'
000000000000aa21         db  0x8a ; '.'
000000000000aa22         db  0xff ; '.'
000000000000aa23         db  0xff ; '.'
000000000000aa24         db  0x3c ; '<'
000000000000aa25         db  0x8a ; '.'
000000000000aa26         db  0xff ; '.'
000000000000aa27         db  0xff ; '.'
000000000000aa28         db  0x3c ; '<'
000000000000aa29         db  0x8a ; '.'
000000000000aa2a         db  0xff ; '.'
000000000000aa2b         db  0xff ; '.'
000000000000aa2c         db  0x3c ; '<'
000000000000aa2d         db  0x8a ; '.'
000000000000aa2e         db  0xff ; '.'
000000000000aa2f         db  0xff ; '.'
000000000000aa30         db  0x3c ; '<'
000000000000aa31         db  0x8a ; '.'
000000000000aa32         db  0xff ; '.'
000000000000aa33         db  0xff ; '.'
000000000000aa34         db  0x3c ; '<'
000000000000aa35         db  0x8a ; '.'
000000000000aa36         db  0xff ; '.'
000000000000aa37         db  0xff ; '.'
000000000000aa38         db  0x3c ; '<'
000000000000aa39         db  0x8a ; '.'
000000000000aa3a         db  0xff ; '.'
000000000000aa3b         db  0xff ; '.'
000000000000aa3c         db  0x3c ; '<'
000000000000aa3d         db  0x8a ; '.'
000000000000aa3e         db  0xff ; '.'
000000000000aa3f         db  0xff ; '.'
000000000000aa40         db  0x3c ; '<'
000000000000aa41         db  0x8a ; '.'
000000000000aa42         db  0xff ; '.'
000000000000aa43         db  0xff ; '.'
000000000000aa44         db  0x3c ; '<'
000000000000aa45         db  0x8a ; '.'
000000000000aa46         db  0xff ; '.'
000000000000aa47         db  0xff ; '.'
000000000000aa48         db  0x3c ; '<'
000000000000aa49         db  0x8a ; '.'
000000000000aa4a         db  0xff ; '.'
000000000000aa4b         db  0xff ; '.'
000000000000aa4c         db  0x3c ; '<'
000000000000aa4d         db  0x8a ; '.'
000000000000aa4e         db  0xff ; '.'
000000000000aa4f         db  0xff ; '.'
000000000000aa50         db  0x3c ; '<'
000000000000aa51         db  0x8a ; '.'
000000000000aa52         db  0xff ; '.'
000000000000aa53         db  0xff ; '.'
000000000000aa54         db  0x3c ; '<'
000000000000aa55         db  0x8a ; '.'
000000000000aa56         db  0xff ; '.'
000000000000aa57         db  0xff ; '.'
000000000000aa58         db  0x94 ; '.'
000000000000aa59         db  0x8a ; '.'
000000000000aa5a         db  0xff ; '.'
000000000000aa5b         db  0xff ; '.'
000000000000aa5c         db  0x94 ; '.'
000000000000aa5d         db  0x8a ; '.'
000000000000aa5e         db  0xff ; '.'
000000000000aa5f         db  0xff ; '.'
000000000000aa60         db  0x94 ; '.'
000000000000aa61         db  0x8a ; '.'
000000000000aa62         db  0xff ; '.'
000000000000aa63         db  0xff ; '.'
000000000000aa64         db  0x94 ; '.'
000000000000aa65         db  0x8a ; '.'
000000000000aa66         db  0xff ; '.'
000000000000aa67         db  0xff ; '.'
000000000000aa68         db  0xc7 ; '.'
000000000000aa69         db  0x88 ; '.'
000000000000aa6a         db  0xff ; '.'
000000000000aa6b         db  0xff ; '.'
000000000000aa6c         db  0xfc ; '.'
000000000000aa6d         db  0x8a ; '.'
000000000000aa6e         db  0xff ; '.'
000000000000aa6f         db  0xff ; '.'
000000000000aa70         db  0x3c ; '<'
000000000000aa71         db  0x8a ; '.'
000000000000aa72         db  0xff ; '.'
000000000000aa73         db  0xff ; '.'
000000000000aa74         db  0x3c ; '<'
000000000000aa75         db  0x8a ; '.'
000000000000aa76         db  0xff ; '.'
000000000000aa77         db  0xff ; '.'
000000000000aa78         db  0x3c ; '<'
000000000000aa79         db  0x8a ; '.'
000000000000aa7a         db  0xff ; '.'
000000000000aa7b         db  0xff ; '.'
000000000000aa7c         db  0x3c ; '<'
000000000000aa7d         db  0x8a ; '.'
000000000000aa7e         db  0xff ; '.'
000000000000aa7f         db  0xff ; '.'
000000000000aa80         db  0x3c ; '<'
000000000000aa81         db  0x8a ; '.'
000000000000aa82         db  0xff ; '.'
000000000000aa83         db  0xff ; '.'
000000000000aa84         db  0x3c ; '<'
000000000000aa85         db  0x8a ; '.'
000000000000aa86         db  0xff ; '.'
000000000000aa87         db  0xff ; '.'
000000000000aa88         db  0x3c ; '<'
000000000000aa89         db  0x8a ; '.'
000000000000aa8a         db  0xff ; '.'
000000000000aa8b         db  0xff ; '.'
000000000000aa8c         db  0x3c ; '<'
000000000000aa8d         db  0x8a ; '.'
000000000000aa8e         db  0xff ; '.'
000000000000aa8f         db  0xff ; '.'
000000000000aa90         db  0x3c ; '<'
000000000000aa91         db  0x8a ; '.'
000000000000aa92         db  0xff ; '.'
000000000000aa93         db  0xff ; '.'
000000000000aa94         db  0x3c ; '<'
000000000000aa95         db  0x8a ; '.'
000000000000aa96         db  0xff ; '.'
000000000000aa97         db  0xff ; '.'
000000000000aa98         db  0x3c ; '<'
000000000000aa99         db  0x8a ; '.'
000000000000aa9a         db  0xff ; '.'
000000000000aa9b         db  0xff ; '.'
000000000000aa9c         db  0x3c ; '<'
000000000000aa9d         db  0x8a ; '.'
000000000000aa9e         db  0xff ; '.'
000000000000aa9f         db  0xff ; '.'
000000000000aaa0         db  0x3c ; '<'
000000000000aaa1         db  0x8a ; '.'
000000000000aaa2         db  0xff ; '.'
000000000000aaa3         db  0xff ; '.'
000000000000aaa4         db  0x3c ; '<'
000000000000aaa5         db  0x8a ; '.'
000000000000aaa6         db  0xff ; '.'
000000000000aaa7         db  0xff ; '.'
000000000000aaa8         db  0x3c ; '<'
000000000000aaa9         db  0x8a ; '.'
000000000000aaaa         db  0xff ; '.'
000000000000aaab         db  0xff ; '.'
000000000000aaac         db  0x3c ; '<'
000000000000aaad         db  0x8a ; '.'
000000000000aaae         db  0xff ; '.'
000000000000aaaf         db  0xff ; '.'
000000000000aab0         db  0x3c ; '<'
000000000000aab1         db  0x8a ; '.'
000000000000aab2         db  0xff ; '.'
000000000000aab3         db  0xff ; '.'
000000000000aab4         db  0x3c ; '<'
000000000000aab5         db  0x8a ; '.'
000000000000aab6         db  0xff ; '.'
000000000000aab7         db  0xff ; '.'
000000000000aab8         db  0x3c ; '<'
000000000000aab9         db  0x8a ; '.'
000000000000aaba         db  0xff ; '.'
000000000000aabb         db  0xff ; '.'
000000000000aabc         db  0x3c ; '<'
000000000000aabd         db  0x8a ; '.'
000000000000aabe         db  0xff ; '.'
000000000000aabf         db  0xff ; '.'
000000000000aac0         db  0x3c ; '<'
000000000000aac1         db  0x8a ; '.'
000000000000aac2         db  0xff ; '.'
000000000000aac3         db  0xff ; '.'
000000000000aac4         db  0x3c ; '<'
000000000000aac5         db  0x8a ; '.'
000000000000aac6         db  0xff ; '.'
000000000000aac7         db  0xff ; '.'
000000000000aac8         db  0x3c ; '<'
000000000000aac9         db  0x8a ; '.'
000000000000aaca         db  0xff ; '.'
000000000000aacb         db  0xff ; '.'
000000000000aacc         db  0x3c ; '<'
000000000000aacd         db  0x8a ; '.'
000000000000aace         db  0xff ; '.'
000000000000aacf         db  0xff ; '.'
000000000000aad0         db  0x3c ; '<'
000000000000aad1         db  0x8a ; '.'
000000000000aad2         db  0xff ; '.'
000000000000aad3         db  0xff ; '.'
000000000000aad4         db  0x3c ; '<'
000000000000aad5         db  0x8a ; '.'
000000000000aad6         db  0xff ; '.'
000000000000aad7         db  0xff ; '.'
000000000000aad8         db  0x94 ; '.'
000000000000aad9         db  0x8a ; '.'
000000000000aada         db  0xff ; '.'
000000000000aadb         db  0xff ; '.'
000000000000aadc         db  0x6c ; 'l'
000000000000aadd         db  0x89 ; '.'
000000000000aade         db  0xff ; '.'
000000000000aadf         db  0xff ; '.'
000000000000aae0         db  0x3c ; '<'
000000000000aae1         db  0x8a ; '.'
000000000000aae2         db  0xff ; '.'
000000000000aae3         db  0xff ; '.'
000000000000aae4         db  0x94 ; '.'
000000000000aae5         db  0x8a ; '.'
000000000000aae6         db  0xff ; '.'
000000000000aae7         db  0xff ; '.'
000000000000aae8         db  0x3c ; '<'
000000000000aae9         db  0x8a ; '.'
000000000000aaea         db  0xff ; '.'
000000000000aaeb         db  0xff ; '.'
000000000000aaec         db  0x94 ; '.'
000000000000aaed         db  0x8a ; '.'
000000000000aaee         db  0xff ; '.'
000000000000aaef         db  0xff ; '.'
000000000000aaf0         db  0x3c ; '<'
000000000000aaf1         db  0x8a ; '.'
000000000000aaf2         db  0xff ; '.'
000000000000aaf3         db  0xff ; '.'
000000000000aaf4         db  0x3c ; '<'
000000000000aaf5         db  0x8a ; '.'
000000000000aaf6         db  0xff ; '.'
000000000000aaf7         db  0xff ; '.'
000000000000aaf8         db  0x3c ; '<'
000000000000aaf9         db  0x8a ; '.'
000000000000aafa         db  0xff ; '.'
000000000000aafb         db  0xff ; '.'
000000000000aafc         db  0x3c ; '<'
000000000000aafd         db  0x8a ; '.'
000000000000aafe         db  0xff ; '.'
000000000000aaff         db  0xff ; '.'
000000000000ab00         db  0x3c ; '<'
000000000000ab01         db  0x8a ; '.'
000000000000ab02         db  0xff ; '.'
000000000000ab03         db  0xff ; '.'
000000000000ab04         db  0x3c ; '<'
000000000000ab05         db  0x8a ; '.'
000000000000ab06         db  0xff ; '.'
000000000000ab07         db  0xff ; '.'
000000000000ab08         db  0x3c ; '<'
000000000000ab09         db  0x8a ; '.'
000000000000ab0a         db  0xff ; '.'
000000000000ab0b         db  0xff ; '.'
000000000000ab0c         db  0x3c ; '<'
000000000000ab0d         db  0x8a ; '.'
000000000000ab0e         db  0xff ; '.'
000000000000ab0f         db  0xff ; '.'
000000000000ab10         db  0x3c ; '<'
000000000000ab11         db  0x8a ; '.'
000000000000ab12         db  0xff ; '.'
000000000000ab13         db  0xff ; '.'
000000000000ab14         db  0x3c ; '<'
000000000000ab15         db  0x8a ; '.'
000000000000ab16         db  0xff ; '.'
000000000000ab17         db  0xff ; '.'
000000000000ab18         db  0x3c ; '<'
000000000000ab19         db  0x8a ; '.'
000000000000ab1a         db  0xff ; '.'
000000000000ab1b         db  0xff ; '.'
000000000000ab1c         db  0x3c ; '<'
000000000000ab1d         db  0x8a ; '.'
000000000000ab1e         db  0xff ; '.'
000000000000ab1f         db  0xff ; '.'
000000000000ab20         db  0x3c ; '<'
000000000000ab21         db  0x8a ; '.'
000000000000ab22         db  0xff ; '.'
000000000000ab23         db  0xff ; '.'
000000000000ab24         db  0x3c ; '<'
000000000000ab25         db  0x8a ; '.'
000000000000ab26         db  0xff ; '.'
000000000000ab27         db  0xff ; '.'
000000000000ab28         db  0x3c ; '<'
000000000000ab29         db  0x8a ; '.'
000000000000ab2a         db  0xff ; '.'
000000000000ab2b         db  0xff ; '.'
000000000000ab2c         db  0x3c ; '<'
000000000000ab2d         db  0x8a ; '.'
000000000000ab2e         db  0xff ; '.'
000000000000ab2f         db  0xff ; '.'
000000000000ab30         db  0x3c ; '<'
000000000000ab31         db  0x8a ; '.'
000000000000ab32         db  0xff ; '.'
000000000000ab33         db  0xff ; '.'
000000000000ab34         db  0x3c ; '<'
000000000000ab35         db  0x8a ; '.'
000000000000ab36         db  0xff ; '.'
000000000000ab37         db  0xff ; '.'
000000000000ab38         db  0x3c ; '<'
000000000000ab39         db  0x8a ; '.'
000000000000ab3a         db  0xff ; '.'
000000000000ab3b         db  0xff ; '.'
000000000000ab3c         db  0x3c ; '<'
000000000000ab3d         db  0x8a ; '.'
000000000000ab3e         db  0xff ; '.'
000000000000ab3f         db  0xff ; '.'
000000000000ab40         db  0x3c ; '<'
000000000000ab41         db  0x8a ; '.'
000000000000ab42         db  0xff ; '.'
000000000000ab43         db  0xff ; '.'
000000000000ab44         db  0x3c ; '<'
000000000000ab45         db  0x8a ; '.'
000000000000ab46         db  0xff ; '.'
000000000000ab47         db  0xff ; '.'
000000000000ab48         db  0x3c ; '<'
000000000000ab49         db  0x8a ; '.'
000000000000ab4a         db  0xff ; '.'
000000000000ab4b         db  0xff ; '.'
000000000000ab4c         db  0x3c ; '<'
000000000000ab4d         db  0x8a ; '.'
000000000000ab4e         db  0xff ; '.'
000000000000ab4f         db  0xff ; '.'
000000000000ab50         db  0x3c ; '<'
000000000000ab51         db  0x8a ; '.'
000000000000ab52         db  0xff ; '.'
000000000000ab53         db  0xff ; '.'
000000000000ab54         db  0x3c ; '<'
000000000000ab55         db  0x8a ; '.'
000000000000ab56         db  0xff ; '.'
000000000000ab57         db  0xff ; '.'
000000000000ab58         db  0xf7 ; '.'
000000000000ab59         db  0x87 ; '.'
000000000000ab5a         db  0xff ; '.'
000000000000ab5b         db  0xff ; '.'
000000000000ab5c         db  0x94 ; '.'
000000000000ab5d         db  0x8a ; '.'
000000000000ab5e         db  0xff ; '.'
000000000000ab5f         db  0xff ; '.'
000000000000ab60         db  0xf7 ; '.'
000000000000ab61         db  0x87 ; '.'
000000000000ab62         db  0xff ; '.'
000000000000ab63         db  0xff ; '.'
000000000000ab64         db  0x64 ; 'd'
000000000000ab65         db  0x8a ; '.'
000000000000ab66         db  0xff ; '.'
000000000000ab67         db  0xff ; '.'
000000000000ab68         db  0xe8 ; '.'                                         ; DATA XREF=sub_3450+137
000000000000ab69         db  0x89 ; '.'
000000000000ab6a         db  0xff ; '.'
000000000000ab6b         db  0xff ; '.'
000000000000ab6c         db  0xf8 ; '.'
000000000000ab6d         db  0x88 ; '.'
000000000000ab6e         db  0xff ; '.'
000000000000ab6f         db  0xff ; '.'
000000000000ab70         db  0xf8 ; '.'
000000000000ab71         db  0x88 ; '.'
000000000000ab72         db  0xff ; '.'
000000000000ab73         db  0xff ; '.'
000000000000ab74         db  0xf8 ; '.'
000000000000ab75         db  0x88 ; '.'
000000000000ab76         db  0xff ; '.'
000000000000ab77         db  0xff ; '.'
000000000000ab78         db  0xf8 ; '.'
000000000000ab79         db  0x88 ; '.'
000000000000ab7a         db  0xff ; '.'
000000000000ab7b         db  0xff ; '.'
000000000000ab7c         db  0xf8 ; '.'
000000000000ab7d         db  0x88 ; '.'
000000000000ab7e         db  0xff ; '.'
000000000000ab7f         db  0xff ; '.'
000000000000ab80         db  0xf8 ; '.'
000000000000ab81         db  0x88 ; '.'
000000000000ab82         db  0xff ; '.'
000000000000ab83         db  0xff ; '.'
000000000000ab84         db  0xd8 ; '.'
000000000000ab85         db  0x89 ; '.'
000000000000ab86         db  0xff ; '.'
000000000000ab87         db  0xff ; '.'
000000000000ab88         db  0x28 ; '('
000000000000ab89         db  0x8b ; '.'
000000000000ab8a         db  0xff ; '.'
000000000000ab8b         db  0xff ; '.'
000000000000ab8c         db  0x10 ; '.'
000000000000ab8d         db  0x8b ; '.'
000000000000ab8e         db  0xff ; '.'
000000000000ab8f         db  0xff ; '.'
000000000000ab90         db  0xc0 ; '.'
000000000000ab91         db  0x89 ; '.'
000000000000ab92         db  0xff ; '.'
000000000000ab93         db  0xff ; '.'
000000000000ab94         db  0x00 ; '.'
000000000000ab95         db  0x8b ; '.'
000000000000ab96         db  0xff ; '.'
000000000000ab97         db  0xff ; '.'
000000000000ab98         db  0xa8 ; '.'
000000000000ab99         db  0x89 ; '.'
000000000000ab9a         db  0xff ; '.'
000000000000ab9b         db  0xff ; '.'
000000000000ab9c         db  0xe8 ; '.'
000000000000ab9d         db  0x8a ; '.'
000000000000ab9e         db  0xff ; '.'
000000000000ab9f         db  0xff ; '.'
000000000000aba0         db  0xf8 ; '.'
000000000000aba1         db  0x88 ; '.'
000000000000aba2         db  0xff ; '.'
000000000000aba3         db  0xff ; '.'
000000000000aba4         db  0xf8 ; '.'
000000000000aba5         db  0x88 ; '.'
000000000000aba6         db  0xff ; '.'
000000000000aba7         db  0xff ; '.'
000000000000aba8         db  0xf8 ; '.'
000000000000aba9         db  0x88 ; '.'
000000000000abaa         db  0xff ; '.'
000000000000abab         db  0xff ; '.'
000000000000abac         db  0xf8 ; '.'
000000000000abad         db  0x88 ; '.'
000000000000abae         db  0xff ; '.'
000000000000abaf         db  0xff ; '.'
000000000000abb0         db  0xf8 ; '.'
000000000000abb1         db  0x88 ; '.'
000000000000abb2         db  0xff ; '.'
000000000000abb3         db  0xff ; '.'
000000000000abb4         db  0xf8 ; '.'
000000000000abb5         db  0x88 ; '.'
000000000000abb6         db  0xff ; '.'
000000000000abb7         db  0xff ; '.'
000000000000abb8         db  0xf8 ; '.'
000000000000abb9         db  0x88 ; '.'
000000000000abba         db  0xff ; '.'
000000000000abbb         db  0xff ; '.'
000000000000abbc         db  0xf8 ; '.'
000000000000abbd         db  0x88 ; '.'
000000000000abbe         db  0xff ; '.'
000000000000abbf         db  0xff ; '.'
000000000000abc0         db  0xf8 ; '.'
000000000000abc1         db  0x88 ; '.'
000000000000abc2         db  0xff ; '.'
000000000000abc3         db  0xff ; '.'
000000000000abc4         db  0xf8 ; '.'
000000000000abc5         db  0x88 ; '.'
000000000000abc6         db  0xff ; '.'
000000000000abc7         db  0xff ; '.'
000000000000abc8         db  0xf8 ; '.'
000000000000abc9         db  0x88 ; '.'
000000000000abca         db  0xff ; '.'
000000000000abcb         db  0xff ; '.'
000000000000abcc         db  0xf8 ; '.'
000000000000abcd         db  0x88 ; '.'
000000000000abce         db  0xff ; '.'
000000000000abcf         db  0xff ; '.'
000000000000abd0         db  0xf8 ; '.'
000000000000abd1         db  0x88 ; '.'
000000000000abd2         db  0xff ; '.'
000000000000abd3         db  0xff ; '.'
000000000000abd4         db  0xf8 ; '.'
000000000000abd5         db  0x88 ; '.'
000000000000abd6         db  0xff ; '.'
000000000000abd7         db  0xff ; '.'
000000000000abd8         db  0xf8 ; '.'
000000000000abd9         db  0x88 ; '.'
000000000000abda         db  0xff ; '.'
000000000000abdb         db  0xff ; '.'
000000000000abdc         db  0xf8 ; '.'
000000000000abdd         db  0x88 ; '.'
000000000000abde         db  0xff ; '.'
000000000000abdf         db  0xff ; '.'
000000000000abe0         db  0xf8 ; '.'
000000000000abe1         db  0x88 ; '.'
000000000000abe2         db  0xff ; '.'
000000000000abe3         db  0xff ; '.'
000000000000abe4         db  0xf8 ; '.'
000000000000abe5         db  0x88 ; '.'
000000000000abe6         db  0xff ; '.'
000000000000abe7         db  0xff ; '.'
000000000000abe8         db  0xd0 ; '.'
000000000000abe9         db  0x8a ; '.'
000000000000abea         db  0xff ; '.'
000000000000abeb         db  0xff ; '.'
000000000000abec         db  0xb8 ; '.'
000000000000abed         db  0x8a ; '.'
000000000000abee         db  0xff ; '.'
000000000000abef         db  0xff ; '.'
000000000000abf0         db  0xb8 ; '.'
000000000000abf1         db  0x8a ; '.'
000000000000abf2         db  0xff ; '.'
000000000000abf3         db  0xff ; '.'
000000000000abf4         db  0xa0 ; '.'
000000000000abf5         db  0x8a ; '.'
000000000000abf6         db  0xff ; '.'
000000000000abf7         db  0xff ; '.'
000000000000abf8         db  0xb8 ; '.'
000000000000abf9         db  0x8a ; '.'
000000000000abfa         db  0xff ; '.'
000000000000abfb         db  0xff ; '.'
000000000000abfc         db  0x88 ; '.'
000000000000abfd         db  0x8a ; '.'
000000000000abfe         db  0xff ; '.'
000000000000abff         db  0xff ; '.'
000000000000ac00         db  0xb8 ; '.'
000000000000ac01         db  0x8a ; '.'
000000000000ac02         db  0xff ; '.'
000000000000ac03         db  0xff ; '.'
000000000000ac04         db  0xf8 ; '.'
000000000000ac05         db  0x86 ; '.'
000000000000ac06         db  0xff ; '.'
000000000000ac07         db  0xff ; '.'
000000000000ac08         db  0xb8 ; '.'
000000000000ac09         db  0x8a ; '.'
000000000000ac0a         db  0xff ; '.'
000000000000ac0b         db  0xff ; '.'
000000000000ac0c         db  0xb8 ; '.'
000000000000ac0d         db  0x8a ; '.'
000000000000ac0e         db  0xff ; '.'
000000000000ac0f         db  0xff ; '.'
000000000000ac10         db  0xb8 ; '.'
000000000000ac11         db  0x8a ; '.'
000000000000ac12         db  0xff ; '.'
000000000000ac13         db  0xff ; '.'
000000000000ac14         db  0x88 ; '.'
000000000000ac15         db  0x8a ; '.'
000000000000ac16         db  0xff ; '.'
000000000000ac17         db  0xff ; '.'
000000000000ac18         db  0x88 ; '.'
000000000000ac19         db  0x8a ; '.'
000000000000ac1a         db  0xff ; '.'
000000000000ac1b         db  0xff ; '.'
000000000000ac1c         db  0x88 ; '.'
000000000000ac1d         db  0x8a ; '.'
000000000000ac1e         db  0xff ; '.'
000000000000ac1f         db  0xff ; '.'
000000000000ac20         db  0x88 ; '.'
000000000000ac21         db  0x8a ; '.'
000000000000ac22         db  0xff ; '.'
000000000000ac23         db  0xff ; '.'
000000000000ac24         db  0x88 ; '.'
000000000000ac25         db  0x8a ; '.'
000000000000ac26         db  0xff ; '.'
000000000000ac27         db  0xff ; '.'
000000000000ac28         db  0x88 ; '.'
000000000000ac29         db  0x8a ; '.'
000000000000ac2a         db  0xff ; '.'
000000000000ac2b         db  0xff ; '.'
000000000000ac2c         db  0x88 ; '.'
000000000000ac2d         db  0x8a ; '.'
000000000000ac2e         db  0xff ; '.'
000000000000ac2f         db  0xff ; '.'
000000000000ac30         db  0x88 ; '.'
000000000000ac31         db  0x8a ; '.'
000000000000ac32         db  0xff ; '.'
000000000000ac33         db  0xff ; '.'
000000000000ac34         db  0x88 ; '.'
000000000000ac35         db  0x8a ; '.'
000000000000ac36         db  0xff ; '.'
000000000000ac37         db  0xff ; '.'
000000000000ac38         db  0x88 ; '.'
000000000000ac39         db  0x8a ; '.'
000000000000ac3a         db  0xff ; '.'
000000000000ac3b         db  0xff ; '.'
000000000000ac3c         db  0x88 ; '.'
000000000000ac3d         db  0x8a ; '.'
000000000000ac3e         db  0xff ; '.'
000000000000ac3f         db  0xff ; '.'
000000000000ac40         db  0x88 ; '.'
000000000000ac41         db  0x8a ; '.'
000000000000ac42         db  0xff ; '.'
000000000000ac43         db  0xff ; '.'
000000000000ac44         db  0x88 ; '.'
000000000000ac45         db  0x8a ; '.'
000000000000ac46         db  0xff ; '.'
000000000000ac47         db  0xff ; '.'
000000000000ac48         db  0x88 ; '.'
000000000000ac49         db  0x8a ; '.'
000000000000ac4a         db  0xff ; '.'
000000000000ac4b         db  0xff ; '.'
000000000000ac4c         db  0x88 ; '.'
000000000000ac4d         db  0x8a ; '.'
000000000000ac4e         db  0xff ; '.'
000000000000ac4f         db  0xff ; '.'
000000000000ac50         db  0x88 ; '.'
000000000000ac51         db  0x8a ; '.'
000000000000ac52         db  0xff ; '.'
000000000000ac53         db  0xff ; '.'
000000000000ac54         db  0xb8 ; '.'
000000000000ac55         db  0x8a ; '.'
000000000000ac56         db  0xff ; '.'
000000000000ac57         db  0xff ; '.'
000000000000ac58         db  0xb8 ; '.'
000000000000ac59         db  0x8a ; '.'
000000000000ac5a         db  0xff ; '.'
000000000000ac5b         db  0xff ; '.'
000000000000ac5c         db  0xb8 ; '.'
000000000000ac5d         db  0x8a ; '.'
000000000000ac5e         db  0xff ; '.'
000000000000ac5f         db  0xff ; '.'
000000000000ac60         db  0xb8 ; '.'
000000000000ac61         db  0x8a ; '.'
000000000000ac62         db  0xff ; '.'
000000000000ac63         db  0xff ; '.'
000000000000ac64         db  0xc8 ; '.'
000000000000ac65         db  0x86 ; '.'
000000000000ac66         db  0xff ; '.'
000000000000ac67         db  0xff ; '.'
000000000000ac68         db  0xf8 ; '.'
000000000000ac69         db  0x88 ; '.'
000000000000ac6a         db  0xff ; '.'
000000000000ac6b         db  0xff ; '.'
000000000000ac6c         db  0x88 ; '.'
000000000000ac6d         db  0x8a ; '.'
000000000000ac6e         db  0xff ; '.'
000000000000ac6f         db  0xff ; '.'
000000000000ac70         db  0x88 ; '.'
000000000000ac71         db  0x8a ; '.'
000000000000ac72         db  0xff ; '.'
000000000000ac73         db  0xff ; '.'
000000000000ac74         db  0x88 ; '.'
000000000000ac75         db  0x8a ; '.'
000000000000ac76         db  0xff ; '.'
000000000000ac77         db  0xff ; '.'
000000000000ac78         db  0x88 ; '.'
000000000000ac79         db  0x8a ; '.'
000000000000ac7a         db  0xff ; '.'
000000000000ac7b         db  0xff ; '.'
000000000000ac7c         db  0x88 ; '.'
000000000000ac7d         db  0x8a ; '.'
000000000000ac7e         db  0xff ; '.'
000000000000ac7f         db  0xff ; '.'
000000000000ac80         db  0x88 ; '.'
000000000000ac81         db  0x8a ; '.'
000000000000ac82         db  0xff ; '.'
000000000000ac83         db  0xff ; '.'
000000000000ac84         db  0x88 ; '.'
000000000000ac85         db  0x8a ; '.'
000000000000ac86         db  0xff ; '.'
000000000000ac87         db  0xff ; '.'
000000000000ac88         db  0x88 ; '.'
000000000000ac89         db  0x8a ; '.'
000000000000ac8a         db  0xff ; '.'
000000000000ac8b         db  0xff ; '.'
000000000000ac8c         db  0x88 ; '.'
000000000000ac8d         db  0x8a ; '.'
000000000000ac8e         db  0xff ; '.'
000000000000ac8f         db  0xff ; '.'
000000000000ac90         db  0x88 ; '.'
000000000000ac91         db  0x8a ; '.'
000000000000ac92         db  0xff ; '.'
000000000000ac93         db  0xff ; '.'
000000000000ac94         db  0x88 ; '.'
000000000000ac95         db  0x8a ; '.'
000000000000ac96         db  0xff ; '.'
000000000000ac97         db  0xff ; '.'
000000000000ac98         db  0x88 ; '.'
000000000000ac99         db  0x8a ; '.'
000000000000ac9a         db  0xff ; '.'
000000000000ac9b         db  0xff ; '.'
000000000000ac9c         db  0x88 ; '.'
000000000000ac9d         db  0x8a ; '.'
000000000000ac9e         db  0xff ; '.'
000000000000ac9f         db  0xff ; '.'
000000000000aca0         db  0x88 ; '.'
000000000000aca1         db  0x8a ; '.'
000000000000aca2         db  0xff ; '.'
000000000000aca3         db  0xff ; '.'
000000000000aca4         db  0x88 ; '.'
000000000000aca5         db  0x8a ; '.'
000000000000aca6         db  0xff ; '.'
000000000000aca7         db  0xff ; '.'
000000000000aca8         db  0x88 ; '.'
000000000000aca9         db  0x8a ; '.'
000000000000acaa         db  0xff ; '.'
000000000000acab         db  0xff ; '.'
000000000000acac         db  0x88 ; '.'
000000000000acad         db  0x8a ; '.'
000000000000acae         db  0xff ; '.'
000000000000acaf         db  0xff ; '.'
000000000000acb0         db  0x88 ; '.'
000000000000acb1         db  0x8a ; '.'
000000000000acb2         db  0xff ; '.'
000000000000acb3         db  0xff ; '.'
000000000000acb4         db  0x88 ; '.'
000000000000acb5         db  0x8a ; '.'
000000000000acb6         db  0xff ; '.'
000000000000acb7         db  0xff ; '.'
000000000000acb8         db  0x88 ; '.'
000000000000acb9         db  0x8a ; '.'
000000000000acba         db  0xff ; '.'
000000000000acbb         db  0xff ; '.'
000000000000acbc         db  0x88 ; '.'
000000000000acbd         db  0x8a ; '.'
000000000000acbe         db  0xff ; '.'
000000000000acbf         db  0xff ; '.'
000000000000acc0         db  0x88 ; '.'
000000000000acc1         db  0x8a ; '.'
000000000000acc2         db  0xff ; '.'
000000000000acc3         db  0xff ; '.'
000000000000acc4         db  0x88 ; '.'
000000000000acc5         db  0x8a ; '.'
000000000000acc6         db  0xff ; '.'
000000000000acc7         db  0xff ; '.'
000000000000acc8         db  0x88 ; '.'
000000000000acc9         db  0x8a ; '.'
000000000000acca         db  0xff ; '.'
000000000000accb         db  0xff ; '.'
000000000000accc         db  0x88 ; '.'
000000000000accd         db  0x8a ; '.'
000000000000acce         db  0xff ; '.'
000000000000accf         db  0xff ; '.'
000000000000acd0         db  0x88 ; '.'
000000000000acd1         db  0x8a ; '.'
000000000000acd2         db  0xff ; '.'
000000000000acd3         db  0xff ; '.'
000000000000acd4         db  0xb8 ; '.'
000000000000acd5         db  0x8a ; '.'
000000000000acd6         db  0xff ; '.'
000000000000acd7         db  0xff ; '.'
000000000000acd8         db  0x88 ; '.'
000000000000acd9         db  0x89 ; '.'
000000000000acda         db  0xff ; '.'
000000000000acdb         db  0xff ; '.'
000000000000acdc         db  0x88 ; '.'
000000000000acdd         db  0x8a ; '.'
000000000000acde         db  0xff ; '.'
000000000000acdf         db  0xff ; '.'
000000000000ace0         db  0xb8 ; '.'
000000000000ace1         db  0x8a ; '.'
000000000000ace2         db  0xff ; '.'
000000000000ace3         db  0xff ; '.'
000000000000ace4         db  0x88 ; '.'
000000000000ace5         db  0x8a ; '.'
000000000000ace6         db  0xff ; '.'
000000000000ace7         db  0xff ; '.'
000000000000ace8         db  0xb8 ; '.'
000000000000ace9         db  0x8a ; '.'
000000000000acea         db  0xff ; '.'
000000000000aceb         db  0xff ; '.'
000000000000acec         db  0x88 ; '.'
000000000000aced         db  0x8a ; '.'
000000000000acee         db  0xff ; '.'
000000000000acef         db  0xff ; '.'
000000000000acf0         db  0x88 ; '.'
000000000000acf1         db  0x8a ; '.'
000000000000acf2         db  0xff ; '.'
000000000000acf3         db  0xff ; '.'
000000000000acf4         db  0x88 ; '.'
000000000000acf5         db  0x8a ; '.'
000000000000acf6         db  0xff ; '.'
000000000000acf7         db  0xff ; '.'
000000000000acf8         db  0x88 ; '.'
000000000000acf9         db  0x8a ; '.'
000000000000acfa         db  0xff ; '.'
000000000000acfb         db  0xff ; '.'
000000000000acfc         db  0x88 ; '.'
000000000000acfd         db  0x8a ; '.'
000000000000acfe         db  0xff ; '.'
000000000000acff         db  0xff ; '.'
000000000000ad00         db  0x88 ; '.'
000000000000ad01         db  0x8a ; '.'
000000000000ad02         db  0xff ; '.'
000000000000ad03         db  0xff ; '.'
000000000000ad04         db  0x88 ; '.'
000000000000ad05         db  0x8a ; '.'
000000000000ad06         db  0xff ; '.'
000000000000ad07         db  0xff ; '.'
000000000000ad08         db  0x88 ; '.'
000000000000ad09         db  0x8a ; '.'
000000000000ad0a         db  0xff ; '.'
000000000000ad0b         db  0xff ; '.'
000000000000ad0c         db  0x88 ; '.'
000000000000ad0d         db  0x8a ; '.'
000000000000ad0e         db  0xff ; '.'
000000000000ad0f         db  0xff ; '.'
000000000000ad10         db  0x88 ; '.'
000000000000ad11         db  0x8a ; '.'
000000000000ad12         db  0xff ; '.'
000000000000ad13         db  0xff ; '.'
000000000000ad14         db  0x88 ; '.'
000000000000ad15         db  0x8a ; '.'
000000000000ad16         db  0xff ; '.'
000000000000ad17         db  0xff ; '.'
000000000000ad18         db  0x88 ; '.'
000000000000ad19         db  0x8a ; '.'
000000000000ad1a         db  0xff ; '.'
000000000000ad1b         db  0xff ; '.'
000000000000ad1c         db  0x88 ; '.'
000000000000ad1d         db  0x8a ; '.'
000000000000ad1e         db  0xff ; '.'
000000000000ad1f         db  0xff ; '.'
000000000000ad20         db  0x88 ; '.'
000000000000ad21         db  0x8a ; '.'
000000000000ad22         db  0xff ; '.'
000000000000ad23         db  0xff ; '.'
000000000000ad24         db  0x88 ; '.'
000000000000ad25         db  0x8a ; '.'
000000000000ad26         db  0xff ; '.'
000000000000ad27         db  0xff ; '.'
000000000000ad28         db  0x88 ; '.'
000000000000ad29         db  0x8a ; '.'
000000000000ad2a         db  0xff ; '.'
000000000000ad2b         db  0xff ; '.'
000000000000ad2c         db  0x88 ; '.'
000000000000ad2d         db  0x8a ; '.'
000000000000ad2e         db  0xff ; '.'
000000000000ad2f         db  0xff ; '.'
000000000000ad30         db  0x88 ; '.'
000000000000ad31         db  0x8a ; '.'
000000000000ad32         db  0xff ; '.'
000000000000ad33         db  0xff ; '.'
000000000000ad34         db  0x88 ; '.'
000000000000ad35         db  0x8a ; '.'
000000000000ad36         db  0xff ; '.'
000000000000ad37         db  0xff ; '.'
000000000000ad38         db  0x88 ; '.'
000000000000ad39         db  0x8a ; '.'
000000000000ad3a         db  0xff ; '.'
000000000000ad3b         db  0xff ; '.'
000000000000ad3c         db  0x88 ; '.'
000000000000ad3d         db  0x8a ; '.'
000000000000ad3e         db  0xff ; '.'
000000000000ad3f         db  0xff ; '.'
000000000000ad40         db  0x88 ; '.'
000000000000ad41         db  0x8a ; '.'
000000000000ad42         db  0xff ; '.'
000000000000ad43         db  0xff ; '.'
000000000000ad44         db  0x88 ; '.'
000000000000ad45         db  0x8a ; '.'
000000000000ad46         db  0xff ; '.'
000000000000ad47         db  0xff ; '.'
000000000000ad48         db  0x88 ; '.'
000000000000ad49         db  0x8a ; '.'
000000000000ad4a         db  0xff ; '.'
000000000000ad4b         db  0xff ; '.'
000000000000ad4c         db  0x88 ; '.'
000000000000ad4d         db  0x8a ; '.'
000000000000ad4e         db  0xff ; '.'
000000000000ad4f         db  0xff ; '.'
000000000000ad50         db  0x88 ; '.'
000000000000ad51         db  0x8a ; '.'
000000000000ad52         db  0xff ; '.'
000000000000ad53         db  0xff ; '.'
000000000000ad54         db  0xf8 ; '.'
000000000000ad55         db  0x85 ; '.'
000000000000ad56         db  0xff ; '.'
000000000000ad57         db  0xff ; '.'
000000000000ad58         db  0xb8 ; '.'
000000000000ad59         db  0x8a ; '.'
000000000000ad5a         db  0xff ; '.'
000000000000ad5b         db  0xff ; '.'
000000000000ad5c         db  0xf8 ; '.'
000000000000ad5d         db  0x85 ; '.'
000000000000ad5e         db  0xff ; '.'
000000000000ad5f         db  0xff ; '.'
000000000000ad60         db  0xa0 ; '.'
000000000000ad61         db  0x8a ; '.'
000000000000ad62         db  0xff ; '.'
000000000000ad63         db  0xff ; '.'
000000000000ad64         db  0x00 ; '.'
000000000000ad65         db  0x00 ; '.'
000000000000ad66         db  0x00 ; '.'
000000000000ad67         db  0x00 ; '.'
000000000000ad68         db  0x00 ; '.'
000000000000ad69         db  0x00 ; '.'
000000000000ad6a         db  0x00 ; '.'
000000000000ad6b         db  0x00 ; '.'
000000000000ad6c         db  0x00 ; '.'
000000000000ad6d         db  0x00 ; '.'
000000000000ad6e         db  0x00 ; '.'
000000000000ad6f         db  0x00 ; '.'
000000000000ad70         db  0x00 ; '.'
000000000000ad71         db  0x00 ; '.'
000000000000ad72         db  0x00 ; '.'
000000000000ad73         db  0x00 ; '.'
000000000000ad74         db  0x00 ; '.'
000000000000ad75         db  0x00 ; '.'
000000000000ad76         db  0x00 ; '.'
000000000000ad77         db  0x00 ; '.'
000000000000ad78         db  0x00 ; '.'
000000000000ad79         db  0x00 ; '.'
000000000000ad7a         db  0x00 ; '.'
000000000000ad7b         db  0x00 ; '.'
000000000000ad7c         db  0x00 ; '.'
000000000000ad7d         db  0x00 ; '.'
000000000000ad7e         db  0x00 ; '.'
000000000000ad7f         db  0x00 ; '.'
                     quoting_style_vals:
000000000000ad80         db  0x00 ; '.'
000000000000ad81         db  0x00 ; '.'
000000000000ad82         db  0x00 ; '.'
000000000000ad83         db  0x00 ; '.'
000000000000ad84         db  0x01 ; '.'
000000000000ad85         db  0x00 ; '.'
000000000000ad86         db  0x00 ; '.'
000000000000ad87         db  0x00 ; '.'
000000000000ad88         db  0x02 ; '.'
000000000000ad89         db  0x00 ; '.'
000000000000ad8a         db  0x00 ; '.'
000000000000ad8b         db  0x00 ; '.'
000000000000ad8c         db  0x03 ; '.'
000000000000ad8d         db  0x00 ; '.'
000000000000ad8e         db  0x00 ; '.'
000000000000ad8f         db  0x00 ; '.'
000000000000ad90         db  0x04 ; '.'
000000000000ad91         db  0x00 ; '.'
000000000000ad92         db  0x00 ; '.'
000000000000ad93         db  0x00 ; '.'
000000000000ad94         db  0x05 ; '.'
000000000000ad95         db  0x00 ; '.'
000000000000ad96         db  0x00 ; '.'
000000000000ad97         db  0x00 ; '.'
000000000000ad98         db  0x06 ; '.'
000000000000ad99         db  0x00 ; '.'
000000000000ad9a         db  0x00 ; '.'
000000000000ad9b         db  0x00 ; '.'
000000000000ad9c         db  0x07 ; '.'
000000000000ad9d         db  0x00 ; '.'
000000000000ad9e         db  0x00 ; '.'
000000000000ad9f         db  0x00 ; '.'
000000000000ada0         db  0x08 ; '.'
000000000000ada1         db  0x00 ; '.'
000000000000ada2         db  0x00 ; '.'
000000000000ada3         db  0x00 ; '.'
000000000000ada4         db  0x09 ; '.'
000000000000ada5         db  0x00 ; '.'
000000000000ada6         db  0x00 ; '.'
000000000000ada7         db  0x00 ; '.'
                     aSSSn:
000000000000ada8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000adb4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000adbb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000adbc         db  0x43 ; 'C'
000000000000adbd         db  0x29 ; ')'
000000000000adbe         db  0x00 ; '.'
                     aWrittenBySn:
000000000000adbf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000adcf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000ade6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000ae02         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000ae17         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000ae2d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000000ae41         align      8
                     aNlicenseGplv3G:
000000000000ae48         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000af14         align      8
                     aWrittenBySSSna:
000000000000af18         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_af38:        // aWrittenBySSSns
000000000000af38         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000af5c         align      32
                     aWrittenBySSSns_af60:        // aWrittenBySSSns
000000000000af60         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_af88:        // aWrittenBySSSns
000000000000af88         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000afb4         align      8
                     aWrittenBySSSns_afb8:        // aWrittenBySSSns
000000000000afb8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000afe8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000b01c         align      32
                     aWrittenBySSSns_b020:        // aWrittenBySSSns
000000000000b020         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000b05c         align      32
                     aGeneralHelpUsi:
000000000000b060         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000b0a1         align      4
                     switch_table_b0a4:        // switch_table
000000000000b0a4         dd         version_etc_arn.loc_4cb6-switch_table_b0a4, version_etc_arn.loc_4d48-switch_table_b0a4, version_etc_arn.loc_4d88-switch_table_b0a4, version_etc_arn.loc_4dd0-switch_table_b0a4 ; switch table used at 0x4c34 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000b0b4         dd         version_etc_arn.loc_4e20-switch_table_b0a4, version_etc_arn.loc_4e78-switch_table_b0a4, version_etc_arn.loc_4ea8-switch_table_b0a4, version_etc_arn.loc_4f10-switch_table_b0a4
000000000000b0c4         dd         version_etc_arn.loc_4c40-switch_table_b0a4, version_etc_arn.loc_4cf0-switch_table_b0a4
000000000000b0cc         align      32
                     version_etc_copyright:
000000000000b0e0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000b10f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li_b120:        // aCoreutils831li
000000000000b120         db         "../coreutils-8.31/lib/xfts.c", 0           ; DATA XREF=sub_546f+8
                     aErrnoEinval:
000000000000b13d         db         "errno != EINVAL", 0                        ; DATA XREF=sub_546f+15
000000000000b14d         align      16
                     __PRETTY_FUNCTION__.3434:
000000000000b150         db         "xfts_open", 0                              ; DATA XREF=sub_546f+1
000000000000b15a         db  0x2e ; '.'                                         ; DATA XREF=fts_safe_changedir+67, fts_safe_changedir+335, fts_build+2154, rpl_fts_read+1108
000000000000b15b         db  0x2e ; '.'                                         ; DATA XREF=rpl_fts_open+640, rpl_fts_read+1745, rpl_fts_read+1825, rpl_fts_children+195, save_cwd+12
000000000000b15c         db  0x00 ; '.'
000000000000b15d         db  0x00 ; '.'
000000000000b15e         db  0x00 ; '.'
000000000000b15f         db  0x00 ; '.'
                     CSWTCH.53:
000000000000b160         db  0x00 ; '.'                                         ; DATA XREF=fts_build+372, fts_build+2486
000000000000b161         db  0x10 ; '.'
000000000000b162         db  0x00 ; '.'
000000000000b163         db  0x00 ; '.'
000000000000b164         db  0x00 ; '.'
000000000000b165         db  0x20 ; ' '
000000000000b166         db  0x00 ; '.'
000000000000b167         db  0x00 ; '.'
000000000000b168         db  0x00 ; '.'
000000000000b169         db  0x00 ; '.'
000000000000b16a         db  0x00 ; '.'
000000000000b16b         db  0x00 ; '.'
000000000000b16c         db  0x00 ; '.'
000000000000b16d         db  0x40 ; '@'
000000000000b16e         db  0x00 ; '.'
000000000000b16f         db  0x00 ; '.'
000000000000b170         db  0x00 ; '.'
000000000000b171         db  0x00 ; '.'
000000000000b172         db  0x00 ; '.'
000000000000b173         db  0x00 ; '.'
000000000000b174         db  0x00 ; '.'
000000000000b175         db  0x60 ; '`'
000000000000b176         db  0x00 ; '.'
000000000000b177         db  0x00 ; '.'
000000000000b178         db  0x00 ; '.'
000000000000b179         db  0x00 ; '.'
000000000000b17a         db  0x00 ; '.'
000000000000b17b         db  0x00 ; '.'
000000000000b17c         db  0x00 ; '.'
000000000000b17d         db  0x80 ; '.'
000000000000b17e         db  0x00 ; '.'
000000000000b17f         db  0x00 ; '.'
000000000000b180         db  0x00 ; '.'
000000000000b181         db  0x00 ; '.'
000000000000b182         db  0x00 ; '.'
000000000000b183         db  0x00 ; '.'
000000000000b184         db  0x00 ; '.'
000000000000b185         db  0xa0 ; '.'
000000000000b186         db  0x00 ; '.'
000000000000b187         db  0x00 ; '.'
000000000000b188         db  0x00 ; '.'
000000000000b189         db  0x00 ; '.'
000000000000b18a         db  0x00 ; '.'
000000000000b18b         db  0x00 ; '.'
000000000000b18c         db  0x00 ; '.'
000000000000b18d         db  0xc0 ; '.'
000000000000b18e         db  0x00 ; '.'
000000000000b18f         db  0x00 ; '.'
                     aCoreutils831li:
000000000000b190         db         "../coreutils-8.31/lib/cycle-check.c", 0    ; DATA XREF=cycle_check+110
                     aStatemagic9827:
000000000000b1b4         db         "state->magic == 9827862", 0                ; DATA XREF=cycle_check+117
000000000000b1cc         align      16
                     __PRETTY_FUNCTION__.3994:
000000000000b1d0         db         "cycle_check", 0                            ; DATA XREF=cycle_check+103
000000000000b1dc         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000b1dd         db  0x00 ; '.'
                     aPosix:
000000000000b1de         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aEntriesLun:
000000000000b1e4         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000000b1fc         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
000000000000b214         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
000000000000b22c         align      16
                     aBucketsUsedLu2:
000000000000b230         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
000000000000b251         db  0x00 ; '.'
000000000000b252         db  0x00 ; '.'
000000000000b253         db  0x00 ; '.'
000000000000b254         db  0x00 ; '.'
000000000000b255         db  0x00 ; '.'
000000000000b256         db  0x00 ; '.'
000000000000b257         db  0x00 ; '.'
000000000000b258         db  0x00 ; '.'
000000000000b259         db  0x00 ; '.'
000000000000b25a         db  0x00 ; '.'
000000000000b25b         db  0x00 ; '.'
000000000000b25c         db  0x00 ; '.'
000000000000b25d         db  0x00 ; '.'
000000000000b25e         db  0x00 ; '.'
000000000000b25f         db  0x00 ; '.'
                     default_tuning:
000000000000b260         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
000000000000b261         db  0x00 ; '.'
000000000000b262         db  0x00 ; '.'
000000000000b263         db  0x00 ; '.'
000000000000b264         db  0x00 ; '.'
000000000000b265         db  0x00 ; '.'
000000000000b266         db  0x80 ; '.'
000000000000b267         db  0x3f ; '?'
000000000000b268         db  0xcd ; '.'
000000000000b269         db  0xcc ; '.'
000000000000b26a         db  0x4c ; 'L'
000000000000b26b         db  0x3f ; '?'
000000000000b26c         db  0xf4 ; '.'
000000000000b26d         db  0xfd ; '.'
000000000000b26e         db  0xb4 ; '.'
000000000000b26f         db  0x3f ; '?'
000000000000b270         db  0x00 ; '.'
000000000000b271         db  0x00 ; '.'
000000000000b272         db  0x00 ; '.'
000000000000b273         db  0x00 ; '.'
                     float_b274:        // float
000000000000b274         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_b278:        // float
000000000000b278         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_b27c:        // float
000000000000b27c         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_b280:        // float
000000000000b280         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_b284:        // float
000000000000b284         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_b288:        // float
000000000000b288         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_b28c:        // float
000000000000b28c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_b290:        // float
000000000000b290         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
000000000000b294         align      2
000000000000b29e         db  0x59 ; 'Y'
000000000000b29f         db  0x40 ; '@'
                     aAscii:
000000000000b2a0         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000b2a6         align      8
                     aUnableToRecord:
000000000000b2a8         db         "unable to record current working directory", 0 ; DATA XREF=openat_save_fail+1
000000000000b2d3         align      8
                     aFailedToReturn:
000000000000b2d8         db         "failed to return to initial working directory", 0 ; DATA XREF=openat_restore_fail+1
000000000000b306         align      8
                     aCoreutils831li_b308:        // aCoreutils831li
000000000000b308         db         "../coreutils-8.31/lib/chdir-long.c", 0     ; DATA XREF=cdb_free+41, chdir_long+569, chdir_long+605, chdir_long+636, chdir_long+667, chdir_long+698
000000000000b32b         align      16
                     aClosefail:
000000000000b330         db         "! close_fail", 0                           ; DATA XREF=cdb_free+48
                     a0Len:
000000000000b33d         db         "0 < len", 0                                ; DATA XREF=chdir_long+612
                     a4096Len:
000000000000b345         db         "4096 <= len", 0                            ; DATA XREF=chdir_long+643
000000000000b351         db  0x2a ; '*'                                         ; DATA XREF=chdir_long+705
000000000000b352         db  0x64 ; 'd'
000000000000b353         db  0x69 ; 'i'
000000000000b354         db  0x72 ; 'r'
000000000000b355         db  0x20 ; ' '
000000000000b356         db  0x21 ; '!'
000000000000b357         db  0x3d ; '='
000000000000b358         db  0x20 ; ' '
000000000000b359         db  0x27 ; '''
000000000000b35a         db  0x2f ; '/'
000000000000b35b         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_36b0+132, sub_36b0+1338, sub_36b0+1670, sub_36b0+1697, sub_36b0+2352
000000000000b35c         db  0x00 ; '.'
                     aDirDirend:
000000000000b35d         db         "dir <= dir_end", 0                         ; DATA XREF=chdir_long+674
                     aSlashDir4096:
000000000000b36c         db         "slash - dir < 4096", 0                     ; DATA XREF=chdir_long+576
000000000000b37f         align      128
                     __PRETTY_FUNCTION__.5081:
000000000000b380         db         "cdb_free", 0                               ; DATA XREF=cdb_free+34
000000000000b389         align      16
                     __PRETTY_FUNCTION__.5099:
000000000000b390         db         "chdir_long", 0                             ; DATA XREF=chdir_long+562, chdir_long+598, chdir_long+629, chdir_long+660, chdir_long+691
                     aProcselffd:
000000000000b39b         db         "/proc/self/fd", 0                          ; DATA XREF=openat_proc_name+208
                     aProcselffddfd:
000000000000b3a9         db         "/proc/self/fd/%d/../fd", 0                 ; DATA XREF=openat_proc_name+256
                     aProcselffdd:
000000000000b3c0         db         "/proc/self/fd/%d/", 0                      ; DATA XREF=openat_proc_name+106
000000000000b3d2         db  0x00 ; '.'
000000000000b3d3         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xb3d4; 0xb898[ (1220 bytes)
        ; File offset : [46036; 47256[ (1220 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b3d4         db  0x01 ; '.'
000000000000b3d5         db  0x1b ; '.'
000000000000b3d6         db  0x03 ; '.'
000000000000b3d7         db  0x3b ; ';'
000000000000b3d8         db  0xc0 ; '.'
000000000000b3d9         db  0x04 ; '.'
000000000000b3da         db  0x00 ; '.'
000000000000b3db         db  0x00 ; '.'
000000000000b3dc         db  0x97 ; '.'
000000000000b3dd         db  0x00 ; '.'
000000000000b3de         db  0x00 ; '.'
000000000000b3df         db  0x00 ; '.'
000000000000b3e0         db  0xac ; '.'
000000000000b3e1         db  0x64 ; 'd'
000000000000b3e2         db  0xff ; '.'
000000000000b3e3         db  0xff ; '.'
000000000000b3e4         db  0x0c ; '.'
000000000000b3e5         db  0x05 ; '.'
000000000000b3e6         db  0x00 ; '.'
000000000000b3e7         db  0x00 ; '.'
000000000000b3e8         db  0xbc ; '.'
000000000000b3e9         db  0x68 ; 'h'
000000000000b3ea         db  0xff ; '.'
000000000000b3eb         db  0xff ; '.'
000000000000b3ec         db  0x34 ; '4'
000000000000b3ed         db  0x05 ; '.'
000000000000b3ee         db  0x00 ; '.'
000000000000b3ef         db  0x00 ; '.'
000000000000b3f0         db  0xcc ; '.'
000000000000b3f1         db  0x68 ; 'h'
000000000000b3f2         db  0xff ; '.'
000000000000b3f3         db  0xff ; '.'
000000000000b3f4         db  0x78 ; 'x'
000000000000b3f5         db  0x05 ; '.'
000000000000b3f6         db  0x00 ; '.'
000000000000b3f7         db  0x00 ; '.'
000000000000b3f8         db  0xbc ; '.'
000000000000b3f9         db  0x73 ; 's'
000000000000b3fa         db  0xff ; '.'
000000000000b3fb         db  0xff ; '.'
000000000000b3fc         db  0xdc ; '.'
000000000000b3fd         db  0x04 ; '.'
000000000000b3fe         db  0x00 ; '.'
000000000000b3ff         db  0x00 ; '.'
000000000000b400         db  0xcc ; '.'
000000000000b401         db  0x74 ; 't'
000000000000b402         db  0xff ; '.'
000000000000b403         db  0xff ; '.'
000000000000b404         db  0x4c ; 'L'
000000000000b405         db  0x05 ; '.'
000000000000b406         db  0x00 ; '.'
000000000000b407         db  0x00 ; '.'
000000000000b408         db  0x3c ; '<'
000000000000b409         db  0x79 ; 'y'
000000000000b40a         db  0xff ; '.'
000000000000b40b         db  0xff ; '.'
000000000000b40c         db  0xd4 ; '.'
000000000000b40d         db  0x05 ; '.'
000000000000b40e         db  0x00 ; '.'
000000000000b40f         db  0x00 ; '.'
000000000000b410         db  0x4c ; 'L'
000000000000b411         db  0x79 ; 'y'
000000000000b412         db  0xff ; '.'
000000000000b413         db  0xff ; '.'
000000000000b414         db  0xe8 ; '.'
000000000000b415         db  0x05 ; '.'
000000000000b416         db  0x00 ; '.'
000000000000b417         db  0x00 ; '.'
000000000000b418         db  0x5c ; '\'
000000000000b419         db  0x79 ; 'y'
000000000000b41a         db  0xff ; '.'
000000000000b41b         db  0xff ; '.'
000000000000b41c         db  0xfc ; '.'
000000000000b41d         db  0x05 ; '.'
000000000000b41e         db  0x00 ; '.'
000000000000b41f         db  0x00 ; '.'
000000000000b420         db  0x0c ; '.'
000000000000b421         db  0x7a ; 'z'
000000000000b422         db  0xff ; '.'
000000000000b423         db  0xff ; '.'
000000000000b424         db  0x2c ; ','
000000000000b425         db  0x06 ; '.'
000000000000b426         db  0x00 ; '.'
000000000000b427         db  0x00 ; '.'
000000000000b428         db  0xac ; '.'
000000000000b429         db  0x7a ; 'z'
000000000000b42a         db  0xff ; '.'
000000000000b42b         db  0xff ; '.'
000000000000b42c         db  0x4c ; 'L'
000000000000b42d         db  0x06 ; '.'
000000000000b42e         db  0x00 ; '.'
000000000000b42f         db  0x00 ; '.'
000000000000b430         db  0x9c ; '.'
000000000000b431         db  0x7b ; '{'
000000000000b432         db  0xff ; '.'
000000000000b433         db  0xff ; '.'
000000000000b434         db  0x90 ; '.'
000000000000b435         db  0x06 ; '.'
000000000000b436         db  0x00 ; '.'
000000000000b437         db  0x00 ; '.'
000000000000b438         db  0xdc ; '.'
000000000000b439         db  0x8d ; '.'
000000000000b43a         db  0xff ; '.'
000000000000b43b         db  0xff ; '.'
000000000000b43c         db  0x08 ; '.'
000000000000b43d         db  0x07 ; '.'
000000000000b43e         db  0x00 ; '.'
000000000000b43f         db  0x00 ; '.'
000000000000b440         db  0x8c ; '.'
000000000000b441         db  0x8f ; '.'
000000000000b442         db  0xff ; '.'
000000000000b443         db  0xff ; '.'
000000000000b444         db  0x74 ; 't'
000000000000b445         db  0x07 ; '.'
000000000000b446         db  0x00 ; '.'
000000000000b447         db  0x00 ; '.'
000000000000b448         db  0xcc ; '.'
000000000000b449         db  0x8f ; '.'
000000000000b44a         db  0xff ; '.'
000000000000b44b         db  0xff ; '.'
000000000000b44c         db  0xa0 ; '.'
000000000000b44d         db  0x07 ; '.'
000000000000b44e         db  0x00 ; '.'
000000000000b44f         db  0x00 ; '.'
000000000000b450         db  0xec ; '.'
000000000000b451         db  0x8f ; '.'
000000000000b452         db  0xff ; '.'
000000000000b453         db  0xff ; '.'
000000000000b454         db  0xb4 ; '.'
000000000000b455         db  0x07 ; '.'
000000000000b456         db  0x00 ; '.'
000000000000b457         db  0x00 ; '.'
000000000000b458         db  0x0c ; '.'
000000000000b459         db  0x90 ; '.'
000000000000b45a         db  0xff ; '.'
000000000000b45b         db  0xff ; '.'
000000000000b45c         db  0xc8 ; '.'
000000000000b45d         db  0x07 ; '.'
000000000000b45e         db  0x00 ; '.'
000000000000b45f         db  0x00 ; '.'
000000000000b460         db  0x4c ; 'L'
000000000000b461         db  0x90 ; '.'
000000000000b462         db  0xff ; '.'
000000000000b463         db  0xff ; '.'
000000000000b464         db  0xdc ; '.'
000000000000b465         db  0x07 ; '.'
000000000000b466         db  0x00 ; '.'
000000000000b467         db  0x00 ; '.'
000000000000b468         db  0x6c ; 'l'
000000000000b469         db  0x90 ; '.'
000000000000b46a         db  0xff ; '.'
000000000000b46b         db  0xff ; '.'
000000000000b46c         db  0xf0 ; '.'
000000000000b46d         db  0x07 ; '.'
000000000000b46e         db  0x00 ; '.'
000000000000b46f         db  0x00 ; '.'
000000000000b470         db  0x9c ; '.'
000000000000b471         db  0x90 ; '.'
000000000000b472         db  0xff ; '.'
000000000000b473         db  0xff ; '.'
000000000000b474         db  0x04 ; '.'
000000000000b475         db  0x08 ; '.'
000000000000b476         db  0x00 ; '.'
000000000000b477         db  0x00 ; '.'
000000000000b478         db  0x1c ; '.'
000000000000b479         db  0x91 ; '.'
000000000000b47a         db  0xff ; '.'
000000000000b47b         db  0xff ; '.'
000000000000b47c         db  0x58 ; 'X'
000000000000b47d         db  0x08 ; '.'
000000000000b47e         db  0x00 ; '.'
000000000000b47f         db  0x00 ; '.'
000000000000b480         db  0x0c ; '.'
000000000000b481         db  0x92 ; '.'
000000000000b482         db  0xff ; '.'
000000000000b483         db  0xff ; '.'
000000000000b484         db  0xc4 ; '.'
000000000000b485         db  0x08 ; '.'
000000000000b486         db  0x00 ; '.'
000000000000b487         db  0x00 ; '.'
000000000000b488         db  0x1c ; '.'
000000000000b489         db  0x92 ; '.'
000000000000b48a         db  0xff ; '.'
000000000000b48b         db  0xff ; '.'
000000000000b48c         db  0xd8 ; '.'
000000000000b48d         db  0x08 ; '.'
000000000000b48e         db  0x00 ; '.'
000000000000b48f         db  0x00 ; '.'
000000000000b490         db  0xbc ; '.'
000000000000b491         db  0x92 ; '.'
000000000000b492         db  0xff ; '.'
000000000000b493         db  0xff ; '.'
000000000000b494         db  0x04 ; '.'
000000000000b495         db  0x09 ; '.'
000000000000b496         db  0x00 ; '.'
000000000000b497         db  0x00 ; '.'
000000000000b498         db  0xdc ; '.'
000000000000b499         db  0x92 ; '.'
000000000000b49a         db  0xff ; '.'
000000000000b49b         db  0xff ; '.'
000000000000b49c         db  0x18 ; '.'
000000000000b49d         db  0x09 ; '.'
000000000000b49e         db  0x00 ; '.'
000000000000b49f         db  0x00 ; '.'
000000000000b4a0         db  0xec ; '.'
000000000000b4a1         db  0x92 ; '.'
000000000000b4a2         db  0xff ; '.'
000000000000b4a3         db  0xff ; '.'
000000000000b4a4         db  0x2c ; ','
000000000000b4a5         db  0x09 ; '.'
000000000000b4a6         db  0x00 ; '.'
000000000000b4a7         db  0x00 ; '.'
000000000000b4a8         db  0x0c ; '.'
000000000000b4a9         db  0x93 ; '.'
000000000000b4aa         db  0xff ; '.'
000000000000b4ab         db  0xff ; '.'
000000000000b4ac         db  0x40 ; '@'
000000000000b4ad         db  0x09 ; '.'
000000000000b4ae         db  0x00 ; '.'
000000000000b4af         db  0x00 ; '.'
000000000000b4b0         db  0x2c ; ','
000000000000b4b1         db  0x93 ; '.'
000000000000b4b2         db  0xff ; '.'
000000000000b4b3         db  0xff ; '.'
000000000000b4b4         db  0x54 ; 'T'
000000000000b4b5         db  0x09 ; '.'
000000000000b4b6         db  0x00 ; '.'
000000000000b4b7         db  0x00 ; '.'
000000000000b4b8         db  0xbc ; '.'
000000000000b4b9         db  0x93 ; '.'
000000000000b4ba         db  0xff ; '.'
000000000000b4bb         db  0xff ; '.'
000000000000b4bc         db  0x70 ; 'p'
000000000000b4bd         db  0x09 ; '.'
000000000000b4be         db  0x00 ; '.'
000000000000b4bf         db  0x00 ; '.'
000000000000b4c0         db  0x4c ; 'L'
000000000000b4c1         db  0x94 ; '.'
000000000000b4c2         db  0xff ; '.'
000000000000b4c3         db  0xff ; '.'
000000000000b4c4         db  0x8c ; '.'
000000000000b4c5         db  0x09 ; '.'
000000000000b4c6         db  0x00 ; '.'
000000000000b4c7         db  0x00 ; '.'
000000000000b4c8         db  0x5c ; '\'
000000000000b4c9         db  0x94 ; '.'
000000000000b4ca         db  0xff ; '.'
000000000000b4cb         db  0xff ; '.'
000000000000b4cc         db  0xa0 ; '.'
000000000000b4cd         db  0x09 ; '.'
000000000000b4ce         db  0x00 ; '.'
000000000000b4cf         db  0x00 ; '.'
000000000000b4d0         db  0x6c ; 'l'
000000000000b4d1         db  0x94 ; '.'
000000000000b4d2         db  0xff ; '.'
000000000000b4d3         db  0xff ; '.'
000000000000b4d4         db  0xb4 ; '.'
000000000000b4d5         db  0x09 ; '.'
000000000000b4d6         db  0x00 ; '.'
000000000000b4d7         db  0x00 ; '.'
000000000000b4d8         db  0x0c ; '.'
000000000000b4d9         db  0x95 ; '.'
000000000000b4da         db  0xff ; '.'
000000000000b4db         db  0xff ; '.'
000000000000b4dc         db  0xd0 ; '.'
000000000000b4dd         db  0x09 ; '.'
000000000000b4de         db  0x00 ; '.'
000000000000b4df         db  0x00 ; '.'
000000000000b4e0         db  0x1c ; '.'
000000000000b4e1         db  0x95 ; '.'
000000000000b4e2         db  0xff ; '.'
000000000000b4e3         db  0xff ; '.'
000000000000b4e4         db  0xe4 ; '.'
000000000000b4e5         db  0x09 ; '.'
000000000000b4e6         db  0x00 ; '.'
000000000000b4e7         db  0x00 ; '.'
000000000000b4e8         db  0x3c ; '<'
000000000000b4e9         db  0x95 ; '.'
000000000000b4ea         db  0xff ; '.'
000000000000b4eb         db  0xff ; '.'
000000000000b4ec         db  0xf8 ; '.'
000000000000b4ed         db  0x09 ; '.'
000000000000b4ee         db  0x00 ; '.'
000000000000b4ef         db  0x00 ; '.'
000000000000b4f0         db  0x4c ; 'L'
000000000000b4f1         db  0x95 ; '.'
000000000000b4f2         db  0xff ; '.'
000000000000b4f3         db  0xff ; '.'
000000000000b4f4         db  0x0c ; '.'
000000000000b4f5         db  0x0a ; '.'
000000000000b4f6         db  0x00 ; '.'
000000000000b4f7         db  0x00 ; '.'
000000000000b4f8         db  0xdc ; '.'
000000000000b4f9         db  0x95 ; '.'
000000000000b4fa         db  0xff ; '.'
000000000000b4fb         db  0xff ; '.'
000000000000b4fc         db  0x28 ; '('
000000000000b4fd         db  0x0a ; '.'
000000000000b4fe         db  0x00 ; '.'
000000000000b4ff         db  0x00 ; '.'
000000000000b500         db  0x7c ; '|'
000000000000b501         db  0x96 ; '.'
000000000000b502         db  0xff ; '.'
000000000000b503         db  0xff ; '.'
000000000000b504         db  0x44 ; 'D'
000000000000b505         db  0x0a ; '.'
000000000000b506         db  0x00 ; '.'
000000000000b507         db  0x00 ; '.'
000000000000b508         db  0x8c ; '.'
000000000000b509         db  0x96 ; '.'
000000000000b50a         db  0xff ; '.'
000000000000b50b         db  0xff ; '.'
000000000000b50c         db  0x58 ; 'X'
000000000000b50d         db  0x0a ; '.'
000000000000b50e         db  0x00 ; '.'
000000000000b50f         db  0x00 ; '.'
000000000000b510         db  0xac ; '.'
000000000000b511         db  0x96 ; '.'
000000000000b512         db  0xff ; '.'
000000000000b513         db  0xff ; '.'
000000000000b514         db  0x6c ; 'l'
000000000000b515         db  0x0a ; '.'
000000000000b516         db  0x00 ; '.'
000000000000b517         db  0x00 ; '.'
000000000000b518         db  0xcc ; '.'
000000000000b519         db  0x96 ; '.'
000000000000b51a         db  0xff ; '.'
000000000000b51b         db  0xff ; '.'
000000000000b51c         db  0x80 ; '.'
000000000000b51d         db  0x0a ; '.'
000000000000b51e         db  0x00 ; '.'
000000000000b51f         db  0x00 ; '.'
000000000000b520         db  0xdc ; '.'
000000000000b521         db  0x96 ; '.'
000000000000b522         db  0xff ; '.'
000000000000b523         db  0xff ; '.'
000000000000b524         db  0x94 ; '.'
000000000000b525         db  0x0a ; '.'
000000000000b526         db  0x00 ; '.'
000000000000b527         db  0x00 ; '.'
000000000000b528         db  0xfc ; '.'
000000000000b529         db  0x96 ; '.'
000000000000b52a         db  0xff ; '.'
000000000000b52b         db  0xff ; '.'
000000000000b52c         db  0xa8 ; '.'
000000000000b52d         db  0x0a ; '.'
000000000000b52e         db  0x00 ; '.'
000000000000b52f         db  0x00 ; '.'
000000000000b530         db  0x1c ; '.'
000000000000b531         db  0x97 ; '.'
000000000000b532         db  0xff ; '.'
000000000000b533         db  0xff ; '.'
000000000000b534         db  0xbc ; '.'
000000000000b535         db  0x0a ; '.'
000000000000b536         db  0x00 ; '.'
000000000000b537         db  0x00 ; '.'
000000000000b538         db  0x3c ; '<'
000000000000b539         db  0x97 ; '.'
000000000000b53a         db  0xff ; '.'
000000000000b53b         db  0xff ; '.'
000000000000b53c         db  0xd4 ; '.'
000000000000b53d         db  0x0a ; '.'
000000000000b53e         db  0x00 ; '.'
000000000000b53f         db  0x00 ; '.'
000000000000b540         db  0xbc ; '.'
000000000000b541         db  0x97 ; '.'
000000000000b542         db  0xff ; '.'
000000000000b543         db  0xff ; '.'
000000000000b544         db  0xfc ; '.'
000000000000b545         db  0x0a ; '.'
000000000000b546         db  0x00 ; '.'
000000000000b547         db  0x00 ; '.'
000000000000b548         db  0xdc ; '.'
000000000000b549         db  0x9b ; '.'
000000000000b54a         db  0xff ; '.'
000000000000b54b         db  0xff ; '.'
000000000000b54c         db  0x10 ; '.'
000000000000b54d         db  0x0c ; '.'
000000000000b54e         db  0x00 ; '.'
000000000000b54f         db  0x00 ; '.'
000000000000b550         db  0xfc ; '.'
000000000000b551         db  0x9b ; '.'
000000000000b552         db  0xff ; '.'
000000000000b553         db  0xff ; '.'
000000000000b554         db  0x24 ; '$'
000000000000b555         db  0x0c ; '.'
000000000000b556         db  0x00 ; '.'
000000000000b557         db  0x00 ; '.'
000000000000b558         db  0x7c ; '|'
000000000000b559         db  0x9c ; '.'
000000000000b55a         db  0xff ; '.'
000000000000b55b         db  0xff ; '.'
000000000000b55c         db  0x40 ; '@'
000000000000b55d         db  0x0c ; '.'
000000000000b55e         db  0x00 ; '.'
000000000000b55f         db  0x00 ; '.'
000000000000b560         db  0x5c ; '\'
000000000000b561         db  0x9d ; '.'
000000000000b562         db  0xff ; '.'
000000000000b563         db  0xff ; '.'
000000000000b564         db  0x6c ; 'l'
000000000000b565         db  0x0c ; '.'
000000000000b566         db  0x00 ; '.'
000000000000b567         db  0x00 ; '.'
000000000000b568         db  0xdc ; '.'
000000000000b569         db  0x9d ; '.'
000000000000b56a         db  0xff ; '.'
000000000000b56b         db  0xff ; '.'
000000000000b56c         db  0x8c ; '.'
000000000000b56d         db  0x0c ; '.'
000000000000b56e         db  0x00 ; '.'
000000000000b56f         db  0x00 ; '.'
000000000000b570         db  0xfc ; '.'
000000000000b571         db  0x9d ; '.'
000000000000b572         db  0xff ; '.'
000000000000b573         db  0xff ; '.'
000000000000b574         db  0xa8 ; '.'
000000000000b575         db  0x0c ; '.'
000000000000b576         db  0x00 ; '.'
000000000000b577         db  0x00 ; '.'
000000000000b578         db  0x2c ; ','
000000000000b579         db  0x9e ; '.'
000000000000b57a         db  0xff ; '.'
000000000000b57b         db  0xff ; '.'
000000000000b57c         db  0xbc ; '.'
000000000000b57d         db  0x0c ; '.'
000000000000b57e         db  0x00 ; '.'
000000000000b57f         db  0x00 ; '.'
000000000000b580         db  0x3c ; '<'
000000000000b581         db  0x9e ; '.'
000000000000b582         db  0xff ; '.'
000000000000b583         db  0xff ; '.'
000000000000b584         db  0xd0 ; '.'
000000000000b585         db  0x0c ; '.'
000000000000b586         db  0x00 ; '.'
000000000000b587         db  0x00 ; '.'
000000000000b588         db  0x7c ; '|'
000000000000b589         db  0x9e ; '.'
000000000000b58a         db  0xff ; '.'
000000000000b58b         db  0xff ; '.'
000000000000b58c         db  0xf4 ; '.'
000000000000b58d         db  0x0c ; '.'
000000000000b58e         db  0x00 ; '.'
000000000000b58f         db  0x00 ; '.'
000000000000b590         db  0xac ; '.'
000000000000b591         db  0x9e ; '.'
000000000000b592         db  0xff ; '.'
000000000000b593         db  0xff ; '.'
000000000000b594         db  0x08 ; '.'
000000000000b595         db  0x0d ; '.'
000000000000b596         db  0x00 ; '.'
000000000000b597         db  0x00 ; '.'
000000000000b598         db  0x3c ; '<'
000000000000b599         db  0x9f ; '.'
000000000000b59a         db  0xff ; '.'
000000000000b59b         db  0xff ; '.'
000000000000b59c         db  0x20 ; ' '
000000000000b59d         db  0x0d ; '.'
000000000000b59e         db  0x00 ; '.'
000000000000b59f         db  0x00 ; '.'
000000000000b5a0         db  0x8c ; '.'
000000000000b5a1         db  0x9f ; '.'
000000000000b5a2         db  0xff ; '.'
000000000000b5a3         db  0xff ; '.'
000000000000b5a4         db  0x38 ; '8'
000000000000b5a5         db  0x0d ; '.'
000000000000b5a6         db  0x00 ; '.'
000000000000b5a7         db  0x00 ; '.'
000000000000b5a8         db  0xac ; '.'
000000000000b5a9         db  0x9f ; '.'
000000000000b5aa         db  0xff ; '.'
000000000000b5ab         db  0xff ; '.'
000000000000b5ac         db  0x54 ; 'T'
000000000000b5ad         db  0x0d ; '.'
000000000000b5ae         db  0x00 ; '.'
000000000000b5af         db  0x00 ; '.'
000000000000b5b0         db  0xdc ; '.'
000000000000b5b1         db  0x9f ; '.'
000000000000b5b2         db  0xff ; '.'
000000000000b5b3         db  0xff ; '.'
000000000000b5b4         db  0x70 ; 'p'
000000000000b5b5         db  0x0d ; '.'
000000000000b5b6         db  0x00 ; '.'
000000000000b5b7         db  0x00 ; '.'
000000000000b5b8         db  0x0c ; '.'
000000000000b5b9         db  0xa0 ; '.'
000000000000b5ba         db  0xff ; '.'
000000000000b5bb         db  0xff ; '.'
000000000000b5bc         db  0x98 ; '.'
000000000000b5bd         db  0x0d ; '.'
000000000000b5be         db  0x00 ; '.'
000000000000b5bf         db  0x00 ; '.'
000000000000b5c0         db  0x2c ; ','
000000000000b5c1         db  0xa0 ; '.'
000000000000b5c2         db  0xff ; '.'
000000000000b5c3         db  0xff ; '.'
000000000000b5c4         db  0xb4 ; '.'
000000000000b5c5         db  0x0d ; '.'
000000000000b5c6         db  0x00 ; '.'
000000000000b5c7         db  0x00 ; '.'
000000000000b5c8         db  0x6c ; 'l'
000000000000b5c9         db  0xa0 ; '.'
000000000000b5ca         db  0xff ; '.'
000000000000b5cb         db  0xff ; '.'
000000000000b5cc         db  0xcc ; '.'
000000000000b5cd         db  0x0d ; '.'
000000000000b5ce         db  0x00 ; '.'
000000000000b5cf         db  0x00 ; '.'
000000000000b5d0         db  0xbc ; '.'
000000000000b5d1         db  0xa0 ; '.'
000000000000b5d2         db  0xff ; '.'
000000000000b5d3         db  0xff ; '.'
000000000000b5d4         db  0xe8 ; '.'
000000000000b5d5         db  0x0d ; '.'
000000000000b5d6         db  0x00 ; '.'
000000000000b5d7         db  0x00 ; '.'
000000000000b5d8         db  0xec ; '.'
000000000000b5d9         db  0xa0 ; '.'
000000000000b5da         db  0xff ; '.'
000000000000b5db         db  0xff ; '.'
000000000000b5dc         db  0xfc ; '.'
000000000000b5dd         db  0x0d ; '.'
000000000000b5de         db  0x00 ; '.'
000000000000b5df         db  0x00 ; '.'
000000000000b5e0         db  0x0c ; '.'
000000000000b5e1         db  0xa1 ; '.'
000000000000b5e2         db  0xff ; '.'
000000000000b5e3         db  0xff ; '.'
000000000000b5e4         db  0x10 ; '.'
000000000000b5e5         db  0x0e ; '.'
000000000000b5e6         db  0x00 ; '.'
000000000000b5e7         db  0x00 ; '.'
000000000000b5e8         db  0x1c ; '.'
000000000000b5e9         db  0xa1 ; '.'
000000000000b5ea         db  0xff ; '.'
000000000000b5eb         db  0xff ; '.'
000000000000b5ec         db  0x24 ; '$'
000000000000b5ed         db  0x0e ; '.'
000000000000b5ee         db  0x00 ; '.'
000000000000b5ef         db  0x00 ; '.'
000000000000b5f0         db  0x2c ; ','
000000000000b5f1         db  0xa1 ; '.'
000000000000b5f2         db  0xff ; '.'
000000000000b5f3         db  0xff ; '.'
000000000000b5f4         db  0x38 ; '8'
000000000000b5f5         db  0x0e ; '.'
000000000000b5f6         db  0x00 ; '.'
000000000000b5f7         db  0x00 ; '.'
000000000000b5f8         db  0x3c ; '<'
000000000000b5f9         db  0xa1 ; '.'
000000000000b5fa         db  0xff ; '.'
000000000000b5fb         db  0xff ; '.'
000000000000b5fc         db  0x4c ; 'L'
000000000000b5fd         db  0x0e ; '.'
000000000000b5fe         db  0x00 ; '.'
000000000000b5ff         db  0x00 ; '.'
000000000000b600         db  0x6c ; 'l'
000000000000b601         db  0xa1 ; '.'
000000000000b602         db  0xff ; '.'
000000000000b603         db  0xff ; '.'
000000000000b604         db  0x60 ; '`'
000000000000b605         db  0x0e ; '.'
000000000000b606         db  0x00 ; '.'
000000000000b607         db  0x00 ; '.'
000000000000b608         db  0x3c ; '<'
000000000000b609         db  0xa3 ; '.'
000000000000b60a         db  0xff ; '.'
000000000000b60b         db  0xff ; '.'
000000000000b60c         db  0x9c ; '.'
000000000000b60d         db  0x0e ; '.'
000000000000b60e         db  0x00 ; '.'
000000000000b60f         db  0x00 ; '.'
000000000000b610         db  0x4c ; 'L'
000000000000b611         db  0xa4 ; '.'
000000000000b612         db  0xff ; '.'
000000000000b613         db  0xff ; '.'
000000000000b614         db  0xec ; '.'
000000000000b615         db  0x0e ; '.'
000000000000b616         db  0x00 ; '.'
000000000000b617         db  0x00 ; '.'
000000000000b618         db  0xdc ; '.'
000000000000b619         db  0xa4 ; '.'
000000000000b61a         db  0xff ; '.'
000000000000b61b         db  0xff ; '.'
000000000000b61c         db  0x24 ; '$'
000000000000b61d         db  0x0f ; '.'
000000000000b61e         db  0x00 ; '.'
000000000000b61f         db  0x00 ; '.'
000000000000b620         db  0x2c ; ','
000000000000b621         db  0xa5 ; '.'
000000000000b622         db  0xff ; '.'
000000000000b623         db  0xff ; '.'
000000000000b624         db  0x50 ; 'P'
000000000000b625         db  0x0f ; '.'
000000000000b626         db  0x00 ; '.'
000000000000b627         db  0x00 ; '.'
000000000000b628         db  0x6c ; 'l'
000000000000b629         db  0xa5 ; '.'
000000000000b62a         db  0xff ; '.'
000000000000b62b         db  0xff ; '.'
000000000000b62c         db  0x6c ; 'l'
000000000000b62d         db  0x0f ; '.'
000000000000b62e         db  0x00 ; '.'
000000000000b62f         db  0x00 ; '.'
000000000000b630         db  0x9c ; '.'
000000000000b631         db  0xa6 ; '.'
000000000000b632         db  0xff ; '.'
000000000000b633         db  0xff ; '.'
000000000000b634         db  0xa8 ; '.'
000000000000b635         db  0x0f ; '.'
000000000000b636         db  0x00 ; '.'
000000000000b637         db  0x00 ; '.'
000000000000b638         db  0x0c ; '.'
000000000000b639         db  0xa7 ; '.'
000000000000b63a         db  0xff ; '.'
000000000000b63b         db  0xff ; '.'
000000000000b63c         db  0xcc ; '.'
000000000000b63d         db  0x0f ; '.'
000000000000b63e         db  0x00 ; '.'
000000000000b63f         db  0x00 ; '.'
000000000000b640         db  0x7c ; '|'
000000000000b641         db  0xa7 ; '.'
000000000000b642         db  0xff ; '.'
000000000000b643         db  0xff ; '.'
000000000000b644         db  0x10 ; '.'
000000000000b645         db  0x10 ; '.'
000000000000b646         db  0x00 ; '.'
000000000000b647         db  0x00 ; '.'
000000000000b648         db  0xdc ; '.'
000000000000b649         db  0xa7 ; '.'
000000000000b64a         db  0xff ; '.'
000000000000b64b         db  0xff ; '.'
000000000000b64c         db  0x3c ; '<'
000000000000b64d         db  0x10 ; '.'
000000000000b64e         db  0x00 ; '.'
000000000000b64f         db  0x00 ; '.'
000000000000b650         db  0x4c ; 'L'
000000000000b651         db  0xa8 ; '.'
000000000000b652         db  0xff ; '.'
000000000000b653         db  0xff ; '.'
000000000000b654         db  0x64 ; 'd'
000000000000b655         db  0x10 ; '.'
000000000000b656         db  0x00 ; '.'
000000000000b657         db  0x00 ; '.'
000000000000b658         db  0xbc ; '.'
000000000000b659         db  0xa8 ; '.'
000000000000b65a         db  0xff ; '.'
000000000000b65b         db  0xff ; '.'
000000000000b65c         db  0x84 ; '.'
000000000000b65d         db  0x10 ; '.'
000000000000b65e         db  0x00 ; '.'
000000000000b65f         db  0x00 ; '.'
000000000000b660         db  0xfc ; '.'
000000000000b661         db  0xa8 ; '.'
000000000000b662         db  0xff ; '.'
000000000000b663         db  0xff ; '.'
000000000000b664         db  0x98 ; '.'
000000000000b665         db  0x10 ; '.'
000000000000b666         db  0x00 ; '.'
000000000000b667         db  0x00 ; '.'
000000000000b668         db  0x7c ; '|'
000000000000b669         db  0xab ; '.'
000000000000b66a         db  0xff ; '.'
000000000000b66b         db  0xff ; '.'
000000000000b66c         db  0xe8 ; '.'
000000000000b66d         db  0x10 ; '.'
000000000000b66e         db  0x00 ; '.'
000000000000b66f         db  0x00 ; '.'
000000000000b670         db  0x2c ; ','
000000000000b671         db  0xac ; '.'
000000000000b672         db  0xff ; '.'
000000000000b673         db  0xff ; '.'
000000000000b674         db  0x2c ; ','
000000000000b675         db  0x11 ; '.'
000000000000b676         db  0x00 ; '.'
000000000000b677         db  0x00 ; '.'
000000000000b678         db  0xec ; '.'
000000000000b679         db  0xac ; '.'
000000000000b67a         db  0xff ; '.'
000000000000b67b         db  0xff ; '.'
000000000000b67c         db  0x48 ; 'H'
000000000000b67d         db  0x11 ; '.'
000000000000b67e         db  0x00 ; '.'
000000000000b67f         db  0x00 ; '.'
000000000000b680         db  0xcc ; '.'
000000000000b681         db  0xb6 ; '.'
000000000000b682         db  0xff ; '.'
000000000000b683         db  0xff ; '.'
000000000000b684         db  0x98 ; '.'
000000000000b685         db  0x11 ; '.'
000000000000b686         db  0x00 ; '.'
000000000000b687         db  0x00 ; '.'
000000000000b688         db  0x7c ; '|'
000000000000b689         db  0xba ; '.'
000000000000b68a         db  0xff ; '.'
000000000000b68b         db  0xff ; '.'
000000000000b68c         db  0xe4 ; '.'
000000000000b68d         db  0x11 ; '.'
000000000000b68e         db  0x00 ; '.'
000000000000b68f         db  0x00 ; '.'
000000000000b690         db  0x0c ; '.'
000000000000b691         db  0xbc ; '.'
000000000000b692         db  0xff ; '.'
000000000000b693         db  0xff ; '.'
000000000000b694         db  0x14 ; '.'
000000000000b695         db  0x12 ; '.'
000000000000b696         db  0x00 ; '.'
000000000000b697         db  0x00 ; '.'
000000000000b698         db  0x8c ; '.'
000000000000b699         db  0xc3 ; '.'
000000000000b69a         db  0xff ; '.'
000000000000b69b         db  0xff ; '.'
000000000000b69c         db  0x78 ; 'x'
000000000000b69d         db  0x12 ; '.'
000000000000b69e         db  0x00 ; '.'
000000000000b69f         db  0x00 ; '.'
000000000000b6a0         db  0xbc ; '.'
000000000000b6a1         db  0xc3 ; '.'
000000000000b6a2         db  0xff ; '.'
000000000000b6a3         db  0xff ; '.'
000000000000b6a4         db  0x90 ; '.'
000000000000b6a5         db  0x12 ; '.'
000000000000b6a6         db  0x00 ; '.'
000000000000b6a7         db  0x00 ; '.'
000000000000b6a8         db  0x0c ; '.'
000000000000b6a9         db  0xc5 ; '.'
000000000000b6aa         db  0xff ; '.'
000000000000b6ab         db  0xff ; '.'
000000000000b6ac         db  0xf4 ; '.'
000000000000b6ad         db  0x12 ; '.'
000000000000b6ae         db  0x00 ; '.'
000000000000b6af         db  0x00 ; '.'
000000000000b6b0         db  0x9c ; '.'
000000000000b6b1         db  0xc5 ; '.'
000000000000b6b2         db  0xff ; '.'
000000000000b6b3         db  0xff ; '.'
000000000000b6b4         db  0x34 ; '4'
000000000000b6b5         db  0x13 ; '.'
000000000000b6b6         db  0x00 ; '.'
000000000000b6b7         db  0x00 ; '.'
000000000000b6b8         db  0xbc ; '.'
000000000000b6b9         db  0xc6 ; '.'
000000000000b6ba         db  0xff ; '.'
000000000000b6bb         db  0xff ; '.'
000000000000b6bc         db  0x70 ; 'p'
000000000000b6bd         db  0x13 ; '.'
000000000000b6be         db  0x00 ; '.'
000000000000b6bf         db  0x00 ; '.'
000000000000b6c0         db  0xcc ; '.'
000000000000b6c1         db  0xc6 ; '.'
000000000000b6c2         db  0xff ; '.'
000000000000b6c3         db  0xff ; '.'
000000000000b6c4         db  0x84 ; '.'
000000000000b6c5         db  0x13 ; '.'
000000000000b6c6         db  0x00 ; '.'
000000000000b6c7         db  0x00 ; '.'
000000000000b6c8         db  0xdc ; '.'
000000000000b6c9         db  0xc6 ; '.'
000000000000b6ca         db  0xff ; '.'
000000000000b6cb         db  0xff ; '.'
000000000000b6cc         db  0x98 ; '.'
000000000000b6cd         db  0x13 ; '.'
000000000000b6ce         db  0x00 ; '.'
000000000000b6cf         db  0x00 ; '.'
000000000000b6d0         db  0xec ; '.'
000000000000b6d1         db  0xc6 ; '.'
000000000000b6d2         db  0xff ; '.'
000000000000b6d3         db  0xff ; '.'
000000000000b6d4         db  0xac ; '.'
000000000000b6d5         db  0x13 ; '.'
000000000000b6d6         db  0x00 ; '.'
000000000000b6d7         db  0x00 ; '.'
000000000000b6d8         db  0x6c ; 'l'
000000000000b6d9         db  0xc7 ; '.'
000000000000b6da         db  0xff ; '.'
000000000000b6db         db  0xff ; '.'
000000000000b6dc         db  0xfc ; '.'
000000000000b6dd         db  0x13 ; '.'
000000000000b6de         db  0x00 ; '.'
000000000000b6df         db  0x00 ; '.'
000000000000b6e0         db  0x7c ; '|'
000000000000b6e1         db  0xc7 ; '.'
000000000000b6e2         db  0xff ; '.'
000000000000b6e3         db  0xff ; '.'
000000000000b6e4         db  0x10 ; '.'
000000000000b6e5         db  0x14 ; '.'
000000000000b6e6         db  0x00 ; '.'
000000000000b6e7         db  0x00 ; '.'
000000000000b6e8         db  0x0c ; '.'
000000000000b6e9         db  0xc8 ; '.'
000000000000b6ea         db  0xff ; '.'
000000000000b6eb         db  0xff ; '.'
000000000000b6ec         db  0x2c ; ','
000000000000b6ed         db  0x14 ; '.'
000000000000b6ee         db  0x00 ; '.'
000000000000b6ef         db  0x00 ; '.'
000000000000b6f0         db  0x7c ; '|'
000000000000b6f1         db  0xc8 ; '.'
000000000000b6f2         db  0xff ; '.'
000000000000b6f3         db  0xff ; '.'
000000000000b6f4         db  0x4c ; 'L'
000000000000b6f5         db  0x14 ; '.'
000000000000b6f6         db  0x00 ; '.'
000000000000b6f7         db  0x00 ; '.'
000000000000b6f8         db  0xdc ; '.'
000000000000b6f9         db  0xc8 ; '.'
000000000000b6fa         db  0xff ; '.'
000000000000b6fb         db  0xff ; '.'
000000000000b6fc         db  0x6c ; 'l'
000000000000b6fd         db  0x14 ; '.'
000000000000b6fe         db  0x00 ; '.'
000000000000b6ff         db  0x00 ; '.'
000000000000b700         db  0x7c ; '|'
000000000000b701         db  0xc9 ; '.'
000000000000b702         db  0xff ; '.'
000000000000b703         db  0xff ; '.'
000000000000b704         db  0x80 ; '.'
000000000000b705         db  0x14 ; '.'
000000000000b706         db  0x00 ; '.'
000000000000b707         db  0x00 ; '.'
000000000000b708         db  0x8c ; '.'
000000000000b709         db  0xc9 ; '.'
000000000000b70a         db  0xff ; '.'
000000000000b70b         db  0xff ; '.'
000000000000b70c         db  0x94 ; '.'
000000000000b70d         db  0x14 ; '.'
000000000000b70e         db  0x00 ; '.'
000000000000b70f         db  0x00 ; '.'
000000000000b710         db  0x9c ; '.'
000000000000b711         db  0xc9 ; '.'
000000000000b712         db  0xff ; '.'
000000000000b713         db  0xff ; '.'
000000000000b714         db  0xa8 ; '.'
000000000000b715         db  0x14 ; '.'
000000000000b716         db  0x00 ; '.'
000000000000b717         db  0x00 ; '.'
000000000000b718         db  0xcc ; '.'
000000000000b719         db  0xc9 ; '.'
000000000000b71a         db  0xff ; '.'
000000000000b71b         db  0xff ; '.'
000000000000b71c         db  0xc4 ; '.'
000000000000b71d         db  0x14 ; '.'
000000000000b71e         db  0x00 ; '.'
000000000000b71f         db  0x00 ; '.'
000000000000b720         db  0xec ; '.'
000000000000b721         db  0xca ; '.'
000000000000b722         db  0xff ; '.'
000000000000b723         db  0xff ; '.'
000000000000b724         db  0x24 ; '$'
000000000000b725         db  0x15 ; '.'
000000000000b726         db  0x00 ; '.'
000000000000b727         db  0x00 ; '.'
000000000000b728         db  0x6c ; 'l'
000000000000b729         db  0xcb ; '.'
000000000000b72a         db  0xff ; '.'
000000000000b72b         db  0xff ; '.'
000000000000b72c         db  0x38 ; '8'
000000000000b72d         db  0x15 ; '.'
000000000000b72e         db  0x00 ; '.'
000000000000b72f         db  0x00 ; '.'
000000000000b730         db  0xac ; '.'
000000000000b731         db  0xcc ; '.'
000000000000b732         db  0xff ; '.'
000000000000b733         db  0xff ; '.'
000000000000b734         db  0x98 ; '.'
000000000000b735         db  0x15 ; '.'
000000000000b736         db  0x00 ; '.'
000000000000b737         db  0x00 ; '.'
000000000000b738         db  0xbc ; '.'
000000000000b739         db  0xcc ; '.'
000000000000b73a         db  0xff ; '.'
000000000000b73b         db  0xff ; '.'
000000000000b73c         db  0xac ; '.'
000000000000b73d         db  0x15 ; '.'
000000000000b73e         db  0x00 ; '.'
000000000000b73f         db  0x00 ; '.'
000000000000b740         db  0xcc ; '.'
000000000000b741         db  0xcc ; '.'
000000000000b742         db  0xff ; '.'
000000000000b743         db  0xff ; '.'
000000000000b744         db  0xc0 ; '.'
000000000000b745         db  0x15 ; '.'
000000000000b746         db  0x00 ; '.'
000000000000b747         db  0x00 ; '.'
000000000000b748         db  0xdc ; '.'
000000000000b749         db  0xcc ; '.'
000000000000b74a         db  0xff ; '.'
000000000000b74b         db  0xff ; '.'
000000000000b74c         db  0xd4 ; '.'
000000000000b74d         db  0x15 ; '.'
000000000000b74e         db  0x00 ; '.'
000000000000b74f         db  0x00 ; '.'
000000000000b750         db  0x2c ; ','
000000000000b751         db  0xcd ; '.'
000000000000b752         db  0xff ; '.'
000000000000b753         db  0xff ; '.'
000000000000b754         db  0xe8 ; '.'
000000000000b755         db  0x15 ; '.'
000000000000b756         db  0x00 ; '.'
000000000000b757         db  0x00 ; '.'
000000000000b758         db  0x8c ; '.'
000000000000b759         db  0xcd ; '.'
000000000000b75a         db  0xff ; '.'
000000000000b75b         db  0xff ; '.'
000000000000b75c         db  0xfc ; '.'
000000000000b75d         db  0x15 ; '.'
000000000000b75e         db  0x00 ; '.'
000000000000b75f         db  0x00 ; '.'
000000000000b760         db  0xdc ; '.'
000000000000b761         db  0xce ; '.'
000000000000b762         db  0xff ; '.'
000000000000b763         db  0xff ; '.'
000000000000b764         db  0x38 ; '8'
000000000000b765         db  0x16 ; '.'
000000000000b766         db  0x00 ; '.'
000000000000b767         db  0x00 ; '.'
000000000000b768         db  0x3c ; '<'
000000000000b769         db  0xcf ; '.'
000000000000b76a         db  0xff ; '.'
000000000000b76b         db  0xff ; '.'
000000000000b76c         db  0x70 ; 'p'
000000000000b76d         db  0x16 ; '.'
000000000000b76e         db  0x00 ; '.'
000000000000b76f         db  0x00 ; '.'
000000000000b770         db  0x8c ; '.'
000000000000b771         db  0xcf ; '.'
000000000000b772         db  0xff ; '.'
000000000000b773         db  0xff ; '.'
000000000000b774         db  0x84 ; '.'
000000000000b775         db  0x16 ; '.'
000000000000b776         db  0x00 ; '.'
000000000000b777         db  0x00 ; '.'
000000000000b778         db  0x0c ; '.'
000000000000b779         db  0xd0 ; '.'
000000000000b77a         db  0xff ; '.'
000000000000b77b         db  0xff ; '.'
000000000000b77c         db  0xb8 ; '.'
000000000000b77d         db  0x16 ; '.'
000000000000b77e         db  0x00 ; '.'
000000000000b77f         db  0x00 ; '.'
000000000000b780         db  0x7c ; '|'
000000000000b781         db  0xd0 ; '.'
000000000000b782         db  0xff ; '.'
000000000000b783         db  0xff ; '.'
000000000000b784         db  0xcc ; '.'
000000000000b785         db  0x16 ; '.'
000000000000b786         db  0x00 ; '.'
000000000000b787         db  0x00 ; '.'
000000000000b788         db  0xec ; '.'
000000000000b789         db  0xd0 ; '.'
000000000000b78a         db  0xff ; '.'
000000000000b78b         db  0xff ; '.'
000000000000b78c         db  0x18 ; '.'
000000000000b78d         db  0x17 ; '.'
000000000000b78e         db  0x00 ; '.'
000000000000b78f         db  0x00 ; '.'
000000000000b790         db  0x2c ; ','
000000000000b791         db  0xd1 ; '.'
000000000000b792         db  0xff ; '.'
000000000000b793         db  0xff ; '.'
000000000000b794         db  0x2c ; ','
000000000000b795         db  0x17 ; '.'
000000000000b796         db  0x00 ; '.'
000000000000b797         db  0x00 ; '.'
000000000000b798         db  0x4c ; 'L'
000000000000b799         db  0xd1 ; '.'
000000000000b79a         db  0xff ; '.'
000000000000b79b         db  0xff ; '.'
000000000000b79c         db  0x40 ; '@'
000000000000b79d         db  0x17 ; '.'
000000000000b79e         db  0x00 ; '.'
000000000000b79f         db  0x00 ; '.'
000000000000b7a0         db  0x0c ; '.'
000000000000b7a1         db  0xd3 ; '.'
000000000000b7a2         db  0xff ; '.'
000000000000b7a3         db  0xff ; '.'
000000000000b7a4         db  0x8c ; '.'
000000000000b7a5         db  0x17 ; '.'
000000000000b7a6         db  0x00 ; '.'
000000000000b7a7         db  0x00 ; '.'
000000000000b7a8         db  0x9c ; '.'
000000000000b7a9         db  0xd3 ; '.'
000000000000b7aa         db  0xff ; '.'
000000000000b7ab         db  0xff ; '.'
000000000000b7ac         db  0xb8 ; '.'
000000000000b7ad         db  0x17 ; '.'
000000000000b7ae         db  0x00 ; '.'
000000000000b7af         db  0x00 ; '.'
000000000000b7b0         db  0x7c ; '|'
000000000000b7b1         db  0xd4 ; '.'
000000000000b7b2         db  0xff ; '.'
000000000000b7b3         db  0xff ; '.'
000000000000b7b4         db  0xe4 ; '.'
000000000000b7b5         db  0x17 ; '.'
000000000000b7b6         db  0x00 ; '.'
000000000000b7b7         db  0x00 ; '.'
000000000000b7b8         db  0xbc ; '.'
000000000000b7b9         db  0xd6 ; '.'
000000000000b7ba         db  0xff ; '.'
000000000000b7bb         db  0xff ; '.'
000000000000b7bc         db  0x1c ; '.'
000000000000b7bd         db  0x18 ; '.'
000000000000b7be         db  0x00 ; '.'
000000000000b7bf         db  0x00 ; '.'
000000000000b7c0         db  0x4c ; 'L'
000000000000b7c1         db  0xd9 ; '.'
000000000000b7c2         db  0xff ; '.'
000000000000b7c3         db  0xff ; '.'
000000000000b7c4         db  0x58 ; 'X'
000000000000b7c5         db  0x18 ; '.'
000000000000b7c6         db  0x00 ; '.'
000000000000b7c7         db  0x00 ; '.'
000000000000b7c8         db  0xac ; '.'
000000000000b7c9         db  0xd9 ; '.'
000000000000b7ca         db  0xff ; '.'
000000000000b7cb         db  0xff ; '.'
000000000000b7cc         db  0x7c ; '|'
000000000000b7cd         db  0x18 ; '.'
000000000000b7ce         db  0x00 ; '.'
000000000000b7cf         db  0x00 ; '.'
000000000000b7d0         db  0xbc ; '.'
000000000000b7d1         db  0xdb ; '.'
000000000000b7d2         db  0xff ; '.'
000000000000b7d3         db  0xff ; '.'
000000000000b7d4         db  0xb4 ; '.'
000000000000b7d5         db  0x18 ; '.'
000000000000b7d6         db  0x00 ; '.'
000000000000b7d7         db  0x00 ; '.'
000000000000b7d8         db  0xdc ; '.'
000000000000b7d9         db  0xdb ; '.'
000000000000b7da         db  0xff ; '.'
000000000000b7db         db  0xff ; '.'
000000000000b7dc         db  0xc8 ; '.'
000000000000b7dd         db  0x18 ; '.'
000000000000b7de         db  0x00 ; '.'
000000000000b7df         db  0x00 ; '.'
000000000000b7e0         db  0xec ; '.'
000000000000b7e1         db  0xdb ; '.'
000000000000b7e2         db  0xff ; '.'
000000000000b7e3         db  0xff ; '.'
000000000000b7e4         db  0xdc ; '.'
000000000000b7e5         db  0x18 ; '.'
000000000000b7e6         db  0x00 ; '.'
000000000000b7e7         db  0x00 ; '.'
000000000000b7e8         db  0x2c ; ','
000000000000b7e9         db  0xdc ; '.'
000000000000b7ea         db  0xff ; '.'
000000000000b7eb         db  0xff ; '.'
000000000000b7ec         db  0xf0 ; '.'
000000000000b7ed         db  0x18 ; '.'
000000000000b7ee         db  0x00 ; '.'
000000000000b7ef         db  0x00 ; '.'
000000000000b7f0         db  0x6c ; 'l'
000000000000b7f1         db  0xdc ; '.'
000000000000b7f2         db  0xff ; '.'
000000000000b7f3         db  0xff ; '.'
000000000000b7f4         db  0x04 ; '.'
000000000000b7f5         db  0x19 ; '.'
000000000000b7f6         db  0x00 ; '.'
000000000000b7f7         db  0x00 ; '.'
000000000000b7f8         db  0xac ; '.'
000000000000b7f9         db  0xdc ; '.'
000000000000b7fa         db  0xff ; '.'
000000000000b7fb         db  0xff ; '.'
000000000000b7fc         db  0x24 ; '$'
000000000000b7fd         db  0x19 ; '.'
000000000000b7fe         db  0x00 ; '.'
000000000000b7ff         db  0x00 ; '.'
000000000000b800         db  0xdc ; '.'
000000000000b801         db  0xdc ; '.'
000000000000b802         db  0xff ; '.'
000000000000b803         db  0xff ; '.'
000000000000b804         db  0x3c ; '<'
000000000000b805         db  0x19 ; '.'
000000000000b806         db  0x00 ; '.'
000000000000b807         db  0x00 ; '.'
000000000000b808         db  0x0c ; '.'
000000000000b809         db  0xdd ; '.'
000000000000b80a         db  0xff ; '.'
000000000000b80b         db  0xff ; '.'
000000000000b80c         db  0x54 ; 'T'
000000000000b80d         db  0x19 ; '.'
000000000000b80e         db  0x00 ; '.'
000000000000b80f         db  0x00 ; '.'
000000000000b810         db  0x7c ; '|'
000000000000b811         db  0xdd ; '.'
000000000000b812         db  0xff ; '.'
000000000000b813         db  0xff ; '.'
000000000000b814         db  0x74 ; 't'
000000000000b815         db  0x19 ; '.'
000000000000b816         db  0x00 ; '.'
000000000000b817         db  0x00 ; '.'
000000000000b818         db  0xfc ; '.'
000000000000b819         db  0xdd ; '.'
000000000000b81a         db  0xff ; '.'
000000000000b81b         db  0xff ; '.'
000000000000b81c         db  0xd4 ; '.'
000000000000b81d         db  0x19 ; '.'
000000000000b81e         db  0x00 ; '.'
000000000000b81f         db  0x00 ; '.'
000000000000b820         db  0x4c ; 'L'
000000000000b821         db  0xde ; '.'
000000000000b822         db  0xff ; '.'
000000000000b823         db  0xff ; '.'
000000000000b824         db  0xf4 ; '.'
000000000000b825         db  0x19 ; '.'
000000000000b826         db  0x00 ; '.'
000000000000b827         db  0x00 ; '.'
000000000000b828         db  0x6c ; 'l'
000000000000b829         db  0xde ; '.'
000000000000b82a         db  0xff ; '.'
000000000000b82b         db  0xff ; '.'
000000000000b82c         db  0x08 ; '.'
000000000000b82d         db  0x1a ; '.'
000000000000b82e         db  0x00 ; '.'
000000000000b82f         db  0x00 ; '.'
000000000000b830         db  0x8c ; '.'
000000000000b831         db  0xde ; '.'
000000000000b832         db  0xff ; '.'
000000000000b833         db  0xff ; '.'
000000000000b834         db  0x24 ; '$'
000000000000b835         db  0x1a ; '.'
000000000000b836         db  0x00 ; '.'
000000000000b837         db  0x00 ; '.'
000000000000b838         db  0xcc ; '.'
000000000000b839         db  0xde ; '.'
000000000000b83a         db  0xff ; '.'
000000000000b83b         db  0xff ; '.'
000000000000b83c         db  0x5c ; '\'
000000000000b83d         db  0x1a ; '.'
000000000000b83e         db  0x00 ; '.'
000000000000b83f         db  0x00 ; '.'
000000000000b840         db  0x1c ; '.'
000000000000b841         db  0xdf ; '.'
000000000000b842         db  0xff ; '.'
000000000000b843         db  0xff ; '.'
000000000000b844         db  0x78 ; 'x'
000000000000b845         db  0x1a ; '.'
000000000000b846         db  0x00 ; '.'
000000000000b847         db  0x00 ; '.'
000000000000b848         db  0x5c ; '\'
000000000000b849         db  0xdf ; '.'
000000000000b84a         db  0xff ; '.'
000000000000b84b         db  0xff ; '.'
000000000000b84c         db  0xa4 ; '.'
000000000000b84d         db  0x1a ; '.'
000000000000b84e         db  0x00 ; '.'
000000000000b84f         db  0x00 ; '.'
000000000000b850         db  0x3c ; '<'
000000000000b851         db  0xe2 ; '.'
000000000000b852         db  0xff ; '.'
000000000000b853         db  0xff ; '.'
000000000000b854         db  0xf4 ; '.'
000000000000b855         db  0x1a ; '.'
000000000000b856         db  0x00 ; '.'
000000000000b857         db  0x00 ; '.'
000000000000b858         db  0xbc ; '.'
000000000000b859         db  0xe2 ; '.'
000000000000b85a         db  0xff ; '.'
000000000000b85b         db  0xff ; '.'
000000000000b85c         db  0x2c ; ','
000000000000b85d         db  0x1b ; '.'
000000000000b85e         db  0x00 ; '.'
000000000000b85f         db  0x00 ; '.'
000000000000b860         db  0x3c ; '<'
000000000000b861         db  0xe5 ; '.'
000000000000b862         db  0xff ; '.'
000000000000b863         db  0xff ; '.'
000000000000b864         db  0x64 ; 'd'
000000000000b865         db  0x1b ; '.'
000000000000b866         db  0x00 ; '.'
000000000000b867         db  0x00 ; '.'
000000000000b868         db  0x7c ; '|'
000000000000b869         db  0xe5 ; '.'
000000000000b86a         db  0xff ; '.'
000000000000b86b         db  0xff ; '.'
000000000000b86c         db  0x84 ; '.'
000000000000b86d         db  0x1b ; '.'
000000000000b86e         db  0x00 ; '.'
000000000000b86f         db  0x00 ; '.'
000000000000b870         db  0xdc ; '.'
000000000000b871         db  0xe5 ; '.'
000000000000b872         db  0xff ; '.'
000000000000b873         db  0xff ; '.'
000000000000b874         db  0xb4 ; '.'
000000000000b875         db  0x1b ; '.'
000000000000b876         db  0x00 ; '.'
000000000000b877         db  0x00 ; '.'
000000000000b878         db  0x3c ; '<'
000000000000b879         db  0xe7 ; '.'
000000000000b87a         db  0xff ; '.'
000000000000b87b         db  0xff ; '.'
000000000000b87c         db  0xfc ; '.'
000000000000b87d         db  0x1b ; '.'
000000000000b87e         db  0x00 ; '.'
000000000000b87f         db  0x00 ; '.'
000000000000b880         db  0x4c ; 'L'
000000000000b881         db  0xe7 ; '.'
000000000000b882         db  0xff ; '.'
000000000000b883         db  0xff ; '.'
000000000000b884         db  0x14 ; '.'
000000000000b885         db  0x1c ; '.'
000000000000b886         db  0x00 ; '.'
000000000000b887         db  0x00 ; '.'
000000000000b888         db  0xbc ; '.'
000000000000b889         db  0xe7 ; '.'
000000000000b88a         db  0xff ; '.'
000000000000b88b         db  0xff ; '.'
000000000000b88c         db  0x5c ; '\'
000000000000b88d         db  0x1c ; '.'
000000000000b88e         db  0x00 ; '.'
000000000000b88f         db  0x00 ; '.'
000000000000b890         db  0xcc ; '.'
000000000000b891         db  0xe7 ; '.'
000000000000b892         db  0xff ; '.'
000000000000b893         db  0xff ; '.'
000000000000b894         db  0x74 ; 't'
000000000000b895         db  0x1c ; '.'
000000000000b896         db  0x00 ; '.'
000000000000b897         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xb898; 0xd060[ (6088 bytes)
        ; File offset : [47256; 53344[ (6088 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b898         dd         0x00000014                                  ; Length of the record
000000000000b89c         dd         0x00000000                                  ; CIE ID
000000000000b8a0         db         0x01                                        ; Version
000000000000b8a1         db         "zR", 0                                     ; Augmentation String
000000000000b8a4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b8a5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b8a6         db         0x10                                        ; Return address register
000000000000b8a7         db         0x01                                        ; Augmentation data length
000000000000b8a8         db         0x1b                                        ; FDE encoding
000000000000b8a9         db  0x0c ; '.'
000000000000b8aa         db  0x07 ; '.'
000000000000b8ab         db  0x08 ; '.'
000000000000b8ac         db  0x90 ; '.'
000000000000b8ad         db  0x01 ; '.'
000000000000b8ae         db  0x07 ; '.'
000000000000b8af         db  0x10 ; '.'
000000000000b8b0         dd         0x00000014                                  ; Length of the record
000000000000b8b4         dd         0x0000001c                                  ; FDE: parent CIE at 0xb898 (FDE encoding = 0x1B)
000000000000b8b8         db         0xd8, 0x6e, 2 dup (0xff)                    ; begin 0x2790
000000000000b8bc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x27bb)
000000000000b8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8c1         align      8
000000000000b8c8         dd         0x00000014                                  ; Length of the record
000000000000b8cc         dd         0x00000000                                  ; CIE ID
000000000000b8d0         db         0x01                                        ; Version
000000000000b8d1         db         "zR", 0                                     ; Augmentation String
000000000000b8d4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b8d5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b8d6         db         0x10                                        ; Return address register
000000000000b8d7         db         0x01                                        ; Augmentation data length
000000000000b8d8         db         0x1b                                        ; FDE encoding
000000000000b8d9         db  0x0c ; '.'
000000000000b8da         db  0x07 ; '.'
000000000000b8db         db  0x08 ; '.'
000000000000b8dc         db  0x90 ; '.'
000000000000b8dd         db  0x01 ; '.'
000000000000b8de         db  0x00 ; '.'
000000000000b8df         db  0x00 ; '.'
000000000000b8e0         dd         0x00000024                                  ; Length of the record
000000000000b8e4         dd         0x0000001c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b8e8         db         0x98, 0x5f, 2 dup (0xff)                    ; begin 0x1880
000000000000b8ec         db         0x10, 0x04, 2 dup (0x00)                    ; length 0x410 (end at 0x1c90)
000000000000b8f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8f1         db  0x0e ; '.'
000000000000b8f2         db  0x10 ; '.'
000000000000b8f3         db  0x46 ; 'F'
000000000000b8f4         db  0x0e ; '.'
000000000000b8f5         db  0x18 ; '.'
000000000000b8f6         db  0x4a ; 'J'
000000000000b8f7         db  0x0f ; '.'
000000000000b8f8         db  0x0b ; '.'
000000000000b8f9         db  0x77 ; 'w'
000000000000b8fa         db  0x08 ; '.'
000000000000b8fb         db  0x80 ; '.'
000000000000b8fc         db  0x00 ; '.'
000000000000b8fd         db  0x3f ; '?'
000000000000b8fe         db  0x1a ; '.'
000000000000b8ff         db  0x3b ; ';'
000000000000b900         db  0x2a ; '*'
000000000000b901         db  0x33 ; '3'
000000000000b902         db  0x24 ; '$'
000000000000b903         db  0x22 ; '"'
000000000000b904         db  0x00 ; '.'
000000000000b905         db  0x00 ; '.'
000000000000b906         db  0x00 ; '.'
000000000000b907         db  0x00 ; '.'
000000000000b908         dd         0x00000014                                  ; Length of the record
000000000000b90c         dd         0x00000044                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b910         db         0x80, 0x63, 2 dup (0xff)                    ; begin 0x1c90
000000000000b914         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x1ca0)
000000000000b918         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b919         align      32
000000000000b920         dd         0x00000028                                  ; Length of the record
000000000000b924         dd         0x0000005c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b928         db         0x78, 0x6f, 2 dup (0xff)                    ; begin 0x28a0
000000000000b92c         db         0x6a, 0x04, 2 dup (0x00)                    ; length 0x46a (end at 0x2d0a)
000000000000b930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b931         db  0x42 ; 'B'
000000000000b932         db  0x0e ; '.'
000000000000b933         db  0x10 ; '.'
000000000000b934         db  0x8d ; '.'
000000000000b935         db  0x02 ; '.'
000000000000b936         db  0x42 ; 'B'
000000000000b937         db  0x0e ; '.'
000000000000b938         db  0x18 ; '.'
000000000000b939         db  0x8c ; '.'
000000000000b93a         db  0x03 ; '.'
000000000000b93b         db  0x46 ; 'F'
000000000000b93c         db  0x0e ; '.'
000000000000b93d         db  0x20 ; ' '
000000000000b93e         db  0x86 ; '.'
000000000000b93f         db  0x04 ; '.'
000000000000b940         db  0x41 ; 'A'
000000000000b941         db  0x0e ; '.'
000000000000b942         db  0x28 ; '('
000000000000b943         db  0x83 ; '.'
000000000000b944         db  0x05 ; '.'
000000000000b945         db  0x49 ; 'I'
000000000000b946         db  0x0e ; '.'
000000000000b947         db  0xb0 ; '.'
000000000000b948         db  0x01 ; '.'
000000000000b949         db  0x00 ; '.'
000000000000b94a         db  0x00 ; '.'
000000000000b94b         db  0x00 ; '.'
000000000000b94c         dd         0x00000058                                  ; Length of the record
000000000000b950         dd         0x00000088                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b954         db         0x4c, 0x63, 2 dup (0xff)                    ; begin 0x1ca0
000000000000b958         db         0xe1, 0x0a, 2 dup (0x00)                    ; length 0xae1 (end at 0x2781)
000000000000b95c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b95d         db  0x42 ; 'B'
000000000000b95e         db  0x0e ; '.'
000000000000b95f         db  0x10 ; '.'
000000000000b960         db  0x8f ; '.'
000000000000b961         db  0x02 ; '.'
000000000000b962         db  0x42 ; 'B'
000000000000b963         db  0x0e ; '.'
000000000000b964         db  0x18 ; '.'
000000000000b965         db  0x8e ; '.'
000000000000b966         db  0x03 ; '.'
000000000000b967         db  0x45 ; 'E'
000000000000b968         db  0x0e ; '.'
000000000000b969         db  0x20 ; ' '
000000000000b96a         db  0x8d ; '.'
000000000000b96b         db  0x04 ; '.'
000000000000b96c         db  0x42 ; 'B'
000000000000b96d         db  0x0e ; '.'
000000000000b96e         db  0x28 ; '('
000000000000b96f         db  0x8c ; '.'
000000000000b970         db  0x05 ; '.'
000000000000b971         db  0x44 ; 'D'
000000000000b972         db  0x0e ; '.'
000000000000b973         db  0x30 ; '0'
000000000000b974         db  0x86 ; '.'
000000000000b975         db  0x06 ; '.'
000000000000b976         db  0x41 ; 'A'
000000000000b977         db  0x0e ; '.'
000000000000b978         db  0x38 ; '8'
000000000000b979         db  0x83 ; '.'
000000000000b97a         db  0x07 ; '.'
000000000000b97b         db  0x56 ; 'V'
000000000000b97c         db  0x0e ; '.'
000000000000b97d         db  0x70 ; 'p'
000000000000b97e         db  0x03 ; '.'
000000000000b97f         db  0x3f ; '?'
000000000000b980         db  0x01 ; '.'
000000000000b981         db  0x0a ; '.'
000000000000b982         db  0x0e ; '.'
000000000000b983         db  0x78 ; 'x'
000000000000b984         db  0x50 ; 'P'
000000000000b985         db  0x0e ; '.'
000000000000b986         db  0x80 ; '.'
000000000000b987         db  0x01 ; '.'
000000000000b988         db  0x6a ; 'j'
000000000000b989         db  0x0b ; '.'
000000000000b98a         db  0x03 ; '.'
000000000000b98b         db  0x20 ; ' '
000000000000b98c         db  0x02 ; '.'
000000000000b98d         db  0x0a ; '.'
000000000000b98e         db  0x0e ; '.'
000000000000b98f         db  0x38 ; '8'
000000000000b990         db  0x41 ; 'A'
000000000000b991         db  0x0e ; '.'
000000000000b992         db  0x30 ; '0'
000000000000b993         db  0x41 ; 'A'
000000000000b994         db  0x0e ; '.'
000000000000b995         db  0x28 ; '('
000000000000b996         db  0x42 ; 'B'
000000000000b997         db  0x0e ; '.'
000000000000b998         db  0x20 ; ' '
000000000000b999         db  0x42 ; 'B'
000000000000b99a         db  0x0e ; '.'
000000000000b99b         db  0x18 ; '.'
000000000000b99c         db  0x42 ; 'B'
000000000000b99d         db  0x0e ; '.'
000000000000b99e         db  0x10 ; '.'
000000000000b99f         db  0x42 ; 'B'
000000000000b9a0         db  0x0e ; '.'
000000000000b9a1         db  0x08 ; '.'
000000000000b9a2         db  0x41 ; 'A'
000000000000b9a3         db  0x0b ; '.'
000000000000b9a4         db  0x00 ; '.'
000000000000b9a5         db  0x00 ; '.'
000000000000b9a6         db  0x00 ; '.'
000000000000b9a7         db  0x00 ; '.'
000000000000b9a8         dd         0x00000010                                  ; Length of the record
000000000000b9ac         dd         0x000000e4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b9b0         db         0x60, 0x73, 2 dup (0xff)                    ; begin 0x2d10
000000000000b9b4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2d18)
000000000000b9b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9b9         align      4
000000000000b9bc         dd         0x00000010                                  ; Length of the record
000000000000b9c0         dd         0x000000f8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b9c4         db         0x5c, 0x73, 2 dup (0xff)                    ; begin 0x2d20
000000000000b9c8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2d28)
000000000000b9cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9cd         align      16
000000000000b9d0         dd         0x0000002c                                  ; Length of the record
000000000000b9d4         dd         0x0000010c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000b9d8         db         0x58, 0x73, 2 dup (0xff)                    ; begin 0x2d30
000000000000b9dc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2dd4)
000000000000b9e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9e1         db  0x41 ; 'A'
000000000000b9e2         db  0x0e ; '.'
000000000000b9e3         db  0x10 ; '.'
000000000000b9e4         db  0x86 ; '.'
000000000000b9e5         db  0x02 ; '.'
000000000000b9e6         db  0x41 ; 'A'
000000000000b9e7         db  0x0e ; '.'
000000000000b9e8         db  0x18 ; '.'
000000000000b9e9         db  0x83 ; '.'
000000000000b9ea         db  0x03 ; '.'
000000000000b9eb         db  0x44 ; 'D'
000000000000b9ec         db  0x0e ; '.'
000000000000b9ed         db  0x20 ; ' '
000000000000b9ee         db  0x7a ; 'z'
000000000000b9ef         db  0x0a ; '.'
000000000000b9f0         db  0x0e ; '.'
000000000000b9f1         db  0x18 ; '.'
000000000000b9f2         db  0x41 ; 'A'
000000000000b9f3         db  0x0e ; '.'
000000000000b9f4         db  0x10 ; '.'
000000000000b9f5         db  0x41 ; 'A'
000000000000b9f6         db  0x0e ; '.'
000000000000b9f7         db  0x08 ; '.'
000000000000b9f8         db  0x41 ; 'A'
000000000000b9f9         db  0x0b ; '.'
000000000000b9fa         db  0x00 ; '.'
000000000000b9fb         db  0x00 ; '.'
000000000000b9fc         db  0x00 ; '.'
000000000000b9fd         db  0x00 ; '.'
000000000000b9fe         db  0x00 ; '.'
000000000000b9ff         db  0x00 ; '.'
000000000000ba00         dd         0x0000001c                                  ; Length of the record
000000000000ba04         dd         0x0000013c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ba08         db         0xd8, 0x73, 2 dup (0xff)                    ; begin 0x2de0
000000000000ba0c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2e7f)
000000000000ba10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba11         db  0x44 ; 'D'
000000000000ba12         db  0x0e ; '.'
000000000000ba13         db  0x10 ; '.'
000000000000ba14         db  0x83 ; '.'
000000000000ba15         db  0x02 ; '.'
000000000000ba16         db  0x02 ; '.'
000000000000ba17         db  0x78 ; 'x'
000000000000ba18         db  0x0a ; '.'
000000000000ba19         db  0x0e ; '.'
000000000000ba1a         db  0x08 ; '.'
000000000000ba1b         db  0x41 ; 'A'
000000000000ba1c         db  0x0b ; '.'
000000000000ba1d         db  0x00 ; '.'
000000000000ba1e         db  0x00 ; '.'
000000000000ba1f         db  0x00 ; '.'
000000000000ba20         dd         0x00000040                                  ; Length of the record
000000000000ba24         dd         0x0000015c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ba28         db         0x58, 0x74, 2 dup (0xff)                    ; begin 0x2e80
000000000000ba2c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2f67)
000000000000ba30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba31         db  0x41 ; 'A'
000000000000ba32         db  0x0e ; '.'
000000000000ba33         db  0x10 ; '.'
000000000000ba34         db  0x86 ; '.'
000000000000ba35         db  0x02 ; '.'
000000000000ba36         db  0x41 ; 'A'
000000000000ba37         db  0x0e ; '.'
000000000000ba38         db  0x18 ; '.'
000000000000ba39         db  0x83 ; '.'
000000000000ba3a         db  0x03 ; '.'
000000000000ba3b         db  0x49 ; 'I'
000000000000ba3c         db  0x0e ; '.'
000000000000ba3d         db  0x20 ; ' '
000000000000ba3e         db  0x6e ; 'n'
000000000000ba3f         db  0x0a ; '.'
000000000000ba40         db  0x0e ; '.'
000000000000ba41         db  0x18 ; '.'
000000000000ba42         db  0x41 ; 'A'
000000000000ba43         db  0x0e ; '.'
000000000000ba44         db  0x10 ; '.'
000000000000ba45         db  0x41 ; 'A'
000000000000ba46         db  0x0e ; '.'
000000000000ba47         db  0x08 ; '.'
000000000000ba48         db  0x45 ; 'E'
000000000000ba49         db  0x0b ; '.'
000000000000ba4a         db  0x02 ; '.'
000000000000ba4b         db  0x4a ; 'J'
000000000000ba4c         db  0x0a ; '.'
000000000000ba4d         db  0x0e ; '.'
000000000000ba4e         db  0x18 ; '.'
000000000000ba4f         db  0x41 ; 'A'
000000000000ba50         db  0x0e ; '.'
000000000000ba51         db  0x10 ; '.'
000000000000ba52         db  0x41 ; 'A'
000000000000ba53         db  0x0e ; '.'
000000000000ba54         db  0x08 ; '.'
000000000000ba55         db  0x44 ; 'D'
000000000000ba56         db  0x0b ; '.'
000000000000ba57         db  0x02 ; '.'
000000000000ba58         db  0x54 ; 'T'
000000000000ba59         db  0x0e ; '.'
000000000000ba5a         db  0x18 ; '.'
000000000000ba5b         db  0x41 ; 'A'
000000000000ba5c         db  0x0e ; '.'
000000000000ba5d         db  0x10 ; '.'
000000000000ba5e         db  0x41 ; 'A'
000000000000ba5f         db  0x0e ; '.'
000000000000ba60         db  0x08 ; '.'
000000000000ba61         db  0x00 ; '.'
000000000000ba62         db  0x00 ; '.'
000000000000ba63         db  0x00 ; '.'
000000000000ba64         dd         0x00000074                                  ; Length of the record
000000000000ba68         dd         0x000001a0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ba6c         db         0x04, 0x75, 2 dup (0xff)                    ; begin 0x2f70
000000000000ba70         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x41a4)
000000000000ba74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba75         db  0x42 ; 'B'
000000000000ba76         db  0x0e ; '.'
000000000000ba77         db  0x10 ; '.'
000000000000ba78         db  0x8f ; '.'
000000000000ba79         db  0x02 ; '.'
000000000000ba7a         db  0x42 ; 'B'
000000000000ba7b         db  0x0e ; '.'
000000000000ba7c         db  0x18 ; '.'
000000000000ba7d         db  0x8e ; '.'
000000000000ba7e         db  0x03 ; '.'
000000000000ba7f         db  0x45 ; 'E'
000000000000ba80         db  0x0e ; '.'
000000000000ba81         db  0x20 ; ' '
000000000000ba82         db  0x8d ; '.'
000000000000ba83         db  0x04 ; '.'
000000000000ba84         db  0x42 ; 'B'
000000000000ba85         db  0x0e ; '.'
000000000000ba86         db  0x28 ; '('
000000000000ba87         db  0x8c ; '.'
000000000000ba88         db  0x05 ; '.'
000000000000ba89         db  0x44 ; 'D'
000000000000ba8a         db  0x0e ; '.'
000000000000ba8b         db  0x30 ; '0'
000000000000ba8c         db  0x86 ; '.'
000000000000ba8d         db  0x06 ; '.'
000000000000ba8e         db  0x41 ; 'A'
000000000000ba8f         db  0x0e ; '.'
000000000000ba90         db  0x38 ; '8'
000000000000ba91         db  0x83 ; '.'
000000000000ba92         db  0x07 ; '.'
000000000000ba93         db  0x53 ; 'S'
000000000000ba94         db  0x0e ; '.'
000000000000ba95         db  0xf0 ; '.'
000000000000ba96         db  0x01 ; '.'
000000000000ba97         db  0x03 ; '.'
000000000000ba98         db  0x81 ; '.'
000000000000ba99         db  0x0b ; '.'
000000000000ba9a         db  0x0e ; '.'
000000000000ba9b         db  0xf8 ; '.'
000000000000ba9c         db  0x01 ; '.'
000000000000ba9d         db  0x4a ; 'J'
000000000000ba9e         db  0x0e ; '.'
000000000000ba9f         db  0x80 ; '.'
000000000000baa0         db  0x02 ; '.'
000000000000baa1         db  0x44 ; 'D'
000000000000baa2         db  0x0e ; '.'
000000000000baa3         db  0x88 ; '.'
000000000000baa4         db  0x02 ; '.'
000000000000baa5         db  0x45 ; 'E'
000000000000baa6         db  0x0e ; '.'
000000000000baa7         db  0x90 ; '.'
000000000000baa8         db  0x02 ; '.'
000000000000baa9         db  0x5f ; '_'
000000000000baaa         db  0x0e ; '.'
000000000000baab         db  0xf0 ; '.'
000000000000baac         db  0x01 ; '.'
000000000000baad         db  0x64 ; 'd'
000000000000baae         db  0x0a ; '.'
000000000000baaf         db  0x0e ; '.'
000000000000bab0         db  0x38 ; '8'
000000000000bab1         db  0x41 ; 'A'
000000000000bab2         db  0x0e ; '.'
000000000000bab3         db  0x30 ; '0'
000000000000bab4         db  0x41 ; 'A'
000000000000bab5         db  0x0e ; '.'
000000000000bab6         db  0x28 ; '('
000000000000bab7         db  0x42 ; 'B'
000000000000bab8         db  0x0e ; '.'
000000000000bab9         db  0x20 ; ' '
000000000000baba         db  0x42 ; 'B'
000000000000babb         db  0x0e ; '.'
000000000000babc         db  0x18 ; '.'
000000000000babd         db  0x42 ; 'B'
000000000000babe         db  0x0e ; '.'
000000000000babf         db  0x10 ; '.'
000000000000bac0         db  0x42 ; 'B'
000000000000bac1         db  0x0e ; '.'
000000000000bac2         db  0x08 ; '.'
000000000000bac3         db  0x44 ; 'D'
000000000000bac4         db  0x0b ; '.'
000000000000bac5         db  0x03 ; '.'
000000000000bac6         db  0x99 ; '.'
000000000000bac7         db  0x05 ; '.'
000000000000bac8         db  0x0e ; '.'
000000000000bac9         db  0xf8 ; '.'
000000000000baca         db  0x01 ; '.'
000000000000bacb         db  0x4d ; 'M'
000000000000bacc         db  0x0e ; '.'
000000000000bacd         db  0x80 ; '.'
000000000000bace         db  0x02 ; '.'
000000000000bacf         db  0x44 ; 'D'
000000000000bad0         db  0x0e ; '.'
000000000000bad1         db  0x88 ; '.'
000000000000bad2         db  0x02 ; '.'
000000000000bad3         db  0x47 ; 'G'
000000000000bad4         db  0x0e ; '.'
000000000000bad5         db  0x90 ; '.'
000000000000bad6         db  0x02 ; '.'
000000000000bad7         db  0x5b ; '['
000000000000bad8         db  0x0e ; '.'
000000000000bad9         db  0xf0 ; '.'
000000000000bada         db  0x01 ; '.'
000000000000badb         db  0x00 ; '.'
000000000000badc         dd         0x00000068                                  ; Length of the record
000000000000bae0         dd         0x00000218                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bae4         db         0xcc, 0x86, 2 dup (0xff)                    ; begin 0x41b0
000000000000bae8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x435b)
000000000000baec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000baed         db  0x42 ; 'B'
000000000000baee         db  0x0e ; '.'
000000000000baef         db  0x10 ; '.'
000000000000baf0         db  0x8f ; '.'
000000000000baf1         db  0x02 ; '.'
000000000000baf2         db  0x42 ; 'B'
000000000000baf3         db  0x0e ; '.'
000000000000baf4         db  0x18 ; '.'
000000000000baf5         db  0x8e ; '.'
000000000000baf6         db  0x03 ; '.'
000000000000baf7         db  0x45 ; 'E'
000000000000baf8         db  0x0e ; '.'
000000000000baf9         db  0x20 ; ' '
000000000000bafa         db  0x8d ; '.'
000000000000bafb         db  0x04 ; '.'
000000000000bafc         db  0x42 ; 'B'
000000000000bafd         db  0x0e ; '.'
000000000000bafe         db  0x28 ; '('
000000000000baff         db  0x8c ; '.'
000000000000bb00         db  0x05 ; '.'
000000000000bb01         db  0x44 ; 'D'
000000000000bb02         db  0x0e ; '.'
000000000000bb03         db  0x30 ; '0'
000000000000bb04         db  0x86 ; '.'
000000000000bb05         db  0x06 ; '.'
000000000000bb06         db  0x41 ; 'A'
000000000000bb07         db  0x0e ; '.'
000000000000bb08         db  0x38 ; '8'
000000000000bb09         db  0x83 ; '.'
000000000000bb0a         db  0x07 ; '.'
000000000000bb0b         db  0x47 ; 'G'
000000000000bb0c         db  0x0e ; '.'
000000000000bb0d         db  0x60 ; '`'
000000000000bb0e         db  0x02 ; '.'
000000000000bb0f         db  0x99 ; '.'
000000000000bb10         db  0x0e ; '.'
000000000000bb11         db  0x68 ; 'h'
000000000000bb12         db  0x5f ; '_'
000000000000bb13         db  0x0e ; '.'
000000000000bb14         db  0x70 ; 'p'
000000000000bb15         db  0x46 ; 'F'
000000000000bb16         db  0x0e ; '.'
000000000000bb17         db  0x78 ; 'x'
000000000000bb18         db  0x42 ; 'B'
000000000000bb19         db  0x0e ; '.'
000000000000bb1a         db  0x80 ; '.'
000000000000bb1b         db  0x01 ; '.'
000000000000bb1c         db  0x59 ; 'Y'
000000000000bb1d         db  0x0e ; '.'
000000000000bb1e         db  0x60 ; '`'
000000000000bb1f         db  0x02 ; '.'
000000000000bb20         db  0x40 ; '@'
000000000000bb21         db  0x0e ; '.'
000000000000bb22         db  0x68 ; 'h'
000000000000bb23         db  0x4b ; 'K'
000000000000bb24         db  0x0e ; '.'
000000000000bb25         db  0x70 ; 'p'
000000000000bb26         db  0x43 ; 'C'
000000000000bb27         db  0x0e ; '.'
000000000000bb28         db  0x78 ; 'x'
000000000000bb29         db  0x45 ; 'E'
000000000000bb2a         db  0x0e ; '.'
000000000000bb2b         db  0x80 ; '.'
000000000000bb2c         db  0x01 ; '.'
000000000000bb2d         db  0x5e ; '^'
000000000000bb2e         db  0x0e ; '.'
000000000000bb2f         db  0x60 ; '`'
000000000000bb30         db  0x4c ; 'L'
000000000000bb31         db  0x0a ; '.'
000000000000bb32         db  0x0e ; '.'
000000000000bb33         db  0x38 ; '8'
000000000000bb34         db  0x44 ; 'D'
000000000000bb35         db  0x0e ; '.'
000000000000bb36         db  0x30 ; '0'
000000000000bb37         db  0x41 ; 'A'
000000000000bb38         db  0x0e ; '.'
000000000000bb39         db  0x28 ; '('
000000000000bb3a         db  0x42 ; 'B'
000000000000bb3b         db  0x0e ; '.'
000000000000bb3c         db  0x20 ; ' '
000000000000bb3d         db  0x42 ; 'B'
000000000000bb3e         db  0x0e ; '.'
000000000000bb3f         db  0x18 ; '.'
000000000000bb40         db  0x42 ; 'B'
000000000000bb41         db  0x0e ; '.'
000000000000bb42         db  0x10 ; '.'
000000000000bb43         db  0x42 ; 'B'
000000000000bb44         db  0x0e ; '.'
000000000000bb45         db  0x08 ; '.'
000000000000bb46         db  0x46 ; 'F'
000000000000bb47         db  0x0b ; '.'
000000000000bb48         dd         0x00000028                                  ; Length of the record
000000000000bb4c         dd         0x00000284                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bb50         db         0x10, 0x88, 2 dup (0xff)                    ; begin 0x4360
000000000000bb54         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4396)
000000000000bb58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb59         db  0x42 ; 'B'
000000000000bb5a         db  0x0e ; '.'
000000000000bb5b         db  0x10 ; '.'
000000000000bb5c         db  0x8c ; '.'
000000000000bb5d         db  0x02 ; '.'
000000000000bb5e         db  0x41 ; 'A'
000000000000bb5f         db  0x0e ; '.'
000000000000bb60         db  0x18 ; '.'
000000000000bb61         db  0x86 ; '.'
000000000000bb62         db  0x03 ; '.'
000000000000bb63         db  0x41 ; 'A'
000000000000bb64         db  0x0e ; '.'
000000000000bb65         db  0x20 ; ' '
000000000000bb66         db  0x83 ; '.'
000000000000bb67         db  0x04 ; '.'
000000000000bb68         db  0x6e ; 'n'
000000000000bb69         db  0x0e ; '.'
000000000000bb6a         db  0x18 ; '.'
000000000000bb6b         db  0x41 ; 'A'
000000000000bb6c         db  0x0e ; '.'
000000000000bb6d         db  0x10 ; '.'
000000000000bb6e         db  0x42 ; 'B'
000000000000bb6f         db  0x0e ; '.'
000000000000bb70         db  0x08 ; '.'
000000000000bb71         db  0x00 ; '.'
000000000000bb72         db  0x00 ; '.'
000000000000bb73         db  0x00 ; '.'
000000000000bb74         dd         0x00000010                                  ; Length of the record
000000000000bb78         dd         0x000002b0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bb7c         db         0x24, 0x88, 2 dup (0xff)                    ; begin 0x43a0
000000000000bb80         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43b1)
000000000000bb84         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb85         align      8
000000000000bb88         dd         0x00000010                                  ; Length of the record
000000000000bb8c         dd         0x000002c4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bb90         db         0x30, 0x88, 2 dup (0xff)                    ; begin 0x43c0
000000000000bb94         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43d1)
000000000000bb98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb99         align      4
000000000000bb9c         dd         0x00000010                                  ; Length of the record
000000000000bba0         dd         0x000002d8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bba4         db         0x3c, 0x88, 2 dup (0xff)                    ; begin 0x43e0
000000000000bba8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4415)
000000000000bbac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbad         align      16
000000000000bbb0         dd         0x00000010                                  ; Length of the record
000000000000bbb4         dd         0x000002ec                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bbb8         db         0x68, 0x88, 2 dup (0xff)                    ; begin 0x4420
000000000000bbbc         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4435)
000000000000bbc0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbc1         align      4
000000000000bbc4         dd         0x00000010                                  ; Length of the record
000000000000bbc8         dd         0x00000300                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bbcc         db         0x74, 0x88, 2 dup (0xff)                    ; begin 0x4440
000000000000bbd0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4470)
000000000000bbd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbd5         db  0x6b ; 'k'
000000000000bbd6         db  0x0e ; '.'
000000000000bbd7         db  0x10 ; '.'
000000000000bbd8         dd         0x00000050                                  ; Length of the record
000000000000bbdc         dd         0x00000314                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bbe0         db         0x90, 0x88, 2 dup (0xff)                    ; begin 0x4470
000000000000bbe4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x44e4)
000000000000bbe8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbe9         db  0x42 ; 'B'
000000000000bbea         db  0x0e ; '.'
000000000000bbeb         db  0x10 ; '.'
000000000000bbec         db  0x8f ; '.'
000000000000bbed         db  0x02 ; '.'
000000000000bbee         db  0x42 ; 'B'
000000000000bbef         db  0x0e ; '.'
000000000000bbf0         db  0x18 ; '.'
000000000000bbf1         db  0x8e ; '.'
000000000000bbf2         db  0x03 ; '.'
000000000000bbf3         db  0x49 ; 'I'
000000000000bbf4         db  0x0e ; '.'
000000000000bbf5         db  0x20 ; ' '
000000000000bbf6         db  0x8d ; '.'
000000000000bbf7         db  0x04 ; '.'
000000000000bbf8         db  0x42 ; 'B'
000000000000bbf9         db  0x0e ; '.'
000000000000bbfa         db  0x28 ; '('
000000000000bbfb         db  0x8c ; '.'
000000000000bbfc         db  0x05 ; '.'
000000000000bbfd         db  0x44 ; 'D'
000000000000bbfe         db  0x0e ; '.'
000000000000bbff         db  0x30 ; '0'
000000000000bc00         db  0x86 ; '.'
000000000000bc01         db  0x06 ; '.'
000000000000bc02         db  0x41 ; 'A'
000000000000bc03         db  0x0e ; '.'
000000000000bc04         db  0x38 ; '8'
000000000000bc05         db  0x83 ; '.'
000000000000bc06         db  0x07 ; '.'
000000000000bc07         db  0x4d ; 'M'
000000000000bc08         db  0x0e ; '.'
000000000000bc09         db  0x50 ; 'P'
000000000000bc0a         db  0x5f ; '_'
000000000000bc0b         db  0x0e ; '.'
000000000000bc0c         db  0x58 ; 'X'
000000000000bc0d         db  0x47 ; 'G'
000000000000bc0e         db  0x0e ; '.'
000000000000bc0f         db  0x60 ; '`'
000000000000bc10         db  0x46 ; 'F'
000000000000bc11         db  0x0e ; '.'
000000000000bc12         db  0x68 ; 'h'
000000000000bc13         db  0x44 ; 'D'
000000000000bc14         db  0x0e ; '.'
000000000000bc15         db  0x70 ; 'p'
000000000000bc16         db  0x58 ; 'X'
000000000000bc17         db  0x0e ; '.'
000000000000bc18         db  0x38 ; '8'
000000000000bc19         db  0x41 ; 'A'
000000000000bc1a         db  0x0e ; '.'
000000000000bc1b         db  0x30 ; '0'
000000000000bc1c         db  0x41 ; 'A'
000000000000bc1d         db  0x0e ; '.'
000000000000bc1e         db  0x28 ; '('
000000000000bc1f         db  0x42 ; 'B'
000000000000bc20         db  0x0e ; '.'
000000000000bc21         db  0x20 ; ' '
000000000000bc22         db  0x42 ; 'B'
000000000000bc23         db  0x0e ; '.'
000000000000bc24         db  0x18 ; '.'
000000000000bc25         db  0x42 ; 'B'
000000000000bc26         db  0x0e ; '.'
000000000000bc27         db  0x10 ; '.'
000000000000bc28         db  0x42 ; 'B'
000000000000bc29         db  0x0e ; '.'
000000000000bc2a         db  0x08 ; '.'
000000000000bc2b         db  0x00 ; '.'
000000000000bc2c         dd         0x00000068                                  ; Length of the record
000000000000bc30         dd         0x00000368                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bc34         db         0xbc, 0x88, 2 dup (0xff)                    ; begin 0x44f0
000000000000bc38         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x45d3)
000000000000bc3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc3d         db  0x42 ; 'B'
000000000000bc3e         db  0x0e ; '.'
000000000000bc3f         db  0x10 ; '.'
000000000000bc40         db  0x8f ; '.'
000000000000bc41         db  0x02 ; '.'
000000000000bc42         db  0x42 ; 'B'
000000000000bc43         db  0x0e ; '.'
000000000000bc44         db  0x18 ; '.'
000000000000bc45         db  0x8e ; '.'
000000000000bc46         db  0x03 ; '.'
000000000000bc47         db  0x49 ; 'I'
000000000000bc48         db  0x0e ; '.'
000000000000bc49         db  0x20 ; ' '
000000000000bc4a         db  0x8d ; '.'
000000000000bc4b         db  0x04 ; '.'
000000000000bc4c         db  0x42 ; 'B'
000000000000bc4d         db  0x0e ; '.'
000000000000bc4e         db  0x28 ; '('
000000000000bc4f         db  0x8c ; '.'
000000000000bc50         db  0x05 ; '.'
000000000000bc51         db  0x44 ; 'D'
000000000000bc52         db  0x0e ; '.'
000000000000bc53         db  0x30 ; '0'
000000000000bc54         db  0x86 ; '.'
000000000000bc55         db  0x06 ; '.'
000000000000bc56         db  0x41 ; 'A'
000000000000bc57         db  0x0e ; '.'
000000000000bc58         db  0x38 ; '8'
000000000000bc59         db  0x83 ; '.'
000000000000bc5a         db  0x07 ; '.'
000000000000bc5b         db  0x4d ; 'M'
000000000000bc5c         db  0x0e ; '.'
000000000000bc5d         db  0x70 ; 'p'
000000000000bc5e         db  0x65 ; 'e'
000000000000bc5f         db  0x0e ; '.'
000000000000bc60         db  0x78 ; 'x'
000000000000bc61         db  0x4d ; 'M'
000000000000bc62         db  0x0e ; '.'
000000000000bc63         db  0x80 ; '.'
000000000000bc64         db  0x01 ; '.'
000000000000bc65         db  0x46 ; 'F'
000000000000bc66         db  0x0e ; '.'
000000000000bc67         db  0x88 ; '.'
000000000000bc68         db  0x01 ; '.'
000000000000bc69         db  0x42 ; 'B'
000000000000bc6a         db  0x0e ; '.'
000000000000bc6b         db  0x90 ; '.'
000000000000bc6c         db  0x01 ; '.'
000000000000bc6d         db  0x5e ; '^'
000000000000bc6e         db  0x0e ; '.'
000000000000bc6f         db  0x70 ; 'p'
000000000000bc70         db  0x56 ; 'V'
000000000000bc71         db  0x0e ; '.'
000000000000bc72         db  0x78 ; 'x'
000000000000bc73         db  0x43 ; 'C'
000000000000bc74         db  0x0e ; '.'
000000000000bc75         db  0x80 ; '.'
000000000000bc76         db  0x01 ; '.'
000000000000bc77         db  0x43 ; 'C'
000000000000bc78         db  0x0e ; '.'
000000000000bc79         db  0x88 ; '.'
000000000000bc7a         db  0x01 ; '.'
000000000000bc7b         db  0x56 ; 'V'
000000000000bc7c         db  0x0e ; '.'
000000000000bc7d         db  0x90 ; '.'
000000000000bc7e         db  0x01 ; '.'
000000000000bc7f         db  0x52 ; 'R'
000000000000bc80         db  0x0e ; '.'
000000000000bc81         db  0x70 ; 'p'
000000000000bc82         db  0x5b ; '['
000000000000bc83         db  0x0e ; '.'
000000000000bc84         db  0x38 ; '8'
000000000000bc85         db  0x41 ; 'A'
000000000000bc86         db  0x0e ; '.'
000000000000bc87         db  0x30 ; '0'
000000000000bc88         db  0x41 ; 'A'
000000000000bc89         db  0x0e ; '.'
000000000000bc8a         db  0x28 ; '('
000000000000bc8b         db  0x42 ; 'B'
000000000000bc8c         db  0x0e ; '.'
000000000000bc8d         db  0x20 ; ' '
000000000000bc8e         db  0x42 ; 'B'
000000000000bc8f         db  0x0e ; '.'
000000000000bc90         db  0x18 ; '.'
000000000000bc91         db  0x42 ; 'B'
000000000000bc92         db  0x0e ; '.'
000000000000bc93         db  0x10 ; '.'
000000000000bc94         db  0x42 ; 'B'
000000000000bc95         db  0x0e ; '.'
000000000000bc96         db  0x08 ; '.'
000000000000bc97         db  0x00 ; '.'
000000000000bc98         dd         0x00000010                                  ; Length of the record
000000000000bc9c         dd         0x000003d4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bca0         db         0x40, 0x89, 2 dup (0xff)                    ; begin 0x45e0
000000000000bca4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x45ea)
000000000000bca8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bca9         align      4
000000000000bcac         dd         0x00000028                                  ; Length of the record
000000000000bcb0         dd         0x000003e8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bcb4         db         0x3c, 0x89, 2 dup (0xff)                    ; begin 0x45f0
000000000000bcb8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4683)
000000000000bcbc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bcbd         db  0x48 ; 'H'
000000000000bcbe         db  0x0e ; '.'
000000000000bcbf         db  0x10 ; '.'
000000000000bcc0         db  0x8c ; '.'
000000000000bcc1         db  0x02 ; '.'
000000000000bcc2         db  0x48 ; 'H'
000000000000bcc3         db  0x0e ; '.'
000000000000bcc4         db  0x18 ; '.'
000000000000bcc5         db  0x86 ; '.'
000000000000bcc6         db  0x03 ; '.'
000000000000bcc7         db  0x41 ; 'A'
000000000000bcc8         db  0x0e ; '.'
000000000000bcc9         db  0x20 ; ' '
000000000000bcca         db  0x83 ; '.'
000000000000bccb         db  0x04 ; '.'
000000000000bccc         db  0x02 ; '.'
000000000000bccd         db  0x74 ; 't'
000000000000bcce         db  0x0e ; '.'
000000000000bccf         db  0x18 ; '.'
000000000000bcd0         db  0x4b ; 'K'
000000000000bcd1         db  0x0e ; '.'
000000000000bcd2         db  0x10 ; '.'
000000000000bcd3         db  0x42 ; 'B'
000000000000bcd4         db  0x0e ; '.'
000000000000bcd5         db  0x08 ; '.'
000000000000bcd6         db  0x00 ; '.'
000000000000bcd7         db  0x00 ; '.'
000000000000bcd8         dd         0x00000010                                  ; Length of the record
000000000000bcdc         dd         0x00000414                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bce0         db         0xb0, 0x89, 2 dup (0xff)                    ; begin 0x4690
000000000000bce4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x46a3)
000000000000bce8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bce9         align      4
000000000000bcec         dd         0x00000010                                  ; Length of the record
000000000000bcf0         dd         0x00000428                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bcf4         db         0xbc, 0x89, 2 dup (0xff)                    ; begin 0x46b0
000000000000bcf8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x46bc)
000000000000bcfc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bcfd         align      256
000000000000bd00         dd         0x00000010                                  ; Length of the record
000000000000bd04         dd         0x0000043c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd08         db         0xb8, 0x89, 2 dup (0xff)                    ; begin 0x46c0
000000000000bd0c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x46d8)
000000000000bd10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd11         align      4
000000000000bd14         dd         0x00000010                                  ; Length of the record
000000000000bd18         dd         0x00000450                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd1c         db         0xc4, 0x89, 2 dup (0xff)                    ; begin 0x46e0
000000000000bd20         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x46f4)
000000000000bd24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd25         align      8
000000000000bd28         dd         0x00000018                                  ; Length of the record
000000000000bd2c         dd         0x00000464                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd30         db         0xd0, 0x89, 2 dup (0xff)                    ; begin 0x4700
000000000000bd34         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x478e)
000000000000bd38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd39         db  0x44 ; 'D'
000000000000bd3a         db  0x0e ; '.'
000000000000bd3b         db  0x50 ; 'P'
000000000000bd3c         db  0x02 ; '.'
000000000000bd3d         db  0x7f ; '.'
000000000000bd3e         db  0x0a ; '.'
000000000000bd3f         db  0x0e ; '.'
000000000000bd40         db  0x08 ; '.'
000000000000bd41         db  0x41 ; 'A'
000000000000bd42         db  0x0b ; '.'
000000000000bd43         db  0x00 ; '.'
000000000000bd44         dd         0x00000018                                  ; Length of the record
000000000000bd48         dd         0x00000480                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd4c         db         0x44, 0x8a, 2 dup (0xff)                    ; begin 0x4790
000000000000bd50         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x481a)
000000000000bd54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd55         db  0x44 ; 'D'
000000000000bd56         db  0x0e ; '.'
000000000000bd57         db  0x50 ; 'P'
000000000000bd58         db  0x02 ; '.'
000000000000bd59         db  0x7b ; '{'
000000000000bd5a         db  0x0a ; '.'
000000000000bd5b         db  0x0e ; '.'
000000000000bd5c         db  0x08 ; '.'
000000000000bd5d         db  0x41 ; 'A'
000000000000bd5e         db  0x0b ; '.'
000000000000bd5f         db  0x00 ; '.'
000000000000bd60         dd         0x00000010                                  ; Length of the record
000000000000bd64         dd         0x0000049c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd68         db         0xb8, 0x8a, 2 dup (0xff)                    ; begin 0x4820
000000000000bd6c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x482c)
000000000000bd70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd71         align      4
000000000000bd74         dd         0x00000010                                  ; Length of the record
000000000000bd78         dd         0x000004b0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd7c         db         0xb4, 0x8a, 2 dup (0xff)                    ; begin 0x4830
000000000000bd80         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x483f)
000000000000bd84         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd85         align      8
000000000000bd88         dd         0x00000018                                  ; Length of the record
000000000000bd8c         dd         0x000004c4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bd90         db         0xb0, 0x8a, 2 dup (0xff)                    ; begin 0x4840
000000000000bd94         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x48d8)
000000000000bd98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd99         db  0x44 ; 'D'
000000000000bd9a         db  0x0e ; '.'
000000000000bd9b         db  0x50 ; 'P'
000000000000bd9c         db  0x02 ; '.'
000000000000bd9d         db  0x8e ; '.'
000000000000bd9e         db  0x0a ; '.'
000000000000bd9f         db  0x0e ; '.'
000000000000bda0         db  0x08 ; '.'
000000000000bda1         db  0x41 ; 'A'
000000000000bda2         db  0x0b ; '.'
000000000000bda3         db  0x00 ; '.'
000000000000bda4         dd         0x00000010                                  ; Length of the record
000000000000bda8         dd         0x000004e0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bdac         db         0x34, 0x8b, 2 dup (0xff)                    ; begin 0x48e0
000000000000bdb0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x48f0)
000000000000bdb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdb5         align      8
000000000000bdb8         dd         0x00000010                                  ; Length of the record
000000000000bdbc         dd         0x000004f4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bdc0         db         0x30, 0x8b, 2 dup (0xff)                    ; begin 0x48f0
000000000000bdc4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4901)
000000000000bdc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdc9         align      4
000000000000bdcc         dd         0x00000010                                  ; Length of the record
000000000000bdd0         dd         0x00000508                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bdd4         db         0x3c, 0x8b, 2 dup (0xff)                    ; begin 0x4910
000000000000bdd8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x491a)
000000000000bddc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bddd         align      32
000000000000bde0         dd         0x00000018                                  ; Length of the record
000000000000bde4         dd         0x0000051c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bde8         db         0x38, 0x8b, 2 dup (0xff)                    ; begin 0x4920
000000000000bdec         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x49ae)
000000000000bdf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdf1         db  0x44 ; 'D'
000000000000bdf2         db  0x0e ; '.'
000000000000bdf3         db  0x50 ; 'P'
000000000000bdf4         db  0x02 ; '.'
000000000000bdf5         db  0x7f ; '.'
000000000000bdf6         db  0x0a ; '.'
000000000000bdf7         db  0x0e ; '.'
000000000000bdf8         db  0x08 ; '.'
000000000000bdf9         db  0x41 ; 'A'
000000000000bdfa         db  0x0b ; '.'
000000000000bdfb         db  0x00 ; '.'
000000000000bdfc         dd         0x00000018                                  ; Length of the record
000000000000be00         dd         0x00000538                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be04         db         0xac, 0x8b, 2 dup (0xff)                    ; begin 0x49b0
000000000000be08         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4a41)
000000000000be0c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be0d         db  0x44 ; 'D'
000000000000be0e         db  0x0e ; '.'
000000000000be0f         db  0x50 ; 'P'
000000000000be10         db  0x02 ; '.'
000000000000be11         db  0x82 ; '.'
000000000000be12         db  0x0a ; '.'
000000000000be13         db  0x0e ; '.'
000000000000be14         db  0x08 ; '.'
000000000000be15         db  0x41 ; 'A'
000000000000be16         db  0x0b ; '.'
000000000000be17         db  0x00 ; '.'
000000000000be18         dd         0x00000010                                  ; Length of the record
000000000000be1c         dd         0x00000554                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be20         db         0x30, 0x8c, 2 dup (0xff)                    ; begin 0x4a50
000000000000be24         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4a5c)
000000000000be28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be29         align      4
000000000000be2c         dd         0x00000010                                  ; Length of the record
000000000000be30         dd         0x00000568                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be34         db         0x2c, 0x8c, 2 dup (0xff)                    ; begin 0x4a60
000000000000be38         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4a77)
000000000000be3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be3d         align      64
000000000000be40         dd         0x00000010                                  ; Length of the record
000000000000be44         dd         0x0000057c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be48         db         0x38, 0x8c, 2 dup (0xff)                    ; begin 0x4a80
000000000000be4c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4a93)
000000000000be50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be51         align      4
000000000000be54         dd         0x00000010                                  ; Length of the record
000000000000be58         dd         0x00000590                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be5c         db         0x44, 0x8c, 2 dup (0xff)                    ; begin 0x4aa0
000000000000be60         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4aac)
000000000000be64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be65         align      8
000000000000be68         dd         0x00000010                                  ; Length of the record
000000000000be6c         dd         0x000005a4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be70         db         0x40, 0x8c, 2 dup (0xff)                    ; begin 0x4ab0
000000000000be74         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4ac4)
000000000000be78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be79         align      4
000000000000be7c         dd         0x00000010                                  ; Length of the record
000000000000be80         dd         0x000005b8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be84         db         0x4c, 0x8c, 2 dup (0xff)                    ; begin 0x4ad0
000000000000be88         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ae3)
000000000000be8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be8d         align      16
000000000000be90         dd         0x00000014                                  ; Length of the record
000000000000be94         dd         0x000005cc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000be98         db         0x58, 0x8c, 2 dup (0xff)                    ; begin 0x4af0
000000000000be9c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4b08)
000000000000bea0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bea1         align      8
000000000000bea8         dd         0x00000024                                  ; Length of the record
000000000000beac         dd         0x000005e4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000beb0         db         0x60, 0x8c, 2 dup (0xff)                    ; begin 0x4b10
000000000000beb4         db         0x71, 3 dup (0x00)                          ; length 0x71 (end at 0x4b81)
000000000000beb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000beb9         db  0x41 ; 'A'
000000000000beba         db  0x0e ; '.'
000000000000bebb         db  0x10 ; '.'
000000000000bebc         db  0x83 ; '.'
000000000000bebd         db  0x02 ; '.'
000000000000bebe         db  0x56 ; 'V'
000000000000bebf         db  0x0e ; '.'
000000000000bec0         db  0xb0 ; '.'
000000000000bec1         db  0x01 ; '.'
000000000000bec2         db  0x02 ; '.'
000000000000bec3         db  0x4c ; 'L'
000000000000bec4         db  0x0a ; '.'
000000000000bec5         db  0x0e ; '.'
000000000000bec6         db  0x10 ; '.'
000000000000bec7         db  0x41 ; 'A'
000000000000bec8         db  0x0e ; '.'
000000000000bec9         db  0x08 ; '.'
000000000000beca         db  0x44 ; 'D'
000000000000becb         db  0x0b ; '.'
000000000000becc         db  0x00 ; '.'
000000000000becd         db  0x00 ; '.'
000000000000bece         db  0x00 ; '.'
000000000000becf         db  0x00 ; '.'
000000000000bed0         dd         0x00000110                                  ; Length of the record
000000000000bed4         dd         0x0000060c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bed8         db         0xb8, 0x8c, 2 dup (0xff)                    ; begin 0x4b90
000000000000bedc         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4fa7)
000000000000bee0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bee1         db  0x42 ; 'B'
000000000000bee2         db  0x0e ; '.'
000000000000bee3         db  0x10 ; '.'
000000000000bee4         db  0x8f ; '.'
000000000000bee5         db  0x02 ; '.'
000000000000bee6         db  0x42 ; 'B'
000000000000bee7         db  0x0e ; '.'
000000000000bee8         db  0x18 ; '.'
000000000000bee9         db  0x8e ; '.'
000000000000beea         db  0x03 ; '.'
000000000000beeb         db  0x42 ; 'B'
000000000000beec         db  0x0e ; '.'
000000000000beed         db  0x20 ; ' '
000000000000beee         db  0x8d ; '.'
000000000000beef         db  0x04 ; '.'
000000000000bef0         db  0x42 ; 'B'
000000000000bef1         db  0x0e ; '.'
000000000000bef2         db  0x28 ; '('
000000000000bef3         db  0x8c ; '.'
000000000000bef4         db  0x05 ; '.'
000000000000bef5         db  0x44 ; 'D'
000000000000bef6         db  0x0e ; '.'
000000000000bef7         db  0x30 ; '0'
000000000000bef8         db  0x86 ; '.'
000000000000bef9         db  0x06 ; '.'
000000000000befa         db  0x41 ; 'A'
000000000000befb         db  0x0e ; '.'
000000000000befc         db  0x38 ; '8'
000000000000befd         db  0x83 ; '.'
000000000000befe         db  0x07 ; '.'
000000000000beff         db  0x4a ; 'J'
000000000000bf00         db  0x0e ; '.'
000000000000bf01         db  0x60 ; '`'
000000000000bf02         db  0x02 ; '.'
000000000000bf03         db  0xdd ; '.'
000000000000bf04         db  0x0e ; '.'
000000000000bf05         db  0x68 ; 'h'
000000000000bf06         db  0x57 ; 'W'
000000000000bf07         db  0x0e ; '.'
000000000000bf08         db  0x70 ; 'p'
000000000000bf09         db  0x42 ; 'B'
000000000000bf0a         db  0x0e ; '.'
000000000000bf0b         db  0x78 ; 'x'
000000000000bf0c         db  0x42 ; 'B'
000000000000bf0d         db  0x0e ; '.'
000000000000bf0e         db  0x80 ; '.'
000000000000bf0f         db  0x01 ; '.'
000000000000bf10         db  0x42 ; 'B'
000000000000bf11         db  0x0e ; '.'
000000000000bf12         db  0x88 ; '.'
000000000000bf13         db  0x01 ; '.'
000000000000bf14         db  0x42 ; 'B'
000000000000bf15         db  0x0e ; '.'
000000000000bf16         db  0x90 ; '.'
000000000000bf17         db  0x01 ; '.'
000000000000bf18         db  0x53 ; 'S'
000000000000bf19         db  0x0e ; '.'
000000000000bf1a         db  0x60 ; '`'
000000000000bf1b         db  0x44 ; 'D'
000000000000bf1c         db  0x0a ; '.'
000000000000bf1d         db  0x0e ; '.'
000000000000bf1e         db  0x38 ; '8'
000000000000bf1f         db  0x41 ; 'A'
000000000000bf20         db  0x0e ; '.'
000000000000bf21         db  0x30 ; '0'
000000000000bf22         db  0x41 ; 'A'
000000000000bf23         db  0x0e ; '.'
000000000000bf24         db  0x28 ; '('
000000000000bf25         db  0x42 ; 'B'
000000000000bf26         db  0x0e ; '.'
000000000000bf27         db  0x20 ; ' '
000000000000bf28         db  0x42 ; 'B'
000000000000bf29         db  0x0e ; '.'
000000000000bf2a         db  0x18 ; '.'
000000000000bf2b         db  0x42 ; 'B'
000000000000bf2c         db  0x0e ; '.'
000000000000bf2d         db  0x10 ; '.'
000000000000bf2e         db  0x42 ; 'B'
000000000000bf2f         db  0x0e ; '.'
000000000000bf30         db  0x08 ; '.'
000000000000bf31         db  0x44 ; 'D'
000000000000bf32         db  0x0b ; '.'
000000000000bf33         db  0x02 ; '.'
000000000000bf34         db  0x78 ; 'x'
000000000000bf35         db  0x0a ; '.'
000000000000bf36         db  0x0e ; '.'
000000000000bf37         db  0x68 ; 'h'
000000000000bf38         db  0x48 ; 'H'
000000000000bf39         db  0x0b ; '.'
000000000000bf3a         db  0x5a ; 'Z'
000000000000bf3b         db  0x0a ; '.'
000000000000bf3c         db  0x0e ; '.'
000000000000bf3d         db  0x38 ; '8'
000000000000bf3e         db  0x47 ; 'G'
000000000000bf3f         db  0x0e ; '.'
000000000000bf40         db  0x30 ; '0'
000000000000bf41         db  0x41 ; 'A'
000000000000bf42         db  0x0e ; '.'
000000000000bf43         db  0x28 ; '('
000000000000bf44         db  0x42 ; 'B'
000000000000bf45         db  0x0e ; '.'
000000000000bf46         db  0x20 ; ' '
000000000000bf47         db  0x42 ; 'B'
000000000000bf48         db  0x0e ; '.'
000000000000bf49         db  0x18 ; '.'
000000000000bf4a         db  0x42 ; 'B'
000000000000bf4b         db  0x0e ; '.'
000000000000bf4c         db  0x10 ; '.'
000000000000bf4d         db  0x42 ; 'B'
000000000000bf4e         db  0x0e ; '.'
000000000000bf4f         db  0x08 ; '.'
000000000000bf50         db  0x56 ; 'V'
000000000000bf51         db  0x0b ; '.'
000000000000bf52         db  0x5e ; '^'
000000000000bf53         db  0x0a ; '.'
000000000000bf54         db  0x0e ; '.'
000000000000bf55         db  0x38 ; '8'
000000000000bf56         db  0x52 ; 'R'
000000000000bf57         db  0x0e ; '.'
000000000000bf58         db  0x30 ; '0'
000000000000bf59         db  0x41 ; 'A'
000000000000bf5a         db  0x0e ; '.'
000000000000bf5b         db  0x28 ; '('
000000000000bf5c         db  0x42 ; 'B'
000000000000bf5d         db  0x0e ; '.'
000000000000bf5e         db  0x20 ; ' '
000000000000bf5f         db  0x42 ; 'B'
000000000000bf60         db  0x0e ; '.'
000000000000bf61         db  0x18 ; '.'
000000000000bf62         db  0x42 ; 'B'
000000000000bf63         db  0x0e ; '.'
000000000000bf64         db  0x10 ; '.'
000000000000bf65         db  0x42 ; 'B'
000000000000bf66         db  0x0e ; '.'
000000000000bf67         db  0x08 ; '.'
000000000000bf68         db  0x4f ; 'O'
000000000000bf69         db  0x0b ; '.'
000000000000bf6a         db  0x62 ; 'b'
000000000000bf6b         db  0x0a ; '.'
000000000000bf6c         db  0x0e ; '.'
000000000000bf6d         db  0x38 ; '8'
000000000000bf6e         db  0x50 ; 'P'
000000000000bf6f         db  0x0e ; '.'
000000000000bf70         db  0x30 ; '0'
000000000000bf71         db  0x41 ; 'A'
000000000000bf72         db  0x0e ; '.'
000000000000bf73         db  0x28 ; '('
000000000000bf74         db  0x42 ; 'B'
000000000000bf75         db  0x0e ; '.'
000000000000bf76         db  0x20 ; ' '
000000000000bf77         db  0x42 ; 'B'
000000000000bf78         db  0x0e ; '.'
000000000000bf79         db  0x18 ; '.'
000000000000bf7a         db  0x42 ; 'B'
000000000000bf7b         db  0x0e ; '.'
000000000000bf7c         db  0x10 ; '.'
000000000000bf7d         db  0x42 ; 'B'
000000000000bf7e         db  0x0e ; '.'
000000000000bf7f         db  0x08 ; '.'
000000000000bf80         db  0x55 ; 'U'
000000000000bf81         db  0x0b ; '.'
000000000000bf82         db  0x66 ; 'f'
000000000000bf83         db  0x0e ; '.'
000000000000bf84         db  0x68 ; 'h'
000000000000bf85         db  0x42 ; 'B'
000000000000bf86         db  0x0e ; '.'
000000000000bf87         db  0x70 ; 'p'
000000000000bf88         db  0x5c ; '\'
000000000000bf89         db  0x0e ; '.'
000000000000bf8a         db  0x68 ; 'h'
000000000000bf8b         db  0x41 ; 'A'
000000000000bf8c         db  0x0e ; '.'
000000000000bf8d         db  0x60 ; '`'
000000000000bf8e         db  0x44 ; 'D'
000000000000bf8f         db  0x0a ; '.'
000000000000bf90         db  0x0e ; '.'
000000000000bf91         db  0x38 ; '8'
000000000000bf92         db  0x41 ; 'A'
000000000000bf93         db  0x0e ; '.'
000000000000bf94         db  0x30 ; '0'
000000000000bf95         db  0x41 ; 'A'
000000000000bf96         db  0x0e ; '.'
000000000000bf97         db  0x28 ; '('
000000000000bf98         db  0x42 ; 'B'
000000000000bf99         db  0x0e ; '.'
000000000000bf9a         db  0x20 ; ' '
000000000000bf9b         db  0x42 ; 'B'
000000000000bf9c         db  0x0e ; '.'
000000000000bf9d         db  0x18 ; '.'
000000000000bf9e         db  0x42 ; 'B'
000000000000bf9f         db  0x0e ; '.'
000000000000bfa0         db  0x10 ; '.'
000000000000bfa1         db  0x42 ; 'B'
000000000000bfa2         db  0x0e ; '.'
000000000000bfa3         db  0x08 ; '.'
000000000000bfa4         db  0x45 ; 'E'
000000000000bfa5         db  0x0b ; '.'
000000000000bfa6         db  0x68 ; 'h'
000000000000bfa7         db  0x0a ; '.'
000000000000bfa8         db  0x0e ; '.'
000000000000bfa9         db  0x68 ; 'h'
000000000000bfaa         db  0x48 ; 'H'
000000000000bfab         db  0x0b ; '.'
000000000000bfac         db  0x72 ; 'r'
000000000000bfad         db  0x0e ; '.'
000000000000bfae         db  0x68 ; 'h'
000000000000bfaf         db  0x45 ; 'E'
000000000000bfb0         db  0x0e ; '.'
000000000000bfb1         db  0x70 ; 'p'
000000000000bfb2         db  0x42 ; 'B'
000000000000bfb3         db  0x0e ; '.'
000000000000bfb4         db  0x78 ; 'x'
000000000000bfb5         db  0x42 ; 'B'
000000000000bfb6         db  0x0e ; '.'
000000000000bfb7         db  0x80 ; '.'
000000000000bfb8         db  0x01 ; '.'
000000000000bfb9         db  0x5e ; '^'
000000000000bfba         db  0x0e ; '.'
000000000000bfbb         db  0x60 ; '`'
000000000000bfbc         db  0x44 ; 'D'
000000000000bfbd         db  0x0a ; '.'
000000000000bfbe         db  0x0e ; '.'
000000000000bfbf         db  0x38 ; '8'
000000000000bfc0         db  0x41 ; 'A'
000000000000bfc1         db  0x0e ; '.'
000000000000bfc2         db  0x30 ; '0'
000000000000bfc3         db  0x41 ; 'A'
000000000000bfc4         db  0x0e ; '.'
000000000000bfc5         db  0x28 ; '('
000000000000bfc6         db  0x42 ; 'B'
000000000000bfc7         db  0x0e ; '.'
000000000000bfc8         db  0x20 ; ' '
000000000000bfc9         db  0x42 ; 'B'
000000000000bfca         db  0x0e ; '.'
000000000000bfcb         db  0x18 ; '.'
000000000000bfcc         db  0x42 ; 'B'
000000000000bfcd         db  0x0e ; '.'
000000000000bfce         db  0x10 ; '.'
000000000000bfcf         db  0x42 ; 'B'
000000000000bfd0         db  0x0e ; '.'
000000000000bfd1         db  0x08 ; '.'
000000000000bfd2         db  0x41 ; 'A'
000000000000bfd3         db  0x0b ; '.'
000000000000bfd4         db  0x79 ; 'y'
000000000000bfd5         db  0x0a ; '.'
000000000000bfd6         db  0x0e ; '.'
000000000000bfd7         db  0x68 ; 'h'
000000000000bfd8         db  0x42 ; 'B'
000000000000bfd9         db  0x0e ; '.'
000000000000bfda         db  0x70 ; 'p'
000000000000bfdb         db  0x42 ; 'B'
000000000000bfdc         db  0x0e ; '.'
000000000000bfdd         db  0x78 ; 'x'
000000000000bfde         db  0x42 ; 'B'
000000000000bfdf         db  0x0e ; '.'
000000000000bfe0         db  0x80 ; '.'
000000000000bfe1         db  0x01 ; '.'
000000000000bfe2         db  0x51 ; 'Q'
000000000000bfe3         db  0x0b ; '.'
000000000000bfe4         dd         0x00000010                                  ; Length of the record
000000000000bfe8         dd         0x00000720                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000bfec         db         0xc4, 0x8f, 2 dup (0xff)                    ; begin 0x4fb0
000000000000bff0         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4fd0)
000000000000bff4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bff5         align      8
000000000000bff8         dd         0x00000018                                  ; Length of the record
000000000000bffc         dd         0x00000734                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c000         db         0xd0, 0x8f, 2 dup (0xff)                    ; begin 0x4fd0
000000000000c004         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5048)
000000000000c008         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c009         db  0x44 ; 'D'
000000000000c00a         db  0x0e ; '.'
000000000000c00b         db  0x70 ; 'p'
000000000000c00c         db  0x02 ; '.'
000000000000c00d         db  0x60 ; '`'
000000000000c00e         db  0x0a ; '.'
000000000000c00f         db  0x0e ; '.'
000000000000c010         db  0x08 ; '.'
000000000000c011         db  0x41 ; 'A'
000000000000c012         db  0x0b ; '.'
000000000000c013         db  0x00 ; '.'
000000000000c014         dd         0x00000028                                  ; Length of the record
000000000000c018         dd         0x00000750                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c01c         db         0x34, 0x90, 2 dup (0xff)                    ; begin 0x5050
000000000000c020         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5125)
000000000000c024         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c025         db  0x41 ; 'A'
000000000000c026         db  0x0e ; '.'
000000000000c027         db  0x10 ; '.'
000000000000c028         db  0x86 ; '.'
000000000000c029         db  0x02 ; '.'
000000000000c02a         db  0x41 ; 'A'
000000000000c02b         db  0x0e ; '.'
000000000000c02c         db  0x18 ; '.'
000000000000c02d         db  0x83 ; '.'
000000000000c02e         db  0x03 ; '.'
000000000000c02f         db  0x50 ; 'P'
000000000000c030         db  0x0e ; '.'
000000000000c031         db  0xd0 ; '.'
000000000000c032         db  0x01 ; '.'
000000000000c033         db  0x02 ; '.'
000000000000c034         db  0xab ; '.'
000000000000c035         db  0x0a ; '.'
000000000000c036         db  0x0e ; '.'
000000000000c037         db  0x18 ; '.'
000000000000c038         db  0x41 ; 'A'
000000000000c039         db  0x0e ; '.'
000000000000c03a         db  0x10 ; '.'
000000000000c03b         db  0x41 ; 'A'
000000000000c03c         db  0x0e ; '.'
000000000000c03d         db  0x08 ; '.'
000000000000c03e         db  0x41 ; 'A'
000000000000c03f         db  0x0b ; '.'
000000000000c040         dd         0x0000001c                                  ; Length of the record
000000000000c044         dd         0x0000077c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c048         db         0xe8, 0x90, 2 dup (0xff)                    ; begin 0x5130
000000000000c04c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x51b0)
000000000000c050         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c051         db  0x41 ; 'A'
000000000000c052         db  0x0e ; '.'
000000000000c053         db  0x10 ; '.'
000000000000c054         db  0x83 ; '.'
000000000000c055         db  0x02 ; '.'
000000000000c056         db  0x02 ; '.'
000000000000c057         db  0x7a ; 'z'
000000000000c058         db  0x0e ; '.'
000000000000c059         db  0x08 ; '.'
000000000000c05a         db  0x00 ; '.'
000000000000c05b         db  0x00 ; '.'
000000000000c05c         db  0x00 ; '.'
000000000000c05d         db  0x00 ; '.'
000000000000c05e         db  0x00 ; '.'
000000000000c05f         db  0x00 ; '.'
000000000000c060         dd         0x00000018                                  ; Length of the record
000000000000c064         dd         0x0000079c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c068         db         0x48, 0x91, 2 dup (0xff)                    ; begin 0x51b0
000000000000c06c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x51ca)
000000000000c070         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c071         db  0x41 ; 'A'
000000000000c072         db  0x0e ; '.'
000000000000c073         db  0x10 ; '.'
000000000000c074         db  0x83 ; '.'
000000000000c075         db  0x02 ; '.'
000000000000c076         db  0x53 ; 'S'
000000000000c077         db  0x0a ; '.'
000000000000c078         db  0x0e ; '.'
000000000000c079         db  0x08 ; '.'
000000000000c07a         db  0x41 ; 'A'
000000000000c07b         db  0x0b ; '.'
000000000000c07c         dd         0x00000010                                  ; Length of the record
000000000000c080         dd         0x000007b8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c084         db         0x4c, 0x91, 2 dup (0xff)                    ; begin 0x51d0
000000000000c088         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x51f4)
000000000000c08c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c08d         db  0x5f ; '_'
000000000000c08e         db  0x0e ; '.'
000000000000c08f         db  0x10 ; '.'
000000000000c090         dd         0x00000010                                  ; Length of the record
000000000000c094         dd         0x000007cc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c098         db         0x68, 0x91, 2 dup (0xff)                    ; begin 0x5200
000000000000c09c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5202)
000000000000c0a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0a1         align      4
000000000000c0a4         dd         0x00000020                                  ; Length of the record
000000000000c0a8         dd         0x000007e0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c0ac         db         0x64, 0x91, 2 dup (0xff)                    ; begin 0x5210
000000000000c0b0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5246)
000000000000c0b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0b5         db  0x44 ; 'D'
000000000000c0b6         db  0x0e ; '.'
000000000000c0b7         db  0x10 ; '.'
000000000000c0b8         db  0x83 ; '.'
000000000000c0b9         db  0x02 ; '.'
000000000000c0ba         db  0x5d ; ']'
000000000000c0bb         db  0x0a ; '.'
000000000000c0bc         db  0x0e ; '.'
000000000000c0bd         db  0x08 ; '.'
000000000000c0be         db  0x47 ; 'G'
000000000000c0bf         db  0x0b ; '.'
000000000000c0c0         db  0x48 ; 'H'
000000000000c0c1         db  0x0a ; '.'
000000000000c0c2         db  0x0e ; '.'
000000000000c0c3         db  0x08 ; '.'
000000000000c0c4         db  0x41 ; 'A'
000000000000c0c5         db  0x0b ; '.'
000000000000c0c6         db  0x00 ; '.'
000000000000c0c7         db  0x00 ; '.'
000000000000c0c8         dd         0x00000010                                  ; Length of the record
000000000000c0cc         dd         0x00000804                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c0d0         db         0x80, 0x91, 2 dup (0xff)                    ; begin 0x5250
000000000000c0d4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5274)
000000000000c0d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0d9         db  0x5f ; '_'
000000000000c0da         db  0x0e ; '.'
000000000000c0db         db  0x10 ; '.'
000000000000c0dc         dd         0x00000014                                  ; Length of the record
000000000000c0e0         dd         0x00000818                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c0e4         db         0x9c, 0x91, 2 dup (0xff)                    ; begin 0x5280
000000000000c0e8         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5302)
000000000000c0ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0ed         db  0x02 ; '.'
000000000000c0ee         db  0x5f ; '_'
000000000000c0ef         db  0x0e ; '.'
000000000000c0f0         db  0x10 ; '.'
000000000000c0f1         db  0x49 ; 'I'
000000000000c0f2         db  0x0e ; '.'
000000000000c0f3         db  0x08 ; '.'
000000000000c0f4         dd         0x00000014                                  ; Length of the record
000000000000c0f8         dd         0x00000830                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c0fc         db         0x14, 0x92, 2 dup (0xff)                    ; begin 0x5310
000000000000c100         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x535a)
000000000000c104         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c105         db  0x02 ; '.'
000000000000c106         db  0x45 ; 'E'
000000000000c107         db  0x0e ; '.'
000000000000c108         db  0x10 ; '.'
000000000000c109         db  0x00 ; '.'
000000000000c10a         db  0x00 ; '.'
000000000000c10b         db  0x00 ; '.'
000000000000c10c         dd         0x00000018                                  ; Length of the record
000000000000c110         dd         0x00000848                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c114         db         0x4c, 0x92, 2 dup (0xff)                    ; begin 0x5360
000000000000c118         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5377)
000000000000c11c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c11d         db  0x41 ; 'A'
000000000000c11e         db  0x0e ; '.'
000000000000c11f         db  0x10 ; '.'
000000000000c120         db  0x83 ; '.'
000000000000c121         db  0x02 ; '.'
000000000000c122         db  0x51 ; 'Q'
000000000000c123         db  0x0e ; '.'
000000000000c124         db  0x08 ; '.'
000000000000c125         db  0x00 ; '.'
000000000000c126         db  0x00 ; '.'
000000000000c127         db  0x00 ; '.'
000000000000c128         dd         0x00000018                                  ; Length of the record
000000000000c12c         dd         0x00000864                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c130         db         0x50, 0x92, 2 dup (0xff)                    ; begin 0x5380
000000000000c134         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x53ae)
000000000000c138         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c139         db  0x47 ; 'G'
000000000000c13a         db  0x0e ; '.'
000000000000c13b         db  0x10 ; '.'
000000000000c13c         db  0x61 ; 'a'
000000000000c13d         db  0x0a ; '.'
000000000000c13e         db  0x0e ; '.'
000000000000c13f         db  0x08 ; '.'
000000000000c140         db  0x41 ; 'A'
000000000000c141         db  0x0b ; '.'
000000000000c142         db  0x00 ; '.'
000000000000c143         db  0x00 ; '.'
000000000000c144         dd         0x00000024                                  ; Length of the record
000000000000c148         dd         0x00000880                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c14c         db         0x64, 0x92, 2 dup (0xff)                    ; begin 0x53b0
000000000000c150         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x53d8)
000000000000c154         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c155         db  0x41 ; 'A'
000000000000c156         db  0x0e ; '.'
000000000000c157         db  0x10 ; '.'
000000000000c158         db  0x86 ; '.'
000000000000c159         db  0x02 ; '.'
000000000000c15a         db  0x41 ; 'A'
000000000000c15b         db  0x0e ; '.'
000000000000c15c         db  0x18 ; '.'
000000000000c15d         db  0x83 ; '.'
000000000000c15e         db  0x03 ; '.'
000000000000c15f         db  0x4d ; 'M'
000000000000c160         db  0x0e ; '.'
000000000000c161         db  0x20 ; ' '
000000000000c162         db  0x49 ; 'I'
000000000000c163         db  0x0e ; '.'
000000000000c164         db  0x18 ; '.'
000000000000c165         db  0x47 ; 'G'
000000000000c166         db  0x0e ; '.'
000000000000c167         db  0x10 ; '.'
000000000000c168         db  0x41 ; 'A'
000000000000c169         db  0x0e ; '.'
000000000000c16a         db  0x08 ; '.'
000000000000c16b         db  0x00 ; '.'
000000000000c16c         dd         0x00000018                                  ; Length of the record
000000000000c170         dd         0x000008a8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c174         db         0x6c, 0x92, 2 dup (0xff)                    ; begin 0x53e0
000000000000c178         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x53f3)
000000000000c17c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c17d         db  0x41 ; 'A'
000000000000c17e         db  0x0e ; '.'
000000000000c17f         db  0x10 ; '.'
000000000000c180         db  0x83 ; '.'
000000000000c181         db  0x02 ; '.'
000000000000c182         db  0x50 ; 'P'
000000000000c183         db  0x0e ; '.'
000000000000c184         db  0x08 ; '.'
000000000000c185         db  0x00 ; '.'
000000000000c186         db  0x00 ; '.'
000000000000c187         db  0x00 ; '.'
000000000000c188         dd         0x00000014                                  ; Length of the record
000000000000c18c         dd         0x000008c4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c190         db         0x70, 0x92, 2 dup (0xff)                    ; begin 0x5400
000000000000c194         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5435)
000000000000c198         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c199         db  0x4b ; 'K'
000000000000c19a         db  0x0e ; '.'
000000000000c19b         db  0x10 ; '.'
000000000000c19c         db  0x00 ; '.'
000000000000c19d         db  0x00 ; '.'
000000000000c19e         db  0x00 ; '.'
000000000000c19f         db  0x00 ; '.'
000000000000c1a0         dd         0x00000018                                  ; Length of the record
000000000000c1a4         dd         0x000008dc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c1a8         db         0x98, 0x92, 2 dup (0xff)                    ; begin 0x5440
000000000000c1ac         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x548f)
000000000000c1b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1b1         db  0x44 ; 'D'
000000000000c1b2         db  0x0e ; '.'
000000000000c1b3         db  0x10 ; '.'
000000000000c1b4         db  0x54 ; 'T'
000000000000c1b5         db  0x0a ; '.'
000000000000c1b6         db  0x0e ; '.'
000000000000c1b7         db  0x08 ; '.'
000000000000c1b8         db  0x48 ; 'H'
000000000000c1b9         db  0x0b ; '.'
000000000000c1ba         db  0x00 ; '.'
000000000000c1bb         db  0x00 ; '.'
000000000000c1bc         dd         0x00000010                                  ; Length of the record
000000000000c1c0         dd         0x000008f8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c1c4         db         0xcc, 0x92, 2 dup (0xff)                    ; begin 0x5490
000000000000c1c8         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x54b9)
000000000000c1cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1cd         align      16
000000000000c1d0         dd         0x00000010                                  ; Length of the record
000000000000c1d4         dd         0x0000090c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c1d8         db         0xe8, 0x92, 2 dup (0xff)                    ; begin 0x54c0
000000000000c1dc         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x54da)
000000000000c1e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1e1         align      4
000000000000c1e4         dd         0x00000010                                  ; Length of the record
000000000000c1e8         dd         0x00000920                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c1ec         db         0xf4, 0x92, 2 dup (0xff)                    ; begin 0x54e0
000000000000c1f0         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x54ed)
000000000000c1f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1f5         align      8
000000000000c1f8         dd         0x00000010                                  ; Length of the record
000000000000c1fc         dd         0x00000934                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c200         db         0xf0, 0x92, 2 dup (0xff)                    ; begin 0x54f0
000000000000c204         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x54fc)
000000000000c208         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c209         align      4
000000000000c20c         dd         0x00000010                                  ; Length of the record
000000000000c210         dd         0x00000948                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c214         db         0xec, 0x92, 2 dup (0xff)                    ; begin 0x5500
000000000000c218         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x550a)
000000000000c21c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c21d         align      32
000000000000c220         dd         0x00000010                                  ; Length of the record
000000000000c224         dd         0x0000095c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c228         db         0xe8, 0x92, 2 dup (0xff)                    ; begin 0x5510
000000000000c22c         db         0x26, 3 dup (0x00)                          ; length 0x26 (end at 0x5536)
000000000000c230         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c231         align      4
000000000000c234         dd         0x00000038                                  ; Length of the record
000000000000c238         dd         0x00000970                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c23c         db         0x04, 0x93, 2 dup (0xff)                    ; begin 0x5540
000000000000c240         db         0xc5, 0x01, 2 dup (0x00)                    ; length 0x1c5 (end at 0x5705)
000000000000c244         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c245         db  0x42 ; 'B'
000000000000c246         db  0x0e ; '.'
000000000000c247         db  0x10 ; '.'
000000000000c248         db  0x8c ; '.'
000000000000c249         db  0x02 ; '.'
000000000000c24a         db  0x41 ; 'A'
000000000000c24b         db  0x0e ; '.'
000000000000c24c         db  0x18 ; '.'
000000000000c24d         db  0x86 ; '.'
000000000000c24e         db  0x03 ; '.'
000000000000c24f         db  0x44 ; 'D'
000000000000c250         db  0x0e ; '.'
000000000000c251         db  0x20 ; ' '
000000000000c252         db  0x83 ; '.'
000000000000c253         db  0x04 ; '.'
000000000000c254         db  0x02 ; '.'
000000000000c255         db  0x72 ; 'r'
000000000000c256         db  0x0a ; '.'
000000000000c257         db  0x0e ; '.'
000000000000c258         db  0x18 ; '.'
000000000000c259         db  0x41 ; 'A'
000000000000c25a         db  0x0e ; '.'
000000000000c25b         db  0x10 ; '.'
000000000000c25c         db  0x42 ; 'B'
000000000000c25d         db  0x0e ; '.'
000000000000c25e         db  0x08 ; '.'
000000000000c25f         db  0x44 ; 'D'
000000000000c260         db  0x0b ; '.'
000000000000c261         db  0x02 ; '.'
000000000000c262         db  0x54 ; 'T'
000000000000c263         db  0x0a ; '.'
000000000000c264         db  0x0e ; '.'
000000000000c265         db  0x18 ; '.'
000000000000c266         db  0x45 ; 'E'
000000000000c267         db  0x0e ; '.'
000000000000c268         db  0x10 ; '.'
000000000000c269         db  0x42 ; 'B'
000000000000c26a         db  0x0e ; '.'
000000000000c26b         db  0x08 ; '.'
000000000000c26c         db  0x45 ; 'E'
000000000000c26d         db  0x0b ; '.'
000000000000c26e         db  0x00 ; '.'
000000000000c26f         db  0x00 ; '.'
000000000000c270         dd         0x0000004c                                  ; Length of the record
000000000000c274         dd         0x000009ac                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c278         db         0x98, 0x94, 2 dup (0xff)                    ; begin 0x5710
000000000000c27c         db         0x05, 0x01, 2 dup (0x00)                    ; length 0x105 (end at 0x5815)
000000000000c280         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c281         db  0x42 ; 'B'
000000000000c282         db  0x0e ; '.'
000000000000c283         db  0x10 ; '.'
000000000000c284         db  0x8d ; '.'
000000000000c285         db  0x02 ; '.'
000000000000c286         db  0x42 ; 'B'
000000000000c287         db  0x0e ; '.'
000000000000c288         db  0x18 ; '.'
000000000000c289         db  0x8c ; '.'
000000000000c28a         db  0x03 ; '.'
000000000000c28b         db  0x44 ; 'D'
000000000000c28c         db  0x0e ; '.'
000000000000c28d         db  0x20 ; ' '
000000000000c28e         db  0x86 ; '.'
000000000000c28f         db  0x04 ; '.'
000000000000c290         db  0x41 ; 'A'
000000000000c291         db  0x0e ; '.'
000000000000c292         db  0x28 ; '('
000000000000c293         db  0x83 ; '.'
000000000000c294         db  0x05 ; '.'
000000000000c295         db  0x4a ; 'J'
000000000000c296         db  0x0e ; '.'
000000000000c297         db  0x30 ; '0'
000000000000c298         db  0x02 ; '.'
000000000000c299         db  0xb3 ; '.'
000000000000c29a         db  0x0a ; '.'
000000000000c29b         db  0x0e ; '.'
000000000000c29c         db  0x28 ; '('
000000000000c29d         db  0x41 ; 'A'
000000000000c29e         db  0x0e ; '.'
000000000000c29f         db  0x20 ; ' '
000000000000c2a0         db  0x41 ; 'A'
000000000000c2a1         db  0x0e ; '.'
000000000000c2a2         db  0x18 ; '.'
000000000000c2a3         db  0x42 ; 'B'
000000000000c2a4         db  0x0e ; '.'
000000000000c2a5         db  0x10 ; '.'
000000000000c2a6         db  0x42 ; 'B'
000000000000c2a7         db  0x0e ; '.'
000000000000c2a8         db  0x08 ; '.'
000000000000c2a9         db  0x44 ; 'D'
000000000000c2aa         db  0x0b ; '.'
000000000000c2ab         db  0x5d ; ']'
000000000000c2ac         db  0x0a ; '.'
000000000000c2ad         db  0x0e ; '.'
000000000000c2ae         db  0x28 ; '('
000000000000c2af         db  0x44 ; 'D'
000000000000c2b0         db  0x0e ; '.'
000000000000c2b1         db  0x20 ; ' '
000000000000c2b2         db  0x41 ; 'A'
000000000000c2b3         db  0x0e ; '.'
000000000000c2b4         db  0x18 ; '.'
000000000000c2b5         db  0x42 ; 'B'
000000000000c2b6         db  0x0e ; '.'
000000000000c2b7         db  0x10 ; '.'
000000000000c2b8         db  0x42 ; 'B'
000000000000c2b9         db  0x0e ; '.'
000000000000c2ba         db  0x08 ; '.'
000000000000c2bb         db  0x4a ; 'J'
000000000000c2bc         db  0x0b ; '.'
000000000000c2bd         db  0x00 ; '.'
000000000000c2be         db  0x00 ; '.'
000000000000c2bf         db  0x00 ; '.'
000000000000c2c0         dd         0x00000034                                  ; Length of the record
000000000000c2c4         dd         0x000009fc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c2c8         db         0x58, 0x95, 2 dup (0xff)                    ; begin 0x5820
000000000000c2cc         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x58aa)
000000000000c2d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c2d1         db  0x42 ; 'B'
000000000000c2d2         db  0x0e ; '.'
000000000000c2d3         db  0x10 ; '.'
000000000000c2d4         db  0x8d ; '.'
000000000000c2d5         db  0x02 ; '.'
000000000000c2d6         db  0x42 ; 'B'
000000000000c2d7         db  0x0e ; '.'
000000000000c2d8         db  0x18 ; '.'
000000000000c2d9         db  0x8c ; '.'
000000000000c2da         db  0x03 ; '.'
000000000000c2db         db  0x44 ; 'D'
000000000000c2dc         db  0x0e ; '.'
000000000000c2dd         db  0x20 ; ' '
000000000000c2de         db  0x86 ; '.'
000000000000c2df         db  0x04 ; '.'
000000000000c2e0         db  0x48 ; 'H'
000000000000c2e1         db  0x0e ; '.'
000000000000c2e2         db  0x28 ; '('
000000000000c2e3         db  0x83 ; '.'
000000000000c2e4         db  0x05 ; '.'
000000000000c2e5         db  0x4a ; 'J'
000000000000c2e6         db  0x0e ; '.'
000000000000c2e7         db  0x30 ; '0'
000000000000c2e8         db  0x02 ; '.'
000000000000c2e9         db  0x66 ; 'f'
000000000000c2ea         db  0x0e ; '.'
000000000000c2eb         db  0x28 ; '('
000000000000c2ec         db  0x44 ; 'D'
000000000000c2ed         db  0x0e ; '.'
000000000000c2ee         db  0x20 ; ' '
000000000000c2ef         db  0x41 ; 'A'
000000000000c2f0         db  0x0e ; '.'
000000000000c2f1         db  0x18 ; '.'
000000000000c2f2         db  0x42 ; 'B'
000000000000c2f3         db  0x0e ; '.'
000000000000c2f4         db  0x10 ; '.'
000000000000c2f5         db  0x42 ; 'B'
000000000000c2f6         db  0x0e ; '.'
000000000000c2f7         db  0x08 ; '.'
000000000000c2f8         dd         0x00000028                                  ; Length of the record
000000000000c2fc         dd         0x00000a34                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c300         db         0xb0, 0x95, 2 dup (0xff)                    ; begin 0x58b0
000000000000c304         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x58f2)
000000000000c308         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c309         db  0x46 ; 'F'
000000000000c30a         db  0x0e ; '.'
000000000000c30b         db  0x10 ; '.'
000000000000c30c         db  0x86 ; '.'
000000000000c30d         db  0x02 ; '.'
000000000000c30e         db  0x41 ; 'A'
000000000000c30f         db  0x0e ; '.'
000000000000c310         db  0x18 ; '.'
000000000000c311         db  0x83 ; '.'
000000000000c312         db  0x03 ; '.'
000000000000c313         db  0x47 ; 'G'
000000000000c314         db  0x0e ; '.'
000000000000c315         db  0x20 ; ' '
000000000000c316         db  0x68 ; 'h'
000000000000c317         db  0x0e ; '.'
000000000000c318         db  0x18 ; '.'
000000000000c319         db  0x41 ; 'A'
000000000000c31a         db  0x0e ; '.'
000000000000c31b         db  0x10 ; '.'
000000000000c31c         db  0x41 ; 'A'
000000000000c31d         db  0x0e ; '.'
000000000000c31e         db  0x08 ; '.'
000000000000c31f         db  0x48 ; 'H'
000000000000c320         db  0xc3 ; '.'
000000000000c321         db  0xc6 ; '.'
000000000000c322         db  0x00 ; '.'
000000000000c323         db  0x00 ; '.'
000000000000c324         dd         0x00000018                                  ; Length of the record
000000000000c328         dd         0x00000a60                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c32c         db         0xd4, 0x95, 2 dup (0xff)                    ; begin 0x5900
000000000000c330         db         0x39, 3 dup (0x00)                          ; length 0x39 (end at 0x5939)
000000000000c334         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c335         db  0x41 ; 'A'
000000000000c336         db  0x0e ; '.'
000000000000c337         db  0x10 ; '.'
000000000000c338         db  0x83 ; '.'
000000000000c339         db  0x02 ; '.'
000000000000c33a         db  0x68 ; 'h'
000000000000c33b         db  0x0a ; '.'
000000000000c33c         db  0x0e ; '.'
000000000000c33d         db  0x08 ; '.'
000000000000c33e         db  0x47 ; 'G'
000000000000c33f         db  0x0b ; '.'
000000000000c340         dd         0x00000038                                  ; Length of the record
000000000000c344         dd         0x00000a7c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c348         db         0xf8, 0x95, 2 dup (0xff)                    ; begin 0x5940
000000000000c34c         db         0x2c, 0x01, 2 dup (0x00)                    ; length 0x12c (end at 0x5a6c)
000000000000c350         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c351         db  0x42 ; 'B'
000000000000c352         db  0x0e ; '.'
000000000000c353         db  0x10 ; '.'
000000000000c354         db  0x8d ; '.'
000000000000c355         db  0x02 ; '.'
000000000000c356         db  0x42 ; 'B'
000000000000c357         db  0x0e ; '.'
000000000000c358         db  0x18 ; '.'
000000000000c359         db  0x8c ; '.'
000000000000c35a         db  0x03 ; '.'
000000000000c35b         db  0x41 ; 'A'
000000000000c35c         db  0x0e ; '.'
000000000000c35d         db  0x20 ; ' '
000000000000c35e         db  0x86 ; '.'
000000000000c35f         db  0x04 ; '.'
000000000000c360         db  0x41 ; 'A'
000000000000c361         db  0x0e ; '.'
000000000000c362         db  0x28 ; '('
000000000000c363         db  0x83 ; '.'
000000000000c364         db  0x05 ; '.'
000000000000c365         db  0x47 ; 'G'
000000000000c366         db  0x0e ; '.'
000000000000c367         db  0xc0 ; '.'
000000000000c368         db  0x01 ; '.'
000000000000c369         db  0x02 ; '.'
000000000000c36a         db  0xa4 ; '.'
000000000000c36b         db  0x0a ; '.'
000000000000c36c         db  0x0e ; '.'
000000000000c36d         db  0x28 ; '('
000000000000c36e         db  0x41 ; 'A'
000000000000c36f         db  0x0e ; '.'
000000000000c370         db  0x20 ; ' '
000000000000c371         db  0x41 ; 'A'
000000000000c372         db  0x0e ; '.'
000000000000c373         db  0x18 ; '.'
000000000000c374         db  0x42 ; 'B'
000000000000c375         db  0x0e ; '.'
000000000000c376         db  0x10 ; '.'
000000000000c377         db  0x42 ; 'B'
000000000000c378         db  0x0e ; '.'
000000000000c379         db  0x08 ; '.'
000000000000c37a         db  0x49 ; 'I'
000000000000c37b         db  0x0b ; '.'
000000000000c37c         dd         0x00000020                                  ; Length of the record
000000000000c380         dd         0x00000ab8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c384         db         0xec, 0x96, 2 dup (0xff)                    ; begin 0x5a70
000000000000c388         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x5ada)
000000000000c38c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c38d         db  0x44 ; 'D'
000000000000c38e         db  0x0e ; '.'
000000000000c38f         db  0x10 ; '.'
000000000000c390         db  0x72 ; 'r'
000000000000c391         db  0x0a ; '.'
000000000000c392         db  0x0e ; '.'
000000000000c393         db  0x08 ; '.'
000000000000c394         db  0x4a ; 'J'
000000000000c395         db  0x0b ; '.'
000000000000c396         db  0x5b ; '['
000000000000c397         db  0x0a ; '.'
000000000000c398         db  0x0e ; '.'
000000000000c399         db  0x08 ; '.'
000000000000c39a         db  0x45 ; 'E'
000000000000c39b         db  0x0b ; '.'
000000000000c39c         db  0x49 ; 'I'
000000000000c39d         db  0x0e ; '.'
000000000000c39e         db  0x08 ; '.'
000000000000c39f         db  0x00 ; '.'
000000000000c3a0         dd         0x00000040                                  ; Length of the record
000000000000c3a4         dd         0x00000adc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c3a8         db         0x38, 0x97, 2 dup (0xff)                    ; begin 0x5ae0
000000000000c3ac         db         0x66, 3 dup (0x00)                          ; length 0x66 (end at 0x5b46)
000000000000c3b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c3b1         db  0x41 ; 'A'
000000000000c3b2         db  0x0e ; '.'
000000000000c3b3         db  0x10 ; '.'
000000000000c3b4         db  0x86 ; '.'
000000000000c3b5         db  0x02 ; '.'
000000000000c3b6         db  0x41 ; 'A'
000000000000c3b7         db  0x0e ; '.'
000000000000c3b8         db  0x18 ; '.'
000000000000c3b9         db  0x83 ; '.'
000000000000c3ba         db  0x03 ; '.'
000000000000c3bb         db  0x49 ; 'I'
000000000000c3bc         db  0x0e ; '.'
000000000000c3bd         db  0x20 ; ' '
000000000000c3be         db  0x61 ; 'a'
000000000000c3bf         db  0x0a ; '.'
000000000000c3c0         db  0x0e ; '.'
000000000000c3c1         db  0x18 ; '.'
000000000000c3c2         db  0x41 ; 'A'
000000000000c3c3         db  0x0e ; '.'
000000000000c3c4         db  0x10 ; '.'
000000000000c3c5         db  0x41 ; 'A'
000000000000c3c6         db  0x0e ; '.'
000000000000c3c7         db  0x08 ; '.'
000000000000c3c8         db  0x42 ; 'B'
000000000000c3c9         db  0x0b ; '.'
000000000000c3ca         db  0x5b ; '['
000000000000c3cb         db  0x0a ; '.'
000000000000c3cc         db  0x0e ; '.'
000000000000c3cd         db  0x18 ; '.'
000000000000c3ce         db  0x41 ; 'A'
000000000000c3cf         db  0x0e ; '.'
000000000000c3d0         db  0x10 ; '.'
000000000000c3d1         db  0x41 ; 'A'
000000000000c3d2         db  0x0e ; '.'
000000000000c3d3         db  0x08 ; '.'
000000000000c3d4         db  0x43 ; 'C'
000000000000c3d5         db  0x0b ; '.'
000000000000c3d6         db  0x4e ; 'N'
000000000000c3d7         db  0x0a ; '.'
000000000000c3d8         db  0x0e ; '.'
000000000000c3d9         db  0x18 ; '.'
000000000000c3da         db  0x41 ; 'A'
000000000000c3db         db  0x0e ; '.'
000000000000c3dc         db  0x10 ; '.'
000000000000c3dd         db  0x41 ; 'A'
000000000000c3de         db  0x0e ; '.'
000000000000c3df         db  0x08 ; '.'
000000000000c3e0         db  0x41 ; 'A'
000000000000c3e1         db  0x0b ; '.'
000000000000c3e2         db  0x00 ; '.'
000000000000c3e3         db  0x00 ; '.'
000000000000c3e4         dd         0x00000028                                  ; Length of the record
000000000000c3e8         dd         0x00000b20                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c3ec         db         0x64, 0x97, 2 dup (0xff)                    ; begin 0x5b50
000000000000c3f0         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x5bac)
000000000000c3f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c3f5         db  0x41 ; 'A'
000000000000c3f6         db  0x0e ; '.'
000000000000c3f7         db  0x10 ; '.'
000000000000c3f8         db  0x86 ; '.'
000000000000c3f9         db  0x02 ; '.'
000000000000c3fa         db  0x41 ; 'A'
000000000000c3fb         db  0x0e ; '.'
000000000000c3fc         db  0x18 ; '.'
000000000000c3fd         db  0x83 ; '.'
000000000000c3fe         db  0x03 ; '.'
000000000000c3ff         db  0x47 ; 'G'
000000000000c400         db  0x0e ; '.'
000000000000c401         db  0x20 ; ' '
000000000000c402         db  0x6c ; 'l'
000000000000c403         db  0x0a ; '.'
000000000000c404         db  0x0e ; '.'
000000000000c405         db  0x18 ; '.'
000000000000c406         db  0x43 ; 'C'
000000000000c407         db  0x0e ; '.'
000000000000c408         db  0x10 ; '.'
000000000000c409         db  0x41 ; 'A'
000000000000c40a         db  0x0e ; '.'
000000000000c40b         db  0x08 ; '.'
000000000000c40c         db  0x47 ; 'G'
000000000000c40d         db  0x0b ; '.'
000000000000c40e         db  0x00 ; '.'
000000000000c40f         db  0x00 ; '.'
000000000000c410         dd         0x00000024                                  ; Length of the record
000000000000c414         dd         0x00000b4c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c418         db         0x98, 0x97, 2 dup (0xff)                    ; begin 0x5bb0
000000000000c41c         db         0x6b, 3 dup (0x00)                          ; length 0x6b (end at 0x5c1b)
000000000000c420         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c421         db  0x41 ; 'A'
000000000000c422         db  0x0e ; '.'
000000000000c423         db  0x10 ; '.'
000000000000c424         db  0x83 ; '.'
000000000000c425         db  0x02 ; '.'
000000000000c426         db  0x6f ; 'o'
000000000000c427         db  0x0a ; '.'
000000000000c428         db  0x0e ; '.'
000000000000c429         db  0x08 ; '.'
000000000000c42a         db  0x48 ; 'H'
000000000000c42b         db  0x0b ; '.'
000000000000c42c         db  0x5a ; 'Z'
000000000000c42d         db  0x0a ; '.'
000000000000c42e         db  0x0e ; '.'
000000000000c42f         db  0x08 ; '.'
000000000000c430         db  0x46 ; 'F'
000000000000c431         db  0x0b ; '.'
000000000000c432         db  0x52 ; 'R'
000000000000c433         db  0x0e ; '.'
000000000000c434         db  0x08 ; '.'
000000000000c435         db  0x00 ; '.'
000000000000c436         db  0x00 ; '.'
000000000000c437         db  0x00 ; '.'
000000000000c438         dd         0x0000001c                                  ; Length of the record
000000000000c43c         dd         0x00000b74                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c440         db         0xe0, 0x97, 2 dup (0xff)                    ; begin 0x5c20
000000000000c444         db         0x63, 3 dup (0x00)                          ; length 0x63 (end at 0x5c83)
000000000000c448         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c449         db  0x47 ; 'G'
000000000000c44a         db  0x0e ; '.'
000000000000c44b         db  0x10 ; '.'
000000000000c44c         db  0x83 ; '.'
000000000000c44d         db  0x02 ; '.'
000000000000c44e         db  0x70 ; 'p'
000000000000c44f         db  0x0a ; '.'
000000000000c450         db  0x0e ; '.'
000000000000c451         db  0x08 ; '.'
000000000000c452         db  0x49 ; 'I'
000000000000c453         db  0x0b ; '.'
000000000000c454         db  0x62 ; 'b'
000000000000c455         db  0x0e ; '.'
000000000000c456         db  0x08 ; '.'
000000000000c457         db  0x00 ; '.'
000000000000c458         dd         0x00000010                                  ; Length of the record
000000000000c45c         dd         0x00000b94                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c460         db         0x30, 0x98, 2 dup (0xff)                    ; begin 0x5c90
000000000000c464         db         0x3a, 3 dup (0x00)                          ; length 0x3a (end at 0x5cca)
000000000000c468         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c469         align      4
000000000000c46c         dd         0x0000004c                                  ; Length of the record
000000000000c470         dd         0x00000ba8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c474         db         0x5c, 0x98, 2 dup (0xff)                    ; begin 0x5cd0
000000000000c478         db         0x7a, 0x02, 2 dup (0x00)                    ; length 0x27a (end at 0x5f4a)
000000000000c47c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c47d         db  0x42 ; 'B'
000000000000c47e         db  0x0e ; '.'
000000000000c47f         db  0x10 ; '.'
000000000000c480         db  0x8f ; '.'
000000000000c481         db  0x02 ; '.'
000000000000c482         db  0x42 ; 'B'
000000000000c483         db  0x0e ; '.'
000000000000c484         db  0x18 ; '.'
000000000000c485         db  0x8e ; '.'
000000000000c486         db  0x03 ; '.'
000000000000c487         db  0x45 ; 'E'
000000000000c488         db  0x0e ; '.'
000000000000c489         db  0x20 ; ' '
000000000000c48a         db  0x8d ; '.'
000000000000c48b         db  0x04 ; '.'
000000000000c48c         db  0x42 ; 'B'
000000000000c48d         db  0x0e ; '.'
000000000000c48e         db  0x28 ; '('
000000000000c48f         db  0x8c ; '.'
000000000000c490         db  0x05 ; '.'
000000000000c491         db  0x44 ; 'D'
000000000000c492         db  0x0e ; '.'
000000000000c493         db  0x30 ; '0'
000000000000c494         db  0x86 ; '.'
000000000000c495         db  0x06 ; '.'
000000000000c496         db  0x41 ; 'A'
000000000000c497         db  0x0e ; '.'
000000000000c498         db  0x38 ; '8'
000000000000c499         db  0x83 ; '.'
000000000000c49a         db  0x07 ; '.'
000000000000c49b         db  0x4d ; 'M'
000000000000c49c         db  0x0e ; '.'
000000000000c49d         db  0xf0 ; '.'
000000000000c49e         db  0x01 ; '.'
000000000000c49f         db  0x03 ; '.'
000000000000c4a0         db  0x08 ; '.'
000000000000c4a1         db  0x01 ; '.'
000000000000c4a2         db  0x0a ; '.'
000000000000c4a3         db  0x0e ; '.'
000000000000c4a4         db  0x38 ; '8'
000000000000c4a5         db  0x41 ; 'A'
000000000000c4a6         db  0x0e ; '.'
000000000000c4a7         db  0x30 ; '0'
000000000000c4a8         db  0x41 ; 'A'
000000000000c4a9         db  0x0e ; '.'
000000000000c4aa         db  0x28 ; '('
000000000000c4ab         db  0x42 ; 'B'
000000000000c4ac         db  0x0e ; '.'
000000000000c4ad         db  0x20 ; ' '
000000000000c4ae         db  0x42 ; 'B'
000000000000c4af         db  0x0e ; '.'
000000000000c4b0         db  0x18 ; '.'
000000000000c4b1         db  0x42 ; 'B'
000000000000c4b2         db  0x0e ; '.'
000000000000c4b3         db  0x10 ; '.'
000000000000c4b4         db  0x42 ; 'B'
000000000000c4b5         db  0x0e ; '.'
000000000000c4b6         db  0x08 ; '.'
000000000000c4b7         db  0x41 ; 'A'
000000000000c4b8         db  0x0b ; '.'
000000000000c4b9         db  0x00 ; '.'
000000000000c4ba         db  0x00 ; '.'
000000000000c4bb         db  0x00 ; '.'
000000000000c4bc         dd         0x00000040                                  ; Length of the record
000000000000c4c0         dd         0x00000bf8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c4c4         db         0x8c, 0x9a, 2 dup (0xff)                    ; begin 0x5f50
000000000000c4c8         db         0xaf, 3 dup (0x00)                          ; length 0xaf (end at 0x5fff)
000000000000c4cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4cd         db  0x48 ; 'H'
000000000000c4ce         db  0x0e ; '.'
000000000000c4cf         db  0x10 ; '.'
000000000000c4d0         db  0x8c ; '.'
000000000000c4d1         db  0x02 ; '.'
000000000000c4d2         db  0x44 ; 'D'
000000000000c4d3         db  0x0e ; '.'
000000000000c4d4         db  0x18 ; '.'
000000000000c4d5         db  0x86 ; '.'
000000000000c4d6         db  0x03 ; '.'
000000000000c4d7         db  0x41 ; 'A'
000000000000c4d8         db  0x0e ; '.'
000000000000c4d9         db  0x20 ; ' '
000000000000c4da         db  0x83 ; '.'
000000000000c4db         db  0x04 ; '.'
000000000000c4dc         db  0x02 ; '.'
000000000000c4dd         db  0x65 ; 'e'
000000000000c4de         db  0x0a ; '.'
000000000000c4df         db  0x0e ; '.'
000000000000c4e0         db  0x18 ; '.'
000000000000c4e1         db  0x46 ; 'F'
000000000000c4e2         db  0x0e ; '.'
000000000000c4e3         db  0x10 ; '.'
000000000000c4e4         db  0x42 ; 'B'
000000000000c4e5         db  0x0e ; '.'
000000000000c4e6         db  0x08 ; '.'
000000000000c4e7         db  0x46 ; 'F'
000000000000c4e8         db  0x0b ; '.'
000000000000c4e9         db  0x5e ; '^'
000000000000c4ea         db  0x0a ; '.'
000000000000c4eb         db  0x0e ; '.'
000000000000c4ec         db  0x18 ; '.'
000000000000c4ed         db  0x41 ; 'A'
000000000000c4ee         db  0x0e ; '.'
000000000000c4ef         db  0x10 ; '.'
000000000000c4f0         db  0x42 ; 'B'
000000000000c4f1         db  0x0e ; '.'
000000000000c4f2         db  0x08 ; '.'
000000000000c4f3         db  0x47 ; 'G'
000000000000c4f4         db  0x0b ; '.'
000000000000c4f5         db  0x41 ; 'A'
000000000000c4f6         db  0x0e ; '.'
000000000000c4f7         db  0x18 ; '.'
000000000000c4f8         db  0x43 ; 'C'
000000000000c4f9         db  0x0e ; '.'
000000000000c4fa         db  0x10 ; '.'
000000000000c4fb         db  0x42 ; 'B'
000000000000c4fc         db  0x0e ; '.'
000000000000c4fd         db  0x08 ; '.'
000000000000c4fe         db  0x00 ; '.'
000000000000c4ff         db  0x00 ; '.'
000000000000c500         dd         0x00000018                                  ; Length of the record
000000000000c504         dd         0x00000c3c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c508         db         0xf8, 0x9a, 2 dup (0xff)                    ; begin 0x6000
000000000000c50c         db         0xb8, 3 dup (0x00)                          ; length 0xb8 (end at 0x60b8)
000000000000c510         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c511         db  0x44 ; 'D'
000000000000c512         db  0x0e ; '.'
000000000000c513         db  0x30 ; '0'
000000000000c514         db  0x02 ; '.'
000000000000c515         db  0x55 ; 'U'
000000000000c516         db  0x0a ; '.'
000000000000c517         db  0x0e ; '.'
000000000000c518         db  0x08 ; '.'
000000000000c519         db  0x47 ; 'G'
000000000000c51a         db  0x0b ; '.'
000000000000c51b         db  0x00 ; '.'
000000000000c51c         dd         0x0000004c                                  ; Length of the record
000000000000c520         dd         0x00000c58                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c524         db         0x9c, 0x9b, 2 dup (0xff)                    ; begin 0x60c0
000000000000c528         db         0xd1, 0x09, 2 dup (0x00)                    ; length 0x9d1 (end at 0x6a91)
000000000000c52c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c52d         db  0x42 ; 'B'
000000000000c52e         db  0x0e ; '.'
000000000000c52f         db  0x10 ; '.'
000000000000c530         db  0x8f ; '.'
000000000000c531         db  0x02 ; '.'
000000000000c532         db  0x42 ; 'B'
000000000000c533         db  0x0e ; '.'
000000000000c534         db  0x18 ; '.'
000000000000c535         db  0x8e ; '.'
000000000000c536         db  0x03 ; '.'
000000000000c537         db  0x45 ; 'E'
000000000000c538         db  0x0e ; '.'
000000000000c539         db  0x20 ; ' '
000000000000c53a         db  0x8d ; '.'
000000000000c53b         db  0x04 ; '.'
000000000000c53c         db  0x42 ; 'B'
000000000000c53d         db  0x0e ; '.'
000000000000c53e         db  0x28 ; '('
000000000000c53f         db  0x8c ; '.'
000000000000c540         db  0x05 ; '.'
000000000000c541         db  0x41 ; 'A'
000000000000c542         db  0x0e ; '.'
000000000000c543         db  0x30 ; '0'
000000000000c544         db  0x86 ; '.'
000000000000c545         db  0x06 ; '.'
000000000000c546         db  0x41 ; 'A'
000000000000c547         db  0x0e ; '.'
000000000000c548         db  0x38 ; '8'
000000000000c549         db  0x83 ; '.'
000000000000c54a         db  0x07 ; '.'
000000000000c54b         db  0x44 ; 'D'
000000000000c54c         db  0x0e ; '.'
000000000000c54d         db  0xb0 ; '.'
000000000000c54e         db  0x01 ; '.'
000000000000c54f         db  0x03 ; '.'
000000000000c550         db  0xd1 ; '.'
000000000000c551         db  0x05 ; '.'
000000000000c552         db  0x0a ; '.'
000000000000c553         db  0x0e ; '.'
000000000000c554         db  0x38 ; '8'
000000000000c555         db  0x41 ; 'A'
000000000000c556         db  0x0e ; '.'
000000000000c557         db  0x30 ; '0'
000000000000c558         db  0x41 ; 'A'
000000000000c559         db  0x0e ; '.'
000000000000c55a         db  0x28 ; '('
000000000000c55b         db  0x42 ; 'B'
000000000000c55c         db  0x0e ; '.'
000000000000c55d         db  0x20 ; ' '
000000000000c55e         db  0x42 ; 'B'
000000000000c55f         db  0x0e ; '.'
000000000000c560         db  0x18 ; '.'
000000000000c561         db  0x42 ; 'B'
000000000000c562         db  0x0e ; '.'
000000000000c563         db  0x10 ; '.'
000000000000c564         db  0x42 ; 'B'
000000000000c565         db  0x0e ; '.'
000000000000c566         db  0x08 ; '.'
000000000000c567         db  0x44 ; 'D'
000000000000c568         db  0x0b ; '.'
000000000000c569         db  0x00 ; '.'
000000000000c56a         db  0x00 ; '.'
000000000000c56b         db  0x00 ; '.'
000000000000c56c         dd         0x00000048                                  ; Length of the record
000000000000c570         dd         0x00000ca8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c574         db         0x2c, 0xa5, 2 dup (0xff)                    ; begin 0x6aa0
000000000000c578         db         0xaa, 0x03, 2 dup (0x00)                    ; length 0x3aa (end at 0x6e4a)
000000000000c57c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c57d         db  0x42 ; 'B'
000000000000c57e         db  0x0e ; '.'
000000000000c57f         db  0x10 ; '.'
000000000000c580         db  0x8f ; '.'
000000000000c581         db  0x02 ; '.'
000000000000c582         db  0x42 ; 'B'
000000000000c583         db  0x0e ; '.'
000000000000c584         db  0x18 ; '.'
000000000000c585         db  0x8e ; '.'
000000000000c586         db  0x03 ; '.'
000000000000c587         db  0x42 ; 'B'
000000000000c588         db  0x0e ; '.'
000000000000c589         db  0x20 ; ' '
000000000000c58a         db  0x8d ; '.'
000000000000c58b         db  0x04 ; '.'
000000000000c58c         db  0x42 ; 'B'
000000000000c58d         db  0x0e ; '.'
000000000000c58e         db  0x28 ; '('
000000000000c58f         db  0x8c ; '.'
000000000000c590         db  0x05 ; '.'
000000000000c591         db  0x41 ; 'A'
000000000000c592         db  0x0e ; '.'
000000000000c593         db  0x30 ; '0'
000000000000c594         db  0x86 ; '.'
000000000000c595         db  0x06 ; '.'
000000000000c596         db  0x41 ; 'A'
000000000000c597         db  0x0e ; '.'
000000000000c598         db  0x38 ; '8'
000000000000c599         db  0x83 ; '.'
000000000000c59a         db  0x07 ; '.'
000000000000c59b         db  0x44 ; 'D'
000000000000c59c         db  0x0e ; '.'
000000000000c59d         db  0x60 ; '`'
000000000000c59e         db  0x03 ; '.'
000000000000c59f         db  0xa4 ; '.'
000000000000c5a0         db  0x02 ; '.'
000000000000c5a1         db  0x0a ; '.'
000000000000c5a2         db  0x0e ; '.'
000000000000c5a3         db  0x38 ; '8'
000000000000c5a4         db  0x44 ; 'D'
000000000000c5a5         db  0x0e ; '.'
000000000000c5a6         db  0x30 ; '0'
000000000000c5a7         db  0x41 ; 'A'
000000000000c5a8         db  0x0e ; '.'
000000000000c5a9         db  0x28 ; '('
000000000000c5aa         db  0x42 ; 'B'
000000000000c5ab         db  0x0e ; '.'
000000000000c5ac         db  0x20 ; ' '
000000000000c5ad         db  0x42 ; 'B'
000000000000c5ae         db  0x0e ; '.'
000000000000c5af         db  0x18 ; '.'
000000000000c5b0         db  0x42 ; 'B'
000000000000c5b1         db  0x0e ; '.'
000000000000c5b2         db  0x10 ; '.'
000000000000c5b3         db  0x42 ; 'B'
000000000000c5b4         db  0x0e ; '.'
000000000000c5b5         db  0x08 ; '.'
000000000000c5b6         db  0x41 ; 'A'
000000000000c5b7         db  0x0b ; '.'
000000000000c5b8         dd         0x0000002c                                  ; Length of the record
000000000000c5bc         dd         0x00000cf4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c5c0         db         0x90, 0xa8, 2 dup (0xff)                    ; begin 0x6e50
000000000000c5c4         db         0x82, 0x01, 2 dup (0x00)                    ; length 0x182 (end at 0x6fd2)
000000000000c5c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5c9         db  0x42 ; 'B'
000000000000c5ca         db  0x0e ; '.'
000000000000c5cb         db  0x10 ; '.'
000000000000c5cc         db  0x8c ; '.'
000000000000c5cd         db  0x02 ; '.'
000000000000c5ce         db  0x41 ; 'A'
000000000000c5cf         db  0x0e ; '.'
000000000000c5d0         db  0x18 ; '.'
000000000000c5d1         db  0x86 ; '.'
000000000000c5d2         db  0x03 ; '.'
000000000000c5d3         db  0x44 ; 'D'
000000000000c5d4         db  0x0e ; '.'
000000000000c5d5         db  0x20 ; ' '
000000000000c5d6         db  0x83 ; '.'
000000000000c5d7         db  0x04 ; '.'
000000000000c5d8         db  0x02 ; '.'
000000000000c5d9         db  0xc2 ; '.'
000000000000c5da         db  0x0a ; '.'
000000000000c5db         db  0x0e ; '.'
000000000000c5dc         db  0x18 ; '.'
000000000000c5dd         db  0x41 ; 'A'
000000000000c5de         db  0x0e ; '.'
000000000000c5df         db  0x10 ; '.'
000000000000c5e0         db  0x42 ; 'B'
000000000000c5e1         db  0x0e ; '.'
000000000000c5e2         db  0x08 ; '.'
000000000000c5e3         db  0x44 ; 'D'
000000000000c5e4         db  0x0b ; '.'
000000000000c5e5         db  0x00 ; '.'
000000000000c5e6         db  0x00 ; '.'
000000000000c5e7         db  0x00 ; '.'
000000000000c5e8         dd         0x00000060                                  ; Length of the record
000000000000c5ec         dd         0x00000d24                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c5f0         db         0xf0, 0xa9, 2 dup (0xff)                    ; begin 0x6fe0
000000000000c5f4         db         0x78, 0x07, 2 dup (0x00)                    ; length 0x778 (end at 0x7758)
000000000000c5f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5f9         db  0x42 ; 'B'
000000000000c5fa         db  0x0e ; '.'
000000000000c5fb         db  0x10 ; '.'
000000000000c5fc         db  0x8e ; '.'
000000000000c5fd         db  0x02 ; '.'
000000000000c5fe         db  0x42 ; 'B'
000000000000c5ff         db  0x0e ; '.'
000000000000c600         db  0x18 ; '.'
000000000000c601         db  0x8d ; '.'
000000000000c602         db  0x03 ; '.'
000000000000c603         db  0x42 ; 'B'
000000000000c604         db  0x0e ; '.'
000000000000c605         db  0x20 ; ' '
000000000000c606         db  0x8c ; '.'
000000000000c607         db  0x04 ; '.'
000000000000c608         db  0x41 ; 'A'
000000000000c609         db  0x0e ; '.'
000000000000c60a         db  0x28 ; '('
000000000000c60b         db  0x86 ; '.'
000000000000c60c         db  0x05 ; '.'
000000000000c60d         db  0x41 ; 'A'
000000000000c60e         db  0x0e ; '.'
000000000000c60f         db  0x30 ; '0'
000000000000c610         db  0x83 ; '.'
000000000000c611         db  0x06 ; '.'
000000000000c612         db  0x03 ; '.'
000000000000c613         db  0x19 ; '.'
000000000000c614         db  0x01 ; '.'
000000000000c615         db  0x0a ; '.'
000000000000c616         db  0x0e ; '.'
000000000000c617         db  0x28 ; '('
000000000000c618         db  0x44 ; 'D'
000000000000c619         db  0x0e ; '.'
000000000000c61a         db  0x20 ; ' '
000000000000c61b         db  0x42 ; 'B'
000000000000c61c         db  0x0e ; '.'
000000000000c61d         db  0x18 ; '.'
000000000000c61e         db  0x42 ; 'B'
000000000000c61f         db  0x0e ; '.'
000000000000c620         db  0x10 ; '.'
000000000000c621         db  0x42 ; 'B'
000000000000c622         db  0x0e ; '.'
000000000000c623         db  0x08 ; '.'
000000000000c624         db  0x45 ; 'E'
000000000000c625         db  0x0b ; '.'
000000000000c626         db  0x02 ; '.'
000000000000c627         db  0x6b ; 'k'
000000000000c628         db  0x0a ; '.'
000000000000c629         db  0x0e ; '.'
000000000000c62a         db  0x28 ; '('
000000000000c62b         db  0x44 ; 'D'
000000000000c62c         db  0x0e ; '.'
000000000000c62d         db  0x20 ; ' '
000000000000c62e         db  0x42 ; 'B'
000000000000c62f         db  0x0e ; '.'
000000000000c630         db  0x18 ; '.'
000000000000c631         db  0x42 ; 'B'
000000000000c632         db  0x0e ; '.'
000000000000c633         db  0x10 ; '.'
000000000000c634         db  0x42 ; 'B'
000000000000c635         db  0x0e ; '.'
000000000000c636         db  0x08 ; '.'
000000000000c637         db  0x4b ; 'K'
000000000000c638         db  0x0b ; '.'
000000000000c639         db  0x02 ; '.'
000000000000c63a         db  0xe2 ; '.'
000000000000c63b         db  0x0a ; '.'
000000000000c63c         db  0x0e ; '.'
000000000000c63d         db  0x28 ; '('
000000000000c63e         db  0x41 ; 'A'
000000000000c63f         db  0x0e ; '.'
000000000000c640         db  0x20 ; ' '
000000000000c641         db  0x42 ; 'B'
000000000000c642         db  0x0e ; '.'
000000000000c643         db  0x18 ; '.'
000000000000c644         db  0x42 ; 'B'
000000000000c645         db  0x0e ; '.'
000000000000c646         db  0x10 ; '.'
000000000000c647         db  0x42 ; 'B'
000000000000c648         db  0x0e ; '.'
000000000000c649         db  0x08 ; '.'
000000000000c64a         db  0x47 ; 'G'
000000000000c64b         db  0x0b ; '.'
000000000000c64c         dd         0x00000014                                  ; Length of the record
000000000000c650         dd         0x00000d88                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c654         db         0x0c, 0xb1, 2 dup (0xff)                    ; begin 0x7760
000000000000c658         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x7789)
000000000000c65c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c65d         db  0x54 ; 'T'
000000000000c65e         db  0x0e ; '.'
000000000000c65f         db  0x10 ; '.'
000000000000c660         db  0x54 ; 'T'
000000000000c661         db  0x0e ; '.'
000000000000c662         db  0x08 ; '.'
000000000000c663         db  0x00 ; '.'
000000000000c664         dd         0x00000060                                  ; Length of the record
000000000000c668         dd         0x00000da0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c66c         db         0x24, 0xb1, 2 dup (0xff)                    ; begin 0x7790
000000000000c670         db         0x4e, 0x01, 2 dup (0x00)                    ; length 0x14e (end at 0x78de)
000000000000c674         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c675         db  0x42 ; 'B'
000000000000c676         db  0x0e ; '.'
000000000000c677         db  0x10 ; '.'
000000000000c678         db  0x8e ; '.'
000000000000c679         db  0x02 ; '.'
000000000000c67a         db  0x42 ; 'B'
000000000000c67b         db  0x0e ; '.'
000000000000c67c         db  0x18 ; '.'
000000000000c67d         db  0x8d ; '.'
000000000000c67e         db  0x03 ; '.'
000000000000c67f         db  0x42 ; 'B'
000000000000c680         db  0x0e ; '.'
000000000000c681         db  0x20 ; ' '
000000000000c682         db  0x8c ; '.'
000000000000c683         db  0x04 ; '.'
000000000000c684         db  0x41 ; 'A'
000000000000c685         db  0x0e ; '.'
000000000000c686         db  0x28 ; '('
000000000000c687         db  0x86 ; '.'
000000000000c688         db  0x05 ; '.'
000000000000c689         db  0x44 ; 'D'
000000000000c68a         db  0x0e ; '.'
000000000000c68b         db  0x30 ; '0'
000000000000c68c         db  0x83 ; '.'
000000000000c68d         db  0x06 ; '.'
000000000000c68e         db  0x02 ; '.'
000000000000c68f         db  0x8a ; '.'
000000000000c690         db  0x0a ; '.'
000000000000c691         db  0x0e ; '.'
000000000000c692         db  0x28 ; '('
000000000000c693         db  0x41 ; 'A'
000000000000c694         db  0x0e ; '.'
000000000000c695         db  0x20 ; ' '
000000000000c696         db  0x42 ; 'B'
000000000000c697         db  0x0e ; '.'
000000000000c698         db  0x18 ; '.'
000000000000c699         db  0x42 ; 'B'
000000000000c69a         db  0x0e ; '.'
000000000000c69b         db  0x10 ; '.'
000000000000c69c         db  0x42 ; 'B'
000000000000c69d         db  0x0e ; '.'
000000000000c69e         db  0x08 ; '.'
000000000000c69f         db  0x44 ; 'D'
000000000000c6a0         db  0x0b ; '.'
000000000000c6a1         db  0x41 ; 'A'
000000000000c6a2         db  0x0a ; '.'
000000000000c6a3         db  0x0e ; '.'
000000000000c6a4         db  0x28 ; '('
000000000000c6a5         db  0x45 ; 'E'
000000000000c6a6         db  0x0e ; '.'
000000000000c6a7         db  0x20 ; ' '
000000000000c6a8         db  0x42 ; 'B'
000000000000c6a9         db  0x0e ; '.'
000000000000c6aa         db  0x18 ; '.'
000000000000c6ab         db  0x42 ; 'B'
000000000000c6ac         db  0x0e ; '.'
000000000000c6ad         db  0x10 ; '.'
000000000000c6ae         db  0x42 ; 'B'
000000000000c6af         db  0x0e ; '.'
000000000000c6b0         db  0x08 ; '.'
000000000000c6b1         db  0x44 ; 'D'
000000000000c6b2         db  0x0b ; '.'
000000000000c6b3         db  0x41 ; 'A'
000000000000c6b4         db  0x0a ; '.'
000000000000c6b5         db  0x0e ; '.'
000000000000c6b6         db  0x28 ; '('
000000000000c6b7         db  0x43 ; 'C'
000000000000c6b8         db  0x0e ; '.'
000000000000c6b9         db  0x20 ; ' '
000000000000c6ba         db  0x42 ; 'B'
000000000000c6bb         db  0x0e ; '.'
000000000000c6bc         db  0x18 ; '.'
000000000000c6bd         db  0x42 ; 'B'
000000000000c6be         db  0x0e ; '.'
000000000000c6bf         db  0x10 ; '.'
000000000000c6c0         db  0x42 ; 'B'
000000000000c6c1         db  0x0e ; '.'
000000000000c6c2         db  0x08 ; '.'
000000000000c6c3         db  0x46 ; 'F'
000000000000c6c4         db  0x0b ; '.'
000000000000c6c5         db  0x00 ; '.'
000000000000c6c6         db  0x00 ; '.'
000000000000c6c7         db  0x00 ; '.'
000000000000c6c8         dd         0x0000003c                                  ; Length of the record
000000000000c6cc         dd         0x00000e04                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c6d0         db         0x10, 0xb2, 2 dup (0xff)                    ; begin 0x78e0
000000000000c6d4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x7963)
000000000000c6d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6d9         db  0x42 ; 'B'
000000000000c6da         db  0x0e ; '.'
000000000000c6db         db  0x10 ; '.'
000000000000c6dc         db  0x8d ; '.'
000000000000c6dd         db  0x02 ; '.'
000000000000c6de         db  0x42 ; 'B'
000000000000c6df         db  0x0e ; '.'
000000000000c6e0         db  0x18 ; '.'
000000000000c6e1         db  0x8c ; '.'
000000000000c6e2         db  0x03 ; '.'
000000000000c6e3         db  0x44 ; 'D'
000000000000c6e4         db  0x0e ; '.'
000000000000c6e5         db  0x20 ; ' '
000000000000c6e6         db  0x86 ; '.'
000000000000c6e7         db  0x04 ; '.'
000000000000c6e8         db  0x41 ; 'A'
000000000000c6e9         db  0x0e ; '.'
000000000000c6ea         db  0x28 ; '('
000000000000c6eb         db  0x83 ; '.'
000000000000c6ec         db  0x05 ; '.'
000000000000c6ed         db  0x4a ; 'J'
000000000000c6ee         db  0x0e ; '.'
000000000000c6ef         db  0x40 ; '@'
000000000000c6f0         db  0x02 ; '.'
000000000000c6f1         db  0x64 ; 'd'
000000000000c6f2         db  0x0a ; '.'
000000000000c6f3         db  0x0e ; '.'
000000000000c6f4         db  0x28 ; '('
000000000000c6f5         db  0x41 ; 'A'
000000000000c6f6         db  0x0e ; '.'
000000000000c6f7         db  0x20 ; ' '
000000000000c6f8         db  0x41 ; 'A'
000000000000c6f9         db  0x0e ; '.'
000000000000c6fa         db  0x18 ; '.'
000000000000c6fb         db  0x42 ; 'B'
000000000000c6fc         db  0x0e ; '.'
000000000000c6fd         db  0x10 ; '.'
000000000000c6fe         db  0x42 ; 'B'
000000000000c6ff         db  0x0e ; '.'
000000000000c700         db  0x08 ; '.'
000000000000c701         db  0x41 ; 'A'
000000000000c702         db  0x0b ; '.'
000000000000c703         db  0x00 ; '.'
000000000000c704         db  0x00 ; '.'
000000000000c705         db  0x00 ; '.'
000000000000c706         db  0x00 ; '.'
000000000000c707         db  0x00 ; '.'
000000000000c708         dd         0x00000038                                  ; Length of the record
000000000000c70c         dd         0x00000e44                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c710         db         0x60, 0xb2, 2 dup (0xff)                    ; begin 0x7970
000000000000c714         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x7a86)
000000000000c718         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c719         db  0x42 ; 'B'
000000000000c71a         db  0x0e ; '.'
000000000000c71b         db  0x10 ; '.'
000000000000c71c         db  0x8d ; '.'
000000000000c71d         db  0x02 ; '.'
000000000000c71e         db  0x42 ; 'B'
000000000000c71f         db  0x0e ; '.'
000000000000c720         db  0x18 ; '.'
000000000000c721         db  0x8c ; '.'
000000000000c722         db  0x03 ; '.'
000000000000c723         db  0x44 ; 'D'
000000000000c724         db  0x0e ; '.'
000000000000c725         db  0x20 ; ' '
000000000000c726         db  0x86 ; '.'
000000000000c727         db  0x04 ; '.'
000000000000c728         db  0x41 ; 'A'
000000000000c729         db  0x0e ; '.'
000000000000c72a         db  0x28 ; '('
000000000000c72b         db  0x83 ; '.'
000000000000c72c         db  0x05 ; '.'
000000000000c72d         db  0x49 ; 'I'
000000000000c72e         db  0x0e ; '.'
000000000000c72f         db  0x90 ; '.'
000000000000c730         db  0x20 ; ' '
000000000000c731         db  0x02 ; '.'
000000000000c732         db  0xc4 ; '.'
000000000000c733         db  0x0a ; '.'
000000000000c734         db  0x0e ; '.'
000000000000c735         db  0x28 ; '('
000000000000c736         db  0x41 ; 'A'
000000000000c737         db  0x0e ; '.'
000000000000c738         db  0x20 ; ' '
000000000000c739         db  0x41 ; 'A'
000000000000c73a         db  0x0e ; '.'
000000000000c73b         db  0x18 ; '.'
000000000000c73c         db  0x42 ; 'B'
000000000000c73d         db  0x0e ; '.'
000000000000c73e         db  0x10 ; '.'
000000000000c73f         db  0x42 ; 'B'
000000000000c740         db  0x0e ; '.'
000000000000c741         db  0x08 ; '.'
000000000000c742         db  0x44 ; 'D'
000000000000c743         db  0x0b ; '.'
000000000000c744         dd         0x00000010                                  ; Length of the record
000000000000c748         dd         0x00000e80                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c74c         db         0x44, 0xb3, 2 dup (0xff)                    ; begin 0x7a90
000000000000c750         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x7a95)
000000000000c754         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c755         align      8
000000000000c758         dd         0x00000010                                  ; Length of the record
000000000000c75c         dd         0x00000e94                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c760         db         0x40, 0xb3, 2 dup (0xff)                    ; begin 0x7aa0
000000000000c764         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x7aa5)
000000000000c768         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c769         align      4
000000000000c76c         dd         0x00000010                                  ; Length of the record
000000000000c770         dd         0x00000ea8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c774         db         0x3c, 0xb3, 2 dup (0xff)                    ; begin 0x7ab0
000000000000c778         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x7ab5)
000000000000c77c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c77d         align      128
000000000000c780         dd         0x0000004c                                  ; Length of the record
000000000000c784         dd         0x00000ebc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c788         db         0x38, 0xb3, 2 dup (0xff)                    ; begin 0x7ac0
000000000000c78c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x7b3d)
000000000000c790         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c791         db  0x42 ; 'B'
000000000000c792         db  0x0e ; '.'
000000000000c793         db  0x10 ; '.'
000000000000c794         db  0x8c ; '.'
000000000000c795         db  0x02 ; '.'
000000000000c796         db  0x41 ; 'A'
000000000000c797         db  0x0e ; '.'
000000000000c798         db  0x18 ; '.'
000000000000c799         db  0x86 ; '.'
000000000000c79a         db  0x03 ; '.'
000000000000c79b         db  0x44 ; 'D'
000000000000c79c         db  0x0e ; '.'
000000000000c79d         db  0x20 ; ' '
000000000000c79e         db  0x83 ; '.'
000000000000c79f         db  0x04 ; '.'
000000000000c7a0         db  0x69 ; 'i'
000000000000c7a1         db  0x0a ; '.'
000000000000c7a2         db  0x0e ; '.'
000000000000c7a3         db  0x18 ; '.'
000000000000c7a4         db  0x41 ; 'A'
000000000000c7a5         db  0x0e ; '.'
000000000000c7a6         db  0x10 ; '.'
000000000000c7a7         db  0x42 ; 'B'
000000000000c7a8         db  0x0e ; '.'
000000000000c7a9         db  0x08 ; '.'
000000000000c7aa         db  0x45 ; 'E'
000000000000c7ab         db  0x0b ; '.'
000000000000c7ac         db  0x55 ; 'U'
000000000000c7ad         db  0x0a ; '.'
000000000000c7ae         db  0x0e ; '.'
000000000000c7af         db  0x18 ; '.'
000000000000c7b0         db  0x41 ; 'A'
000000000000c7b1         db  0x0e ; '.'
000000000000c7b2         db  0x10 ; '.'
000000000000c7b3         db  0x42 ; 'B'
000000000000c7b4         db  0x0e ; '.'
000000000000c7b5         db  0x08 ; '.'
000000000000c7b6         db  0x48 ; 'H'
000000000000c7b7         db  0x0b ; '.'
000000000000c7b8         db  0x41 ; 'A'
000000000000c7b9         db  0x0a ; '.'
000000000000c7ba         db  0x0e ; '.'
000000000000c7bb         db  0x18 ; '.'
000000000000c7bc         db  0x46 ; 'F'
000000000000c7bd         db  0x0e ; '.'
000000000000c7be         db  0x10 ; '.'
000000000000c7bf         db  0x42 ; 'B'
000000000000c7c0         db  0x0e ; '.'
000000000000c7c1         db  0x08 ; '.'
000000000000c7c2         db  0x47 ; 'G'
000000000000c7c3         db  0x0b ; '.'
000000000000c7c4         db  0x49 ; 'I'
000000000000c7c5         db  0x0e ; '.'
000000000000c7c6         db  0x18 ; '.'
000000000000c7c7         db  0x41 ; 'A'
000000000000c7c8         db  0x0e ; '.'
000000000000c7c9         db  0x10 ; '.'
000000000000c7ca         db  0x42 ; 'B'
000000000000c7cb         db  0x0e ; '.'
000000000000c7cc         db  0x08 ; '.'
000000000000c7cd         db  0x00 ; '.'
000000000000c7ce         db  0x00 ; '.'
000000000000c7cf         db  0x00 ; '.'
000000000000c7d0         dd         0x00000010                                  ; Length of the record
000000000000c7d4         dd         0x00000f0c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c7d8         db         0x68, 0xb3, 2 dup (0xff)                    ; begin 0x7b40
000000000000c7dc         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x7b50)
000000000000c7e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7e1         align      4
000000000000c7e4         dd         0x00000018                                  ; Length of the record
000000000000c7e8         dd         0x00000f20                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c7ec         db         0x64, 0xb3, 2 dup (0xff)                    ; begin 0x7b50
000000000000c7f0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x7bda)
000000000000c7f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7f5         db  0x02 ; '.'
000000000000c7f6         db  0x80 ; '.'
000000000000c7f7         db  0x0e ; '.'
000000000000c7f8         db  0x10 ; '.'
000000000000c7f9         db  0x00 ; '.'
000000000000c7fa         db  0x00 ; '.'
000000000000c7fb         db  0x00 ; '.'
000000000000c7fc         db  0x00 ; '.'
000000000000c7fd         db  0x00 ; '.'
000000000000c7fe         db  0x00 ; '.'
000000000000c7ff         db  0x00 ; '.'
000000000000c800         dd         0x0000001c                                  ; Length of the record
000000000000c804         dd         0x00000f3c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c808         db         0xd8, 0xb3, 2 dup (0xff)                    ; begin 0x7be0
000000000000c80c         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x7c4e)
000000000000c810         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c811         db  0x44 ; 'D'
000000000000c812         db  0x0e ; '.'
000000000000c813         db  0x60 ; '`'
000000000000c814         db  0x7f ; '.'
000000000000c815         db  0x0a ; '.'
000000000000c816         db  0x0e ; '.'
000000000000c817         db  0x08 ; '.'
000000000000c818         db  0x45 ; 'E'
000000000000c819         db  0x0b ; '.'
000000000000c81a         db  0x00 ; '.'
000000000000c81b         db  0x00 ; '.'
000000000000c81c         db  0x00 ; '.'
000000000000c81d         db  0x00 ; '.'
000000000000c81e         db  0x00 ; '.'
000000000000c81f         db  0x00 ; '.'
000000000000c820         dd         0x0000001c                                  ; Length of the record
000000000000c824         dd         0x00000f5c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c828         db         0x28, 0xb4, 2 dup (0xff)                    ; begin 0x7c50
000000000000c82c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x7cb0)
000000000000c830         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c831         db  0x44 ; 'D'
000000000000c832         db  0x0e ; '.'
000000000000c833         db  0x10 ; '.'
000000000000c834         db  0x75 ; 'u'
000000000000c835         db  0x0a ; '.'
000000000000c836         db  0x0e ; '.'
000000000000c837         db  0x08 ; '.'
000000000000c838         db  0x47 ; 'G'
000000000000c839         db  0x0b ; '.'
000000000000c83a         db  0x5f ; '_'
000000000000c83b         db  0x0e ; '.'
000000000000c83c         db  0x08 ; '.'
000000000000c83d         db  0x00 ; '.'
000000000000c83e         db  0x00 ; '.'
000000000000c83f         db  0x00 ; '.'
000000000000c840         dd         0x00000010                                  ; Length of the record
000000000000c844         dd         0x00000f7c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c848         db         0x68, 0xb4, 2 dup (0xff)                    ; begin 0x7cb0
000000000000c84c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x7d43)
000000000000c850         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c851         align      4
000000000000c854         dd         0x00000010                                  ; Length of the record
000000000000c858         dd         0x00000f90                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c85c         db         0xf4, 0xb4, 2 dup (0xff)                    ; begin 0x7d50
000000000000c860         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x7d60)
000000000000c864         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c865         align      8
000000000000c868         dd         0x00000010                                  ; Length of the record
000000000000c86c         dd         0x00000fa4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c870         db         0xf0, 0xb4, 2 dup (0xff)                    ; begin 0x7d60
000000000000c874         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x7d67)
000000000000c878         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c879         align      4
000000000000c87c         dd         0x00000018                                  ; Length of the record
000000000000c880         dd         0x00000fb8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c884         db         0xec, 0xb4, 2 dup (0xff)                    ; begin 0x7d70
000000000000c888         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x7d92)
000000000000c88c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c88d         db  0x41 ; 'A'
000000000000c88e         db  0x0e ; '.'
000000000000c88f         db  0x10 ; '.'
000000000000c890         db  0x83 ; '.'
000000000000c891         db  0x02 ; '.'
000000000000c892         db  0x5b ; '['
000000000000c893         db  0x0a ; '.'
000000000000c894         db  0x0e ; '.'
000000000000c895         db  0x08 ; '.'
000000000000c896         db  0x41 ; 'A'
000000000000c897         db  0x0b ; '.'
000000000000c898         dd         0x0000005c                                  ; Length of the record
000000000000c89c         dd         0x00000fd4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c8a0         db         0x00, 0xb5, 2 dup (0xff)                    ; begin 0x7da0
000000000000c8a4         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x7ebe)
000000000000c8a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8a9         db  0x42 ; 'B'
000000000000c8aa         db  0x0e ; '.'
000000000000c8ab         db  0x10 ; '.'
000000000000c8ac         db  0x8e ; '.'
000000000000c8ad         db  0x02 ; '.'
000000000000c8ae         db  0x42 ; 'B'
000000000000c8af         db  0x0e ; '.'
000000000000c8b0         db  0x18 ; '.'
000000000000c8b1         db  0x8d ; '.'
000000000000c8b2         db  0x03 ; '.'
000000000000c8b3         db  0x45 ; 'E'
000000000000c8b4         db  0x0e ; '.'
000000000000c8b5         db  0x20 ; ' '
000000000000c8b6         db  0x8c ; '.'
000000000000c8b7         db  0x04 ; '.'
000000000000c8b8         db  0x41 ; 'A'
000000000000c8b9         db  0x0e ; '.'
000000000000c8ba         db  0x28 ; '('
000000000000c8bb         db  0x86 ; '.'
000000000000c8bc         db  0x05 ; '.'
000000000000c8bd         db  0x44 ; 'D'
000000000000c8be         db  0x0e ; '.'
000000000000c8bf         db  0x30 ; '0'
000000000000c8c0         db  0x83 ; '.'
000000000000c8c1         db  0x06 ; '.'
000000000000c8c2         db  0x02 ; '.'
000000000000c8c3         db  0xa1 ; '.'
000000000000c8c4         db  0x0a ; '.'
000000000000c8c5         db  0x0e ; '.'
000000000000c8c6         db  0x28 ; '('
000000000000c8c7         db  0x44 ; 'D'
000000000000c8c8         db  0x0e ; '.'
000000000000c8c9         db  0x20 ; ' '
000000000000c8ca         db  0x42 ; 'B'
000000000000c8cb         db  0x0e ; '.'
000000000000c8cc         db  0x18 ; '.'
000000000000c8cd         db  0x42 ; 'B'
000000000000c8ce         db  0x0e ; '.'
000000000000c8cf         db  0x10 ; '.'
000000000000c8d0         db  0x42 ; 'B'
000000000000c8d1         db  0x0e ; '.'
000000000000c8d2         db  0x08 ; '.'
000000000000c8d3         db  0x47 ; 'G'
000000000000c8d4         db  0x0b ; '.'
000000000000c8d5         db  0x71 ; 'q'
000000000000c8d6         db  0x0a ; '.'
000000000000c8d7         db  0x0e ; '.'
000000000000c8d8         db  0x28 ; '('
000000000000c8d9         db  0x41 ; 'A'
000000000000c8da         db  0x0e ; '.'
000000000000c8db         db  0x20 ; ' '
000000000000c8dc         db  0x42 ; 'B'
000000000000c8dd         db  0x0e ; '.'
000000000000c8de         db  0x18 ; '.'
000000000000c8df         db  0x42 ; 'B'
000000000000c8e0         db  0x0e ; '.'
000000000000c8e1         db  0x10 ; '.'
000000000000c8e2         db  0x42 ; 'B'
000000000000c8e3         db  0x0e ; '.'
000000000000c8e4         db  0x08 ; '.'
000000000000c8e5         db  0x48 ; 'H'
000000000000c8e6         db  0x0b ; '.'
000000000000c8e7         db  0x53 ; 'S'
000000000000c8e8         db  0x0e ; '.'
000000000000c8e9         db  0x28 ; '('
000000000000c8ea         db  0x44 ; 'D'
000000000000c8eb         db  0x0e ; '.'
000000000000c8ec         db  0x20 ; ' '
000000000000c8ed         db  0x42 ; 'B'
000000000000c8ee         db  0x0e ; '.'
000000000000c8ef         db  0x18 ; '.'
000000000000c8f0         db  0x42 ; 'B'
000000000000c8f1         db  0x0e ; '.'
000000000000c8f2         db  0x10 ; '.'
000000000000c8f3         db  0x42 ; 'B'
000000000000c8f4         db  0x0e ; '.'
000000000000c8f5         db  0x08 ; '.'
000000000000c8f6         db  0x00 ; '.'
000000000000c8f7         db  0x00 ; '.'
000000000000c8f8         dd         0x00000010                                  ; Length of the record
000000000000c8fc         dd         0x00001034                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c900         db         0xc0, 0xb5, 2 dup (0xff)                    ; begin 0x7ec0
000000000000c904         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x7f37)
000000000000c908         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c909         align      4
000000000000c90c         dd         0x0000005c                                  ; Length of the record
000000000000c910         dd         0x00001048                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c914         db         0x2c, 0xb6, 2 dup (0xff)                    ; begin 0x7f40
000000000000c918         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x8080)
000000000000c91c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c91d         db  0x42 ; 'B'
000000000000c91e         db  0x0e ; '.'
000000000000c91f         db  0x10 ; '.'
000000000000c920         db  0x8f ; '.'
000000000000c921         db  0x02 ; '.'
000000000000c922         db  0x42 ; 'B'
000000000000c923         db  0x0e ; '.'
000000000000c924         db  0x18 ; '.'
000000000000c925         db  0x8e ; '.'
000000000000c926         db  0x03 ; '.'
000000000000c927         db  0x42 ; 'B'
000000000000c928         db  0x0e ; '.'
000000000000c929         db  0x20 ; ' '
000000000000c92a         db  0x8d ; '.'
000000000000c92b         db  0x04 ; '.'
000000000000c92c         db  0x42 ; 'B'
000000000000c92d         db  0x0e ; '.'
000000000000c92e         db  0x28 ; '('
000000000000c92f         db  0x8c ; '.'
000000000000c930         db  0x05 ; '.'
000000000000c931         db  0x41 ; 'A'
000000000000c932         db  0x0e ; '.'
000000000000c933         db  0x30 ; '0'
000000000000c934         db  0x86 ; '.'
000000000000c935         db  0x06 ; '.'
000000000000c936         db  0x41 ; 'A'
000000000000c937         db  0x0e ; '.'
000000000000c938         db  0x38 ; '8'
000000000000c939         db  0x83 ; '.'
000000000000c93a         db  0x07 ; '.'
000000000000c93b         db  0x44 ; 'D'
000000000000c93c         db  0x0e ; '.'
000000000000c93d         db  0x40 ; '@'
000000000000c93e         db  0x02 ; '.'
000000000000c93f         db  0xee ; '.'
000000000000c940         db  0x0a ; '.'
000000000000c941         db  0x0e ; '.'
000000000000c942         db  0x38 ; '8'
000000000000c943         db  0x46 ; 'F'
000000000000c944         db  0x0e ; '.'
000000000000c945         db  0x30 ; '0'
000000000000c946         db  0x41 ; 'A'
000000000000c947         db  0x0e ; '.'
000000000000c948         db  0x28 ; '('
000000000000c949         db  0x42 ; 'B'
000000000000c94a         db  0x0e ; '.'
000000000000c94b         db  0x20 ; ' '
000000000000c94c         db  0x42 ; 'B'
000000000000c94d         db  0x0e ; '.'
000000000000c94e         db  0x18 ; '.'
000000000000c94f         db  0x42 ; 'B'
000000000000c950         db  0x0e ; '.'
000000000000c951         db  0x10 ; '.'
000000000000c952         db  0x42 ; 'B'
000000000000c953         db  0x0e ; '.'
000000000000c954         db  0x08 ; '.'
000000000000c955         db  0x45 ; 'E'
000000000000c956         db  0x0b ; '.'
000000000000c957         db  0x63 ; 'c'
000000000000c958         db  0x0e ; '.'
000000000000c959         db  0x38 ; '8'
000000000000c95a         db  0x43 ; 'C'
000000000000c95b         db  0x0e ; '.'
000000000000c95c         db  0x30 ; '0'
000000000000c95d         db  0x41 ; 'A'
000000000000c95e         db  0x0e ; '.'
000000000000c95f         db  0x28 ; '('
000000000000c960         db  0x42 ; 'B'
000000000000c961         db  0x0e ; '.'
000000000000c962         db  0x20 ; ' '
000000000000c963         db  0x42 ; 'B'
000000000000c964         db  0x0e ; '.'
000000000000c965         db  0x18 ; '.'
000000000000c966         db  0x42 ; 'B'
000000000000c967         db  0x0e ; '.'
000000000000c968         db  0x10 ; '.'
000000000000c969         db  0x42 ; 'B'
000000000000c96a         db  0x0e ; '.'
000000000000c96b         db  0x08 ; '.'
000000000000c96c         dd         0x00000010                                  ; Length of the record
000000000000c970         dd         0x000010a8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c974         db         0x0c, 0xb7, 2 dup (0xff)                    ; begin 0x8080
000000000000c978         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8085)
000000000000c97c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c97d         align      128
000000000000c980         dd         0x00000010                                  ; Length of the record
000000000000c984         dd         0x000010bc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c988         db         0x08, 0xb7, 2 dup (0xff)                    ; begin 0x8090
000000000000c98c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8095)
000000000000c990         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c991         align      4
000000000000c994         dd         0x00000010                                  ; Length of the record
000000000000c998         dd         0x000010d0                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c99c         db         0x04, 0xb7, 2 dup (0xff)                    ; begin 0x80a0
000000000000c9a0         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x80a5)
000000000000c9a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9a5         align      8
000000000000c9a8         dd         0x00000010                                  ; Length of the record
000000000000c9ac         dd         0x000010e4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c9b0         db         0x00, 0xb7, 2 dup (0xff)                    ; begin 0x80b0
000000000000c9b4         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x80f9)
000000000000c9b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9b9         align      4
000000000000c9bc         dd         0x00000010                                  ; Length of the record
000000000000c9c0         dd         0x000010f8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c9c4         db         0x3c, 0xb7, 2 dup (0xff)                    ; begin 0x8100
000000000000c9c8         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x8158)
000000000000c9cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9cd         align      16
000000000000c9d0         dd         0x00000038                                  ; Length of the record
000000000000c9d4         dd         0x0000110c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000c9d8         db         0x88, 0xb7, 2 dup (0xff)                    ; begin 0x8160
000000000000c9dc         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x82a7)
000000000000c9e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c9e1         db  0x42 ; 'B'
000000000000c9e2         db  0x0e ; '.'
000000000000c9e3         db  0x10 ; '.'
000000000000c9e4         db  0x8d ; '.'
000000000000c9e5         db  0x02 ; '.'
000000000000c9e6         db  0x42 ; 'B'
000000000000c9e7         db  0x0e ; '.'
000000000000c9e8         db  0x18 ; '.'
000000000000c9e9         db  0x8c ; '.'
000000000000c9ea         db  0x03 ; '.'
000000000000c9eb         db  0x44 ; 'D'
000000000000c9ec         db  0x0e ; '.'
000000000000c9ed         db  0x20 ; ' '
000000000000c9ee         db  0x86 ; '.'
000000000000c9ef         db  0x04 ; '.'
000000000000c9f0         db  0x41 ; 'A'
000000000000c9f1         db  0x0e ; '.'
000000000000c9f2         db  0x28 ; '('
000000000000c9f3         db  0x83 ; '.'
000000000000c9f4         db  0x05 ; '.'
000000000000c9f5         db  0x46 ; 'F'
000000000000c9f6         db  0x0e ; '.'
000000000000c9f7         db  0x30 ; '0'
000000000000c9f8         db  0x02 ; '.'
000000000000c9f9         db  0xcd ; '.'
000000000000c9fa         db  0x0a ; '.'
000000000000c9fb         db  0x0e ; '.'
000000000000c9fc         db  0x28 ; '('
000000000000c9fd         db  0x47 ; 'G'
000000000000c9fe         db  0x0e ; '.'
000000000000c9ff         db  0x20 ; ' '
000000000000ca00         db  0x41 ; 'A'
000000000000ca01         db  0x0e ; '.'
000000000000ca02         db  0x18 ; '.'
000000000000ca03         db  0x42 ; 'B'
000000000000ca04         db  0x0e ; '.'
000000000000ca05         db  0x10 ; '.'
000000000000ca06         db  0x42 ; 'B'
000000000000ca07         db  0x0e ; '.'
000000000000ca08         db  0x08 ; '.'
000000000000ca09         db  0x58 ; 'X'
000000000000ca0a         db  0x0b ; '.'
000000000000ca0b         db  0x00 ; '.'
000000000000ca0c         dd         0x00000034                                  ; Length of the record
000000000000ca10         dd         0x00001148                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ca14         db         0x9c, 0xb8, 2 dup (0xff)                    ; begin 0x82b0
000000000000ca18         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x830b)
000000000000ca1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca1d         db  0x42 ; 'B'
000000000000ca1e         db  0x0e ; '.'
000000000000ca1f         db  0x10 ; '.'
000000000000ca20         db  0x8c ; '.'
000000000000ca21         db  0x02 ; '.'
000000000000ca22         db  0x41 ; 'A'
000000000000ca23         db  0x0e ; '.'
000000000000ca24         db  0x18 ; '.'
000000000000ca25         db  0x86 ; '.'
000000000000ca26         db  0x03 ; '.'
000000000000ca27         db  0x44 ; 'D'
000000000000ca28         db  0x0e ; '.'
000000000000ca29         db  0x20 ; ' '
000000000000ca2a         db  0x83 ; '.'
000000000000ca2b         db  0x04 ; '.'
000000000000ca2c         db  0x79 ; 'y'
000000000000ca2d         db  0x0a ; '.'
000000000000ca2e         db  0x0e ; '.'
000000000000ca2f         db  0x18 ; '.'
000000000000ca30         db  0x44 ; 'D'
000000000000ca31         db  0x0e ; '.'
000000000000ca32         db  0x10 ; '.'
000000000000ca33         db  0x42 ; 'B'
000000000000ca34         db  0x0e ; '.'
000000000000ca35         db  0x08 ; '.'
000000000000ca36         db  0x4a ; 'J'
000000000000ca37         db  0x0b ; '.'
000000000000ca38         db  0x44 ; 'D'
000000000000ca39         db  0x0e ; '.'
000000000000ca3a         db  0x18 ; '.'
000000000000ca3b         db  0x41 ; 'A'
000000000000ca3c         db  0x0e ; '.'
000000000000ca3d         db  0x10 ; '.'
000000000000ca3e         db  0x45 ; 'E'
000000000000ca3f         db  0x0e ; '.'
000000000000ca40         db  0x08 ; '.'
000000000000ca41         db  0x00 ; '.'
000000000000ca42         db  0x00 ; '.'
000000000000ca43         db  0x00 ; '.'
000000000000ca44         dd         0x00000010                                  ; Length of the record
000000000000ca48         dd         0x00001180                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ca4c         db         0xc4, 0xb8, 2 dup (0xff)                    ; begin 0x8310
000000000000ca50         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x8351)
000000000000ca54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca55         db  0x7c ; '|'
000000000000ca56         db  0x0e ; '.'
000000000000ca57         db  0x10 ; '.'
000000000000ca58         dd         0x00000030                                  ; Length of the record
000000000000ca5c         dd         0x00001194                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ca60         db         0x00, 0xb9, 2 dup (0xff)                    ; begin 0x8360
000000000000ca64         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x83d2)
000000000000ca68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca69         db  0x41 ; 'A'
000000000000ca6a         db  0x0e ; '.'
000000000000ca6b         db  0x10 ; '.'
000000000000ca6c         db  0x86 ; '.'
000000000000ca6d         db  0x02 ; '.'
000000000000ca6e         db  0x41 ; 'A'
000000000000ca6f         db  0x0e ; '.'
000000000000ca70         db  0x18 ; '.'
000000000000ca71         db  0x83 ; '.'
000000000000ca72         db  0x03 ; '.'
000000000000ca73         db  0x4a ; 'J'
000000000000ca74         db  0x0e ; '.'
000000000000ca75         db  0x20 ; ' '
000000000000ca76         db  0x02 ; '.'
000000000000ca77         db  0x53 ; 'S'
000000000000ca78         db  0x0a ; '.'
000000000000ca79         db  0x0e ; '.'
000000000000ca7a         db  0x18 ; '.'
000000000000ca7b         db  0x41 ; 'A'
000000000000ca7c         db  0x0e ; '.'
000000000000ca7d         db  0x10 ; '.'
000000000000ca7e         db  0x41 ; 'A'
000000000000ca7f         db  0x0e ; '.'
000000000000ca80         db  0x08 ; '.'
000000000000ca81         db  0x47 ; 'G'
000000000000ca82         db  0x0b ; '.'
000000000000ca83         db  0x47 ; 'G'
000000000000ca84         db  0x0e ; '.'
000000000000ca85         db  0x18 ; '.'
000000000000ca86         db  0x41 ; 'A'
000000000000ca87         db  0x0e ; '.'
000000000000ca88         db  0x10 ; '.'
000000000000ca89         db  0x41 ; 'A'
000000000000ca8a         db  0x0e ; '.'
000000000000ca8b         db  0x08 ; '.'
000000000000ca8c         dd         0x00000010                                  ; Length of the record
000000000000ca90         dd         0x000011c8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ca94         db         0x4c, 0xb9, 2 dup (0xff)                    ; begin 0x83e0
000000000000ca98         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x8445)
000000000000ca9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ca9d         align      32
000000000000caa0         dd         0x00000048                                  ; Length of the record
000000000000caa4         dd         0x000011dc                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000caa8         db         0xa8, 0xb9, 2 dup (0xff)                    ; begin 0x8450
000000000000caac         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x84ba)
000000000000cab0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cab1         db  0x42 ; 'B'
000000000000cab2         db  0x0e ; '.'
000000000000cab3         db  0x10 ; '.'
000000000000cab4         db  0x8f ; '.'
000000000000cab5         db  0x02 ; '.'
000000000000cab6         db  0x42 ; 'B'
000000000000cab7         db  0x0e ; '.'
000000000000cab8         db  0x18 ; '.'
000000000000cab9         db  0x8e ; '.'
000000000000caba         db  0x03 ; '.'
000000000000cabb         db  0x42 ; 'B'
000000000000cabc         db  0x0e ; '.'
000000000000cabd         db  0x20 ; ' '
000000000000cabe         db  0x8d ; '.'
000000000000cabf         db  0x04 ; '.'
000000000000cac0         db  0x42 ; 'B'
000000000000cac1         db  0x0e ; '.'
000000000000cac2         db  0x28 ; '('
000000000000cac3         db  0x8c ; '.'
000000000000cac4         db  0x05 ; '.'
000000000000cac5         db  0x41 ; 'A'
000000000000cac6         db  0x0e ; '.'
000000000000cac7         db  0x30 ; '0'
000000000000cac8         db  0x86 ; '.'
000000000000cac9         db  0x06 ; '.'
000000000000caca         db  0x41 ; 'A'
000000000000cacb         db  0x0e ; '.'
000000000000cacc         db  0x38 ; '8'
000000000000cacd         db  0x83 ; '.'
000000000000cace         db  0x07 ; '.'
000000000000cacf         db  0x44 ; 'D'
000000000000cad0         db  0x0e ; '.'
000000000000cad1         db  0x40 ; '@'
000000000000cad2         db  0x02 ; '.'
000000000000cad3         db  0x4a ; 'J'
000000000000cad4         db  0x0a ; '.'
000000000000cad5         db  0x0e ; '.'
000000000000cad6         db  0x38 ; '8'
000000000000cad7         db  0x44 ; 'D'
000000000000cad8         db  0x0e ; '.'
000000000000cad9         db  0x30 ; '0'
000000000000cada         db  0x41 ; 'A'
000000000000cadb         db  0x0e ; '.'
000000000000cadc         db  0x28 ; '('
000000000000cadd         db  0x42 ; 'B'
000000000000cade         db  0x0e ; '.'
000000000000cadf         db  0x20 ; ' '
000000000000cae0         db  0x42 ; 'B'
000000000000cae1         db  0x0e ; '.'
000000000000cae2         db  0x18 ; '.'
000000000000cae3         db  0x42 ; 'B'
000000000000cae4         db  0x0e ; '.'
000000000000cae5         db  0x10 ; '.'
000000000000cae6         db  0x42 ; 'B'
000000000000cae7         db  0x0e ; '.'
000000000000cae8         db  0x08 ; '.'
000000000000cae9         db  0x41 ; 'A'
000000000000caea         db  0x0b ; '.'
000000000000caeb         db  0x00 ; '.'
000000000000caec         dd         0x00000010                                  ; Length of the record
000000000000caf0         dd         0x00001228                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000caf4         db         0xcc, 0xb9, 2 dup (0xff)                    ; begin 0x84c0
000000000000caf8         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x84f1)
000000000000cafc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cafd         align      256
000000000000cb00         dd         0x00000010                                  ; Length of the record
000000000000cb04         dd         0x0000123c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cb08         db         0xf8, 0xb9, 2 dup (0xff)                    ; begin 0x8500
000000000000cb0c         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x8520)
000000000000cb10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb11         align      4
000000000000cb14         dd         0x00000048                                  ; Length of the record
000000000000cb18         dd         0x00001250                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cb1c         db         0x04, 0xba, 2 dup (0xff)                    ; begin 0x8520
000000000000cb20         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x86d4)
000000000000cb24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb25         db  0x42 ; 'B'
000000000000cb26         db  0x0e ; '.'
000000000000cb27         db  0x10 ; '.'
000000000000cb28         db  0x8f ; '.'
000000000000cb29         db  0x02 ; '.'
000000000000cb2a         db  0x42 ; 'B'
000000000000cb2b         db  0x0e ; '.'
000000000000cb2c         db  0x18 ; '.'
000000000000cb2d         db  0x8e ; '.'
000000000000cb2e         db  0x03 ; '.'
000000000000cb2f         db  0x49 ; 'I'
000000000000cb30         db  0x0e ; '.'
000000000000cb31         db  0x20 ; ' '
000000000000cb32         db  0x8d ; '.'
000000000000cb33         db  0x04 ; '.'
000000000000cb34         db  0x42 ; 'B'
000000000000cb35         db  0x0e ; '.'
000000000000cb36         db  0x28 ; '('
000000000000cb37         db  0x8c ; '.'
000000000000cb38         db  0x05 ; '.'
000000000000cb39         db  0x44 ; 'D'
000000000000cb3a         db  0x0e ; '.'
000000000000cb3b         db  0x30 ; '0'
000000000000cb3c         db  0x86 ; '.'
000000000000cb3d         db  0x06 ; '.'
000000000000cb3e         db  0x41 ; 'A'
000000000000cb3f         db  0x0e ; '.'
000000000000cb40         db  0x38 ; '8'
000000000000cb41         db  0x83 ; '.'
000000000000cb42         db  0x07 ; '.'
000000000000cb43         db  0x52 ; 'R'
000000000000cb44         db  0x0e ; '.'
000000000000cb45         db  0x40 ; '@'
000000000000cb46         db  0x02 ; '.'
000000000000cb47         db  0xd8 ; '.'
000000000000cb48         db  0x0a ; '.'
000000000000cb49         db  0x0e ; '.'
000000000000cb4a         db  0x38 ; '8'
000000000000cb4b         db  0x44 ; 'D'
000000000000cb4c         db  0x0e ; '.'
000000000000cb4d         db  0x30 ; '0'
000000000000cb4e         db  0x41 ; 'A'
000000000000cb4f         db  0x0e ; '.'
000000000000cb50         db  0x28 ; '('
000000000000cb51         db  0x42 ; 'B'
000000000000cb52         db  0x0e ; '.'
000000000000cb53         db  0x20 ; ' '
000000000000cb54         db  0x42 ; 'B'
000000000000cb55         db  0x0e ; '.'
000000000000cb56         db  0x18 ; '.'
000000000000cb57         db  0x42 ; 'B'
000000000000cb58         db  0x0e ; '.'
000000000000cb59         db  0x10 ; '.'
000000000000cb5a         db  0x42 ; 'B'
000000000000cb5b         db  0x0e ; '.'
000000000000cb5c         db  0x08 ; '.'
000000000000cb5d         db  0x45 ; 'E'
000000000000cb5e         db  0x0b ; '.'
000000000000cb5f         db  0x00 ; '.'
000000000000cb60         dd         0x00000028                                  ; Length of the record
000000000000cb64         dd         0x0000129c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cb68         db         0x78, 0xbb, 2 dup (0xff)                    ; begin 0x86e0
000000000000cb6c         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x8770)
000000000000cb70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb71         db  0x42 ; 'B'
000000000000cb72         db  0x0e ; '.'
000000000000cb73         db  0x10 ; '.'
000000000000cb74         db  0x8c ; '.'
000000000000cb75         db  0x02 ; '.'
000000000000cb76         db  0x41 ; 'A'
000000000000cb77         db  0x0e ; '.'
000000000000cb78         db  0x18 ; '.'
000000000000cb79         db  0x86 ; '.'
000000000000cb7a         db  0x03 ; '.'
000000000000cb7b         db  0x44 ; 'D'
000000000000cb7c         db  0x0e ; '.'
000000000000cb7d         db  0x20 ; ' '
000000000000cb7e         db  0x83 ; '.'
000000000000cb7f         db  0x04 ; '.'
000000000000cb80         db  0x02 ; '.'
000000000000cb81         db  0x85 ; '.'
000000000000cb82         db  0x0e ; '.'
000000000000cb83         db  0x18 ; '.'
000000000000cb84         db  0x41 ; 'A'
000000000000cb85         db  0x0e ; '.'
000000000000cb86         db  0x10 ; '.'
000000000000cb87         db  0x42 ; 'B'
000000000000cb88         db  0x0e ; '.'
000000000000cb89         db  0x08 ; '.'
000000000000cb8a         db  0x00 ; '.'
000000000000cb8b         db  0x00 ; '.'
000000000000cb8c         dd         0x00000028                                  ; Length of the record
000000000000cb90         dd         0x000012c8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cb94         db         0xdc, 0xbb, 2 dup (0xff)                    ; begin 0x8770
000000000000cb98         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x8846)
000000000000cb9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cb9d         db  0x42 ; 'B'
000000000000cb9e         db  0x0e ; '.'
000000000000cb9f         db  0x10 ; '.'
000000000000cba0         db  0x8c ; '.'
000000000000cba1         db  0x02 ; '.'
000000000000cba2         db  0x41 ; 'A'
000000000000cba3         db  0x0e ; '.'
000000000000cba4         db  0x18 ; '.'
000000000000cba5         db  0x86 ; '.'
000000000000cba6         db  0x03 ; '.'
000000000000cba7         db  0x44 ; 'D'
000000000000cba8         db  0x0e ; '.'
000000000000cba9         db  0x20 ; ' '
000000000000cbaa         db  0x83 ; '.'
000000000000cbab         db  0x04 ; '.'
000000000000cbac         db  0x02 ; '.'
000000000000cbad         db  0xc4 ; '.'
000000000000cbae         db  0x0e ; '.'
000000000000cbaf         db  0x18 ; '.'
000000000000cbb0         db  0x44 ; 'D'
000000000000cbb1         db  0x0e ; '.'
000000000000cbb2         db  0x10 ; '.'
000000000000cbb3         db  0x42 ; 'B'
000000000000cbb4         db  0x0e ; '.'
000000000000cbb5         db  0x08 ; '.'
000000000000cbb6         db  0x00 ; '.'
000000000000cbb7         db  0x00 ; '.'
000000000000cbb8         dd         0x00000034                                  ; Length of the record
000000000000cbbc         dd         0x000012f4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cbc0         db         0x90, 0xbc, 2 dup (0xff)                    ; begin 0x8850
000000000000cbc4         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x8a8e)
000000000000cbc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cbc9         db  0x42 ; 'B'
000000000000cbca         db  0x0e ; '.'
000000000000cbcb         db  0x10 ; '.'
000000000000cbcc         db  0x8c ; '.'
000000000000cbcd         db  0x02 ; '.'
000000000000cbce         db  0x41 ; 'A'
000000000000cbcf         db  0x0e ; '.'
000000000000cbd0         db  0x18 ; '.'
000000000000cbd1         db  0x86 ; '.'
000000000000cbd2         db  0x03 ; '.'
000000000000cbd3         db  0x44 ; 'D'
000000000000cbd4         db  0x0e ; '.'
000000000000cbd5         db  0x20 ; ' '
000000000000cbd6         db  0x83 ; '.'
000000000000cbd7         db  0x04 ; '.'
000000000000cbd8         db  0x44 ; 'D'
000000000000cbd9         db  0x0e ; '.'
000000000000cbda         db  0x80 ; '.'
000000000000cbdb         db  0x01 ; '.'
000000000000cbdc         db  0x03 ; '.'
000000000000cbdd         db  0x91 ; '.'
000000000000cbde         db  0x01 ; '.'
000000000000cbdf         db  0x0a ; '.'
000000000000cbe0         db  0x0e ; '.'
000000000000cbe1         db  0x20 ; ' '
000000000000cbe2         db  0x41 ; 'A'
000000000000cbe3         db  0x0e ; '.'
000000000000cbe4         db  0x18 ; '.'
000000000000cbe5         db  0x41 ; 'A'
000000000000cbe6         db  0x0e ; '.'
000000000000cbe7         db  0x10 ; '.'
000000000000cbe8         db  0x42 ; 'B'
000000000000cbe9         db  0x0e ; '.'
000000000000cbea         db  0x08 ; '.'
000000000000cbeb         db  0x48 ; 'H'
000000000000cbec         db  0x0b ; '.'
000000000000cbed         db  0x00 ; '.'
000000000000cbee         db  0x00 ; '.'
000000000000cbef         db  0x00 ; '.'
000000000000cbf0         dd         0x00000038                                  ; Length of the record
000000000000cbf4         dd         0x0000132c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cbf8         db         0x98, 0xbe, 2 dup (0xff)                    ; begin 0x8a90
000000000000cbfc         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x8d14)
000000000000cc00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc01         db  0x42 ; 'B'
000000000000cc02         db  0x0e ; '.'
000000000000cc03         db  0x10 ; '.'
000000000000cc04         db  0x8d ; '.'
000000000000cc05         db  0x02 ; '.'
000000000000cc06         db  0x42 ; 'B'
000000000000cc07         db  0x0e ; '.'
000000000000cc08         db  0x18 ; '.'
000000000000cc09         db  0x8c ; '.'
000000000000cc0a         db  0x03 ; '.'
000000000000cc0b         db  0x41 ; 'A'
000000000000cc0c         db  0x0e ; '.'
000000000000cc0d         db  0x20 ; ' '
000000000000cc0e         db  0x86 ; '.'
000000000000cc0f         db  0x04 ; '.'
000000000000cc10         db  0x41 ; 'A'
000000000000cc11         db  0x0e ; '.'
000000000000cc12         db  0x28 ; '('
000000000000cc13         db  0x83 ; '.'
000000000000cc14         db  0x05 ; '.'
000000000000cc15         db  0x44 ; 'D'
000000000000cc16         db  0x0e ; '.'
000000000000cc17         db  0x40 ; '@'
000000000000cc18         db  0x02 ; '.'
000000000000cc19         db  0x5a ; 'Z'
000000000000cc1a         db  0x0a ; '.'
000000000000cc1b         db  0x0e ; '.'
000000000000cc1c         db  0x28 ; '('
000000000000cc1d         db  0x41 ; 'A'
000000000000cc1e         db  0x0e ; '.'
000000000000cc1f         db  0x20 ; ' '
000000000000cc20         db  0x41 ; 'A'
000000000000cc21         db  0x0e ; '.'
000000000000cc22         db  0x18 ; '.'
000000000000cc23         db  0x42 ; 'B'
000000000000cc24         db  0x0e ; '.'
000000000000cc25         db  0x10 ; '.'
000000000000cc26         db  0x42 ; 'B'
000000000000cc27         db  0x0e ; '.'
000000000000cc28         db  0x08 ; '.'
000000000000cc29         db  0x46 ; 'F'
000000000000cc2a         db  0x0b ; '.'
000000000000cc2b         db  0x00 ; '.'
000000000000cc2c         dd         0x00000020                                  ; Length of the record
000000000000cc30         dd         0x00001368                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cc34         db         0xec, 0xc0, 2 dup (0xff)                    ; begin 0x8d20
000000000000cc38         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x8d79)
000000000000cc3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc3d         db  0x41 ; 'A'
000000000000cc3e         db  0x0e ; '.'
000000000000cc3f         db  0x10 ; '.'
000000000000cc40         db  0x83 ; '.'
000000000000cc41         db  0x02 ; '.'
000000000000cc42         db  0x47 ; 'G'
000000000000cc43         db  0x0e ; '.'
000000000000cc44         db  0x20 ; ' '
000000000000cc45         db  0x7c ; '|'
000000000000cc46         db  0x0a ; '.'
000000000000cc47         db  0x0e ; '.'
000000000000cc48         db  0x10 ; '.'
000000000000cc49         db  0x41 ; 'A'
000000000000cc4a         db  0x0e ; '.'
000000000000cc4b         db  0x08 ; '.'
000000000000cc4c         db  0x4b ; 'K'
000000000000cc4d         db  0x0b ; '.'
000000000000cc4e         db  0x00 ; '.'
000000000000cc4f         db  0x00 ; '.'
000000000000cc50         dd         0x00000034                                  ; Length of the record
000000000000cc54         dd         0x0000138c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cc58         db         0x28, 0xc1, 2 dup (0xff)                    ; begin 0x8d80
000000000000cc5c         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x8f83)
000000000000cc60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc61         db  0x42 ; 'B'
000000000000cc62         db  0x0e ; '.'
000000000000cc63         db  0x10 ; '.'
000000000000cc64         db  0x8c ; '.'
000000000000cc65         db  0x02 ; '.'
000000000000cc66         db  0x41 ; 'A'
000000000000cc67         db  0x0e ; '.'
000000000000cc68         db  0x18 ; '.'
000000000000cc69         db  0x86 ; '.'
000000000000cc6a         db  0x03 ; '.'
000000000000cc6b         db  0x46 ; 'F'
000000000000cc6c         db  0x0e ; '.'
000000000000cc6d         db  0x20 ; ' '
000000000000cc6e         db  0x83 ; '.'
000000000000cc6f         db  0x04 ; '.'
000000000000cc70         db  0x47 ; 'G'
000000000000cc71         db  0x0e ; '.'
000000000000cc72         db  0x30 ; '0'
000000000000cc73         db  0x02 ; '.'
000000000000cc74         db  0x4a ; 'J'
000000000000cc75         db  0x0a ; '.'
000000000000cc76         db  0x0e ; '.'
000000000000cc77         db  0x20 ; ' '
000000000000cc78         db  0x41 ; 'A'
000000000000cc79         db  0x0e ; '.'
000000000000cc7a         db  0x18 ; '.'
000000000000cc7b         db  0x41 ; 'A'
000000000000cc7c         db  0x0e ; '.'
000000000000cc7d         db  0x10 ; '.'
000000000000cc7e         db  0x42 ; 'B'
000000000000cc7f         db  0x0e ; '.'
000000000000cc80         db  0x08 ; '.'
000000000000cc81         db  0x42 ; 'B'
000000000000cc82         db  0x0b ; '.'
000000000000cc83         db  0x00 ; '.'
000000000000cc84         db  0x00 ; '.'
000000000000cc85         db  0x00 ; '.'
000000000000cc86         db  0x00 ; '.'
000000000000cc87         db  0x00 ; '.'
000000000000cc88         dd         0x00000010                                  ; Length of the record
000000000000cc8c         dd         0x000013c4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cc90         db         0x00, 0xc3, 2 dup (0xff)                    ; begin 0x8f90
000000000000cc94         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x8fab)
000000000000cc98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cc99         align      4
000000000000cc9c         dd         0x00000010                                  ; Length of the record
000000000000cca0         dd         0x000013d8                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cca4         db         0x0c, 0xc3, 2 dup (0xff)                    ; begin 0x8fb0
000000000000cca8         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x8fb5)
000000000000ccac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ccad         align      16
000000000000ccb0         dd         0x00000010                                  ; Length of the record
000000000000ccb4         dd         0x000013ec                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ccb8         db         0x08, 0xc3, 2 dup (0xff)                    ; begin 0x8fc0
000000000000ccbc         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x8ff5)
000000000000ccc0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ccc1         align      4
000000000000ccc4         dd         0x00000010                                  ; Length of the record
000000000000ccc8         dd         0x00001400                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cccc         db         0x34, 0xc3, 2 dup (0xff)                    ; begin 0x9000
000000000000ccd0         db         0x3e, 3 dup (0x00)                          ; length 0x3e (end at 0x903e)
000000000000ccd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ccd5         db  0x79 ; 'y'
000000000000ccd6         db  0x0e ; '.'
000000000000ccd7         db  0x10 ; '.'
000000000000ccd8         dd         0x0000001c                                  ; Length of the record
000000000000ccdc         dd         0x00001414                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cce0         db         0x60, 0xc3, 2 dup (0xff)                    ; begin 0x9040
000000000000cce4         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x907c)
000000000000cce8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cce9         db  0x44 ; 'D'
000000000000ccea         db  0x0e ; '.'
000000000000cceb         db  0x10 ; '.'
000000000000ccec         db  0x61 ; 'a'
000000000000cced         db  0x0a ; '.'
000000000000ccee         db  0x0e ; '.'
000000000000ccef         db  0x08 ; '.'
000000000000ccf0         db  0x4b ; 'K'
000000000000ccf1         db  0x0b ; '.'
000000000000ccf2         db  0x4b ; 'K'
000000000000ccf3         db  0x0e ; '.'
000000000000ccf4         db  0x08 ; '.'
000000000000ccf5         db  0x00 ; '.'
000000000000ccf6         db  0x00 ; '.'
000000000000ccf7         db  0x00 ; '.'
000000000000ccf8         dd         0x00000014                                  ; Length of the record
000000000000ccfc         dd         0x00001434                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cd00         db         0x80, 0xc3, 2 dup (0xff)                    ; begin 0x9080
000000000000cd04         db         0x2d, 3 dup (0x00)                          ; length 0x2d (end at 0x90ad)
000000000000cd08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd09         db  0x41 ; 'A'
000000000000cd0a         db  0x0e ; '.'
000000000000cd0b         db  0x10 ; '.'
000000000000cd0c         db  0x83 ; '.'
000000000000cd0d         db  0x02 ; '.'
000000000000cd0e         db  0x00 ; '.'
000000000000cd0f         db  0x00 ; '.'
000000000000cd10         dd         0x00000014                                  ; Length of the record
000000000000cd14         dd         0x0000144c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cd18         db         0x98, 0xc3, 2 dup (0xff)                    ; begin 0x90b0
000000000000cd1c         db         0x2d, 3 dup (0x00)                          ; length 0x2d (end at 0x90dd)
000000000000cd20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd21         db  0x41 ; 'A'
000000000000cd22         db  0x0e ; '.'
000000000000cd23         db  0x10 ; '.'
000000000000cd24         db  0x83 ; '.'
000000000000cd25         db  0x02 ; '.'
000000000000cd26         db  0x00 ; '.'
000000000000cd27         db  0x00 ; '.'
000000000000cd28         dd         0x0000001c                                  ; Length of the record
000000000000cd2c         dd         0x00001464                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cd30         db         0xb0, 0xc3, 2 dup (0xff)                    ; begin 0x90e0
000000000000cd34         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x914e)
000000000000cd38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd39         db  0x44 ; 'D'
000000000000cd3a         db  0x0e ; '.'
000000000000cd3b         db  0x60 ; '`'
000000000000cd3c         db  0x7e ; '~'
000000000000cd3d         db  0x0a ; '.'
000000000000cd3e         db  0x0e ; '.'
000000000000cd3f         db  0x08 ; '.'
000000000000cd40         db  0x46 ; 'F'
000000000000cd41         db  0x0b ; '.'
000000000000cd42         db  0x00 ; '.'
000000000000cd43         db  0x00 ; '.'
000000000000cd44         db  0x00 ; '.'
000000000000cd45         db  0x00 ; '.'
000000000000cd46         db  0x00 ; '.'
000000000000cd47         db  0x00 ; '.'
000000000000cd48         dd         0x0000005c                                  ; Length of the record
000000000000cd4c         dd         0x00001484                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cd50         db         0x00, 0xc4, 2 dup (0xff)                    ; begin 0x9150
000000000000cd54         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x91d0)
000000000000cd58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cd59         db  0x42 ; 'B'
000000000000cd5a         db  0x0e ; '.'
000000000000cd5b         db  0x10 ; '.'
000000000000cd5c         db  0x8d ; '.'
000000000000cd5d         db  0x02 ; '.'
000000000000cd5e         db  0x42 ; 'B'
000000000000cd5f         db  0x0e ; '.'
000000000000cd60         db  0x18 ; '.'
000000000000cd61         db  0x8c ; '.'
000000000000cd62         db  0x03 ; '.'
000000000000cd63         db  0x47 ; 'G'
000000000000cd64         db  0x0e ; '.'
000000000000cd65         db  0x20 ; ' '
000000000000cd66         db  0x86 ; '.'
000000000000cd67         db  0x04 ; '.'
000000000000cd68         db  0x41 ; 'A'
000000000000cd69         db  0x0e ; '.'
000000000000cd6a         db  0x28 ; '('
000000000000cd6b         db  0x83 ; '.'
000000000000cd6c         db  0x05 ; '.'
000000000000cd6d         db  0x49 ; 'I'
000000000000cd6e         db  0x0e ; '.'
000000000000cd6f         db  0x30 ; '0'
000000000000cd70         db  0x62 ; 'b'
000000000000cd71         db  0x0a ; '.'
000000000000cd72         db  0x0e ; '.'
000000000000cd73         db  0x28 ; '('
000000000000cd74         db  0x44 ; 'D'
000000000000cd75         db  0x0e ; '.'
000000000000cd76         db  0x20 ; ' '
000000000000cd77         db  0x41 ; 'A'
000000000000cd78         db  0x0e ; '.'
000000000000cd79         db  0x18 ; '.'
000000000000cd7a         db  0x42 ; 'B'
000000000000cd7b         db  0x0e ; '.'
000000000000cd7c         db  0x10 ; '.'
000000000000cd7d         db  0x42 ; 'B'
000000000000cd7e         db  0x0e ; '.'
000000000000cd7f         db  0x08 ; '.'
000000000000cd80         db  0x48 ; 'H'
000000000000cd81         db  0x0b ; '.'
000000000000cd82         db  0x5d ; ']'
000000000000cd83         db  0x0a ; '.'
000000000000cd84         db  0x0e ; '.'
000000000000cd85         db  0x28 ; '('
000000000000cd86         db  0x41 ; 'A'
000000000000cd87         db  0x0e ; '.'
000000000000cd88         db  0x20 ; ' '
000000000000cd89         db  0x41 ; 'A'
000000000000cd8a         db  0x0e ; '.'
000000000000cd8b         db  0x18 ; '.'
000000000000cd8c         db  0x42 ; 'B'
000000000000cd8d         db  0x0e ; '.'
000000000000cd8e         db  0x10 ; '.'
000000000000cd8f         db  0x42 ; 'B'
000000000000cd90         db  0x0e ; '.'
000000000000cd91         db  0x08 ; '.'
000000000000cd92         db  0x45 ; 'E'
000000000000cd93         db  0x0b ; '.'
000000000000cd94         db  0x44 ; 'D'
000000000000cd95         db  0x0e ; '.'
000000000000cd96         db  0x28 ; '('
000000000000cd97         db  0x43 ; 'C'
000000000000cd98         db  0x0e ; '.'
000000000000cd99         db  0x20 ; ' '
000000000000cd9a         db  0x44 ; 'D'
000000000000cd9b         db  0x0e ; '.'
000000000000cd9c         db  0x18 ; '.'
000000000000cd9d         db  0x42 ; 'B'
000000000000cd9e         db  0x0e ; '.'
000000000000cd9f         db  0x10 ; '.'
000000000000cda0         db  0x42 ; 'B'
000000000000cda1         db  0x0e ; '.'
000000000000cda2         db  0x08 ; '.'
000000000000cda3         db  0x00 ; '.'
000000000000cda4         db  0x00 ; '.'
000000000000cda5         db  0x00 ; '.'
000000000000cda6         db  0x00 ; '.'
000000000000cda7         db  0x00 ; '.'
000000000000cda8         dd         0x0000001c                                  ; Length of the record
000000000000cdac         dd         0x000014e4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cdb0         db         0x20, 0xc4, 2 dup (0xff)                    ; begin 0x91d0
000000000000cdb4         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x921a)
000000000000cdb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cdb9         db  0x41 ; 'A'
000000000000cdba         db  0x0e ; '.'
000000000000cdbb         db  0x10 ; '.'
000000000000cdbc         db  0x83 ; '.'
000000000000cdbd         db  0x02 ; '.'
000000000000cdbe         db  0x69 ; 'i'
000000000000cdbf         db  0x0a ; '.'
000000000000cdc0         db  0x0e ; '.'
000000000000cdc1         db  0x08 ; '.'
000000000000cdc2         db  0x46 ; 'F'
000000000000cdc3         db  0x0b ; '.'
000000000000cdc4         db  0x59 ; 'Y'
000000000000cdc5         db  0x0e ; '.'
000000000000cdc6         db  0x08 ; '.'
000000000000cdc7         db  0x00 ; '.'
000000000000cdc8         dd         0x00000010                                  ; Length of the record
000000000000cdcc         dd         0x00001504                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cdd0         db         0x50, 0xc4, 2 dup (0xff)                    ; begin 0x9220
000000000000cdd4         db         0x19, 3 dup (0x00)                          ; length 0x19 (end at 0x9239)
000000000000cdd8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cdd9         align      4
000000000000cddc         dd         0x00000018                                  ; Length of the record
000000000000cde0         dd         0x00001518                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cde4         db         0x5c, 0xc4, 2 dup (0xff)                    ; begin 0x9240
000000000000cde8         db         0x19, 3 dup (0x00)                          ; length 0x19 (end at 0x9259)
000000000000cdec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cded         db  0x41 ; 'A'
000000000000cdee         db  0x0e ; '.'
000000000000cdef         db  0x10 ; '.'
000000000000cdf0         db  0x83 ; '.'
000000000000cdf1         db  0x02 ; '.'
000000000000cdf2         db  0x53 ; 'S'
000000000000cdf3         db  0x0e ; '.'
000000000000cdf4         db  0x08 ; '.'
000000000000cdf5         db  0x00 ; '.'
000000000000cdf6         db  0x00 ; '.'
000000000000cdf7         db  0x00 ; '.'
000000000000cdf8         dd         0x00000034                                  ; Length of the record
000000000000cdfc         dd         0x00001534                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ce00         db         0x60, 0xc4, 2 dup (0xff)                    ; begin 0x9260
000000000000ce04         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x929f)
000000000000ce08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce09         db  0x42 ; 'B'
000000000000ce0a         db  0x0e ; '.'
000000000000ce0b         db  0x10 ; '.'
000000000000ce0c         db  0x8d ; '.'
000000000000ce0d         db  0x02 ; '.'
000000000000ce0e         db  0x42 ; 'B'
000000000000ce0f         db  0x0e ; '.'
000000000000ce10         db  0x18 ; '.'
000000000000ce11         db  0x8c ; '.'
000000000000ce12         db  0x03 ; '.'
000000000000ce13         db  0x41 ; 'A'
000000000000ce14         db  0x0e ; '.'
000000000000ce15         db  0x20 ; ' '
000000000000ce16         db  0x86 ; '.'
000000000000ce17         db  0x04 ; '.'
000000000000ce18         db  0x41 ; 'A'
000000000000ce19         db  0x0e ; '.'
000000000000ce1a         db  0x28 ; '('
000000000000ce1b         db  0x83 ; '.'
000000000000ce1c         db  0x05 ; '.'
000000000000ce1d         db  0x46 ; 'F'
000000000000ce1e         db  0x0e ; '.'
000000000000ce1f         db  0x30 ; '0'
000000000000ce20         db  0x6a ; 'j'
000000000000ce21         db  0x0e ; '.'
000000000000ce22         db  0x28 ; '('
000000000000ce23         db  0x43 ; 'C'
000000000000ce24         db  0x0e ; '.'
000000000000ce25         db  0x20 ; ' '
000000000000ce26         db  0x41 ; 'A'
000000000000ce27         db  0x0e ; '.'
000000000000ce28         db  0x18 ; '.'
000000000000ce29         db  0x42 ; 'B'
000000000000ce2a         db  0x0e ; '.'
000000000000ce2b         db  0x10 ; '.'
000000000000ce2c         db  0x42 ; 'B'
000000000000ce2d         db  0x0e ; '.'
000000000000ce2e         db  0x08 ; '.'
000000000000ce2f         db  0x00 ; '.'
000000000000ce30         dd         0x00000018                                  ; Length of the record
000000000000ce34         dd         0x0000156c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ce38         db         0x68, 0xc4, 2 dup (0xff)                    ; begin 0x92a0
000000000000ce3c         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x92e1)
000000000000ce40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce41         db  0x4a ; 'J'
000000000000ce42         db  0x0e ; '.'
000000000000ce43         db  0x10 ; '.'
000000000000ce44         db  0x4d ; 'M'
000000000000ce45         db  0x0e ; '.'
000000000000ce46         db  0x08 ; '.'
000000000000ce47         db  0x4b ; 'K'
000000000000ce48         db  0x0e ; '.'
000000000000ce49         db  0x10 ; '.'
000000000000ce4a         db  0x00 ; '.'
000000000000ce4b         db  0x00 ; '.'
000000000000ce4c         dd         0x00000028                                  ; Length of the record
000000000000ce50         dd         0x00001588                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ce54         db         0x9c, 0xc4, 2 dup (0xff)                    ; begin 0x92f0
000000000000ce58         db         0x37, 3 dup (0x00)                          ; length 0x37 (end at 0x9327)
000000000000ce5c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce5d         db  0x41 ; 'A'
000000000000ce5e         db  0x0e ; '.'
000000000000ce5f         db  0x10 ; '.'
000000000000ce60         db  0x86 ; '.'
000000000000ce61         db  0x02 ; '.'
000000000000ce62         db  0x41 ; 'A'
000000000000ce63         db  0x0e ; '.'
000000000000ce64         db  0x18 ; '.'
000000000000ce65         db  0x83 ; '.'
000000000000ce66         db  0x03 ; '.'
000000000000ce67         db  0x4e ; 'N'
000000000000ce68         db  0x0e ; '.'
000000000000ce69         db  0x20 ; ' '
000000000000ce6a         db  0x5d ; ']'
000000000000ce6b         db  0x0a ; '.'
000000000000ce6c         db  0x0e ; '.'
000000000000ce6d         db  0x18 ; '.'
000000000000ce6e         db  0x41 ; 'A'
000000000000ce6f         db  0x0e ; '.'
000000000000ce70         db  0x10 ; '.'
000000000000ce71         db  0x41 ; 'A'
000000000000ce72         db  0x0e ; '.'
000000000000ce73         db  0x08 ; '.'
000000000000ce74         db  0x41 ; 'A'
000000000000ce75         db  0x0b ; '.'
000000000000ce76         db  0x00 ; '.'
000000000000ce77         db  0x00 ; '.'
000000000000ce78         dd         0x0000004c                                  ; Length of the record
000000000000ce7c         dd         0x000015b4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ce80         db         0xb0, 0xc4, 2 dup (0xff)                    ; begin 0x9330
000000000000ce84         db         0xd2, 0x02, 2 dup (0x00)                    ; length 0x2d2 (end at 0x9602)
000000000000ce88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ce89         db  0x42 ; 'B'
000000000000ce8a         db  0x0e ; '.'
000000000000ce8b         db  0x10 ; '.'
000000000000ce8c         db  0x8f ; '.'
000000000000ce8d         db  0x02 ; '.'
000000000000ce8e         db  0x42 ; 'B'
000000000000ce8f         db  0x0e ; '.'
000000000000ce90         db  0x18 ; '.'
000000000000ce91         db  0x8e ; '.'
000000000000ce92         db  0x03 ; '.'
000000000000ce93         db  0x42 ; 'B'
000000000000ce94         db  0x0e ; '.'
000000000000ce95         db  0x20 ; ' '
000000000000ce96         db  0x8d ; '.'
000000000000ce97         db  0x04 ; '.'
000000000000ce98         db  0x42 ; 'B'
000000000000ce99         db  0x0e ; '.'
000000000000ce9a         db  0x28 ; '('
000000000000ce9b         db  0x8c ; '.'
000000000000ce9c         db  0x05 ; '.'
000000000000ce9d         db  0x41 ; 'A'
000000000000ce9e         db  0x0e ; '.'
000000000000ce9f         db  0x30 ; '0'
000000000000cea0         db  0x86 ; '.'
000000000000cea1         db  0x06 ; '.'
000000000000cea2         db  0x41 ; 'A'
000000000000cea3         db  0x0e ; '.'
000000000000cea4         db  0x38 ; '8'
000000000000cea5         db  0x83 ; '.'
000000000000cea6         db  0x07 ; '.'
000000000000cea7         db  0x47 ; 'G'
000000000000cea8         db  0x0e ; '.'
000000000000cea9         db  0x50 ; 'P'
000000000000ceaa         db  0x02 ; '.'
000000000000ceab         db  0x42 ; 'B'
000000000000ceac         db  0x0a ; '.'
000000000000cead         db  0x0e ; '.'
000000000000ceae         db  0x38 ; '8'
000000000000ceaf         db  0x41 ; 'A'
000000000000ceb0         db  0x0e ; '.'
000000000000ceb1         db  0x30 ; '0'
000000000000ceb2         db  0x41 ; 'A'
000000000000ceb3         db  0x0e ; '.'
000000000000ceb4         db  0x28 ; '('
000000000000ceb5         db  0x42 ; 'B'
000000000000ceb6         db  0x0e ; '.'
000000000000ceb7         db  0x20 ; ' '
000000000000ceb8         db  0x42 ; 'B'
000000000000ceb9         db  0x0e ; '.'
000000000000ceba         db  0x18 ; '.'
000000000000cebb         db  0x42 ; 'B'
000000000000cebc         db  0x0e ; '.'
000000000000cebd         db  0x10 ; '.'
000000000000cebe         db  0x42 ; 'B'
000000000000cebf         db  0x0e ; '.'
000000000000cec0         db  0x08 ; '.'
000000000000cec1         db  0x43 ; 'C'
000000000000cec2         db  0x0b ; '.'
000000000000cec3         db  0x00 ; '.'
000000000000cec4         db  0x00 ; '.'
000000000000cec5         db  0x00 ; '.'
000000000000cec6         db  0x00 ; '.'
000000000000cec7         db  0x00 ; '.'
000000000000cec8         dd         0x00000034                                  ; Length of the record
000000000000cecc         dd         0x00001604                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000ced0         db         0x40, 0xc7, 2 dup (0xff)                    ; begin 0x9610
000000000000ced4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x968b)
000000000000ced8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ced9         db  0x42 ; 'B'
000000000000ceda         db  0x0e ; '.'
000000000000cedb         db  0x10 ; '.'
000000000000cedc         db  0x8c ; '.'
000000000000cedd         db  0x02 ; '.'
000000000000cede         db  0x41 ; 'A'
000000000000cedf         db  0x0e ; '.'
000000000000cee0         db  0x18 ; '.'
000000000000cee1         db  0x86 ; '.'
000000000000cee2         db  0x03 ; '.'
000000000000cee3         db  0x41 ; 'A'
000000000000cee4         db  0x0e ; '.'
000000000000cee5         db  0x20 ; ' '
000000000000cee6         db  0x83 ; '.'
000000000000cee7         db  0x04 ; '.'
000000000000cee8         db  0x7d ; '}'
000000000000cee9         db  0x0a ; '.'
000000000000ceea         db  0x0e ; '.'
000000000000ceeb         db  0x18 ; '.'
000000000000ceec         db  0x41 ; 'A'
000000000000ceed         db  0x0e ; '.'
000000000000ceee         db  0x10 ; '.'
000000000000ceef         db  0x42 ; 'B'
000000000000cef0         db  0x0e ; '.'
000000000000cef1         db  0x08 ; '.'
000000000000cef2         db  0x44 ; 'D'
000000000000cef3         db  0x0b ; '.'
000000000000cef4         db  0x60 ; '`'
000000000000cef5         db  0x0a ; '.'
000000000000cef6         db  0x0e ; '.'
000000000000cef7         db  0x18 ; '.'
000000000000cef8         db  0x41 ; 'A'
000000000000cef9         db  0x0e ; '.'
000000000000cefa         db  0x10 ; '.'
000000000000cefb         db  0x42 ; 'B'
000000000000cefc         db  0x0e ; '.'
000000000000cefd         db  0x08 ; '.'
000000000000cefe         db  0x45 ; 'E'
000000000000ceff         db  0x0b ; '.'
000000000000cf00         dd         0x00000034                                  ; Length of the record
000000000000cf04         dd         0x0000163c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cf08         db         0x88, 0xc7, 2 dup (0xff)                    ; begin 0x9690
000000000000cf0c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x990e)
000000000000cf10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf11         db  0x42 ; 'B'
000000000000cf12         db  0x0e ; '.'
000000000000cf13         db  0x10 ; '.'
000000000000cf14         db  0x8c ; '.'
000000000000cf15         db  0x02 ; '.'
000000000000cf16         db  0x41 ; 'A'
000000000000cf17         db  0x0e ; '.'
000000000000cf18         db  0x18 ; '.'
000000000000cf19         db  0x86 ; '.'
000000000000cf1a         db  0x03 ; '.'
000000000000cf1b         db  0x43 ; 'C'
000000000000cf1c         db  0x0e ; '.'
000000000000cf1d         db  0x20 ; ' '
000000000000cf1e         db  0x83 ; '.'
000000000000cf1f         db  0x04 ; '.'
000000000000cf20         db  0x44 ; 'D'
000000000000cf21         db  0x0e ; '.'
000000000000cf22         db  0x70 ; 'p'
000000000000cf23         db  0x02 ; '.'
000000000000cf24         db  0xf0 ; '.'
000000000000cf25         db  0x0a ; '.'
000000000000cf26         db  0x0e ; '.'
000000000000cf27         db  0x20 ; ' '
000000000000cf28         db  0x41 ; 'A'
000000000000cf29         db  0x0e ; '.'
000000000000cf2a         db  0x18 ; '.'
000000000000cf2b         db  0x41 ; 'A'
000000000000cf2c         db  0x0e ; '.'
000000000000cf2d         db  0x10 ; '.'
000000000000cf2e         db  0x42 ; 'B'
000000000000cf2f         db  0x0e ; '.'
000000000000cf30         db  0x08 ; '.'
000000000000cf31         db  0x42 ; 'B'
000000000000cf32         db  0x0b ; '.'
000000000000cf33         db  0x00 ; '.'
000000000000cf34         db  0x00 ; '.'
000000000000cf35         db  0x00 ; '.'
000000000000cf36         db  0x00 ; '.'
000000000000cf37         db  0x00 ; '.'
000000000000cf38         dd         0x0000001c                                  ; Length of the record
000000000000cf3c         dd         0x00001674                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cf40         db         0xd0, 0xc9, 2 dup (0xff)                    ; begin 0x9910
000000000000cf44         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x9950)
000000000000cf48         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf49         db  0x44 ; 'D'
000000000000cf4a         db  0x0e ; '.'
000000000000cf4b         db  0x10 ; '.'
000000000000cf4c         db  0x83 ; '.'
000000000000cf4d         db  0x02 ; '.'
000000000000cf4e         db  0x5a ; 'Z'
000000000000cf4f         db  0x0a ; '.'
000000000000cf50         db  0x0e ; '.'
000000000000cf51         db  0x08 ; '.'
000000000000cf52         db  0x4a ; 'J'
000000000000cf53         db  0x0b ; '.'
000000000000cf54         db  0x53 ; 'S'
000000000000cf55         db  0x0e ; '.'
000000000000cf56         db  0x08 ; '.'
000000000000cf57         db  0x00 ; '.'
000000000000cf58         dd         0x0000002c                                  ; Length of the record
000000000000cf5c         dd         0x00001694                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cf60         db         0xf0, 0xc9, 2 dup (0xff)                    ; begin 0x9950
000000000000cf64         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x99a7)
000000000000cf68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf69         db  0x63 ; 'c'
000000000000cf6a         db  0x0e ; '.'
000000000000cf6b         db  0x10 ; '.'
000000000000cf6c         db  0x8c ; '.'
000000000000cf6d         db  0x02 ; '.'
000000000000cf6e         db  0x41 ; 'A'
000000000000cf6f         db  0x0e ; '.'
000000000000cf70         db  0x18 ; '.'
000000000000cf71         db  0x86 ; '.'
000000000000cf72         db  0x03 ; '.'
000000000000cf73         db  0x44 ; 'D'
000000000000cf74         db  0x0e ; '.'
000000000000cf75         db  0x20 ; ' '
000000000000cf76         db  0x83 ; '.'
000000000000cf77         db  0x04 ; '.'
000000000000cf78         db  0x6b ; 'k'
000000000000cf79         db  0x0e ; '.'
000000000000cf7a         db  0x18 ; '.'
000000000000cf7b         db  0x41 ; 'A'
000000000000cf7c         db  0x0e ; '.'
000000000000cf7d         db  0x10 ; '.'
000000000000cf7e         db  0x42 ; 'B'
000000000000cf7f         db  0x0e ; '.'
000000000000cf80         db  0x08 ; '.'
000000000000cf81         db  0x00 ; '.'
000000000000cf82         db  0x00 ; '.'
000000000000cf83         db  0x00 ; '.'
000000000000cf84         db  0x00 ; '.'
000000000000cf85         db  0x00 ; '.'
000000000000cf86         db  0x00 ; '.'
000000000000cf87         db  0x00 ; '.'
000000000000cf88         dd         0x00000044                                  ; Length of the record
000000000000cf8c         dd         0x000016c4                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cf90         db         0x20, 0xca, 2 dup (0xff)                    ; begin 0x99b0
000000000000cf94         db         0x5c, 0x01, 2 dup (0x00)                    ; length 0x15c (end at 0x9b0c)
000000000000cf98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cf99         db  0x42 ; 'B'
000000000000cf9a         db  0x0e ; '.'
000000000000cf9b         db  0x10 ; '.'
000000000000cf9c         db  0x8e ; '.'
000000000000cf9d         db  0x02 ; '.'
000000000000cf9e         db  0x42 ; 'B'
000000000000cf9f         db  0x0e ; '.'
000000000000cfa0         db  0x18 ; '.'
000000000000cfa1         db  0x8d ; '.'
000000000000cfa2         db  0x03 ; '.'
000000000000cfa3         db  0x42 ; 'B'
000000000000cfa4         db  0x0e ; '.'
000000000000cfa5         db  0x20 ; ' '
000000000000cfa6         db  0x8c ; '.'
000000000000cfa7         db  0x04 ; '.'
000000000000cfa8         db  0x41 ; 'A'
000000000000cfa9         db  0x0e ; '.'
000000000000cfaa         db  0x28 ; '('
000000000000cfab         db  0x86 ; '.'
000000000000cfac         db  0x05 ; '.'
000000000000cfad         db  0x41 ; 'A'
000000000000cfae         db  0x0e ; '.'
000000000000cfaf         db  0x30 ; '0'
000000000000cfb0         db  0x83 ; '.'
000000000000cfb1         db  0x06 ; '.'
000000000000cfb2         db  0x47 ; 'G'
000000000000cfb3         db  0x0e ; '.'
000000000000cfb4         db  0x60 ; '`'
000000000000cfb5         db  0x02 ; '.'
000000000000cfb6         db  0xa4 ; '.'
000000000000cfb7         db  0x0a ; '.'
000000000000cfb8         db  0x0e ; '.'
000000000000cfb9         db  0x30 ; '0'
000000000000cfba         db  0x41 ; 'A'
000000000000cfbb         db  0x0e ; '.'
000000000000cfbc         db  0x28 ; '('
000000000000cfbd         db  0x41 ; 'A'
000000000000cfbe         db  0x0e ; '.'
000000000000cfbf         db  0x20 ; ' '
000000000000cfc0         db  0x42 ; 'B'
000000000000cfc1         db  0x0e ; '.'
000000000000cfc2         db  0x18 ; '.'
000000000000cfc3         db  0x42 ; 'B'
000000000000cfc4         db  0x0e ; '.'
000000000000cfc5         db  0x10 ; '.'
000000000000cfc6         db  0x42 ; 'B'
000000000000cfc7         db  0x0e ; '.'
000000000000cfc8         db  0x08 ; '.'
000000000000cfc9         db  0x45 ; 'E'
000000000000cfca         db  0x0b ; '.'
000000000000cfcb         db  0x00 ; '.'
000000000000cfcc         db  0x00 ; '.'
000000000000cfcd         db  0x00 ; '.'
000000000000cfce         db  0x00 ; '.'
000000000000cfcf         db  0x00 ; '.'
000000000000cfd0         dd         0x00000014                                  ; Length of the record
000000000000cfd4         dd         0x0000170c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cfd8         db         0x38, 0xcb, 2 dup (0xff)                    ; begin 0x9b10
000000000000cfdc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x9b1e)
000000000000cfe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cfe1         align      8
000000000000cfe8         dd         0x00000044                                  ; Length of the record
000000000000cfec         dd         0x00001724                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000cff0         db         0x30, 0xcb, 2 dup (0xff)                    ; begin 0x9b20
000000000000cff4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x9b85)
000000000000cff8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000cff9         db  0x42 ; 'B'
000000000000cffa         db  0x0e ; '.'
000000000000cffb         db  0x10 ; '.'
000000000000cffc         db  0x8f ; '.'
000000000000cffd         db  0x02 ; '.'
000000000000cffe         db  0x42 ; 'B'
000000000000cfff         db  0x0e ; '.'
000000000000d000         db  0x18 ; '.'
000000000000d001         db  0x8e ; '.'
000000000000d002         db  0x03 ; '.'
000000000000d003         db  0x45 ; 'E'
000000000000d004         db  0x0e ; '.'
000000000000d005         db  0x20 ; ' '
000000000000d006         db  0x8d ; '.'
000000000000d007         db  0x04 ; '.'
000000000000d008         db  0x42 ; 'B'
000000000000d009         db  0x0e ; '.'
000000000000d00a         db  0x28 ; '('
000000000000d00b         db  0x8c ; '.'
000000000000d00c         db  0x05 ; '.'
000000000000d00d         db  0x48 ; 'H'
000000000000d00e         db  0x0e ; '.'
000000000000d00f         db  0x30 ; '0'
000000000000d010         db  0x86 ; '.'
000000000000d011         db  0x06 ; '.'
000000000000d012         db  0x48 ; 'H'
000000000000d013         db  0x0e ; '.'
000000000000d014         db  0x38 ; '8'
000000000000d015         db  0x83 ; '.'
000000000000d016         db  0x07 ; '.'
000000000000d017         db  0x4d ; 'M'
000000000000d018         db  0x0e ; '.'
000000000000d019         db  0x40 ; '@'
000000000000d01a         db  0x72 ; 'r'
000000000000d01b         db  0x0e ; '.'
000000000000d01c         db  0x38 ; '8'
000000000000d01d         db  0x41 ; 'A'
000000000000d01e         db  0x0e ; '.'
000000000000d01f         db  0x30 ; '0'
000000000000d020         db  0x41 ; 'A'
000000000000d021         db  0x0e ; '.'
000000000000d022         db  0x28 ; '('
000000000000d023         db  0x42 ; 'B'
000000000000d024         db  0x0e ; '.'
000000000000d025         db  0x20 ; ' '
000000000000d026         db  0x42 ; 'B'
000000000000d027         db  0x0e ; '.'
000000000000d028         db  0x18 ; '.'
000000000000d029         db  0x42 ; 'B'
000000000000d02a         db  0x0e ; '.'
000000000000d02b         db  0x10 ; '.'
000000000000d02c         db  0x42 ; 'B'
000000000000d02d         db  0x0e ; '.'
000000000000d02e         db  0x08 ; '.'
000000000000d02f         db  0x00 ; '.'
000000000000d030         dd         0x00000014                                  ; Length of the record
000000000000d034         dd         0x0000176c                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000d038         db         0x58, 0xcb, 2 dup (0xff)                    ; begin 0x9b90
000000000000d03c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x9b92)
000000000000d040         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d041         align      8
000000000000d048         dd         0x00000010                                  ; Length of the record
000000000000d04c         dd         0x00001784                                  ; FDE: parent CIE at 0xb8c8 (FDE encoding = 0x1B)
000000000000d050         db         0x50, 0xcb, 2 dup (0xff)                    ; begin 0x9ba0
000000000000d054         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x9bae)
000000000000d058         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d059         align      32


        ; Segment Segment 3
        ; Range: [0x20d990; 0x20e260[ (2256 bytes)
        ; File offset : [55696; 57472[ (1776 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20d990; 0x20d998[ (8 bytes)
        ; File offset : [55696; 55704[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020d990         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20d998; 0x20d9a0[ (8 bytes)
        ; File offset : [55704; 55712[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020d998         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20d9a0; 0x20dbb8[ (536 bytes)
        ; File offset : [55712; 56248[ (536 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000020d9a0         db  0x49 ; 'I'                                         ; DATA XREF=main+136
000000000020d9a1         db  0x9d ; '.'
000000000020d9a2         db  0x00 ; '.'
000000000020d9a3         db  0x00 ; '.'
000000000020d9a4         db  0x00 ; '.'
000000000020d9a5         db  0x00 ; '.'
000000000020d9a6         db  0x00 ; '.'
000000000020d9a7         db  0x00 ; '.'
000000000020d9a8         db  0x00 ; '.'
000000000020d9a9         db  0x00 ; '.'
000000000020d9aa         db  0x00 ; '.'
000000000020d9ab         db  0x00 ; '.'
000000000020d9ac         db  0x00 ; '.'
000000000020d9ad         db  0x00 ; '.'
000000000020d9ae         db  0x00 ; '.'
000000000020d9af         db  0x00 ; '.'
000000000020d9b0         db  0x00 ; '.'
000000000020d9b1         db  0x00 ; '.'
000000000020d9b2         db  0x00 ; '.'
000000000020d9b3         db  0x00 ; '.'
000000000020d9b4         db  0x00 ; '.'
000000000020d9b5         db  0x00 ; '.'
000000000020d9b6         db  0x00 ; '.'
000000000020d9b7         db  0x00 ; '.'
000000000020d9b8         db  0x52 ; 'R'
000000000020d9b9         db  0x00 ; '.'
000000000020d9ba         db  0x00 ; '.'
000000000020d9bb         db  0x00 ; '.'
000000000020d9bc         db  0x00 ; '.'
000000000020d9bd         db  0x00 ; '.'
000000000020d9be         db  0x00 ; '.'
000000000020d9bf         db  0x00 ; '.'
000000000020d9c0         db  0x56 ; 'V'
000000000020d9c1         db  0x9d ; '.'
000000000020d9c2         db  0x00 ; '.'
000000000020d9c3         db  0x00 ; '.'
000000000020d9c4         db  0x00 ; '.'
000000000020d9c5         db  0x00 ; '.'
000000000020d9c6         db  0x00 ; '.'
000000000020d9c7         db  0x00 ; '.'
000000000020d9c8         db  0x00 ; '.'
000000000020d9c9         db  0x00 ; '.'
000000000020d9ca         db  0x00 ; '.'
000000000020d9cb         db  0x00 ; '.'
000000000020d9cc         db  0x00 ; '.'
000000000020d9cd         db  0x00 ; '.'
000000000020d9ce         db  0x00 ; '.'
000000000020d9cf         db  0x00 ; '.'
000000000020d9d0         db  0x00 ; '.'
000000000020d9d1         db  0x00 ; '.'
000000000020d9d2         db  0x00 ; '.'
000000000020d9d3         db  0x00 ; '.'
000000000020d9d4         db  0x00 ; '.'
000000000020d9d5         db  0x00 ; '.'
000000000020d9d6         db  0x00 ; '.'
000000000020d9d7         db  0x00 ; '.'
000000000020d9d8         db  0x80 ; '.'
000000000020d9d9         db  0x00 ; '.'
000000000020d9da         db  0x00 ; '.'
000000000020d9db         db  0x00 ; '.'
000000000020d9dc         db  0x00 ; '.'
000000000020d9dd         db  0x00 ; '.'
000000000020d9de         db  0x00 ; '.'
000000000020d9df         db  0x00 ; '.'
000000000020d9e0         db  0x53 ; 'S'
000000000020d9e1         db  0x9d ; '.'
000000000020d9e2         db  0x00 ; '.'
000000000020d9e3         db  0x00 ; '.'
000000000020d9e4         db  0x00 ; '.'
000000000020d9e5         db  0x00 ; '.'
000000000020d9e6         db  0x00 ; '.'
000000000020d9e7         db  0x00 ; '.'
000000000020d9e8         db  0x00 ; '.'
000000000020d9e9         db  0x00 ; '.'
000000000020d9ea         db  0x00 ; '.'
000000000020d9eb         db  0x00 ; '.'
000000000020d9ec         db  0x00 ; '.'
000000000020d9ed         db  0x00 ; '.'
000000000020d9ee         db  0x00 ; '.'
000000000020d9ef         db  0x00 ; '.'
000000000020d9f0         db  0x00 ; '.'
000000000020d9f1         db  0x00 ; '.'
000000000020d9f2         db  0x00 ; '.'
000000000020d9f3         db  0x00 ; '.'
000000000020d9f4         db  0x00 ; '.'
000000000020d9f5         db  0x00 ; '.'
000000000020d9f6         db  0x00 ; '.'
000000000020d9f7         db  0x00 ; '.'
000000000020d9f8         db  0x68 ; 'h'
000000000020d9f9         db  0x00 ; '.'
000000000020d9fa         db  0x00 ; '.'
000000000020d9fb         db  0x00 ; '.'
000000000020d9fc         db  0x00 ; '.'
000000000020d9fd         db  0x00 ; '.'
000000000020d9fe         db  0x00 ; '.'
000000000020d9ff         db  0x00 ; '.'
000000000020da00         db  0x62 ; 'b'
000000000020da01         db  0x9d ; '.'
000000000020da02         db  0x00 ; '.'
000000000020da03         db  0x00 ; '.'
000000000020da04         db  0x00 ; '.'
000000000020da05         db  0x00 ; '.'
000000000020da06         db  0x00 ; '.'
000000000020da07         db  0x00 ; '.'
000000000020da08         db  0x00 ; '.'
000000000020da09         db  0x00 ; '.'
000000000020da0a         db  0x00 ; '.'
000000000020da0b         db  0x00 ; '.'
000000000020da0c         db  0x00 ; '.'
000000000020da0d         db  0x00 ; '.'
000000000020da0e         db  0x00 ; '.'
000000000020da0f         db  0x00 ; '.'
000000000020da10         db  0x00 ; '.'
000000000020da11         db  0x00 ; '.'
000000000020da12         db  0x00 ; '.'
000000000020da13         db  0x00 ; '.'
000000000020da14         db  0x00 ; '.'
000000000020da15         db  0x00 ; '.'
000000000020da16         db  0x00 ; '.'
000000000020da17         db  0x00 ; '.'
000000000020da18         db  0x81 ; '.'
000000000020da19         db  0x00 ; '.'
000000000020da1a         db  0x00 ; '.'
000000000020da1b         db  0x00 ; '.'
000000000020da1c         db  0x00 ; '.'
000000000020da1d         db  0x00 ; '.'
000000000020da1e         db  0x00 ; '.'
000000000020da1f         db  0x00 ; '.'
000000000020da20         db  0x65 ; 'e'
000000000020da21         db  0x9d ; '.'
000000000020da22         db  0x00 ; '.'
000000000020da23         db  0x00 ; '.'
000000000020da24         db  0x00 ; '.'
000000000020da25         db  0x00 ; '.'
000000000020da26         db  0x00 ; '.'
000000000020da27         db  0x00 ; '.'
000000000020da28         db  0x00 ; '.'
000000000020da29         db  0x00 ; '.'
000000000020da2a         db  0x00 ; '.'
000000000020da2b         db  0x00 ; '.'
000000000020da2c         db  0x00 ; '.'
000000000020da2d         db  0x00 ; '.'
000000000020da2e         db  0x00 ; '.'
000000000020da2f         db  0x00 ; '.'
000000000020da30         db  0x00 ; '.'
000000000020da31         db  0x00 ; '.'
000000000020da32         db  0x00 ; '.'
000000000020da33         db  0x00 ; '.'
000000000020da34         db  0x00 ; '.'
000000000020da35         db  0x00 ; '.'
000000000020da36         db  0x00 ; '.'
000000000020da37         db  0x00 ; '.'
000000000020da38         db  0x82 ; '.'
000000000020da39         db  0x00 ; '.'
000000000020da3a         db  0x00 ; '.'
000000000020da3b         db  0x00 ; '.'
000000000020da3c         db  0x00 ; '.'
000000000020da3d         db  0x00 ; '.'
000000000020da3e         db  0x00 ; '.'
000000000020da3f         db  0x00 ; '.'
000000000020da40         db  0x58 ; 'X'
000000000020da41         db  0x9d ; '.'
000000000020da42         db  0x00 ; '.'
000000000020da43         db  0x00 ; '.'
000000000020da44         db  0x00 ; '.'
000000000020da45         db  0x00 ; '.'
000000000020da46         db  0x00 ; '.'
000000000020da47         db  0x00 ; '.'
000000000020da48         db  0x01 ; '.'
000000000020da49         db  0x00 ; '.'
000000000020da4a         db  0x00 ; '.'
000000000020da4b         db  0x00 ; '.'
000000000020da4c         db  0x00 ; '.'
000000000020da4d         db  0x00 ; '.'
000000000020da4e         db  0x00 ; '.'
000000000020da4f         db  0x00 ; '.'
000000000020da50         db  0x00 ; '.'
000000000020da51         db  0x00 ; '.'
000000000020da52         db  0x00 ; '.'
000000000020da53         db  0x00 ; '.'
000000000020da54         db  0x00 ; '.'
000000000020da55         db  0x00 ; '.'
000000000020da56         db  0x00 ; '.'
000000000020da57         db  0x00 ; '.'
000000000020da58         db  0x83 ; '.'
000000000020da59         db  0x00 ; '.'
000000000020da5a         db  0x00 ; '.'
000000000020da5b         db  0x00 ; '.'
000000000020da5c         db  0x00 ; '.'
000000000020da5d         db  0x00 ; '.'
000000000020da5e         db  0x00 ; '.'
000000000020da5f         db  0x00 ; '.'
000000000020da60         db  0x73 ; 's'
000000000020da61         db  0x9d ; '.'
000000000020da62         db  0x00 ; '.'
000000000020da63         db  0x00 ; '.'
000000000020da64         db  0x00 ; '.'
000000000020da65         db  0x00 ; '.'
000000000020da66         db  0x00 ; '.'
000000000020da67         db  0x00 ; '.'
000000000020da68         db  0x01 ; '.'
000000000020da69         db  0x00 ; '.'
000000000020da6a         db  0x00 ; '.'
000000000020da6b         db  0x00 ; '.'
000000000020da6c         db  0x00 ; '.'
000000000020da6d         db  0x00 ; '.'
000000000020da6e         db  0x00 ; '.'
000000000020da6f         db  0x00 ; '.'
000000000020da70         db  0x00 ; '.'
000000000020da71         db  0x00 ; '.'
000000000020da72         db  0x00 ; '.'
000000000020da73         db  0x00 ; '.'
000000000020da74         db  0x00 ; '.'
000000000020da75         db  0x00 ; '.'
000000000020da76         db  0x00 ; '.'
000000000020da77         db  0x00 ; '.'
000000000020da78         db  0x75 ; 'u'
000000000020da79         db  0x00 ; '.'
000000000020da7a         db  0x00 ; '.'
000000000020da7b         db  0x00 ; '.'
000000000020da7c         db  0x00 ; '.'
000000000020da7d         db  0x00 ; '.'
000000000020da7e         db  0x00 ; '.'
000000000020da7f         db  0x00 ; '.'
000000000020da80         db  0x78 ; 'x'
000000000020da81         db  0x9d ; '.'
000000000020da82         db  0x00 ; '.'
000000000020da83         db  0x00 ; '.'
000000000020da84         db  0x00 ; '.'
000000000020da85         db  0x00 ; '.'
000000000020da86         db  0x00 ; '.'
000000000020da87         db  0x00 ; '.'
000000000020da88         db  0x01 ; '.'
000000000020da89         db  0x00 ; '.'
000000000020da8a         db  0x00 ; '.'
000000000020da8b         db  0x00 ; '.'
000000000020da8c         db  0x00 ; '.'
000000000020da8d         db  0x00 ; '.'
000000000020da8e         db  0x00 ; '.'
000000000020da8f         db  0x00 ; '.'
000000000020da90         db  0x00 ; '.'
000000000020da91         db  0x00 ; '.'
000000000020da92         db  0x00 ; '.'
000000000020da93         db  0x00 ; '.'
000000000020da94         db  0x00 ; '.'
000000000020da95         db  0x00 ; '.'
000000000020da96         db  0x00 ; '.'
000000000020da97         db  0x00 ; '.'
000000000020da98         db  0x72 ; 'r'
000000000020da99         db  0x00 ; '.'
000000000020da9a         db  0x00 ; '.'
000000000020da9b         db  0x00 ; '.'
000000000020da9c         db  0x00 ; '.'
000000000020da9d         db  0x00 ; '.'
000000000020da9e         db  0x00 ; '.'
000000000020da9f         db  0x00 ; '.'
000000000020daa0         db  0x7d ; '}'
000000000020daa1         db  0x9d ; '.'
000000000020daa2         db  0x00 ; '.'
000000000020daa3         db  0x00 ; '.'
000000000020daa4         db  0x00 ; '.'
000000000020daa5         db  0x00 ; '.'
000000000020daa6         db  0x00 ; '.'
000000000020daa7         db  0x00 ; '.'
000000000020daa8         db  0x01 ; '.'
000000000020daa9         db  0x00 ; '.'
000000000020daaa         db  0x00 ; '.'
000000000020daab         db  0x00 ; '.'
000000000020daac         db  0x00 ; '.'
000000000020daad         db  0x00 ; '.'
000000000020daae         db  0x00 ; '.'
000000000020daaf         db  0x00 ; '.'
000000000020dab0         db  0x00 ; '.'
000000000020dab1         db  0x00 ; '.'
000000000020dab2         db  0x00 ; '.'
000000000020dab3         db  0x00 ; '.'
000000000020dab4         db  0x00 ; '.'
000000000020dab5         db  0x00 ; '.'
000000000020dab6         db  0x00 ; '.'
000000000020dab7         db  0x00 ; '.'
000000000020dab8         db  0x74 ; 't'
000000000020dab9         db  0x00 ; '.'
000000000020daba         db  0x00 ; '.'
000000000020dabb         db  0x00 ; '.'
000000000020dabc         db  0x00 ; '.'
000000000020dabd         db  0x00 ; '.'
000000000020dabe         db  0x00 ; '.'
000000000020dabf         db  0x00 ; '.'
000000000020dac0         db  0x82 ; '.'
000000000020dac1         db  0x9d ; '.'
000000000020dac2         db  0x00 ; '.'
000000000020dac3         db  0x00 ; '.'
000000000020dac4         db  0x00 ; '.'
000000000020dac5         db  0x00 ; '.'
000000000020dac6         db  0x00 ; '.'
000000000020dac7         db  0x00 ; '.'
000000000020dac8         db  0x01 ; '.'
000000000020dac9         db  0x00 ; '.'
000000000020daca         db  0x00 ; '.'
000000000020dacb         db  0x00 ; '.'
000000000020dacc         db  0x00 ; '.'
000000000020dacd         db  0x00 ; '.'
000000000020dace         db  0x00 ; '.'
000000000020dacf         db  0x00 ; '.'
000000000020dad0         db  0x00 ; '.'
000000000020dad1         db  0x00 ; '.'
000000000020dad2         db  0x00 ; '.'
000000000020dad3         db  0x00 ; '.'
000000000020dad4         db  0x00 ; '.'
000000000020dad5         db  0x00 ; '.'
000000000020dad6         db  0x00 ; '.'
000000000020dad7         db  0x00 ; '.'
000000000020dad8         db  0x6c ; 'l'
000000000020dad9         db  0x00 ; '.'
000000000020dada         db  0x00 ; '.'
000000000020dadb         db  0x00 ; '.'
000000000020dadc         db  0x00 ; '.'
000000000020dadd         db  0x00 ; '.'
000000000020dade         db  0x00 ; '.'
000000000020dadf         db  0x00 ; '.'
000000000020dae0         db  0x88 ; '.'
000000000020dae1         db  0x9d ; '.'
000000000020dae2         db  0x00 ; '.'
000000000020dae3         db  0x00 ; '.'
000000000020dae4         db  0x00 ; '.'
000000000020dae5         db  0x00 ; '.'
000000000020dae6         db  0x00 ; '.'
000000000020dae7         db  0x00 ; '.'
000000000020dae8         db  0x00 ; '.'
000000000020dae9         db  0x00 ; '.'
000000000020daea         db  0x00 ; '.'
000000000020daeb         db  0x00 ; '.'
000000000020daec         db  0x00 ; '.'
000000000020daed         db  0x00 ; '.'
000000000020daee         db  0x00 ; '.'
000000000020daef         db  0x00 ; '.'
000000000020daf0         db  0x00 ; '.'
000000000020daf1         db  0x00 ; '.'
000000000020daf2         db  0x00 ; '.'
000000000020daf3         db  0x00 ; '.'
000000000020daf4         db  0x00 ; '.'
000000000020daf5         db  0x00 ; '.'
000000000020daf6         db  0x00 ; '.'
000000000020daf7         db  0x00 ; '.'
000000000020daf8         db  0x76 ; 'v'
000000000020daf9         db  0x00 ; '.'
000000000020dafa         db  0x00 ; '.'
000000000020dafb         db  0x00 ; '.'
000000000020dafc         db  0x00 ; '.'
000000000020dafd         db  0x00 ; '.'
000000000020dafe         db  0x00 ; '.'
000000000020daff         db  0x00 ; '.'
000000000020db00         db  0x90 ; '.'
000000000020db01         db  0x9d ; '.'
000000000020db02         db  0x00 ; '.'
000000000020db03         db  0x00 ; '.'
000000000020db04         db  0x00 ; '.'
000000000020db05         db  0x00 ; '.'
000000000020db06         db  0x00 ; '.'
000000000020db07         db  0x00 ; '.'
000000000020db08         db  0x00 ; '.'
000000000020db09         db  0x00 ; '.'
000000000020db0a         db  0x00 ; '.'
000000000020db0b         db  0x00 ; '.'
000000000020db0c         db  0x00 ; '.'
000000000020db0d         db  0x00 ; '.'
000000000020db0e         db  0x00 ; '.'
000000000020db0f         db  0x00 ; '.'
000000000020db10         db  0x00 ; '.'
000000000020db11         db  0x00 ; '.'
000000000020db12         db  0x00 ; '.'
000000000020db13         db  0x00 ; '.'
000000000020db14         db  0x00 ; '.'
000000000020db15         db  0x00 ; '.'
000000000020db16         db  0x00 ; '.'
000000000020db17         db  0x00 ; '.'
000000000020db18         db  0x7e ; '~'
000000000020db19         db  0xff ; '.'
000000000020db1a         db  0xff ; '.'
000000000020db1b         db  0xff ; '.'
000000000020db1c         db  0x00 ; '.'
000000000020db1d         db  0x00 ; '.'
000000000020db1e         db  0x00 ; '.'
000000000020db1f         db  0x00 ; '.'
000000000020db20         db  0x95 ; '.'
000000000020db21         db  0x9d ; '.'
000000000020db22         db  0x00 ; '.'
000000000020db23         db  0x00 ; '.'
000000000020db24         db  0x00 ; '.'
000000000020db25         db  0x00 ; '.'
000000000020db26         db  0x00 ; '.'
000000000020db27         db  0x00 ; '.'
000000000020db28         db  0x00 ; '.'
000000000020db29         db  0x00 ; '.'
000000000020db2a         db  0x00 ; '.'
000000000020db2b         db  0x00 ; '.'
000000000020db2c         db  0x00 ; '.'
000000000020db2d         db  0x00 ; '.'
000000000020db2e         db  0x00 ; '.'
000000000020db2f         db  0x00 ; '.'
000000000020db30         db  0x00 ; '.'
000000000020db31         db  0x00 ; '.'
000000000020db32         db  0x00 ; '.'
000000000020db33         db  0x00 ; '.'
000000000020db34         db  0x00 ; '.'
000000000020db35         db  0x00 ; '.'
000000000020db36         db  0x00 ; '.'
000000000020db37         db  0x00 ; '.'
000000000020db38         db  0x7d ; '}'
000000000020db39         db  0xff ; '.'
000000000020db3a         db  0xff ; '.'
000000000020db3b         db  0xff ; '.'
000000000020db3c         db  0x00 ; '.'
000000000020db3d         db  0x00 ; '.'
000000000020db3e         db  0x00 ; '.'
000000000020db3f         db  0x00 ; '.'
000000000020db40         db  0x00 ; '.'
000000000020db41         db  0x00 ; '.'
000000000020db42         db  0x00 ; '.'
000000000020db43         db  0x00 ; '.'
000000000020db44         db  0x00 ; '.'
000000000020db45         db  0x00 ; '.'
000000000020db46         db  0x00 ; '.'
000000000020db47         db  0x00 ; '.'
000000000020db48         db  0x00 ; '.'
000000000020db49         db  0x00 ; '.'
000000000020db4a         db  0x00 ; '.'
000000000020db4b         db  0x00 ; '.'
000000000020db4c         db  0x00 ; '.'
000000000020db4d         db  0x00 ; '.'
000000000020db4e         db  0x00 ; '.'
000000000020db4f         db  0x00 ; '.'
000000000020db50         db  0x00 ; '.'
000000000020db51         db  0x00 ; '.'
000000000020db52         db  0x00 ; '.'
000000000020db53         db  0x00 ; '.'
000000000020db54         db  0x00 ; '.'
000000000020db55         db  0x00 ; '.'
000000000020db56         db  0x00 ; '.'
000000000020db57         db  0x00 ; '.'
000000000020db58         db  0x00 ; '.'
000000000020db59         db  0x00 ; '.'
000000000020db5a         db  0x00 ; '.'
000000000020db5b         db  0x00 ; '.'
000000000020db5c         db  0x00 ; '.'
000000000020db5d         db  0x00 ; '.'
000000000020db5e         db  0x00 ; '.'
000000000020db5f         db  0x00 ; '.'
                     quoting_style_args:
000000000020db60         db  0xef ; '.'
000000000020db61         db  0xa8 ; '.'
000000000020db62         db  0x00 ; '.'
000000000020db63         db  0x00 ; '.'
000000000020db64         db  0x00 ; '.'
000000000020db65         db  0x00 ; '.'
000000000020db66         db  0x00 ; '.'
000000000020db67         db  0x00 ; '.'
000000000020db68         db  0xf7 ; '.'
000000000020db69         db  0xa8 ; '.'
000000000020db6a         db  0x00 ; '.'
000000000020db6b         db  0x00 ; '.'
000000000020db6c         db  0x00 ; '.'
000000000020db6d         db  0x00 ; '.'
000000000020db6e         db  0x00 ; '.'
000000000020db6f         db  0x00 ; '.'
000000000020db70         db  0xfd ; '.'
000000000020db71         db  0xa8 ; '.'
000000000020db72         db  0x00 ; '.'
000000000020db73         db  0x00 ; '.'
000000000020db74         db  0x00 ; '.'
000000000020db75         db  0x00 ; '.'
000000000020db76         db  0x00 ; '.'
000000000020db77         db  0x00 ; '.'
000000000020db78         db  0x0a ; '.'
000000000020db79         db  0xa9 ; '.'
000000000020db7a         db  0x00 ; '.'
000000000020db7b         db  0x00 ; '.'
000000000020db7c         db  0x00 ; '.'
000000000020db7d         db  0x00 ; '.'
000000000020db7e         db  0x00 ; '.'
000000000020db7f         db  0x00 ; '.'
000000000020db80         db  0x17 ; '.'
000000000020db81         db  0xa9 ; '.'
000000000020db82         db  0x00 ; '.'
000000000020db83         db  0x00 ; '.'
000000000020db84         db  0x00 ; '.'
000000000020db85         db  0x00 ; '.'
000000000020db86         db  0x00 ; '.'
000000000020db87         db  0x00 ; '.'
000000000020db88         db  0x3b ; ';'
000000000020db89         db  0xb1 ; '.'
000000000020db8a         db  0x00 ; '.'
000000000020db8b         db  0x00 ; '.'
000000000020db8c         db  0x00 ; '.'
000000000020db8d         db  0x00 ; '.'
000000000020db8e         db  0x00 ; '.'
000000000020db8f         db  0x00 ; '.'
000000000020db90         db  0x2b ; '+'
000000000020db91         db  0xa9 ; '.'
000000000020db92         db  0x00 ; '.'
000000000020db93         db  0x00 ; '.'
000000000020db94         db  0x00 ; '.'
000000000020db95         db  0x00 ; '.'
000000000020db96         db  0x00 ; '.'
000000000020db97         db  0x00 ; '.'
000000000020db98         db  0x10 ; '.'
000000000020db99         db  0xa9 ; '.'
000000000020db9a         db  0x00 ; '.'
000000000020db9b         db  0x00 ; '.'
000000000020db9c         db  0x00 ; '.'
000000000020db9d         db  0x00 ; '.'
000000000020db9e         db  0x00 ; '.'
000000000020db9f         db  0x00 ; '.'
000000000020dba0         db  0x7e ; '~'
000000000020dba1         db  0x9c ; '.'
000000000020dba2         db  0x00 ; '.'
000000000020dba3         db  0x00 ; '.'
000000000020dba4         db  0x00 ; '.'
000000000020dba5         db  0x00 ; '.'
000000000020dba6         db  0x00 ; '.'
000000000020dba7         db  0x00 ; '.'
000000000020dba8         db  0x33 ; '3'
000000000020dba9         db  0xa9 ; '.'
000000000020dbaa         db  0x00 ; '.'
000000000020dbab         db  0x00 ; '.'
000000000020dbac         db  0x00 ; '.'
000000000020dbad         db  0x00 ; '.'
000000000020dbae         db  0x00 ; '.'
000000000020dbaf         db  0x00 ; '.'
000000000020dbb0         db  0x00 ; '.'
000000000020dbb1         db  0x00 ; '.'
000000000020dbb2         db  0x00 ; '.'
000000000020dbb3         db  0x00 ; '.'
000000000020dbb4         db  0x00 ; '.'
000000000020dbb5         db  0x00 ; '.'
000000000020dbb6         db  0x00 ; '.'
000000000020dbb7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20dbb8; 0x20dda8[ (496 bytes)
        ; File offset : [56248; 56744[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020dbb8         db  0x01 ; '.'
000000000020dbb9         db  0x00 ; '.'
000000000020dbba         db  0x00 ; '.'
000000000020dbbb         db  0x00 ; '.'
000000000020dbbc         db  0x00 ; '.'
000000000020dbbd         db  0x00 ; '.'
000000000020dbbe         db  0x00 ; '.'
000000000020dbbf         db  0x00 ; '.'
000000000020dbc0         db  0x01 ; '.'
000000000020dbc1         db  0x00 ; '.'
000000000020dbc2         db  0x00 ; '.'
000000000020dbc3         db  0x00 ; '.'
000000000020dbc4         db  0x00 ; '.'
000000000020dbc5         db  0x00 ; '.'
000000000020dbc6         db  0x00 ; '.'
000000000020dbc7         db  0x00 ; '.'
000000000020dbc8         db  0x0c ; '.'
000000000020dbc9         db  0x00 ; '.'
000000000020dbca         db  0x00 ; '.'
000000000020dbcb         db  0x00 ; '.'
000000000020dbcc         db  0x00 ; '.'
000000000020dbcd         db  0x00 ; '.'
000000000020dbce         db  0x00 ; '.'
000000000020dbcf         db  0x00 ; '.'
000000000020dbd0         db  0x60 ; '`'
000000000020dbd1         db  0x18 ; '.'
000000000020dbd2         db  0x00 ; '.'
000000000020dbd3         db  0x00 ; '.'
000000000020dbd4         db  0x00 ; '.'
000000000020dbd5         db  0x00 ; '.'
000000000020dbd6         db  0x00 ; '.'
000000000020dbd7         db  0x00 ; '.'
000000000020dbd8         db  0x0d ; '.'
000000000020dbd9         db  0x00 ; '.'
000000000020dbda         db  0x00 ; '.'
000000000020dbdb         db  0x00 ; '.'
000000000020dbdc         db  0x00 ; '.'
000000000020dbdd         db  0x00 ; '.'
000000000020dbde         db  0x00 ; '.'
000000000020dbdf         db  0x00 ; '.'
000000000020dbe0         db  0xb0 ; '.'
000000000020dbe1         db  0x9b ; '.'
000000000020dbe2         db  0x00 ; '.'
000000000020dbe3         db  0x00 ; '.'
000000000020dbe4         db  0x00 ; '.'
000000000020dbe5         db  0x00 ; '.'
000000000020dbe6         db  0x00 ; '.'
000000000020dbe7         db  0x00 ; '.'
000000000020dbe8         db  0x19 ; '.'
000000000020dbe9         db  0x00 ; '.'
000000000020dbea         db  0x00 ; '.'
000000000020dbeb         db  0x00 ; '.'
000000000020dbec         db  0x00 ; '.'
000000000020dbed         db  0x00 ; '.'
000000000020dbee         db  0x00 ; '.'
000000000020dbef         db  0x00 ; '.'
000000000020dbf0         db  0x90 ; '.'
000000000020dbf1         db  0xd9 ; '.'
000000000020dbf2         db  0x20 ; ' '
000000000020dbf3         db  0x00 ; '.'
000000000020dbf4         db  0x00 ; '.'
000000000020dbf5         db  0x00 ; '.'
000000000020dbf6         db  0x00 ; '.'
000000000020dbf7         db  0x00 ; '.'
000000000020dbf8         db  0x1b ; '.'
000000000020dbf9         db  0x00 ; '.'
000000000020dbfa         db  0x00 ; '.'
000000000020dbfb         db  0x00 ; '.'
000000000020dbfc         db  0x00 ; '.'
000000000020dbfd         db  0x00 ; '.'
000000000020dbfe         db  0x00 ; '.'
000000000020dbff         db  0x00 ; '.'
000000000020dc00         db  0x08 ; '.'
000000000020dc01         db  0x00 ; '.'
000000000020dc02         db  0x00 ; '.'
000000000020dc03         db  0x00 ; '.'
000000000020dc04         db  0x00 ; '.'
000000000020dc05         db  0x00 ; '.'
000000000020dc06         db  0x00 ; '.'
000000000020dc07         db  0x00 ; '.'
000000000020dc08         db  0x1a ; '.'
000000000020dc09         db  0x00 ; '.'
000000000020dc0a         db  0x00 ; '.'
000000000020dc0b         db  0x00 ; '.'
000000000020dc0c         db  0x00 ; '.'
000000000020dc0d         db  0x00 ; '.'
000000000020dc0e         db  0x00 ; '.'
000000000020dc0f         db  0x00 ; '.'
000000000020dc10         db  0x98 ; '.'
000000000020dc11         db  0xd9 ; '.'
000000000020dc12         db  0x20 ; ' '
000000000020dc13         db  0x00 ; '.'
000000000020dc14         db  0x00 ; '.'
000000000020dc15         db  0x00 ; '.'
000000000020dc16         db  0x00 ; '.'
000000000020dc17         db  0x00 ; '.'
000000000020dc18         db  0x1c ; '.'
000000000020dc19         db  0x00 ; '.'
000000000020dc1a         db  0x00 ; '.'
000000000020dc1b         db  0x00 ; '.'
000000000020dc1c         db  0x00 ; '.'
000000000020dc1d         db  0x00 ; '.'
000000000020dc1e         db  0x00 ; '.'
000000000020dc1f         db  0x00 ; '.'
000000000020dc20         db  0x08 ; '.'
000000000020dc21         db  0x00 ; '.'
000000000020dc22         db  0x00 ; '.'
000000000020dc23         db  0x00 ; '.'
000000000020dc24         db  0x00 ; '.'
000000000020dc25         db  0x00 ; '.'
000000000020dc26         db  0x00 ; '.'
000000000020dc27         db  0x00 ; '.'
000000000020dc28         db  0xf5 ; '.'
000000000020dc29         db  0xfe ; '.'
000000000020dc2a         db  0xff ; '.'
000000000020dc2b         db  0x6f ; 'o'
000000000020dc2c         db  0x00 ; '.'
000000000020dc2d         db  0x00 ; '.'
000000000020dc2e         db  0x00 ; '.'
000000000020dc2f         db  0x00 ; '.'
000000000020dc30         db  0x98 ; '.'
000000000020dc31         db  0x02 ; '.'
000000000020dc32         db  0x00 ; '.'
000000000020dc33         db  0x00 ; '.'
000000000020dc34         db  0x00 ; '.'
000000000020dc35         db  0x00 ; '.'
000000000020dc36         db  0x00 ; '.'
000000000020dc37         db  0x00 ; '.'
000000000020dc38         db  0x05 ; '.'
000000000020dc39         db  0x00 ; '.'
000000000020dc3a         db  0x00 ; '.'
000000000020dc3b         db  0x00 ; '.'
000000000020dc3c         db  0x00 ; '.'
000000000020dc3d         db  0x00 ; '.'
000000000020dc3e         db  0x00 ; '.'
000000000020dc3f         db  0x00 ; '.'
000000000020dc40         db  0x48 ; 'H'
000000000020dc41         db  0x0a ; '.'
000000000020dc42         db  0x00 ; '.'
000000000020dc43         db  0x00 ; '.'
000000000020dc44         db  0x00 ; '.'
000000000020dc45         db  0x00 ; '.'
000000000020dc46         db  0x00 ; '.'
000000000020dc47         db  0x00 ; '.'
000000000020dc48         db  0x06 ; '.'
000000000020dc49         db  0x00 ; '.'
000000000020dc4a         db  0x00 ; '.'
000000000020dc4b         db  0x00 ; '.'
000000000020dc4c         db  0x00 ; '.'
000000000020dc4d         db  0x00 ; '.'
000000000020dc4e         db  0x00 ; '.'
000000000020dc4f         db  0x00 ; '.'
000000000020dc50         db  0xe0 ; '.'
000000000020dc51         db  0x02 ; '.'
000000000020dc52         db  0x00 ; '.'
000000000020dc53         db  0x00 ; '.'
000000000020dc54         db  0x00 ; '.'
000000000020dc55         db  0x00 ; '.'
000000000020dc56         db  0x00 ; '.'
000000000020dc57         db  0x00 ; '.'
000000000020dc58         db  0x0a ; '.'
000000000020dc59         db  0x00 ; '.'
000000000020dc5a         db  0x00 ; '.'
000000000020dc5b         db  0x00 ; '.'
000000000020dc5c         db  0x00 ; '.'
000000000020dc5d         db  0x00 ; '.'
000000000020dc5e         db  0x00 ; '.'
000000000020dc5f         db  0x00 ; '.'
000000000020dc60         db  0x42 ; 'B'
000000000020dc61         db  0x03 ; '.'
000000000020dc62         db  0x00 ; '.'
000000000020dc63         db  0x00 ; '.'
000000000020dc64         db  0x00 ; '.'
000000000020dc65         db  0x00 ; '.'
000000000020dc66         db  0x00 ; '.'
000000000020dc67         db  0x00 ; '.'
000000000020dc68         db  0x0b ; '.'
000000000020dc69         db  0x00 ; '.'
000000000020dc6a         db  0x00 ; '.'
000000000020dc6b         db  0x00 ; '.'
000000000020dc6c         db  0x00 ; '.'
000000000020dc6d         db  0x00 ; '.'
000000000020dc6e         db  0x00 ; '.'
000000000020dc6f         db  0x00 ; '.'
000000000020dc70         db  0x18 ; '.'
000000000020dc71         db  0x00 ; '.'
000000000020dc72         db  0x00 ; '.'
000000000020dc73         db  0x00 ; '.'
000000000020dc74         db  0x00 ; '.'
000000000020dc75         db  0x00 ; '.'
000000000020dc76         db  0x00 ; '.'
000000000020dc77         db  0x00 ; '.'
000000000020dc78         db  0x15 ; '.'
000000000020dc79         db  0x00 ; '.'
000000000020dc7a         db  0x00 ; '.'
000000000020dc7b         db  0x00 ; '.'
000000000020dc7c         db  0x00 ; '.'
000000000020dc7d         db  0x00 ; '.'
000000000020dc7e         db  0x00 ; '.'
000000000020dc7f         db  0x00 ; '.'
000000000020dc80         db  0x00 ; '.'
000000000020dc81         db  0x00 ; '.'
000000000020dc82         db  0x00 ; '.'
000000000020dc83         db  0x00 ; '.'
000000000020dc84         db  0x00 ; '.'
000000000020dc85         db  0x00 ; '.'
000000000020dc86         db  0x00 ; '.'
000000000020dc87         db  0x00 ; '.'
000000000020dc88         db  0x03 ; '.'
000000000020dc89         db  0x00 ; '.'
000000000020dc8a         db  0x00 ; '.'
000000000020dc8b         db  0x00 ; '.'
000000000020dc8c         db  0x00 ; '.'
000000000020dc8d         db  0x00 ; '.'
000000000020dc8e         db  0x00 ; '.'
000000000020dc8f         db  0x00 ; '.'
000000000020dc90         db  0xa8 ; '.'
000000000020dc91         db  0xdd ; '.'
000000000020dc92         db  0x20 ; ' '
000000000020dc93         db  0x00 ; '.'
000000000020dc94         db  0x00 ; '.'
000000000020dc95         db  0x00 ; '.'
000000000020dc96         db  0x00 ; '.'
000000000020dc97         db  0x00 ; '.'
000000000020dc98         db  0x02 ; '.'
000000000020dc99         db  0x00 ; '.'
000000000020dc9a         db  0x00 ; '.'
000000000020dc9b         db  0x00 ; '.'
000000000020dc9c         db  0x00 ; '.'
000000000020dc9d         db  0x00 ; '.'
000000000020dc9e         db  0x00 ; '.'
000000000020dc9f         db  0x00 ; '.'
000000000020dca0         db  0x00 ; '.'
000000000020dca1         db  0x06 ; '.'
000000000020dca2         db  0x00 ; '.'
000000000020dca3         db  0x00 ; '.'
000000000020dca4         db  0x00 ; '.'
000000000020dca5         db  0x00 ; '.'
000000000020dca6         db  0x00 ; '.'
000000000020dca7         db  0x00 ; '.'
000000000020dca8         db  0x14 ; '.'
000000000020dca9         db  0x00 ; '.'
000000000020dcaa         db  0x00 ; '.'
000000000020dcab         db  0x00 ; '.'
000000000020dcac         db  0x00 ; '.'
000000000020dcad         db  0x00 ; '.'
000000000020dcae         db  0x00 ; '.'
000000000020dcaf         db  0x00 ; '.'
000000000020dcb0         db  0x07 ; '.'
000000000020dcb1         db  0x00 ; '.'
000000000020dcb2         db  0x00 ; '.'
000000000020dcb3         db  0x00 ; '.'
000000000020dcb4         db  0x00 ; '.'
000000000020dcb5         db  0x00 ; '.'
000000000020dcb6         db  0x00 ; '.'
000000000020dcb7         db  0x00 ; '.'
000000000020dcb8         db  0x17 ; '.'
000000000020dcb9         db  0x00 ; '.'
000000000020dcba         db  0x00 ; '.'
000000000020dcbb         db  0x00 ; '.'
000000000020dcbc         db  0x00 ; '.'
000000000020dcbd         db  0x00 ; '.'
000000000020dcbe         db  0x00 ; '.'
000000000020dcbf         db  0x00 ; '.'
000000000020dcc0         db  0x60 ; '`'
000000000020dcc1         db  0x12 ; '.'
000000000020dcc2         db  0x00 ; '.'
000000000020dcc3         db  0x00 ; '.'
000000000020dcc4         db  0x00 ; '.'
000000000020dcc5         db  0x00 ; '.'
000000000020dcc6         db  0x00 ; '.'
000000000020dcc7         db  0x00 ; '.'
000000000020dcc8         db  0x07 ; '.'
000000000020dcc9         db  0x00 ; '.'
000000000020dcca         db  0x00 ; '.'
000000000020dccb         db  0x00 ; '.'
000000000020dccc         db  0x00 ; '.'
000000000020dccd         db  0x00 ; '.'
000000000020dcce         db  0x00 ; '.'
000000000020dccf         db  0x00 ; '.'
000000000020dcd0         db  0x88 ; '.'
000000000020dcd1         db  0x0e ; '.'
000000000020dcd2         db  0x00 ; '.'
000000000020dcd3         db  0x00 ; '.'
000000000020dcd4         db  0x00 ; '.'
000000000020dcd5         db  0x00 ; '.'
000000000020dcd6         db  0x00 ; '.'
000000000020dcd7         db  0x00 ; '.'
000000000020dcd8         db  0x08 ; '.'
000000000020dcd9         db  0x00 ; '.'
000000000020dcda         db  0x00 ; '.'
000000000020dcdb         db  0x00 ; '.'
000000000020dcdc         db  0x00 ; '.'
000000000020dcdd         db  0x00 ; '.'
000000000020dcde         db  0x00 ; '.'
000000000020dcdf         db  0x00 ; '.'
000000000020dce0         db  0xd8 ; '.'
000000000020dce1         db  0x03 ; '.'
000000000020dce2         db  0x00 ; '.'
000000000020dce3         db  0x00 ; '.'
000000000020dce4         db  0x00 ; '.'
000000000020dce5         db  0x00 ; '.'
000000000020dce6         db  0x00 ; '.'
000000000020dce7         db  0x00 ; '.'
000000000020dce8         db  0x09 ; '.'
000000000020dce9         db  0x00 ; '.'
000000000020dcea         db  0x00 ; '.'
000000000020dceb         db  0x00 ; '.'
000000000020dcec         db  0x00 ; '.'
000000000020dced         db  0x00 ; '.'
000000000020dcee         db  0x00 ; '.'
000000000020dcef         db  0x00 ; '.'
000000000020dcf0         db  0x18 ; '.'
000000000020dcf1         db  0x00 ; '.'
000000000020dcf2         db  0x00 ; '.'
000000000020dcf3         db  0x00 ; '.'
000000000020dcf4         db  0x00 ; '.'
000000000020dcf5         db  0x00 ; '.'
000000000020dcf6         db  0x00 ; '.'
000000000020dcf7         db  0x00 ; '.'
000000000020dcf8         db  0x1e ; '.'
000000000020dcf9         db  0x00 ; '.'
000000000020dcfa         db  0x00 ; '.'
000000000020dcfb         db  0x00 ; '.'
000000000020dcfc         db  0x00 ; '.'
000000000020dcfd         db  0x00 ; '.'
000000000020dcfe         db  0x00 ; '.'
000000000020dcff         db  0x00 ; '.'
000000000020dd00         db  0x08 ; '.'
000000000020dd01         db  0x00 ; '.'
000000000020dd02         db  0x00 ; '.'
000000000020dd03         db  0x00 ; '.'
000000000020dd04         db  0x00 ; '.'
000000000020dd05         db  0x00 ; '.'
000000000020dd06         db  0x00 ; '.'
000000000020dd07         db  0x00 ; '.'
000000000020dd08         db  0xfb ; '.'
000000000020dd09         db  0xff ; '.'
000000000020dd0a         db  0xff ; '.'
000000000020dd0b         db  0x6f ; 'o'
000000000020dd0c         db  0x00 ; '.'
000000000020dd0d         db  0x00 ; '.'
000000000020dd0e         db  0x00 ; '.'
000000000020dd0f         db  0x00 ; '.'
000000000020dd10         db  0x01 ; '.'
000000000020dd11         db  0x00 ; '.'
000000000020dd12         db  0x00 ; '.'
000000000020dd13         db  0x08 ; '.'
000000000020dd14         db  0x00 ; '.'
000000000020dd15         db  0x00 ; '.'
000000000020dd16         db  0x00 ; '.'
000000000020dd17         db  0x00 ; '.'
000000000020dd18         db  0xfe ; '.'
000000000020dd19         db  0xff ; '.'
000000000020dd1a         db  0xff ; '.'
000000000020dd1b         db  0x6f ; 'o'
000000000020dd1c         db  0x00 ; '.'
000000000020dd1d         db  0x00 ; '.'
000000000020dd1e         db  0x00 ; '.'
000000000020dd1f         db  0x00 ; '.'
000000000020dd20         db  0x28 ; '('
000000000020dd21         db  0x0e ; '.'
000000000020dd22         db  0x00 ; '.'
000000000020dd23         db  0x00 ; '.'
000000000020dd24         db  0x00 ; '.'
000000000020dd25         db  0x00 ; '.'
000000000020dd26         db  0x00 ; '.'
000000000020dd27         db  0x00 ; '.'
000000000020dd28         db  0xff ; '.'
000000000020dd29         db  0xff ; '.'
000000000020dd2a         db  0xff ; '.'
000000000020dd2b         db  0x6f ; 'o'
000000000020dd2c         db  0x00 ; '.'
000000000020dd2d         db  0x00 ; '.'
000000000020dd2e         db  0x00 ; '.'
000000000020dd2f         db  0x00 ; '.'
000000000020dd30         db  0x01 ; '.'
000000000020dd31         db  0x00 ; '.'
000000000020dd32         db  0x00 ; '.'
000000000020dd33         db  0x00 ; '.'
000000000020dd34         db  0x00 ; '.'
000000000020dd35         db  0x00 ; '.'
000000000020dd36         db  0x00 ; '.'
000000000020dd37         db  0x00 ; '.'
000000000020dd38         db  0xf0 ; '.'
000000000020dd39         db  0xff ; '.'
000000000020dd3a         db  0xff ; '.'
000000000020dd3b         db  0x6f ; 'o'
000000000020dd3c         db  0x00 ; '.'
000000000020dd3d         db  0x00 ; '.'
000000000020dd3e         db  0x00 ; '.'
000000000020dd3f         db  0x00 ; '.'
000000000020dd40         db  0x8a ; '.'
000000000020dd41         db  0x0d ; '.'
000000000020dd42         db  0x00 ; '.'
000000000020dd43         db  0x00 ; '.'
000000000020dd44         db  0x00 ; '.'
000000000020dd45         db  0x00 ; '.'
000000000020dd46         db  0x00 ; '.'
000000000020dd47         db  0x00 ; '.'
000000000020dd48         db  0xf9 ; '.'
000000000020dd49         db  0xff ; '.'
000000000020dd4a         db  0xff ; '.'
000000000020dd4b         db  0x6f ; 'o'
000000000020dd4c         db  0x00 ; '.'
000000000020dd4d         db  0x00 ; '.'
000000000020dd4e         db  0x00 ; '.'
000000000020dd4f         db  0x00 ; '.'
000000000020dd50         db  0x1d ; '.'
000000000020dd51         db  0x00 ; '.'
000000000020dd52         db  0x00 ; '.'
000000000020dd53         db  0x00 ; '.'
000000000020dd54         db  0x00 ; '.'
000000000020dd55         db  0x00 ; '.'
000000000020dd56         db  0x00 ; '.'
000000000020dd57         db  0x00 ; '.'
000000000020dd58         db  0x00 ; '.'
000000000020dd59         db  0x00 ; '.'
000000000020dd5a         db  0x00 ; '.'
000000000020dd5b         db  0x00 ; '.'
000000000020dd5c         db  0x00 ; '.'
000000000020dd5d         db  0x00 ; '.'
000000000020dd5e         db  0x00 ; '.'
000000000020dd5f         db  0x00 ; '.'
000000000020dd60         db  0x00 ; '.'
000000000020dd61         db  0x00 ; '.'
000000000020dd62         db  0x00 ; '.'
000000000020dd63         db  0x00 ; '.'
000000000020dd64         db  0x00 ; '.'
000000000020dd65         db  0x00 ; '.'
000000000020dd66         db  0x00 ; '.'
000000000020dd67         db  0x00 ; '.'
000000000020dd68         db  0x00 ; '.'
000000000020dd69         db  0x00 ; '.'
000000000020dd6a         db  0x00 ; '.'
000000000020dd6b         db  0x00 ; '.'
000000000020dd6c         db  0x00 ; '.'
000000000020dd6d         db  0x00 ; '.'
000000000020dd6e         db  0x00 ; '.'
000000000020dd6f         db  0x00 ; '.'
000000000020dd70         db  0x00 ; '.'
000000000020dd71         db  0x00 ; '.'
000000000020dd72         db  0x00 ; '.'
000000000020dd73         db  0x00 ; '.'
000000000020dd74         db  0x00 ; '.'
000000000020dd75         db  0x00 ; '.'
000000000020dd76         db  0x00 ; '.'
000000000020dd77         db  0x00 ; '.'
000000000020dd78         db  0x00 ; '.'
000000000020dd79         db  0x00 ; '.'
000000000020dd7a         db  0x00 ; '.'
000000000020dd7b         db  0x00 ; '.'
000000000020dd7c         db  0x00 ; '.'
000000000020dd7d         db  0x00 ; '.'
000000000020dd7e         db  0x00 ; '.'
000000000020dd7f         db  0x00 ; '.'
000000000020dd80         db  0x00 ; '.'
000000000020dd81         db  0x00 ; '.'
000000000020dd82         db  0x00 ; '.'
000000000020dd83         db  0x00 ; '.'
000000000020dd84         db  0x00 ; '.'
000000000020dd85         db  0x00 ; '.'
000000000020dd86         db  0x00 ; '.'
000000000020dd87         db  0x00 ; '.'
000000000020dd88         db  0x00 ; '.'
000000000020dd89         db  0x00 ; '.'
000000000020dd8a         db  0x00 ; '.'
000000000020dd8b         db  0x00 ; '.'
000000000020dd8c         db  0x00 ; '.'
000000000020dd8d         db  0x00 ; '.'
000000000020dd8e         db  0x00 ; '.'
000000000020dd8f         db  0x00 ; '.'
000000000020dd90         db  0x00 ; '.'
000000000020dd91         db  0x00 ; '.'
000000000020dd92         db  0x00 ; '.'
000000000020dd93         db  0x00 ; '.'
000000000020dd94         db  0x00 ; '.'
000000000020dd95         db  0x00 ; '.'
000000000020dd96         db  0x00 ; '.'
000000000020dd97         db  0x00 ; '.'
000000000020dd98         db  0x00 ; '.'
000000000020dd99         db  0x00 ; '.'
000000000020dd9a         db  0x00 ; '.'
000000000020dd9b         db  0x00 ; '.'
000000000020dd9c         db  0x00 ; '.'
000000000020dd9d         db  0x00 ; '.'
000000000020dd9e         db  0x00 ; '.'
000000000020dd9f         db  0x00 ; '.'
000000000020dda0         db  0x00 ; '.'
000000000020dda1         db  0x00 ; '.'
000000000020dda2         db  0x00 ; '.'
000000000020dda3         db  0x00 ; '.'
000000000020dda4         db  0x00 ; '.'
000000000020dda5         db  0x00 ; '.'
000000000020dda6         db  0x00 ; '.'
000000000020dda7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20dda8; 0x20dff0[ (584 bytes)
        ; File offset : [56744; 57328[ (584 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020dda8         db  0xb8 ; '.'
000000000020dda9         db  0xdb ; '.'
000000000020ddaa         db  0x20 ; ' '
000000000020ddab         db  0x00 ; '.'
000000000020ddac         db  0x00 ; '.'
000000000020ddad         db  0x00 ; '.'
000000000020ddae         db  0x00 ; '.'
000000000020ddaf         db  0x00 ; '.'
                     qword_20ddb0:
000000000020ddb0         dq         0x0000000000000000                          ; DATA XREF=0x1880
000000000020ddb8         db  0x00 ; '.'                                         ; DATA XREF=0x1886
000000000020ddb9         db  0x00 ; '.'
000000000020ddba         db  0x00 ; '.'
000000000020ddbb         db  0x00 ; '.'
000000000020ddbc         db  0x00 ; '.'
000000000020ddbd         db  0x00 ; '.'
000000000020ddbe         db  0x00 ; '.'
000000000020ddbf         db  0x00 ; '.'
                     abort@GOT:        // abort
000000000020ddc0         dq         0x000000000020e278                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ddc8         dq         0x000000000020e280                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020ddd0         dq         0x000000000020e288                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020ddd8         dq         0x000000000020e298                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000020dde0         dq         0x000000000020e2a0                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000020dde8         dq         0x000000000020e2a8                          ; DATA XREF=j___fpending
                     qsort@GOT:        // qsort
000000000020ddf0         dq         0x000000000020e2b0                          ; DATA XREF=j_qsort
                     fcntl@GOT:        // fcntl
000000000020ddf8         dq         0x000000000020e2b8                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
000000000020de00         dq         0x000000000020e2c0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020de08         dq         0x000000000020e2c8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020de10         dq         0x000000000020e2d0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020de18         dq         0x000000000020e2d8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020de20         dq         0x000000000020e2e0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020de28         dq         0x000000000020e2e8                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000020de30         dq         0x000000000020e2f0                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
000000000020de38         dq         0x000000000020e2f8                          ; DATA XREF=j_openat
                     chdir@GOT:        // chdir
000000000020de40         dq         0x000000000020e300                          ; DATA XREF=j_chdir
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020de48         dq         0x000000000020e308                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020de50         dq         0x000000000020e310                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020de58         dq         0x000000000020e318                          ; DATA XREF=j_mbrtowc
                     __fxstatat@GOT:        // __fxstatat
000000000020de60         dq         0x000000000020e320                          ; DATA XREF=j___fxstatat
                     strrchr@GOT:        // strrchr
000000000020de68         dq         0x000000000020e328                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020de70         dq         0x000000000020e330                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020de78         dq         0x000000000020e338                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020de80         dq         0x000000000020e340                          ; DATA XREF=j_memset
                     getcwd@GOT:        // getcwd
000000000020de88         dq         0x000000000020e348                          ; DATA XREF=j_getcwd
                     close@GOT:        // close
000000000020de90         dq         0x000000000020e350                          ; DATA XREF=j_close
                     strspn@GOT:        // strspn
000000000020de98         dq         0x000000000020e358                          ; DATA XREF=j_strspn
                     closedir@GOT:        // closedir
000000000020dea0         dq         0x000000000020e360                          ; DATA XREF=j_closedir
                     memchr@GOT:        // memchr
000000000020dea8         dq         0x000000000020e368                          ; DATA XREF=j_memchr
                     memcmp@GOT:        // memcmp
000000000020deb0         dq         0x000000000020e378                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020deb8         dq         0x000000000020e380                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020dec0         dq         0x000000000020e388                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020dec8         dq         0x000000000020e390                          ; DATA XREF=j_strcmp
                     dirfd@GOT:        // dirfd
000000000020ded0         dq         0x000000000020e398                          ; DATA XREF=j_dirfd
                     memcpy@GOT:        // memcpy
000000000020ded8         dq         0x000000000020e3a8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020dee0         dq         0x000000000020e3b0                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020dee8         dq         0x000000000020e3b8                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000020def0         dq         0x000000000020e3c0                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
000000000020def8         dq         0x000000000020e3c8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020df00         dq         0x000000000020e3d0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020df08         dq         0x000000000020e3d8                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020df10         dq         0x000000000020e3e0                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
000000000020df18         dq         0x000000000020e3e8                          ; DATA XREF=j___freading
                     fchdir@GOT:        // fchdir
000000000020df20         dq         0x000000000020e3f0                          ; DATA XREF=j_fchdir
                     realloc@GOT:        // realloc
000000000020df28         dq         0x000000000020e3f8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020df30         dq         0x000000000020e400                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020df38         dq         0x000000000020e408                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
000000000020df40         dq         0x000000000020e410                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020df48         dq         0x000000000020e418                          ; DATA XREF=j_error
                     memrchr@GOT:        // memrchr
000000000020df50         dq         0x000000000020e420                          ; DATA XREF=j_memrchr
                     open@GOT:        // open
000000000020df58         dq         0x000000000020e428                          ; DATA XREF=j_open
                     access@GOT:        // access
000000000020df60         dq         0x000000000020e430                          ; DATA XREF=j_access
                     fseeko@GOT:        // fseeko
000000000020df68         dq         0x000000000020e438                          ; DATA XREF=j_fseeko
                     fdopendir@GOT:        // fdopendir
000000000020df70         dq         0x000000000020e440                          ; DATA XREF=j_fdopendir
                     fstatfs@GOT:        // fstatfs
000000000020df78         dq         0x000000000020e448                          ; DATA XREF=j_fstatfs
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020df80         dq         0x000000000020e450                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020df88         dq         0x000000000020e458                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020df90         dq         0x000000000020e460                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020df98         dq         0x000000000020e468                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020dfa0         dq         0x000000000020e478                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020dfa8         dq         0x000000000020e480                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020dfb0         dq         0x000000000020e490                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
000000000020dfb8         dq         0x000000000020e498                          ; DATA XREF=j___sprintf_chk
                     qword_20dfc0:
000000000020dfc0         dq         0x0000000000000000                          ; DATA XREF=sub_1c90, filesystem_type+96, setup_dir.isra.4+12
                     qword_20dfc8:
000000000020dfc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020dfd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020dfd1         db  0x00 ; '.'
000000000020dfd2         db  0x00 ; '.'
000000000020dfd3         db  0x00 ; '.'
000000000020dfd4         db  0x00 ; '.'
000000000020dfd5         db  0x00 ; '.'
000000000020dfd6         db  0x00 ; '.'
000000000020dfd7         db  0x00 ; '.'
                     qword_20dfd8:
000000000020dfd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20dfe0:
000000000020dfe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20dfe8:
000000000020dfe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20dfe8, __do_global_dtors_aux+9
000000000020dff0         db  0x00 ; '.'
000000000020dff1         db  0x00 ; '.'
000000000020dff2         db  0x00 ; '.'
000000000020dff3         db  0x00 ; '.'
000000000020dff4         db  0x00 ; '.'
000000000020dff5         db  0x00 ; '.'
000000000020dff6         db  0x00 ; '.'
000000000020dff7         db  0x00 ; '.'
000000000020dff8         db  0x00 ; '.'
000000000020dff9         db  0x00 ; '.'
000000000020dffa         db  0x00 ; '.'
000000000020dffb         db  0x00 ; '.'
000000000020dffc         db  0x00 ; '.'
000000000020dffd         db  0x00 ; '.'
000000000020dffe         db  0x00 ; '.'
000000000020dfff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20e000; 0x20e080[ (128 bytes)
        ; File offset : [57344; 57472[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020e000         db  0x00 ; '.'
000000000020e001         db  0x00 ; '.'
000000000020e002         db  0x00 ; '.'
000000000020e003         db  0x00 ; '.'
000000000020e004         db  0x00 ; '.'
000000000020e005         db  0x00 ; '.'
000000000020e006         db  0x00 ; '.'
000000000020e007         db  0x00 ; '.'
                     __dso_handle:
000000000020e008         dq         0x000000000020e008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020e010         dq         0x000000000000a87c                          ; "8.31", DATA XREF=main+364
                     exit_failure:
000000000020e018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, openat_save_fail+22, openat_restore_fail+22
000000000020e01c         db  0x00 ; '.'
000000000020e01d         db  0x00 ; '.'
000000000020e01e         db  0x00 ; '.'
000000000020e01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020e020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020e021         db  0x00 ; '.'
000000000020e022         db  0x00 ; '.'
000000000020e023         db  0x00 ; '.'
000000000020e024         db  0x00 ; '.'
000000000020e025         db  0x00 ; '.'
000000000020e026         db  0x00 ; '.'
000000000020e027         db  0x00 ; '.'
000000000020e028         db  0x00 ; '.'
000000000020e029         db  0x00 ; '.'
000000000020e02a         db  0x00 ; '.'
000000000020e02b         db  0x00 ; '.'
000000000020e02c         db  0x00 ; '.'
000000000020e02d         db  0x00 ; '.'
000000000020e02e         db  0x00 ; '.'
000000000020e02f         db  0x00 ; '.'
000000000020e030         db  0x00 ; '.'
000000000020e031         db  0x00 ; '.'
000000000020e032         db  0x00 ; '.'
000000000020e033         db  0x00 ; '.'
000000000020e034         db  0x00 ; '.'
000000000020e035         db  0x00 ; '.'
000000000020e036         db  0x00 ; '.'
000000000020e037         db  0x00 ; '.'
000000000020e038         db  0x00 ; '.'
000000000020e039         db  0x00 ; '.'
000000000020e03a         db  0x00 ; '.'
000000000020e03b         db  0x00 ; '.'
000000000020e03c         db  0x00 ; '.'
000000000020e03d         db  0x00 ; '.'
000000000020e03e         db  0x00 ; '.'
000000000020e03f         db  0x00 ; '.'
000000000020e040         db  0x00 ; '.'
000000000020e041         db  0x00 ; '.'
000000000020e042         db  0x00 ; '.'
000000000020e043         db  0x00 ; '.'
000000000020e044         db  0x00 ; '.'
000000000020e045         db  0x00 ; '.'
000000000020e046         db  0x00 ; '.'
000000000020e047         db  0x00 ; '.'
000000000020e048         db  0x00 ; '.'
000000000020e049         db  0x00 ; '.'
000000000020e04a         db  0x00 ; '.'
000000000020e04b         db  0x00 ; '.'
000000000020e04c         db  0x00 ; '.'
000000000020e04d         db  0x00 ; '.'
000000000020e04e         db  0x00 ; '.'
000000000020e04f         db  0x00 ; '.'
000000000020e050         db  0x00 ; '.'
000000000020e051         db  0x00 ; '.'
000000000020e052         db  0x00 ; '.'
000000000020e053         db  0x00 ; '.'
000000000020e054         db  0x00 ; '.'
000000000020e055         db  0x00 ; '.'
000000000020e056         db  0x00 ; '.'
000000000020e057         db  0x00 ; '.'
                     nslots:
000000000020e058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020e05c         align      32
                     slotvec:
000000000020e060         dq         0x000000000020e070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020e068         db  0x00 ; '.'
000000000020e069         db  0x00 ; '.'
000000000020e06a         db  0x00 ; '.'
000000000020e06b         db  0x00 ; '.'
000000000020e06c         db  0x00 ; '.'
000000000020e06d         db  0x00 ; '.'
000000000020e06e         db  0x00 ; '.'
000000000020e06f         db  0x00 ; '.'
                     slotvec0:
000000000020e070         dq         1.26481e-321, 1.0646e-317                   ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20e080; 0x20e260[ (480 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020e080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020e081         db  0x00 ; '.'
000000000020e082         db  0x00 ; '.'
000000000020e083         db  0x00 ; '.'
000000000020e084         db  0x00 ; '.'
000000000020e085         db  0x00 ; '.'
000000000020e086         db  0x00 ; '.'
000000000020e087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020e088         db  0x00 ; '.'                                         ; DATA XREF=main+357, usage+131, usage+168, usage+205, usage+242, usage+279, usage+316, usage+353, usage+390, usage+427, usage+464
000000000020e089         db  0x00 ; '.'
000000000020e08a         db  0x00 ; '.'
000000000020e08b         db  0x00 ; '.'
000000000020e08c         db  0x00 ; '.'
000000000020e08d         db  0x00 ; '.'
000000000020e08e         db  0x00 ; '.'
000000000020e08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020e090         db  0x00 ; '.'                                         ; DATA XREF=main+547, sub_2150+963, sub_2150+1377
000000000020e091         db  0x00 ; '.'
000000000020e092         db  0x00 ; '.'
000000000020e093         db  0x00 ; '.'
000000000020e094         db  0x00 ; '.'
000000000020e095         db  0x00 ; '.'
000000000020e096         db  0x00 ; '.'
000000000020e097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020e098         db  0x00 ; '.'                                         ; DATA XREF=main+225
000000000020e099         db  0x00 ; '.'
000000000020e09a         db  0x00 ; '.'
000000000020e09b         db  0x00 ; '.'
000000000020e09c         db  0x00 ; '.'
000000000020e09d         db  0x00 ; '.'
000000000020e09e         db  0x00 ; '.'
000000000020e09f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020e0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020e0a1         db  0x00 ; '.'
000000000020e0a2         db  0x00 ; '.'
000000000020e0a3         db  0x00 ; '.'
000000000020e0a4         db  0x00 ; '.'
000000000020e0a5         db  0x00 ; '.'
000000000020e0a6         db  0x00 ; '.'
000000000020e0a7         db  0x00 ; '.'
000000000020e0a8         db  0x00 ; '.'
000000000020e0a9         db  0x00 ; '.'
000000000020e0aa         db  0x00 ; '.'
000000000020e0ab         db  0x00 ; '.'
000000000020e0ac         db  0x00 ; '.'
000000000020e0ad         db  0x00 ; '.'
000000000020e0ae         db  0x00 ; '.'
000000000020e0af         db  0x00 ; '.'
000000000020e0b0         db  0x00 ; '.'
000000000020e0b1         db  0x00 ; '.'
000000000020e0b2         db  0x00 ; '.'
000000000020e0b3         db  0x00 ; '.'
000000000020e0b4         db  0x00 ; '.'
000000000020e0b5         db  0x00 ; '.'
000000000020e0b6         db  0x00 ; '.'
000000000020e0b7         db  0x00 ; '.'
000000000020e0b8         db  0x00 ; '.'
000000000020e0b9         db  0x00 ; '.'
000000000020e0ba         db  0x00 ; '.'
000000000020e0bb         db  0x00 ; '.'
000000000020e0bc         db  0x00 ; '.'
000000000020e0bd         db  0x00 ; '.'
000000000020e0be         db  0x00 ; '.'
000000000020e0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020e0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020e0c1         db  0x00 ; '.'
000000000020e0c2         db  0x00 ; '.'
000000000020e0c3         db  0x00 ; '.'
000000000020e0c4         db  0x00 ; '.'
000000000020e0c5         db  0x00 ; '.'
000000000020e0c6         db  0x00 ; '.'
000000000020e0c7         db  0x00 ; '.'
                     completed.7697:
000000000020e0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020e0c9         db  0x00 ; '.'
000000000020e0ca         db  0x00 ; '.'
000000000020e0cb         db  0x00 ; '.'
000000000020e0cc         db  0x00 ; '.'
000000000020e0cd         db  0x00 ; '.'
000000000020e0ce         db  0x00 ; '.'
000000000020e0cf         db  0x00 ; '.'
                     dev_ino_buf.7158:
000000000020e0d0         db  0x00 ; '.'                                         ; DATA XREF=sub_2150+941
000000000020e0d1         db  0x00 ; '.'
000000000020e0d2         db  0x00 ; '.'
000000000020e0d3         db  0x00 ; '.'
000000000020e0d4         db  0x00 ; '.'
000000000020e0d5         db  0x00 ; '.'
000000000020e0d6         db  0x00 ; '.'
000000000020e0d7         db  0x00 ; '.'
000000000020e0d8         db  0x00 ; '.'
000000000020e0d9         db  0x00 ; '.'
000000000020e0da         db  0x00 ; '.'
000000000020e0db         db  0x00 ; '.'
000000000020e0dc         db  0x00 ; '.'
000000000020e0dd         db  0x00 ; '.'
000000000020e0de         db  0x00 ; '.'
000000000020e0df         db  0x00 ; '.'
                     specified_context:
000000000020e0e0         db  0x00 ; '.'                                         ; DATA XREF=main+620, main+1033, sub_2150+1383
000000000020e0e1         db  0x00 ; '.'
000000000020e0e2         db  0x00 ; '.'
000000000020e0e3         db  0x00 ; '.'
000000000020e0e4         db  0x00 ; '.'
000000000020e0e5         db  0x00 ; '.'
000000000020e0e6         db  0x00 ; '.'
000000000020e0e7         db  0x00 ; '.'
                     root_dev_ino:
000000000020e0e8         db  0x00 ; '.'                                         ; DATA XREF=main+642, main+983, sub_2150+22, sub_2150+956
000000000020e0e9         db  0x00 ; '.'
000000000020e0ea         db  0x00 ; '.'
000000000020e0eb         db  0x00 ; '.'
000000000020e0ec         db  0x00 ; '.'
000000000020e0ed         db  0x00 ; '.'
000000000020e0ee         db  0x00 ; '.'
000000000020e0ef         db  0x00 ; '.'
                     verbose:
000000000020e0f0         db  0x00 ; '.'                                         ; DATA XREF=main+476, main+1016
                     recurse:
000000000020e0f1         db  0x00 ; '.'                                         ; DATA XREF=main+453, main+516, main+823, main+970, sub_2150+5
                     affect_symlink_referent:
000000000020e0f2         db  0x00 ; '.'                                         ; DATA XREF=main+540, main+1054, sub_2150+316, sub_2150+929
000000000020e0f3         db  0x00 ; '.'
000000000020e0f4         db  0x00 ; '.'
000000000020e0f5         db  0x00 ; '.'
000000000020e0f6         db  0x00 ; '.'
000000000020e0f7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020e0f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020e0f9         db  0x00 ; '.'
000000000020e0fa         db  0x00 ; '.'
000000000020e0fb         db  0x00 ; '.'
000000000020e0fc         db  0x00 ; '.'
000000000020e0fd         db  0x00 ; '.'
000000000020e0fe         db  0x00 ; '.'
000000000020e0ff         db  0x00 ; '.'
                     file_name:
000000000020e100         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020e101         db  0x00 ; '.'
000000000020e102         db  0x00 ; '.'
000000000020e103         db  0x00 ; '.'
000000000020e104         db  0x00 ; '.'
000000000020e105         db  0x00 ; '.'
000000000020e106         db  0x00 ; '.'
000000000020e107         db  0x00 ; '.'
                     program_name:
000000000020e108         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020e109         db  0x00 ; '.'
000000000020e10a         db  0x00 ; '.'
000000000020e10b         db  0x00 ; '.'
000000000020e10c         db  0x00 ; '.'
000000000020e10d         db  0x00 ; '.'
000000000020e10e         db  0x00 ; '.'
000000000020e10f         db  0x00 ; '.'
000000000020e110         db  0x00 ; '.'
000000000020e111         db  0x00 ; '.'
000000000020e112         db  0x00 ; '.'
000000000020e113         db  0x00 ; '.'
000000000020e114         db  0x00 ; '.'
000000000020e115         db  0x00 ; '.'
000000000020e116         db  0x00 ; '.'
000000000020e117         db  0x00 ; '.'
000000000020e118         db  0x00 ; '.'
000000000020e119         db  0x00 ; '.'
000000000020e11a         db  0x00 ; '.'
000000000020e11b         db  0x00 ; '.'
000000000020e11c         db  0x00 ; '.'
000000000020e11d         db  0x00 ; '.'
000000000020e11e         db  0x00 ; '.'
000000000020e11f         db  0x00 ; '.'
                     slot0:
000000000020e120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020e121         db  0x00 ; '.'
000000000020e122         db  0x00 ; '.'
000000000020e123         db  0x00 ; '.'
000000000020e124         db  0x00 ; '.'
000000000020e125         db  0x00 ; '.'
000000000020e126         db  0x00 ; '.'
000000000020e127         db  0x00 ; '.'
000000000020e128         db  0x00 ; '.'
000000000020e129         db  0x00 ; '.'
000000000020e12a         db  0x00 ; '.'
000000000020e12b         db  0x00 ; '.'
000000000020e12c         db  0x00 ; '.'
000000000020e12d         db  0x00 ; '.'
000000000020e12e         db  0x00 ; '.'
000000000020e12f         db  0x00 ; '.'
000000000020e130         db  0x00 ; '.'
000000000020e131         db  0x00 ; '.'
000000000020e132         db  0x00 ; '.'
000000000020e133         db  0x00 ; '.'
000000000020e134         db  0x00 ; '.'
000000000020e135         db  0x00 ; '.'
000000000020e136         db  0x00 ; '.'
000000000020e137         db  0x00 ; '.'
000000000020e138         db  0x00 ; '.'
000000000020e139         db  0x00 ; '.'
000000000020e13a         db  0x00 ; '.'
000000000020e13b         db  0x00 ; '.'
000000000020e13c         db  0x00 ; '.'
000000000020e13d         db  0x00 ; '.'
000000000020e13e         db  0x00 ; '.'
000000000020e13f         db  0x00 ; '.'
000000000020e140         db  0x00 ; '.'
000000000020e141         db  0x00 ; '.'
000000000020e142         db  0x00 ; '.'
000000000020e143         db  0x00 ; '.'
000000000020e144         db  0x00 ; '.'
000000000020e145         db  0x00 ; '.'
000000000020e146         db  0x00 ; '.'
000000000020e147         db  0x00 ; '.'
000000000020e148         db  0x00 ; '.'
000000000020e149         db  0x00 ; '.'
000000000020e14a         db  0x00 ; '.'
000000000020e14b         db  0x00 ; '.'
000000000020e14c         db  0x00 ; '.'
000000000020e14d         db  0x00 ; '.'
000000000020e14e         db  0x00 ; '.'
000000000020e14f         db  0x00 ; '.'
000000000020e150         db  0x00 ; '.'
000000000020e151         db  0x00 ; '.'
000000000020e152         db  0x00 ; '.'
000000000020e153         db  0x00 ; '.'
000000000020e154         db  0x00 ; '.'
000000000020e155         db  0x00 ; '.'
000000000020e156         db  0x00 ; '.'
000000000020e157         db  0x00 ; '.'
000000000020e158         db  0x00 ; '.'
000000000020e159         db  0x00 ; '.'
000000000020e15a         db  0x00 ; '.'
000000000020e15b         db  0x00 ; '.'
000000000020e15c         db  0x00 ; '.'
000000000020e15d         db  0x00 ; '.'
000000000020e15e         db  0x00 ; '.'
000000000020e15f         db  0x00 ; '.'
000000000020e160         db  0x00 ; '.'
000000000020e161         db  0x00 ; '.'
000000000020e162         db  0x00 ; '.'
000000000020e163         db  0x00 ; '.'
000000000020e164         db  0x00 ; '.'
000000000020e165         db  0x00 ; '.'
000000000020e166         db  0x00 ; '.'
000000000020e167         db  0x00 ; '.'
000000000020e168         db  0x00 ; '.'
000000000020e169         db  0x00 ; '.'
000000000020e16a         db  0x00 ; '.'
000000000020e16b         db  0x00 ; '.'
000000000020e16c         db  0x00 ; '.'
000000000020e16d         db  0x00 ; '.'
000000000020e16e         db  0x00 ; '.'
000000000020e16f         db  0x00 ; '.'
000000000020e170         db  0x00 ; '.'
000000000020e171         db  0x00 ; '.'
000000000020e172         db  0x00 ; '.'
000000000020e173         db  0x00 ; '.'
000000000020e174         db  0x00 ; '.'
000000000020e175         db  0x00 ; '.'
000000000020e176         db  0x00 ; '.'
000000000020e177         db  0x00 ; '.'
000000000020e178         db  0x00 ; '.'
000000000020e179         db  0x00 ; '.'
000000000020e17a         db  0x00 ; '.'
000000000020e17b         db  0x00 ; '.'
000000000020e17c         db  0x00 ; '.'
000000000020e17d         db  0x00 ; '.'
000000000020e17e         db  0x00 ; '.'
000000000020e17f         db  0x00 ; '.'
000000000020e180         db  0x00 ; '.'
000000000020e181         db  0x00 ; '.'
000000000020e182         db  0x00 ; '.'
000000000020e183         db  0x00 ; '.'
000000000020e184         db  0x00 ; '.'
000000000020e185         db  0x00 ; '.'
000000000020e186         db  0x00 ; '.'
000000000020e187         db  0x00 ; '.'
000000000020e188         db  0x00 ; '.'
000000000020e189         db  0x00 ; '.'
000000000020e18a         db  0x00 ; '.'
000000000020e18b         db  0x00 ; '.'
000000000020e18c         db  0x00 ; '.'
000000000020e18d         db  0x00 ; '.'
000000000020e18e         db  0x00 ; '.'
000000000020e18f         db  0x00 ; '.'
000000000020e190         db  0x00 ; '.'
000000000020e191         db  0x00 ; '.'
000000000020e192         db  0x00 ; '.'
000000000020e193         db  0x00 ; '.'
000000000020e194         db  0x00 ; '.'
000000000020e195         db  0x00 ; '.'
000000000020e196         db  0x00 ; '.'
000000000020e197         db  0x00 ; '.'
000000000020e198         db  0x00 ; '.'
000000000020e199         db  0x00 ; '.'
000000000020e19a         db  0x00 ; '.'
000000000020e19b         db  0x00 ; '.'
000000000020e19c         db  0x00 ; '.'
000000000020e19d         db  0x00 ; '.'
000000000020e19e         db  0x00 ; '.'
000000000020e19f         db  0x00 ; '.'
000000000020e1a0         db  0x00 ; '.'
000000000020e1a1         db  0x00 ; '.'
000000000020e1a2         db  0x00 ; '.'
000000000020e1a3         db  0x00 ; '.'
000000000020e1a4         db  0x00 ; '.'
000000000020e1a5         db  0x00 ; '.'
000000000020e1a6         db  0x00 ; '.'
000000000020e1a7         db  0x00 ; '.'
000000000020e1a8         db  0x00 ; '.'
000000000020e1a9         db  0x00 ; '.'
000000000020e1aa         db  0x00 ; '.'
000000000020e1ab         db  0x00 ; '.'
000000000020e1ac         db  0x00 ; '.'
000000000020e1ad         db  0x00 ; '.'
000000000020e1ae         db  0x00 ; '.'
000000000020e1af         db  0x00 ; '.'
000000000020e1b0         db  0x00 ; '.'
000000000020e1b1         db  0x00 ; '.'
000000000020e1b2         db  0x00 ; '.'
000000000020e1b3         db  0x00 ; '.'
000000000020e1b4         db  0x00 ; '.'
000000000020e1b5         db  0x00 ; '.'
000000000020e1b6         db  0x00 ; '.'
000000000020e1b7         db  0x00 ; '.'
000000000020e1b8         db  0x00 ; '.'
000000000020e1b9         db  0x00 ; '.'
000000000020e1ba         db  0x00 ; '.'
000000000020e1bb         db  0x00 ; '.'
000000000020e1bc         db  0x00 ; '.'
000000000020e1bd         db  0x00 ; '.'
000000000020e1be         db  0x00 ; '.'
000000000020e1bf         db  0x00 ; '.'
000000000020e1c0         db  0x00 ; '.'
000000000020e1c1         db  0x00 ; '.'
000000000020e1c2         db  0x00 ; '.'
000000000020e1c3         db  0x00 ; '.'
000000000020e1c4         db  0x00 ; '.'
000000000020e1c5         db  0x00 ; '.'
000000000020e1c6         db  0x00 ; '.'
000000000020e1c7         db  0x00 ; '.'
000000000020e1c8         db  0x00 ; '.'
000000000020e1c9         db  0x00 ; '.'
000000000020e1ca         db  0x00 ; '.'
000000000020e1cb         db  0x00 ; '.'
000000000020e1cc         db  0x00 ; '.'
000000000020e1cd         db  0x00 ; '.'
000000000020e1ce         db  0x00 ; '.'
000000000020e1cf         db  0x00 ; '.'
000000000020e1d0         db  0x00 ; '.'
000000000020e1d1         db  0x00 ; '.'
000000000020e1d2         db  0x00 ; '.'
000000000020e1d3         db  0x00 ; '.'
000000000020e1d4         db  0x00 ; '.'
000000000020e1d5         db  0x00 ; '.'
000000000020e1d6         db  0x00 ; '.'
000000000020e1d7         db  0x00 ; '.'
000000000020e1d8         db  0x00 ; '.'
000000000020e1d9         db  0x00 ; '.'
000000000020e1da         db  0x00 ; '.'
000000000020e1db         db  0x00 ; '.'
000000000020e1dc         db  0x00 ; '.'
000000000020e1dd         db  0x00 ; '.'
000000000020e1de         db  0x00 ; '.'
000000000020e1df         db  0x00 ; '.'
000000000020e1e0         db  0x00 ; '.'
000000000020e1e1         db  0x00 ; '.'
000000000020e1e2         db  0x00 ; '.'
000000000020e1e3         db  0x00 ; '.'
000000000020e1e4         db  0x00 ; '.'
000000000020e1e5         db  0x00 ; '.'
000000000020e1e6         db  0x00 ; '.'
000000000020e1e7         db  0x00 ; '.'
000000000020e1e8         db  0x00 ; '.'
000000000020e1e9         db  0x00 ; '.'
000000000020e1ea         db  0x00 ; '.'
000000000020e1eb         db  0x00 ; '.'
000000000020e1ec         db  0x00 ; '.'
000000000020e1ed         db  0x00 ; '.'
000000000020e1ee         db  0x00 ; '.'
000000000020e1ef         db  0x00 ; '.'
000000000020e1f0         db  0x00 ; '.'
000000000020e1f1         db  0x00 ; '.'
000000000020e1f2         db  0x00 ; '.'
000000000020e1f3         db  0x00 ; '.'
000000000020e1f4         db  0x00 ; '.'
000000000020e1f5         db  0x00 ; '.'
000000000020e1f6         db  0x00 ; '.'
000000000020e1f7         db  0x00 ; '.'
000000000020e1f8         db  0x00 ; '.'
000000000020e1f9         db  0x00 ; '.'
000000000020e1fa         db  0x00 ; '.'
000000000020e1fb         db  0x00 ; '.'
000000000020e1fc         db  0x00 ; '.'
000000000020e1fd         db  0x00 ; '.'
000000000020e1fe         db  0x00 ; '.'
000000000020e1ff         db  0x00 ; '.'
000000000020e200         db  0x00 ; '.'
000000000020e201         db  0x00 ; '.'
000000000020e202         db  0x00 ; '.'
000000000020e203         db  0x00 ; '.'
000000000020e204         db  0x00 ; '.'
000000000020e205         db  0x00 ; '.'
000000000020e206         db  0x00 ; '.'
000000000020e207         db  0x00 ; '.'
000000000020e208         db  0x00 ; '.'
000000000020e209         db  0x00 ; '.'
000000000020e20a         db  0x00 ; '.'
000000000020e20b         db  0x00 ; '.'
000000000020e20c         db  0x00 ; '.'
000000000020e20d         db  0x00 ; '.'
000000000020e20e         db  0x00 ; '.'
000000000020e20f         db  0x00 ; '.'
000000000020e210         db  0x00 ; '.'
000000000020e211         db  0x00 ; '.'
000000000020e212         db  0x00 ; '.'
000000000020e213         db  0x00 ; '.'
000000000020e214         db  0x00 ; '.'
000000000020e215         db  0x00 ; '.'
000000000020e216         db  0x00 ; '.'
000000000020e217         db  0x00 ; '.'
000000000020e218         db  0x00 ; '.'
000000000020e219         db  0x00 ; '.'
000000000020e21a         db  0x00 ; '.'
000000000020e21b         db  0x00 ; '.'
000000000020e21c         db  0x00 ; '.'
000000000020e21d         db  0x00 ; '.'
000000000020e21e         db  0x00 ; '.'
000000000020e21f         db  0x00 ; '.'
                     default_quoting_options:
000000000020e220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020e221         db  0x00 ; '.'
000000000020e222         db  0x00 ; '.'
000000000020e223         db  0x00 ; '.'
000000000020e224         db  0x00 ; '.'
000000000020e225         db  0x00 ; '.'
000000000020e226         db  0x00 ; '.'
000000000020e227         db  0x00 ; '.'
000000000020e228         db  0x00 ; '.'
000000000020e229         db  0x00 ; '.'
000000000020e22a         db  0x00 ; '.'
000000000020e22b         db  0x00 ; '.'
000000000020e22c         db  0x00 ; '.'
000000000020e22d         db  0x00 ; '.'
000000000020e22e         db  0x00 ; '.'
000000000020e22f         db  0x00 ; '.'
000000000020e230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020e231         db  0x00 ; '.'
000000000020e232         db  0x00 ; '.'
000000000020e233         db  0x00 ; '.'
000000000020e234         db  0x00 ; '.'
000000000020e235         db  0x00 ; '.'
000000000020e236         db  0x00 ; '.'
000000000020e237         db  0x00 ; '.'
000000000020e238         db  0x00 ; '.'
000000000020e239         db  0x00 ; '.'
000000000020e23a         db  0x00 ; '.'
000000000020e23b         db  0x00 ; '.'
000000000020e23c         db  0x00 ; '.'
000000000020e23d         db  0x00 ; '.'
000000000020e23e         db  0x00 ; '.'
000000000020e23f         db  0x00 ; '.'
000000000020e240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020e241         db  0x00 ; '.'
000000000020e242         db  0x00 ; '.'
000000000020e243         db  0x00 ; '.'
000000000020e244         db  0x00 ; '.'
000000000020e245         db  0x00 ; '.'
000000000020e246         db  0x00 ; '.'
000000000020e247         db  0x00 ; '.'
000000000020e248         db  0x00 ; '.'
000000000020e249         db  0x00 ; '.'
000000000020e24a         db  0x00 ; '.'
000000000020e24b         db  0x00 ; '.'
000000000020e24c         db  0x00 ; '.'
000000000020e24d         db  0x00 ; '.'
000000000020e24e         db  0x00 ; '.'
000000000020e24f         db  0x00 ; '.'
                     qword_20e250:
000000000020e250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020e251         db  0x00 ; '.'
000000000020e252         db  0x00 ; '.'
000000000020e253         db  0x00 ; '.'
000000000020e254         db  0x00 ; '.'
000000000020e255         db  0x00 ; '.'
000000000020e256         db  0x00 ; '.'
000000000020e257         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020e258         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020e259         db  0x00 ; '.'
000000000020e25a         db  0x00 ; '.'
000000000020e25b         db  0x00 ; '.'
                     proc_status.5461:
000000000020e25c         db  0x00 ; '.'                                         ; DATA XREF=openat_proc_name+40, openat_proc_name+232, openat_proc_name+313, openat_proc_name+324
000000000020e25d         db  0x00 ; '.'
000000000020e25e         db  0x00 ; '.'
000000000020e25f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20e270; 0x20e6d0[ (1120 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20e270; 0x41c940[ (2156240 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020e270         extern function code
                     abort:
000000000020e278         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020e280         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020e288         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020e290         extern function code
                     _exit:
000000000020e298         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000020e2a0         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000020e2a8         extern function code                                   ; DATA XREF=__fpending@GOT
                     qsort:
000000000020e2b0         extern function code                                   ; DATA XREF=qsort@GOT
                     fcntl:
000000000020e2b8         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
000000000020e2c0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020e2c8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020e2d0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020e2d8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020e2e0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020e2e8         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020e2f0         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
000000000020e2f8         extern function code                                   ; DATA XREF=openat@GOT
                     chdir:
000000000020e300         extern function code                                   ; DATA XREF=chdir@GOT
                     __stack_chk_fail:
000000000020e308         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020e310         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020e318         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __fxstatat:
000000000020e320         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     strrchr:
000000000020e328         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020e330         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020e338         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020e340         extern function code                                   ; DATA XREF=memset@GOT
                     getcwd:
000000000020e348         extern function code                                   ; DATA XREF=getcwd@GOT
                     close:
000000000020e350         extern function code                                   ; DATA XREF=close@GOT
                     strspn:
000000000020e358         extern function code                                   ; DATA XREF=strspn@GOT
                     closedir:
000000000020e360         extern function code                                   ; DATA XREF=closedir@GOT
                     memchr:
000000000020e368         extern function code                                   ; DATA XREF=memchr@GOT
                     __libc_start_main:
000000000020e370         extern function code
                     memcmp:
000000000020e378         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020e380         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020e388         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020e390         extern function code                                   ; DATA XREF=strcmp@GOT
                     dirfd:
000000000020e398         extern function code                                   ; DATA XREF=dirfd@GOT
                     __gmon_start__:
000000000020e3a0         extern function code
                     memcpy:
000000000020e3a8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020e3b0         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020e3b8         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
000000000020e3c0         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000020e3c8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020e3d0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020e3d8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020e3e0         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020e3e8         extern function code                                   ; DATA XREF=__freading@GOT
                     fchdir:
000000000020e3f0         extern function code                                   ; DATA XREF=fchdir@GOT
                     realloc:
000000000020e3f8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020e400         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020e408         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020e410         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020e418         extern function code                                   ; DATA XREF=error@GOT
                     memrchr:
000000000020e420         extern function code                                   ; DATA XREF=memrchr@GOT
                     open:
000000000020e428         extern function code                                   ; DATA XREF=open@GOT
                     access:
000000000020e430         extern function code                                   ; DATA XREF=access@GOT
                     fseeko:
000000000020e438         extern function code                                   ; DATA XREF=fseeko@GOT
                     fdopendir:
000000000020e440         extern function code                                   ; DATA XREF=fdopendir@GOT
                     fstatfs:
000000000020e448         extern function code                                   ; DATA XREF=fstatfs@GOT
                     __cxa_atexit:
000000000020e450         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020e458         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020e460         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020e468         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020e470         extern function code
                     mbsinit:
000000000020e478         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020e480         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020e488         extern function code
                     __ctype_b_loc:
000000000020e490         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
000000000020e498         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     free@@GLIBC_2.2.5:
000000000020e4a0         extern function code
                     abort@@GLIBC_2.2.5:
000000000020e4a8         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020e4b0         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020e4b8         extern function code
                     _ITM_deregisterTMCloneTable_20e4c0:        // _ITM_deregisterTMCloneTable
000000000020e4c0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020e4c8         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000020e4d0         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020e4d8         extern function code
                     qsort@@GLIBC_2.2.5:
000000000020e4e0         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020e4e8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020e4f0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020e4f8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020e500         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020e508         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020e510         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020e518         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020e520         extern function code
                     openat@@GLIBC_2.4:
000000000020e528         extern function code
                     chdir@@GLIBC_2.2.5:
000000000020e530         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020e538         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020e540         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020e548         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020e550         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020e558         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020e560         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020e568         extern function code
                     memset@@GLIBC_2.2.5:
000000000020e570         extern function code
                     getcwd@@GLIBC_2.2.5:
000000000020e578         extern function code
                     close@@GLIBC_2.2.5:
000000000020e580         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020e588         extern function code
                     closedir@@GLIBC_2.2.5:
000000000020e590         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020e598         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020e5a0         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020e5a8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020e5b0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020e5b8         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020e5c0         extern function code
                     dirfd@@GLIBC_2.2.5:
000000000020e5c8         extern function code
                     __gmon_start___20e5d0:        // __gmon_start__
000000000020e5d0         extern function code
                     memcpy@@GLIBC_2.14:
000000000020e5d8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020e5e0         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020e5e8         extern function code
                     readdir@@GLIBC_2.2.5:
000000000020e5f0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020e5f8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020e600         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020e608         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020e610         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020e618         extern function code
                     fchdir@@GLIBC_2.2.5:
000000000020e620         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020e628         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020e630         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020e638         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020e640         extern function code
                     error@@GLIBC_2.2.5:
000000000020e648         extern function code
                     memrchr@@GLIBC_2.2.5:
000000000020e650         extern function code
                     open@@GLIBC_2.2.5:
000000000020e658         extern function code
                     access@@GLIBC_2.2.5:
000000000020e660         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020e668         extern function code
                     fdopendir@@GLIBC_2.4:
000000000020e670         extern function code
                     fstatfs@@GLIBC_2.2.5:
000000000020e678         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020e680         extern function code
                     exit@@GLIBC_2.2.5:
000000000020e688         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020e690         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020e698         extern function code
                     _ITM_registerTMCloneTable_20e6a0:        // _ITM_registerTMCloneTable
000000000020e6a0         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020e6a8         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020e6b0         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020e6b8         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020e6c0         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
000000000020e6c8         extern function code
