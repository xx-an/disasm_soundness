
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/cat
        UUID: 2100B99A-F934-D22A-C39C-287F933C808E
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7238[ (29240 bytes)
        ; File offset : [0; 29240[ (29240 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xe0 ; '.'
0000000000000019         db  0x23 ; '#'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x60 ; '`'
0000000000000029         db  0x89 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x38 ; '8'
00000000000000d1         db  0x72 ; 'r'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x38 ; '8'
00000000000000d9         db  0x72 ; 'r'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x90 ; '.'
00000000000000f1         db  0x7a ; 'z'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x90 ; '.'
00000000000000f9         db  0x7a ; 'z'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x90 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7a ; 'z'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x30 ; '0'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xc8 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'                                         ; DATA XREF=main+16, main+2085
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xf0 ; '.'
0000000000000199         db  0x63 ; 'c'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xf0 ; '.'
00000000000001a1         db  0x63 ; 'c'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xf0 ; '.'
00000000000001a9         db  0x63 ; 'c'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x74 ; 't'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x74 ; 't'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x90 ; '.'
0000000000000209         db  0x7a ; 'z'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x90 ; '.'
0000000000000211         db  0x7a ; 'z'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x90 ; '.'
0000000000000219         db  0x7a ; 'z'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x70 ; 'p'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x70 ; 'p'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x21 ; '!'
0000000000000285         db  0x00 ; '.'
0000000000000286         db  0xb9 ; '.'
0000000000000287         db  0x9a ; '.'
0000000000000288         db  0xf9 ; '.'
0000000000000289         db  0x34 ; '4'
000000000000028a         db  0xd2 ; '.'
000000000000028b         db  0x2a ; '*'
000000000000028c         db  0xc3 ; '.'
000000000000028d         db  0x9c ; '.'
000000000000028e         db  0x28 ; '('
000000000000028f         db  0x7f ; '.'
0000000000000290         db  0x93 ; '.'
0000000000000291         db  0x3c ; '<'
0000000000000292         db  0x80 ; '.'
0000000000000293         db  0x8e ; '.'
0000000000000294         db  0x78 ; 'x'
0000000000000295         db  0x35 ; '5'
0000000000000296         db  0xec ; '.'
0000000000000297         db  0xaa ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2d8[ (64 bytes)
        ; File offset : [664; 728[ (64 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x37 ; '7'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x37 ; '7'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x38 ; '8'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3d ; '='
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x33 ; '3'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2d8; 0x8a8[ (1488 bytes)
        ; File offset : [728; 2216[ (1488 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002d8         db  0x00 ; '.'
00000000000002d9         db  0x00 ; '.'
00000000000002da         db  0x00 ; '.'
00000000000002db         db  0x00 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'
00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x11 ; '.'
00000000000002f1         db  0x02 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x12 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x7a ; 'z'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x12 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0xd8 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x31 ; '1'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x75 ; 'u'
0000000000000351         db  0x02 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x20 ; ' '
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x80 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x12 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x8e ; '.'
0000000000000381         db  0x01 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x12 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x88 ; '.'
0000000000000399         db  0x01 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x12 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0xd7 ; '.'
00000000000003b1         db  0x01 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x12 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x23 ; '#'
00000000000003c9         db  0x01 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0xd3 ; '.'
00000000000003e1         db  0x01 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0xf4 ; '.'
00000000000003f9         db  0x01 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x48 ; 'H'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x9e ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0xca ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x58 ; 'X'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x6b ; 'k'
0000000000000471         db  0x01 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x29 ; ')'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x40 ; '@'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x16 ; '.'
00000000000004b9         db  0x01 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0xd1 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x65 ; 'e'
00000000000004e9         db  0x01 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x24 ; '$'
0000000000000501         db  0x01 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0xb5 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0xe9 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0xe2 ; '.'
0000000000000549         db  0x01 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0xee ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x02 ; '.'
0000000000000579         db  0x02 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0xc3 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x91 ; '.'
00000000000005a9         db  0x02 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x20 ; ' '
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x1c ; '.'
00000000000005c1         db  0x01 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x12 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x80 ; '.'
00000000000005d9         db  0x01 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x2a ; '*'
00000000000005f1         db  0x01 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x0b ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x12 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x39 ; '9'
0000000000000621         db  0x01 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x77 ; 'w'
0000000000000639         db  0x01 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x12 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x53 ; 'S'
0000000000000651         db  0x01 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x72 ; 'r'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x1f ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x12 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x12 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0xcb ; '.'
00000000000006b1         db  0x01 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x52 ; 'R'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x99 ; '.'
00000000000006e1         db  0x01 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0xfb ; '.'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x31 ; '1'
0000000000000711         db  0x02 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0xf5 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x81 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x87 ; '.'
0000000000000759         db  0x01 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x01 ; '.'
0000000000000771         db  0x01 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x12 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0xa0 ; '.'
0000000000000789         db  0x02 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x20 ; ' '
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x31 ; '1'
00000000000007a1         db  0x01 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x69 ; 'i'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x12 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0xbc ; '.'
00000000000007d1         db  0x01 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x22 ; '"'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x45 ; 'E'
00000000000007e9         db  0x01 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x12 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x0f ; '.'
0000000000000801         db  0x01 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x11 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x19 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xc8 ; '.'
0000000000000809         db  0x80 ; '.'
000000000000080a         db  0x20 ; ' '
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x08 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x16 ; '.'
0000000000000819         db  0x02 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x11 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x19 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xc0 ; '.'
0000000000000821         db  0x80 ; '.'
0000000000000822         db  0x20 ; ' '
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x08 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x86 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x21 ; '!'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x19 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xd8 ; '.'
0000000000000839         db  0x80 ; '.'
000000000000083a         db  0x20 ; ' '
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x08 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x21 ; '!'
0000000000000849         db  0x02 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x11 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x19 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xd8 ; '.'
0000000000000851         db  0x80 ; '.'
0000000000000852         db  0x20 ; ' '
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x08 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x9e ; '.'
0000000000000861         db  0x01 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x21 ; '!'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x19 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xc0 ; '.'
0000000000000869         db  0x80 ; '.'
000000000000086a         db  0x20 ; ' '
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x08 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x5e ; '^'
0000000000000879         db  0x01 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x11 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x19 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xe0 ; '.'
0000000000000881         db  0x80 ; '.'
0000000000000882         db  0x20 ; ' '
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x08 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x39 ; '9'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x11 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x19 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xd0 ; '.'
0000000000000899         db  0x80 ; '.'
000000000000089a         db  0x20 ; ' '
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x04 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8a8; 0xb62[ (698 bytes)
        ; File offset : [2216; 2914[ (698 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x6c ; 'l'
00000000000008aa         db  0x69 ; 'i'
00000000000008ab         db  0x62 ; 'b'
00000000000008ac         db  0x63 ; 'c'
00000000000008ad         db  0x2e ; '.'
00000000000008ae         db  0x73 ; 's'
00000000000008af         db  0x6f ; 'o'
00000000000008b0         db  0x2e ; '.'
00000000000008b1         db  0x36 ; '6'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x66 ; 'f'
00000000000008b4         db  0x66 ; 'f'
00000000000008b5         db  0x6c ; 'l'
00000000000008b6         db  0x75 ; 'u'
00000000000008b7         db  0x73 ; 's'
00000000000008b8         db  0x68 ; 'h'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x5f ; '_'
00000000000008bb         db  0x5f ; '_'
00000000000008bc         db  0x70 ; 'p'
00000000000008bd         db  0x72 ; 'r'
00000000000008be         db  0x69 ; 'i'
00000000000008bf         db  0x6e ; 'n'
00000000000008c0         db  0x74 ; 't'
00000000000008c1         db  0x66 ; 'f'
00000000000008c2         db  0x5f ; '_'
00000000000008c3         db  0x63 ; 'c'
00000000000008c4         db  0x68 ; 'h'
00000000000008c5         db  0x6b ; 'k'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x73 ; 's'
00000000000008c8         db  0x65 ; 'e'
00000000000008c9         db  0x74 ; 't'
00000000000008ca         db  0x6c ; 'l'
00000000000008cb         db  0x6f ; 'o'
00000000000008cc         db  0x63 ; 'c'
00000000000008cd         db  0x61 ; 'a'
00000000000008ce         db  0x6c ; 'l'
00000000000008cf         db  0x65 ; 'e'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x6d ; 'm'
00000000000008d2         db  0x62 ; 'b'
00000000000008d3         db  0x72 ; 'r'
00000000000008d4         db  0x74 ; 't'
00000000000008d5         db  0x6f ; 'o'
00000000000008d6         db  0x77 ; 'w'
00000000000008d7         db  0x63 ; 'c'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x73 ; 's'
00000000000008da         db  0x74 ; 't'
00000000000008db         db  0x72 ; 'r'
00000000000008dc         db  0x6e ; 'n'
00000000000008dd         db  0x63 ; 'c'
00000000000008de         db  0x6d ; 'm'
00000000000008df         db  0x70 ; 'p'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x6f ; 'o'
00000000000008e2         db  0x70 ; 'p'
00000000000008e3         db  0x74 ; 't'
00000000000008e4         db  0x69 ; 'i'
00000000000008e5         db  0x6e ; 'n'
00000000000008e6         db  0x64 ; 'd'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x73 ; 's'
00000000000008e9         db  0x74 ; 't'
00000000000008ea         db  0x72 ; 'r'
00000000000008eb         db  0x72 ; 'r'
00000000000008ec         db  0x63 ; 'c'
00000000000008ed         db  0x68 ; 'h'
00000000000008ee         db  0x72 ; 'r'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x64 ; 'd'
00000000000008f1         db  0x63 ; 'c'
00000000000008f2         db  0x67 ; 'g'
00000000000008f3         db  0x65 ; 'e'
00000000000008f4         db  0x74 ; 't'
00000000000008f5         db  0x74 ; 't'
00000000000008f6         db  0x65 ; 'e'
00000000000008f7         db  0x78 ; 'x'
00000000000008f8         db  0x74 ; 't'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x65 ; 'e'
00000000000008fb         db  0x72 ; 'r'
00000000000008fc         db  0x72 ; 'r'
00000000000008fd         db  0x6f ; 'o'
00000000000008fe         db  0x72 ; 'r'
00000000000008ff         db  0x00 ; '.'
                     aStackchkfail:
0000000000000900         db         "__stack_chk_fail", 0
0000000000000911         db  0x69 ; 'i'
0000000000000912         db  0x73 ; 's'
0000000000000913         db  0x77 ; 'w'
0000000000000914         db  0x70 ; 'p'
0000000000000915         db  0x72 ; 'r'
0000000000000916         db  0x69 ; 'i'
0000000000000917         db  0x6e ; 'n'
0000000000000918         db  0x74 ; 't'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x72 ; 'r'
000000000000091b         db  0x65 ; 'e'
000000000000091c         db  0x61 ; 'a'
000000000000091d         db  0x6c ; 'l'
000000000000091e         db  0x6c ; 'l'
000000000000091f         db  0x6f ; 'o'
0000000000000920         db  0x63 ; 'c'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x61 ; 'a'
0000000000000923         db  0x62 ; 'b'
0000000000000924         db  0x6f ; 'o'
0000000000000925         db  0x72 ; 'r'
0000000000000926         db  0x74 ; 't'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x5f ; '_'
0000000000000929         db  0x65 ; 'e'
000000000000092a         db  0x78 ; 'x'
000000000000092b         db  0x69 ; 'i'
000000000000092c         db  0x74 ; 't'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x70 ; 'p'
000000000000092f         db  0x72 ; 'r'
0000000000000930         db  0x6f ; 'o'
0000000000000931         db  0x67 ; 'g'
0000000000000932         db  0x72 ; 'r'
0000000000000933         db  0x61 ; 'a'
0000000000000934         db  0x6d ; 'm'
0000000000000935         db  0x5f ; '_'
0000000000000936         db  0x69 ; 'i'
0000000000000937         db  0x6e ; 'n'
0000000000000938         db  0x76 ; 'v'
0000000000000939         db  0x6f ; 'o'
000000000000093a         db  0x63 ; 'c'
000000000000093b         db  0x61 ; 'a'
000000000000093c         db  0x74 ; 't'
000000000000093d         db  0x69 ; 'i'
000000000000093e         db  0x6f ; 'o'
000000000000093f         db  0x6e ; 'n'
0000000000000940         db  0x5f ; '_'
0000000000000941         db  0x6e ; 'n'
0000000000000942         db  0x61 ; 'a'
0000000000000943         db  0x6d ; 'm'
0000000000000944         db  0x65 ; 'e'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x5f ; '_'
0000000000000947         db  0x5f ; '_'
0000000000000948         db  0x63 ; 'c'
0000000000000949         db  0x74 ; 't'
000000000000094a         db  0x79 ; 'y'
000000000000094b         db  0x70 ; 'p'
000000000000094c         db  0x65 ; 'e'
000000000000094d         db  0x5f ; '_'
000000000000094e         db  0x67 ; 'g'
000000000000094f         db  0x65 ; 'e'
0000000000000950         db  0x74 ; 't'
0000000000000951         db  0x5f ; '_'
0000000000000952         db  0x6d ; 'm'
0000000000000953         db  0x62 ; 'b'
0000000000000954         db  0x5f ; '_'
0000000000000955         db  0x63 ; 'c'
0000000000000956         db  0x75 ; 'u'
0000000000000957         db  0x72 ; 'r'
0000000000000958         db  0x5f ; '_'
0000000000000959         db  0x6d ; 'm'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x78 ; 'x'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x70 ; 'p'
000000000000095e         db  0x6f ; 'o'
000000000000095f         db  0x73 ; 's'
0000000000000960         db  0x69 ; 'i'
0000000000000961         db  0x78 ; 'x'
0000000000000962         db  0x5f ; '_'
0000000000000963         db  0x66 ; 'f'
0000000000000964         db  0x61 ; 'a'
0000000000000965         db  0x64 ; 'd'
0000000000000966         db  0x76 ; 'v'
0000000000000967         db  0x69 ; 'i'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x65 ; 'e'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x63 ; 'c'
000000000000096c         db  0x61 ; 'a'
000000000000096d         db  0x6c ; 'l'
000000000000096e         db  0x6c ; 'l'
000000000000096f         db  0x6f ; 'o'
0000000000000970         db  0x63 ; 'c'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x73 ; 's'
0000000000000973         db  0x74 ; 't'
0000000000000974         db  0x72 ; 'r'
0000000000000975         db  0x6c ; 'l'
0000000000000976         db  0x65 ; 'e'
0000000000000977         db  0x6e ; 'n'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x6d ; 'm'
000000000000097a         db  0x65 ; 'e'
000000000000097b         db  0x6d ; 'm'
000000000000097c         db  0x73 ; 's'
000000000000097d         db  0x65 ; 'e'
000000000000097e         db  0x74 ; 't'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x5f ; '_'
0000000000000981         db  0x5f ; '_'
0000000000000982         db  0x65 ; 'e'
0000000000000983         db  0x72 ; 'r'
0000000000000984         db  0x72 ; 'r'
0000000000000985         db  0x6e ; 'n'
0000000000000986         db  0x6f ; 'o'
0000000000000987         db  0x5f ; '_'
0000000000000988         db  0x6c ; 'l'
0000000000000989         db  0x6f ; 'o'
000000000000098a         db  0x63 ; 'c'
000000000000098b         db  0x61 ; 'a'
000000000000098c         db  0x74 ; 't'
000000000000098d         db  0x69 ; 'i'
000000000000098e         db  0x6f ; 'o'
000000000000098f         db  0x6e ; 'n'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x72 ; 'r'
0000000000000992         db  0x65 ; 'e'
0000000000000993         db  0x61 ; 'a'
0000000000000994         db  0x64 ; 'd'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x6d ; 'm'
0000000000000997         db  0x65 ; 'e'
0000000000000998         db  0x6d ; 'm'
0000000000000999         db  0x63 ; 'c'
000000000000099a         db  0x6d ; 'm'
000000000000099b         db  0x70 ; 'p'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x67 ; 'g'
000000000000099e         db  0x65 ; 'e'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x70 ; 'p'
00000000000009a1         db  0x61 ; 'a'
00000000000009a2         db  0x67 ; 'g'
00000000000009a3         db  0x65 ; 'e'
00000000000009a4         db  0x73 ; 's'
00000000000009a5         db  0x69 ; 'i'
00000000000009a6         db  0x7a ; 'z'
00000000000009a7         db  0x65 ; 'e'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x5f ; '_'
00000000000009aa         db  0x5f ; '_'
00000000000009ab         db  0x66 ; 'f'
00000000000009ac         db  0x70 ; 'p'
00000000000009ad         db  0x72 ; 'r'
00000000000009ae         db  0x69 ; 'i'
00000000000009af         db  0x6e ; 'n'
00000000000009b0         db  0x74 ; 't'
00000000000009b1         db  0x66 ; 'f'
00000000000009b2         db  0x5f ; '_'
00000000000009b3         db  0x63 ; 'c'
00000000000009b4         db  0x68 ; 'h'
00000000000009b5         db  0x6b ; 'k'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x73 ; 's'
00000000000009b8         db  0x74 ; 't'
00000000000009b9         db  0x64 ; 'd'
00000000000009ba         db  0x6f ; 'o'
00000000000009bb         db  0x75 ; 'u'
00000000000009bc         db  0x74 ; 't'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x6c ; 'l'
00000000000009bf         db  0x73 ; 's'
00000000000009c0         db  0x65 ; 'e'
00000000000009c1         db  0x65 ; 'e'
00000000000009c2         db  0x6b ; 'k'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x6d ; 'm'
00000000000009c5         db  0x65 ; 'e'
00000000000009c6         db  0x6d ; 'm'
00000000000009c7         db  0x63 ; 'c'
00000000000009c8         db  0x70 ; 'p'
00000000000009c9         db  0x79 ; 'y'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x66 ; 'f'
00000000000009cc         db  0x63 ; 'c'
00000000000009cd         db  0x6c ; 'l'
00000000000009ce         db  0x6f ; 'o'
00000000000009cf         db  0x73 ; 's'
00000000000009d0         db  0x65 ; 'e'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x6d ; 'm'
00000000000009d3         db  0x61 ; 'a'
00000000000009d4         db  0x6c ; 'l'
00000000000009d5         db  0x6c ; 'l'
00000000000009d6         db  0x6f ; 'o'
00000000000009d7         db  0x63 ; 'c'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x6d ; 'm'
00000000000009da         db  0x62 ; 'b'
00000000000009db         db  0x73 ; 's'
00000000000009dc         db  0x69 ; 'i'
00000000000009dd         db  0x6e ; 'n'
00000000000009de         db  0x69 ; 'i'
00000000000009df         db  0x74 ; 't'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x6e ; 'n'
00000000000009e2         db  0x6c ; 'l'
00000000000009e3         db  0x5f ; '_'
00000000000009e4         db  0x6c ; 'l'
00000000000009e5         db  0x61 ; 'a'
00000000000009e6         db  0x6e ; 'n'
00000000000009e7         db  0x67 ; 'g'
00000000000009e8         db  0x69 ; 'i'
00000000000009e9         db  0x6e ; 'n'
00000000000009ea         db  0x66 ; 'f'
00000000000009eb         db  0x6f ; 'o'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x5f ; '_'
00000000000009ee         db  0x5f ; '_'
00000000000009ef         db  0x63 ; 'c'
00000000000009f0         db  0x74 ; 't'
00000000000009f1         db  0x79 ; 'y'
00000000000009f2         db  0x70 ; 'p'
00000000000009f3         db  0x65 ; 'e'
00000000000009f4         db  0x5f ; '_'
00000000000009f5         db  0x62 ; 'b'
00000000000009f6         db  0x5f ; '_'
00000000000009f7         db  0x6c ; 'l'
00000000000009f8         db  0x6f ; 'o'
00000000000009f9         db  0x63 ; 'c'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x5f ; '_'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x66 ; 'f'
00000000000009fe         db  0x72 ; 'r'
00000000000009ff         db  0x65 ; 'e'
                     aAding:
0000000000000a00         db         "ading", 0
0000000000000a06         db  0x73 ; 's'
0000000000000a07         db  0x74 ; 't'
0000000000000a08         db  0x64 ; 'd'
0000000000000a09         db  0x65 ; 'e'
0000000000000a0a         db  0x72 ; 'r'
0000000000000a0b         db  0x72 ; 'r'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x69 ; 'i'
0000000000000a0e         db  0x6f ; 'o'
0000000000000a0f         db  0x63 ; 'c'
0000000000000a10         db  0x74 ; 't'
0000000000000a11         db  0x6c ; 'l'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x67 ; 'g'
0000000000000a14         db  0x65 ; 'e'
0000000000000a15         db  0x74 ; 't'
0000000000000a16         db  0x6f ; 'o'
0000000000000a17         db  0x70 ; 'p'
0000000000000a18         db  0x74 ; 't'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x6c ; 'l'
0000000000000a1b         db  0x6f ; 'o'
0000000000000a1c         db  0x6e ; 'n'
0000000000000a1d         db  0x67 ; 'g'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x5f ; '_'
0000000000000a20         db  0x5f ; '_'
0000000000000a21         db  0x66 ; 'f'
0000000000000a22         db  0x78 ; 'x'
0000000000000a23         db  0x73 ; 's'
0000000000000a24         db  0x74 ; 't'
0000000000000a25         db  0x61 ; 'a'
0000000000000a26         db  0x74 ; 't'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x66 ; 'f'
0000000000000a29         db  0x69 ; 'i'
0000000000000a2a         db  0x6c ; 'l'
0000000000000a2b         db  0x65 ; 'e'
0000000000000a2c         db  0x6e ; 'n'
0000000000000a2d         db  0x6f ; 'o'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x66 ; 'f'
0000000000000a30         db  0x77 ; 'w'
0000000000000a31         db  0x72 ; 'r'
0000000000000a32         db  0x69 ; 'i'
0000000000000a33         db  0x74 ; 't'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x5f ; '_'
0000000000000a37         db  0x5f ; '_'
0000000000000a38         db  0x66 ; 'f'
0000000000000a39         db  0x70 ; 'p'
0000000000000a3a         db  0x65 ; 'e'
0000000000000a3b         db  0x6e ; 'n'
0000000000000a3c         db  0x64 ; 'd'
0000000000000a3d         db  0x69 ; 'i'
0000000000000a3e         db  0x6e ; 'n'
0000000000000a3f         db  0x67 ; 'g'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x6f ; 'o'
0000000000000a42         db  0x70 ; 'p'
0000000000000a43         db  0x65 ; 'e'
0000000000000a44         db  0x6e ; 'n'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x70 ; 'p'
0000000000000a47         db  0x72 ; 'r'
0000000000000a48         db  0x6f ; 'o'
0000000000000a49         db  0x67 ; 'g'
0000000000000a4a         db  0x72 ; 'r'
0000000000000a4b         db  0x61 ; 'a'
0000000000000a4c         db  0x6d ; 'm'
0000000000000a4d         db  0x5f ; '_'
0000000000000a4e         db  0x69 ; 'i'
0000000000000a4f         db  0x6e ; 'n'
0000000000000a50         db  0x76 ; 'v'
0000000000000a51         db  0x6f ; 'o'
0000000000000a52         db  0x63 ; 'c'
0000000000000a53         db  0x61 ; 'a'
0000000000000a54         db  0x74 ; 't'
0000000000000a55         db  0x69 ; 'i'
0000000000000a56         db  0x6f ; 'o'
0000000000000a57         db  0x6e ; 'n'
0000000000000a58         db  0x5f ; '_'
0000000000000a59         db  0x73 ; 's'
0000000000000a5a         db  0x68 ; 'h'
0000000000000a5b         db  0x6f ; 'o'
0000000000000a5c         db  0x72 ; 'r'
0000000000000a5d         db  0x74 ; 't'
0000000000000a5e         db  0x5f ; '_'
0000000000000a5f         db  0x6e ; 'n'
0000000000000a60         db  0x61 ; 'a'
0000000000000a61         db  0x6d ; 'm'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x5f ; '_'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x63 ; 'c'
0000000000000a67         db  0x78 ; 'x'
0000000000000a68         db  0x61 ; 'a'
0000000000000a69         db  0x5f ; '_'
0000000000000a6a         db  0x66 ; 'f'
0000000000000a6b         db  0x69 ; 'i'
0000000000000a6c         db  0x6e ; 'n'
0000000000000a6d         db  0x61 ; 'a'
0000000000000a6e         db  0x6c ; 'l'
0000000000000a6f         db  0x69 ; 'i'
0000000000000a70         db  0x7a ; 'z'
0000000000000a71         db  0x65 ; 'e'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x6d ; 'm'
0000000000000a74         db  0x65 ; 'e'
0000000000000a75         db  0x6d ; 'm'
0000000000000a76         db  0x6d ; 'm'
0000000000000a77         db  0x6f ; 'o'
0000000000000a78         db  0x76 ; 'v'
0000000000000a79         db  0x65 ; 'e'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x62 ; 'b'
0000000000000a7c         db  0x69 ; 'i'
0000000000000a7d         db  0x6e ; 'n'
0000000000000a7e         db  0x64 ; 'd'
0000000000000a7f         db  0x74 ; 't'
0000000000000a80         db  0x65 ; 'e'
0000000000000a81         db  0x78 ; 'x'
0000000000000a82         db  0x74 ; 't'
0000000000000a83         db  0x64 ; 'd'
0000000000000a84         db  0x6f ; 'o'
0000000000000a85         db  0x6d ; 'm'
0000000000000a86         db  0x61 ; 'a'
0000000000000a87         db  0x69 ; 'i'
0000000000000a88         db  0x6e ; 'n'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x5f ; '_'
0000000000000a8b         db  0x5f ; '_'
0000000000000a8c         db  0x6c ; 'l'
0000000000000a8d         db  0x69 ; 'i'
0000000000000a8e         db  0x62 ; 'b'
0000000000000a8f         db  0x63 ; 'c'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x73 ; 's'
0000000000000a92         db  0x74 ; 't'
0000000000000a93         db  0x61 ; 'a'
0000000000000a94         db  0x72 ; 'r'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x5f ; '_'
0000000000000a97         db  0x6d ; 'm'
0000000000000a98         db  0x61 ; 'a'
0000000000000a99         db  0x69 ; 'i'
0000000000000a9a         db  0x6e ; 'n'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x73 ; 's'
0000000000000a9d         db  0x74 ; 't'
0000000000000a9e         db  0x70 ; 'p'
0000000000000a9f         db  0x63 ; 'c'
0000000000000aa0         db  0x70 ; 'p'
0000000000000aa1         db  0x79 ; 'y'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x66 ; 'f'
0000000000000aa4         db  0x73 ; 's'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x65 ; 'e'
0000000000000aa7         db  0x6b ; 'k'
0000000000000aa8         db  0x6f ; 'o'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x66 ; 'f'
0000000000000aab         db  0x70 ; 'p'
0000000000000aac         db  0x75 ; 'u'
0000000000000aad         db  0x74 ; 't'
0000000000000aae         db  0x73 ; 's'
0000000000000aaf         db  0x5f ; '_'
0000000000000ab0         db  0x75 ; 'u'
0000000000000ab1         db  0x6e ; 'n'
0000000000000ab2         db  0x6c ; 'l'
0000000000000ab3         db  0x6f ; 'o'
0000000000000ab4         db  0x63 ; 'c'
0000000000000ab5         db  0x6b ; 'k'
0000000000000ab6         db  0x65 ; 'e'
0000000000000ab7         db  0x64 ; 'd'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x66 ; 'f'
0000000000000aba         db  0x72 ; 'r'
0000000000000abb         db  0x65 ; 'e'
0000000000000abc         db  0x65 ; 'e'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x5f ; '_'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x70 ; 'p'
0000000000000ac1         db  0x72 ; 'r'
0000000000000ac2         db  0x6f ; 'o'
0000000000000ac3         db  0x67 ; 'g'
0000000000000ac4         db  0x6e ; 'n'
0000000000000ac5         db  0x61 ; 'a'
0000000000000ac6         db  0x6d ; 'm'
0000000000000ac7         db  0x65 ; 'e'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x5f ; '_'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x70 ; 'p'
0000000000000acc         db  0x72 ; 'r'
0000000000000acd         db  0x6f ; 'o'
0000000000000ace         db  0x67 ; 'g'
0000000000000acf         db  0x6e ; 'n'
0000000000000ad0         db  0x61 ; 'a'
0000000000000ad1         db  0x6d ; 'm'
0000000000000ad2         db  0x65 ; 'e'
0000000000000ad3         db  0x5f ; '_'
0000000000000ad4         db  0x66 ; 'f'
0000000000000ad5         db  0x75 ; 'u'
0000000000000ad6         db  0x6c ; 'l'
0000000000000ad7         db  0x6c ; 'l'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x5f ; '_'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x63 ; 'c'
0000000000000adc         db  0x78 ; 'x'
0000000000000add         db  0x61 ; 'a'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x61 ; 'a'
0000000000000ae0         db  0x74 ; 't'
0000000000000ae1         db  0x65 ; 'e'
0000000000000ae2         db  0x78 ; 'x'
0000000000000ae3         db  0x69 ; 'i'
0000000000000ae4         db  0x74 ; 't'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x47 ; 'G'
0000000000000ae7         db  0x4c ; 'L'
0000000000000ae8         db  0x49 ; 'I'
0000000000000ae9         db  0x42 ; 'B'
0000000000000aea         db  0x43 ; 'C'
0000000000000aeb         db  0x5f ; '_'
0000000000000aec         db  0x32 ; '2'
0000000000000aed         db  0x2e ; '.'
0000000000000aee         db  0x33 ; '3'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x47 ; 'G'
0000000000000af1         db  0x4c ; 'L'
0000000000000af2         db  0x49 ; 'I'
0000000000000af3         db  0x42 ; 'B'
0000000000000af4         db  0x43 ; 'C'
0000000000000af5         db  0x5f ; '_'
0000000000000af6         db  0x32 ; '2'
0000000000000af7         db  0x2e ; '.'
0000000000000af8         db  0x33 ; '3'
0000000000000af9         db  0x2e ; '.'
0000000000000afa         db  0x34 ; '4'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x47 ; 'G'
0000000000000afd         db  0x4c ; 'L'
0000000000000afe         db  0x49 ; 'I'
0000000000000aff         db  0x42 ; 'B'
                     aC214:
0000000000000b00         db         "C_2.14", 0
0000000000000b07         db  0x47 ; 'G'
0000000000000b08         db  0x4c ; 'L'
0000000000000b09         db  0x49 ; 'I'
0000000000000b0a         db  0x42 ; 'B'
0000000000000b0b         db  0x43 ; 'C'
0000000000000b0c         db  0x5f ; '_'
0000000000000b0d         db  0x32 ; '2'
0000000000000b0e         db  0x2e ; '.'
0000000000000b0f         db  0x34 ; '4'
0000000000000b10         db  0x00 ; '.'
0000000000000b11         db  0x47 ; 'G'
0000000000000b12         db  0x4c ; 'L'
0000000000000b13         db  0x49 ; 'I'
0000000000000b14         db  0x42 ; 'B'
0000000000000b15         db  0x43 ; 'C'
0000000000000b16         db  0x5f ; '_'
0000000000000b17         db  0x32 ; '2'
0000000000000b18         db  0x2e ; '.'
0000000000000b19         db  0x32 ; '2'
0000000000000b1a         db  0x2e ; '.'
0000000000000b1b         db  0x35 ; '5'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x5f ; '_'
0000000000000b1e         db  0x49 ; 'I'
0000000000000b1f         db  0x54 ; 'T'
0000000000000b20         db  0x4d ; 'M'
0000000000000b21         db  0x5f ; '_'
0000000000000b22         db  0x64 ; 'd'
0000000000000b23         db  0x65 ; 'e'
0000000000000b24         db  0x72 ; 'r'
0000000000000b25         db  0x65 ; 'e'
0000000000000b26         db  0x67 ; 'g'
0000000000000b27         db  0x69 ; 'i'
0000000000000b28         db  0x73 ; 's'
0000000000000b29         db  0x74 ; 't'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x72 ; 'r'
0000000000000b2c         db  0x54 ; 'T'
0000000000000b2d         db  0x4d ; 'M'
0000000000000b2e         db  0x43 ; 'C'
0000000000000b2f         db  0x6c ; 'l'
0000000000000b30         db  0x6f ; 'o'
0000000000000b31         db  0x6e ; 'n'
0000000000000b32         db  0x65 ; 'e'
0000000000000b33         db  0x54 ; 'T'
0000000000000b34         db  0x61 ; 'a'
0000000000000b35         db  0x62 ; 'b'
0000000000000b36         db  0x6c ; 'l'
0000000000000b37         db  0x65 ; 'e'
0000000000000b38         db  0x00 ; '.'
0000000000000b39         db  0x5f ; '_'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x67 ; 'g'
0000000000000b3c         db  0x6d ; 'm'
0000000000000b3d         db  0x6f ; 'o'
0000000000000b3e         db  0x6e ; 'n'
0000000000000b3f         db  0x5f ; '_'
0000000000000b40         db  0x73 ; 's'
                     aTart:
0000000000000b41         db         "tart__", 0
0000000000000b48         db  0x5f ; '_'
0000000000000b49         db  0x49 ; 'I'
0000000000000b4a         db  0x54 ; 'T'
0000000000000b4b         db  0x4d ; 'M'
0000000000000b4c         db  0x5f ; '_'
0000000000000b4d         db  0x72 ; 'r'
0000000000000b4e         db  0x65 ; 'e'
0000000000000b4f         db  0x67 ; 'g'
0000000000000b50         db  0x69 ; 'i'
0000000000000b51         db  0x73 ; 's'
0000000000000b52         db  0x74 ; 't'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x72 ; 'r'
0000000000000b55         db  0x54 ; 'T'
0000000000000b56         db  0x4d ; 'M'
0000000000000b57         db  0x43 ; 'C'
0000000000000b58         db  0x6c ; 'l'
0000000000000b59         db  0x6f ; 'o'
0000000000000b5a         db  0x6e ; 'n'
0000000000000b5b         db  0x65 ; 'e'
0000000000000b5c         db  0x54 ; 'T'
0000000000000b5d         db  0x61 ; 'a'
0000000000000b5e         db  0x62 ; 'b'
0000000000000b5f         db  0x6c ; 'l'
0000000000000b60         db  0x65 ; 'e'
0000000000000b61         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb62; 0xbde[ (124 bytes)
        ; File offset : [2914; 3038[ (124 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x00 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x02 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x02 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x02 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x03 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x04 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x05 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x05 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x06 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbe0; 0xc40[ (96 bytes)
        ; File offset : [3040; 3136[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000be0         db  0x01 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x05 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x01 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x10 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x13 ; '.'
0000000000000bf1         db  0x69 ; 'i'
0000000000000bf2         db  0x69 ; 'i'
0000000000000bf3         db  0x0d ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x06 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x3e ; '>'
0000000000000bf9         db  0x02 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x10 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x74 ; 't'
0000000000000c01         db  0x19 ; '.'
0000000000000c02         db  0x69 ; 'i'
0000000000000c03         db  0x09 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x05 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x48 ; 'H'
0000000000000c09         db  0x02 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x10 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x94 ; '.'
0000000000000c11         db  0x91 ; '.'
0000000000000c12         db  0x96 ; '.'
0000000000000c13         db  0x06 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x04 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x54 ; 'T'
0000000000000c19         db  0x02 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x10 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x14 ; '.'
0000000000000c21         db  0x69 ; 'i'
0000000000000c22         db  0x69 ; 'i'
0000000000000c23         db  0x0d ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x03 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x5f ; '_'
0000000000000c29         db  0x02 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x10 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x75 ; 'u'
0000000000000c31         db  0x1a ; '.'
0000000000000c32         db  0x69 ; 'i'
0000000000000c33         db  0x09 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x69 ; 'i'
0000000000000c39         db  0x02 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc40; 0xfb8[ (888 bytes)
        ; File offset : [3136; 4024[ (888 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c40         db  0x90 ; '.'
0000000000000c41         db  0x7a ; 'z'
0000000000000c42         db  0x20 ; ' '
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x08 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0xe0 ; '.'
0000000000000c51         db  0x24 ; '$'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x98 ; '.'
0000000000000c59         db  0x7a ; 'z'
0000000000000c5a         db  0x20 ; ' '
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x08 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0xa0 ; '.'
0000000000000c69         db  0x24 ; '$'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0xa0 ; '.'
0000000000000c71         db  0x7a ; 'z'
0000000000000c72         db  0x20 ; ' '
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x08 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x5b ; '['
0000000000000c81         db  0x56 ; 'V'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0xc0 ; '.'
0000000000000c89         db  0x7a ; 'z'
0000000000000c8a         db  0x20 ; ' '
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x08 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x6b ; 'k'
0000000000000c99         db  0x56 ; 'V'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xe0 ; '.'
0000000000000ca1         db  0x7a ; 'z'
0000000000000ca2         db  0x20 ; ' '
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x08 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x72 ; 'r'
0000000000000cb1         db  0x56 ; 'V'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x00 ; '.'
0000000000000cb9         db  0x7b ; '{'
0000000000000cba         db  0x20 ; ' '
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x08 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x80 ; '.'
0000000000000cc9         db  0x56 ; 'V'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x20 ; ' '
0000000000000cd1         db  0x7b ; '{'
0000000000000cd2         db  0x20 ; ' '
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x08 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x91 ; '.'
0000000000000ce1         db  0x56 ; 'V'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x40 ; '@'
0000000000000ce9         db  0x7b ; '{'
0000000000000cea         db  0x20 ; ' '
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x08 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x9b ; '.'
0000000000000cf9         db  0x56 ; 'V'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x60 ; '`'
0000000000000d01         db  0x7b ; '{'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xa5 ; '.'
0000000000000d11         db  0x56 ; 'V'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x80 ; '.'
0000000000000d19         db  0x7b ; '{'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xae ; '.'
0000000000000d29         db  0x56 ; 'V'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0xa0 ; '.'
0000000000000d31         db  0x7b ; '{'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xb3 ; '.'
0000000000000d41         db  0x56 ; 'V'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xe0 ; '.'
0000000000000d49         db  0x7b ; '{'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xa1 ; '.'
0000000000000d59         db  0x5b ; '['
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0xe8 ; '.'
0000000000000d61         db  0x7b ; '{'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xa9 ; '.'
0000000000000d71         db  0x5b ; '['
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0xf0 ; '.'
0000000000000d79         db  0x7b ; '{'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xaf ; '.'
0000000000000d89         db  0x5b ; '['
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xf8 ; '.'
0000000000000d91         db  0x7b ; '{'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xbc ; '.'
0000000000000da1         db  0x5b ; '['
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x00 ; '.'
0000000000000da9         db  0x7c ; '|'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xc9 ; '.'
0000000000000db9         db  0x5b ; '['
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x7c ; '|'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xdd ; '.'
0000000000000dd1         db  0x5b ; '['
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x10 ; '.'
0000000000000dd9         db  0x7c ; '|'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xdf ; '.'
0000000000000de9         db  0x5b ; '['
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x18 ; '.'
0000000000000df1         db  0x7c ; '|'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xc2 ; '.'
0000000000000e01         db  0x5b ; '['
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x20 ; ' '
0000000000000e09         db  0x7c ; '|'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xc8 ; '.'
0000000000000e19         db  0x55 ; 'U'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x28 ; '('
0000000000000e21         db  0x7c ; '|'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xe7 ; '.'
0000000000000e31         db  0x5b ; '['
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x80 ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x80 ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x28 ; '('
0000000000000e51         db  0x80 ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x21 ; '!'
0000000000000e61         db  0x80 ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x30 ; '0'
0000000000000e69         db  0x80 ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x1c ; '.'
0000000000000e79         db  0x80 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x38 ; '8'
0000000000000e81         db  0x80 ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x3b ; ';'
0000000000000e91         db  0x5b ; '['
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xa0 ; '.'
0000000000000e99         db  0x80 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xb0 ; '.'
0000000000000ea9         db  0x80 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xb8 ; '.'
0000000000000eb1         db  0x80 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x20 ; ' '
0000000000000ec1         db  0x81 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xc8 ; '.'
0000000000000ec9         db  0x7f ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x06 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x05 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xd0 ; '.'
0000000000000ee1         db  0x7f ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x06 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x1a ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xd8 ; '.'
0000000000000ef9         db  0x7f ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x06 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x1e ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xe0 ; '.'
0000000000000f11         db  0x7f ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x06 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x32 ; '2'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xe8 ; '.'
0000000000000f29         db  0x7f ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x06 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x35 ; '5'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xc0 ; '.'
0000000000000f41         db  0x80 ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x05 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x38 ; '8'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xc8 ; '.'
0000000000000f59         db  0x80 ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x05 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x37 ; '7'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xd0 ; '.'
0000000000000f71         db  0x80 ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x05 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x3d ; '='
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xd8 ; '.'
0000000000000f89         db  0x80 ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x05 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x3a ; ':'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xe0 ; '.'
0000000000000fa1         db  0x80 ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x05 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x3c ; '<'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xfb8; 0x1450[ (1176 bytes)
        ; File offset : [4024; 5200[ (1176 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000fb8         db  0x40 ; '@'
0000000000000fb9         db  0x7e ; '~'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x07 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x01 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x48 ; 'H'
0000000000000fd1         db  0x7e ; '~'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x07 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x02 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x50 ; 'P'
0000000000000fe9         db  0x7e ; '~'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x07 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x03 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x58 ; 'X'
0000000000001001         db  0x7e ; '~'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x07 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x04 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x60 ; '`'
0000000000001019         db  0x7e ; '~'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x07 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x06 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x68 ; 'h'
0000000000001031         db  0x7e ; '~'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x07 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x07 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x70 ; 'p'
0000000000001049         db  0x7e ; '~'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x08 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x78 ; 'x'
0000000000001061         db  0x7e ; '~'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x09 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x80 ; '.'
0000000000001079         db  0x7e ; '~'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x0a ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x88 ; '.'
0000000000001091         db  0x7e ; '~'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x0b ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x90 ; '.'
00000000000010a9         db  0x7e ; '~'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x0c ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x98 ; '.'
00000000000010c1         db  0x7e ; '~'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x0d ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xa0 ; '.'
00000000000010d9         db  0x7e ; '~'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x0e ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xa8 ; '.'
00000000000010f1         db  0x7e ; '~'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x0f ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xb0 ; '.'
0000000000001109         db  0x7e ; '~'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x10 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0xb8 ; '.'
0000000000001121         db  0x7e ; '~'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x11 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0xc0 ; '.'
0000000000001139         db  0x7e ; '~'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x12 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0xc8 ; '.'
0000000000001151         db  0x7e ; '~'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x13 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0xd0 ; '.'
0000000000001169         db  0x7e ; '~'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x14 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0xd8 ; '.'
0000000000001181         db  0x7e ; '~'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x15 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xe0 ; '.'
0000000000001199         db  0x7e ; '~'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x16 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xe8 ; '.'
00000000000011b1         db  0x7e ; '~'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x17 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xf0 ; '.'
00000000000011c9         db  0x7e ; '~'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x18 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xf8 ; '.'
00000000000011e1         db  0x7e ; '~'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x19 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x7f ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x1b ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x08 ; '.'
0000000000001211         db  0x7f ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x1c ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x10 ; '.'
0000000000001229         db  0x7f ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x1d ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x18 ; '.'
0000000000001241         db  0x7f ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x1f ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x20 ; ' '
0000000000001259         db  0x7f ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x20 ; ' '
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x28 ; '('
0000000000001271         db  0x7f ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x21 ; '!'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x30 ; '0'
0000000000001289         db  0x7f ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x22 ; '"'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x38 ; '8'
00000000000012a1         db  0x7f ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x23 ; '#'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x40 ; '@'
00000000000012b9         db  0x7f ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x24 ; '$'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x48 ; 'H'
00000000000012d1         db  0x7f ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x25 ; '%'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x50 ; 'P'
00000000000012e9         db  0x7f ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x26 ; '&'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x58 ; 'X'
0000000000001301         db  0x7f ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x27 ; '''
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x60 ; '`'
0000000000001319         db  0x7f ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x28 ; '('
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x68 ; 'h'
0000000000001331         db  0x7f ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x29 ; ')'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x70 ; 'p'
0000000000001349         db  0x7f ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x2a ; '*'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x78 ; 'x'
0000000000001361         db  0x7f ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x2b ; '+'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x80 ; '.'
0000000000001379         db  0x7f ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x2c ; ','
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x88 ; '.'
0000000000001391         db  0x7f ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x2d ; '-'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x90 ; '.'
00000000000013a9         db  0x7f ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x2e ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x98 ; '.'
00000000000013c1         db  0x7f ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x2f ; '/'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0xa0 ; '.'
00000000000013d9         db  0x7f ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x30 ; '0'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0xa8 ; '.'
00000000000013f1         db  0x7f ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x31 ; '1'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0xb0 ; '.'
0000000000001409         db  0x7f ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x33 ; '3'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0xb8 ; '.'
0000000000001421         db  0x7f ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x34 ; '4'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0xc0 ; '.'
0000000000001439         db  0x7f ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x36 ; '6'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1450; 0x1467[ (23 bytes)
        ; File offset : [5200; 5223[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001450         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001454         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
000000000000145b         test       rax, rax
000000000000145e         je         loc_1462

0000000000001460         call       rax

                     loc_1462:
0000000000001462         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001466         ret
                        ; endp
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1470; 0x1790[ (800 bytes)
        ; File offset : [5232; 6032[ (800 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1470:
0000000000001470         push       qword [qword_207e30]                        ; Begin of unwind block (FDE at 0x66b4), qword_207e30, CODE XREF=sub_1486+5
0000000000001476         jmp        qword [qword_207e30+8]                      ; 0x207e38
                        ; endp
000000000000147c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001480         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+2197, main+2207, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x0
000000000000148b         jmp        loc_1470


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001490         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_33b0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x1
000000000000149b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=write_pending.part.6+23, main+1872, main+1979, main+2134, main+2477, main+2617, main+2767, main+2836, main+3002, main+3061, close_stdout+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x2
00000000000014ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000014b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+668, usage+861
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x3
00000000000014bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000014c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x4
00000000000014cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000014d0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x5
00000000000014db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_write:        // write
00000000000014e0         jmp        qword [write@GOT]                           ; write, write@GOT, CODE XREF=safe_write+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x6
00000000000014eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000014f0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+109
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x7
00000000000014fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001500         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x8
000000000000150b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001510         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x9
000000000000151b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpcpy:        // stpcpy
0000000000001520         jmp        qword [stpcpy@GOT]                          ; stpcpy, stpcpy@GOT, CODE XREF=main+1207, main+1662
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0xa
000000000000152b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001530         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=write_pending.part.6+15, main+2420, main+2609, main+2828, main+2917, main+2994, main+3053, usage+56, usage+102, usage+146, usage+183
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0xb
000000000000153b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001540         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0xc
000000000000154b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001550         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_33b0+411, sub_33b0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0xd
000000000000155b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001560         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+3034, sub_33b0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0xe
000000000000156b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001570         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+186
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0xf
000000000000157b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001580         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x10
000000000000158b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001590         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x11
000000000000159b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000015a0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=main+2365, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x12
00000000000015ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000015b0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x13
00000000000015bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
00000000000015c0         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=main+1780
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x14
00000000000015cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000015d0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+2252, main+2582
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x15
00000000000015db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000015e0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x16
00000000000015eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
00000000000015f0         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x17
00000000000015fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001600         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x18
000000000000160b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001610         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+976, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x19
000000000000161b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001620         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x1a
000000000000162b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001630         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x1b
000000000000163b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001640         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x1c
000000000000164b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001650         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x1d
000000000000165b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001660         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x1e
000000000000166b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001670         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x1f
000000000000167b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001680         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=main+468, main+733
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x20
000000000000168b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001690         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x21
000000000000169b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000016a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x22
00000000000016ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000016b0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+78, usage+643, usage+836, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x23
00000000000016bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000016c0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+396, usage+631, usage+724, usage+785, usage+824, usage+927, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x24
00000000000016cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
00000000000016d0         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=main+1562
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x25
00000000000016db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000016e0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=write_pending.part.6+40, main+2000, main+2155, main+2437, main+2498, main+2634, main+2788, main+2853, main+2940, main+3019, main+3078
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x26
00000000000016eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
00000000000016f0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=main+1936
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x27
00000000000016fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001700         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x28
000000000000170b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001710         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x29
000000000000171b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
0000000000001720         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=main+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x2a
000000000000172b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001730         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+404, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2b
000000000000173b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001740         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x2c
000000000000174b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001750         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x2d
000000000000175b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001760         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_33b0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x2e
000000000000176b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001770         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_33b0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x2f
000000000000177b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001780         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3150+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x30
000000000000178b         jmp        0x1470
                        ; endp


        ; Section .plt.got
        ; Range: [0x1790; 0x1798[ (8 bytes)
        ; File offset : [6032; 6040[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe8:        // qword_207fe8
0000000000001790         jmp        qword [qword_207fe8]                        ; qword, End of unwind block (FDE at 0x66b4), Begin of unwind block (FDE at 0x66dc), qword_207fe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001796         align      8
0000000000001798         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x66dc)
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x17a0; 0x54de[ (15678 bytes)
        ; File offset : [6048; 21726[ (15678 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_48: int64_t, -72
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_C8: int32_t, -200
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E4: int32_t, -228
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_101: int8_t, -257
        ;    var_102: int8_t, -258
        ;    var_103: int8_t, -259
        ;    var_104: int8_t, -260
        ;    var_108: int32_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_139: int8_t, -313
        ;    var_13A: int8_t, -314
        ;    var_13B: int8_t, -315
        ;    var_13C: int8_t, -316
        ;    var_140: int32_t, -320
        ;    var_148: int64_t, -328
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344
        ;    var_159: int8_t, -345
        ;    var_15A: int8_t, -346
        ;    var_160: int32_t, -352
        ;    var_168: int64_t, -360
        ;    var_170: int64_t, -368
        ;    var_178: int64_t, -376
        ;    var_180: int64_t, -384
        ;    var_188: int64_t, -392
        ;    var_18C: int32_t, -396


                     write_pending.part.6:
00000000000017a0         push       rbx                                         ; Begin of unwind block (FDE at 0x6708), CODE XREF=loc_1f11
00000000000017a1         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
00000000000017a8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000017ad         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000017af         call       j_dcgettext                                 ; dcgettext
00000000000017b4         mov        rbx, rax
00000000000017b7         call       j___errno_location                          ; __errno_location
00000000000017bc         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000017be         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000017c1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000017c6         xor        eax, eax
00000000000017c8         call       j_error                                     ; error
00000000000017cd         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6708)
                     main:
00000000000017d0         push       r15                                         ; Begin of unwind block (FDE at 0x674c), DATA XREF=_start+29
00000000000017d2         push       r14
00000000000017d4         mov        r14, rsi
00000000000017d7         push       r13
00000000000017d9         push       r12
00000000000017db         xor        r12d, r12d
00000000000017de         push       rbp
00000000000017df         push       rbx
00000000000017e0         sub        rsp, 0x158
00000000000017e7         mov        qword [rsp+0x190+var_148], rsi
00000000000017ec         mov        dword [rsp+0x190+var_140], edi
00000000000017f0         mov        rax, qword [fs:0x28]
00000000000017f9         mov        qword [rsp+0x190+var_48], rax
0000000000001801         xor        eax, eax
0000000000001803         call       j_getpagesize                               ; getpagesize
0000000000001808         mov        rdi, qword [r14]
000000000000180b         mov        ebx, eax
000000000000180d         call       set_program_name                            ; set_program_name
0000000000001812         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x60c1
0000000000001819         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000181e         call       j_setlocale                                 ; setlocale
0000000000001823         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000182a         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001831         call       j_bindtextdomain                            ; bindtextdomain
0000000000001836         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000183d         call       j_textdomain                                ; textdomain
0000000000001842         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001849         call       atexit                                      ; atexit
000000000000184e         mov        byte [rsp+0x190+var_15A], 0x0
0000000000001853         mov        byte [rsp+0x190+var_13B], 0x0
0000000000001858         mov        byte [rsp+0x190+var_13A], 0x0
000000000000185d         mov        byte [rsp+0x190+var_103], 0x0
0000000000001865         mov        byte [rsp+0x190+var_159], 0x0
000000000000186a         nop        word [rax+rax]

                     loc_1870:
0000000000001870         mov        rsi, qword [rsp+0x190+var_148]              ; argument "___argv" for method j_getopt_long, CODE XREF=main+221, main+243, main+275, main+293, main+317, main+327, main+430
0000000000001875         mov        edi, dword [rsp+0x190+var_140]              ; argument "___argc" for method j_getopt_long
0000000000001879         lea        rcx, qword [long_options.7050]              ; argument "__longopts" for method j_getopt_long, long_options.7050
0000000000001880         lea        rdx, qword [aBenstuvaet]                    ; argument "__shortopts" for method j_getopt_long, "benstuvAET"
0000000000001887         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000188a         call       j_getopt_long                               ; getopt_long
000000000000188f         cmp        eax, 0xffffffff
0000000000001892         je         loc_1983

0000000000001898         cmp        eax, 0x62
000000000000189b         je         loc_1969

00000000000018a1         jle        loc_18c8

00000000000018a3         cmp        eax, 0x73
00000000000018a6         je         loc_1912

00000000000018a8         jle        loc_18fa

00000000000018aa         cmp        eax, 0x75
00000000000018ad         je         loc_1870

00000000000018af         jl         loc_1973

00000000000018b5         cmp        eax, 0x76
00000000000018b8         jne        loc_23a0

00000000000018be         mov        byte [rsp+0x190+var_15A], 0x1
00000000000018c3         jmp        loc_1870
00000000000018c5         align      8

                     loc_18c8:
00000000000018c8         cmp        eax, 0x41                                   ; CODE XREF=main+209
00000000000018cb         je         loc_18e5

00000000000018cd         jle        loc_191c

00000000000018cf         cmp        eax, 0x45
00000000000018d2         je         loc_18f0

00000000000018d4         cmp        eax, 0x54
00000000000018d7         jne        loc_23a0

00000000000018dd         mov        r12d, 0x1
00000000000018e3         jmp        loc_1870

                     loc_18e5:
00000000000018e5         mov        r12d, 0x1                                   ; CODE XREF=main+251

                     loc_18eb:
00000000000018eb         mov        byte [rsp+0x190+var_15A], 0x1               ; CODE XREF=main+301

                     loc_18f0:
00000000000018f0         mov        byte [rsp+0x190+var_13B], 0x1               ; CODE XREF=main+258
00000000000018f5         jmp        loc_1870

                     loc_18fa:
00000000000018fa         cmp        eax, 0x65                                   ; CODE XREF=main+216
00000000000018fd         je         loc_18eb

00000000000018ff         cmp        eax, 0x6e
0000000000001902         jne        loc_23a0

                     loc_1908:
0000000000001908         mov        byte [rsp+0x190+var_159], 0x1               ; CODE XREF=main+417
000000000000190d         jmp        loc_1870

                     loc_1912:
0000000000001912         mov        byte [rsp+0x190+var_13A], 0x1               ; CODE XREF=main+214
0000000000001917         jmp        loc_1870

                     loc_191c:
000000000000191c         cmp        eax, 0xffffff7d                             ; CODE XREF=main+253
0000000000001921         mov        dword [rsp+0x190+var_160], eax
0000000000001925         jne        loc_2366

000000000000192b         sub        rsp, 0x8
000000000000192f         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001936         mov        rcx, qword [Version]                        ; Version
000000000000193d         push       0x0
000000000000193f         lea        r9, qword [aRichardMStallm]                 ; "Richard M. Stallman"
0000000000001946         lea        r8, qword [aTorbjornGranlu]                 ; "Torbjorn Granlund"
000000000000194d         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x558a
0000000000001954         lea        rsi, qword [aWriteError+12]                 ; 0x5510
000000000000195b         xor        eax, eax
000000000000195d         call       version_etc                                 ; version_etc
0000000000001962         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001964         call       j_exit                                      ; exit
                        ; endp

                     loc_1969:
0000000000001969         mov        byte [rsp+0x190+var_103], 0x1               ; CODE XREF=main+203
0000000000001971         jmp        loc_1908

                     loc_1973:
0000000000001973         mov        r12d, 0x1                                   ; CODE XREF=main+223
0000000000001979         mov        byte [rsp+0x190+var_15A], 0x1
000000000000197e         jmp        loc_1870

                     loc_1983:
0000000000001983         mov        dword [rsp+0x190+var_160], eax              ; CODE XREF=main+194
0000000000001987         lea        rax, qword [rsp+0x190+var_E0]
000000000000198f         mov        esi, 0x1                                    ; argument "__fildes" for method j___fxstat
0000000000001994         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000001999         mov        rdx, rax                                    ; argument "__stat_buf" for method j___fxstat
000000000000199c         mov        qword [rsp+0x190+var_110], rax
00000000000019a4         call       j___fxstat                                  ; __fxstat
00000000000019a9         test       eax, eax
00000000000019ab         js         loc_23af

00000000000019b1         mov        r15, qword [rsp+0x190+var_A8]
00000000000019b9         movabs     rax, 0x1ffffffffffe0000
00000000000019c3         movsxd     rcx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
00000000000019ca         mov        byte [rsp+0x190+var_102], 0x0
00000000000019d2         mov        byte [rsp+0x190+var_104], 0x1
00000000000019da         lea        rdx, qword [r15-0x20000]
00000000000019e1         mov        qword [rsp+0x190+var_138], rcx
00000000000019e6         cmp        rdx, rax
00000000000019e9         mov        eax, 0x20000
00000000000019ee         cmova      r15, rax
00000000000019f2         movsxd     rax, ebx
00000000000019f5         mov        qword [rsp+0x190+var_128], rax
00000000000019fa         mov        rax, qword [rsp+0x190+var_E0]
0000000000001a02         mov        qword [rsp+0x190+var_100], rax
0000000000001a0a         mov        rax, qword [rsp+0x190+var_D8]
0000000000001a12         mov        qword [rsp+0x190+var_F8], rax
0000000000001a1a         mov        eax, dword [rsp+0x190+var_C8]
0000000000001a21         and        eax, 0xf000
0000000000001a26         mov        dword [rsp+0x190+var_108], eax
0000000000001a2d         movzx      eax, byte [rsp+0x190+var_159]
0000000000001a32         or         al, byte [rsp+0x190+var_13B]
0000000000001a36         cmp        dword [rsp+0x190+var_140], ecx
0000000000001a3a         mov        byte [rsp+0x190+var_101], al
0000000000001a41         lea        rax, qword [aLibs+10]                       ; 0x5b8a
0000000000001a48         mov        qword [infile], rax                         ; infile
0000000000001a4f         jle        loc_22fa

                     loc_1a55:
0000000000001a55         mov        rax, qword [rsp+0x190+var_148]              ; CODE XREF=main+2028
0000000000001a5a         mov        rcx, qword [rsp+0x190+var_138]
0000000000001a5f         mov        rax, qword [rax+rcx*8]
0000000000001a63         mov        qword [infile], rax                         ; infile

                     loc_1a6a:
0000000000001a6a         lea        rdi, qword [aLibs+10]                       ; 0x5b8a, CODE XREF=main+2865
0000000000001a71         mov        ecx, 0x2
0000000000001a76         mov        rsi, rax
0000000000001a79         rep  cmpsb byte [rsi], byte [rdi]
0000000000001a7b         seta       bl
0000000000001a7e         sbb        bl, 0x0
0000000000001a81         movsx      ebx, bl
0000000000001a84         test       ebx, ebx
0000000000001a86         jne        loc_1f59

0000000000001a8c         mov        dword [input_desc], 0x0                     ; input_desc
0000000000001a96         mov        byte [rsp+0x190+var_102], 0x1

                     loc_1a9e:
0000000000001a9e         mov        rdx, qword [rsp+0x190+var_110]              ; argument "__stat_buf" for method j___fxstat, CODE XREF=main+1951
0000000000001aa6         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
0000000000001aa8         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000001aad         call       j___fxstat                                  ; __fxstat
0000000000001ab2         test       eax, eax
0000000000001ab4         js         loc_2167

0000000000001aba         mov        rcx, qword [rsp+0x190+var_A8]
0000000000001ac2         movabs     rax, 0x1ffffffffffe0000
0000000000001acc         mov        edi, ebx
0000000000001ace         lea        rdx, qword [rcx-0x20000]
0000000000001ad5         cmp        rdx, rax
0000000000001ad8         mov        eax, 0x20000
0000000000001add         cmovbe     rax, rcx
0000000000001ae1         xor        edx, edx
0000000000001ae3         xor        esi, esi
0000000000001ae5         mov        ecx, 0x2
0000000000001aea         mov        qword [rsp+0x190+var_158], rax
0000000000001aef         call       fdadvise                                    ; fdadvise
0000000000001af4         cmp        dword [rsp+0x190+var_108], 0x8000
0000000000001aff         je         loc_20d4

                     loc_1b05:
0000000000001b05         cmp        byte [rsp+0x190+var_101], 0x0               ; CODE XREF=main+2324, main+2346, main+2378
0000000000001b0d         mov        rax, qword [rsp+0x190+var_128]
0000000000001b12         lea        r14, qword [rax-1]
0000000000001b16         jne        loc_1b2c

0000000000001b18         movzx      r13d, byte [rsp+0x190+var_15A]
0000000000001b1e         or         r13d, r12d
0000000000001b21         or         r13b, byte [rsp+0x190+var_13A]
0000000000001b26         je         loc_221f

                     loc_1b2c:
0000000000001b2c         mov        rbx, qword [rsp+0x190+var_128]              ; CODE XREF=main+838
0000000000001b31         mov        rbp, qword [rsp+0x190+var_158]
0000000000001b36         mov        rdi, rbx
0000000000001b39         add        rdi, rbp
0000000000001b3c         call       xmalloc                                     ; xmalloc
0000000000001b41         mov        r13, rax
0000000000001b44         mov        qword [rsp+0x190+var_120], rax
0000000000001b49         lea        rax, qword [rbx+r15+0x12]
0000000000001b4e         lea        rdi, qword [rax+rbp*4]
0000000000001b52         call       xmalloc                                     ; xmalloc
0000000000001b57         mov        rcx, rax
0000000000001b5a         mov        qword [rsp+0x190+var_118], rax
0000000000001b5f         xor        edx, edx
0000000000001b61         add        rcx, r14
0000000000001b64         add        r14, r13
0000000000001b67         mov        esi, dword [newlines2]                      ; newlines2
0000000000001b6d         mov        rax, rcx
0000000000001b70         mov        r13d, r12d
0000000000001b73         mov        byte [rsp+0x190+var_13C], 0x1
0000000000001b78         div        rbx
0000000000001b7b         mov        rax, r14
0000000000001b7e         mov        dword [rsp+0x190+var_18C], esi
0000000000001b82         xor        r13d, 0x1
0000000000001b86         sub        rcx, rdx
0000000000001b89         xor        edx, edx
0000000000001b8b         div        rbx
0000000000001b8e         mov        rax, r14
0000000000001b91         lea        rsi, qword [rcx+r15]
0000000000001b95         mov        r14, r15
0000000000001b98         mov        qword [rsp+0x190+var_170], rcx
0000000000001b9d         mov        r15, rcx
0000000000001ba0         mov        qword [rsp+0x190+var_180], rsi
0000000000001ba5         sub        rax, rdx
0000000000001ba8         lea        rbx, qword [rax+1]
0000000000001bac         mov        qword [rsp+0x190+var_178], rax
0000000000001bb1         mov        qword [rsp+0x190+var_188], rax
0000000000001bb6         movzx      eax, byte [rsp+0x190+var_103]
0000000000001bbe         mov        qword [rsp+0x190+var_150], rbx
0000000000001bc3         xor        eax, 0x1
0000000000001bc6         mov        byte [rsp+0x190+var_139], al
0000000000001bca         lea        rax, qword [rsp+0x190+var_E4]
0000000000001bd2         mov        qword [rsp+0x190+var_130], rax
0000000000001bd7         nop        word [rax+rax]

                     loc_1be0:
0000000000001be0         cmp        qword [rsp+0x190+var_180], r15              ; CODE XREF=main+1171
0000000000001be5         jbe        loc_1da3

                     loc_1beb:
0000000000001beb         cmp        rbx, qword [rsp+0x190+var_188]              ; CODE XREF=main+1485
0000000000001bf0         jbe        loc_1e03

                     loc_1bf6:
0000000000001bf6         cmp        byte [rsp+0x190+var_13C], 0x0               ; CODE XREF=main+1581
0000000000001bfb         mov        dword [rsp+0x190+var_E4], 0x0
0000000000001c06         jne        loc_1eb0

                     loc_1c0c:
0000000000001c0c         mov        rbx, r15                                    ; CODE XREF=main+1806
0000000000001c0f         sub        rbx, qword [rsp+0x190+var_170]
0000000000001c14         jne        loc_1ef3

                     loc_1c1a:
0000000000001c1a         mov        ebx, dword [input_desc]                     ; input_desc, CODE XREF=main+1851

                     loc_1c20:
0000000000001c20         mov        rdx, qword [rsp+0x190+var_158]              ; CODE XREF=main+1800
0000000000001c25         mov        rsi, qword [rsp+0x190+var_178]
0000000000001c2a         mov        edi, ebx
0000000000001c2c         call       safe_read                                   ; safe_read
0000000000001c31         cmp        rax, 0xffffffffffffffff
0000000000001c35         je         loc_2007

0000000000001c3b         test       rax, rax
0000000000001c3e         je         loc_20ae

0000000000001c44         mov        rdi, qword [rsp+0x190+var_178]
0000000000001c49         mov        rbx, qword [rsp+0x190+var_150]
0000000000001c4e         add        rax, rdi
0000000000001c51         mov        qword [rsp+0x190+var_188], rax
0000000000001c56         mov        byte [rax], 0xa
0000000000001c59         mov        rax, rdi

                     loc_1c5c:
0000000000001c5c         movzx      ebp, byte [rax]                             ; CODE XREF=main+1708

                     loc_1c5f:
0000000000001c5f         cmp        bpl, 0xa                                    ; CODE XREF=main+1822
0000000000001c63         je         loc_1be0

0000000000001c69         mov        edi, dword [rsp+0x190+var_18C]
0000000000001c6d         test       edi, edi
0000000000001c6f         js         loc_1c8f

0000000000001c71         cmp        byte [rsp+0x190+var_159], 0x0
0000000000001c76         je         loc_1c8f

0000000000001c78         call       next_line_num                               ; next_line_num
0000000000001c7d         mov        rsi, qword [line_num_print]                 ; argument "__src" for method j_stpcpy, line_num_print
0000000000001c84         mov        rdi, r15                                    ; argument "__dest" for method j_stpcpy
0000000000001c87         call       j_stpcpy                                    ; stpcpy
0000000000001c8c         mov        r15, rax

                     loc_1c8f:
0000000000001c8f         cmp        byte [rsp+0x190+var_15A], 0x0               ; CODE XREF=main+1183, main+1190
0000000000001c94         je         loc_1cbb

0000000000001c96         jmp        loc_1ced
0000000000001c98         align      32

                     loc_1ca0:
0000000000001ca0         test       r12b, r12b                                  ; CODE XREF=main+1263
0000000000001ca3         je         loc_1cc1

0000000000001ca5         mov        eax, 0x495e
0000000000001caa         add        r15, 0x2
0000000000001cae         mov        word [r15-2], ax

                     loc_1cb3:
0000000000001cb3         add        rbx, 0x1                                    ; CODE XREF=main+1282
0000000000001cb7         movzx      ebp, byte [rbx-1]

                     loc_1cbb:
0000000000001cbb         cmp        bpl, 0x9                                    ; CODE XREF=main+1220
0000000000001cbf         je         loc_1ca0

                     loc_1cc1:
0000000000001cc1         cmp        bpl, 0xa                                    ; CODE XREF=main+1235
0000000000001cc5         je         loc_1d90

0000000000001ccb         mov        byte [r15], bpl
0000000000001cce         add        r15, 0x1
0000000000001cd2         jmp        loc_1cb3
0000000000001cd4         align      8

                     loc_1cd8:
0000000000001cd8         cmp        bpl, 0x7e                                   ; CODE XREF=main+1313
0000000000001cdc         ja         loc_1d10

0000000000001cde         mov        byte [r15], bpl
0000000000001ce1         add        r15, 0x1

                     loc_1ce5:
0000000000001ce5         add        rbx, 0x1                                    ; CODE XREF=main+1334, main+1386, main+1413, main+1438, main+1464, main+1734
0000000000001ce9         movzx      ebp, byte [rbx-1]

                     loc_1ced:
0000000000001ced         cmp        bpl, 0x1f                                   ; CODE XREF=main+1222
0000000000001cf1         ja         loc_1cd8

0000000000001cf3         cmp        bpl, 0x9
0000000000001cf7         jne        loc_1d40

0000000000001cf9         test       r13b, r13b
0000000000001cfc         je         loc_1d40

0000000000001cfe         mov        byte [r15], 0x9
0000000000001d02         add        r15, 0x1
0000000000001d06         jmp        loc_1ce5
0000000000001d08         align      16

                     loc_1d10:
0000000000001d10         cmp        bpl, 0x7f                                   ; CODE XREF=main+1292
0000000000001d14         je         loc_1d60

0000000000001d16         mov        ecx, 0x2d4d
0000000000001d1b         cmp        bpl, 0x9f
0000000000001d1f         mov        word [r15], cx
0000000000001d23         jbe        loc_1d78

0000000000001d25         cmp        bpl, 0xff
0000000000001d29         je         loc_1e88

0000000000001d2f         add        ebp, 0xffffff80
0000000000001d32         add        r15, 0x3
0000000000001d36         mov        byte [r15-1], bpl
0000000000001d3a         jmp        loc_1ce5
0000000000001d3c         align      64

                     loc_1d40:
0000000000001d40         cmp        bpl, 0xa                                    ; CODE XREF=main+1319, main+1324
0000000000001d44         je         loc_1d90

0000000000001d46         add        ebp, 0x40
0000000000001d49         mov        byte [r15], 0x5e
0000000000001d4d         add        r15, 0x2
0000000000001d51         mov        byte [r15-1], bpl
0000000000001d55         jmp        loc_1ce5
0000000000001d57         align      32

                     loc_1d60:
0000000000001d60         mov        esi, 0x3f5e                                 ; CODE XREF=main+1348
0000000000001d65         add        r15, 0x2
0000000000001d69         mov        word [r15-2], si
0000000000001d6e         jmp        loc_1ce5
0000000000001d73         align      8

                     loc_1d78:
0000000000001d78         sub        ebp, 0x40                                   ; CODE XREF=main+1363
0000000000001d7b         mov        byte [r15+2], 0x5e
0000000000001d80         add        r15, 0x4
0000000000001d84         mov        byte [r15-1], bpl
0000000000001d88         jmp        loc_1ce5
0000000000001d8d         align      16

                     loc_1d90:
0000000000001d90         cmp        qword [rsp+0x190+var_180], r15              ; CODE XREF=main+1269, main+1396
0000000000001d95         mov        eax, dword [rsp+0x190+var_160]
0000000000001d99         mov        dword [rsp+0x190+var_18C], eax
0000000000001d9d         ja         loc_1beb

                     loc_1da3:
0000000000001da3         mov        rbp, qword [rsp+0x190+var_170]              ; CODE XREF=main+1045
0000000000001da8         nop        dword [rax+rax]

                     loc_1db0:
0000000000001db0         mov        rdx, r14                                    ; CODE XREF=main+1541
0000000000001db3         mov        rsi, rbp
0000000000001db6         mov        edi, 0x1
0000000000001dbb         call       full_write                                  ; full_write
0000000000001dc0         cmp        r14, rax
0000000000001dc3         jne        loc_22ce

0000000000001dc9         add        rbp, r14
0000000000001dcc         mov        r9, r15
0000000000001dcf         sub        r9, rbp
0000000000001dd2         cmp        r14, r9
0000000000001dd5         jbe        loc_1db0

0000000000001dd7         mov        r15, qword [rsp+0x190+var_170]
0000000000001ddc         mov        rdx, r9                                     ; argument "__n" for method j_memmove
0000000000001ddf         mov        rsi, rbp                                    ; argument "__src" for method j_memmove
0000000000001de2         mov        qword [rsp+0x190+var_168], r9
0000000000001de7         mov        rdi, r15                                    ; argument "__dest" for method j_memmove
0000000000001dea         call       j_memmove                                   ; memmove
0000000000001def         cmp        rbx, qword [rsp+0x190+var_188]
0000000000001df4         mov        r9, qword [rsp+0x190+var_168]
0000000000001df9         lea        r15, qword [r15+r9]
0000000000001dfd         ja         loc_1bf6

                     loc_1e03:
0000000000001e03         add        dword [rsp+0x190+var_18C], 0x1              ; CODE XREF=main+1056
0000000000001e08         lea        rdx, qword [rbx+1]
0000000000001e0c         mov        eax, dword [rsp+0x190+var_18C]
0000000000001e10         test       eax, eax
0000000000001e12         jle        loc_1e60

0000000000001e14         cmp        eax, 0x1
0000000000001e17         je         loc_1e2c

0000000000001e19         cmp        byte [rsp+0x190+var_13A], 0x0
0000000000001e1e         mov        dword [rsp+0x190+var_18C], 0x2
0000000000001e26         jne        loc_1ee8

                     loc_1e2c:
0000000000001e2c         cmp        byte [rsp+0x190+var_139], 0x0               ; CODE XREF=main+1607
0000000000001e31         je         loc_1e60

0000000000001e33         cmp        byte [rsp+0x190+var_159], 0x0
0000000000001e38         je         loc_1e60

0000000000001e3a         mov        qword [rsp+0x190+var_168], rdx
0000000000001e3f         call       next_line_num                               ; next_line_num
0000000000001e44         mov        rsi, qword [line_num_print]                 ; argument "__src" for method j_stpcpy, line_num_print
0000000000001e4b         mov        rdi, r15                                    ; argument "__dest" for method j_stpcpy
0000000000001e4e         call       j_stpcpy                                    ; stpcpy
0000000000001e53         mov        rdx, qword [rsp+0x190+var_168]
0000000000001e58         mov        r15, rax
0000000000001e5b         nop        dword [rax+rax]

                     loc_1e60:
0000000000001e60         cmp        byte [rsp+0x190+var_13B], 0x0               ; CODE XREF=main+1602, main+1633, main+1640
0000000000001e65         lea        rax, qword [r15+1]
0000000000001e69         je         loc_1ea0

0000000000001e6b         mov        byte [r15], 0x24
0000000000001e6f         add        r15, 0x2

                     loc_1e73:
0000000000001e73         mov        byte [rax], 0xa                             ; CODE XREF=main+1753
0000000000001e76         mov        rax, rbx
0000000000001e79         mov        rbx, rdx
0000000000001e7c         jmp        loc_1c5c
0000000000001e81         align      8

                     loc_1e88:
0000000000001e88         mov        edx, 0x3f5e                                 ; CODE XREF=main+1369
0000000000001e8d         add        r15, 0x4
0000000000001e91         mov        word [r15-2], dx
0000000000001e96         jmp        loc_1ce5
0000000000001e9b         align      32

                     loc_1ea0:
0000000000001ea0         mov        rsi, rax                                    ; CODE XREF=main+1689
0000000000001ea3         mov        rax, r15
0000000000001ea6         mov        r15, rsi
0000000000001ea9         jmp        loc_1e73
0000000000001eab         align      16

                     loc_1eb0:
0000000000001eb0         mov        ebx, dword [input_desc]                     ; input_desc, CODE XREF=main+1078
0000000000001eb6         mov        rdx, qword [rsp+0x190+var_130]
0000000000001ebb         xor        eax, eax
0000000000001ebd         mov        esi, 0x541b                                 ; argument "__request" for method j_ioctl
0000000000001ec2         mov        edi, ebx                                    ; argument "__fd" for method j_ioctl
0000000000001ec4         call       j_ioctl                                     ; ioctl
0000000000001ec9         test       eax, eax
0000000000001ecb         js         loc_1f20

                     loc_1ecd:
0000000000001ecd         mov        r8d, dword [rsp+0x190+var_E4]               ; CODE XREF=main+1924
0000000000001ed5         test       r8d, r8d
0000000000001ed8         jne        loc_1c20

0000000000001ede         jmp        loc_1c0c
0000000000001ee3         align      8

                     loc_1ee8:
0000000000001ee8         movzx      ebp, byte [rbx]                             ; CODE XREF=main+1622
0000000000001eeb         mov        rbx, rdx
0000000000001eee         jmp        loc_1c5f

                     loc_1ef3:
0000000000001ef3         mov        r15, qword [rsp+0x190+var_170]              ; CODE XREF=main+1092
0000000000001ef8         mov        rdx, rbx
0000000000001efb         mov        edi, 0x1
0000000000001f00         mov        rsi, r15
0000000000001f03         call       full_write                                  ; full_write
0000000000001f08         cmp        rbx, rax
0000000000001f0b         je         loc_1c1a

                     loc_1f11:
0000000000001f11         call       write_pending.part.6                        ; write_pending.part.6, CODE XREF=main+2543, main+2575
0000000000001f16         nop        word [cs:rax+rax]

                     loc_1f20:
0000000000001f20         call       j___errno_location                          ; __errno_location, CODE XREF=main+1787
0000000000001f25         mov        ecx, dword [rax]
0000000000001f27         cmp        ecx, 0x5f
0000000000001f2a         sete       r10b
0000000000001f2e         cmp        ecx, 0x26
0000000000001f31         ja         loc_1f46

0000000000001f33         movabs     rdx, 0x4002480000
0000000000001f3d         shr        rdx, cl
0000000000001f40         and        edx, 0x1
0000000000001f43         or         r10d, edx

                     loc_1f46:
0000000000001f46         test       r10b, r10b                                  ; CODE XREF=main+1889
0000000000001f49         je         loc_2306

0000000000001f4f         mov        byte [rsp+0x190+var_13C], 0x0
0000000000001f54         jmp        loc_1ecd

                     loc_1f59:
0000000000001f59         xor        esi, esi                                    ; argument "__oflag" for method j_open, CODE XREF=main+694
0000000000001f5b         mov        rdi, rax                                    ; argument "__file" for method j_open
0000000000001f5e         xor        eax, eax
0000000000001f60         call       j_open                                      ; open
0000000000001f65         test       eax, eax
0000000000001f67         mov        ebx, eax
0000000000001f69         mov        dword [input_desc], eax                     ; input_desc
0000000000001f6f         jns        loc_1a9e

                     loc_1f75:
0000000000001f75         mov        rdx, qword [infile]                         ; infile, CODE XREF=main+2265
0000000000001f7c         mov        esi, 0x3
0000000000001f81         xor        edi, edi
0000000000001f83         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001f88         mov        rbx, rax
0000000000001f8b         call       j___errno_location                          ; __errno_location
0000000000001f90         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f92         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
0000000000001f99         mov        rcx, rbx
0000000000001f9c         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001f9e         xor        eax, eax
0000000000001fa0         call       j_error                                     ; error
0000000000001fa5         mov        byte [rsp+0x190+var_104], 0x0

                     loc_1fad:
0000000000001fad         add        qword [rsp+0x190+var_138], 0x1              ; CODE XREF=main+2240, main+2259
0000000000001fb3         mov        rax, qword [rsp+0x190+var_138]
0000000000001fb8         cmp        dword [rsp+0x190+var_140], eax
0000000000001fbc         jg         loc_1a55

0000000000001fc2         cmp        byte [rsp+0x190+var_102], 0x0
0000000000001fca         jne        loc_21e4

                     loc_1fd0:
0000000000001fd0         movzx      eax, byte [rsp+0x190+var_104]               ; CODE XREF=main+2589
0000000000001fd8         xor        eax, 0x1
0000000000001fdb         mov        rcx, qword [rsp+0x190+var_48]
0000000000001fe3         xor        rcx, qword [fs:0x28]
0000000000001fec         movzx      eax, al
0000000000001fef         jne        loc_23aa

0000000000001ff5         add        rsp, 0x158
0000000000001ffc         pop        rbx
0000000000001ffd         pop        rbp
0000000000001ffe         pop        r12
0000000000002000         pop        r13
0000000000002002         pop        r14
0000000000002004         pop        r15
0000000000002006         ret
                        ; endp

                     loc_2007:
0000000000002007         mov        rdx, qword [infile]                         ; infile, CODE XREF=main+1125
000000000000200e         xor        edi, edi
0000000000002010         mov        rax, r15
0000000000002013         mov        esi, 0x3
0000000000002018         mov        r15, r14
000000000000201b         mov        r14, rax
000000000000201e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002023         mov        rbx, rax
0000000000002026         call       j___errno_location                          ; __errno_location
000000000000202b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000202d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
0000000000002034         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002036         xor        eax, eax
0000000000002038         mov        rcx, rbx
000000000000203b         call       j_error                                     ; error
0000000000002040         sub        r14, qword [rsp+0x190+var_170]
0000000000002045         jne        loc_21a4

                     loc_204b:
000000000000204b         mov        eax, dword [rsp+0x190+var_18C]              ; CODE XREF=main+2537
000000000000204f         xor        r10d, r10d
0000000000002052         mov        dword [newlines2], eax                      ; newlines2

                     loc_2058:
0000000000002058         mov        rdi, qword [rsp+0x190+var_118]              ; argument "__ptr" for method j_free, CODE XREF=main+2306, main+2961
000000000000205d         and        byte [rsp+0x190+var_104], r10b
0000000000002065         call       j_free                                      ; free

                     loc_206a:
000000000000206a         mov        rdi, qword [rsp+0x190+var_120]              ; argument "__ptr" for method j_free, CODE XREF=main+2801
000000000000206f         call       j_free                                      ; free

                     loc_2074:
0000000000002074         mov        rsi, qword [infile]                         ; infile, CODE XREF=main+2450, main+2511
000000000000207b         lea        rdi, qword [aLibs+10]                       ; 0x5b8a
0000000000002082         mov        ecx, 0x2
0000000000002087         rep  cmpsb byte [rsi], byte [rdi]
0000000000002089         seta       al
000000000000208c         sbb        al, 0x0
000000000000208e         test       al, al
0000000000002090         je         loc_1fad

0000000000002096         mov        edi, dword [input_desc]                     ; argument "__fd" for method j_close, input_desc
000000000000209c         call       j_close                                     ; close
00000000000020a1         test       eax, eax
00000000000020a3         jns        loc_1fad

00000000000020a9         jmp        loc_1f75

                     loc_20ae:
00000000000020ae         mov        rax, r15                                    ; CODE XREF=main+1134
00000000000020b1         mov        r15, r14
00000000000020b4         mov        rbx, rax
00000000000020b7         sub        rbx, qword [rsp+0x190+var_170]
00000000000020bc         jne        loc_21c4

                     loc_20c2:
00000000000020c2         mov        eax, dword [rsp+0x190+var_18C]              ; CODE XREF=main+2569
00000000000020c6         mov        r10d, 0x1
00000000000020cc         mov        dword [newlines2], eax                      ; newlines2
00000000000020d2         jmp        loc_2058

                     loc_20d4:
00000000000020d4         mov        rax, qword [rsp+0x190+var_100]              ; CODE XREF=main+815
00000000000020dc         cmp        qword [rsp+0x190+var_E0], rax
00000000000020e4         jne        loc_1b05

00000000000020ea         mov        rax, qword [rsp+0x190+var_F8]
00000000000020f2         cmp        qword [rsp+0x190+var_D8], rax
00000000000020fa         jne        loc_1b05

0000000000002100         mov        edi, dword [input_desc]                     ; argument "__fd" for method j_lseek, input_desc
0000000000002106         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000002108         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
000000000000210d         call       j_lseek                                     ; lseek
0000000000002112         cmp        rax, qword [rsp+0x190+var_B0]
000000000000211a         jge        loc_1b05

0000000000002120         mov        rdx, qword [infile]                         ; infile
0000000000002127         mov        esi, 0x3
000000000000212c         xor        edi, edi
000000000000212e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002133         lea        rsi, qword [aSInputFileIsOu]                ; argument "msgid" for method j_dcgettext, "%s: input file is output file"
000000000000213a         mov        rbx, rax
000000000000213d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002142         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002144         call       j_dcgettext                                 ; dcgettext
0000000000002149         mov        rcx, rbx
000000000000214c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000214f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002151         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002153         xor        eax, eax
0000000000002155         call       j_error                                     ; error
000000000000215a         mov        byte [rsp+0x190+var_104], 0x0
0000000000002162         jmp        loc_2074

                     loc_2167:
0000000000002167         mov        rdx, qword [infile]                         ; infile, CODE XREF=main+740
000000000000216e         mov        esi, 0x3
0000000000002173         xor        edi, edi
0000000000002175         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000217a         mov        rbx, rax
000000000000217d         call       j___errno_location                          ; __errno_location
0000000000002182         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002184         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
000000000000218b         mov        rcx, rbx
000000000000218e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002190         xor        eax, eax
0000000000002192         call       j_error                                     ; error
0000000000002197         mov        byte [rsp+0x190+var_104], 0x0
000000000000219f         jmp        loc_2074

                     loc_21a4:
00000000000021a4         mov        rsi, qword [rsp+0x190+var_170]              ; CODE XREF=main+2165
00000000000021a9         mov        rdx, r14
00000000000021ac         mov        edi, 0x1
00000000000021b1         call       full_write                                  ; full_write
00000000000021b6         cmp        r14, rax
00000000000021b9         je         loc_204b

00000000000021bf         jmp        loc_1f11

                     loc_21c4:
00000000000021c4         mov        rsi, qword [rsp+0x190+var_170]              ; CODE XREF=main+2284
00000000000021c9         mov        rdx, rbx
00000000000021cc         mov        edi, 0x1
00000000000021d1         call       full_write                                  ; full_write
00000000000021d6         cmp        rbx, rax
00000000000021d9         je         loc_20c2

00000000000021df         jmp        loc_1f11

                     loc_21e4:
00000000000021e4         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=main+2042
00000000000021e6         call       j_close                                     ; close
00000000000021eb         test       eax, eax
00000000000021ed         jns        loc_1fd0

00000000000021f3         lea        rsi, qword [aClosingStandar]                ; argument "msgid" for method j_dcgettext, "closing standard input"
00000000000021fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021ff         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002201         call       j_dcgettext                                 ; dcgettext
0000000000002206         mov        rbx, rax
0000000000002209         call       j___errno_location                          ; __errno_location
000000000000220e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002210         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002213         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002218         xor        eax, eax
000000000000221a         call       j_error                                     ; error

                     loc_221f:
000000000000221f         mov        rax, qword [rsp+0x190+var_158]              ; CODE XREF=main+854
0000000000002224         cmp        r15, rax
0000000000002227         cmovae     rax, r15
000000000000222b         lea        rdi, qword [rax+r14]
000000000000222f         mov        rbp, rax
0000000000002232         call       xmalloc                                     ; xmalloc
0000000000002237         add        r14, rax
000000000000223a         mov        qword [rsp+0x190+var_120], rax
000000000000223f         xor        edx, edx
0000000000002241         mov        rax, r14
0000000000002244         mov        rbx, r14
0000000000002247         div        qword [rsp+0x190+var_128]
000000000000224c         sub        rbx, rdx
000000000000224f         jmp        loc_226f

                     loc_2251:
0000000000002251         test       rax, rax                                    ; CODE XREF=main+2743
0000000000002254         je         loc_22c6

0000000000002256         mov        rdx, rax
0000000000002259         mov        rsi, rbx
000000000000225c         mov        edi, 0x1
0000000000002261         call       full_write                                  ; full_write
0000000000002266         cmp        r14, rax
0000000000002269         jne        loc_2374

                     loc_226f:
000000000000226f         mov        edi, dword [input_desc]                     ; input_desc, CODE XREF=main+2687
0000000000002275         mov        rdx, rbp
0000000000002278         mov        rsi, rbx
000000000000227b         call       safe_read                                   ; safe_read
0000000000002280         cmp        rax, 0xffffffffffffffff
0000000000002284         mov        r14, rax
0000000000002287         jne        loc_2251

0000000000002289         mov        rdx, qword [infile]                         ; infile
0000000000002290         mov        esi, 0x3
0000000000002295         xor        edi, edi
0000000000002297         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000229c         mov        rbx, rax
000000000000229f         call       j___errno_location                          ; __errno_location
00000000000022a4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022a6         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
00000000000022ad         mov        rcx, rbx
00000000000022b0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000022b2         xor        eax, eax
00000000000022b4         call       j_error                                     ; error

                     loc_22b9:
00000000000022b9         and        byte [rsp+0x190+var_104], r13b              ; CODE XREF=main+2812
00000000000022c1         jmp        loc_206a

                     loc_22c6:
00000000000022c6         mov        r13d, 0x1                                   ; CODE XREF=main+2692
00000000000022cc         jmp        loc_22b9

                     loc_22ce:
00000000000022ce         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+1523
00000000000022d5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022da         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022dc         call       j_dcgettext                                 ; dcgettext
00000000000022e1         mov        rbx, rax
00000000000022e4         call       j___errno_location                          ; __errno_location
00000000000022e9         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022eb         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000022ee         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000022f3         xor        eax, eax
00000000000022f5         call       j_error                                     ; error

                     loc_22fa:
00000000000022fa         lea        rax, qword [aLibs+10]                       ; 0x5b8a, CODE XREF=main+639
0000000000002301         jmp        loc_1a6a

                     loc_2306:
0000000000002306         mov        rsi, qword [infile]                         ; infile, CODE XREF=main+1913
000000000000230d         mov        edi, 0x4
0000000000002312         mov        byte [rsp+0x190+var_188], r10b
0000000000002317         mov        qword [rsp+0x190+var_180], rax
000000000000231c         mov        r15, r14
000000000000231f         call       quotearg_style                              ; quotearg_style
0000000000002324         lea        rsi, qword [aCannotDoIoctlO]                ; argument "msgid" for method j_dcgettext, "cannot do ioctl on %s"
000000000000232b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002330         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002332         mov        rbx, rax
0000000000002335         call       j_dcgettext                                 ; dcgettext
000000000000233a         mov        r11, qword [rsp+0x190+var_180]
000000000000233f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002342         mov        rcx, rbx
0000000000002345         xor        eax, eax
0000000000002347         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002349         mov        esi, dword [r11]                            ; argument "__errnum" for method j_error
000000000000234c         call       j_error                                     ; error
0000000000002351         mov        eax, dword [rsp+0x190+var_18C]
0000000000002355         movzx      r10d, byte [rsp+0x190+var_188]
000000000000235b         mov        dword [newlines2], eax                      ; newlines2
0000000000002361         jmp        loc_2058

                     loc_2366:
0000000000002366         cmp        eax, 0xffffff7e                             ; CODE XREF=main+341
000000000000236b         jne        loc_23a0

000000000000236d         xor        edi, edi                                    ; argument #1 for method usage
000000000000236f         call       usage                                       ; usage

                     loc_2374:
0000000000002374         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+2713
000000000000237b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002380         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002382         call       j_dcgettext                                 ; dcgettext
0000000000002387         mov        rbx, rax
000000000000238a         call       j___errno_location                          ; __errno_location
000000000000238f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002391         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002394         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002399         xor        eax, eax
000000000000239b         call       j_error                                     ; error

                     loc_23a0:
00000000000023a0         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+232, main+263, main+306, main+2971
00000000000023a5         call       usage                                       ; usage

                     loc_23aa:
00000000000023aa         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+2079
                        ; endp

                     loc_23af:
00000000000023af         lea        rsi, qword [aStandardOutput]                ; argument "msgid" for method j_dcgettext, "standard output", CODE XREF=main+475
00000000000023b6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023bb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023bd         call       j_dcgettext                                 ; dcgettext
00000000000023c2         mov        rbx, rax
00000000000023c5         call       j___errno_location                          ; __errno_location
00000000000023ca         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000023cc         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000023cf         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000023d4         xor        eax, eax
00000000000023d6         call       j_error                                     ; error
00000000000023db         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x674c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000023e0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6684)
00000000000023e2         mov        r9, rdx
00000000000023e5         pop        rsi
00000000000023e6         mov        rdx, rsp
00000000000023e9         and        rsp, 0xfffffffffffffff0
00000000000023ed         push       rax
00000000000023ee         push       rsp
00000000000023ef         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000023f6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000023fd         lea        rdi, qword [main]                           ; main
0000000000002404         call       qword [qword_207fc8+8]                      ; 0x207fd0
000000000000240a         hlt
                        ; endp
000000000000240b         align      16                                          ; End of unwind block (FDE at 0x6684)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002410         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002417         push       rbp
0000000000002418         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000241f         cmp        rax, rdi
0000000000002422         mov        rbp, rsp
0000000000002425         je         loc_2440

0000000000002427         mov        rax, qword [qword_207fc8]                   ; qword_207fc8
000000000000242e         test       rax, rax
0000000000002431         je         loc_2440

0000000000002433         pop        rbp
0000000000002434         jmp        rax
                        ; endp
0000000000002436         align      64

                     loc_2440:
0000000000002440         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002441         ret
                        ; endp
0000000000002442         align      16

                     register_tm_clones:
0000000000002450         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002457         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000245e         push       rbp
000000000000245f         sub        rsi, rdi
0000000000002462         mov        rbp, rsp
0000000000002465         sar        rsi, 0x3
0000000000002469         mov        rax, rsi
000000000000246c         shr        rax, 0x3f
0000000000002470         add        rsi, rax
0000000000002473         sar        rsi, 0x1
0000000000002476         je         loc_2490

0000000000002478         mov        rax, qword [qword_207fe0]                   ; qword_207fe0
000000000000247f         test       rax, rax
0000000000002482         je         loc_2490

0000000000002484         pop        rbp
0000000000002485         jmp        rax
                        ; endp
0000000000002487         align      16

                     loc_2490:
0000000000002490         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002491         ret
                        ; endp
0000000000002492         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000024a0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000024a7         jne        loc_24d8

00000000000024a9         cmp        qword [qword_207fe8], 0x0                   ; qword_207fe8
00000000000024b1         push       rbp
00000000000024b2         mov        rbp, rsp
00000000000024b5         je         loc_24c3

00000000000024b7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000024be         call       j_qword_207fe8                              ; qword_207fe8

                     loc_24c3:
00000000000024c3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000024c8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000024cf         pop        rbp
00000000000024d0         ret
                        ; endp
00000000000024d1         align      8

                     loc_24d8:
00000000000024d8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000024da         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000024e0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000024e1         mov        rbp, rsp
00000000000024e4         pop        rbp
00000000000024e5         jmp        register_tm_clones                          ; register_tm_clones
00000000000024ea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_line_num:
00000000000024f0         mov        rcx, qword [line_num_start]                 ; Begin of unwind block (FDE at 0x66f4), line_num_start, CODE XREF=main+1192, main+1647
00000000000024f7         lea        rax, qword [line_buf+17]                    ; 0x208021
00000000000024fe         jmp        loc_250d

                     loc_2500:
0000000000002500         sub        rax, 0x1                                    ; CODE XREF=next_line_num+35
0000000000002504         mov        byte [rax+1], 0x30
0000000000002508         cmp        rcx, rax
000000000000250b         ja         loc_2520

                     loc_250d:
000000000000250d         movzx      edx, byte [rax]                             ; CODE XREF=next_line_num+14
0000000000002510         cmp        dl, 0x38
0000000000002513         jg         loc_2500

0000000000002515         add        edx, 0x1
0000000000002518         mov        byte [rax], dl
000000000000251a         ret
                        ; endp
000000000000251b         align      32

                     loc_2520:
0000000000002520         lea        rax, qword [line_buf]                       ; "                 0\\t", CODE XREF=next_line_num+27
0000000000002527         cmp        rcx, rax
000000000000252a         jbe        loc_2558

000000000000252c         lea        rdx, qword [rcx-1]
0000000000002530         mov        byte [rcx-1], 0x31
0000000000002534         mov        qword [line_num_start], rdx                 ; line_num_start

                     loc_253b:
000000000000253b         mov        rax, qword [line_num_print]                 ; line_num_print, CODE XREF=next_line_num+114
0000000000002542         cmp        rax, rdx
0000000000002545         jbe        loc_2552

0000000000002547         sub        rax, 0x1
000000000000254b         mov        qword [line_num_print], rax                 ; line_num_print

                     loc_2552:
0000000000002552         ret                                                    ; CODE XREF=next_line_num+85
                        ; endp
0000000000002554         align      8

                     loc_2558:
0000000000002558         mov        byte [line_buf], 0x3e                       ; "                 0\\t", CODE XREF=next_line_num+58
000000000000255f         mov        rdx, rcx
0000000000002562         jmp        loc_253b
0000000000002564         align      16                                          ; End of unwind block (FDE at 0x66f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002570         push       r13                                         ; Begin of unwind block (FDE at 0x6720), CODE XREF=main+2975, main+3029
0000000000002572         push       r12
0000000000002574         mov        edx, 0x5
0000000000002579         push       rbp
000000000000257a         push       rbx
000000000000257b         mov        ebp, edi
000000000000257d         sub        rsp, 0x88
0000000000002584         mov        rbx, qword [program_name]                   ; program_name
000000000000258b         mov        rax, qword [fs:0x28]
0000000000002594         mov        qword [rsp+0xa8+var_30], rax
0000000000002599         xor        eax, eax
000000000000259b         test       edi, edi
000000000000259d         je         loc_25cd

000000000000259f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000025a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025a8         call       j_dcgettext                                 ; dcgettext
00000000000025ad         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000025b4         mov        rdx, rax
00000000000025b7         mov        rcx, rbx
00000000000025ba         mov        esi, 0x1
00000000000025bf         xor        eax, eax
00000000000025c1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_25c6:
00000000000025c6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+790
00000000000025c8         call       j_exit                                      ; exit
                        ; endp

                     loc_25cd:
00000000000025cd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
00000000000025d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025d6         call       j_dcgettext                                 ; dcgettext
00000000000025db         mov        rdx, rbx
00000000000025de         mov        rsi, rax
00000000000025e1         mov        edi, 0x1
00000000000025e6         xor        eax, eax
00000000000025e8         call       j___printf_chk                              ; __printf_chk
00000000000025ed         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000025f4         lea        rsi, qword [aConcatenateFil]                ; argument "msgid" for method j_dcgettext, "Concatenate FILE(s) to standard output.\\n"
00000000000025fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002600         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002602         call       j_dcgettext                                 ; dcgettext
0000000000002607         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000260a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000260d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002612         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002619         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000002620         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002625         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002627         call       j_dcgettext                                 ; dcgettext
000000000000262c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000262f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002632         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002637         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000263e         lea        rsi, qword [aNAShowallEquiv]                ; argument "msgid" for method j_dcgettext, "\\n  -A, --show-all           equivalent to -vET\\n  -b, --number-nonblank    number nonempty output lines, overrides -n\\n  -e                       equivalent to -vE\\n  -E, --show-ends          display $ at end of each line\\n  -n, --number             number all…"
0000000000002645         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000264a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000264c         call       j_dcgettext                                 ; dcgettext
0000000000002651         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002654         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002657         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000265c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002663         lea        rsi, qword [aTEquivalentToV]                ; argument "msgid" for method j_dcgettext, "  -t                       equivalent to -vT\\n  -T, --show-tabs          display TAB characters as ^I\\n  -u                       (ignored)\\n  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB\\n"
000000000000266a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000266f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002671         call       j_dcgettext                                 ; dcgettext
0000000000002676         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002679         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000267c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002681         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002688         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000268f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002694         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002696         call       j_dcgettext                                 ; dcgettext
000000000000269b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000269e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026a1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000026a6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000026ad         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000026b4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026b9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026bb         call       j_dcgettext                                 ; dcgettext
00000000000026c0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000026c3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026c6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000026cb         mov        rbx, qword [program_name]                   ; program_name
00000000000026d2         lea        rsi, qword [aNexamplesnSFGO]                ; argument "msgid" for method j_dcgettext, "\\nExamples:\\n  %s f - g  Output f's contents, then standard input, then g's contents.\\n  %s        Copy standard input to standard output.\\n"
00000000000026d9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026de         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026e0         call       j_dcgettext                                 ; dcgettext
00000000000026e5         mov        rcx, rbx
00000000000026e8         mov        rdx, rbx
00000000000026eb         mov        rsi, rax
00000000000026ee         mov        edi, 0x1
00000000000026f3         xor        eax, eax
00000000000026f5         lea        rbx, qword [aWriteError+12]                 ; 0x5510
00000000000026fc         call       j___printf_chk                              ; __printf_chk
0000000000002701         lea        rax, qword [aWriteError+16]                 ; 0x5514
0000000000002708         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000270f         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002718         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002721         mov        rdx, rsp
0000000000002724         mov        qword [rsp+0xa8+var_A8], rax
0000000000002728         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000272f         mov        qword [rsp+0xa8+var_78], rcx
0000000000002734         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000273b         mov        qword [rsp+0xa8+var_A0], rax
0000000000002740         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002747         mov        qword [rsp+0xa8+var_68], rcx
000000000000274c         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002753         mov        qword [rsp+0xa8+var_98], rax
0000000000002758         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000275f         mov        qword [rsp+0xa8+var_58], rcx
0000000000002764         mov        qword [rsp+0xa8+var_90], rax
0000000000002769         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002770         mov        qword [rsp+0xa8+var_88], rax
0000000000002775         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000277c         mov        qword [rsp+0xa8+var_80], rax
0000000000002781         mov        qword [rsp+0xa8+var_70], rax
0000000000002786         mov        qword [rsp+0xa8+var_60], rax
000000000000278b         mov        qword [rsp+0xa8+var_50], rax

                     loc_2790:
0000000000002790         add        rdx, 0x10                                   ; CODE XREF=usage+573
0000000000002794         mov        rdi, qword [rdx]
0000000000002797         test       rdi, rdi
000000000000279a         je         loc_27af

000000000000279c         mov        ecx, 0x4
00000000000027a1         mov        rsi, rbx
00000000000027a4         rep  cmpsb byte [rsi], byte [rdi]
00000000000027a6         seta       al
00000000000027a9         sbb        al, 0x0
00000000000027ab         test       al, al
00000000000027ad         jne        loc_2790

                     loc_27af:
00000000000027af         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+554
00000000000027b3         xor        edi, edi
00000000000027b5         mov        edx, 0x5
00000000000027ba         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000027c1         test       r12, r12
00000000000027c4         je         loc_288b

00000000000027ca         call       j_dcgettext                                 ; dcgettext
00000000000027cf         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000027d6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x558a
00000000000027dd         mov        rsi, rax
00000000000027e0         mov        edi, 0x1
00000000000027e5         xor        eax, eax
00000000000027e7         call       j___printf_chk                              ; __printf_chk
00000000000027ec         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000027ee         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000027f3         call       j_setlocale                                 ; setlocale
00000000000027f8         test       rax, rax
00000000000027fb         je         loc_2819

00000000000027fd         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5598
0000000000002804         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002809         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000280c         call       j_strncmp                                   ; strncmp
0000000000002811         test       eax, eax
0000000000002813         jne        loc_2920

                     loc_2819:
0000000000002819         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+651, usage+981
0000000000002820         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002822         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002827         call       j_dcgettext                                 ; dcgettext
000000000000282c         lea        rcx, qword [aWriteError+12]                 ; 0x5510
0000000000002833         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000283a         mov        rsi, rax
000000000000283d         mov        edi, 0x1
0000000000002842         xor        eax, eax
0000000000002844         call       j___printf_chk                              ; __printf_chk
0000000000002849         cmp        r12, rbx
000000000000284c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5530
0000000000002853         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x60c1
000000000000285a         cmove      rbx, rcx

                     loc_285e:
000000000000285e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+932
0000000000002865         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002867         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000286c         call       j_dcgettext                                 ; dcgettext
0000000000002871         mov        rcx, rbx
0000000000002874         mov        rsi, rax
0000000000002877         mov        rdx, r12
000000000000287a         mov        edi, 0x1
000000000000287f         xor        eax, eax
0000000000002881         call       j___printf_chk                              ; __printf_chk
0000000000002886         jmp        loc_25c6

                     loc_288b:
000000000000288b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+596
0000000000002890         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002897         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x558a
000000000000289e         mov        rsi, rax
00000000000028a1         mov        edi, 0x1
00000000000028a6         xor        eax, eax
00000000000028a8         call       j___printf_chk                              ; __printf_chk
00000000000028ad         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000028af         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000028b4         call       j_setlocale                                 ; setlocale
00000000000028b9         test       rax, rax
00000000000028bc         je         loc_28d6

00000000000028be         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5598
00000000000028c5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000028ca         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000028cd         call       j_strncmp                                   ; strncmp
00000000000028d2         test       eax, eax
00000000000028d4         jne        loc_2919

                     loc_28d6:
00000000000028d6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+844
00000000000028dd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028e4         lea        r12, qword [aWriteError+12]                 ; 0x5510
00000000000028eb         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5530
00000000000028f2         call       j_dcgettext                                 ; dcgettext
00000000000028f7         lea        rcx, qword [aWriteError+12]                 ; 0x5510
00000000000028fe         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002905         mov        rsi, rax
0000000000002908         mov        edi, 0x1
000000000000290d         xor        eax, eax
000000000000290f         call       j___printf_chk                              ; __printf_chk
0000000000002914         jmp        loc_285e

                     loc_2919:
0000000000002919         lea        r12, qword [aWriteError+12]                 ; 0x5510, CODE XREF=usage+868

                     loc_2920:
0000000000002920         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+675
0000000000002927         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000292e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002930         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002935         call       j_dcgettext                                 ; dcgettext
000000000000293a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000293d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002940         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002945         jmp        loc_2819
000000000000294a         align      16                                          ; End of unwind block (FDE at 0x6720)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002950         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x67ac), file_name
0000000000002957         ret
                        ; endp
0000000000002958         align      32                                          ; End of unwind block (FDE at 0x67ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002960         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x67c0), ignore_EPIPE
0000000000002967         ret
                        ; endp
0000000000002968         align      16                                          ; End of unwind block (FDE at 0x67c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002970         push       rbp                                         ; Begin of unwind block (FDE at 0x67d4), DATA XREF=main+114
0000000000002971         push       rbx
0000000000002972         sub        rsp, 0x8
0000000000002976         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000297d         call       close_stream                                ; close_stream
0000000000002982         test       eax, eax
0000000000002984         je         loc_299c

0000000000002986         call       j___errno_location                          ; __errno_location
000000000000298b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002992         mov        rbx, rax
0000000000002995         je         loc_29b3

0000000000002997         cmp        dword [rax], 0x20
000000000000299a         jne        loc_29b3

                     loc_299c:
000000000000299c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000029a3         call       close_stream                                ; close_stream
00000000000029a8         test       eax, eax
00000000000029aa         jne        loc_29f2

00000000000029ac         add        rsp, 0x8
00000000000029b0         pop        rbx
00000000000029b1         pop        rbp
00000000000029b2         ret
                        ; endp

                     loc_29b3:
00000000000029b3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000029ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029bc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029c1         call       j_dcgettext                                 ; dcgettext
00000000000029c6         mov        rdi, qword [file_name]                      ; file_name
00000000000029cd         mov        rbp, rax
00000000000029d0         test       rdi, rdi
00000000000029d3         je         loc_29fd

00000000000029d5         call       quotearg_colon                              ; quotearg_colon
00000000000029da         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000029dc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000029e3         mov        rcx, rax
00000000000029e6         mov        r8, rbp
00000000000029e9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000029eb         xor        eax, eax
00000000000029ed         call       j_error                                     ; error

                     loc_29f2:
00000000000029f2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000029f8         call       j__exit                                     ; _exit
                        ; endp

                     loc_29fd:
00000000000029fd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000029ff         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
0000000000002a06         mov        rcx, rax
0000000000002a09         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002a0b         xor        eax, eax
0000000000002a0d         call       j_error                                     ; error
0000000000002a12         jmp        loc_29f2
0000000000002a14         align      32                                          ; End of unwind block (FDE at 0x67d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002a20         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x6804), CODE XREF=main+799
                        ; endp
0000000000002a25         align      16                                          ; End of unwind block (FDE at 0x6804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002a30         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6818)
0000000000002a33         je         loc_2a50

0000000000002a35         push       rbx
0000000000002a36         mov        ebx, esi
0000000000002a38         call       j_fileno                                    ; fileno
0000000000002a3d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000002a3f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002a41         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002a43         pop        rbx
0000000000002a44         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002a46         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000002a4b         align      16

                     loc_2a50:
0000000000002a50         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002a52         align      32                                          ; End of unwind block (FDE at 0x6818)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_write:
0000000000002a60         push       r13                                         ; Begin of unwind block (FDE at 0x6834), CODE XREF=main+1515, main+1843, main+2529, main+2561, main+2705
0000000000002a62         push       r12
0000000000002a64         push       rbp
0000000000002a65         push       rbx
0000000000002a66         sub        rsp, 0x8
0000000000002a6a         test       rdx, rdx
0000000000002a6d         je         loc_2ad1

0000000000002a6f         mov        r13d, edi
0000000000002a72         mov        rbp, rsi
0000000000002a75         mov        rbx, rdx
0000000000002a78         xor        r12d, r12d
0000000000002a7b         jmp        loc_2a90
0000000000002a7d         align      128

                     loc_2a80:
0000000000002a80         test       rax, rax                                    ; CODE XREF=full_write+66
0000000000002a83         je         loc_2ab8

0000000000002a85         add        r12, rax
0000000000002a88         add        rbp, rax
0000000000002a8b         sub        rbx, rax
0000000000002a8e         je         loc_2aa4

                     loc_2a90:
0000000000002a90         mov        rdx, rbx                                    ; CODE XREF=full_write+27
0000000000002a93         mov        rsi, rbp
0000000000002a96         mov        edi, r13d
0000000000002a99         call       safe_write                                  ; safe_write
0000000000002a9e         cmp        rax, 0xffffffffffffffff
0000000000002aa2         jne        loc_2a80

                     loc_2aa4:
0000000000002aa4         add        rsp, 0x8                                    ; CODE XREF=full_write+46, full_write+116
0000000000002aa8         mov        rax, r12
0000000000002aab         pop        rbx
0000000000002aac         pop        rbp
0000000000002aad         pop        r12
0000000000002aaf         pop        r13
0000000000002ab1         ret
                        ; endp
0000000000002ab2         align      8

                     loc_2ab8:
0000000000002ab8         call       j___errno_location                          ; __errno_location, CODE XREF=full_write+35
0000000000002abd         mov        dword [rax], 0x1c
0000000000002ac3         add        rsp, 0x8
0000000000002ac7         mov        rax, r12
0000000000002aca         pop        rbx
0000000000002acb         pop        rbp
0000000000002acc         pop        r12
0000000000002ace         pop        r13
0000000000002ad0         ret
                        ; endp

                     loc_2ad1:
0000000000002ad1         xor        r12d, r12d                                  ; CODE XREF=full_write+13
0000000000002ad4         jmp        loc_2aa4
0000000000002ad6         align      32                                          ; End of unwind block (FDE at 0x6834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002ae0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6884), CODE XREF=main+61
0000000000002ae3         push       rbx
0000000000002ae4         je         loc_2b5d

0000000000002ae6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002aeb         mov        rbx, rdi
0000000000002aee         call       j_strrchr                                   ; strrchr
0000000000002af3         test       rax, rax
0000000000002af6         je         loc_2b4d

0000000000002af8         lea        r8, qword [rax+1]
0000000000002afc         mov        rdx, r8
0000000000002aff         sub        rdx, rbx
0000000000002b02         cmp        rdx, 0x6
0000000000002b06         jle        loc_2b4d

0000000000002b08         lea        rsi, qword [rax-6]
0000000000002b0c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002b13         mov        ecx, 0x7
0000000000002b18         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b1a         seta       dl
0000000000002b1d         sbb        dl, 0x0
0000000000002b20         test       dl, dl
0000000000002b22         jne        loc_2b4d

0000000000002b24         lea        rdi, qword [aLibs+8]                        ; 0x5b88
0000000000002b2b         mov        ecx, 0x3
0000000000002b30         mov        rsi, r8
0000000000002b33         mov        rbx, r8
0000000000002b36         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b38         seta       dl
0000000000002b3b         sbb        dl, 0x0
0000000000002b3e         test       dl, dl
0000000000002b40         jne        loc_2b4d

0000000000002b42         lea        rbx, qword [rax+4]
0000000000002b46         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2b4d:
0000000000002b4d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002b54         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002b5b         pop        rbx
0000000000002b5c         ret
                        ; endp

                     loc_2b5d:
0000000000002b5d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002b64         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002b6b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002b70         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002b75         call       j_fwrite                                    ; fwrite
0000000000002b7a         call       j_abort                                     ; abort
                        ; endp
0000000000002b7f         align      128                                         ; End of unwind block (FDE at 0x6884)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002b80         push       rbp                                         ; Begin of unwind block (FDE at 0x68a4), CODE XREF=sub_33b0+2597, sub_33b0+2619
0000000000002b81         push       rbx
0000000000002b82         mov        rbp, rdi
0000000000002b85         mov        ebx, esi
0000000000002b87         sub        rsp, 0x8
0000000000002b8b         call       locale_charset                              ; locale_charset
0000000000002b90         movzx      edx, byte [rax]
0000000000002b93         and        edx, 0xffffffdf
0000000000002b96         cmp        dl, 0x55
0000000000002b99         je         loc_2c10

0000000000002b9b         cmp        dl, 0x47
0000000000002b9e         je         loc_2bc0

                     loc_2ba0:
0000000000002ba0         lea        rax, qword [aLibs+27]                       ; 0x5b9b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002ba7         lea        rdx, qword [aLibs+29]                       ; 0x5b9d
0000000000002bae         cmp        ebx, 0x9
0000000000002bb1         cmovne     rax, rdx
0000000000002bb5         add        rsp, 0x8
0000000000002bb9         pop        rbx
0000000000002bba         pop        rbp
0000000000002bbb         ret
                        ; endp
0000000000002bbc         align      64

                     loc_2bc0:
0000000000002bc0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002bc4         and        edx, 0xffffffdf
0000000000002bc7         cmp        dl, 0x42
0000000000002bca         jne        loc_2ba0

0000000000002bcc         cmp        byte [rax+2], 0x31
0000000000002bd0         jne        loc_2ba0

0000000000002bd2         cmp        byte [rax+3], 0x38
0000000000002bd6         jne        loc_2ba0

0000000000002bd8         cmp        byte [rax+4], 0x30
0000000000002bdc         jne        loc_2ba0

0000000000002bde         cmp        byte [rax+5], 0x33
0000000000002be2         jne        loc_2ba0

0000000000002be4         cmp        byte [rax+6], 0x30
0000000000002be8         jne        loc_2ba0

0000000000002bea         cmp        byte [rax+7], 0x0
0000000000002bee         jne        loc_2ba0

0000000000002bf0         cmp        byte [rbp], 0x60
0000000000002bf4         lea        rax, qword [aLibs+20]                       ; 0x5b94
0000000000002bfb         lea        rdx, qword [aLibs+24]                       ; 0x5b98
0000000000002c02         cmovne     rax, rdx
0000000000002c06         add        rsp, 0x8
0000000000002c0a         pop        rbx
0000000000002c0b         pop        rbp
0000000000002c0c         ret
                        ; endp
0000000000002c0d         align      16

                     loc_2c10:
0000000000002c10         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002c14         and        edx, 0xffffffdf
0000000000002c17         cmp        dl, 0x54
0000000000002c1a         jne        loc_2ba0

0000000000002c1c         movzx      edx, byte [rax+2]
0000000000002c20         and        edx, 0xffffffdf
0000000000002c23         cmp        dl, 0x46
0000000000002c26         jne        loc_2ba0

0000000000002c2c         cmp        byte [rax+3], 0x2d
0000000000002c30         jne        loc_2ba0

0000000000002c36         cmp        byte [rax+4], 0x38
0000000000002c3a         jne        loc_2ba0

0000000000002c40         cmp        byte [rax+5], 0x0
0000000000002c44         jne        loc_2ba0

0000000000002c4a         cmp        byte [rbp], 0x60
0000000000002c4e         lea        rax, qword [aLibs+12]                       ; 0x5b8c
0000000000002c55         lea        rdx, qword [aLibs+16]                       ; 0x5b90
0000000000002c5c         cmovne     rax, rdx
0000000000002c60         add        rsp, 0x8
0000000000002c64         pop        rbx
0000000000002c65         pop        rbp
0000000000002c66         ret
                        ; endp
0000000000002c67         align      16                                          ; End of unwind block (FDE at 0x68a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002c70         push       r15                                         ; Begin of unwind block (FDE at 0x68e8), CODE XREF=sub_33b0+1165, sub_33b0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002c72         push       r14
0000000000002c74         mov        r15d, r8d
0000000000002c77         push       r13
0000000000002c79         push       r12
0000000000002c7b         mov        r14, rdi
0000000000002c7e         push       rbp
0000000000002c7f         push       rbx
0000000000002c80         mov        ebx, r9d
0000000000002c83         mov        r13, rsi
0000000000002c86         mov        rbp, rcx
0000000000002c89         and        ebx, 0x2
0000000000002c8c         sub        rsp, 0xb8
0000000000002c93         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002c9b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002ca0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002ca5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002caa         mov        qword [rsp+0xe8+var_C8], rax
0000000000002caf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002cb7         mov        qword [rsp+0xe8+var_80], rax
0000000000002cbc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002cc4         mov        qword [rsp+0xe8+var_88], rax
0000000000002cc9         mov        rax, qword [fs:0x28]
0000000000002cd2         mov        qword [rsp+0xe8+var_40], rax
0000000000002cda         xor        eax, eax
0000000000002cdc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002ce1         cmp        r15d, 0xa
0000000000002ce5         mov        qword [rsp+0xe8+var_90], rax
0000000000002cea         ja         loc_3e9f

0000000000002cf0         lea        rcx, qword [switch_table_5c00]              ; switch_table_5c00
0000000000002cf7         mov        edx, r15d
0000000000002cfa         movsxd     rax, dword [rcx+rdx*4]
0000000000002cfe         add        rax, rcx
0000000000002d01         jmp        rax                                         ; switch statement using table at 0x5c00, with 11 cases, 0x2d03,0x38d4,0x3930,0x3985,0x39ca,0x3a04,0x3aaa,0x3ae4,0x3cd8

                     loc_2d03:
0000000000002d03         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_33b0+1318
0000000000002d08         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002d0d         xor        r12d, r12d
0000000000002d10         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002d19         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002d1e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2d23:
0000000000002d23         lea        rax, qword [aLibs+29]                       ; 0x5b9d, CODE XREF=sub_33b0+1876
0000000000002d2a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002d33         xor        r15d, r15d
0000000000002d36         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002d3e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2d43:
0000000000002d43         xor        r11d, r11d                                  ; CODE XREF=sub_33b0+180, sub_33b0+1400, sub_33b0+1488, sub_33b0+1557, sub_33b0+1615, sub_33b0+1781, sub_33b0+1839, sub_33b0+2408, sub_33b0+2485
0000000000002d46         mov        rax, rbp
0000000000002d49         mov        r8d, r12d
0000000000002d4c         mov        rbp, r11
0000000000002d4f         mov        r11, rax
0000000000002d52         nop        word [rax+rax]

                     loc_2d58:
0000000000002d58         cmp        r11, rbp                                    ; CODE XREF=sub_2e60+194
0000000000002d5b         setne      r12b
0000000000002d5f         cmp        r11, 0xffffffffffffffff
0000000000002d63         jne        loc_2d72

0000000000002d65         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002d6a         cmp        byte [rax+rbp], 0x0
0000000000002d6e         setne      r12b

                     loc_2d72:
0000000000002d72         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002d75         je         loc_33d0

0000000000002d7b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002d80         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002d85         lea        r9, qword [rdi+rbp]
0000000000002d89         setne      al
0000000000002d8c         and        al, byte [rsp+0xe8+var_DB]
0000000000002d90         mov        r10d, eax
0000000000002d93         je         loc_2e40

0000000000002d99         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002d9e         test       rax, rax
0000000000002da1         je         loc_31d0

0000000000002da7         cmp        r11, 0xffffffffffffffff
0000000000002dab         lea        rbx, qword [rbp+rax]
0000000000002db0         jne        loc_2de0

0000000000002db2         cmp        rax, 0x1
0000000000002db6         jbe        loc_2de0

0000000000002db8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002dbd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002dc2         mov        qword [rsp+0xe8+var_C0], r9
0000000000002dc7         call       j_strlen                                    ; strlen
0000000000002dcc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002dd2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002dd8         mov        r11, rax
0000000000002ddb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2de0:
0000000000002de0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002de3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002de8         ja         loc_33a0

0000000000002dee         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002df3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002df8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002dfb         mov        qword [rsp+0xe8+var_A8], r11
0000000000002e00         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002e05         mov        qword [rsp+0xe8+var_B8], r9
0000000000002e0a         call       j_memcmp                                    ; memcmp
0000000000002e0f         test       eax, eax
0000000000002e11         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002e16         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002e1c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002e21         jne        loc_33a0

0000000000002e27         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002e2c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002e32         jne        loc_3db5

0000000000002e38         nop        dword [rax+rax]

                     loc_2e40:
0000000000002e40         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3390+19
0000000000002e44         cmp        bl, 0x7e
0000000000002e47         ja         loc_3168

0000000000002e4d         lea        rcx, qword [switch_table_5c00+44]           ; 0x5c2c
0000000000002e54         movzx      edx, bl
0000000000002e57         movsxd     rax, dword [rcx+rdx*4]
0000000000002e5b         add        rax, rcx
0000000000002e5e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2e60:
0000000000002e60         xor        r10d, r10d
0000000000002e63         cmp        r11, 0x1
0000000000002e67         setne      al
0000000000002e6a         cmp        r11, 0xffffffffffffffff
0000000000002e6e         jne        loc_2e7c

0000000000002e70         mov        rax, qword [rsp+arg_8]
0000000000002e75         cmp        byte [rax+1], 0x0
0000000000002e79         setne      al

                     loc_2e7c:
0000000000002e7c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e60+14
0000000000002e81         sete       dl
0000000000002e84         test       al, al
0000000000002e86         je         loc_30d8

                     loc_2e8c:
0000000000002e8c         xor        r12d, r12d                                  ; CODE XREF=sub_30d0+11
0000000000002e8f         xor        eax, eax
0000000000002e91         nop        dword [rax]
                        ; endp

                     loc_2e98:
0000000000002e98         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3080+50, sub_3150+119
0000000000002e9d         jne        loc_2fb2

0000000000002ea3         test       dl, dl
0000000000002ea5         jne        loc_2fb2

                     loc_2eab:
0000000000002eab         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2f60+87
0000000000002eb0         test       rsi, rsi
0000000000002eb3         je         loc_2ec9

0000000000002eb5         mov        edx, ebx
0000000000002eb7         shr        dl, 0x5
0000000000002eba         movzx      edx, dl
0000000000002ebd         mov        edx, dword [rsi+rdx*4]
0000000000002ec0         bt         edx, ebx
0000000000002ec3         jb         loc_3013

                     loc_2ec9:
0000000000002ec9         test       r10b, r10b                                  ; CODE XREF=sub_2e60+83, sub_2f60+93
0000000000002ecc         jne        loc_3013

0000000000002ed2         xor        eax, 0x1
0000000000002ed5         add        rbp, 0x1
0000000000002ed9         and        eax, r8d

                     loc_2edc:
0000000000002edc         test       al, al                                      ; CODE XREF=sub_33b0+936
0000000000002ede         je         loc_2f00

0000000000002ee0         cmp        r13, r15
0000000000002ee3         jbe        loc_2eea

0000000000002ee5         mov        byte [r14+r15], 0x27

                     loc_2eea:
0000000000002eea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2e60+131
0000000000002eee         cmp        r13, rax
0000000000002ef1         jbe        loc_2ef9

0000000000002ef3         mov        byte [r14+r15+1], 0x27

                     loc_2ef9:
0000000000002ef9         add        r15, 0x2                                    ; CODE XREF=sub_2e60+145
0000000000002efd         xor        r8d, r8d

                     loc_2f00:
0000000000002f00         cmp        r15, r13                                    ; CODE XREF=sub_2e60+126, sub_2f60+275, sub_33b0+869
0000000000002f03         jae        loc_2f09

0000000000002f05         mov        byte [r14+r15], bl

                     loc_2f09:
0000000000002f09         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2e60+163
0000000000002f0e         add        r15, 0x1
0000000000002f12         mov        eax, 0x0
0000000000002f17         test       r12b, r12b
0000000000002f1a         cmove      edi, eax
0000000000002f1d         mov        byte [rsp+0xe8+var_DA], dil
0000000000002f22         jmp        loc_2d58
0000000000002f27         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f30:
0000000000002f30         xor        r10d, r10d
0000000000002f33         mov        eax, dword [rsp+arg_0]
0000000000002f37         cmp        eax, 0x2
0000000000002f3a         je         loc_34f8

0000000000002f40         cmp        eax, 0x5
0000000000002f43         je         loc_34b8

0000000000002f49         cmp        eax, 0x2
0000000000002f4c         mov        ebx, 0x3f
0000000000002f51         sete       dl
0000000000002f54         xor        r12d, r12d
0000000000002f57         xor        eax, eax
0000000000002f59         jmp        sub_2e60+56
                        ; endp
0000000000002f5e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f60:
0000000000002f60         xor        r10d, r10d
0000000000002f63         cmp        dword [rsp+arg_0], 0x2
0000000000002f68         je         loc_3470

0000000000002f6e         mov        byte [rsp+arg_74], r12b
0000000000002f73         xor        edx, edx
0000000000002f75         xor        eax, eax
0000000000002f77         mov        ebx, 0x27
0000000000002f7c         jmp        sub_2e60+56
                        ; endp
0000000000002f81         nop        dword [rax]
0000000000002f88         mov        edx, 0x9
0000000000002f8d         mov        ebx, 0x74

                     loc_2f92:
0000000000002f92         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3120+10, sub_3210+37, sub_3350+53
0000000000002f97         sete       al
0000000000002f9a         and        al, byte [rsp+arg_7]
0000000000002f9e         jne        sub_30d0+30

0000000000002fa4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2f60+114
0000000000002fa9         jne        loc_3010

                     loc_2fab:
0000000000002fab         mov        ebx, edx                                    ; CODE XREF=sub_3080+18
0000000000002fad         xor        r12d, r12d
0000000000002fb0         xor        eax, eax
                        ; endp

                     loc_2fb2:
0000000000002fb2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2e60+61, sub_2e60+69
0000000000002fb7         jne        loc_2eab

0000000000002fbd         jmp        loc_2ec9
0000000000002fc2         nop        word [rax+rax]
0000000000002fc8         mov        edx, 0x8
0000000000002fcd         mov        ebx, 0x62
0000000000002fd2         jmp        sub_2f60+68
0000000000002fd4         nop        dword [rax]
0000000000002fd8         cmp        dword [rsp+8], 0x2
0000000000002fdd         je         sub_33b0                                    ; sub_33b0
0000000000002fe3         cmp        byte [rsp+0xd], 0x0
0000000000002fe8         je         sub_31f0+16

                     loc_2fee:
0000000000002fee         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31f0+8
0000000000002ff3         je         loc_3200

0000000000002ff9         cmp        qword [rsp+arg_10], 0x0
0000000000002fff         jne        loc_33bb

0000000000003005         mov        ebx, 0x5c
000000000000300a         nop        word [rax+rax]
                        ; endp

                     loc_3010:
0000000000003010         xor        r12d, r12d                                  ; CODE XREF=sub_2f60+73, sub_3350+29
                        ; endp

                     loc_3013:
0000000000003013         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2e60+99, sub_2e60+108
0000000000003018         sete       dl
000000000000301b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003020         mov        eax, edx
0000000000003022         jne        loc_3878

0000000000003028         mov        eax, r8d
000000000000302b         xor        eax, 0x1
000000000000302e         and        al, dl
0000000000003030         je         loc_3061

0000000000003032         cmp        r13, r15
0000000000003035         jbe        loc_303c

0000000000003037         mov        byte [r14+r15], 0x27

                     loc_303c:
000000000000303c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2f60+213
0000000000003040         cmp        r13, rdx
0000000000003043         jbe        loc_304b

0000000000003045         mov        byte [r14+r15+1], 0x24

                     loc_304b:
000000000000304b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2f60+227
000000000000304f         cmp        r13, rdx
0000000000003052         jbe        loc_305a

0000000000003054         mov        byte [r14+r15+2], 0x27

                     loc_305a:
000000000000305a         add        r15, 0x3                                    ; CODE XREF=sub_2f60+242
000000000000305e         mov        r8d, eax

                     loc_3061:
0000000000003061         cmp        r13, r15                                    ; CODE XREF=sub_2f60+208
0000000000003064         jbe        loc_306b

0000000000003066         mov        byte [r14+r15], 0x5c

                     loc_306b:
000000000000306b         add        r15, 0x1                                    ; CODE XREF=sub_2f60+260
000000000000306f         add        rbp, 0x1
0000000000003073         jmp        loc_2f00
0000000000003078         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3080:
0000000000003080         cmp        byte [rsp+arg_5], 0x0
0000000000003085         jne        loc_3253

000000000000308b         xor        edx, edx
000000000000308d         test       byte [rsp+arg_70], 0x1
0000000000003092         je         loc_2fab

0000000000003098         add        rbp, 0x1
000000000000309c         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000030a1         nop        dword [rax]
00000000000030a8         cmp        dword [rsp+8], 0x2
00000000000030ad         sete       dl
00000000000030b0         xor        eax, eax
00000000000030b2         jmp        sub_2e60+56
00000000000030b7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30c0:
00000000000030c0         mov        edx, 0x7
00000000000030c5         mov        ebx, 0x61
00000000000030ca         jmp        sub_2f60+68
                        ; endp
00000000000030cf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30d0:
00000000000030d0         cmp        dword [rsp+8], 0x2
00000000000030d5         sete       dl
                        ; endp

                     loc_30d8:
00000000000030d8         test       rbp, rbp                                    ; CODE XREF=sub_2e60+38, sub_32f0+35
00000000000030db         jne        loc_2e8c

00000000000030e1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3320+43
00000000000030e6         and        al, dl
00000000000030e8         je         sub_2e60+56

00000000000030ee         mov        rbp, r11
00000000000030f1         mov        dword [rsp+arg_0], 0x2
00000000000030f9         jmp        sub_33b0+1097
                        ; endp
00000000000030fe         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3100:
0000000000003100         cmp        dword [rsp+arg_0], 0x2
0000000000003105         sete       dl
0000000000003108         xor        r12d, r12d
000000000000310b         jmp        sub_30d0+17
                        ; endp
000000000000310d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3110:
0000000000003110         cmp        dword [rsp+arg_0], 0x2
0000000000003115         mov        ebx, 0x20
000000000000311a         sete       dl
000000000000311d         jmp        sub_30d0+17
                        ; endp
000000000000311f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3120:
0000000000003120         mov        edx, 0xd
0000000000003125         mov        ebx, 0x72
000000000000312a         jmp        loc_2f92
000000000000312f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3130:
0000000000003130         mov        edx, 0xc
0000000000003135         mov        ebx, 0x66
000000000000313a         jmp        sub_2f60+68
                        ; endp
000000000000313f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3140:
0000000000003140         mov        edx, 0xb
0000000000003145         mov        ebx, 0x76
000000000000314a         jmp        sub_2f60+68
                        ; endp
000000000000314f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3150:
0000000000003150         mov        edx, 0xa
0000000000003155         mov        ebx, 0x6e
000000000000315a         jmp        sub_2f60+50
                        ; endp
000000000000315f         align      32

                     loc_3160:
0000000000003160         xor        r10d, r10d                                  ; CODE XREF=sub_3150+135
0000000000003163         nop        dword [rax+rax]

                     loc_3168:
0000000000003168         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000316e         jne        loc_3518

0000000000003174         mov        qword [rsp+0xe8+var_B0], r11
0000000000003179         mov        byte [rsp+0xe8+var_B8], r8b
000000000000317e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003183         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003188         mov        rcx, qword [rax]
000000000000318b         movzx      edx, bl
000000000000318e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003194         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000319a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000319f         mov        edi, 0x1
00000000000031a4         movzx      eax, word [rcx+rdx*2]
00000000000031a8         and        ax, 0x4000
00000000000031ac         setne      r12b
00000000000031b0         sete       al
00000000000031b3         and        al, byte [rsp+0xe8+var_DB]

                     loc_31b7:
00000000000031b7         test       al, al                                      ; CODE XREF=sub_33b0+2221
00000000000031b9         jne        loc_3b51

00000000000031bf         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000031c4         sete       dl
00000000000031c7         jmp        loc_2e98
00000000000031cc         align      16

                     loc_31d0:
00000000000031d0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000031d4         cmp        bl, 0x7e
00000000000031d7         ja         loc_3160

00000000000031d9         lea        rcx, qword [switch_table_5c00+552]          ; 0x5e28
00000000000031e0         movzx      edx, bl
00000000000031e3         movsxd     rax, dword [rcx+rdx*4]
00000000000031e7         add        rax, rcx
00000000000031ea         jmp        rax
                        ; endp
00000000000031ec         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_31f0:
00000000000031f0         xor        r10d, r10d
00000000000031f3         cmp        byte [rsp+arg_5], 0x0
00000000000031f8         jne        loc_2fee

00000000000031fe         nop

                     loc_3200:
0000000000003200         mov        edx, 0x5c                                   ; CODE XREF=sub_2f60+136, sub_2f60+147
0000000000003205         mov        ebx, 0x5c
000000000000320a         jmp        sub_2f60+68
                        ; endp
000000000000320f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3210:
0000000000003210         mov        edx, 0xc
0000000000003215         xor        r10d, r10d
0000000000003218         mov        ebx, 0x66
000000000000321d         jmp        sub_2f60+68
                        ; endp
0000000000003222         nop        word [rax+rax]
0000000000003228         mov        edx, 0xa
000000000000322d         xor        r10d, r10d
0000000000003230         mov        ebx, 0x6e
0000000000003235         jmp        sub_2f60+50
000000000000323a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3240:
0000000000003240         mov        ebx, 0x61
0000000000003245         jmp        sub_2f60+176
                        ; endp
000000000000324a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3250:
0000000000003250         xor        r10d, r10d
                        ; endp

                     loc_3253:
0000000000003253         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3080+5
0000000000003258         sete       dl
000000000000325b         cmp        byte [rsp+arg_7], 0x0
0000000000003260         jne        loc_3dfa

0000000000003266         mov        eax, r8d
0000000000003269         mov        rcx, r15
000000000000326c         xor        eax, 0x1
000000000000326f         and        al, dl
0000000000003271         je         loc_32a0

0000000000003273         cmp        r13, r15
0000000000003276         jbe        loc_327d

0000000000003278         mov        byte [r14+r15], 0x27

                     loc_327d:
000000000000327d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3250+38
0000000000003281         cmp        r13, rcx
0000000000003284         jbe        loc_328c

0000000000003286         mov        byte [r14+r15+1], 0x24

                     loc_328c:
000000000000328c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3250+52
0000000000003290         cmp        r13, rcx
0000000000003293         ja         loc_38c9

                     loc_3299:
0000000000003299         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_33b0+1311
000000000000329d         mov        r8d, eax

                     loc_32a0:
00000000000032a0         cmp        r13, rcx                                    ; CODE XREF=sub_3250+33
00000000000032a3         jbe        loc_32aa

00000000000032a5         mov        byte [r14+rcx], 0x5c

                     loc_32aa:
00000000000032aa         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3250+83
00000000000032af         lea        r15, qword [rcx+1]
00000000000032b3         je         loc_38b9

00000000000032b9         lea        rax, qword [rbp+1]
00000000000032bd         cmp        rax, r11
00000000000032c0         jae        loc_32db

00000000000032c2         mov        rax, qword [rsp+arg_8]
00000000000032c7         movzx      eax, byte [rax+rbp+1]
00000000000032cc         mov        byte [rsp+arg_20], al
00000000000032d0         sub        eax, 0x30
00000000000032d3         cmp        al, 0x9
00000000000032d5         jbe        loc_3b09

                     loc_32db:
00000000000032db         mov        eax, r12d                                   ; CODE XREF=sub_3250+112
00000000000032de         mov        ebx, 0x30
00000000000032e3         xor        r12d, r12d
00000000000032e6         jmp        sub_2e60+56
                        ; endp
00000000000032eb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32f0:
00000000000032f0         cmp        dword [rsp+arg_0], 0x2
00000000000032f5         mov        r12d, r10d
00000000000032f8         sete       dl
00000000000032fb         xor        r10d, r10d
00000000000032fe         xor        eax, eax
0000000000003300         jmp        sub_2e60+56
                        ; endp
0000000000003305         nop        dword [rax]
0000000000003308         cmp        dword [rsp+8], 0x2
000000000000330d         sete       dl
0000000000003310         xor        r10d, r10d
0000000000003313         jmp        sub_30d0+8
0000000000003318         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3320:
0000000000003320         cmp        dword [rsp+8], 0x2
0000000000003325         sete       dl
0000000000003328         xor        r10d, r10d
000000000000332b         xor        r12d, r12d
000000000000332e         jmp        sub_30d0+17
                        ; endp
0000000000003333         nop        dword [rax+rax]
0000000000003338         cmp        dword [rsp+8], 0x2
000000000000333d         mov        r12d, r10d
0000000000003340         mov        ebx, 0x20
0000000000003345         sete       dl
0000000000003348         xor        r10d, r10d
000000000000334b         jmp        sub_30d0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3350:
0000000000003350         mov        edx, 0xd
0000000000003355         xor        r10d, r10d
0000000000003358         mov        ebx, 0x72
000000000000335d         jmp        sub_2f60+50
                        ; endp
0000000000003362         nop        word [rax+rax]
0000000000003368         mov        ebx, 0x76
000000000000336d         jmp        sub_2f60+176
0000000000003372         nop        word [rax+rax]
0000000000003378         mov        edx, 0x9
000000000000337d         xor        r10d, r10d
0000000000003380         mov        ebx, 0x74
0000000000003385         jmp        sub_2f60+50
000000000000338a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3390:
0000000000003390         mov        ebx, 0x62
0000000000003395         jmp        sub_2f60+176
                        ; endp
000000000000339a         nop        word [rax+rax]

                     loc_33a0:
00000000000033a0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000033a3         jmp        loc_2e40
00000000000033a8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_33b0:
00000000000033b0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f60+125
00000000000033b5         jne        sub_33b0+2416
                        ; endp

                     loc_33bb:
00000000000033bb         add        rbp, 0x1                                    ; CODE XREF=sub_2f60+159
00000000000033bf         mov        eax, r8d
00000000000033c2         xor        r12d, r12d
00000000000033c5         mov        ebx, 0x5c
00000000000033ca         jmp        sub_2e60+124
                        ; endp
00000000000033cf         align      16

                     loc_33d0:
00000000000033d0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000033d5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000033da         mov        r12d, r8d
00000000000033dd         mov        rbp, r11
00000000000033e0         sete       dl
00000000000033e3         mov        eax, ebx
00000000000033e5         test       r15, r15
00000000000033e8         sete       cl
00000000000033eb         and        eax, edx
00000000000033ed         and        al, cl
00000000000033ef         jne        loc_3e56

00000000000033f5         mov        eax, ebx
00000000000033f7         xor        eax, 0x1
00000000000033fa         and        dl, al
00000000000033fc         je         loc_3d6c

0000000000003402         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003407         je         loc_3d6a

000000000000340d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003412         jne        loc_3e0d

0000000000003418         test       r13, r13
000000000000341b         sete       al
000000000000341e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003424         setne      dl
0000000000003427         and        al, dl
0000000000003429         je         loc_3e4c

000000000000342f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3434:
0000000000003434         lea        rbx, qword [aLibs+29]                       ; 0x5b9d, CODE XREF=sub_33b0+2781
000000000000343b         mov        byte [r14], 0x27
000000000000343f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003447         mov        r15d, 0x1
000000000000344d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003456         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000345b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003460         mov        byte [rsp+0xe8+var_6C], al
0000000000003464         jmp        loc_2d43
0000000000003469         align      16

                     loc_3470:
0000000000003470         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f60+8
0000000000003475         jne        sub_33b0+2416

000000000000347b         test       r13, r13
000000000000347e         je         loc_3880

0000000000003484         xor        edx, edx
0000000000003486         cmp        qword [rsp+arg_48], 0x0
000000000000348c         jne        loc_3880

                     loc_3492:
0000000000003492         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_33b0+1284, sub_33b0+2794
0000000000003497         add        r15, 0x3
000000000000349b         xor        eax, eax
000000000000349d         mov        byte [rsp+arg_74], r12b
00000000000034a2         xor        r8d, r8d
00000000000034a5         mov        r13, rdx
00000000000034a8         mov        ebx, 0x27
00000000000034ad         jmp        sub_2e60+105
                        ; endp
00000000000034b2         align      8

                     loc_34b8:
00000000000034b8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2f30+19
00000000000034bd         je         loc_34e0

00000000000034bf         lea        rcx, qword [rbp+2]
00000000000034c3         cmp        rcx, r11
00000000000034c6         jae        loc_34e0

00000000000034c8         mov        rax, qword [rsp+arg_8]
00000000000034cd         cmp        byte [rax+rbp+1], 0x3f
00000000000034d2         je         loc_3c62

00000000000034d8         nop        dword [rax+rax]

                     loc_34e0:
00000000000034e0         xor        edx, edx                                    ; CODE XREF=sub_33b0+269, sub_33b0+278, sub_33b0+2233, sub_33b0+2253
00000000000034e2         xor        r12d, r12d
00000000000034e5         xor        eax, eax
00000000000034e7         mov        ebx, 0x3f
00000000000034ec         jmp        sub_2e60+56
                        ; endp
00000000000034f1         align      8

                     loc_34f8:
00000000000034f8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f30+10
00000000000034fd         jne        loc_3d20

0000000000003503         xor        r12d, r12d
0000000000003506         xor        eax, eax
0000000000003508         mov        ebx, 0x3f
000000000000350d         jmp        sub_2e60+105
                        ; endp
0000000000003512         align      8

                     loc_3518:
0000000000003518         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3150+30
0000000000003520         cmp        r11, 0xffffffffffffffff
0000000000003524         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003530         mov        qword [rsp+0xe8+var_C0], rax
0000000000003535         jne        loc_3564

0000000000003537         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000353c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003541         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003546         mov        qword [rsp+0xe8+var_B8], r9
000000000000354b         call       j_strlen                                    ; strlen
0000000000003550         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003556         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000355c         mov        r11, rax
000000000000355f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3564:
0000000000003564         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_33b0+389
000000000000356c         xor        ecx, ecx
000000000000356e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003572         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003577         mov        rbx, rcx
000000000000357a         mov        qword [rsp+0xe8+var_60], r9
0000000000003582         mov        qword [rsp+0xe8+var_B0], rax
0000000000003587         mov        byte [rsp+0xe8+var_69], r10b
000000000000358c         mov        qword [rsp+0xe8+var_68], r15
0000000000003594         mov        qword [rsp+0xe8+var_A8], r14
0000000000003599         mov        qword [rsp+0xe8+var_78], r13
000000000000359e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_35a3:
00000000000035a3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_33b0+623
00000000000035a8         lea        r14, qword [rbp+rbx]
00000000000035ad         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000035b2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000035b7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000035bc         lea        r13, qword [rax+r14]
00000000000035c0         sub        rdx, r14
00000000000035c3         mov        rsi, r13
00000000000035c6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000035cb         test       rax, rax
00000000000035ce         mov        r15, rax
00000000000035d1         je         loc_3621

00000000000035d3         cmp        rax, 0xffffffffffffffff
00000000000035d7         je         loc_3bf5

00000000000035dd         cmp        rax, 0xfffffffffffffffe
00000000000035e1         je         loc_3b81

00000000000035e7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000035ec         sete       al
00000000000035ef         and        al, byte [rsp+0xe8+var_D9]
00000000000035f3         jne        loc_3790

                     loc_35f9:
00000000000035f9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_33b0+996, sub_33b0+1031
0000000000003600         call       j_iswprint                                  ; iswprint
0000000000003605         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000360a         test       eax, eax
000000000000360c         mov        eax, 0x0
0000000000003611         cmove      r12d, eax
0000000000003615         add        rbx, r15
0000000000003618         call       j_mbsinit                                   ; mbsinit
000000000000361d         test       eax, eax
000000000000361f         je         loc_35a3

                     loc_3621:
0000000000003621         mov        edx, r12d                                   ; CODE XREF=sub_33b0+545
0000000000003624         mov        rdi, rbx
0000000000003627         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000362d         xor        edx, 0x1
0000000000003630         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003635         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000363b         and        dl, byte [rsp+0xe8+var_DB]
000000000000363f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003647         mov        r14, qword [rsp+0xe8+var_A8]
000000000000364c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003651         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3656:
0000000000003656         cmp        rdi, 0x1                                    ; CODE XREF=sub_33b0+2112, sub_33b0+2168
000000000000365a         jbe        loc_3c5b

                     loc_3660:
0000000000003660         mov        rcx, rdi                                    ; CODE XREF=sub_33b0+1961
0000000000003663         xor        esi, esi
0000000000003665         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000366b         add        rcx, rbp
000000000000366e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003673         jmp        loc_372e
0000000000003678         align      128

                     loc_3680:
0000000000003680         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_33b0+896
0000000000003685         sete       al
0000000000003688         test       r9b, r9b
000000000000368b         jne        loc_3b40

0000000000003691         mov        esi, r8d
0000000000003694         xor        esi, 0x1
0000000000003697         and        al, sil
000000000000369a         je         loc_36cb

000000000000369c         cmp        r13, r15
000000000000369f         jbe        loc_36a6

00000000000036a1         mov        byte [r14+r15], 0x27

                     loc_36a6:
00000000000036a6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_33b0+751
00000000000036aa         cmp        r13, rsi
00000000000036ad         jbe        loc_36b5

00000000000036af         mov        byte [r14+r15+1], 0x24

                     loc_36b5:
00000000000036b5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_33b0+765
00000000000036b9         cmp        r13, rsi
00000000000036bc         jbe        loc_36c4

00000000000036be         mov        byte [r14+r15+2], 0x27

                     loc_36c4:
00000000000036c4         add        r15, 0x3                                    ; CODE XREF=sub_33b0+780
00000000000036c8         mov        r8d, eax

                     loc_36cb:
00000000000036cb         cmp        r13, r15                                    ; CODE XREF=sub_33b0+746
00000000000036ce         jbe        loc_36d5

00000000000036d0         mov        byte [r14+r15], 0x5c

                     loc_36d5:
00000000000036d5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33b0+798
00000000000036d9         cmp        r13, rax
00000000000036dc         jbe        loc_36eb

00000000000036de         mov        eax, ebx
00000000000036e0         shr        al, 0x6
00000000000036e3         add        eax, 0x30
00000000000036e6         mov        byte [r14+r15+1], al

                     loc_36eb:
00000000000036eb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33b0+812
00000000000036ef         cmp        r13, rax
00000000000036f2         jbe        loc_3704

00000000000036f4         mov        eax, ebx
00000000000036f6         shr        al, 0x3
00000000000036f9         and        eax, 0x7
00000000000036fc         add        eax, 0x30
00000000000036ff         mov        byte [r14+r15+2], al

                     loc_3704:
0000000000003704         and        ebx, 0x7                                    ; CODE XREF=sub_33b0+834
0000000000003707         add        rbp, 0x1
000000000000370b         add        r15, 0x3
000000000000370f         add        ebx, 0x30
0000000000003712         cmp        rbp, rcx
0000000000003715         jae        loc_2f00

000000000000371b         mov        esi, edx

                     loc_371d:
000000000000371d         cmp        r13, r15                                    ; CODE XREF=sub_33b0+985, sub_33b0+1969
0000000000003720         jbe        loc_3726

0000000000003722         mov        byte [r14+r15], bl

                     loc_3726:
0000000000003726         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_33b0+880
000000000000372a         add        r15, 0x1

                     loc_372e:
000000000000372e         test       dl, dl                                      ; CODE XREF=sub_33b0+707
0000000000003730         jne        loc_3680

0000000000003736         mov        eax, esi
0000000000003738         xor        eax, 0x1
000000000000373b         and        eax, r8d
000000000000373e         test       r10b, r10b
0000000000003741         je         loc_3751

0000000000003743         cmp        r13, r15
0000000000003746         jbe        loc_374d

0000000000003748         mov        byte [r14+r15], 0x5c

                     loc_374d:
000000000000374d         add        r15, 0x1                                    ; CODE XREF=sub_33b0+918

                     loc_3751:
0000000000003751         add        rbp, 0x1                                    ; CODE XREF=sub_33b0+913
0000000000003755         cmp        rbp, rcx
0000000000003758         jae        loc_2edc

000000000000375e         test       al, al
0000000000003760         je         loc_3b5e

0000000000003766         cmp        r13, r15
0000000000003769         jbe        loc_3770

000000000000376b         mov        byte [r14+r15], 0x27

                     loc_3770:
0000000000003770         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33b0+953
0000000000003774         cmp        r13, rax
0000000000003777         jbe        loc_377f

0000000000003779         mov        byte [r14+r15+1], 0x27

                     loc_377f:
000000000000377f         add        r15, 0x2                                    ; CODE XREF=sub_33b0+967
0000000000003783         xor        r10d, r10d
0000000000003786         xor        r8d, r8d
0000000000003789         jmp        loc_371d
000000000000378b         align      16

                     loc_3790:
0000000000003790         cmp        r15, 0x1                                    ; CODE XREF=sub_33b0+579
0000000000003794         je         loc_35f9

000000000000379a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000379f         lea        rcx, qword [rdi+r15]
00000000000037a3         lea        rdx, qword [rdi+r14+1]
00000000000037a8         lea        r8, qword [rcx+r14]
00000000000037ac         jmp        loc_37bd
00000000000037ae         align      16

                     loc_37b0:
00000000000037b0         add        rdx, 0x1                                    ; CODE XREF=sub_33b0+1046, sub_33b0+1072
00000000000037b4         cmp        r8, rdx
00000000000037b7         je         loc_35f9

                     loc_37bd:
00000000000037bd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_33b0+1020
00000000000037c0         sub        ecx, 0x5b
00000000000037c3         cmp        cl, 0x21
00000000000037c6         ja         loc_37b0

00000000000037c8         mov        esi, 0x1
00000000000037cd         shl        rsi, cl
00000000000037d0         mov        rcx, rsi
00000000000037d3         movabs     rsi, 0x20000002b
00000000000037dd         test       rcx, rsi
00000000000037e0         je         loc_37b0

00000000000037e2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000037e7         mov        r13, qword [rsp+0xe8+var_78]
00000000000037ec         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000037f1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_37f9:
00000000000037f9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_33b0+1227, sub_33b0+1948, sub_33b0+2585, sub_33b0+2734
00000000000037fe         je         loc_3810

0000000000003800         test       al, al
0000000000003802         mov        eax, 0x4
0000000000003807         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000380c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3810:
0000000000003810         sub        rsp, 0x8                                    ; CODE XREF=sub_33b0+1102
0000000000003814         mov        rcx, rbp
0000000000003817         mov        rsi, r13
000000000000381a         push       qword [rsp+0xf0+var_88]
000000000000381e         push       qword [rsp+0xf8+var_80]
0000000000003822         mov        rdi, r14
0000000000003825         push       0x0
0000000000003827         mov        r9d, dword [rsp+0x108+var_70]
000000000000382f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003834         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003839         and        r9d, 0xfffffffd
000000000000383d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003842         add        rsp, 0x20
0000000000003846         mov        r15, rax

                     loc_3849:
0000000000003849         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_33b0+2549, sub_33b0+2560, sub_33b0+2711
0000000000003851         xor        rbx, qword [fs:0x28]
000000000000385a         mov        rax, r15
000000000000385d         jne        loc_3e63

0000000000003863         add        rsp, 0xb8
000000000000386a         pop        rbx
000000000000386b         pop        rbp
000000000000386c         pop        r12
000000000000386e         pop        r13
0000000000003870         pop        r14
0000000000003872         pop        r15
0000000000003874         ret
                        ; endp
0000000000003875         align      8

                     loc_3878:
0000000000003878         mov        rbp, r11                                    ; CODE XREF=sub_2f60+194
000000000000387b         jmp        loc_37f9

                     loc_3880:
0000000000003880         cmp        r13, r15                                    ; CODE XREF=sub_33b0+206, sub_33b0+220
0000000000003883         jbe        loc_388a

0000000000003885         mov        byte [r14+r15], 0x27

                     loc_388a:
000000000000388a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33b0+1235
000000000000388e         cmp        r13, rax
0000000000003891         jbe        loc_3899

0000000000003893         mov        byte [r14+r15+1], 0x5c

                     loc_3899:
0000000000003899         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33b0+1249
000000000000389d         cmp        r13, rax
00000000000038a0         jbe        loc_3e92

00000000000038a6         mov        rdx, r13
00000000000038a9         mov        byte [r14+r15+2], 0x27
00000000000038af         mov        r13, qword [rsp+arg_48]
00000000000038b4         jmp        loc_3492

                     loc_38b9:
00000000000038b9         mov        eax, r12d                                   ; CODE XREF=sub_3250+99
00000000000038bc         mov        ebx, 0x30
00000000000038c1         xor        r12d, r12d
00000000000038c4         jmp        sub_2e60+105
                        ; endp

                     loc_38c9:
00000000000038c9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3250+67
00000000000038cf         jmp        loc_3299

                     loc_38d4:
00000000000038d4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000038d6         jne        loc_2d03

00000000000038dc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_38e1:
00000000000038e1         test       r13, r13                                    ; CODE XREF=sub_33b0+2749
00000000000038e4         jne        loc_3e7a

00000000000038ea         lea        rax, qword [aLibs+29]                       ; 0x5b9d
00000000000038f1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038fa         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038ff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003904         xor        r12d, r12d
0000000000003907         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000390c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003915         mov        qword [rsp+0xe8+var_A0], rax
000000000000391a         mov        r15d, 0x1
0000000000003920         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003928         jmp        loc_2d43
000000000000392d         align      16

                     loc_3930:
0000000000003930         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003932         jne        loc_3d2d

0000000000003938         test       r13, r13
000000000000393b         je         loc_3b66

0000000000003941         mov        byte [r14], 0x22
0000000000003945         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000394a         xor        r12d, r12d
000000000000394d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003952         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_395b:
000000000000395b         lea        rax, qword [aLibs+27]                       ; 0x5b9b, CODE XREF=sub_33b0+1996
0000000000003962         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003967         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000396c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003975         mov        r15d, 0x1
000000000000397b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003980         jmp        loc_2d43

                     loc_3985:
0000000000003985         lea        rax, qword [aLibs+27]                       ; case 6, 0x5b9b, CODE XREF=quotearg_buffer_restyled+145
000000000000398c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003991         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003996         xor        r12d, r12d
0000000000003999         mov        qword [rsp+0xe8+var_98], 0x0
00000000000039a2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000039a7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000039ac         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000039b5         xor        r15d, r15d
00000000000039b8         mov        qword [rsp+0xe8+var_A0], rax
00000000000039bd         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000039c5         jmp        loc_2d43

                     loc_39ca:
00000000000039ca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000039cf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000039d4         xor        r12d, r12d
00000000000039d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000039e0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000039e5         xor        r15d, r15d
00000000000039e8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000039ed         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000039f6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000039ff         jmp        loc_2d43

                     loc_3a04:
0000000000003a04         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003a09         je         loc_3a61

0000000000003a0b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5b9f
0000000000003a12         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a14         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a19         call       j_dcgettext                                 ; dcgettext
0000000000003a1e         mov        rcx, rax
0000000000003a21         mov        qword [rsp+0xe8+var_80], rax
0000000000003a26         lea        rax, qword [aLibs+31]                       ; 0x5b9f
0000000000003a2d         cmp        rcx, rax
0000000000003a30         je         loc_3dce

                     loc_3a36:
0000000000003a36         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5b9d, CODE XREF=sub_33b0+2607
0000000000003a3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a44         call       j_dcgettext                                 ; dcgettext
0000000000003a49         mov        rcx, rax
0000000000003a4c         mov        qword [rsp+0xe8+var_88], rax
0000000000003a51         lea        rax, qword [aLibs+29]                       ; 0x5b9d
0000000000003a58         cmp        rcx, rax
0000000000003a5b         je         loc_3de4

                     loc_3a61:
0000000000003a61         xor        r15d, r15d                                  ; CODE XREF=sub_33b0+1625, sub_33b0+2629
0000000000003a64         test       ebx, ebx
0000000000003a66         je         loc_3c2d

                     loc_3a6c:
0000000000003a6c         test       ebx, ebx                                    ; CODE XREF=sub_33b0+2183, sub_33b0+2214
0000000000003a6e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003a73         setne      byte [rsp+0xe8+var_D9]
0000000000003a78         xor        r12d, r12d
0000000000003a7b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003a7e         call       j_strlen                                    ; strlen
0000000000003a83         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003a88         mov        qword [rsp+0xe8+var_D0], rax
0000000000003a8d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a92         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aa0         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003aa5         jmp        loc_2d43

                     loc_3aaa:
0000000000003aaa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003aaf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ab4         xor        r12d, r12d
0000000000003ab7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ac0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ac5         xor        r15d, r15d
0000000000003ac8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003acd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003ad6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003adf         jmp        loc_2d43

                     loc_3ae4:
0000000000003ae4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003ae9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003aee         xor        r12d, r12d
0000000000003af1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003afa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003aff         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b04         jmp        loc_2d23

                     loc_3b09:
0000000000003b09         cmp        r13, r15                                    ; CODE XREF=sub_3250+133
0000000000003b0c         jbe        loc_3b13

0000000000003b0e         mov        byte [r14+r15], 0x30

                     loc_3b13:
0000000000003b13         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_33b0+1884
0000000000003b17         cmp        r13, rax
0000000000003b1a         jbe        loc_3b22

0000000000003b1c         mov        byte [r14+rcx+2], 0x30

                     loc_3b22:
0000000000003b22         mov        eax, r12d                                   ; CODE XREF=sub_33b0+1898
0000000000003b25         lea        r15, qword [rcx+3]
0000000000003b29         xor        r12d, r12d
0000000000003b2c         mov        ebx, 0x30
0000000000003b31         jmp        sub_2e60+56
                        ; endp
0000000000003b36         align      64

                     loc_3b40:
0000000000003b40         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_33b0+731
0000000000003b45         mov        rbp, r11
0000000000003b48         mov        byte [rsp+0xe8+var_DB], bl
0000000000003b4c         jmp        loc_37f9

                     loc_3b51:
0000000000003b51         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3150+105
0000000000003b56         xor        r12d, r12d
0000000000003b59         jmp        loc_3660

                     loc_3b5e:
0000000000003b5e         xor        r10d, r10d                                  ; CODE XREF=sub_33b0+944
0000000000003b61         jmp        loc_371d

                     loc_3b66:
0000000000003b66         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_33b0+1419
0000000000003b6f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b74         xor        r12d, r12d
0000000000003b77         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b7c         jmp        loc_395b

                     loc_3b81:
0000000000003b81         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_33b0+561
0000000000003b86         mov        rsi, r14
0000000000003b89         mov        rcx, r13
0000000000003b8c         mov        rax, rbx
0000000000003b8f         mov        rdi, rbx
0000000000003b92         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003b98         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003b9d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003ba5         cmp        rsi, r11
0000000000003ba8         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003bae         mov        r15, qword [rsp+0xe8+var_68]
0000000000003bb6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003bbb         mov        r13, qword [rsp+0xe8+var_78]
0000000000003bc0         jae        loc_3be8

0000000000003bc2         cmp        byte [rcx], 0x0
0000000000003bc5         jne        loc_3bd7

0000000000003bc7         jmp        loc_3be8
0000000000003bc9         align      16

                     loc_3bd0:
0000000000003bd0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_33b0+2099
0000000000003bd5         je         loc_3be5

                     loc_3bd7:
0000000000003bd7         add        rax, 0x1                                    ; CODE XREF=sub_33b0+2069
0000000000003bdb         lea        rdx, qword [rbp+rax]
0000000000003be0         cmp        r11, rdx
0000000000003be3         ja         loc_3bd0

                     loc_3be5:
0000000000003be5         mov        rdi, rax                                    ; CODE XREF=sub_33b0+2085

                     loc_3be8:
0000000000003be8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_33b0+2064, sub_33b0+2071
0000000000003bed         xor        r12d, r12d
0000000000003bf0         jmp        loc_3656

                     loc_3bf5:
0000000000003bf5         mov        rdi, rbx                                    ; CODE XREF=sub_33b0+551
0000000000003bf8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003bfe         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003c03         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003c09         mov        r15, qword [rsp+0xe8+var_68]
0000000000003c11         xor        r12d, r12d
0000000000003c14         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003c19         mov        r13, qword [rsp+0xe8+var_78]
0000000000003c1e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003c23         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003c28         jmp        loc_3656

                     loc_3c2d:
0000000000003c2d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_33b0+1718
0000000000003c32         movzx      eax, byte [rdx]
0000000000003c35         test       al, al
0000000000003c37         je         loc_3a6c

0000000000003c3d         nop        dword [rax]

                     loc_3c40:
0000000000003c40         cmp        r13, r15                                    ; CODE XREF=sub_33b0+2212
0000000000003c43         jbe        loc_3c49

0000000000003c45         mov        byte [r14+r15], al

                     loc_3c49:
0000000000003c49         add        r15, 0x1                                    ; CODE XREF=sub_33b0+2195
0000000000003c4d         movzx      eax, byte [rdx+r15]
0000000000003c52         test       al, al
0000000000003c54         jne        loc_3c40

0000000000003c56         jmp        loc_3a6c

                     loc_3c5b:
0000000000003c5b         mov        eax, edx                                    ; CODE XREF=sub_33b0+682
0000000000003c5d         jmp        loc_31b7

                     loc_3c62:
0000000000003c62         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_33b0+290
0000000000003c66         cmp        bl, 0x3e
0000000000003c69         ja         loc_34e0

0000000000003c6f         movabs     rax, 0x7000a38200000000
0000000000003c79         bt         rax, rbx
0000000000003c7d         jae        loc_34e0

0000000000003c83         cmp        byte [rsp+arg_7], 0x0
0000000000003c88         jne        loc_3e72

0000000000003c8e         cmp        r13, r15
0000000000003c91         jbe        loc_3c98

0000000000003c93         mov        byte [r14+r15], 0x3f

                     loc_3c98:
0000000000003c98         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33b0+2273
0000000000003c9c         cmp        r13, rax
0000000000003c9f         jbe        loc_3ca7

0000000000003ca1         mov        byte [r14+r15+1], 0x22

                     loc_3ca7:
0000000000003ca7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33b0+2287
0000000000003cab         cmp        r13, rax
0000000000003cae         jbe        loc_3cb6

0000000000003cb0         mov        byte [r14+r15+2], 0x22

                     loc_3cb6:
0000000000003cb6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_33b0+2302
0000000000003cba         cmp        r13, rax
0000000000003cbd         jbe        loc_3cc5

0000000000003cbf         mov        byte [r14+r15+3], 0x3f

                     loc_3cc5:
0000000000003cc5         add        r15, 0x4                                    ; CODE XREF=sub_33b0+2317
0000000000003cc9         xor        edx, edx
0000000000003ccb         xor        r12d, r12d
0000000000003cce         xor        eax, eax
0000000000003cd0         mov        rbp, rcx
0000000000003cd3         jmp        sub_2e60+56
                        ; endp

                     loc_3cd8:
0000000000003cd8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003cda         je         loc_3e68

0000000000003ce0         lea        rax, qword [aLibs+29]                       ; 0x5b9d
0000000000003ce7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003cec         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cf1         xor        r12d, r12d
0000000000003cf4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cfd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d02         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003d07         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d10         xor        r15d, r15d
0000000000003d13         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d18         jmp        loc_2d43
0000000000003d1d         align      32

                     loc_3d20:
0000000000003d20         mov        rbp, r11                                    ; CODE XREF=sub_33b0+333
0000000000003d23         movzx      eax, byte [rsp+arg_7]
0000000000003d28         jmp        sub_33b0+1097
                        ; endp

                     loc_3d2d:
0000000000003d2d         lea        rax, qword [aLibs+27]                       ; 0x5b9b, CODE XREF=sub_33b0+1410
0000000000003d34         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d39         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d3e         xor        r12d, r12d
0000000000003d41         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d4a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d4f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d54         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d5d         xor        r15d, r15d
0000000000003d60         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d65         jmp        loc_2d43

                     loc_3d6a:
0000000000003d6a         mov        eax, edx                                    ; CODE XREF=sub_33b0+87

                     loc_3d6c:
0000000000003d6c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_33b0+76, sub_33b0+2721
0000000000003d71         test       rbx, rbx
0000000000003d74         je         loc_3da2

0000000000003d76         test       al, al
0000000000003d78         je         loc_3da2

0000000000003d7a         movzx      ecx, byte [rbx]
0000000000003d7d         mov        rax, rbx
0000000000003d80         test       cl, cl
0000000000003d82         je         loc_3da2

0000000000003d84         mov        rdx, r15
0000000000003d87         sub        rax, r15

                     loc_3d8a:
0000000000003d8a         cmp        r13, rdx                                    ; CODE XREF=sub_33b0+2541
0000000000003d8d         jbe        loc_3d93

0000000000003d8f         mov        byte [r14+rdx], cl

                     loc_3d93:
0000000000003d93         add        rdx, 0x1                                    ; CODE XREF=sub_33b0+2525
0000000000003d97         movzx      ecx, byte [rax+rdx]
0000000000003d9b         test       cl, cl
0000000000003d9d         jne        loc_3d8a

0000000000003d9f         mov        r15, rdx

                     loc_3da2:
0000000000003da2         cmp        r13, r15                                    ; CODE XREF=sub_33b0+2500, sub_33b0+2504, sub_33b0+2514
0000000000003da5         jbe        loc_3849

0000000000003dab         mov        byte [r14+r15], 0x0
0000000000003db0         jmp        loc_3849

                     loc_3db5:
0000000000003db5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003dba         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003dbf         mov        rbp, r11
0000000000003dc2         sete       al
0000000000003dc5         mov        byte [rsp+0xe8+var_DB], bl
0000000000003dc9         jmp        loc_37f9

                     loc_3dce:
0000000000003dce         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_33b0+1664
0000000000003dd2         mov        rdi, rcx
0000000000003dd5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003dda         mov        qword [rsp+0xe8+var_80], rax
0000000000003ddf         jmp        loc_3a36

                     loc_3de4:
0000000000003de4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_33b0+1707
0000000000003de8         mov        rdi, rcx
0000000000003deb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003df0         mov        qword [rsp+0xe8+var_88], rax
0000000000003df5         jmp        loc_3a61

                     loc_3dfa:
0000000000003dfa         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3250+16
0000000000003dff         mov        rbp, r11
0000000000003e02         mov        eax, edx
0000000000003e04         mov        byte [rsp+arg_5], bl
0000000000003e08         jmp        sub_33b0+1097
                        ; endp

                     loc_3e0d:
0000000000003e0d         sub        rsp, 0x8                                    ; CODE XREF=sub_33b0+98
0000000000003e11         mov        r8d, 0x5
0000000000003e17         mov        rcx, r11
0000000000003e1a         push       qword [rsp+0xf0+var_88]
0000000000003e1e         push       qword [rsp+0xf8+var_80]
0000000000003e22         mov        rdi, r14
0000000000003e25         push       qword [rsp+0x100+var_C8]
0000000000003e29         mov        r9d, dword [rsp+0x108+var_70]
0000000000003e31         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003e36         mov        rsi, qword [rsp+0x108+var_98]
0000000000003e3b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e40         add        rsp, 0x20
0000000000003e44         mov        r15, rax
0000000000003e47         jmp        loc_3849

                     loc_3e4c:
0000000000003e4c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_33b0+121
0000000000003e51         jmp        loc_3d6c

                     loc_3e56:
0000000000003e56         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_33b0+63
0000000000003e5e         jmp        loc_37f9

                     loc_3e63:
0000000000003e63         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_33b0+1197
                        ; endp

                     loc_3e68:
0000000000003e68         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_33b0+2346
0000000000003e6d         jmp        loc_38e1

                     loc_3e72:
0000000000003e72         mov        rbp, r11                                    ; CODE XREF=sub_33b0+2264
0000000000003e75         jmp        sub_33b0+1120
                        ; endp

                     loc_3e7a:
0000000000003e7a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_33b0+1332
0000000000003e7f         xor        eax, eax
0000000000003e81         xor        r12d, r12d
0000000000003e84         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e8d         jmp        loc_3434

                     loc_3e92:
0000000000003e92         mov        rdx, r13                                    ; CODE XREF=sub_33b0+1264
0000000000003e95         mov        r13, qword [rsp+arg_48]
0000000000003e9a         jmp        loc_3492

                     loc_3e9f:
0000000000003e9f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003ea4         align      16                                          ; End of unwind block (FDE at 0x68e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003eb0         push       r15                                         ; Begin of unwind block (FDE at 0x6960), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003eb2         push       r14
0000000000003eb4         movsxd     r15, edi
0000000000003eb7         push       r13
0000000000003eb9         push       r12
0000000000003ebb         mov        r14, rdx
0000000000003ebe         push       rbp
0000000000003ebf         push       rbx
0000000000003ec0         mov        rbp, rcx
0000000000003ec3         sub        rsp, 0x28
0000000000003ec7         mov        qword [rsp+0x58+var_50], rsi
0000000000003ecc         call       j___errno_location                          ; __errno_location
0000000000003ed1         mov        r13, rax
0000000000003ed4         mov        eax, dword [rax]
0000000000003ed6         test       r15d, r15d
0000000000003ed9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003ee0         mov        dword [rsp+0x58+var_40], eax
0000000000003ee4         js         loc_4051

0000000000003eea         cmp        dword [nslots], r15d                        ; nslots
0000000000003ef1         jg         loc_3f55

0000000000003ef3         cmp        r15d, 0x7fffffff
0000000000003efa         je         loc_4056

0000000000003f00         lea        r12d, dword [r15+1]
0000000000003f04         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003f0b         movsxd     rsi, r12d
0000000000003f0e         shl        rsi, 0x4
0000000000003f12         cmp        rbx, rax
0000000000003f15         je         loc_4030

0000000000003f1b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003f1e         call       xrealloc                                    ; xrealloc
0000000000003f23         mov        rbx, rax
0000000000003f26         mov        qword [slotvec], rax                        ; slotvec

                     loc_3f2d:
0000000000003f2d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003f34         mov        edx, r12d
0000000000003f37         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003f39         sub        edx, edi
0000000000003f3b         shl        rdi, 0x4
0000000000003f3f         movsxd     rdx, edx
0000000000003f42         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003f45         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003f49         call       j_memset                                    ; memset
0000000000003f4e         mov        dword [nslots], r12d                        ; nslots

                     loc_3f55:
0000000000003f55         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003f58         shl        r15, 0x4
0000000000003f5c         sub        rsp, 0x8
0000000000003f60         add        rbx, r15
0000000000003f63         lea        r15, qword [rbp+8]
0000000000003f67         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003f6b         mov        r11, qword [rbx]
0000000000003f6e         mov        r12, qword [rbx+8]
0000000000003f72         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003f75         or         eax, 0x1
0000000000003f78         mov        dword [rsp+0x60+var_3C], eax
0000000000003f7c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003f7f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003f82         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003f85         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003f87         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003f8a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003f8f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003f92         mov        qword [rsp+0x78+var_48], r11
0000000000003f97         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f9c         add        rsp, 0x20
0000000000003fa0         mov        r11, qword [rsp+0x58+var_48]
0000000000003fa5         cmp        r11, rax
0000000000003fa8         ja         loc_4011

0000000000003faa         lea        rsi, qword [rax+1]
0000000000003fae         lea        rax, qword [slot0]                          ; slot0
0000000000003fb5         cmp        r12, rax
0000000000003fb8         mov        qword [rbx], rsi
0000000000003fbb         je         loc_3fcf

0000000000003fbd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003fc0         mov        qword [rsp+0x58+var_48], rsi
0000000000003fc5         call       j_free                                      ; free
0000000000003fca         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3fcf:
0000000000003fcf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003fd2         mov        qword [rsp+0x58+var_48], rsi
0000000000003fd7         call       xmalloc                                     ; xmalloc
0000000000003fdc         sub        rsp, 0x8
0000000000003fe0         mov        qword [rbx+8], rax
0000000000003fe4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003fe8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003feb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003fee         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003ff1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003ff3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003ff8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003ffb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004000         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled, DATA XREF=sub_3150+88
0000000000004005         mov        r12, rax
0000000000004008         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000400d         add        rsp, 0x20

                     loc_4011:
0000000000004011         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004015         mov        dword [r13], eax
0000000000004019         add        rsp, 0x28
000000000000401d         mov        rax, r12
0000000000004020         pop        rbx
0000000000004021         pop        rbp
0000000000004022         pop        r12
0000000000004024         pop        r13
0000000000004026         pop        r14
0000000000004028         pop        r15
000000000000402a         ret
                        ; endp
000000000000402b         align      16

                     loc_4030:
0000000000004030         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004032         call       xrealloc                                    ; xrealloc
0000000000004037         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000403f         mov        rbx, rax
0000000000004042         mov        qword [slotvec], rax                        ; slotvec
0000000000004049         movups     xmmword [rax], xmm0
000000000000404c         jmp        loc_3f2d

                     loc_4051:
0000000000004051         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4056:
0000000000004056         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_405b:
000000000000405b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6960)
                     clone_quoting_options:
0000000000004060         push       r12                                         ; Begin of unwind block (FDE at 0x69cc)
0000000000004062         push       rbp
0000000000004063         push       rbx
0000000000004064         mov        rbx, rdi
0000000000004067         call       j___errno_location                          ; __errno_location
000000000000406c         mov        r12d, dword [rax]
000000000000406f         mov        rbp, rax
0000000000004072         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004079         test       rbx, rbx
000000000000407c         mov        esi, 0x38
0000000000004081         cmove      rbx, rax
0000000000004085         mov        rdi, rbx
0000000000004088         call       xmemdup                                     ; xmemdup
000000000000408d         mov        dword [rbp], r12d
0000000000004091         pop        rbx
0000000000004092         pop        rbp
0000000000004093         pop        r12
0000000000004095         ret
                        ; endp
0000000000004096         align      32                                          ; End of unwind block (FDE at 0x69cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000040a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x69f8), default_quoting_options
00000000000040a7         test       rdi, rdi
00000000000040aa         cmove      rdi, rax
00000000000040ae         mov        eax, dword [rdi]
00000000000040b0         ret
                        ; endp
00000000000040b1         align      64                                          ; End of unwind block (FDE at 0x69f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000040c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6a0c), default_quoting_options
00000000000040c7         test       rdi, rdi
00000000000040ca         cmove      rdi, rax
00000000000040ce         mov        dword [rdi], esi
00000000000040d0         ret
                        ; endp
00000000000040d1         align      32                                          ; End of unwind block (FDE at 0x6a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000040e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6a20), default_quoting_options
00000000000040e7         test       rdi, rdi
00000000000040ea         mov        ecx, esi
00000000000040ec         cmove      rdi, rax
00000000000040f0         mov        eax, esi
00000000000040f2         and        ecx, 0x1f
00000000000040f5         shr        al, 0x5
00000000000040f8         movzx      eax, al
00000000000040fb         lea        rdi, qword [rdi+rax*4+8]
0000000000004100         mov        esi, dword [rdi]
0000000000004102         mov        eax, esi
0000000000004104         shr        eax, cl
0000000000004106         xor        edx, eax
0000000000004108         and        eax, 0x1
000000000000410b         and        edx, 0x1
000000000000410e         shl        edx, cl
0000000000004110         xor        edx, esi
0000000000004112         mov        dword [rdi], edx
0000000000004114         ret
                        ; endp
0000000000004115         align      32                                          ; End of unwind block (FDE at 0x6a20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004120         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6a34), default_quoting_options
0000000000004127         test       rdi, rdi
000000000000412a         cmove      rdi, rax
000000000000412e         mov        eax, dword [rdi+4]
0000000000004131         mov        dword [rdi+4], esi
0000000000004134         ret
                        ; endp
0000000000004135         align      64                                          ; End of unwind block (FDE at 0x6a34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004140         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6a48), default_quoting_options
0000000000004147         test       rdi, rdi
000000000000414a         cmove      rdi, rax
000000000000414e         test       rsi, rsi
0000000000004151         mov        dword [rdi], 0xa
0000000000004157         je         loc_4167

0000000000004159         test       rdx, rdx
000000000000415c         je         loc_4167

000000000000415e         mov        qword [rdi+0x28], rsi
0000000000004162         mov        qword [rdi+0x30], rdx
0000000000004166         ret
                        ; endp

                     loc_4167:
0000000000004167         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000416b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004170         push       r15                                         ; End of unwind block (FDE at 0x6a48), Begin of unwind block (FDE at 0x6a5c)
0000000000004172         push       r14
0000000000004174         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000417b         push       r13
000000000000417d         push       r12
000000000000417f         mov        r13, rdi
0000000000004182         push       rbp
0000000000004183         push       rbx
0000000000004184         mov        rbx, r8
0000000000004187         mov        r14, rsi
000000000000418a         mov        r15, rdx
000000000000418d         sub        rsp, 0x18
0000000000004191         test       r8, r8
0000000000004194         cmove      rbx, rax
0000000000004198         mov        qword [rsp+0x48+var_40], rcx
000000000000419d         call       j___errno_location                          ; __errno_location
00000000000041a2         mov        r12d, dword [rax]
00000000000041a5         mov        rbp, rax
00000000000041a8         lea        rax, qword [rbx+8]
00000000000041ac         sub        rsp, 0x8
00000000000041b0         mov        r9d, dword [rbx+4]
00000000000041b4         push       qword [rbx+0x30]
00000000000041b7         mov        r8d, dword [rbx]
00000000000041ba         push       qword [rbx+0x28]
00000000000041bd         mov        rdx, r15
00000000000041c0         push       rax
00000000000041c1         mov        rcx, qword [rsp+0x68+var_40]
00000000000041c6         mov        rsi, r14
00000000000041c9         mov        rdi, r13
00000000000041cc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000041d1         mov        dword [rbp], r12d
00000000000041d5         add        rsp, 0x38
00000000000041d9         pop        rbx
00000000000041da         pop        rbp
00000000000041db         pop        r12
00000000000041dd         pop        r13
00000000000041df         pop        r14
00000000000041e1         pop        r15
00000000000041e3         ret
                        ; endp
00000000000041e4         align      16                                          ; End of unwind block (FDE at 0x6a5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000041f0         push       r15                                         ; Begin of unwind block (FDE at 0x6ab0), CODE XREF=quotearg_alloc+5
00000000000041f2         push       r14
00000000000041f4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000041fb         push       r13
00000000000041fd         push       r12
00000000000041ff         mov        r12, rdx
0000000000004202         push       rbp
0000000000004203         push       rbx
0000000000004204         mov        rbx, rcx
0000000000004207         mov        r14, rdi
000000000000420a         mov        r15, rsi
000000000000420d         sub        rsp, 0x38
0000000000004211         test       rcx, rcx
0000000000004214         cmove      rbx, rax
0000000000004218         xor        ebp, ebp
000000000000421a         call       j___errno_location                          ; __errno_location
000000000000421f         test       r12, r12
0000000000004222         mov        r13, rax
0000000000004225         mov        eax, dword [rax]
0000000000004227         sete       bpl
000000000000422b         or         ebp, dword [rbx+4]
000000000000422e         lea        r10, qword [rbx+8]
0000000000004232         sub        rsp, 0x8
0000000000004236         mov        r8d, dword [rbx]
0000000000004239         mov        rcx, r15
000000000000423c         mov        dword [rsp+0x70+var_5C], eax
0000000000004240         push       qword [rbx+0x30]
0000000000004243         mov        rdx, r14
0000000000004246         push       qword [rbx+0x28]
0000000000004249         push       r10
000000000000424b         xor        esi, esi
000000000000424d         mov        r9d, ebp
0000000000004250         xor        edi, edi
0000000000004252         mov        qword [rsp+0x88+var_48], r10
0000000000004257         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000425c         lea        rsi, qword [rax+1]
0000000000004260         mov        qword [rsp+0x88+var_40], rax
0000000000004265         add        rsp, 0x20
0000000000004269         mov        rdi, rsi
000000000000426c         mov        qword [rsp+0x68+var_50], rsi
0000000000004271         call       xmalloc                                     ; xmalloc
0000000000004276         mov        qword [rsp+0x68+var_58], rax
000000000000427b         sub        rsp, 0x8
000000000000427f         push       qword [rbx+0x30]
0000000000004282         push       qword [rbx+0x28]
0000000000004285         mov        r10, qword [rsp+0x80+var_48]
000000000000428a         mov        r9d, ebp
000000000000428d         mov        r8d, dword [rbx]
0000000000004290         mov        rcx, r15
0000000000004293         mov        rdx, r14
0000000000004296         mov        rdi, rax
0000000000004299         push       r10
000000000000429b         mov        rsi, qword [rsp+0x88+var_50]
00000000000042a0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000042a5         mov        eax, dword [rsp+0x88+var_5C]
00000000000042a9         add        rsp, 0x20
00000000000042ad         test       r12, r12
00000000000042b0         mov        dword [r13], eax
00000000000042b4         je         loc_42bf

00000000000042b6         mov        r11, qword [rsp+0x68+var_40]
00000000000042bb         mov        qword [r12], r11

                     loc_42bf:
00000000000042bf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000042c4         add        rsp, 0x38
00000000000042c8         pop        rbx
00000000000042c9         pop        rbp
00000000000042ca         pop        r12
00000000000042cc         pop        r13
00000000000042ce         pop        r14
00000000000042d0         pop        r15
00000000000042d2         ret
                        ; endp
00000000000042d3         align      32                                          ; End of unwind block (FDE at 0x6ab0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000042e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6b1c)
00000000000042e3         xor        edx, edx
00000000000042e5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000042ea         align      16                                          ; End of unwind block (FDE at 0x6b1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000042f0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6b30), nslots
00000000000042f6         push       r12
00000000000042f8         mov        r12, qword [slotvec]                        ; slotvec
00000000000042ff         push       rbp
0000000000004300         push       rbx
0000000000004301         cmp        eax, 0x1
0000000000004304         jle        loc_4331

0000000000004306         sub        eax, 0x2
0000000000004309         lea        rbx, qword [r12+0x18]
000000000000430e         shl        rax, 0x4
0000000000004312         lea        rbp, qword [r12+rax+0x28]
0000000000004317         nop        word [rax+rax]

                     loc_4320:
0000000000004320         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004323         add        rbx, 0x10
0000000000004327         call       j_free                                      ; free
000000000000432c         cmp        rbx, rbp
000000000000432f         jne        loc_4320

                     loc_4331:
0000000000004331         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004336         lea        rbx, qword [slot0]                          ; slot0
000000000000433d         cmp        rdi, rbx
0000000000004340         je         loc_4359

0000000000004342         call       j_free                                      ; free
0000000000004347         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004352         mov        qword [slotvec0+8], rbx                     ; 0x2080b8

                     loc_4359:
0000000000004359         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004360         cmp        r12, rbx
0000000000004363         je         loc_4374

0000000000004365         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004368         call       j_free                                      ; free
000000000000436d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4374:
0000000000004374         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004375         mov        dword [nslots], 0x1                         ; nslots
000000000000437f         pop        rbp
0000000000004380         pop        r12
0000000000004382         ret
                        ; endp
0000000000004383         align      16                                          ; End of unwind block (FDE at 0x6b30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004390         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b5c), default_quoting_options
0000000000004397         mov        rdx, 0xffffffffffffffff
000000000000439e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043a3         align      16                                          ; End of unwind block (FDE at 0x6b5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000043b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b70), default_quoting_options
00000000000043b7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043bc         align      64                                          ; End of unwind block (FDE at 0x6b70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000043c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b84), default_quoting_options
00000000000043c7         mov        rsi, rdi
00000000000043ca         mov        rdx, 0xffffffffffffffff
00000000000043d1         xor        edi, edi
00000000000043d3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043d8         align      32                                          ; End of unwind block (FDE at 0x6b84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000043e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b98), default_quoting_options
00000000000043e7         mov        rdx, rsi
00000000000043ea         mov        rsi, rdi
00000000000043ed         xor        edi, edi
00000000000043ef         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043f4         align      1024                                        ; End of unwind block (FDE at 0x6b98)

                     quotearg_n_style:
0000000000004400         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6bac), CODE XREF=quotearg_style+7
0000000000004404         mov        rax, rdx
0000000000004407         mov        rdx, qword [fs:0x28]
0000000000004410         mov        qword [rsp+0x48+var_10], rdx
0000000000004415         xor        edx, edx
0000000000004417         cmp        esi, 0xa
000000000000441a         je         loc_4484

000000000000441c         mov        dword [rsp+0x48+var_48], esi
000000000000441f         mov        rcx, rsp
0000000000004422         mov        rdx, 0xffffffffffffffff
0000000000004429         mov        rsi, rax
000000000000442c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004435         mov        qword [rsp+0x48+var_3C], 0x0
000000000000443e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004447         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004450         mov        qword [rsp+0x48+var_24], 0x0
0000000000004459         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004462         mov        dword [rsp+0x48+var_14], 0x0
000000000000446a         call       quotearg_n_options                          ; quotearg_n_options
000000000000446f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004474         xor        rcx, qword [fs:0x28]
000000000000447d         jne        loc_4489

000000000000447f         add        rsp, 0x48
0000000000004483         ret
                        ; endp

                     loc_4484:
0000000000004484         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4489:
0000000000004489         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000448e         align      16                                          ; End of unwind block (FDE at 0x6bac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004490         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6bc8), CODE XREF=quotearg_style_mem+10
0000000000004494         mov        rax, rdx
0000000000004497         mov        rdx, rcx
000000000000449a         mov        rcx, qword [fs:0x28]
00000000000044a3         mov        qword [rsp+0x48+var_10], rcx
00000000000044a8         xor        ecx, ecx
00000000000044aa         cmp        esi, 0xa
00000000000044ad         je         loc_4510

00000000000044af         mov        dword [rsp+0x48+var_48], esi
00000000000044b2         mov        rcx, rsp
00000000000044b5         mov        rsi, rax
00000000000044b8         mov        qword [rsp+0x48+var_44], 0x0
00000000000044c1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000044ca         mov        qword [rsp+0x48+var_34], 0x0
00000000000044d3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000044dc         mov        qword [rsp+0x48+var_24], 0x0
00000000000044e5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000044ee         mov        dword [rsp+0x48+var_14], 0x0
00000000000044f6         call       quotearg_n_options                          ; quotearg_n_options
00000000000044fb         mov        rdx, qword [rsp+0x48+var_10]
0000000000004500         xor        rdx, qword [fs:0x28]
0000000000004509         jne        loc_4515

000000000000450b         add        rsp, 0x48
000000000000450f         ret
                        ; endp

                     loc_4510:
0000000000004510         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4515:
0000000000004515         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000451a         align      32                                          ; End of unwind block (FDE at 0x6bc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_style:
0000000000004520         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6be4), CODE XREF=main+2895
0000000000004523         mov        esi, edi
0000000000004525         xor        edi, edi
0000000000004527         jmp        quotearg_n_style                            ; quotearg_n_style
000000000000452c         align      16                                          ; End of unwind block (FDE at 0x6be4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004530         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6bf8)
0000000000004533         mov        rdx, rsi
0000000000004536         mov        esi, edi
0000000000004538         xor        edi, edi
000000000000453a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000453f         align      64                                          ; End of unwind block (FDE at 0x6bf8)

                     quotearg_char_mem:
0000000000004540         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6c0c), CODE XREF=quotearg_char+11
0000000000004544         mov        ecx, edx
0000000000004546         mov        rax, qword [fs:0x28]
000000000000454f         mov        qword [rsp+0x48+var_10], rax
0000000000004554         xor        eax, eax
0000000000004556         mov        rax, qword [qword_208250]                   ; qword_208250
000000000000455d         mov        r8, rsp
0000000000004560         and        ecx, 0x1f
0000000000004563         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000456b         mov        qword [rsp+0x48+var_18], rax
0000000000004570         mov        eax, edx
0000000000004572         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004576         shr        al, 0x5
0000000000004579         movzx      eax, al
000000000000457c         lea        r9, qword [r8+rax*4+8]
0000000000004581         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208230
0000000000004589         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000458e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208240
0000000000004596         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000459b         mov        edx, dword [r9]
000000000000459e         mov        eax, edx
00000000000045a0         shr        eax, cl
00000000000045a2         not        eax
00000000000045a4         and        eax, 0x1
00000000000045a7         shl        eax, cl
00000000000045a9         mov        rcx, r8
00000000000045ac         xor        eax, edx
00000000000045ae         mov        rdx, rsi
00000000000045b1         mov        rsi, rdi
00000000000045b4         mov        dword [r9], eax
00000000000045b7         xor        edi, edi
00000000000045b9         call       quotearg_n_options                          ; quotearg_n_options
00000000000045be         mov        rsi, qword [rsp+0x48+var_10]
00000000000045c3         xor        rsi, qword [fs:0x28]
00000000000045cc         jne        loc_45d3

00000000000045ce         add        rsp, 0x48
00000000000045d2         ret
                        ; endp

                     loc_45d3:
00000000000045d3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000045d8         align      32                                          ; End of unwind block (FDE at 0x6c0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000045e0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6c28)
00000000000045e4         mov        rsi, 0xffffffffffffffff
00000000000045eb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000045f0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6c28), Begin of unwind block (FDE at 0x6c3c), CODE XREF=close_stdout+101
00000000000045f5         mov        rsi, 0xffffffffffffffff
00000000000045fc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004601         align      16                                          ; End of unwind block (FDE at 0x6c3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004610         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x6c50)
0000000000004615         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000461a         align      32                                          ; End of unwind block (FDE at 0x6c50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004620         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6c64), CODE XREF=main+1971, main+2126, main+2398, main+2469, main+2759
0000000000004624         mov        rax, rdx
0000000000004627         mov        rdx, qword [fs:0x28]
0000000000004630         mov        qword [rsp+0x48+var_10], rdx
0000000000004635         xor        edx, edx
0000000000004637         cmp        esi, 0xa
000000000000463a         je         loc_46a4

000000000000463c         mov        dword [rsp+0x48+var_48], esi
000000000000463f         mov        rcx, rsp
0000000000004642         mov        rdx, 0xffffffffffffffff
0000000000004649         mov        rsi, rax
000000000000464c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004655         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000465e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004667         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004670         mov        qword [rsp+0x48+var_24], 0x0
0000000000004679         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004682         mov        dword [rsp+0x48+var_14], 0x0
000000000000468a         call       quotearg_n_options                          ; quotearg_n_options
000000000000468f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004694         xor        rcx, qword [fs:0x28]
000000000000469d         jne        loc_46a9

000000000000469f         add        rsp, 0x48
00000000000046a3         ret
                        ; endp

                     loc_46a4:
00000000000046a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_46a9:
00000000000046a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000046ae         align      16                                          ; End of unwind block (FDE at 0x6c64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
00000000000046b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6c80), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000046b4         mov        r9, rcx
00000000000046b7         mov        rcx, qword [qword_208250]                   ; qword_208250
00000000000046be         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000046c6         mov        rax, qword [fs:0x28]
00000000000046cf         mov        qword [rsp+0x48+var_10], rax
00000000000046d4         xor        eax, eax
00000000000046d6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000046da         test       rsi, rsi
00000000000046dd         mov        qword [rsp+0x48+var_18], rcx
00000000000046e2         mov        dword [rsp+0x48+var_48], 0xa
00000000000046e9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208230
00000000000046f1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000046f6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208240
00000000000046fe         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004703         je         loc_4737

0000000000004705         test       rdx, rdx
0000000000004708         je         loc_4737

000000000000470a         mov        qword [rsp+0x48+var_20], rsi
000000000000470f         mov        qword [rsp+0x48+var_18], rdx
0000000000004714         mov        rcx, rsp
0000000000004717         mov        rdx, r8
000000000000471a         mov        rsi, r9
000000000000471d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004722         mov        rdi, qword [rsp+0x48+var_10]
0000000000004727         xor        rdi, qword [fs:0x28]
0000000000004730         jne        loc_473c

0000000000004732         add        rsp, 0x48
0000000000004736         ret
                        ; endp

                     loc_4737:
0000000000004737         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_473c:
000000000000473c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004741         align      16                                          ; End of unwind block (FDE at 0x6c80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000004750         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x6c9c)
0000000000004757         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000475c         align      32                                          ; End of unwind block (FDE at 0x6c9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004760         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6cb0)
0000000000004763         mov        r8, 0xffffffffffffffff
000000000000476a         mov        rdx, rsi
000000000000476d         mov        rsi, rdi
0000000000004770         xor        edi, edi
0000000000004772         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004777         align      128                                         ; End of unwind block (FDE at 0x6cb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004780         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x6cc4)
0000000000004783         mov        rcx, rdx
0000000000004786         mov        rdx, rsi
0000000000004789         mov        rsi, rdi
000000000000478c         xor        edi, edi
000000000000478e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004793         align      32                                          ; End of unwind block (FDE at 0x6cc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000047a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6cd8), quote_quoting_options
00000000000047a7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047ac         align      16                                          ; End of unwind block (FDE at 0x6cd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000047b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6cec), quote_quoting_options
00000000000047b7         mov        rdx, rsi
00000000000047ba         mov        rsi, rdi
00000000000047bd         xor        edi, edi
00000000000047bf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047c4         align      16                                          ; End of unwind block (FDE at 0x6cec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000047d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6d00), quote_quoting_options
00000000000047d7         mov        rdx, 0xffffffffffffffff
00000000000047de         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047e3         align      16                                          ; End of unwind block (FDE at 0x6d00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000047f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6d14), quote_quoting_options
00000000000047f7         mov        rsi, rdi
00000000000047fa         mov        rdx, 0xffffffffffffffff
0000000000004801         xor        edi, edi
0000000000004803         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004808         align      16                                          ; End of unwind block (FDE at 0x6d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
0000000000004810         push       r13                                         ; Begin of unwind block (FDE at 0x6d2c), CODE XREF=main+1116, main+2731
0000000000004812         push       r12
0000000000004814         mov        r13d, edi
0000000000004817         push       rbp
0000000000004818         push       rbx
0000000000004819         mov        r12, rsi
000000000000481c         mov        rbx, rdx
000000000000481f         sub        rsp, 0x8
0000000000004823         nop        dword [rax+rax]

                     loc_4828:
0000000000004828         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
000000000000482b         mov        rsi, r12                                    ; argument "__buf" for method j_read
000000000000482e         mov        edi, r13d                                   ; argument "__fd" for method j_read
0000000000004831         call       j_read                                      ; read
0000000000004836         test       rax, rax
0000000000004839         mov        rbp, rax
000000000000483c         jns        loc_4860

000000000000483e         call       j___errno_location                          ; __errno_location
0000000000004843         mov        eax, dword [rax]
0000000000004845         cmp        eax, 0x4
0000000000004848         je         loc_4828

000000000000484a         cmp        rbx, 0x7ff00000
0000000000004851         jbe        loc_4860

0000000000004853         cmp        eax, 0x16
0000000000004856         jne        loc_4860

0000000000004858         mov        ebx, 0x7ff00000
000000000000485d         jmp        loc_4828
000000000000485f         align      32

                     loc_4860:
0000000000004860         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
0000000000004864         mov        rax, rbp
0000000000004867         pop        rbx
0000000000004868         pop        rbp
0000000000004869         pop        r12
000000000000486b         pop        r13
000000000000486d         ret
                        ; endp
000000000000486e         align      16                                          ; End of unwind block (FDE at 0x6d2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_write:
0000000000004870         push       r13                                         ; Begin of unwind block (FDE at 0x6d64), CODE XREF=full_write+57
0000000000004872         push       r12
0000000000004874         mov        r13d, edi
0000000000004877         push       rbp
0000000000004878         push       rbx
0000000000004879         mov        r12, rsi
000000000000487c         mov        rbx, rdx
000000000000487f         sub        rsp, 0x8
0000000000004883         nop        dword [rax+rax]

                     loc_4888:
0000000000004888         mov        rdx, rbx                                    ; argument "__n" for method j_write, CODE XREF=safe_write+56, safe_write+77
000000000000488b         mov        rsi, r12                                    ; argument "__buf" for method j_write
000000000000488e         mov        edi, r13d                                   ; argument "__fd" for method j_write
0000000000004891         call       j_write                                     ; write
0000000000004896         test       rax, rax
0000000000004899         mov        rbp, rax
000000000000489c         jns        loc_48c0

000000000000489e         call       j___errno_location                          ; __errno_location
00000000000048a3         mov        eax, dword [rax]
00000000000048a5         cmp        eax, 0x4
00000000000048a8         je         loc_4888

00000000000048aa         cmp        eax, 0x16
00000000000048ad         jne        loc_48c0

00000000000048af         cmp        rbx, 0x7ff00000
00000000000048b6         jbe        loc_48c0

00000000000048b8         mov        ebx, 0x7ff00000
00000000000048bd         jmp        loc_4888
00000000000048bf         align      64

                     loc_48c0:
00000000000048c0         add        rsp, 0x8                                    ; CODE XREF=safe_write+44, safe_write+61, safe_write+70
00000000000048c4         mov        rax, rbp
00000000000048c7         pop        rbx
00000000000048c8         pop        rbp
00000000000048c9         pop        r12
00000000000048cb         pop        r13
00000000000048cd         ret
                        ; endp
00000000000048ce         align      16                                          ; End of unwind block (FDE at 0x6d64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000048d0         push       r15                                         ; Begin of unwind block (FDE at 0x6d9c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
00000000000048d2         push       r14
00000000000048d4         push       r13
00000000000048d6         push       r12
00000000000048d8         mov        r12, r9
00000000000048db         push       rbp
00000000000048dc         push       rbx
00000000000048dd         mov        rbp, rdi
00000000000048e0         mov        rbx, r8
00000000000048e3         sub        rsp, 0x28
00000000000048e7         test       rsi, rsi
00000000000048ea         je         loc_4a08

00000000000048f0         mov        r8, rdx
00000000000048f3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000048fa         mov        r9, rcx
00000000000048fd         xor        eax, eax
00000000000048ff         mov        rcx, rsi
0000000000004902         mov        esi, 0x1
0000000000004907         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_490c:
000000000000490c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x607b, CODE XREF=version_etc_arn+337
0000000000004913         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004915         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000491a         call       j_dcgettext                                 ; dcgettext
000000000000491f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004926         mov        rcx, rax
0000000000004929         mov        r8d, 0x7e3
000000000000492f         mov        esi, 0x1
0000000000004934         mov        rdi, rbp
0000000000004937         xor        eax, eax
0000000000004939         call       j___fprintf_chk                             ; __fprintf_chk
000000000000493e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004945         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004947         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000494c         call       j_dcgettext                                 ; dcgettext
0000000000004951         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004954         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004957         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000495c         cmp        r12, 0x9
0000000000004960         ja         loc_4ca0

0000000000004966         lea        rdx, qword [switch_table_6368]              ; switch_table_6368
000000000000496d         movsxd     rax, dword [rdx+r12*4]
0000000000004971         add        rax, rdx
0000000000004974         jmp        rax                                         ; switch statement using table at 0x6368, with 10 cases, 0x4980,0x49f6,0x4a30,0x4a88,0x4ac8,0x4b10,0x4b60,0x4bb8,0x4be8,0x4c50
0000000000004976         align      128

                     loc_4980:
0000000000004980         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004984         mov        rax, qword [rbx+0x10]
0000000000004988         lea        rsi, qword [aWrittenBySSSns_6278]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000498f         mov        r8, qword [rbx+8]
0000000000004993         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004998         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000499a         mov        r13, qword [rbx+0x30]
000000000000499e         mov        r12, qword [rbx+0x28]
00000000000049a2         mov        qword [rsp+0x58+var_48], r9
00000000000049a7         mov        r15, qword [rbx+0x20]
00000000000049ab         mov        r14, qword [rbx+0x18]
00000000000049af         mov        qword [rsp+0x58+var_58], rax
00000000000049b3         mov        qword [rsp+0x58+var_50], r8
00000000000049b8         mov        rbx, qword [rbx]
00000000000049bb         call       j_dcgettext                                 ; dcgettext
00000000000049c0         sub        rsp, 0x8

                     loc_49c4:
00000000000049c4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000049c9         mov        rdx, rax
00000000000049cc         mov        rcx, rbx
00000000000049cf         mov        esi, 0x1
00000000000049d4         mov        rdi, rbp
00000000000049d7         xor        eax, eax
00000000000049d9         push       r9
00000000000049db         push       r13
00000000000049dd         push       r12
00000000000049df         push       r15
00000000000049e1         push       r14
00000000000049e3         mov        r9, qword [rsp+0x88+var_58]
00000000000049e8         mov        r8, qword [rsp+0x88+var_50]
00000000000049ed         call       j___fprintf_chk                             ; __fprintf_chk
00000000000049f2         add        rsp, 0x30

                     loc_49f6:
00000000000049f6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000049fa         pop        rbx
00000000000049fb         pop        rbp
00000000000049fc         pop        r12
00000000000049fe         pop        r13
0000000000004a00         pop        r14
0000000000004a02         pop        r15
0000000000004a04         ret
                        ; endp
0000000000004a05         align      8

                     loc_4a08:
0000000000004a08         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004a0b         mov        rcx, rdx
0000000000004a0e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004a15         mov        esi, 0x1
0000000000004a1a         xor        eax, eax
0000000000004a1c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a21         jmp        loc_490c
0000000000004a26         align      16

                     loc_4a30:
0000000000004a30         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004a34         mov        r9, qword [rbx+0x38]
0000000000004a38         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004a3f         mov        rax, qword [rbx+0x10]
0000000000004a43         mov        r8, qword [rbx+8]
0000000000004a47         mov        edx, 0x5
0000000000004a4c         mov        r13, qword [rbx+0x30]
0000000000004a50         mov        r12, qword [rbx+0x28]
0000000000004a54         mov        r15, qword [rbx+0x20]
0000000000004a58         mov        r14, qword [rbx+0x18]
0000000000004a5c         mov        rbx, qword [rbx]
0000000000004a5f         mov        qword [rsp+0x58+var_40], r10
0000000000004a64         mov        qword [rsp+0x58+var_48], r9
0000000000004a69         mov        qword [rsp+0x58+var_58], rax
0000000000004a6d         mov        qword [rsp+0x58+var_50], r8

                     loc_4a72:
0000000000004a72         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004a74         call       j_dcgettext                                 ; dcgettext
0000000000004a79         mov        r10, qword [rsp+0x58+var_40]
0000000000004a7e         push       r10
0000000000004a80         jmp        loc_49c4
0000000000004a85         align      8

                     loc_4a88:
0000000000004a88         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004a8b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004a92         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a97         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a99         call       j_dcgettext                                 ; dcgettext
0000000000004a9e         add        rsp, 0x28
0000000000004aa2         mov        rcx, rbx
0000000000004aa5         mov        rdi, rbp
0000000000004aa8         pop        rbx
0000000000004aa9         pop        rbp
0000000000004aaa         pop        r12
0000000000004aac         pop        r13
0000000000004aae         pop        r14
0000000000004ab0         pop        r15
0000000000004ab2         mov        rdx, rax
0000000000004ab5         mov        esi, 0x1
0000000000004aba         xor        eax, eax
0000000000004abc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004ac1         align      8

                     loc_4ac8:
0000000000004ac8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004acc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004ad3         mov        rbx, qword [rbx]
0000000000004ad6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004adb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004add         call       j_dcgettext                                 ; dcgettext
0000000000004ae2         add        rsp, 0x28
0000000000004ae6         mov        r8, r12
0000000000004ae9         mov        rcx, rbx
0000000000004aec         mov        rdi, rbp
0000000000004aef         mov        rdx, rax
0000000000004af2         mov        esi, 0x1
0000000000004af7         pop        rbx
0000000000004af8         pop        rbp
0000000000004af9         pop        r12
0000000000004afb         pop        r13
0000000000004afd         pop        r14
0000000000004aff         pop        r15
0000000000004b01         xor        eax, eax
0000000000004b03         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004b08         align      16

                     loc_4b10:
0000000000004b10         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004b14         mov        r12, qword [rbx+8]
0000000000004b18         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004b1f         mov        rbx, qword [rbx]
0000000000004b22         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b27         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b29         call       j_dcgettext                                 ; dcgettext
0000000000004b2e         add        rsp, 0x28
0000000000004b32         mov        r9, r13
0000000000004b35         mov        r8, r12
0000000000004b38         mov        rcx, rbx
0000000000004b3b         mov        rdi, rbp
0000000000004b3e         mov        rdx, rax
0000000000004b41         pop        rbx
0000000000004b42         pop        rbp
0000000000004b43         pop        r12
0000000000004b45         pop        r13
0000000000004b47         pop        r14
0000000000004b49         pop        r15
0000000000004b4b         mov        esi, 0x1
0000000000004b50         xor        eax, eax
0000000000004b52         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004b57         align      32

                     loc_4b60:
0000000000004b60         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004b67         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b6c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b6e         mov        r14, qword [rbx+0x18]
0000000000004b72         mov        r13, qword [rbx+0x10]
0000000000004b76         mov        r12, qword [rbx+8]
0000000000004b7a         mov        rbx, qword [rbx]
0000000000004b7d         call       j_dcgettext                                 ; dcgettext
0000000000004b82         sub        rsp, 0x8

                     loc_4b86:
0000000000004b86         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004b88         mov        rdx, rax
0000000000004b8b         mov        r9, r13
0000000000004b8e         mov        r8, r12
0000000000004b91         mov        rcx, rbx
0000000000004b94         mov        rdi, rbp
0000000000004b97         mov        esi, 0x1
0000000000004b9c         xor        eax, eax
0000000000004b9e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004ba3         pop        rax
0000000000004ba4         pop        rdx
0000000000004ba5         add        rsp, 0x28
0000000000004ba9         pop        rbx
0000000000004baa         pop        rbp
0000000000004bab         pop        r12
0000000000004bad         pop        r13
0000000000004baf         pop        r14
0000000000004bb1         pop        r15
0000000000004bb3         ret
                        ; endp
0000000000004bb4         align      8

                     loc_4bb8:
0000000000004bb8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004bbc         lea        rsi, qword [aWrittenBySSSns_61f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004bc3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bca         mov        r14, qword [rbx+0x18]
0000000000004bce         mov        r13, qword [rbx+0x10]
0000000000004bd2         mov        r12, qword [rbx+8]
0000000000004bd6         mov        rbx, qword [rbx]
0000000000004bd9         call       j_dcgettext                                 ; dcgettext
0000000000004bde         push       r15
0000000000004be0         jmp        loc_4b86
0000000000004be2         align      8

                     loc_4be8:
0000000000004be8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004bec         mov        r12, qword [rbx+0x28]
0000000000004bf0         lea        rsi, qword [aWrittenBySSSns_6220]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004bf7         mov        r15, qword [rbx+0x20]
0000000000004bfb         mov        r14, qword [rbx+0x18]
0000000000004bff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c04         mov        r13, qword [rbx+0x10]
0000000000004c08         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c0a         mov        rbx, qword [rbx]
0000000000004c0d         mov        qword [rsp+0x58+var_58], r8
0000000000004c11         call       j_dcgettext                                 ; dcgettext
0000000000004c16         sub        rsp, 0x8
0000000000004c1a         mov        r9, r13
0000000000004c1d         push       r12
0000000000004c1f         push       r15
0000000000004c21         push       r14

                     loc_4c23:
0000000000004c23         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004c28         mov        rcx, rbx
0000000000004c2b         mov        rdx, rax
0000000000004c2e         mov        rdi, rbp
0000000000004c31         mov        esi, 0x1
0000000000004c36         xor        eax, eax
0000000000004c38         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c3d         add        rsp, 0x20
0000000000004c41         add        rsp, 0x28
0000000000004c45         pop        rbx
0000000000004c46         pop        rbp
0000000000004c47         pop        r12
0000000000004c49         pop        r13
0000000000004c4b         pop        r14
0000000000004c4d         pop        r15
0000000000004c4f         ret
                        ; endp

                     loc_4c50:
0000000000004c50         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004c54         mov        r13, qword [rbx+0x30]
0000000000004c58         lea        rsi, qword [aWrittenBySSSns_6248]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004c5f         mov        r12, qword [rbx+0x28]
0000000000004c63         mov        r15, qword [rbx+0x20]
0000000000004c67         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c6c         mov        r14, qword [rbx+0x18]
0000000000004c70         mov        r8, qword [rbx+8]
0000000000004c74         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c76         mov        qword [rsp+0x58+var_50], r9
0000000000004c7b         mov        rbx, qword [rbx]
0000000000004c7e         mov        qword [rsp+0x58+var_58], r8
0000000000004c82         call       j_dcgettext                                 ; dcgettext
0000000000004c87         push       r13
0000000000004c89         push       r12
0000000000004c8b         push       r15
0000000000004c8d         push       r14
0000000000004c8f         mov        r9, qword [rsp+0x78+var_50]
0000000000004c94         jmp        loc_4c23
0000000000004c96         align      32

                     loc_4ca0:
0000000000004ca0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004ca4         mov        r9, qword [rbx+0x38]
0000000000004ca8         mov        edx, 0x5
0000000000004cad         mov        rax, qword [rbx+0x10]
0000000000004cb1         mov        r8, qword [rbx+8]
0000000000004cb5         lea        rsi, qword [aWrittenBySSSns_62e0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004cbc         mov        r13, qword [rbx+0x30]
0000000000004cc0         mov        r12, qword [rbx+0x28]
0000000000004cc4         mov        r15, qword [rbx+0x20]
0000000000004cc8         mov        r14, qword [rbx+0x18]
0000000000004ccc         mov        qword [rsp+0x58+var_40], r10
0000000000004cd1         mov        qword [rsp+0x58+var_48], r9
0000000000004cd6         mov        qword [rsp+0x58+var_58], rax
0000000000004cda         mov        qword [rsp+0x58+var_50], r8
0000000000004cdf         mov        rbx, qword [rbx]
0000000000004ce2         jmp        loc_4a72
0000000000004ce7         align      16                                          ; End of unwind block (FDE at 0x6d9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004cf0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x6eb0)
0000000000004cf3         cmp        qword [r8], 0x0
0000000000004cf7         je         j_version_etc_arn                           ; version_etc_arn

0000000000004cf9         nop        dword [rax]

                     loc_4d00:
0000000000004d00         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004d04         cmp        qword [r8+r9*8], 0x0
0000000000004d09         jne        loc_4d00

                     j_version_etc_arn:        // version_etc_arn
0000000000004d0b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004d10         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x6eb0), Begin of unwind block (FDE at 0x6ec4)
0000000000004d14         mov        r10, r8
0000000000004d17         xor        r9d, r9d
0000000000004d1a         mov        rax, qword [fs:0x28]
0000000000004d23         mov        qword [rsp+0x68+var_10], rax
0000000000004d28         xor        eax, eax
0000000000004d2a         mov        r8, rsp
0000000000004d2d         nop        dword [rax]

                     loc_4d30:
0000000000004d30         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004d33         cmp        eax, 0x2f
0000000000004d36         ja         loc_4d7a

0000000000004d38         mov        r11d, eax
0000000000004d3b         add        r11, qword [r10+0x10]
0000000000004d3f         add        eax, 0x8
0000000000004d42         mov        dword [r10], eax

                     loc_4d45:
0000000000004d45         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004d48         test       rax, rax
0000000000004d4b         mov        qword [r8+r9*8], rax
0000000000004d4f         je         loc_4d5b

0000000000004d51         add        r9, 0x1
0000000000004d55         cmp        r9, 0xa
0000000000004d59         jne        loc_4d30

                     loc_4d5b:
0000000000004d5b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004d60         mov        rax, qword [rsp+0x68+var_10]
0000000000004d65         xor        rax, qword [fs:0x28]
0000000000004d6e         jne        loc_4d75

0000000000004d70         add        rsp, 0x68
0000000000004d74         ret
                        ; endp

                     loc_4d75:
0000000000004d75         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4d7a:
0000000000004d7a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004d7e         lea        rax, qword [r11+8]
0000000000004d82         mov        qword [r10+8], rax
0000000000004d86         jmp        loc_4d45
0000000000004d88         align      16                                          ; End of unwind block (FDE at 0x6ec4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004d90         push       rbp                                         ; Begin of unwind block (FDE at 0x6ee0), CODE XREF=main+397
0000000000004d91         push       rbx
0000000000004d92         mov        r10d, 0x20
0000000000004d98         xor        r11d, r11d
0000000000004d9b         sub        rsp, 0xb8
0000000000004da2         mov        rax, qword [fs:0x28]
0000000000004dab         mov        qword [rsp+0xc8+var_50], rax
0000000000004db0         xor        eax, eax
0000000000004db2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004dba         mov        qword [rsp+0xc8+var_28], r8
0000000000004dc2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004dca         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004dcf         mov        qword [rsp+0xc8+var_20], r9
0000000000004dd7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004ddf         mov        qword [rsp+0xc8+var_B8], rax
0000000000004de4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004dec         xor        r9d, r9d
0000000000004def         mov        qword [rsp+0xc8+var_B0], rax
0000000000004df4         mov        rbp, rax
0000000000004df7         nop        word [rax+rax]

                     loc_4e00:
0000000000004e00         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004e04         ja         loc_4e5c

0000000000004e06         mov        eax, r10d
0000000000004e09         mov        r11d, 0x1
0000000000004e0f         add        r10d, 0x8
0000000000004e13         add        rax, rbp

                     loc_4e16:
0000000000004e16         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004e19         test       rax, rax
0000000000004e1c         mov        qword [r8+r9*8], rax
0000000000004e20         je         loc_4e2c

0000000000004e22         add        r9, 0x1
0000000000004e26         cmp        r9, 0xa
0000000000004e2a         jne        loc_4e00

                     loc_4e2c:
0000000000004e2c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004e2f         jne        loc_4e55

                     loc_4e31:
0000000000004e31         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004e36         mov        rax, qword [rsp+0xc8+var_50]
0000000000004e3b         xor        rax, qword [fs:0x28]
0000000000004e44         jne        loc_4e50

0000000000004e46         add        rsp, 0xb8
0000000000004e4d         pop        rbx
0000000000004e4e         pop        rbp
0000000000004e4f         ret
                        ; endp

                     loc_4e50:
0000000000004e50         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4e55:
0000000000004e55         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004e5a         jmp        loc_4e31

                     loc_4e5c:
0000000000004e5c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004e5f         add        rbx, 0x8
0000000000004e63         jmp        loc_4e16
0000000000004e65         align      16                                          ; End of unwind block (FDE at 0x6ee0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004e70         push       rbx                                         ; Begin of unwind block (FDE at 0x6f0c)
0000000000004e71         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004e78         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e7d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e7f         call       j_dcgettext                                 ; dcgettext
0000000000004e84         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004e8b         mov        rsi, rax
0000000000004e8e         mov        edi, 0x1
0000000000004e93         xor        eax, eax
0000000000004e95         call       j___printf_chk                              ; __printf_chk
0000000000004e9a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004ea1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ea6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ea8         call       j_dcgettext                                 ; dcgettext
0000000000004ead         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004eb4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x558a
0000000000004ebb         mov        rsi, rax
0000000000004ebe         mov        edi, 0x1
0000000000004ec3         xor        eax, eax
0000000000004ec5         call       j___printf_chk                              ; __printf_chk
0000000000004eca         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004ed1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004ed8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eda         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004edf         call       j_dcgettext                                 ; dcgettext
0000000000004ee4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ee7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004eea         pop        rbx
0000000000004eeb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004ef0         push       rbx                                         ; End of unwind block (FDE at 0x6f0c), Begin of unwind block (FDE at 0x6f2c), CODE XREF=main+876, main+898, main+2658, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004ef1         mov        rbx, rdi
0000000000004ef4         call       j_malloc                                    ; malloc
0000000000004ef9         test       rax, rax
0000000000004efc         jne        loc_4f03

0000000000004efe         test       rbx, rbx
0000000000004f01         jne        loc_4f05

                     loc_4f03:
0000000000004f03         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004f04         ret
                        ; endp

                     loc_4f05:
0000000000004f05         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f0a:
0000000000004f0a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6f2c)
                     xnmalloc:
0000000000004f10         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6f48)
0000000000004f13         mul        rsi
0000000000004f16         mov        rdi, rax
0000000000004f19         seto       al
0000000000004f1c         test       rdi, rdi
0000000000004f1f         js         loc_4f2b

0000000000004f21         movzx      eax, al
0000000000004f24         test       rax, rax
0000000000004f27         jne        loc_4f2b

0000000000004f29         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4f2b:
0000000000004f2b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004f2f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f34:
0000000000004f34         nop                                                    ; End of unwind block (FDE at 0x6f48)
0000000000004f36         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004f40         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x6f5c)
                        ; endp
0000000000004f42         align      16                                          ; End of unwind block (FDE at 0x6f5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004f50         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x6f70), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004f53         push       rbx
0000000000004f54         mov        rbx, rsi
0000000000004f57         jne        loc_4f5e

0000000000004f59         test       rdi, rdi
0000000000004f5c         jne        loc_4f78

                     loc_4f5e:
0000000000004f5e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004f61         call       j_realloc                                   ; realloc
0000000000004f66         test       rax, rax
0000000000004f69         jne        loc_4f70

0000000000004f6b         test       rbx, rbx
0000000000004f6e         jne        loc_4f81

                     loc_4f70:
0000000000004f70         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004f71         ret
                        ; endp
0000000000004f72         align      8

                     loc_4f78:
0000000000004f78         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004f7d         xor        eax, eax
0000000000004f7f         pop        rbx
0000000000004f80         ret
                        ; endp

                     loc_4f81:
0000000000004f81         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f86:
0000000000004f86         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x6f70)
                     xnrealloc:
0000000000004f90         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x6f94)
0000000000004f93         mul        rdx
0000000000004f96         mov        rsi, rax
0000000000004f99         seto       al
0000000000004f9c         test       rsi, rsi
0000000000004f9f         js         loc_4fab

0000000000004fa1         movzx      eax, al
0000000000004fa4         test       rax, rax
0000000000004fa7         jne        loc_4fab

0000000000004fa9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4fab:
0000000000004fab         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004faf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4fb4:
0000000000004fb4         nop                                                    ; End of unwind block (FDE at 0x6f94)
0000000000004fb6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004fc0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6fa8)
0000000000004fc3         mov        r9, rdx
0000000000004fc6         mov        rcx, qword [rsi]
0000000000004fc9         je         loc_5000

0000000000004fcb         xor        edx, edx
0000000000004fcd         movabs     rax, 0x5555555555555554
0000000000004fd7         div        r9
0000000000004fda         cmp        rax, rcx
0000000000004fdd         jbe        loc_501b

0000000000004fdf         mov        rax, rcx
0000000000004fe2         shr        rax, 0x1
0000000000004fe5         lea        rcx, qword [rax+rcx+1]

                     loc_4fea:
0000000000004fea         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004fed         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004ff1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004ff4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004ff9         align      4096

                     loc_5000:
0000000000005000         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005003         je         loc_5028

                     loc_5005:
0000000000005005         mov        rax, rcx                                    ; CODE XREF=sub_5024+28
0000000000005008         mul        r9
000000000000500b         seto       dl
000000000000500e         test       rax, rax
0000000000005011         movzx      edx, dl
0000000000005014         js         loc_501b

0000000000005016         test       rdx, rdx
0000000000005019         je         loc_4fea

                     loc_501b:
000000000000501b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000501f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5024:
0000000000005024         nop        dword [rax]
                        ; endp

                     loc_5028:
0000000000005028         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000502a         mov        eax, 0x80
000000000000502f         xor        r8d, r8d
0000000000005032         div        r9
0000000000005035         test       rax, rax
0000000000005038         sete       r8b
000000000000503c         lea        rcx, qword [r8+rax]
0000000000005040         jmp        loc_5005
0000000000005042         align      16                                          ; End of unwind block (FDE at 0x6fa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005050         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6fc0)
0000000000005053         mov        rax, qword [rsi]
0000000000005056         je         loc_5080

0000000000005058         movabs     rdx, 0x5555555555555553
0000000000005062         cmp        rax, rdx
0000000000005065         ja         loc_5091

0000000000005067         mov        rdx, rax
000000000000506a         shr        rdx, 0x1
000000000000506d         lea        rax, qword [rdx+rax+1]

                     loc_5072:
0000000000005072         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005075         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005078         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000507d         align      128

                     loc_5080:
0000000000005080         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005083         mov        edx, 0x80
0000000000005088         cmove      rax, rdx
000000000000508c         test       rax, rax
000000000000508f         jns        loc_5072

                     loc_5091:
0000000000005091         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005095         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_509a:
000000000000509a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6fc0)
                     xzalloc:
00000000000050a0         push       rbx                                         ; Begin of unwind block (FDE at 0x6fd8)
00000000000050a1         mov        rbx, rdi
00000000000050a4         call       xmalloc                                     ; xmalloc
00000000000050a9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000050ac         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000050ae         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000050b1         pop        rbx
00000000000050b2         jmp        j_memset                                    ; memset
                        ; endp
00000000000050b7         align      64                                          ; End of unwind block (FDE at 0x6fd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000050c0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6ff4)
00000000000050c3         sub        rsp, 0x8
00000000000050c7         mul        rsi
00000000000050ca         seto       dl
00000000000050cd         test       rax, rax
00000000000050d0         js         loc_50e9

00000000000050d2         movzx      edx, dl
00000000000050d5         test       rdx, rdx
00000000000050d8         jne        loc_50e9

00000000000050da         call       j_calloc                                    ; calloc
00000000000050df         test       rax, rax
00000000000050e2         je         loc_50e9

00000000000050e4         add        rsp, 0x8
00000000000050e8         ret
                        ; endp

                     loc_50e9:
00000000000050e9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50ee:
00000000000050ee         nop                                                    ; End of unwind block (FDE at 0x6ff4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000050f0         push       rbp                                         ; Begin of unwind block (FDE at 0x7010), CODE XREF=clone_quoting_options+40
00000000000050f1         push       rbx
00000000000050f2         mov        rbp, rdi
00000000000050f5         mov        rdi, rsi
00000000000050f8         mov        rbx, rsi
00000000000050fb         sub        rsp, 0x8
00000000000050ff         call       xmalloc                                     ; xmalloc
0000000000005104         add        rsp, 0x8
0000000000005108         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000510b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000510e         pop        rbx
000000000000510f         pop        rbp
0000000000005110         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005113         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005118         align      32                                          ; End of unwind block (FDE at 0x7010)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005120         push       rbx                                         ; Begin of unwind block (FDE at 0x7038)
0000000000005121         mov        rbx, rdi
0000000000005124         call       j_strlen                                    ; strlen
0000000000005129         mov        rdi, rbx
000000000000512c         lea        rsi, qword [rax+1]
0000000000005130         pop        rbx
0000000000005131         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005133         align      64                                          ; End of unwind block (FDE at 0x7038)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005140         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x7054), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005147         sub        rsp, 0x8
000000000000514b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005150         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005152         call       j_dcgettext                                 ; dcgettext
0000000000005157         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000515d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b44
0000000000005164         mov        rcx, rax
0000000000005167         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005169         xor        eax, eax
000000000000516b         call       j_error                                     ; error
0000000000005170         call       j_abort                                     ; abort
                        ; endp
0000000000005175         align      128                                         ; End of unwind block (FDE at 0x7054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005180         push       r13                                         ; Begin of unwind block (FDE at 0x706c), CODE XREF=sub_33b0+534
0000000000005182         push       r12
0000000000005184         mov        r13, rsi
0000000000005187         push       rbp
0000000000005188         push       rbx
0000000000005189         mov        rbx, rdi
000000000000518c         mov        r12, rdx
000000000000518f         sub        rsp, 0x18
0000000000005193         mov        rax, qword [fs:0x28]
000000000000519c         mov        qword [rsp+0x38+var_30], rax
00000000000051a1         xor        eax, eax
00000000000051a3         lea        rax, qword [rsp+0x38+var_34]
00000000000051a8         test       rdi, rdi
00000000000051ab         cmove      rbx, rax
00000000000051af         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000051b2         call       j_mbrtowc                                   ; mbrtowc
00000000000051b7         cmp        rax, 0xfffffffffffffffd
00000000000051bb         mov        rbp, rax
00000000000051be         jbe        loc_51e0

00000000000051c0         test       r12, r12
00000000000051c3         je         loc_51e0

00000000000051c5         xor        edi, edi
00000000000051c7         call       hard_locale                                 ; hard_locale
00000000000051cc         test       al, al
00000000000051ce         jne        loc_51e0

00000000000051d0         movzx      eax, byte [r13]
00000000000051d5         mov        ebp, 0x1
00000000000051da         mov        dword [rbx], eax
00000000000051dc         nop        dword [rax]

                     loc_51e0:
00000000000051e0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000051e5         xor        rdx, qword [fs:0x28]
00000000000051ee         mov        rax, rbp
00000000000051f1         jne        loc_51fe

00000000000051f3         add        rsp, 0x18
00000000000051f7         pop        rbx
00000000000051f8         pop        rbp
00000000000051f9         pop        r12
00000000000051fb         pop        r13
00000000000051fd         ret
                        ; endp

                     loc_51fe:
00000000000051fe         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005203         align      16                                          ; End of unwind block (FDE at 0x706c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005210         push       r12                                         ; Begin of unwind block (FDE at 0x70ac), CODE XREF=close_stdout+13, close_stdout+51
0000000000005212         push       rbp
0000000000005213         mov        rbp, rdi
0000000000005216         push       rbx
0000000000005217         call       j___fpending                                ; __fpending
000000000000521c         mov        ebx, dword [rbp]
000000000000521f         mov        rdi, rbp
0000000000005222         mov        r12, rax
0000000000005225         call       rpl_fclose                                  ; rpl_fclose
000000000000522a         and        ebx, 0x20
000000000000522d         test       ebx, ebx
000000000000522f         jne        loc_5248

0000000000005231         test       eax, eax
0000000000005233         je         loc_523f

0000000000005235         test       r12, r12
0000000000005238         mov        eax, 0xffffffff
000000000000523d         je         loc_5278

                     loc_523f:
000000000000523f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005240         pop        rbp
0000000000005241         pop        r12
0000000000005243         ret
                        ; endp
0000000000005244         align      8

                     loc_5248:
0000000000005248         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000524a         jne        loc_5268

000000000000524c         call       j___errno_location                          ; __errno_location
0000000000005251         mov        dword [rax], 0x0
0000000000005257         mov        eax, 0xffffffff
000000000000525c         pop        rbx
000000000000525d         pop        rbp
000000000000525e         pop        r12
0000000000005260         ret
                        ; endp
0000000000005261         align      8

                     loc_5268:
0000000000005268         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005269         mov        eax, 0xffffffff
000000000000526e         pop        rbp
000000000000526f         pop        r12
0000000000005271         ret
                        ; endp
0000000000005272         align      8

                     loc_5278:
0000000000005278         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000527d         cmp        dword [rax], 0x9
0000000000005280         pop        rbx
0000000000005281         pop        rbp
0000000000005282         pop        r12
0000000000005284         setne      al
0000000000005287         movzx      eax, al
000000000000528a         neg        eax
000000000000528c         ret
                        ; endp
000000000000528d         align      16                                          ; End of unwind block (FDE at 0x70ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005290         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x70fc), CODE XREF=rpl_mbrtowc+71
0000000000005294         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005296         call       j_setlocale                                 ; setlocale
000000000000529b         mov        rdx, rax
000000000000529e         mov        eax, 0x1
00000000000052a3         test       rdx, rdx
00000000000052a6         je         loc_52c5

00000000000052a8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x63e0
00000000000052af         mov        ecx, 0x2
00000000000052b4         mov        rsi, rdx
00000000000052b7         rep  cmpsb byte [rsi], byte [rdi]
00000000000052b9         seta       cl
00000000000052bc         sbb        cl, 0x0
00000000000052bf         xor        eax, eax
00000000000052c1         test       cl, cl
00000000000052c3         jne        loc_52d0

                     loc_52c5:
00000000000052c5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000052c9         ret
                        ; endp
00000000000052ca         align      16

                     loc_52d0:
00000000000052d0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000052d7         mov        ecx, 0x6
00000000000052dc         mov        rsi, rdx
00000000000052df         rep  cmpsb byte [rsi], byte [rdi]
00000000000052e1         seta       al
00000000000052e4         sbb        al, 0x0
00000000000052e6         test       al, al
00000000000052e8         setne      al
00000000000052eb         add        rsp, 0x8
00000000000052ef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000052f0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x70fc), Begin of unwind block (FDE at 0x711c), CODE XREF=gettext_quote.part.1+11
00000000000052f4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000052f9         call       j_nl_langinfo                               ; nl_langinfo
00000000000052fe         test       rax, rax
0000000000005301         je         loc_5320

0000000000005303         cmp        byte [rax], 0x0
0000000000005306         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000530d         cmove      rax, rdx
0000000000005311         add        rsp, 0x8
0000000000005315         ret
                        ; endp
0000000000005316         align      32

                     loc_5320:
0000000000005320         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005327         add        rsp, 0x8
000000000000532b         ret
                        ; endp
000000000000532c         align      16                                          ; End of unwind block (FDE at 0x711c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005330         push       r12                                         ; Begin of unwind block (FDE at 0x713c), CODE XREF=close_stream+21
0000000000005332         push       rbp
0000000000005333         push       rbx
0000000000005334         mov        rbx, rdi
0000000000005337         call       j_fileno                                    ; fileno
000000000000533c         test       eax, eax
000000000000533e         mov        rdi, rbx
0000000000005341         js         loc_5397

0000000000005343         call       j___freading                                ; __freading
0000000000005348         test       eax, eax
000000000000534a         jne        loc_5378

                     loc_534c:
000000000000534c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000534f         call       rpl_fflush                                  ; rpl_fflush
0000000000005354         test       eax, eax
0000000000005356         je         loc_5394

0000000000005358         call       j___errno_location                          ; __errno_location
000000000000535d         mov        r12d, dword [rax]
0000000000005360         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005363         mov        rbp, rax
0000000000005366         call       j_fclose                                    ; fclose
000000000000536b         test       r12d, r12d
000000000000536e         jne        loc_53a0

                     loc_5370:
0000000000005370         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005371         pop        rbp
0000000000005372         pop        r12
0000000000005374         ret
                        ; endp
0000000000005375         align      8

                     loc_5378:
0000000000005378         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000537b         call       j_fileno                                    ; fileno
0000000000005380         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005382         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005387         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005389         call       j_lseek                                     ; lseek
000000000000538e         cmp        rax, 0xffffffffffffffff
0000000000005392         jne        loc_534c

                     loc_5394:
0000000000005394         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5397:
0000000000005397         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005398         pop        rbp
0000000000005399         pop        r12
000000000000539b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_53a0:
00000000000053a0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000053a4         mov        eax, 0xffffffff
00000000000053a9         jmp        loc_5370
00000000000053ab         align      16                                          ; End of unwind block (FDE at 0x713c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000053b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7174), CODE XREF=rpl_fclose+31
00000000000053b3         push       rbx
00000000000053b4         mov        rbx, rdi
00000000000053b7         je         loc_53ca

00000000000053b9         call       j___freading                                ; __freading
00000000000053be         test       eax, eax
00000000000053c0         je         loc_53ca

00000000000053c2         test       dword [rbx], 0x100
00000000000053c8         jne        loc_53d8

                     loc_53ca:
00000000000053ca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000053cd         pop        rbx
00000000000053ce         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000053d3         align      8

                     loc_53d8:
00000000000053d8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000053db         mov        edx, 0x1
00000000000053e0         xor        esi, esi
00000000000053e2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000053e7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000053ea         pop        rbx
00000000000053eb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000053f0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7174), Begin of unwind block (FDE at 0x7194), CODE XREF=rpl_fflush+50
00000000000053f4         cmp        qword [rdi+0x10], rax
00000000000053f8         je         loc_5400

                     j_j_fseeko:        // fseeko
00000000000053fa         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000053ff         align      1024

                     loc_5400:
0000000000005400         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005404         cmp        qword [rdi+0x28], rax
0000000000005408         jne        j_j_fseeko                                  ; fseeko

000000000000540a         cmp        qword [rdi+0x48], 0x0
000000000000540f         jne        j_j_fseeko                                  ; fseeko

0000000000005411         push       r12
0000000000005413         push       rbp
0000000000005414         mov        r12d, edx
0000000000005417         push       rbx
0000000000005418         mov        rbp, rsi
000000000000541b         mov        rbx, rdi                                    ; DATA XREF=main+1773
000000000000541e         call       j_fileno                                    ; fileno
0000000000005423         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005426         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005429         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000542b         call       j_lseek                                     ; lseek
0000000000005430         cmp        rax, 0xffffffffffffffff
0000000000005434         je         loc_5442

0000000000005436         and        dword [rbx], 0xffffffef
0000000000005439         mov        qword [rbx+0x90], rax
0000000000005440         xor        eax, eax

                     loc_5442:
0000000000005442         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005443         pop        rbp
0000000000005444         pop        r12
0000000000005446         ret
                        ; endp
0000000000005447         align      16                                          ; End of unwind block (FDE at 0x7194)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005450         push       r15                                         ; Begin of unwind block (FDE at 0x71c4), DATA XREF=_start+22
0000000000005452         push       r14
0000000000005454         mov        r15, rdx
0000000000005457         push       r13
0000000000005459         push       r12
000000000000545b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005462         push       rbp
0000000000005463         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000546a         push       rbx
000000000000546b         mov        r13d, edi
000000000000546e         mov        r14, rsi
0000000000005471         sub        rbp, r12
0000000000005474         sub        rsp, 0x8
0000000000005478         sar        rbp, 0x3
000000000000547c         call       _init                                       ; _init
0000000000005481         test       rbp, rbp
0000000000005484         je         loc_54a6

0000000000005486         xor        ebx, ebx
0000000000005488         nop        dword [rax+rax]

                     loc_5490:
0000000000005490         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005493         mov        rsi, r14
0000000000005496         mov        edi, r13d
0000000000005499         call       qword [r12+rbx*8]
000000000000549d         add        rbx, 0x1
00000000000054a1         cmp        rbp, rbx
00000000000054a4         jne        loc_5490

                     loc_54a6:
00000000000054a6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000054aa         pop        rbx
00000000000054ab         pop        rbp
00000000000054ac         pop        r12
00000000000054ae         pop        r13
00000000000054b0         pop        r14
00000000000054b2         pop        r15
00000000000054b4         ret
                        ; endp
00000000000054b5         align      64                                          ; End of unwind block (FDE at 0x71c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000054c0         ret                                                    ; Begin of unwind block (FDE at 0x720c), DATA XREF=_start+15
                        ; endp
00000000000054c2         align      16                                          ; End of unwind block (FDE at 0x720c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000054d0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x7224), __dso_handle, CODE XREF=main+121
00000000000054d7         xor        esi, esi
00000000000054d9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000054de         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7224)
00000000000054df         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x54e0; 0x54e9[ (9 bytes)
        ; File offset : [21728; 21737[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000054e0         sub        rsp, 0x8
00000000000054e4         add        rsp, 0x8
00000000000054e8         ret
                        ; endp
00000000000054e9         db  0x00 ; '.'
00000000000054ea         db  0x00 ; '.'
00000000000054eb         db  0x00 ; '.'
00000000000054ec         db  0x00 ; '.'
00000000000054ed         db  0x00 ; '.'
00000000000054ee         db  0x00 ; '.'
00000000000054ef         db  0x00 ; '.'
00000000000054f0         db  0x00 ; '.'
00000000000054f1         db  0x00 ; '.'
00000000000054f2         db  0x00 ; '.'
00000000000054f3         db  0x00 ; '.'
00000000000054f4         db  0x00 ; '.'
00000000000054f5         db  0x00 ; '.'
00000000000054f6         db  0x00 ; '.'
00000000000054f7         db  0x00 ; '.'
00000000000054f8         db  0x00 ; '.'
00000000000054f9         db  0x00 ; '.'
00000000000054fa         db  0x00 ; '.'
00000000000054fb         db  0x00 ; '.'
00000000000054fc         db  0x00 ; '.'
00000000000054fd         db  0x00 ; '.'
00000000000054fe         db  0x00 ; '.'
00000000000054ff         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5500; 0x63ee[ (3822 bytes)
        ; File offset : [21760; 25582[ (3822 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005500         db  0x01 ; '.'
0000000000005501         db  0x00 ; '.'
0000000000005502         db  0x02 ; '.'
0000000000005503         db  0x00 ; '.'
                     aWriteError:
0000000000005504         db         "write error", 0                            ; DATA XREF=write_pending.part.6+1, main+2814, main+2980, close_stdout+67
0000000000005510         db  0x63 ; 'c'                                         ; DATA XREF=main+388, usage+389, usage+700, usage+884, usage+903, usage+937
0000000000005511         db  0x61 ; 'a'
0000000000005512         db  0x74 ; 't'
0000000000005513         db  0x00 ; '.'
0000000000005514         db  0x5b ; '['                                         ; DATA XREF=usage+401
0000000000005515         db  0x00 ; '.'
                     aTestInvocation:
0000000000005516         db         "test invocation", 0                        ; DATA XREF=usage+440
                     aMulticallInvoc:
0000000000005526         db         "Multi-call invocation", 0                  ; DATA XREF=usage+488
                     aSha224sum:
000000000000553c         db         "sha224sum", 0                              ; DATA XREF=usage+505
                     aSha2Utilities:
0000000000005546         db         "sha2 utilities", 0                         ; DATA XREF=usage+517
                     aSha256sum:
0000000000005555         db         "sha256sum", 0                              ; DATA XREF=usage+408
                     aSha384sum:
000000000000555f         db         "sha384sum", 0                              ; DATA XREF=usage+452
                     aSha512sum:
0000000000005569         db         "sha512sum", 0                              ; DATA XREF=usage+476
                     aNsOnlineHelpSn:
0000000000005573         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+586
000000000000558a         db  0x47 ; 'G'                                         ; DATA XREF=main+381, usage+614, usage+807, emit_bug_reporting_address+68
000000000000558b         db  0x4e ; 'N'
000000000000558c         db  0x55 ; 'U'
000000000000558d         db  0x20 ; ' '
                     aCoreutils:
000000000000558e         db         "coreutils", 0                              ; DATA XREF=main+90, main+102, usage+464
0000000000005598         db  0x65 ; 'e'                                         ; DATA XREF=usage+653, usage+846
0000000000005599         db  0x6e ; 'n'
000000000000559a         db  0x5f ; '_'
000000000000559b         db  0x00 ; '.'
                     aFullDocumentat:
000000000000559c         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+681, usage+870
                     aUsrlocalsharel:
00000000000055b7         db         "/usr/local/share/locale", 0                ; DATA XREF=main+83
                     aRichardMStallm:
00000000000055cf         db         "Richard M. Stallman", 0                    ; DATA XREF=main+367
                     aTorbjornGranlu:
00000000000055e3         db         "Torbjorn Granlund", 0                      ; DATA XREF=main+374
                     aBenstuvaet:
00000000000055f5         db         "benstuvAET", 0                             ; DATA XREF=main+176
                     aStandardOutput:
0000000000005600         db         "standard output", 0                        ; DATA XREF=main+3039
                     aSInputFileIsOu:
0000000000005610         db         "%s: input file is output file", 0          ; DATA XREF=main+2403
                     aCannotDoIoctlO:
000000000000562e         db         "cannot do ioctl on %s", 0                  ; DATA XREF=main+2900
                     aClosingStandar:
0000000000005644         db         "closing standard input", 0                 ; DATA XREF=main+2595
                     aNumbernonblank:
000000000000565b         db         "number-nonblank", 0
                     aNumber:
000000000000566b         db         "number", 0
                     aSqueezeblank:
0000000000005672         db         "squeeze-blank", 0
                     aShownonprintin:
0000000000005680         db         "show-nonprinting", 0
                     aShowends:
0000000000005691         db         "show-ends", 0
                     aShowtabs:
000000000000569b         db         "show-tabs", 0
                     aShowall:
00000000000056a5         db         "show-all", 0
                     aHelp:
00000000000056ae         db         "help", 0
                     aVersion:
00000000000056b3         db         "version", 0
00000000000056bb         align      64
                     aTrySHelpForMor:
00000000000056c0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000056e7         align      8
                     aUsageSOptionFi:
00000000000056e8         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
0000000000005709         align      16
                     aConcatenateFil:
0000000000005710         db         "Concatenate FILE(s) to standard output.\n", 0 ; DATA XREF=usage+132
0000000000005739         align      64
                     aNwithNoFileOrW:
0000000000005740         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNAShowallEquiv:
0000000000005778         db         "\n  -A, --show-all           equivalent to -vET\n  -b, --number-nonblank    number nonempty output lines, overrides -n\n  -e                       equivalent to -vE\n  -E, --show-ends          display $ at end of each line\n  -n, --number             number all" ; DATA XREF=usage+206
0000000000005878         db         " output lines\n  -s, --squeeze-blank      suppress repeated empty output lines\n", 0
00000000000058c7         align      8
                     aTEquivalentToV:
00000000000058c8         db         "  -t                       equivalent to -vT\n  -T, --show-tabs          display TAB characters as ^I\n  -u                       (ignored)\n  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB\n", 0 ; DATA XREF=usage+243
000000000000599c         align      32
                     aHelpDisplayThi:
00000000000059a0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+280
00000000000059cd         align      16
                     aVersionOutputV:
00000000000059d0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+317
0000000000005a06         align      8
                     aNexamplesnSFGO:
0000000000005a08         db         "\nExamples:\n  %s f - g  Output f's contents, then standard input, then g's contents.\n  %s        Copy standard input to standard output.\n", 0 ; DATA XREF=usage+354
0000000000005a91         align      8
                     aHttpswwwgnuorg:
0000000000005a98         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+607, usage+707, usage+800, usage+910, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005ac0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+951
0000000000005b07         align      8
                     aOrAvailableLoc:
0000000000005b08         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+750
                     a831:
0000000000005b3b         db         "8.31", 0                                   ; DATA XREF=Version
                     aSS:
0000000000005b40         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000005b47         align      8
                     aANullArgv0WasP:
0000000000005b48         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005b80         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005b88         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005b89         db  0x74 ; 't'
0000000000005b8a         db  0x2d ; '-'                                         ; DATA XREF=main+625, main+666, main+2219, main+2858
0000000000005b8b         db  0x00 ; '.'
0000000000005b8c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005b8d         db  0x80 ; '.'
0000000000005b8e         db  0x98 ; '.'
0000000000005b8f         db  0x00 ; '.'
0000000000005b90         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005b91         db  0x80 ; '.'
0000000000005b92         db  0x99 ; '.'
0000000000005b93         db  0x00 ; '.'
0000000000005b94         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005b95         db  0x07 ; '.'
0000000000005b96         db  0x65 ; 'e'
0000000000005b97         db  0x00 ; '.'
0000000000005b98         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005b99         db  0xaf ; '.'
0000000000005b9a         db  0x00 ; '.'
0000000000005b9b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_33b0+1451, sub_33b0+1493, sub_33b0+2429
0000000000005b9c         db  0x00 ; '.'
0000000000005b9d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_33b0+132, sub_33b0+1338, sub_33b0+1670, sub_33b0+1697, sub_33b0+2352
0000000000005b9e         db  0x00 ; '.'
0000000000005b9f         db  0x60 ; '`'                                         ; DATA XREF=sub_33b0+1627, sub_33b0+1654
0000000000005ba0         db  0x00 ; '.'
                     aLiteral:
0000000000005ba1         db         "literal", 0
                     aShell:
0000000000005ba9         db         "shell", 0
                     aShellalways:
0000000000005baf         db         "shell-always", 0
0000000000005bbc         db  0x73 ; 's'
0000000000005bbd         db  0x68 ; 'h'
0000000000005bbe         db  0x65 ; 'e'
0000000000005bbf         db  0x6c ; 'l'
0000000000005bc0         db  0x6c ; 'l'
0000000000005bc1         db  0x2d ; '-'
                     aEscape:
0000000000005bc2         db         "escape", 0
                     aShellescapealw:
0000000000005bc9         db         "shell-escape-always", 0
0000000000005bdd         db  0x63 ; 'c'
0000000000005bde         db  0x00 ; '.'
                     aCmaybe:
0000000000005bdf         db         "c-maybe", 0
                     aClocale:
0000000000005be7         db         "clocale", 0
0000000000005bef         align      1024
                     switch_table_5c00:        // switch_table
0000000000005c00         dd         quotearg_buffer_restyled.loc_3aaa-switch_table_5c00, quotearg_buffer_restyled.loc_2d03-switch_table_5c00, quotearg_buffer_restyled.loc_3cd8-switch_table_5c00, quotearg_buffer_restyled.loc_3ae4-switch_table_5c00 ; switch table used at 0x2d01 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005c10         dd         quotearg_buffer_restyled.loc_38d4-switch_table_5c00, quotearg_buffer_restyled.loc_3930-switch_table_5c00, quotearg_buffer_restyled.loc_3985-switch_table_5c00, quotearg_buffer_restyled.loc_39ca-switch_table_5c00
0000000000005c20         dd         3 dup (quotearg_buffer_restyled.loc_3a04-switch_table_5c00)
0000000000005c2c         db  0x54 ; 'T'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000005c2d         db  0xd4 ; '.'
0000000000005c2e         db  0xff ; '.'
0000000000005c2f         db  0xff ; '.'
0000000000005c30         db  0x3c ; '<'
0000000000005c31         db  0xd5 ; '.'
0000000000005c32         db  0xff ; '.'
0000000000005c33         db  0xff ; '.'
0000000000005c34         db  0x3c ; '<'
0000000000005c35         db  0xd5 ; '.'
0000000000005c36         db  0xff ; '.'
0000000000005c37         db  0xff ; '.'
0000000000005c38         db  0x3c ; '<'
0000000000005c39         db  0xd5 ; '.'
0000000000005c3a         db  0xff ; '.'
0000000000005c3b         db  0xff ; '.'
0000000000005c3c         db  0x3c ; '<'
0000000000005c3d         db  0xd5 ; '.'
0000000000005c3e         db  0xff ; '.'
0000000000005c3f         db  0xff ; '.'
0000000000005c40         db  0x3c ; '<'
0000000000005c41         db  0xd5 ; '.'
0000000000005c42         db  0xff ; '.'
0000000000005c43         db  0xff ; '.'
0000000000005c44         db  0x3c ; '<'
0000000000005c45         db  0xd5 ; '.'
0000000000005c46         db  0xff ; '.'
0000000000005c47         db  0xff ; '.'
0000000000005c48         db  0x94 ; '.'
0000000000005c49         db  0xd4 ; '.'
0000000000005c4a         db  0xff ; '.'
0000000000005c4b         db  0xff ; '.'
0000000000005c4c         db  0x9c ; '.'
0000000000005c4d         db  0xd3 ; '.'
0000000000005c4e         db  0xff ; '.'
0000000000005c4f         db  0xff ; '.'
0000000000005c50         db  0x5c ; '\'
0000000000005c51         db  0xd3 ; '.'
0000000000005c52         db  0xff ; '.'
0000000000005c53         db  0xff ; '.'
0000000000005c54         db  0x24 ; '$'
0000000000005c55         db  0xd5 ; '.'
0000000000005c56         db  0xff ; '.'
0000000000005c57         db  0xff ; '.'
0000000000005c58         db  0x14 ; '.'
0000000000005c59         db  0xd5 ; '.'
0000000000005c5a         db  0xff ; '.'
0000000000005c5b         db  0xff ; '.'
0000000000005c5c         db  0x04 ; '.'
0000000000005c5d         db  0xd5 ; '.'
0000000000005c5e         db  0xff ; '.'
0000000000005c5f         db  0xff ; '.'
0000000000005c60         db  0xf4 ; '.'
0000000000005c61         db  0xd4 ; '.'
0000000000005c62         db  0xff ; '.'
0000000000005c63         db  0xff ; '.'
0000000000005c64         db  0x3c ; '<'
0000000000005c65         db  0xd5 ; '.'
0000000000005c66         db  0xff ; '.'
0000000000005c67         db  0xff ; '.'
0000000000005c68         db  0x3c ; '<'
0000000000005c69         db  0xd5 ; '.'
0000000000005c6a         db  0xff ; '.'
0000000000005c6b         db  0xff ; '.'
0000000000005c6c         db  0x3c ; '<'
0000000000005c6d         db  0xd5 ; '.'
0000000000005c6e         db  0xff ; '.'
0000000000005c6f         db  0xff ; '.'
0000000000005c70         db  0x3c ; '<'
0000000000005c71         db  0xd5 ; '.'
0000000000005c72         db  0xff ; '.'
0000000000005c73         db  0xff ; '.'
0000000000005c74         db  0x3c ; '<'
0000000000005c75         db  0xd5 ; '.'
0000000000005c76         db  0xff ; '.'
0000000000005c77         db  0xff ; '.'
0000000000005c78         db  0x3c ; '<'
0000000000005c79         db  0xd5 ; '.'
0000000000005c7a         db  0xff ; '.'
0000000000005c7b         db  0xff ; '.'
0000000000005c7c         db  0x3c ; '<'
0000000000005c7d         db  0xd5 ; '.'
0000000000005c7e         db  0xff ; '.'
0000000000005c7f         db  0xff ; '.'
0000000000005c80         db  0x3c ; '<'
0000000000005c81         db  0xd5 ; '.'
0000000000005c82         db  0xff ; '.'
0000000000005c83         db  0xff ; '.'
0000000000005c84         db  0x3c ; '<'
0000000000005c85         db  0xd5 ; '.'
0000000000005c86         db  0xff ; '.'
0000000000005c87         db  0xff ; '.'
0000000000005c88         db  0x3c ; '<'
0000000000005c89         db  0xd5 ; '.'
0000000000005c8a         db  0xff ; '.'
0000000000005c8b         db  0xff ; '.'
0000000000005c8c         db  0x3c ; '<'
0000000000005c8d         db  0xd5 ; '.'
0000000000005c8e         db  0xff ; '.'
0000000000005c8f         db  0xff ; '.'
0000000000005c90         db  0x3c ; '<'
0000000000005c91         db  0xd5 ; '.'
0000000000005c92         db  0xff ; '.'
0000000000005c93         db  0xff ; '.'
0000000000005c94         db  0x3c ; '<'
0000000000005c95         db  0xd5 ; '.'
0000000000005c96         db  0xff ; '.'
0000000000005c97         db  0xff ; '.'
0000000000005c98         db  0x3c ; '<'
0000000000005c99         db  0xd5 ; '.'
0000000000005c9a         db  0xff ; '.'
0000000000005c9b         db  0xff ; '.'
0000000000005c9c         db  0x3c ; '<'
0000000000005c9d         db  0xd5 ; '.'
0000000000005c9e         db  0xff ; '.'
0000000000005c9f         db  0xff ; '.'
0000000000005ca0         db  0x3c ; '<'
0000000000005ca1         db  0xd5 ; '.'
0000000000005ca2         db  0xff ; '.'
0000000000005ca3         db  0xff ; '.'
0000000000005ca4         db  0x3c ; '<'
0000000000005ca5         db  0xd5 ; '.'
0000000000005ca6         db  0xff ; '.'
0000000000005ca7         db  0xff ; '.'
0000000000005ca8         db  0x3c ; '<'
0000000000005ca9         db  0xd5 ; '.'
0000000000005caa         db  0xff ; '.'
0000000000005cab         db  0xff ; '.'
0000000000005cac         db  0xe4 ; '.'
0000000000005cad         db  0xd4 ; '.'
0000000000005cae         db  0xff ; '.'
0000000000005caf         db  0xff ; '.'
0000000000005cb0         db  0xd4 ; '.'
0000000000005cb1         db  0xd4 ; '.'
0000000000005cb2         db  0xff ; '.'
0000000000005cb3         db  0xff ; '.'
0000000000005cb4         db  0xd4 ; '.'
0000000000005cb5         db  0xd4 ; '.'
0000000000005cb6         db  0xff ; '.'
0000000000005cb7         db  0xff ; '.'
0000000000005cb8         db  0xa4 ; '.'
0000000000005cb9         db  0xd4 ; '.'
0000000000005cba         db  0xff ; '.'
0000000000005cbb         db  0xff ; '.'
0000000000005cbc         db  0xd4 ; '.'
0000000000005cbd         db  0xd4 ; '.'
0000000000005cbe         db  0xff ; '.'
0000000000005cbf         db  0xff ; '.'
0000000000005cc0         db  0x7c ; '|'
0000000000005cc1         db  0xd4 ; '.'
0000000000005cc2         db  0xff ; '.'
0000000000005cc3         db  0xff ; '.'
0000000000005cc4         db  0xd4 ; '.'
0000000000005cc5         db  0xd4 ; '.'
0000000000005cc6         db  0xff ; '.'
0000000000005cc7         db  0xff ; '.'
0000000000005cc8         db  0x37 ; '7'
0000000000005cc9         db  0xd3 ; '.'
0000000000005cca         db  0xff ; '.'
0000000000005ccb         db  0xff ; '.'
0000000000005ccc         db  0xd4 ; '.'
0000000000005ccd         db  0xd4 ; '.'
0000000000005cce         db  0xff ; '.'
0000000000005ccf         db  0xff ; '.'
0000000000005cd0         db  0xd4 ; '.'
0000000000005cd1         db  0xd4 ; '.'
0000000000005cd2         db  0xff ; '.'
0000000000005cd3         db  0xff ; '.'
0000000000005cd4         db  0xd4 ; '.'
0000000000005cd5         db  0xd4 ; '.'
0000000000005cd6         db  0xff ; '.'
0000000000005cd7         db  0xff ; '.'
0000000000005cd8         db  0x7c ; '|'
0000000000005cd9         db  0xd4 ; '.'
0000000000005cda         db  0xff ; '.'
0000000000005cdb         db  0xff ; '.'
0000000000005cdc         db  0x7c ; '|'
0000000000005cdd         db  0xd4 ; '.'
0000000000005cde         db  0xff ; '.'
0000000000005cdf         db  0xff ; '.'
0000000000005ce0         db  0x7c ; '|'
0000000000005ce1         db  0xd4 ; '.'
0000000000005ce2         db  0xff ; '.'
0000000000005ce3         db  0xff ; '.'
0000000000005ce4         db  0x7c ; '|'
0000000000005ce5         db  0xd4 ; '.'
0000000000005ce6         db  0xff ; '.'
0000000000005ce7         db  0xff ; '.'
0000000000005ce8         db  0x7c ; '|'
0000000000005ce9         db  0xd4 ; '.'
0000000000005cea         db  0xff ; '.'
0000000000005ceb         db  0xff ; '.'
0000000000005cec         db  0x7c ; '|'
0000000000005ced         db  0xd4 ; '.'
0000000000005cee         db  0xff ; '.'
0000000000005cef         db  0xff ; '.'
0000000000005cf0         db  0x7c ; '|'
0000000000005cf1         db  0xd4 ; '.'
0000000000005cf2         db  0xff ; '.'
0000000000005cf3         db  0xff ; '.'
0000000000005cf4         db  0x7c ; '|'
0000000000005cf5         db  0xd4 ; '.'
0000000000005cf6         db  0xff ; '.'
0000000000005cf7         db  0xff ; '.'
0000000000005cf8         db  0x7c ; '|'
0000000000005cf9         db  0xd4 ; '.'
0000000000005cfa         db  0xff ; '.'
0000000000005cfb         db  0xff ; '.'
0000000000005cfc         db  0x7c ; '|'
0000000000005cfd         db  0xd4 ; '.'
0000000000005cfe         db  0xff ; '.'
0000000000005cff         db  0xff ; '.'
0000000000005d00         db  0x7c ; '|'
0000000000005d01         db  0xd4 ; '.'
0000000000005d02         db  0xff ; '.'
0000000000005d03         db  0xff ; '.'
0000000000005d04         db  0x7c ; '|'
0000000000005d05         db  0xd4 ; '.'
0000000000005d06         db  0xff ; '.'
0000000000005d07         db  0xff ; '.'
0000000000005d08         db  0x7c ; '|'
0000000000005d09         db  0xd4 ; '.'
0000000000005d0a         db  0xff ; '.'
0000000000005d0b         db  0xff ; '.'
0000000000005d0c         db  0x7c ; '|'
0000000000005d0d         db  0xd4 ; '.'
0000000000005d0e         db  0xff ; '.'
0000000000005d0f         db  0xff ; '.'
0000000000005d10         db  0x7c ; '|'
0000000000005d11         db  0xd4 ; '.'
0000000000005d12         db  0xff ; '.'
0000000000005d13         db  0xff ; '.'
0000000000005d14         db  0x7c ; '|'
0000000000005d15         db  0xd4 ; '.'
0000000000005d16         db  0xff ; '.'
0000000000005d17         db  0xff ; '.'
0000000000005d18         db  0xd4 ; '.'
0000000000005d19         db  0xd4 ; '.'
0000000000005d1a         db  0xff ; '.'
0000000000005d1b         db  0xff ; '.'
0000000000005d1c         db  0xd4 ; '.'
0000000000005d1d         db  0xd4 ; '.'
0000000000005d1e         db  0xff ; '.'
0000000000005d1f         db  0xff ; '.'
0000000000005d20         db  0xd4 ; '.'
0000000000005d21         db  0xd4 ; '.'
0000000000005d22         db  0xff ; '.'
0000000000005d23         db  0xff ; '.'
0000000000005d24         db  0xd4 ; '.'
0000000000005d25         db  0xd4 ; '.'
0000000000005d26         db  0xff ; '.'
0000000000005d27         db  0xff ; '.'
0000000000005d28         db  0x07 ; '.'
0000000000005d29         db  0xd3 ; '.'
0000000000005d2a         db  0xff ; '.'
0000000000005d2b         db  0xff ; '.'
0000000000005d2c         db  0x3c ; '<'
0000000000005d2d         db  0xd5 ; '.'
0000000000005d2e         db  0xff ; '.'
0000000000005d2f         db  0xff ; '.'
0000000000005d30         db  0x7c ; '|'
0000000000005d31         db  0xd4 ; '.'
0000000000005d32         db  0xff ; '.'
0000000000005d33         db  0xff ; '.'
0000000000005d34         db  0x7c ; '|'
0000000000005d35         db  0xd4 ; '.'
0000000000005d36         db  0xff ; '.'
0000000000005d37         db  0xff ; '.'
0000000000005d38         db  0x7c ; '|'
0000000000005d39         db  0xd4 ; '.'
0000000000005d3a         db  0xff ; '.'
0000000000005d3b         db  0xff ; '.'
0000000000005d3c         db  0x7c ; '|'
0000000000005d3d         db  0xd4 ; '.'
0000000000005d3e         db  0xff ; '.'
0000000000005d3f         db  0xff ; '.'
0000000000005d40         db  0x7c ; '|'
0000000000005d41         db  0xd4 ; '.'
0000000000005d42         db  0xff ; '.'
0000000000005d43         db  0xff ; '.'
0000000000005d44         db  0x7c ; '|'
0000000000005d45         db  0xd4 ; '.'
0000000000005d46         db  0xff ; '.'
0000000000005d47         db  0xff ; '.'
0000000000005d48         db  0x7c ; '|'
0000000000005d49         db  0xd4 ; '.'
0000000000005d4a         db  0xff ; '.'
0000000000005d4b         db  0xff ; '.'
0000000000005d4c         db  0x7c ; '|'
0000000000005d4d         db  0xd4 ; '.'
0000000000005d4e         db  0xff ; '.'
0000000000005d4f         db  0xff ; '.'
0000000000005d50         db  0x7c ; '|'
0000000000005d51         db  0xd4 ; '.'
0000000000005d52         db  0xff ; '.'
0000000000005d53         db  0xff ; '.'
0000000000005d54         db  0x7c ; '|'
0000000000005d55         db  0xd4 ; '.'
0000000000005d56         db  0xff ; '.'
0000000000005d57         db  0xff ; '.'
0000000000005d58         db  0x7c ; '|'
0000000000005d59         db  0xd4 ; '.'
0000000000005d5a         db  0xff ; '.'
0000000000005d5b         db  0xff ; '.'
0000000000005d5c         db  0x7c ; '|'
0000000000005d5d         db  0xd4 ; '.'
0000000000005d5e         db  0xff ; '.'
0000000000005d5f         db  0xff ; '.'
0000000000005d60         db  0x7c ; '|'
0000000000005d61         db  0xd4 ; '.'
0000000000005d62         db  0xff ; '.'
0000000000005d63         db  0xff ; '.'
0000000000005d64         db  0x7c ; '|'
0000000000005d65         db  0xd4 ; '.'
0000000000005d66         db  0xff ; '.'
0000000000005d67         db  0xff ; '.'
0000000000005d68         db  0x7c ; '|'
0000000000005d69         db  0xd4 ; '.'
0000000000005d6a         db  0xff ; '.'
0000000000005d6b         db  0xff ; '.'
0000000000005d6c         db  0x7c ; '|'
0000000000005d6d         db  0xd4 ; '.'
0000000000005d6e         db  0xff ; '.'
0000000000005d6f         db  0xff ; '.'
0000000000005d70         db  0x7c ; '|'
0000000000005d71         db  0xd4 ; '.'
0000000000005d72         db  0xff ; '.'
0000000000005d73         db  0xff ; '.'
0000000000005d74         db  0x7c ; '|'
0000000000005d75         db  0xd4 ; '.'
0000000000005d76         db  0xff ; '.'
0000000000005d77         db  0xff ; '.'
0000000000005d78         db  0x7c ; '|'
0000000000005d79         db  0xd4 ; '.'
0000000000005d7a         db  0xff ; '.'
0000000000005d7b         db  0xff ; '.'
0000000000005d7c         db  0x7c ; '|'
0000000000005d7d         db  0xd4 ; '.'
0000000000005d7e         db  0xff ; '.'
0000000000005d7f         db  0xff ; '.'
0000000000005d80         db  0x7c ; '|'
0000000000005d81         db  0xd4 ; '.'
0000000000005d82         db  0xff ; '.'
0000000000005d83         db  0xff ; '.'
0000000000005d84         db  0x7c ; '|'
0000000000005d85         db  0xd4 ; '.'
0000000000005d86         db  0xff ; '.'
0000000000005d87         db  0xff ; '.'
0000000000005d88         db  0x7c ; '|'
0000000000005d89         db  0xd4 ; '.'
0000000000005d8a         db  0xff ; '.'
0000000000005d8b         db  0xff ; '.'
0000000000005d8c         db  0x7c ; '|'
0000000000005d8d         db  0xd4 ; '.'
0000000000005d8e         db  0xff ; '.'
0000000000005d8f         db  0xff ; '.'
0000000000005d90         db  0x7c ; '|'
0000000000005d91         db  0xd4 ; '.'
0000000000005d92         db  0xff ; '.'
0000000000005d93         db  0xff ; '.'
0000000000005d94         db  0x7c ; '|'
0000000000005d95         db  0xd4 ; '.'
0000000000005d96         db  0xff ; '.'
0000000000005d97         db  0xff ; '.'
0000000000005d98         db  0xd4 ; '.'
0000000000005d99         db  0xd4 ; '.'
0000000000005d9a         db  0xff ; '.'
0000000000005d9b         db  0xff ; '.'
0000000000005d9c         db  0xac ; '.'
0000000000005d9d         db  0xd3 ; '.'
0000000000005d9e         db  0xff ; '.'
0000000000005d9f         db  0xff ; '.'
0000000000005da0         db  0x7c ; '|'
0000000000005da1         db  0xd4 ; '.'
0000000000005da2         db  0xff ; '.'
0000000000005da3         db  0xff ; '.'
0000000000005da4         db  0xd4 ; '.'
0000000000005da5         db  0xd4 ; '.'
0000000000005da6         db  0xff ; '.'
0000000000005da7         db  0xff ; '.'
0000000000005da8         db  0x7c ; '|'
0000000000005da9         db  0xd4 ; '.'
0000000000005daa         db  0xff ; '.'
0000000000005dab         db  0xff ; '.'
0000000000005dac         db  0xd4 ; '.'
0000000000005dad         db  0xd4 ; '.'
0000000000005dae         db  0xff ; '.'
0000000000005daf         db  0xff ; '.'
0000000000005db0         db  0x7c ; '|'
0000000000005db1         db  0xd4 ; '.'
0000000000005db2         db  0xff ; '.'
0000000000005db3         db  0xff ; '.'
0000000000005db4         db  0x7c ; '|'
0000000000005db5         db  0xd4 ; '.'
0000000000005db6         db  0xff ; '.'
0000000000005db7         db  0xff ; '.'
0000000000005db8         db  0x7c ; '|'
0000000000005db9         db  0xd4 ; '.'
0000000000005dba         db  0xff ; '.'
0000000000005dbb         db  0xff ; '.'
0000000000005dbc         db  0x7c ; '|'
0000000000005dbd         db  0xd4 ; '.'
0000000000005dbe         db  0xff ; '.'
0000000000005dbf         db  0xff ; '.'
0000000000005dc0         db  0x7c ; '|'
0000000000005dc1         db  0xd4 ; '.'
0000000000005dc2         db  0xff ; '.'
0000000000005dc3         db  0xff ; '.'
0000000000005dc4         db  0x7c ; '|'
0000000000005dc5         db  0xd4 ; '.'
0000000000005dc6         db  0xff ; '.'
0000000000005dc7         db  0xff ; '.'
0000000000005dc8         db  0x7c ; '|'
0000000000005dc9         db  0xd4 ; '.'
0000000000005dca         db  0xff ; '.'
0000000000005dcb         db  0xff ; '.'
0000000000005dcc         db  0x7c ; '|'
0000000000005dcd         db  0xd4 ; '.'
0000000000005dce         db  0xff ; '.'
0000000000005dcf         db  0xff ; '.'
0000000000005dd0         db  0x7c ; '|'
0000000000005dd1         db  0xd4 ; '.'
0000000000005dd2         db  0xff ; '.'
0000000000005dd3         db  0xff ; '.'
0000000000005dd4         db  0x7c ; '|'
0000000000005dd5         db  0xd4 ; '.'
0000000000005dd6         db  0xff ; '.'
0000000000005dd7         db  0xff ; '.'
0000000000005dd8         db  0x7c ; '|'
0000000000005dd9         db  0xd4 ; '.'
0000000000005dda         db  0xff ; '.'
0000000000005ddb         db  0xff ; '.'
0000000000005ddc         db  0x7c ; '|'
0000000000005ddd         db  0xd4 ; '.'
0000000000005dde         db  0xff ; '.'
0000000000005ddf         db  0xff ; '.'
0000000000005de0         db  0x7c ; '|'
0000000000005de1         db  0xd4 ; '.'
0000000000005de2         db  0xff ; '.'
0000000000005de3         db  0xff ; '.'
0000000000005de4         db  0x7c ; '|'
0000000000005de5         db  0xd4 ; '.'
0000000000005de6         db  0xff ; '.'
0000000000005de7         db  0xff ; '.'
0000000000005de8         db  0x7c ; '|'
0000000000005de9         db  0xd4 ; '.'
0000000000005dea         db  0xff ; '.'
0000000000005deb         db  0xff ; '.'
0000000000005dec         db  0x7c ; '|'
0000000000005ded         db  0xd4 ; '.'
0000000000005dee         db  0xff ; '.'
0000000000005def         db  0xff ; '.'
0000000000005df0         db  0x7c ; '|'
0000000000005df1         db  0xd4 ; '.'
0000000000005df2         db  0xff ; '.'
0000000000005df3         db  0xff ; '.'
0000000000005df4         db  0x7c ; '|'
0000000000005df5         db  0xd4 ; '.'
0000000000005df6         db  0xff ; '.'
0000000000005df7         db  0xff ; '.'
0000000000005df8         db  0x7c ; '|'
0000000000005df9         db  0xd4 ; '.'
0000000000005dfa         db  0xff ; '.'
0000000000005dfb         db  0xff ; '.'
0000000000005dfc         db  0x7c ; '|'
0000000000005dfd         db  0xd4 ; '.'
0000000000005dfe         db  0xff ; '.'
0000000000005dff         db  0xff ; '.'
0000000000005e00         db  0x7c ; '|'
0000000000005e01         db  0xd4 ; '.'
0000000000005e02         db  0xff ; '.'
0000000000005e03         db  0xff ; '.'
0000000000005e04         db  0x7c ; '|'
0000000000005e05         db  0xd4 ; '.'
0000000000005e06         db  0xff ; '.'
0000000000005e07         db  0xff ; '.'
0000000000005e08         db  0x7c ; '|'
0000000000005e09         db  0xd4 ; '.'
0000000000005e0a         db  0xff ; '.'
0000000000005e0b         db  0xff ; '.'
0000000000005e0c         db  0x7c ; '|'
0000000000005e0d         db  0xd4 ; '.'
0000000000005e0e         db  0xff ; '.'
0000000000005e0f         db  0xff ; '.'
0000000000005e10         db  0x7c ; '|'
0000000000005e11         db  0xd4 ; '.'
0000000000005e12         db  0xff ; '.'
0000000000005e13         db  0xff ; '.'
0000000000005e14         db  0x7c ; '|'
0000000000005e15         db  0xd4 ; '.'
0000000000005e16         db  0xff ; '.'
0000000000005e17         db  0xff ; '.'
0000000000005e18         db  0x37 ; '7'
0000000000005e19         db  0xd2 ; '.'
0000000000005e1a         db  0xff ; '.'
0000000000005e1b         db  0xff ; '.'
0000000000005e1c         db  0xd4 ; '.'
0000000000005e1d         db  0xd4 ; '.'
0000000000005e1e         db  0xff ; '.'
0000000000005e1f         db  0xff ; '.'
0000000000005e20         db  0x37 ; '7'
0000000000005e21         db  0xd2 ; '.'
0000000000005e22         db  0xff ; '.'
0000000000005e23         db  0xff ; '.'
0000000000005e24         db  0xa4 ; '.'
0000000000005e25         db  0xd4 ; '.'
0000000000005e26         db  0xff ; '.'
0000000000005e27         db  0xff ; '.'
0000000000005e28         db  0x28 ; '('                                         ; DATA XREF=sub_3150+137
0000000000005e29         db  0xd4 ; '.'
0000000000005e2a         db  0xff ; '.'
0000000000005e2b         db  0xff ; '.'
0000000000005e2c         db  0x38 ; '8'
0000000000005e2d         db  0xd3 ; '.'
0000000000005e2e         db  0xff ; '.'
0000000000005e2f         db  0xff ; '.'
0000000000005e30         db  0x38 ; '8'
0000000000005e31         db  0xd3 ; '.'
0000000000005e32         db  0xff ; '.'
0000000000005e33         db  0xff ; '.'
0000000000005e34         db  0x38 ; '8'
0000000000005e35         db  0xd3 ; '.'
0000000000005e36         db  0xff ; '.'
0000000000005e37         db  0xff ; '.'
0000000000005e38         db  0x38 ; '8'
0000000000005e39         db  0xd3 ; '.'
0000000000005e3a         db  0xff ; '.'
0000000000005e3b         db  0xff ; '.'
0000000000005e3c         db  0x38 ; '8'
0000000000005e3d         db  0xd3 ; '.'
0000000000005e3e         db  0xff ; '.'
0000000000005e3f         db  0xff ; '.'
0000000000005e40         db  0x38 ; '8'
0000000000005e41         db  0xd3 ; '.'
0000000000005e42         db  0xff ; '.'
0000000000005e43         db  0xff ; '.'
0000000000005e44         db  0x18 ; '.'
0000000000005e45         db  0xd4 ; '.'
0000000000005e46         db  0xff ; '.'
0000000000005e47         db  0xff ; '.'
0000000000005e48         db  0x68 ; 'h'
0000000000005e49         db  0xd5 ; '.'
0000000000005e4a         db  0xff ; '.'
0000000000005e4b         db  0xff ; '.'
0000000000005e4c         db  0x50 ; 'P'
0000000000005e4d         db  0xd5 ; '.'
0000000000005e4e         db  0xff ; '.'
0000000000005e4f         db  0xff ; '.'
0000000000005e50         db  0x00 ; '.'
0000000000005e51         db  0xd4 ; '.'
0000000000005e52         db  0xff ; '.'
0000000000005e53         db  0xff ; '.'
0000000000005e54         db  0x40 ; '@'
0000000000005e55         db  0xd5 ; '.'
0000000000005e56         db  0xff ; '.'
0000000000005e57         db  0xff ; '.'
0000000000005e58         db  0xe8 ; '.'
0000000000005e59         db  0xd3 ; '.'
0000000000005e5a         db  0xff ; '.'
0000000000005e5b         db  0xff ; '.'
0000000000005e5c         db  0x28 ; '('
0000000000005e5d         db  0xd5 ; '.'
0000000000005e5e         db  0xff ; '.'
0000000000005e5f         db  0xff ; '.'
0000000000005e60         db  0x38 ; '8'
0000000000005e61         db  0xd3 ; '.'
0000000000005e62         db  0xff ; '.'
0000000000005e63         db  0xff ; '.'
0000000000005e64         db  0x38 ; '8'
0000000000005e65         db  0xd3 ; '.'
0000000000005e66         db  0xff ; '.'
0000000000005e67         db  0xff ; '.'
0000000000005e68         db  0x38 ; '8'
0000000000005e69         db  0xd3 ; '.'
0000000000005e6a         db  0xff ; '.'
0000000000005e6b         db  0xff ; '.'
0000000000005e6c         db  0x38 ; '8'
0000000000005e6d         db  0xd3 ; '.'
0000000000005e6e         db  0xff ; '.'
0000000000005e6f         db  0xff ; '.'
0000000000005e70         db  0x38 ; '8'
0000000000005e71         db  0xd3 ; '.'
0000000000005e72         db  0xff ; '.'
0000000000005e73         db  0xff ; '.'
0000000000005e74         db  0x38 ; '8'
0000000000005e75         db  0xd3 ; '.'
0000000000005e76         db  0xff ; '.'
0000000000005e77         db  0xff ; '.'
0000000000005e78         db  0x38 ; '8'
0000000000005e79         db  0xd3 ; '.'
0000000000005e7a         db  0xff ; '.'
0000000000005e7b         db  0xff ; '.'
0000000000005e7c         db  0x38 ; '8'
0000000000005e7d         db  0xd3 ; '.'
0000000000005e7e         db  0xff ; '.'
0000000000005e7f         db  0xff ; '.'
0000000000005e80         db  0x38 ; '8'
0000000000005e81         db  0xd3 ; '.'
0000000000005e82         db  0xff ; '.'
0000000000005e83         db  0xff ; '.'
0000000000005e84         db  0x38 ; '8'
0000000000005e85         db  0xd3 ; '.'
0000000000005e86         db  0xff ; '.'
0000000000005e87         db  0xff ; '.'
0000000000005e88         db  0x38 ; '8'
0000000000005e89         db  0xd3 ; '.'
0000000000005e8a         db  0xff ; '.'
0000000000005e8b         db  0xff ; '.'
0000000000005e8c         db  0x38 ; '8'
0000000000005e8d         db  0xd3 ; '.'
0000000000005e8e         db  0xff ; '.'
0000000000005e8f         db  0xff ; '.'
0000000000005e90         db  0x38 ; '8'
0000000000005e91         db  0xd3 ; '.'
0000000000005e92         db  0xff ; '.'
0000000000005e93         db  0xff ; '.'
0000000000005e94         db  0x38 ; '8'
0000000000005e95         db  0xd3 ; '.'
0000000000005e96         db  0xff ; '.'
0000000000005e97         db  0xff ; '.'
0000000000005e98         db  0x38 ; '8'
0000000000005e99         db  0xd3 ; '.'
0000000000005e9a         db  0xff ; '.'
0000000000005e9b         db  0xff ; '.'
0000000000005e9c         db  0x38 ; '8'
0000000000005e9d         db  0xd3 ; '.'
0000000000005e9e         db  0xff ; '.'
0000000000005e9f         db  0xff ; '.'
0000000000005ea0         db  0x38 ; '8'
0000000000005ea1         db  0xd3 ; '.'
0000000000005ea2         db  0xff ; '.'
0000000000005ea3         db  0xff ; '.'
0000000000005ea4         db  0x38 ; '8'
0000000000005ea5         db  0xd3 ; '.'
0000000000005ea6         db  0xff ; '.'
0000000000005ea7         db  0xff ; '.'
0000000000005ea8         db  0x10 ; '.'
0000000000005ea9         db  0xd5 ; '.'
0000000000005eaa         db  0xff ; '.'
0000000000005eab         db  0xff ; '.'
0000000000005eac         db  0xf8 ; '.'
0000000000005ead         db  0xd4 ; '.'
0000000000005eae         db  0xff ; '.'
0000000000005eaf         db  0xff ; '.'
0000000000005eb0         db  0xf8 ; '.'
0000000000005eb1         db  0xd4 ; '.'
0000000000005eb2         db  0xff ; '.'
0000000000005eb3         db  0xff ; '.'
0000000000005eb4         db  0xe0 ; '.'
0000000000005eb5         db  0xd4 ; '.'
0000000000005eb6         db  0xff ; '.'
0000000000005eb7         db  0xff ; '.'
0000000000005eb8         db  0xf8 ; '.'
0000000000005eb9         db  0xd4 ; '.'
0000000000005eba         db  0xff ; '.'
0000000000005ebb         db  0xff ; '.'
0000000000005ebc         db  0xc8 ; '.'
0000000000005ebd         db  0xd4 ; '.'
0000000000005ebe         db  0xff ; '.'
0000000000005ebf         db  0xff ; '.'
0000000000005ec0         db  0xf8 ; '.'
0000000000005ec1         db  0xd4 ; '.'
0000000000005ec2         db  0xff ; '.'
0000000000005ec3         db  0xff ; '.'
0000000000005ec4         db  0x38 ; '8'
0000000000005ec5         db  0xd1 ; '.'
0000000000005ec6         db  0xff ; '.'
0000000000005ec7         db  0xff ; '.'
0000000000005ec8         db  0xf8 ; '.'
0000000000005ec9         db  0xd4 ; '.'
0000000000005eca         db  0xff ; '.'
0000000000005ecb         db  0xff ; '.'
0000000000005ecc         db  0xf8 ; '.'
0000000000005ecd         db  0xd4 ; '.'
0000000000005ece         db  0xff ; '.'
0000000000005ecf         db  0xff ; '.'
0000000000005ed0         db  0xf8 ; '.'
0000000000005ed1         db  0xd4 ; '.'
0000000000005ed2         db  0xff ; '.'
0000000000005ed3         db  0xff ; '.'
0000000000005ed4         db  0xc8 ; '.'
0000000000005ed5         db  0xd4 ; '.'
0000000000005ed6         db  0xff ; '.'
0000000000005ed7         db  0xff ; '.'
0000000000005ed8         db  0xc8 ; '.'
0000000000005ed9         db  0xd4 ; '.'
0000000000005eda         db  0xff ; '.'
0000000000005edb         db  0xff ; '.'
0000000000005edc         db  0xc8 ; '.'
0000000000005edd         db  0xd4 ; '.'
0000000000005ede         db  0xff ; '.'
0000000000005edf         db  0xff ; '.'
0000000000005ee0         db  0xc8 ; '.'
0000000000005ee1         db  0xd4 ; '.'
0000000000005ee2         db  0xff ; '.'
0000000000005ee3         db  0xff ; '.'
0000000000005ee4         db  0xc8 ; '.'
0000000000005ee5         db  0xd4 ; '.'
0000000000005ee6         db  0xff ; '.'
0000000000005ee7         db  0xff ; '.'
0000000000005ee8         db  0xc8 ; '.'
0000000000005ee9         db  0xd4 ; '.'
0000000000005eea         db  0xff ; '.'
0000000000005eeb         db  0xff ; '.'
0000000000005eec         db  0xc8 ; '.'
0000000000005eed         db  0xd4 ; '.'
0000000000005eee         db  0xff ; '.'
0000000000005eef         db  0xff ; '.'
0000000000005ef0         db  0xc8 ; '.'
0000000000005ef1         db  0xd4 ; '.'
0000000000005ef2         db  0xff ; '.'
0000000000005ef3         db  0xff ; '.'
0000000000005ef4         db  0xc8 ; '.'
0000000000005ef5         db  0xd4 ; '.'
0000000000005ef6         db  0xff ; '.'
0000000000005ef7         db  0xff ; '.'
0000000000005ef8         db  0xc8 ; '.'
0000000000005ef9         db  0xd4 ; '.'
0000000000005efa         db  0xff ; '.'
0000000000005efb         db  0xff ; '.'
0000000000005efc         db  0xc8 ; '.'
0000000000005efd         db  0xd4 ; '.'
0000000000005efe         db  0xff ; '.'
0000000000005eff         db  0xff ; '.'
0000000000005f00         db  0xc8 ; '.'
0000000000005f01         db  0xd4 ; '.'
0000000000005f02         db  0xff ; '.'
0000000000005f03         db  0xff ; '.'
0000000000005f04         db  0xc8 ; '.'
0000000000005f05         db  0xd4 ; '.'
0000000000005f06         db  0xff ; '.'
0000000000005f07         db  0xff ; '.'
0000000000005f08         db  0xc8 ; '.'
0000000000005f09         db  0xd4 ; '.'
0000000000005f0a         db  0xff ; '.'
0000000000005f0b         db  0xff ; '.'
0000000000005f0c         db  0xc8 ; '.'
0000000000005f0d         db  0xd4 ; '.'
0000000000005f0e         db  0xff ; '.'
0000000000005f0f         db  0xff ; '.'
0000000000005f10         db  0xc8 ; '.'
0000000000005f11         db  0xd4 ; '.'
0000000000005f12         db  0xff ; '.'
0000000000005f13         db  0xff ; '.'
0000000000005f14         db  0xf8 ; '.'
0000000000005f15         db  0xd4 ; '.'
0000000000005f16         db  0xff ; '.'
0000000000005f17         db  0xff ; '.'
0000000000005f18         db  0xf8 ; '.'
0000000000005f19         db  0xd4 ; '.'
0000000000005f1a         db  0xff ; '.'
0000000000005f1b         db  0xff ; '.'
0000000000005f1c         db  0xf8 ; '.'
0000000000005f1d         db  0xd4 ; '.'
0000000000005f1e         db  0xff ; '.'
0000000000005f1f         db  0xff ; '.'
0000000000005f20         db  0xf8 ; '.'
0000000000005f21         db  0xd4 ; '.'
0000000000005f22         db  0xff ; '.'
0000000000005f23         db  0xff ; '.'
0000000000005f24         db  0x08 ; '.'
0000000000005f25         db  0xd1 ; '.'
0000000000005f26         db  0xff ; '.'
0000000000005f27         db  0xff ; '.'
0000000000005f28         db  0x38 ; '8'
0000000000005f29         db  0xd3 ; '.'
0000000000005f2a         db  0xff ; '.'
0000000000005f2b         db  0xff ; '.'
0000000000005f2c         db  0xc8 ; '.'
0000000000005f2d         db  0xd4 ; '.'
0000000000005f2e         db  0xff ; '.'
0000000000005f2f         db  0xff ; '.'
0000000000005f30         db  0xc8 ; '.'
0000000000005f31         db  0xd4 ; '.'
0000000000005f32         db  0xff ; '.'
0000000000005f33         db  0xff ; '.'
0000000000005f34         db  0xc8 ; '.'
0000000000005f35         db  0xd4 ; '.'
0000000000005f36         db  0xff ; '.'
0000000000005f37         db  0xff ; '.'
0000000000005f38         db  0xc8 ; '.'
0000000000005f39         db  0xd4 ; '.'
0000000000005f3a         db  0xff ; '.'
0000000000005f3b         db  0xff ; '.'
0000000000005f3c         db  0xc8 ; '.'
0000000000005f3d         db  0xd4 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0xc8 ; '.'
0000000000005f41         db  0xd4 ; '.'
0000000000005f42         db  0xff ; '.'
0000000000005f43         db  0xff ; '.'
0000000000005f44         db  0xc8 ; '.'
0000000000005f45         db  0xd4 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0xc8 ; '.'
0000000000005f49         db  0xd4 ; '.'
0000000000005f4a         db  0xff ; '.'
0000000000005f4b         db  0xff ; '.'
0000000000005f4c         db  0xc8 ; '.'
0000000000005f4d         db  0xd4 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0xc8 ; '.'
0000000000005f51         db  0xd4 ; '.'
0000000000005f52         db  0xff ; '.'
0000000000005f53         db  0xff ; '.'
0000000000005f54         db  0xc8 ; '.'
0000000000005f55         db  0xd4 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0xc8 ; '.'
0000000000005f59         db  0xd4 ; '.'
0000000000005f5a         db  0xff ; '.'
0000000000005f5b         db  0xff ; '.'
0000000000005f5c         db  0xc8 ; '.'
0000000000005f5d         db  0xd4 ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0xc8 ; '.'
0000000000005f61         db  0xd4 ; '.'
0000000000005f62         db  0xff ; '.'
0000000000005f63         db  0xff ; '.'
0000000000005f64         db  0xc8 ; '.'
0000000000005f65         db  0xd4 ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0xc8 ; '.'
0000000000005f69         db  0xd4 ; '.'
0000000000005f6a         db  0xff ; '.'
0000000000005f6b         db  0xff ; '.'
0000000000005f6c         db  0xc8 ; '.'
0000000000005f6d         db  0xd4 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0xc8 ; '.'
0000000000005f71         db  0xd4 ; '.'
0000000000005f72         db  0xff ; '.'
0000000000005f73         db  0xff ; '.'
0000000000005f74         db  0xc8 ; '.'
0000000000005f75         db  0xd4 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0xc8 ; '.'
0000000000005f79         db  0xd4 ; '.'
0000000000005f7a         db  0xff ; '.'
0000000000005f7b         db  0xff ; '.'
0000000000005f7c         db  0xc8 ; '.'
0000000000005f7d         db  0xd4 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0xc8 ; '.'
0000000000005f81         db  0xd4 ; '.'
0000000000005f82         db  0xff ; '.'
0000000000005f83         db  0xff ; '.'
0000000000005f84         db  0xc8 ; '.'
0000000000005f85         db  0xd4 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0xc8 ; '.'
0000000000005f89         db  0xd4 ; '.'
0000000000005f8a         db  0xff ; '.'
0000000000005f8b         db  0xff ; '.'
0000000000005f8c         db  0xc8 ; '.'
0000000000005f8d         db  0xd4 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0xc8 ; '.'
0000000000005f91         db  0xd4 ; '.'
0000000000005f92         db  0xff ; '.'
0000000000005f93         db  0xff ; '.'
0000000000005f94         db  0xf8 ; '.'
0000000000005f95         db  0xd4 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0xc8 ; '.'
0000000000005f99         db  0xd3 ; '.'
0000000000005f9a         db  0xff ; '.'
0000000000005f9b         db  0xff ; '.'
0000000000005f9c         db  0xc8 ; '.'
0000000000005f9d         db  0xd4 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0xf8 ; '.'
0000000000005fa1         db  0xd4 ; '.'
0000000000005fa2         db  0xff ; '.'
0000000000005fa3         db  0xff ; '.'
0000000000005fa4         db  0xc8 ; '.'
0000000000005fa5         db  0xd4 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0xf8 ; '.'
0000000000005fa9         db  0xd4 ; '.'
0000000000005faa         db  0xff ; '.'
0000000000005fab         db  0xff ; '.'
0000000000005fac         db  0xc8 ; '.'
0000000000005fad         db  0xd4 ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0xc8 ; '.'
0000000000005fb1         db  0xd4 ; '.'
0000000000005fb2         db  0xff ; '.'
0000000000005fb3         db  0xff ; '.'
0000000000005fb4         db  0xc8 ; '.'
0000000000005fb5         db  0xd4 ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0xc8 ; '.'
0000000000005fb9         db  0xd4 ; '.'
0000000000005fba         db  0xff ; '.'
0000000000005fbb         db  0xff ; '.'
0000000000005fbc         db  0xc8 ; '.'
0000000000005fbd         db  0xd4 ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0xc8 ; '.'
0000000000005fc1         db  0xd4 ; '.'
0000000000005fc2         db  0xff ; '.'
0000000000005fc3         db  0xff ; '.'
0000000000005fc4         db  0xc8 ; '.'
0000000000005fc5         db  0xd4 ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0xc8 ; '.'
0000000000005fc9         db  0xd4 ; '.'
0000000000005fca         db  0xff ; '.'
0000000000005fcb         db  0xff ; '.'
0000000000005fcc         db  0xc8 ; '.'
0000000000005fcd         db  0xd4 ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0xc8 ; '.'
0000000000005fd1         db  0xd4 ; '.'
0000000000005fd2         db  0xff ; '.'
0000000000005fd3         db  0xff ; '.'
0000000000005fd4         db  0xc8 ; '.'
0000000000005fd5         db  0xd4 ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0xc8 ; '.'
0000000000005fd9         db  0xd4 ; '.'
0000000000005fda         db  0xff ; '.'
0000000000005fdb         db  0xff ; '.'
0000000000005fdc         db  0xc8 ; '.'
0000000000005fdd         db  0xd4 ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0xc8 ; '.'
0000000000005fe1         db  0xd4 ; '.'
0000000000005fe2         db  0xff ; '.'
0000000000005fe3         db  0xff ; '.'
0000000000005fe4         db  0xc8 ; '.'
0000000000005fe5         db  0xd4 ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0xc8 ; '.'
0000000000005fe9         db  0xd4 ; '.'
0000000000005fea         db  0xff ; '.'
0000000000005feb         db  0xff ; '.'
0000000000005fec         db  0xc8 ; '.'
0000000000005fed         db  0xd4 ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0xc8 ; '.'
0000000000005ff1         db  0xd4 ; '.'
0000000000005ff2         db  0xff ; '.'
0000000000005ff3         db  0xff ; '.'
0000000000005ff4         db  0xc8 ; '.'
0000000000005ff5         db  0xd4 ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0xc8 ; '.'
0000000000005ff9         db  0xd4 ; '.'
0000000000005ffa         db  0xff ; '.'
0000000000005ffb         db  0xff ; '.'
0000000000005ffc         db  0xc8 ; '.'
0000000000005ffd         db  0xd4 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0xc8 ; '.'
0000000000006001         db  0xd4 ; '.'
0000000000006002         db  0xff ; '.'
0000000000006003         db  0xff ; '.'
0000000000006004         db  0xc8 ; '.'
0000000000006005         db  0xd4 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0xc8 ; '.'
0000000000006009         db  0xd4 ; '.'
000000000000600a         db  0xff ; '.'
000000000000600b         db  0xff ; '.'
000000000000600c         db  0xc8 ; '.'
000000000000600d         db  0xd4 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0xc8 ; '.'
0000000000006011         db  0xd4 ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0x38 ; '8'
0000000000006015         db  0xd0 ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0xf8 ; '.'
0000000000006019         db  0xd4 ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0x38 ; '8'
000000000000601d         db  0xd0 ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0xe0 ; '.'
0000000000006021         db  0xd4 ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0x00 ; '.'
0000000000006025         db  0x00 ; '.'
0000000000006026         db  0x00 ; '.'
0000000000006027         db  0x00 ; '.'
0000000000006028         db  0x00 ; '.'
0000000000006029         db  0x00 ; '.'
000000000000602a         db  0x00 ; '.'
000000000000602b         db  0x00 ; '.'
000000000000602c         db  0x00 ; '.'
000000000000602d         db  0x00 ; '.'
000000000000602e         db  0x00 ; '.'
000000000000602f         db  0x00 ; '.'
0000000000006030         db  0x00 ; '.'
0000000000006031         db  0x00 ; '.'
0000000000006032         db  0x00 ; '.'
0000000000006033         db  0x00 ; '.'
0000000000006034         db  0x00 ; '.'
0000000000006035         db  0x00 ; '.'
0000000000006036         db  0x00 ; '.'
0000000000006037         db  0x00 ; '.'
0000000000006038         db  0x00 ; '.'
0000000000006039         db  0x00 ; '.'
000000000000603a         db  0x00 ; '.'
000000000000603b         db  0x00 ; '.'
000000000000603c         db  0x00 ; '.'
000000000000603d         db  0x00 ; '.'
000000000000603e         db  0x00 ; '.'
000000000000603f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006040         db  0x00 ; '.'
0000000000006041         db  0x00 ; '.'
0000000000006042         db  0x00 ; '.'
0000000000006043         db  0x00 ; '.'
0000000000006044         db  0x01 ; '.'
0000000000006045         db  0x00 ; '.'
0000000000006046         db  0x00 ; '.'
0000000000006047         db  0x00 ; '.'
0000000000006048         db  0x02 ; '.'
0000000000006049         db  0x00 ; '.'
000000000000604a         db  0x00 ; '.'
000000000000604b         db  0x00 ; '.'
000000000000604c         db  0x03 ; '.'
000000000000604d         db  0x00 ; '.'
000000000000604e         db  0x00 ; '.'
000000000000604f         db  0x00 ; '.'
0000000000006050         db  0x04 ; '.'
0000000000006051         db  0x00 ; '.'
0000000000006052         db  0x00 ; '.'
0000000000006053         db  0x00 ; '.'
0000000000006054         db  0x05 ; '.'
0000000000006055         db  0x00 ; '.'
0000000000006056         db  0x00 ; '.'
0000000000006057         db  0x00 ; '.'
0000000000006058         db  0x06 ; '.'
0000000000006059         db  0x00 ; '.'
000000000000605a         db  0x00 ; '.'
000000000000605b         db  0x00 ; '.'
000000000000605c         db  0x07 ; '.'
000000000000605d         db  0x00 ; '.'
000000000000605e         db  0x00 ; '.'
000000000000605f         db  0x00 ; '.'
0000000000006060         db  0x08 ; '.'
0000000000006061         db  0x00 ; '.'
0000000000006062         db  0x00 ; '.'
0000000000006063         db  0x00 ; '.'
0000000000006064         db  0x09 ; '.'
0000000000006065         db  0x00 ; '.'
0000000000006066         db  0x00 ; '.'
0000000000006067         db  0x00 ; '.'
                     aSSSn:
0000000000006068         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006074         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000607b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000607c         db  0x43 ; 'C'
000000000000607d         db  0x29 ; ')'
000000000000607e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000607f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000608f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000060a6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000060c2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000060d7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000060ed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006101         align      8
                     aNlicenseGplv3G:
0000000000006108         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000061d4         align      8
                     aWrittenBySSSna:
00000000000061d8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_61f8:        // aWrittenBySSSns
00000000000061f8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000621c         align      32
                     aWrittenBySSSns_6220:        // aWrittenBySSSns
0000000000006220         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6248:        // aWrittenBySSSns
0000000000006248         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006274         align      8
                     aWrittenBySSSns_6278:        // aWrittenBySSSns
0000000000006278         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000062a8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000062dc         align      32
                     aWrittenBySSSns_62e0:        // aWrittenBySSSns
00000000000062e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000631c         align      32
                     aGeneralHelpUsi:
0000000000006320         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006361         align      8
                     switch_table_6368:        // switch_table
0000000000006368         dd         version_etc_arn.loc_49f6-switch_table_6368, version_etc_arn.loc_4a88-switch_table_6368, version_etc_arn.loc_4ac8-switch_table_6368, version_etc_arn.loc_4b10-switch_table_6368 ; switch table used at 0x4974 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006378         dd         version_etc_arn.loc_4b60-switch_table_6368, version_etc_arn.loc_4bb8-switch_table_6368, version_etc_arn.loc_4be8-switch_table_6368, version_etc_arn.loc_4c50-switch_table_6368
0000000000006388         dd         version_etc_arn.loc_4980-switch_table_6368, version_etc_arn.loc_4a30-switch_table_6368
0000000000006390         align      32
                     version_etc_copyright:
00000000000063a0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000063cf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
00000000000063e0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000063e1         db  0x00 ; '.'
                     aPosix:
00000000000063e2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000063e8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000063ee         db  0x00 ; '.'
00000000000063ef         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x63f0; 0x6664[ (628 bytes)
        ; File offset : [25584; 26212[ (628 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000063f0         db  0x01 ; '.'
00000000000063f1         db  0x1b ; '.'
00000000000063f2         db  0x03 ; '.'
00000000000063f3         db  0x3b ; ';'
00000000000063f4         db  0x74 ; 't'
00000000000063f5         db  0x02 ; '.'
00000000000063f6         db  0x00 ; '.'
00000000000063f7         db  0x00 ; '.'
00000000000063f8         db  0x4d ; 'M'
00000000000063f9         db  0x00 ; '.'
00000000000063fa         db  0x00 ; '.'
00000000000063fb         db  0x00 ; '.'
00000000000063fc         db  0x80 ; '.'
00000000000063fd         db  0xb0 ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0xc0 ; '.'
0000000000006401         db  0x02 ; '.'
0000000000006402         db  0x00 ; '.'
0000000000006403         db  0x00 ; '.'
0000000000006404         db  0xa0 ; '.'
0000000000006405         db  0xb3 ; '.'
0000000000006406         db  0xff ; '.'
0000000000006407         db  0xff ; '.'
0000000000006408         db  0xe8 ; '.'
0000000000006409         db  0x02 ; '.'
000000000000640a         db  0x00 ; '.'
000000000000640b         db  0x00 ; '.'
000000000000640c         db  0xb0 ; '.'
000000000000640d         db  0xb3 ; '.'
000000000000640e         db  0xff ; '.'
000000000000640f         db  0xff ; '.'
0000000000006410         db  0x14 ; '.'
0000000000006411         db  0x03 ; '.'
0000000000006412         db  0x00 ; '.'
0000000000006413         db  0x00 ; '.'
0000000000006414         db  0xe0 ; '.'
0000000000006415         db  0xb3 ; '.'
0000000000006416         db  0xff ; '.'
0000000000006417         db  0xff ; '.'
0000000000006418         db  0x58 ; 'X'
0000000000006419         db  0x03 ; '.'
000000000000641a         db  0x00 ; '.'
000000000000641b         db  0x00 ; '.'
000000000000641c         db  0xf0 ; '.'
000000000000641d         db  0xbf ; '.'
000000000000641e         db  0xff ; '.'
000000000000641f         db  0xff ; '.'
0000000000006420         db  0x90 ; '.'
0000000000006421         db  0x02 ; '.'
0000000000006422         db  0x00 ; '.'
0000000000006423         db  0x00 ; '.'
0000000000006424         db  0x00 ; '.'
0000000000006425         db  0xc1 ; '.'
0000000000006426         db  0xff ; '.'
0000000000006427         db  0xff ; '.'
0000000000006428         db  0x00 ; '.'
0000000000006429         db  0x03 ; '.'
000000000000642a         db  0x00 ; '.'
000000000000642b         db  0x00 ; '.'
000000000000642c         db  0x80 ; '.'
000000000000642d         db  0xc1 ; '.'
000000000000642e         db  0xff ; '.'
000000000000642f         db  0xff ; '.'
0000000000006430         db  0x2c ; ','
0000000000006431         db  0x03 ; '.'
0000000000006432         db  0x00 ; '.'
0000000000006433         db  0x00 ; '.'
0000000000006434         db  0x60 ; '`'
0000000000006435         db  0xc5 ; '.'
0000000000006436         db  0xff ; '.'
0000000000006437         db  0xff ; '.'
0000000000006438         db  0xb8 ; '.'
0000000000006439         db  0x03 ; '.'
000000000000643a         db  0x00 ; '.'
000000000000643b         db  0x00 ; '.'
000000000000643c         db  0x70 ; 'p'
000000000000643d         db  0xc5 ; '.'
000000000000643e         db  0xff ; '.'
000000000000643f         db  0xff ; '.'
0000000000006440         db  0xcc ; '.'
0000000000006441         db  0x03 ; '.'
0000000000006442         db  0x00 ; '.'
0000000000006443         db  0x00 ; '.'
0000000000006444         db  0x80 ; '.'
0000000000006445         db  0xc5 ; '.'
0000000000006446         db  0xff ; '.'
0000000000006447         db  0xff ; '.'
0000000000006448         db  0xe0 ; '.'
0000000000006449         db  0x03 ; '.'
000000000000644a         db  0x00 ; '.'
000000000000644b         db  0x00 ; '.'
000000000000644c         db  0x30 ; '0'
000000000000644d         db  0xc6 ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0x10 ; '.'
0000000000006451         db  0x04 ; '.'
0000000000006452         db  0x00 ; '.'
0000000000006453         db  0x00 ; '.'
0000000000006454         db  0x40 ; '@'
0000000000006455         db  0xc6 ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0x24 ; '$'
0000000000006459         db  0x04 ; '.'
000000000000645a         db  0x00 ; '.'
000000000000645b         db  0x00 ; '.'
000000000000645c         db  0x70 ; 'p'
000000000000645d         db  0xc6 ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0x40 ; '@'
0000000000006461         db  0x04 ; '.'
0000000000006462         db  0x00 ; '.'
0000000000006463         db  0x00 ; '.'
0000000000006464         db  0xf0 ; '.'
0000000000006465         db  0xc6 ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0x90 ; '.'
0000000000006469         db  0x04 ; '.'
000000000000646a         db  0x00 ; '.'
000000000000646b         db  0x00 ; '.'
000000000000646c         db  0x90 ; '.'
000000000000646d         db  0xc7 ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0xb0 ; '.'
0000000000006471         db  0x04 ; '.'
0000000000006472         db  0x00 ; '.'
0000000000006473         db  0x00 ; '.'
0000000000006474         db  0x80 ; '.'
0000000000006475         db  0xc8 ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0xf4 ; '.'
0000000000006479         db  0x04 ; '.'
000000000000647a         db  0x00 ; '.'
000000000000647b         db  0x00 ; '.'
000000000000647c         db  0xc0 ; '.'
000000000000647d         db  0xda ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0x6c ; 'l'
0000000000006481         db  0x05 ; '.'
0000000000006482         db  0x00 ; '.'
0000000000006483         db  0x00 ; '.'
0000000000006484         db  0x70 ; 'p'
0000000000006485         db  0xdc ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0xd8 ; '.'
0000000000006489         db  0x05 ; '.'
000000000000648a         db  0x00 ; '.'
000000000000648b         db  0x00 ; '.'
000000000000648c         db  0xb0 ; '.'
000000000000648d         db  0xdc ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0x04 ; '.'
0000000000006491         db  0x06 ; '.'
0000000000006492         db  0x00 ; '.'
0000000000006493         db  0x00 ; '.'
0000000000006494         db  0xd0 ; '.'
0000000000006495         db  0xdc ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0x18 ; '.'
0000000000006499         db  0x06 ; '.'
000000000000649a         db  0x00 ; '.'
000000000000649b         db  0x00 ; '.'
000000000000649c         db  0xf0 ; '.'
000000000000649d         db  0xdc ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0x2c ; ','
00000000000064a1         db  0x06 ; '.'
00000000000064a2         db  0x00 ; '.'
00000000000064a3         db  0x00 ; '.'
00000000000064a4         db  0x30 ; '0'
00000000000064a5         db  0xdd ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x40 ; '@'
00000000000064a9         db  0x06 ; '.'
00000000000064aa         db  0x00 ; '.'
00000000000064ab         db  0x00 ; '.'
00000000000064ac         db  0x50 ; 'P'
00000000000064ad         db  0xdd ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x54 ; 'T'
00000000000064b1         db  0x06 ; '.'
00000000000064b2         db  0x00 ; '.'
00000000000064b3         db  0x00 ; '.'
00000000000064b4         db  0x80 ; '.'
00000000000064b5         db  0xdd ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0x68 ; 'h'
00000000000064b9         db  0x06 ; '.'
00000000000064ba         db  0x00 ; '.'
00000000000064bb         db  0x00 ; '.'
00000000000064bc         db  0x00 ; '.'
00000000000064bd         db  0xde ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0xbc ; '.'
00000000000064c1         db  0x06 ; '.'
00000000000064c2         db  0x00 ; '.'
00000000000064c3         db  0x00 ; '.'
00000000000064c4         db  0xf0 ; '.'
00000000000064c5         db  0xde ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x28 ; '('
00000000000064c9         db  0x07 ; '.'
00000000000064ca         db  0x00 ; '.'
00000000000064cb         db  0x00 ; '.'
00000000000064cc         db  0x00 ; '.'
00000000000064cd         db  0xdf ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x3c ; '<'
00000000000064d1         db  0x07 ; '.'
00000000000064d2         db  0x00 ; '.'
00000000000064d3         db  0x00 ; '.'
00000000000064d4         db  0xa0 ; '.'
00000000000064d5         db  0xdf ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0x68 ; 'h'
00000000000064d9         db  0x07 ; '.'
00000000000064da         db  0x00 ; '.'
00000000000064db         db  0x00 ; '.'
00000000000064dc         db  0xc0 ; '.'
00000000000064dd         db  0xdf ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x7c ; '|'
00000000000064e1         db  0x07 ; '.'
00000000000064e2         db  0x00 ; '.'
00000000000064e3         db  0x00 ; '.'
00000000000064e4         db  0xd0 ; '.'
00000000000064e5         db  0xdf ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x90 ; '.'
00000000000064e9         db  0x07 ; '.'
00000000000064ea         db  0x00 ; '.'
00000000000064eb         db  0x00 ; '.'
00000000000064ec         db  0xf0 ; '.'
00000000000064ed         db  0xdf ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0xa4 ; '.'
00000000000064f1         db  0x07 ; '.'
00000000000064f2         db  0x00 ; '.'
00000000000064f3         db  0x00 ; '.'
00000000000064f4         db  0x10 ; '.'
00000000000064f5         db  0xe0 ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0xb8 ; '.'
00000000000064f9         db  0x07 ; '.'
00000000000064fa         db  0x00 ; '.'
00000000000064fb         db  0x00 ; '.'
00000000000064fc         db  0xa0 ; '.'
00000000000064fd         db  0xe0 ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0xd4 ; '.'
0000000000006501         db  0x07 ; '.'
0000000000006502         db  0x00 ; '.'
0000000000006503         db  0x00 ; '.'
0000000000006504         db  0x30 ; '0'
0000000000006505         db  0xe1 ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0xf0 ; '.'
0000000000006509         db  0x07 ; '.'
000000000000650a         db  0x00 ; '.'
000000000000650b         db  0x00 ; '.'
000000000000650c         db  0x40 ; '@'
000000000000650d         db  0xe1 ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x04 ; '.'
0000000000006511         db  0x08 ; '.'
0000000000006512         db  0x00 ; '.'
0000000000006513         db  0x00 ; '.'
0000000000006514         db  0x50 ; 'P'
0000000000006515         db  0xe1 ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x18 ; '.'
0000000000006519         db  0x08 ; '.'
000000000000651a         db  0x00 ; '.'
000000000000651b         db  0x00 ; '.'
000000000000651c         db  0xf0 ; '.'
000000000000651d         db  0xe1 ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x34 ; '4'
0000000000006521         db  0x08 ; '.'
0000000000006522         db  0x00 ; '.'
0000000000006523         db  0x00 ; '.'
0000000000006524         db  0x00 ; '.'
0000000000006525         db  0xe2 ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0x48 ; 'H'
0000000000006529         db  0x08 ; '.'
000000000000652a         db  0x00 ; '.'
000000000000652b         db  0x00 ; '.'
000000000000652c         db  0x20 ; ' '
000000000000652d         db  0xe2 ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x5c ; '\'
0000000000006531         db  0x08 ; '.'
0000000000006532         db  0x00 ; '.'
0000000000006533         db  0x00 ; '.'
0000000000006534         db  0x30 ; '0'
0000000000006535         db  0xe2 ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0x70 ; 'p'
0000000000006539         db  0x08 ; '.'
000000000000653a         db  0x00 ; '.'
000000000000653b         db  0x00 ; '.'
000000000000653c         db  0xc0 ; '.'
000000000000653d         db  0xe2 ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x8c ; '.'
0000000000006541         db  0x08 ; '.'
0000000000006542         db  0x00 ; '.'
0000000000006543         db  0x00 ; '.'
0000000000006544         db  0x60 ; '`'
0000000000006545         db  0xe3 ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0xa8 ; '.'
0000000000006549         db  0x08 ; '.'
000000000000654a         db  0x00 ; '.'
000000000000654b         db  0x00 ; '.'
000000000000654c         db  0x70 ; 'p'
000000000000654d         db  0xe3 ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0xbc ; '.'
0000000000006551         db  0x08 ; '.'
0000000000006552         db  0x00 ; '.'
0000000000006553         db  0x00 ; '.'
0000000000006554         db  0x90 ; '.'
0000000000006555         db  0xe3 ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0xd0 ; '.'
0000000000006559         db  0x08 ; '.'
000000000000655a         db  0x00 ; '.'
000000000000655b         db  0x00 ; '.'
000000000000655c         db  0xb0 ; '.'
000000000000655d         db  0xe3 ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0xe4 ; '.'
0000000000006561         db  0x08 ; '.'
0000000000006562         db  0x00 ; '.'
0000000000006563         db  0x00 ; '.'
0000000000006564         db  0xc0 ; '.'
0000000000006565         db  0xe3 ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0xf8 ; '.'
0000000000006569         db  0x08 ; '.'
000000000000656a         db  0x00 ; '.'
000000000000656b         db  0x00 ; '.'
000000000000656c         db  0xe0 ; '.'
000000000000656d         db  0xe3 ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0x0c ; '.'
0000000000006571         db  0x09 ; '.'
0000000000006572         db  0x00 ; '.'
0000000000006573         db  0x00 ; '.'
0000000000006574         db  0x00 ; '.'
0000000000006575         db  0xe4 ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x20 ; ' '
0000000000006579         db  0x09 ; '.'
000000000000657a         db  0x00 ; '.'
000000000000657b         db  0x00 ; '.'
000000000000657c         db  0x20 ; ' '
000000000000657d         db  0xe4 ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x38 ; '8'
0000000000006581         db  0x09 ; '.'
0000000000006582         db  0x00 ; '.'
0000000000006583         db  0x00 ; '.'
0000000000006584         db  0x80 ; '.'
0000000000006585         db  0xe4 ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0x70 ; 'p'
0000000000006589         db  0x09 ; '.'
000000000000658a         db  0x00 ; '.'
000000000000658b         db  0x00 ; '.'
000000000000658c         db  0xe0 ; '.'
000000000000658d         db  0xe4 ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0xa8 ; '.'
0000000000006591         db  0x09 ; '.'
0000000000006592         db  0x00 ; '.'
0000000000006593         db  0x00 ; '.'
0000000000006594         db  0x00 ; '.'
0000000000006595         db  0xe9 ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0xbc ; '.'
0000000000006599         db  0x0a ; '.'
000000000000659a         db  0x00 ; '.'
000000000000659b         db  0x00 ; '.'
000000000000659c         db  0x20 ; ' '
000000000000659d         db  0xe9 ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0xd0 ; '.'
00000000000065a1         db  0x0a ; '.'
00000000000065a2         db  0x00 ; '.'
00000000000065a3         db  0x00 ; '.'
00000000000065a4         db  0xa0 ; '.'
00000000000065a5         db  0xe9 ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0xec ; '.'
00000000000065a9         db  0x0a ; '.'
00000000000065aa         db  0x00 ; '.'
00000000000065ab         db  0x00 ; '.'
00000000000065ac         db  0x80 ; '.'
00000000000065ad         db  0xea ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x18 ; '.'
00000000000065b1         db  0x0b ; '.'
00000000000065b2         db  0x00 ; '.'
00000000000065b3         db  0x00 ; '.'
00000000000065b4         db  0x00 ; '.'
00000000000065b5         db  0xeb ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0x38 ; '8'
00000000000065b9         db  0x0b ; '.'
00000000000065ba         db  0x00 ; '.'
00000000000065bb         db  0x00 ; '.'
00000000000065bc         db  0x20 ; ' '
00000000000065bd         db  0xeb ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0x54 ; 'T'
00000000000065c1         db  0x0b ; '.'
00000000000065c2         db  0x00 ; '.'
00000000000065c3         db  0x00 ; '.'
00000000000065c4         db  0x50 ; 'P'
00000000000065c5         db  0xeb ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0x68 ; 'h'
00000000000065c9         db  0x0b ; '.'
00000000000065ca         db  0x00 ; '.'
00000000000065cb         db  0x00 ; '.'
00000000000065cc         db  0x60 ; '`'
00000000000065cd         db  0xeb ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0x7c ; '|'
00000000000065d1         db  0x0b ; '.'
00000000000065d2         db  0x00 ; '.'
00000000000065d3         db  0x00 ; '.'
00000000000065d4         db  0xa0 ; '.'
00000000000065d5         db  0xeb ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0xa0 ; '.'
00000000000065d9         db  0x0b ; '.'
00000000000065da         db  0x00 ; '.'
00000000000065db         db  0x00 ; '.'
00000000000065dc         db  0xd0 ; '.'
00000000000065dd         db  0xeb ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0xb4 ; '.'
00000000000065e1         db  0x0b ; '.'
00000000000065e2         db  0x00 ; '.'
00000000000065e3         db  0x00 ; '.'
00000000000065e4         db  0x60 ; '`'
00000000000065e5         db  0xec ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0xcc ; '.'
00000000000065e9         db  0x0b ; '.'
00000000000065ea         db  0x00 ; '.'
00000000000065eb         db  0x00 ; '.'
00000000000065ec         db  0xb0 ; '.'
00000000000065ed         db  0xec ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0xe4 ; '.'
00000000000065f1         db  0x0b ; '.'
00000000000065f2         db  0x00 ; '.'
00000000000065f3         db  0x00 ; '.'
00000000000065f4         db  0xd0 ; '.'
00000000000065f5         db  0xec ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0x00 ; '.'
00000000000065f9         db  0x0c ; '.'
00000000000065fa         db  0x00 ; '.'
00000000000065fb         db  0x00 ; '.'
00000000000065fc         db  0x00 ; '.'
00000000000065fd         db  0xed ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0x1c ; '.'
0000000000006601         db  0x0c ; '.'
0000000000006602         db  0x00 ; '.'
0000000000006603         db  0x00 ; '.'
0000000000006604         db  0x30 ; '0'
0000000000006605         db  0xed ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x44 ; 'D'
0000000000006609         db  0x0c ; '.'
000000000000660a         db  0x00 ; '.'
000000000000660b         db  0x00 ; '.'
000000000000660c         db  0x50 ; 'P'
000000000000660d         db  0xed ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0x60 ; '`'
0000000000006611         db  0x0c ; '.'
0000000000006612         db  0x00 ; '.'
0000000000006613         db  0x00 ; '.'
0000000000006614         db  0x90 ; '.'
0000000000006615         db  0xed ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0x78 ; 'x'
0000000000006619         db  0x0c ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         db  0x20 ; ' '
000000000000661d         db  0xee ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0xb8 ; '.'
0000000000006621         db  0x0c ; '.'
0000000000006622         db  0x00 ; '.'
0000000000006623         db  0x00 ; '.'
0000000000006624         db  0xa0 ; '.'
0000000000006625         db  0xee ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0x08 ; '.'
0000000000006629         db  0x0d ; '.'
000000000000662a         db  0x00 ; '.'
000000000000662b         db  0x00 ; '.'
000000000000662c         db  0x00 ; '.'
000000000000662d         db  0xef ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0x28 ; '('
0000000000006631         db  0x0d ; '.'
0000000000006632         db  0x00 ; '.'
0000000000006633         db  0x00 ; '.'
0000000000006634         db  0x40 ; '@'
0000000000006635         db  0xef ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0x48 ; 'H'
0000000000006639         db  0x0d ; '.'
000000000000663a         db  0x00 ; '.'
000000000000663b         db  0x00 ; '.'
000000000000663c         db  0xc0 ; '.'
000000000000663d         db  0xef ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0x80 ; '.'
0000000000006641         db  0x0d ; '.'
0000000000006642         db  0x00 ; '.'
0000000000006643         db  0x00 ; '.'
0000000000006644         db  0x00 ; '.'
0000000000006645         db  0xf0 ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0xa0 ; '.'
0000000000006649         db  0x0d ; '.'
000000000000664a         db  0x00 ; '.'
000000000000664b         db  0x00 ; '.'
000000000000664c         db  0x60 ; '`'
000000000000664d         db  0xf0 ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xd0 ; '.'
0000000000006651         db  0x0d ; '.'
0000000000006652         db  0x00 ; '.'
0000000000006653         db  0x00 ; '.'
0000000000006654         db  0xd0 ; '.'
0000000000006655         db  0xf0 ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0x18 ; '.'
0000000000006659         db  0x0e ; '.'
000000000000665a         db  0x00 ; '.'
000000000000665b         db  0x00 ; '.'
000000000000665c         db  0xe0 ; '.'
000000000000665d         db  0xf0 ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0x30 ; '0'
0000000000006661         db  0x0e ; '.'
0000000000006662         db  0x00 ; '.'
0000000000006663         db  0x00 ; '.'
0000000000006664         db  0x00 ; '.'
0000000000006665         db  0x00 ; '.'
0000000000006666         db  0x00 ; '.'
0000000000006667         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6668; 0x7238[ (3024 bytes)
        ; File offset : [26216; 29240[ (3024 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006668         dd         0x00000014                                  ; Length of the record
000000000000666c         dd         0x00000000                                  ; CIE ID
0000000000006670         db         0x01                                        ; Version
0000000000006671         db         "zR", 0                                     ; Augmentation String
0000000000006674         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006675         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006676         db         0x10                                        ; Return address register
0000000000006677         db         0x01                                        ; Augmentation data length
0000000000006678         db         0x1b                                        ; FDE encoding
0000000000006679         db  0x0c ; '.'
000000000000667a         db  0x07 ; '.'
000000000000667b         db  0x08 ; '.'
000000000000667c         db  0x90 ; '.'
000000000000667d         db  0x01 ; '.'
000000000000667e         db  0x07 ; '.'
000000000000667f         db  0x10 ; '.'
0000000000006680         dd         0x00000014                                  ; Length of the record
0000000000006684         dd         0x0000001c                                  ; FDE: parent CIE at 0x6668 (FDE encoding = 0x1B)
0000000000006688         db         0x58, 0xbd, 2 dup (0xff)                    ; begin 0x23e0
000000000000668c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x240b)
0000000000006690         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006691         align      8
0000000000006698         dd         0x00000014                                  ; Length of the record
000000000000669c         dd         0x00000000                                  ; CIE ID
00000000000066a0         db         0x01                                        ; Version
00000000000066a1         db         "zR", 0                                     ; Augmentation String
00000000000066a4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000066a5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000066a6         db         0x10                                        ; Return address register
00000000000066a7         db         0x01                                        ; Augmentation data length
00000000000066a8         db         0x1b                                        ; FDE encoding
00000000000066a9         db  0x0c ; '.'
00000000000066aa         db  0x07 ; '.'
00000000000066ab         db  0x08 ; '.'
00000000000066ac         db  0x90 ; '.'
00000000000066ad         db  0x01 ; '.'
00000000000066ae         db  0x00 ; '.'
00000000000066af         db  0x00 ; '.'
00000000000066b0         dd         0x00000024                                  ; Length of the record
00000000000066b4         dd         0x0000001c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000066b8         db         0xb8, 0xad, 2 dup (0xff)                    ; begin 0x1470
00000000000066bc         db         0x20, 0x03, 2 dup (0x00)                    ; length 0x320 (end at 0x1790)
00000000000066c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066c1         db  0x0e ; '.'
00000000000066c2         db  0x10 ; '.'
00000000000066c3         db  0x46 ; 'F'
00000000000066c4         db  0x0e ; '.'
00000000000066c5         db  0x18 ; '.'
00000000000066c6         db  0x4a ; 'J'
00000000000066c7         db  0x0f ; '.'
00000000000066c8         db  0x0b ; '.'
00000000000066c9         db  0x77 ; 'w'
00000000000066ca         db  0x08 ; '.'
00000000000066cb         db  0x80 ; '.'
00000000000066cc         db  0x00 ; '.'
00000000000066cd         db  0x3f ; '?'
00000000000066ce         db  0x1a ; '.'
00000000000066cf         db  0x3b ; ';'
00000000000066d0         db  0x2a ; '*'
00000000000066d1         db  0x33 ; '3'
00000000000066d2         db  0x24 ; '$'
00000000000066d3         db  0x22 ; '"'
00000000000066d4         db  0x00 ; '.'
00000000000066d5         db  0x00 ; '.'
00000000000066d6         db  0x00 ; '.'
00000000000066d7         db  0x00 ; '.'
00000000000066d8         dd         0x00000014                                  ; Length of the record
00000000000066dc         dd         0x00000044                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000066e0         db         2 dup (0xb0), 2 dup (0xff)                  ; begin 0x1790
00000000000066e4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1798)
00000000000066e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066e9         align      16
00000000000066f0         dd         0x00000010                                  ; Length of the record
00000000000066f4         dd         0x0000005c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000066f8         db         0xf8, 0xbd, 2 dup (0xff)                    ; begin 0x24f0
00000000000066fc         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x2564)
0000000000006700         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006701         align      4
0000000000006704         dd         0x00000014                                  ; Length of the record
0000000000006708         dd         0x00000070                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
000000000000670c         db         0x94, 0xb0, 2 dup (0xff)                    ; begin 0x17a0
0000000000006710         db         0x2d, 3 dup (0x00)                          ; length 0x2d (end at 0x17cd)
0000000000006714         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006715         db  0x41 ; 'A'
0000000000006716         db  0x0e ; '.'
0000000000006717         db  0x10 ; '.'
0000000000006718         db  0x83 ; '.'
0000000000006719         db  0x02 ; '.'
000000000000671a         db  0x00 ; '.'
000000000000671b         db  0x00 ; '.'
000000000000671c         dd         0x00000028                                  ; Length of the record
0000000000006720         dd         0x00000088                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006724         db         0x4c, 0xbe, 2 dup (0xff)                    ; begin 0x2570
0000000000006728         db         0xda, 0x03, 2 dup (0x00)                    ; length 0x3da (end at 0x294a)
000000000000672c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000672d         db  0x42 ; 'B'
000000000000672e         db  0x0e ; '.'
000000000000672f         db  0x10 ; '.'
0000000000006730         db  0x8d ; '.'
0000000000006731         db  0x02 ; '.'
0000000000006732         db  0x42 ; 'B'
0000000000006733         db  0x0e ; '.'
0000000000006734         db  0x18 ; '.'
0000000000006735         db  0x8c ; '.'
0000000000006736         db  0x03 ; '.'
0000000000006737         db  0x46 ; 'F'
0000000000006738         db  0x0e ; '.'
0000000000006739         db  0x20 ; ' '
000000000000673a         db  0x86 ; '.'
000000000000673b         db  0x04 ; '.'
000000000000673c         db  0x41 ; 'A'
000000000000673d         db  0x0e ; '.'
000000000000673e         db  0x28 ; '('
000000000000673f         db  0x83 ; '.'
0000000000006740         db  0x05 ; '.'
0000000000006741         db  0x49 ; 'I'
0000000000006742         db  0x0e ; '.'
0000000000006743         db  0xb0 ; '.'
0000000000006744         db  0x01 ; '.'
0000000000006745         db  0x00 ; '.'
0000000000006746         db  0x00 ; '.'
0000000000006747         db  0x00 ; '.'
0000000000006748         dd         0x0000005c                                  ; Length of the record
000000000000674c         dd         0x000000b4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006750         db         0x80, 0xb0, 2 dup (0xff)                    ; begin 0x17d0
0000000000006754         db         0x0b, 0x0c, 2 dup (0x00)                    ; length 0xc0b (end at 0x23db)
0000000000006758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006759         db  0x42 ; 'B'
000000000000675a         db  0x0e ; '.'
000000000000675b         db  0x10 ; '.'
000000000000675c         db  0x8f ; '.'
000000000000675d         db  0x02 ; '.'
000000000000675e         db  0x42 ; 'B'
000000000000675f         db  0x0e ; '.'
0000000000006760         db  0x18 ; '.'
0000000000006761         db  0x8e ; '.'
0000000000006762         db  0x03 ; '.'
0000000000006763         db  0x45 ; 'E'
0000000000006764         db  0x0e ; '.'
0000000000006765         db  0x20 ; ' '
0000000000006766         db  0x8d ; '.'
0000000000006767         db  0x04 ; '.'
0000000000006768         db  0x42 ; 'B'
0000000000006769         db  0x0e ; '.'
000000000000676a         db  0x28 ; '('
000000000000676b         db  0x8c ; '.'
000000000000676c         db  0x05 ; '.'
000000000000676d         db  0x44 ; 'D'
000000000000676e         db  0x0e ; '.'
000000000000676f         db  0x30 ; '0'
0000000000006770         db  0x86 ; '.'
0000000000006771         db  0x06 ; '.'
0000000000006772         db  0x41 ; 'A'
0000000000006773         db  0x0e ; '.'
0000000000006774         db  0x38 ; '8'
0000000000006775         db  0x83 ; '.'
0000000000006776         db  0x07 ; '.'
0000000000006777         db  0x47 ; 'G'
0000000000006778         db  0x0e ; '.'
0000000000006779         db  0x90 ; '.'
000000000000677a         db  0x03 ; '.'
000000000000677b         db  0x03 ; '.'
000000000000677c         db  0x48 ; 'H'
000000000000677d         db  0x01 ; '.'
000000000000677e         db  0x0a ; '.'
000000000000677f         db  0x0e ; '.'
0000000000006780         db  0x98 ; '.'
0000000000006781         db  0x03 ; '.'
0000000000006782         db  0x50 ; 'P'
0000000000006783         db  0x0e ; '.'
0000000000006784         db  0xa0 ; '.'
0000000000006785         db  0x03 ; '.'
0000000000006786         db  0x6a ; 'j'
0000000000006787         db  0x0b ; '.'
0000000000006788         db  0x03 ; '.'
0000000000006789         db  0x93 ; '.'
000000000000678a         db  0x06 ; '.'
000000000000678b         db  0x0a ; '.'
000000000000678c         db  0x0e ; '.'
000000000000678d         db  0x38 ; '8'
000000000000678e         db  0x41 ; 'A'
000000000000678f         db  0x0e ; '.'
0000000000006790         db  0x30 ; '0'
0000000000006791         db  0x41 ; 'A'
0000000000006792         db  0x0e ; '.'
0000000000006793         db  0x28 ; '('
0000000000006794         db  0x42 ; 'B'
0000000000006795         db  0x0e ; '.'
0000000000006796         db  0x20 ; ' '
0000000000006797         db  0x42 ; 'B'
0000000000006798         db  0x0e ; '.'
0000000000006799         db  0x18 ; '.'
000000000000679a         db  0x42 ; 'B'
000000000000679b         db  0x0e ; '.'
000000000000679c         db  0x10 ; '.'
000000000000679d         db  0x42 ; 'B'
000000000000679e         db  0x0e ; '.'
000000000000679f         db  0x08 ; '.'
00000000000067a0         db  0x41 ; 'A'
00000000000067a1         db  0x0b ; '.'
00000000000067a2         db  0x00 ; '.'
00000000000067a3         db  0x00 ; '.'
00000000000067a4         db  0x00 ; '.'
00000000000067a5         db  0x00 ; '.'
00000000000067a6         db  0x00 ; '.'
00000000000067a7         db  0x00 ; '.'
00000000000067a8         dd         0x00000010                                  ; Length of the record
00000000000067ac         dd         0x00000114                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000067b0         db         0xa0, 0xc1, 2 dup (0xff)                    ; begin 0x2950
00000000000067b4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2958)
00000000000067b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067b9         align      4
00000000000067bc         dd         0x00000010                                  ; Length of the record
00000000000067c0         dd         0x00000128                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000067c4         db         0x9c, 0xc1, 2 dup (0xff)                    ; begin 0x2960
00000000000067c8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2968)
00000000000067cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067cd         align      16
00000000000067d0         dd         0x0000002c                                  ; Length of the record
00000000000067d4         dd         0x0000013c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000067d8         db         0x98, 0xc1, 2 dup (0xff)                    ; begin 0x2970
00000000000067dc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2a14)
00000000000067e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067e1         db  0x41 ; 'A'
00000000000067e2         db  0x0e ; '.'
00000000000067e3         db  0x10 ; '.'
00000000000067e4         db  0x86 ; '.'
00000000000067e5         db  0x02 ; '.'
00000000000067e6         db  0x41 ; 'A'
00000000000067e7         db  0x0e ; '.'
00000000000067e8         db  0x18 ; '.'
00000000000067e9         db  0x83 ; '.'
00000000000067ea         db  0x03 ; '.'
00000000000067eb         db  0x44 ; 'D'
00000000000067ec         db  0x0e ; '.'
00000000000067ed         db  0x20 ; ' '
00000000000067ee         db  0x7a ; 'z'
00000000000067ef         db  0x0a ; '.'
00000000000067f0         db  0x0e ; '.'
00000000000067f1         db  0x18 ; '.'
00000000000067f2         db  0x41 ; 'A'
00000000000067f3         db  0x0e ; '.'
00000000000067f4         db  0x10 ; '.'
00000000000067f5         db  0x41 ; 'A'
00000000000067f6         db  0x0e ; '.'
00000000000067f7         db  0x08 ; '.'
00000000000067f8         db  0x41 ; 'A'
00000000000067f9         db  0x0b ; '.'
00000000000067fa         db  0x00 ; '.'
00000000000067fb         db  0x00 ; '.'
00000000000067fc         db  0x00 ; '.'
00000000000067fd         db  0x00 ; '.'
00000000000067fe         db  0x00 ; '.'
00000000000067ff         db  0x00 ; '.'
0000000000006800         dd         0x00000010                                  ; Length of the record
0000000000006804         dd         0x0000016c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006808         db         0x18, 0xc2, 2 dup (0xff)                    ; begin 0x2a20
000000000000680c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2a25)
0000000000006810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006811         align      4
0000000000006814         dd         0x00000018                                  ; Length of the record
0000000000006818         dd         0x00000180                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
000000000000681c         db         0x14, 0xc2, 2 dup (0xff)                    ; begin 0x2a30
0000000000006820         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2a52)
0000000000006824         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006825         db  0x46 ; 'F'
0000000000006826         db  0x0e ; '.'
0000000000006827         db  0x10 ; '.'
0000000000006828         db  0x83 ; '.'
0000000000006829         db  0x02 ; '.'
000000000000682a         db  0x4e ; 'N'
000000000000682b         db  0xc3 ; '.'
000000000000682c         db  0x0e ; '.'
000000000000682d         db  0x08 ; '.'
000000000000682e         db  0x00 ; '.'
000000000000682f         db  0x00 ; '.'
0000000000006830         dd         0x0000004c                                  ; Length of the record
0000000000006834         dd         0x0000019c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006838         db         0x28, 0xc2, 2 dup (0xff)                    ; begin 0x2a60
000000000000683c         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0x2ad6)
0000000000006840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006841         db  0x42 ; 'B'
0000000000006842         db  0x0e ; '.'
0000000000006843         db  0x10 ; '.'
0000000000006844         db  0x8d ; '.'
0000000000006845         db  0x02 ; '.'
0000000000006846         db  0x42 ; 'B'
0000000000006847         db  0x0e ; '.'
0000000000006848         db  0x18 ; '.'
0000000000006849         db  0x8c ; '.'
000000000000684a         db  0x03 ; '.'
000000000000684b         db  0x41 ; 'A'
000000000000684c         db  0x0e ; '.'
000000000000684d         db  0x20 ; ' '
000000000000684e         db  0x86 ; '.'
000000000000684f         db  0x04 ; '.'
0000000000006850         db  0x41 ; 'A'
0000000000006851         db  0x0e ; '.'
0000000000006852         db  0x28 ; '('
0000000000006853         db  0x83 ; '.'
0000000000006854         db  0x05 ; '.'
0000000000006855         db  0x44 ; 'D'
0000000000006856         db  0x0e ; '.'
0000000000006857         db  0x30 ; '0'
0000000000006858         db  0x7e ; '~'
0000000000006859         db  0x0a ; '.'
000000000000685a         db  0x0e ; '.'
000000000000685b         db  0x28 ; '('
000000000000685c         db  0x44 ; 'D'
000000000000685d         db  0x0e ; '.'
000000000000685e         db  0x20 ; ' '
000000000000685f         db  0x41 ; 'A'
0000000000006860         db  0x0e ; '.'
0000000000006861         db  0x18 ; '.'
0000000000006862         db  0x42 ; 'B'
0000000000006863         db  0x0e ; '.'
0000000000006864         db  0x10 ; '.'
0000000000006865         db  0x42 ; 'B'
0000000000006866         db  0x0e ; '.'
0000000000006867         db  0x08 ; '.'
0000000000006868         db  0x47 ; 'G'
0000000000006869         db  0x0b ; '.'
000000000000686a         db  0x4f ; 'O'
000000000000686b         db  0x0a ; '.'
000000000000686c         db  0x0e ; '.'
000000000000686d         db  0x28 ; '('
000000000000686e         db  0x44 ; 'D'
000000000000686f         db  0x0e ; '.'
0000000000006870         db  0x20 ; ' '
0000000000006871         db  0x41 ; 'A'
0000000000006872         db  0x0e ; '.'
0000000000006873         db  0x18 ; '.'
0000000000006874         db  0x42 ; 'B'
0000000000006875         db  0x0e ; '.'
0000000000006876         db  0x10 ; '.'
0000000000006877         db  0x42 ; 'B'
0000000000006878         db  0x0e ; '.'
0000000000006879         db  0x08 ; '.'
000000000000687a         db  0x41 ; 'A'
000000000000687b         db  0x0b ; '.'
000000000000687c         db  0x00 ; '.'
000000000000687d         db  0x00 ; '.'
000000000000687e         db  0x00 ; '.'
000000000000687f         db  0x00 ; '.'
0000000000006880         dd         0x0000001c                                  ; Length of the record
0000000000006884         dd         0x000001ec                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006888         db         0x58, 0xc2, 2 dup (0xff)                    ; begin 0x2ae0
000000000000688c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2b7f)
0000000000006890         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006891         db  0x44 ; 'D'
0000000000006892         db  0x0e ; '.'
0000000000006893         db  0x10 ; '.'
0000000000006894         db  0x83 ; '.'
0000000000006895         db  0x02 ; '.'
0000000000006896         db  0x02 ; '.'
0000000000006897         db  0x78 ; 'x'
0000000000006898         db  0x0a ; '.'
0000000000006899         db  0x0e ; '.'
000000000000689a         db  0x08 ; '.'
000000000000689b         db  0x41 ; 'A'
000000000000689c         db  0x0b ; '.'
000000000000689d         db  0x00 ; '.'
000000000000689e         db  0x00 ; '.'
000000000000689f         db  0x00 ; '.'
00000000000068a0         dd         0x00000040                                  ; Length of the record
00000000000068a4         dd         0x0000020c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000068a8         db         0xd8, 0xc2, 2 dup (0xff)                    ; begin 0x2b80
00000000000068ac         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2c67)
00000000000068b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068b1         db  0x41 ; 'A'
00000000000068b2         db  0x0e ; '.'
00000000000068b3         db  0x10 ; '.'
00000000000068b4         db  0x86 ; '.'
00000000000068b5         db  0x02 ; '.'
00000000000068b6         db  0x41 ; 'A'
00000000000068b7         db  0x0e ; '.'
00000000000068b8         db  0x18 ; '.'
00000000000068b9         db  0x83 ; '.'
00000000000068ba         db  0x03 ; '.'
00000000000068bb         db  0x49 ; 'I'
00000000000068bc         db  0x0e ; '.'
00000000000068bd         db  0x20 ; ' '
00000000000068be         db  0x6e ; 'n'
00000000000068bf         db  0x0a ; '.'
00000000000068c0         db  0x0e ; '.'
00000000000068c1         db  0x18 ; '.'
00000000000068c2         db  0x41 ; 'A'
00000000000068c3         db  0x0e ; '.'
00000000000068c4         db  0x10 ; '.'
00000000000068c5         db  0x41 ; 'A'
00000000000068c6         db  0x0e ; '.'
00000000000068c7         db  0x08 ; '.'
00000000000068c8         db  0x45 ; 'E'
00000000000068c9         db  0x0b ; '.'
00000000000068ca         db  0x02 ; '.'
00000000000068cb         db  0x4a ; 'J'
00000000000068cc         db  0x0a ; '.'
00000000000068cd         db  0x0e ; '.'
00000000000068ce         db  0x18 ; '.'
00000000000068cf         db  0x41 ; 'A'
00000000000068d0         db  0x0e ; '.'
00000000000068d1         db  0x10 ; '.'
00000000000068d2         db  0x41 ; 'A'
00000000000068d3         db  0x0e ; '.'
00000000000068d4         db  0x08 ; '.'
00000000000068d5         db  0x44 ; 'D'
00000000000068d6         db  0x0b ; '.'
00000000000068d7         db  0x02 ; '.'
00000000000068d8         db  0x54 ; 'T'
00000000000068d9         db  0x0e ; '.'
00000000000068da         db  0x18 ; '.'
00000000000068db         db  0x41 ; 'A'
00000000000068dc         db  0x0e ; '.'
00000000000068dd         db  0x10 ; '.'
00000000000068de         db  0x41 ; 'A'
00000000000068df         db  0x0e ; '.'
00000000000068e0         db  0x08 ; '.'
00000000000068e1         db  0x00 ; '.'
00000000000068e2         db  0x00 ; '.'
00000000000068e3         db  0x00 ; '.'
00000000000068e4         dd         0x00000074                                  ; Length of the record
00000000000068e8         dd         0x00000250                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000068ec         db         0x84, 0xc3, 2 dup (0xff)                    ; begin 0x2c70
00000000000068f0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3ea4)
00000000000068f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068f5         db  0x42 ; 'B'
00000000000068f6         db  0x0e ; '.'
00000000000068f7         db  0x10 ; '.'
00000000000068f8         db  0x8f ; '.'
00000000000068f9         db  0x02 ; '.'
00000000000068fa         db  0x42 ; 'B'
00000000000068fb         db  0x0e ; '.'
00000000000068fc         db  0x18 ; '.'
00000000000068fd         db  0x8e ; '.'
00000000000068fe         db  0x03 ; '.'
00000000000068ff         db  0x45 ; 'E'
0000000000006900         db  0x0e ; '.'
0000000000006901         db  0x20 ; ' '
0000000000006902         db  0x8d ; '.'
0000000000006903         db  0x04 ; '.'
0000000000006904         db  0x42 ; 'B'
0000000000006905         db  0x0e ; '.'
0000000000006906         db  0x28 ; '('
0000000000006907         db  0x8c ; '.'
0000000000006908         db  0x05 ; '.'
0000000000006909         db  0x44 ; 'D'
000000000000690a         db  0x0e ; '.'
000000000000690b         db  0x30 ; '0'
000000000000690c         db  0x86 ; '.'
000000000000690d         db  0x06 ; '.'
000000000000690e         db  0x41 ; 'A'
000000000000690f         db  0x0e ; '.'
0000000000006910         db  0x38 ; '8'
0000000000006911         db  0x83 ; '.'
0000000000006912         db  0x07 ; '.'
0000000000006913         db  0x53 ; 'S'
0000000000006914         db  0x0e ; '.'
0000000000006915         db  0xf0 ; '.'
0000000000006916         db  0x01 ; '.'
0000000000006917         db  0x03 ; '.'
0000000000006918         db  0x81 ; '.'
0000000000006919         db  0x0b ; '.'
000000000000691a         db  0x0e ; '.'
000000000000691b         db  0xf8 ; '.'
000000000000691c         db  0x01 ; '.'
000000000000691d         db  0x4a ; 'J'
000000000000691e         db  0x0e ; '.'
000000000000691f         db  0x80 ; '.'
0000000000006920         db  0x02 ; '.'
0000000000006921         db  0x44 ; 'D'
0000000000006922         db  0x0e ; '.'
0000000000006923         db  0x88 ; '.'
0000000000006924         db  0x02 ; '.'
0000000000006925         db  0x45 ; 'E'
0000000000006926         db  0x0e ; '.'
0000000000006927         db  0x90 ; '.'
0000000000006928         db  0x02 ; '.'
0000000000006929         db  0x5f ; '_'
000000000000692a         db  0x0e ; '.'
000000000000692b         db  0xf0 ; '.'
000000000000692c         db  0x01 ; '.'
000000000000692d         db  0x64 ; 'd'
000000000000692e         db  0x0a ; '.'
000000000000692f         db  0x0e ; '.'
0000000000006930         db  0x38 ; '8'
0000000000006931         db  0x41 ; 'A'
0000000000006932         db  0x0e ; '.'
0000000000006933         db  0x30 ; '0'
0000000000006934         db  0x41 ; 'A'
0000000000006935         db  0x0e ; '.'
0000000000006936         db  0x28 ; '('
0000000000006937         db  0x42 ; 'B'
0000000000006938         db  0x0e ; '.'
0000000000006939         db  0x20 ; ' '
000000000000693a         db  0x42 ; 'B'
000000000000693b         db  0x0e ; '.'
000000000000693c         db  0x18 ; '.'
000000000000693d         db  0x42 ; 'B'
000000000000693e         db  0x0e ; '.'
000000000000693f         db  0x10 ; '.'
0000000000006940         db  0x42 ; 'B'
0000000000006941         db  0x0e ; '.'
0000000000006942         db  0x08 ; '.'
0000000000006943         db  0x44 ; 'D'
0000000000006944         db  0x0b ; '.'
0000000000006945         db  0x03 ; '.'
0000000000006946         db  0x99 ; '.'
0000000000006947         db  0x05 ; '.'
0000000000006948         db  0x0e ; '.'
0000000000006949         db  0xf8 ; '.'
000000000000694a         db  0x01 ; '.'
000000000000694b         db  0x4d ; 'M'
000000000000694c         db  0x0e ; '.'
000000000000694d         db  0x80 ; '.'
000000000000694e         db  0x02 ; '.'
000000000000694f         db  0x44 ; 'D'
0000000000006950         db  0x0e ; '.'
0000000000006951         db  0x88 ; '.'
0000000000006952         db  0x02 ; '.'
0000000000006953         db  0x47 ; 'G'
0000000000006954         db  0x0e ; '.'
0000000000006955         db  0x90 ; '.'
0000000000006956         db  0x02 ; '.'
0000000000006957         db  0x5b ; '['
0000000000006958         db  0x0e ; '.'
0000000000006959         db  0xf0 ; '.'
000000000000695a         db  0x01 ; '.'
000000000000695b         db  0x00 ; '.'
000000000000695c         dd         0x00000068                                  ; Length of the record
0000000000006960         dd         0x000002c8                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006964         db         0x4c, 0xd5, 2 dup (0xff)                    ; begin 0x3eb0
0000000000006968         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x405b)
000000000000696c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000696d         db  0x42 ; 'B'
000000000000696e         db  0x0e ; '.'
000000000000696f         db  0x10 ; '.'
0000000000006970         db  0x8f ; '.'
0000000000006971         db  0x02 ; '.'
0000000000006972         db  0x42 ; 'B'
0000000000006973         db  0x0e ; '.'
0000000000006974         db  0x18 ; '.'
0000000000006975         db  0x8e ; '.'
0000000000006976         db  0x03 ; '.'
0000000000006977         db  0x45 ; 'E'
0000000000006978         db  0x0e ; '.'
0000000000006979         db  0x20 ; ' '
000000000000697a         db  0x8d ; '.'
000000000000697b         db  0x04 ; '.'
000000000000697c         db  0x42 ; 'B'
000000000000697d         db  0x0e ; '.'
000000000000697e         db  0x28 ; '('
000000000000697f         db  0x8c ; '.'
0000000000006980         db  0x05 ; '.'
0000000000006981         db  0x44 ; 'D'
0000000000006982         db  0x0e ; '.'
0000000000006983         db  0x30 ; '0'
0000000000006984         db  0x86 ; '.'
0000000000006985         db  0x06 ; '.'
0000000000006986         db  0x41 ; 'A'
0000000000006987         db  0x0e ; '.'
0000000000006988         db  0x38 ; '8'
0000000000006989         db  0x83 ; '.'
000000000000698a         db  0x07 ; '.'
000000000000698b         db  0x47 ; 'G'
000000000000698c         db  0x0e ; '.'
000000000000698d         db  0x60 ; '`'
000000000000698e         db  0x02 ; '.'
000000000000698f         db  0x99 ; '.'
0000000000006990         db  0x0e ; '.'
0000000000006991         db  0x68 ; 'h'
0000000000006992         db  0x5f ; '_'
0000000000006993         db  0x0e ; '.'
0000000000006994         db  0x70 ; 'p'
0000000000006995         db  0x46 ; 'F'
0000000000006996         db  0x0e ; '.'
0000000000006997         db  0x78 ; 'x'
0000000000006998         db  0x42 ; 'B'
0000000000006999         db  0x0e ; '.'
000000000000699a         db  0x80 ; '.'
000000000000699b         db  0x01 ; '.'
000000000000699c         db  0x59 ; 'Y'
000000000000699d         db  0x0e ; '.'
000000000000699e         db  0x60 ; '`'
000000000000699f         db  0x02 ; '.'
00000000000069a0         db  0x40 ; '@'
00000000000069a1         db  0x0e ; '.'
00000000000069a2         db  0x68 ; 'h'
00000000000069a3         db  0x4b ; 'K'
00000000000069a4         db  0x0e ; '.'
00000000000069a5         db  0x70 ; 'p'
00000000000069a6         db  0x43 ; 'C'
00000000000069a7         db  0x0e ; '.'
00000000000069a8         db  0x78 ; 'x'
00000000000069a9         db  0x45 ; 'E'
00000000000069aa         db  0x0e ; '.'
00000000000069ab         db  0x80 ; '.'
00000000000069ac         db  0x01 ; '.'
00000000000069ad         db  0x5e ; '^'
00000000000069ae         db  0x0e ; '.'
00000000000069af         db  0x60 ; '`'
00000000000069b0         db  0x4c ; 'L'
00000000000069b1         db  0x0a ; '.'
00000000000069b2         db  0x0e ; '.'
00000000000069b3         db  0x38 ; '8'
00000000000069b4         db  0x44 ; 'D'
00000000000069b5         db  0x0e ; '.'
00000000000069b6         db  0x30 ; '0'
00000000000069b7         db  0x41 ; 'A'
00000000000069b8         db  0x0e ; '.'
00000000000069b9         db  0x28 ; '('
00000000000069ba         db  0x42 ; 'B'
00000000000069bb         db  0x0e ; '.'
00000000000069bc         db  0x20 ; ' '
00000000000069bd         db  0x42 ; 'B'
00000000000069be         db  0x0e ; '.'
00000000000069bf         db  0x18 ; '.'
00000000000069c0         db  0x42 ; 'B'
00000000000069c1         db  0x0e ; '.'
00000000000069c2         db  0x10 ; '.'
00000000000069c3         db  0x42 ; 'B'
00000000000069c4         db  0x0e ; '.'
00000000000069c5         db  0x08 ; '.'
00000000000069c6         db  0x46 ; 'F'
00000000000069c7         db  0x0b ; '.'
00000000000069c8         dd         0x00000028                                  ; Length of the record
00000000000069cc         dd         0x00000334                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000069d0         db         0x90, 0xd6, 2 dup (0xff)                    ; begin 0x4060
00000000000069d4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4096)
00000000000069d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069d9         db  0x42 ; 'B'
00000000000069da         db  0x0e ; '.'
00000000000069db         db  0x10 ; '.'
00000000000069dc         db  0x8c ; '.'
00000000000069dd         db  0x02 ; '.'
00000000000069de         db  0x41 ; 'A'
00000000000069df         db  0x0e ; '.'
00000000000069e0         db  0x18 ; '.'
00000000000069e1         db  0x86 ; '.'
00000000000069e2         db  0x03 ; '.'
00000000000069e3         db  0x41 ; 'A'
00000000000069e4         db  0x0e ; '.'
00000000000069e5         db  0x20 ; ' '
00000000000069e6         db  0x83 ; '.'
00000000000069e7         db  0x04 ; '.'
00000000000069e8         db  0x6e ; 'n'
00000000000069e9         db  0x0e ; '.'
00000000000069ea         db  0x18 ; '.'
00000000000069eb         db  0x41 ; 'A'
00000000000069ec         db  0x0e ; '.'
00000000000069ed         db  0x10 ; '.'
00000000000069ee         db  0x42 ; 'B'
00000000000069ef         db  0x0e ; '.'
00000000000069f0         db  0x08 ; '.'
00000000000069f1         db  0x00 ; '.'
00000000000069f2         db  0x00 ; '.'
00000000000069f3         db  0x00 ; '.'
00000000000069f4         dd         0x00000010                                  ; Length of the record
00000000000069f8         dd         0x00000360                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000069fc         db         0xa4, 0xd6, 2 dup (0xff)                    ; begin 0x40a0
0000000000006a00         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x40b1)
0000000000006a04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a05         align      8
0000000000006a08         dd         0x00000010                                  ; Length of the record
0000000000006a0c         dd         0x00000374                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006a10         db         0xb0, 0xd6, 2 dup (0xff)                    ; begin 0x40c0
0000000000006a14         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x40d1)
0000000000006a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a19         align      4
0000000000006a1c         dd         0x00000010                                  ; Length of the record
0000000000006a20         dd         0x00000388                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006a24         db         0xbc, 0xd6, 2 dup (0xff)                    ; begin 0x40e0
0000000000006a28         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4115)
0000000000006a2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a2d         align      16
0000000000006a30         dd         0x00000010                                  ; Length of the record
0000000000006a34         dd         0x0000039c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006a38         db         0xe8, 0xd6, 2 dup (0xff)                    ; begin 0x4120
0000000000006a3c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4135)
0000000000006a40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a41         align      4
0000000000006a44         dd         0x00000010                                  ; Length of the record
0000000000006a48         dd         0x000003b0                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006a4c         db         0xf4, 0xd6, 2 dup (0xff)                    ; begin 0x4140
0000000000006a50         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4170)
0000000000006a54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a55         db  0x6b ; 'k'
0000000000006a56         db  0x0e ; '.'
0000000000006a57         db  0x10 ; '.'
0000000000006a58         dd         0x00000050                                  ; Length of the record
0000000000006a5c         dd         0x000003c4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006a60         db         0x10, 0xd7, 2 dup (0xff)                    ; begin 0x4170
0000000000006a64         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x41e4)
0000000000006a68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a69         db  0x42 ; 'B'
0000000000006a6a         db  0x0e ; '.'
0000000000006a6b         db  0x10 ; '.'
0000000000006a6c         db  0x8f ; '.'
0000000000006a6d         db  0x02 ; '.'
0000000000006a6e         db  0x42 ; 'B'
0000000000006a6f         db  0x0e ; '.'
0000000000006a70         db  0x18 ; '.'
0000000000006a71         db  0x8e ; '.'
0000000000006a72         db  0x03 ; '.'
0000000000006a73         db  0x49 ; 'I'
0000000000006a74         db  0x0e ; '.'
0000000000006a75         db  0x20 ; ' '
0000000000006a76         db  0x8d ; '.'
0000000000006a77         db  0x04 ; '.'
0000000000006a78         db  0x42 ; 'B'
0000000000006a79         db  0x0e ; '.'
0000000000006a7a         db  0x28 ; '('
0000000000006a7b         db  0x8c ; '.'
0000000000006a7c         db  0x05 ; '.'
0000000000006a7d         db  0x44 ; 'D'
0000000000006a7e         db  0x0e ; '.'
0000000000006a7f         db  0x30 ; '0'
0000000000006a80         db  0x86 ; '.'
0000000000006a81         db  0x06 ; '.'
0000000000006a82         db  0x41 ; 'A'
0000000000006a83         db  0x0e ; '.'
0000000000006a84         db  0x38 ; '8'
0000000000006a85         db  0x83 ; '.'
0000000000006a86         db  0x07 ; '.'
0000000000006a87         db  0x4d ; 'M'
0000000000006a88         db  0x0e ; '.'
0000000000006a89         db  0x50 ; 'P'
0000000000006a8a         db  0x5f ; '_'
0000000000006a8b         db  0x0e ; '.'
0000000000006a8c         db  0x58 ; 'X'
0000000000006a8d         db  0x47 ; 'G'
0000000000006a8e         db  0x0e ; '.'
0000000000006a8f         db  0x60 ; '`'
0000000000006a90         db  0x46 ; 'F'
0000000000006a91         db  0x0e ; '.'
0000000000006a92         db  0x68 ; 'h'
0000000000006a93         db  0x44 ; 'D'
0000000000006a94         db  0x0e ; '.'
0000000000006a95         db  0x70 ; 'p'
0000000000006a96         db  0x58 ; 'X'
0000000000006a97         db  0x0e ; '.'
0000000000006a98         db  0x38 ; '8'
0000000000006a99         db  0x41 ; 'A'
0000000000006a9a         db  0x0e ; '.'
0000000000006a9b         db  0x30 ; '0'
0000000000006a9c         db  0x41 ; 'A'
0000000000006a9d         db  0x0e ; '.'
0000000000006a9e         db  0x28 ; '('
0000000000006a9f         db  0x42 ; 'B'
0000000000006aa0         db  0x0e ; '.'
0000000000006aa1         db  0x20 ; ' '
0000000000006aa2         db  0x42 ; 'B'
0000000000006aa3         db  0x0e ; '.'
0000000000006aa4         db  0x18 ; '.'
0000000000006aa5         db  0x42 ; 'B'
0000000000006aa6         db  0x0e ; '.'
0000000000006aa7         db  0x10 ; '.'
0000000000006aa8         db  0x42 ; 'B'
0000000000006aa9         db  0x0e ; '.'
0000000000006aaa         db  0x08 ; '.'
0000000000006aab         db  0x00 ; '.'
0000000000006aac         dd         0x00000068                                  ; Length of the record
0000000000006ab0         dd         0x00000418                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006ab4         db         0x3c, 0xd7, 2 dup (0xff)                    ; begin 0x41f0
0000000000006ab8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x42d3)
0000000000006abc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006abd         db  0x42 ; 'B'
0000000000006abe         db  0x0e ; '.'
0000000000006abf         db  0x10 ; '.'
0000000000006ac0         db  0x8f ; '.'
0000000000006ac1         db  0x02 ; '.'
0000000000006ac2         db  0x42 ; 'B'
0000000000006ac3         db  0x0e ; '.'
0000000000006ac4         db  0x18 ; '.'
0000000000006ac5         db  0x8e ; '.'
0000000000006ac6         db  0x03 ; '.'
0000000000006ac7         db  0x49 ; 'I'
0000000000006ac8         db  0x0e ; '.'
0000000000006ac9         db  0x20 ; ' '
0000000000006aca         db  0x8d ; '.'
0000000000006acb         db  0x04 ; '.'
0000000000006acc         db  0x42 ; 'B'
0000000000006acd         db  0x0e ; '.'
0000000000006ace         db  0x28 ; '('
0000000000006acf         db  0x8c ; '.'
0000000000006ad0         db  0x05 ; '.'
0000000000006ad1         db  0x44 ; 'D'
0000000000006ad2         db  0x0e ; '.'
0000000000006ad3         db  0x30 ; '0'
0000000000006ad4         db  0x86 ; '.'
0000000000006ad5         db  0x06 ; '.'
0000000000006ad6         db  0x41 ; 'A'
0000000000006ad7         db  0x0e ; '.'
0000000000006ad8         db  0x38 ; '8'
0000000000006ad9         db  0x83 ; '.'
0000000000006ada         db  0x07 ; '.'
0000000000006adb         db  0x4d ; 'M'
0000000000006adc         db  0x0e ; '.'
0000000000006add         db  0x70 ; 'p'
0000000000006ade         db  0x65 ; 'e'
0000000000006adf         db  0x0e ; '.'
0000000000006ae0         db  0x78 ; 'x'
0000000000006ae1         db  0x4d ; 'M'
0000000000006ae2         db  0x0e ; '.'
0000000000006ae3         db  0x80 ; '.'
0000000000006ae4         db  0x01 ; '.'
0000000000006ae5         db  0x46 ; 'F'
0000000000006ae6         db  0x0e ; '.'
0000000000006ae7         db  0x88 ; '.'
0000000000006ae8         db  0x01 ; '.'
0000000000006ae9         db  0x42 ; 'B'
0000000000006aea         db  0x0e ; '.'
0000000000006aeb         db  0x90 ; '.'
0000000000006aec         db  0x01 ; '.'
0000000000006aed         db  0x5e ; '^'
0000000000006aee         db  0x0e ; '.'
0000000000006aef         db  0x70 ; 'p'
0000000000006af0         db  0x56 ; 'V'
0000000000006af1         db  0x0e ; '.'
0000000000006af2         db  0x78 ; 'x'
0000000000006af3         db  0x43 ; 'C'
0000000000006af4         db  0x0e ; '.'
0000000000006af5         db  0x80 ; '.'
0000000000006af6         db  0x01 ; '.'
0000000000006af7         db  0x43 ; 'C'
0000000000006af8         db  0x0e ; '.'
0000000000006af9         db  0x88 ; '.'
0000000000006afa         db  0x01 ; '.'
0000000000006afb         db  0x56 ; 'V'
0000000000006afc         db  0x0e ; '.'
0000000000006afd         db  0x90 ; '.'
0000000000006afe         db  0x01 ; '.'
0000000000006aff         db  0x52 ; 'R'
0000000000006b00         db  0x0e ; '.'
0000000000006b01         db  0x70 ; 'p'
0000000000006b02         db  0x5b ; '['
0000000000006b03         db  0x0e ; '.'
0000000000006b04         db  0x38 ; '8'
0000000000006b05         db  0x41 ; 'A'
0000000000006b06         db  0x0e ; '.'
0000000000006b07         db  0x30 ; '0'
0000000000006b08         db  0x41 ; 'A'
0000000000006b09         db  0x0e ; '.'
0000000000006b0a         db  0x28 ; '('
0000000000006b0b         db  0x42 ; 'B'
0000000000006b0c         db  0x0e ; '.'
0000000000006b0d         db  0x20 ; ' '
0000000000006b0e         db  0x42 ; 'B'
0000000000006b0f         db  0x0e ; '.'
0000000000006b10         db  0x18 ; '.'
0000000000006b11         db  0x42 ; 'B'
0000000000006b12         db  0x0e ; '.'
0000000000006b13         db  0x10 ; '.'
0000000000006b14         db  0x42 ; 'B'
0000000000006b15         db  0x0e ; '.'
0000000000006b16         db  0x08 ; '.'
0000000000006b17         db  0x00 ; '.'
0000000000006b18         dd         0x00000010                                  ; Length of the record
0000000000006b1c         dd         0x00000484                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b20         db         0xc0, 0xd7, 2 dup (0xff)                    ; begin 0x42e0
0000000000006b24         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x42ea)
0000000000006b28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b29         align      4
0000000000006b2c         dd         0x00000028                                  ; Length of the record
0000000000006b30         dd         0x00000498                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b34         db         0xbc, 0xd7, 2 dup (0xff)                    ; begin 0x42f0
0000000000006b38         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4383)
0000000000006b3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b3d         db  0x48 ; 'H'
0000000000006b3e         db  0x0e ; '.'
0000000000006b3f         db  0x10 ; '.'
0000000000006b40         db  0x8c ; '.'
0000000000006b41         db  0x02 ; '.'
0000000000006b42         db  0x48 ; 'H'
0000000000006b43         db  0x0e ; '.'
0000000000006b44         db  0x18 ; '.'
0000000000006b45         db  0x86 ; '.'
0000000000006b46         db  0x03 ; '.'
0000000000006b47         db  0x41 ; 'A'
0000000000006b48         db  0x0e ; '.'
0000000000006b49         db  0x20 ; ' '
0000000000006b4a         db  0x83 ; '.'
0000000000006b4b         db  0x04 ; '.'
0000000000006b4c         db  0x02 ; '.'
0000000000006b4d         db  0x74 ; 't'
0000000000006b4e         db  0x0e ; '.'
0000000000006b4f         db  0x18 ; '.'
0000000000006b50         db  0x4b ; 'K'
0000000000006b51         db  0x0e ; '.'
0000000000006b52         db  0x10 ; '.'
0000000000006b53         db  0x42 ; 'B'
0000000000006b54         db  0x0e ; '.'
0000000000006b55         db  0x08 ; '.'
0000000000006b56         db  0x00 ; '.'
0000000000006b57         db  0x00 ; '.'
0000000000006b58         dd         0x00000010                                  ; Length of the record
0000000000006b5c         dd         0x000004c4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b60         db         0x30, 0xd8, 2 dup (0xff)                    ; begin 0x4390
0000000000006b64         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x43a3)
0000000000006b68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b69         align      4
0000000000006b6c         dd         0x00000010                                  ; Length of the record
0000000000006b70         dd         0x000004d8                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b74         db         0x3c, 0xd8, 2 dup (0xff)                    ; begin 0x43b0
0000000000006b78         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x43bc)
0000000000006b7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b7d         align      128
0000000000006b80         dd         0x00000010                                  ; Length of the record
0000000000006b84         dd         0x000004ec                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b88         db         0x38, 0xd8, 2 dup (0xff)                    ; begin 0x43c0
0000000000006b8c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x43d8)
0000000000006b90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b91         align      4
0000000000006b94         dd         0x00000010                                  ; Length of the record
0000000000006b98         dd         0x00000500                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006b9c         db         0x44, 0xd8, 2 dup (0xff)                    ; begin 0x43e0
0000000000006ba0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x43f4)
0000000000006ba4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ba5         align      8
0000000000006ba8         dd         0x00000018                                  ; Length of the record
0000000000006bac         dd         0x00000514                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006bb0         db         0x50, 0xd8, 2 dup (0xff)                    ; begin 0x4400
0000000000006bb4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x448e)
0000000000006bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb9         db  0x44 ; 'D'
0000000000006bba         db  0x0e ; '.'
0000000000006bbb         db  0x50 ; 'P'
0000000000006bbc         db  0x02 ; '.'
0000000000006bbd         db  0x7f ; '.'
0000000000006bbe         db  0x0a ; '.'
0000000000006bbf         db  0x0e ; '.'
0000000000006bc0         db  0x08 ; '.'
0000000000006bc1         db  0x41 ; 'A'
0000000000006bc2         db  0x0b ; '.'
0000000000006bc3         db  0x00 ; '.'
0000000000006bc4         dd         0x00000018                                  ; Length of the record
0000000000006bc8         dd         0x00000530                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006bcc         db         0xc4, 0xd8, 2 dup (0xff)                    ; begin 0x4490
0000000000006bd0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x451a)
0000000000006bd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bd5         db  0x44 ; 'D'
0000000000006bd6         db  0x0e ; '.'
0000000000006bd7         db  0x50 ; 'P'
0000000000006bd8         db  0x02 ; '.'
0000000000006bd9         db  0x7b ; '{'
0000000000006bda         db  0x0a ; '.'
0000000000006bdb         db  0x0e ; '.'
0000000000006bdc         db  0x08 ; '.'
0000000000006bdd         db  0x41 ; 'A'
0000000000006bde         db  0x0b ; '.'
0000000000006bdf         db  0x00 ; '.'
0000000000006be0         dd         0x00000010                                  ; Length of the record
0000000000006be4         dd         0x0000054c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006be8         db         0x38, 0xd9, 2 dup (0xff)                    ; begin 0x4520
0000000000006bec         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x452c)
0000000000006bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bf1         align      4
0000000000006bf4         dd         0x00000010                                  ; Length of the record
0000000000006bf8         dd         0x00000560                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006bfc         db         0x34, 0xd9, 2 dup (0xff)                    ; begin 0x4530
0000000000006c00         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x453f)
0000000000006c04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c05         align      8
0000000000006c08         dd         0x00000018                                  ; Length of the record
0000000000006c0c         dd         0x00000574                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c10         db         0x30, 0xd9, 2 dup (0xff)                    ; begin 0x4540
0000000000006c14         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x45d8)
0000000000006c18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c19         db  0x44 ; 'D'
0000000000006c1a         db  0x0e ; '.'
0000000000006c1b         db  0x50 ; 'P'
0000000000006c1c         db  0x02 ; '.'
0000000000006c1d         db  0x8e ; '.'
0000000000006c1e         db  0x0a ; '.'
0000000000006c1f         db  0x0e ; '.'
0000000000006c20         db  0x08 ; '.'
0000000000006c21         db  0x41 ; 'A'
0000000000006c22         db  0x0b ; '.'
0000000000006c23         db  0x00 ; '.'
0000000000006c24         dd         0x00000010                                  ; Length of the record
0000000000006c28         dd         0x00000590                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c2c         db         0xb4, 0xd9, 2 dup (0xff)                    ; begin 0x45e0
0000000000006c30         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x45f0)
0000000000006c34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c35         align      8
0000000000006c38         dd         0x00000010                                  ; Length of the record
0000000000006c3c         dd         0x000005a4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c40         db         0xb0, 0xd9, 2 dup (0xff)                    ; begin 0x45f0
0000000000006c44         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4601)
0000000000006c48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c49         align      4
0000000000006c4c         dd         0x00000010                                  ; Length of the record
0000000000006c50         dd         0x000005b8                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c54         db         0xbc, 0xd9, 2 dup (0xff)                    ; begin 0x4610
0000000000006c58         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x461a)
0000000000006c5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c5d         align      32
0000000000006c60         dd         0x00000018                                  ; Length of the record
0000000000006c64         dd         0x000005cc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c68         db         0xb8, 0xd9, 2 dup (0xff)                    ; begin 0x4620
0000000000006c6c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x46ae)
0000000000006c70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c71         db  0x44 ; 'D'
0000000000006c72         db  0x0e ; '.'
0000000000006c73         db  0x50 ; 'P'
0000000000006c74         db  0x02 ; '.'
0000000000006c75         db  0x7f ; '.'
0000000000006c76         db  0x0a ; '.'
0000000000006c77         db  0x0e ; '.'
0000000000006c78         db  0x08 ; '.'
0000000000006c79         db  0x41 ; 'A'
0000000000006c7a         db  0x0b ; '.'
0000000000006c7b         db  0x00 ; '.'
0000000000006c7c         dd         0x00000018                                  ; Length of the record
0000000000006c80         dd         0x000005e8                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006c84         db         0x2c, 0xda, 2 dup (0xff)                    ; begin 0x46b0
0000000000006c88         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4741)
0000000000006c8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c8d         db  0x44 ; 'D'
0000000000006c8e         db  0x0e ; '.'
0000000000006c8f         db  0x50 ; 'P'
0000000000006c90         db  0x02 ; '.'
0000000000006c91         db  0x82 ; '.'
0000000000006c92         db  0x0a ; '.'
0000000000006c93         db  0x0e ; '.'
0000000000006c94         db  0x08 ; '.'
0000000000006c95         db  0x41 ; 'A'
0000000000006c96         db  0x0b ; '.'
0000000000006c97         db  0x00 ; '.'
0000000000006c98         dd         0x00000010                                  ; Length of the record
0000000000006c9c         dd         0x00000604                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006ca0         db         0xb0, 0xda, 2 dup (0xff)                    ; begin 0x4750
0000000000006ca4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x475c)
0000000000006ca8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ca9         align      4
0000000000006cac         dd         0x00000010                                  ; Length of the record
0000000000006cb0         dd         0x00000618                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006cb4         db         0xac, 0xda, 2 dup (0xff)                    ; begin 0x4760
0000000000006cb8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4777)
0000000000006cbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cbd         align      64
0000000000006cc0         dd         0x00000010                                  ; Length of the record
0000000000006cc4         dd         0x0000062c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006cc8         db         0xb8, 0xda, 2 dup (0xff)                    ; begin 0x4780
0000000000006ccc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4793)
0000000000006cd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cd1         align      4
0000000000006cd4         dd         0x00000010                                  ; Length of the record
0000000000006cd8         dd         0x00000640                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006cdc         db         0xc4, 0xda, 2 dup (0xff)                    ; begin 0x47a0
0000000000006ce0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x47ac)
0000000000006ce4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ce5         align      8
0000000000006ce8         dd         0x00000010                                  ; Length of the record
0000000000006cec         dd         0x00000654                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006cf0         db         0xc0, 0xda, 2 dup (0xff)                    ; begin 0x47b0
0000000000006cf4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x47c4)
0000000000006cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cf9         align      4
0000000000006cfc         dd         0x00000010                                  ; Length of the record
0000000000006d00         dd         0x00000668                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006d04         db         0xcc, 0xda, 2 dup (0xff)                    ; begin 0x47d0
0000000000006d08         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x47e3)
0000000000006d0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d0d         align      16
0000000000006d10         dd         0x00000014                                  ; Length of the record
0000000000006d14         dd         0x0000067c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006d18         db         0xd8, 0xda, 2 dup (0xff)                    ; begin 0x47f0
0000000000006d1c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4808)
0000000000006d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d21         align      8
0000000000006d28         dd         0x00000034                                  ; Length of the record
0000000000006d2c         dd         0x00000694                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006d30         db         0xe0, 0xda, 2 dup (0xff)                    ; begin 0x4810
0000000000006d34         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x486e)
0000000000006d38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d39         db  0x42 ; 'B'
0000000000006d3a         db  0x0e ; '.'
0000000000006d3b         db  0x10 ; '.'
0000000000006d3c         db  0x8d ; '.'
0000000000006d3d         db  0x02 ; '.'
0000000000006d3e         db  0x42 ; 'B'
0000000000006d3f         db  0x0e ; '.'
0000000000006d40         db  0x18 ; '.'
0000000000006d41         db  0x8c ; '.'
0000000000006d42         db  0x03 ; '.'
0000000000006d43         db  0x44 ; 'D'
0000000000006d44         db  0x0e ; '.'
0000000000006d45         db  0x20 ; ' '
0000000000006d46         db  0x86 ; '.'
0000000000006d47         db  0x04 ; '.'
0000000000006d48         db  0x41 ; 'A'
0000000000006d49         db  0x0e ; '.'
0000000000006d4a         db  0x28 ; '('
0000000000006d4b         db  0x83 ; '.'
0000000000006d4c         db  0x05 ; '.'
0000000000006d4d         db  0x4a ; 'J'
0000000000006d4e         db  0x0e ; '.'
0000000000006d4f         db  0x30 ; '0'
0000000000006d50         db  0x02 ; '.'
0000000000006d51         db  0x41 ; 'A'
0000000000006d52         db  0x0e ; '.'
0000000000006d53         db  0x28 ; '('
0000000000006d54         db  0x44 ; 'D'
0000000000006d55         db  0x0e ; '.'
0000000000006d56         db  0x20 ; ' '
0000000000006d57         db  0x41 ; 'A'
0000000000006d58         db  0x0e ; '.'
0000000000006d59         db  0x18 ; '.'
0000000000006d5a         db  0x42 ; 'B'
0000000000006d5b         db  0x0e ; '.'
0000000000006d5c         db  0x10 ; '.'
0000000000006d5d         db  0x42 ; 'B'
0000000000006d5e         db  0x0e ; '.'
0000000000006d5f         db  0x08 ; '.'
0000000000006d60         dd         0x00000034                                  ; Length of the record
0000000000006d64         dd         0x000006cc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006d68         db         0x08, 0xdb, 2 dup (0xff)                    ; begin 0x4870
0000000000006d6c         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x48ce)
0000000000006d70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d71         db  0x42 ; 'B'
0000000000006d72         db  0x0e ; '.'
0000000000006d73         db  0x10 ; '.'
0000000000006d74         db  0x8d ; '.'
0000000000006d75         db  0x02 ; '.'
0000000000006d76         db  0x42 ; 'B'
0000000000006d77         db  0x0e ; '.'
0000000000006d78         db  0x18 ; '.'
0000000000006d79         db  0x8c ; '.'
0000000000006d7a         db  0x03 ; '.'
0000000000006d7b         db  0x44 ; 'D'
0000000000006d7c         db  0x0e ; '.'
0000000000006d7d         db  0x20 ; ' '
0000000000006d7e         db  0x86 ; '.'
0000000000006d7f         db  0x04 ; '.'
0000000000006d80         db  0x41 ; 'A'
0000000000006d81         db  0x0e ; '.'
0000000000006d82         db  0x28 ; '('
0000000000006d83         db  0x83 ; '.'
0000000000006d84         db  0x05 ; '.'
0000000000006d85         db  0x4a ; 'J'
0000000000006d86         db  0x0e ; '.'
0000000000006d87         db  0x30 ; '0'
0000000000006d88         db  0x02 ; '.'
0000000000006d89         db  0x41 ; 'A'
0000000000006d8a         db  0x0e ; '.'
0000000000006d8b         db  0x28 ; '('
0000000000006d8c         db  0x44 ; 'D'
0000000000006d8d         db  0x0e ; '.'
0000000000006d8e         db  0x20 ; ' '
0000000000006d8f         db  0x41 ; 'A'
0000000000006d90         db  0x0e ; '.'
0000000000006d91         db  0x18 ; '.'
0000000000006d92         db  0x42 ; 'B'
0000000000006d93         db  0x0e ; '.'
0000000000006d94         db  0x10 ; '.'
0000000000006d95         db  0x42 ; 'B'
0000000000006d96         db  0x0e ; '.'
0000000000006d97         db  0x08 ; '.'
0000000000006d98         dd         0x00000110                                  ; Length of the record
0000000000006d9c         dd         0x00000704                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006da0         db         0x30, 0xdb, 2 dup (0xff)                    ; begin 0x48d0
0000000000006da4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4ce7)
0000000000006da8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006da9         db  0x42 ; 'B'
0000000000006daa         db  0x0e ; '.'
0000000000006dab         db  0x10 ; '.'
0000000000006dac         db  0x8f ; '.'
0000000000006dad         db  0x02 ; '.'
0000000000006dae         db  0x42 ; 'B'
0000000000006daf         db  0x0e ; '.'
0000000000006db0         db  0x18 ; '.'
0000000000006db1         db  0x8e ; '.'
0000000000006db2         db  0x03 ; '.'
0000000000006db3         db  0x42 ; 'B'
0000000000006db4         db  0x0e ; '.'
0000000000006db5         db  0x20 ; ' '
0000000000006db6         db  0x8d ; '.'
0000000000006db7         db  0x04 ; '.'
0000000000006db8         db  0x42 ; 'B'
0000000000006db9         db  0x0e ; '.'
0000000000006dba         db  0x28 ; '('
0000000000006dbb         db  0x8c ; '.'
0000000000006dbc         db  0x05 ; '.'
0000000000006dbd         db  0x44 ; 'D'
0000000000006dbe         db  0x0e ; '.'
0000000000006dbf         db  0x30 ; '0'
0000000000006dc0         db  0x86 ; '.'
0000000000006dc1         db  0x06 ; '.'
0000000000006dc2         db  0x41 ; 'A'
0000000000006dc3         db  0x0e ; '.'
0000000000006dc4         db  0x38 ; '8'
0000000000006dc5         db  0x83 ; '.'
0000000000006dc6         db  0x07 ; '.'
0000000000006dc7         db  0x4a ; 'J'
0000000000006dc8         db  0x0e ; '.'
0000000000006dc9         db  0x60 ; '`'
0000000000006dca         db  0x02 ; '.'
0000000000006dcb         db  0xdd ; '.'
0000000000006dcc         db  0x0e ; '.'
0000000000006dcd         db  0x68 ; 'h'
0000000000006dce         db  0x57 ; 'W'
0000000000006dcf         db  0x0e ; '.'
0000000000006dd0         db  0x70 ; 'p'
0000000000006dd1         db  0x42 ; 'B'
0000000000006dd2         db  0x0e ; '.'
0000000000006dd3         db  0x78 ; 'x'
0000000000006dd4         db  0x42 ; 'B'
0000000000006dd5         db  0x0e ; '.'
0000000000006dd6         db  0x80 ; '.'
0000000000006dd7         db  0x01 ; '.'
0000000000006dd8         db  0x42 ; 'B'
0000000000006dd9         db  0x0e ; '.'
0000000000006dda         db  0x88 ; '.'
0000000000006ddb         db  0x01 ; '.'
0000000000006ddc         db  0x42 ; 'B'
0000000000006ddd         db  0x0e ; '.'
0000000000006dde         db  0x90 ; '.'
0000000000006ddf         db  0x01 ; '.'
0000000000006de0         db  0x53 ; 'S'
0000000000006de1         db  0x0e ; '.'
0000000000006de2         db  0x60 ; '`'
0000000000006de3         db  0x44 ; 'D'
0000000000006de4         db  0x0a ; '.'
0000000000006de5         db  0x0e ; '.'
0000000000006de6         db  0x38 ; '8'
0000000000006de7         db  0x41 ; 'A'
0000000000006de8         db  0x0e ; '.'
0000000000006de9         db  0x30 ; '0'
0000000000006dea         db  0x41 ; 'A'
0000000000006deb         db  0x0e ; '.'
0000000000006dec         db  0x28 ; '('
0000000000006ded         db  0x42 ; 'B'
0000000000006dee         db  0x0e ; '.'
0000000000006def         db  0x20 ; ' '
0000000000006df0         db  0x42 ; 'B'
0000000000006df1         db  0x0e ; '.'
0000000000006df2         db  0x18 ; '.'
0000000000006df3         db  0x42 ; 'B'
0000000000006df4         db  0x0e ; '.'
0000000000006df5         db  0x10 ; '.'
0000000000006df6         db  0x42 ; 'B'
0000000000006df7         db  0x0e ; '.'
0000000000006df8         db  0x08 ; '.'
0000000000006df9         db  0x44 ; 'D'
0000000000006dfa         db  0x0b ; '.'
0000000000006dfb         db  0x02 ; '.'
0000000000006dfc         db  0x78 ; 'x'
0000000000006dfd         db  0x0a ; '.'
0000000000006dfe         db  0x0e ; '.'
0000000000006dff         db  0x68 ; 'h'
0000000000006e00         db  0x48 ; 'H'
0000000000006e01         db  0x0b ; '.'
0000000000006e02         db  0x5a ; 'Z'
0000000000006e03         db  0x0a ; '.'
0000000000006e04         db  0x0e ; '.'
0000000000006e05         db  0x38 ; '8'
0000000000006e06         db  0x47 ; 'G'
0000000000006e07         db  0x0e ; '.'
0000000000006e08         db  0x30 ; '0'
0000000000006e09         db  0x41 ; 'A'
0000000000006e0a         db  0x0e ; '.'
0000000000006e0b         db  0x28 ; '('
0000000000006e0c         db  0x42 ; 'B'
0000000000006e0d         db  0x0e ; '.'
0000000000006e0e         db  0x20 ; ' '
0000000000006e0f         db  0x42 ; 'B'
0000000000006e10         db  0x0e ; '.'
0000000000006e11         db  0x18 ; '.'
0000000000006e12         db  0x42 ; 'B'
0000000000006e13         db  0x0e ; '.'
0000000000006e14         db  0x10 ; '.'
0000000000006e15         db  0x42 ; 'B'
0000000000006e16         db  0x0e ; '.'
0000000000006e17         db  0x08 ; '.'
0000000000006e18         db  0x56 ; 'V'
0000000000006e19         db  0x0b ; '.'
0000000000006e1a         db  0x5e ; '^'
0000000000006e1b         db  0x0a ; '.'
0000000000006e1c         db  0x0e ; '.'
0000000000006e1d         db  0x38 ; '8'
0000000000006e1e         db  0x52 ; 'R'
0000000000006e1f         db  0x0e ; '.'
0000000000006e20         db  0x30 ; '0'
0000000000006e21         db  0x41 ; 'A'
0000000000006e22         db  0x0e ; '.'
0000000000006e23         db  0x28 ; '('
0000000000006e24         db  0x42 ; 'B'
0000000000006e25         db  0x0e ; '.'
0000000000006e26         db  0x20 ; ' '
0000000000006e27         db  0x42 ; 'B'
0000000000006e28         db  0x0e ; '.'
0000000000006e29         db  0x18 ; '.'
0000000000006e2a         db  0x42 ; 'B'
0000000000006e2b         db  0x0e ; '.'
0000000000006e2c         db  0x10 ; '.'
0000000000006e2d         db  0x42 ; 'B'
0000000000006e2e         db  0x0e ; '.'
0000000000006e2f         db  0x08 ; '.'
0000000000006e30         db  0x4f ; 'O'
0000000000006e31         db  0x0b ; '.'
0000000000006e32         db  0x62 ; 'b'
0000000000006e33         db  0x0a ; '.'
0000000000006e34         db  0x0e ; '.'
0000000000006e35         db  0x38 ; '8'
0000000000006e36         db  0x50 ; 'P'
0000000000006e37         db  0x0e ; '.'
0000000000006e38         db  0x30 ; '0'
0000000000006e39         db  0x41 ; 'A'
0000000000006e3a         db  0x0e ; '.'
0000000000006e3b         db  0x28 ; '('
0000000000006e3c         db  0x42 ; 'B'
0000000000006e3d         db  0x0e ; '.'
0000000000006e3e         db  0x20 ; ' '
0000000000006e3f         db  0x42 ; 'B'
0000000000006e40         db  0x0e ; '.'
0000000000006e41         db  0x18 ; '.'
0000000000006e42         db  0x42 ; 'B'
0000000000006e43         db  0x0e ; '.'
0000000000006e44         db  0x10 ; '.'
0000000000006e45         db  0x42 ; 'B'
0000000000006e46         db  0x0e ; '.'
0000000000006e47         db  0x08 ; '.'
0000000000006e48         db  0x55 ; 'U'
0000000000006e49         db  0x0b ; '.'
0000000000006e4a         db  0x66 ; 'f'
0000000000006e4b         db  0x0e ; '.'
0000000000006e4c         db  0x68 ; 'h'
0000000000006e4d         db  0x42 ; 'B'
0000000000006e4e         db  0x0e ; '.'
0000000000006e4f         db  0x70 ; 'p'
0000000000006e50         db  0x5c ; '\'
0000000000006e51         db  0x0e ; '.'
0000000000006e52         db  0x68 ; 'h'
0000000000006e53         db  0x41 ; 'A'
0000000000006e54         db  0x0e ; '.'
0000000000006e55         db  0x60 ; '`'
0000000000006e56         db  0x44 ; 'D'
0000000000006e57         db  0x0a ; '.'
0000000000006e58         db  0x0e ; '.'
0000000000006e59         db  0x38 ; '8'
0000000000006e5a         db  0x41 ; 'A'
0000000000006e5b         db  0x0e ; '.'
0000000000006e5c         db  0x30 ; '0'
0000000000006e5d         db  0x41 ; 'A'
0000000000006e5e         db  0x0e ; '.'
0000000000006e5f         db  0x28 ; '('
0000000000006e60         db  0x42 ; 'B'
0000000000006e61         db  0x0e ; '.'
0000000000006e62         db  0x20 ; ' '
0000000000006e63         db  0x42 ; 'B'
0000000000006e64         db  0x0e ; '.'
0000000000006e65         db  0x18 ; '.'
0000000000006e66         db  0x42 ; 'B'
0000000000006e67         db  0x0e ; '.'
0000000000006e68         db  0x10 ; '.'
0000000000006e69         db  0x42 ; 'B'
0000000000006e6a         db  0x0e ; '.'
0000000000006e6b         db  0x08 ; '.'
0000000000006e6c         db  0x45 ; 'E'
0000000000006e6d         db  0x0b ; '.'
0000000000006e6e         db  0x68 ; 'h'
0000000000006e6f         db  0x0a ; '.'
0000000000006e70         db  0x0e ; '.'
0000000000006e71         db  0x68 ; 'h'
0000000000006e72         db  0x48 ; 'H'
0000000000006e73         db  0x0b ; '.'
0000000000006e74         db  0x72 ; 'r'
0000000000006e75         db  0x0e ; '.'
0000000000006e76         db  0x68 ; 'h'
0000000000006e77         db  0x45 ; 'E'
0000000000006e78         db  0x0e ; '.'
0000000000006e79         db  0x70 ; 'p'
0000000000006e7a         db  0x42 ; 'B'
0000000000006e7b         db  0x0e ; '.'
0000000000006e7c         db  0x78 ; 'x'
0000000000006e7d         db  0x42 ; 'B'
0000000000006e7e         db  0x0e ; '.'
0000000000006e7f         db  0x80 ; '.'
0000000000006e80         db  0x01 ; '.'
0000000000006e81         db  0x5e ; '^'
0000000000006e82         db  0x0e ; '.'
0000000000006e83         db  0x60 ; '`'
0000000000006e84         db  0x44 ; 'D'
0000000000006e85         db  0x0a ; '.'
0000000000006e86         db  0x0e ; '.'
0000000000006e87         db  0x38 ; '8'
0000000000006e88         db  0x41 ; 'A'
0000000000006e89         db  0x0e ; '.'
0000000000006e8a         db  0x30 ; '0'
0000000000006e8b         db  0x41 ; 'A'
0000000000006e8c         db  0x0e ; '.'
0000000000006e8d         db  0x28 ; '('
0000000000006e8e         db  0x42 ; 'B'
0000000000006e8f         db  0x0e ; '.'
0000000000006e90         db  0x20 ; ' '
0000000000006e91         db  0x42 ; 'B'
0000000000006e92         db  0x0e ; '.'
0000000000006e93         db  0x18 ; '.'
0000000000006e94         db  0x42 ; 'B'
0000000000006e95         db  0x0e ; '.'
0000000000006e96         db  0x10 ; '.'
0000000000006e97         db  0x42 ; 'B'
0000000000006e98         db  0x0e ; '.'
0000000000006e99         db  0x08 ; '.'
0000000000006e9a         db  0x41 ; 'A'
0000000000006e9b         db  0x0b ; '.'
0000000000006e9c         db  0x79 ; 'y'
0000000000006e9d         db  0x0a ; '.'
0000000000006e9e         db  0x0e ; '.'
0000000000006e9f         db  0x68 ; 'h'
0000000000006ea0         db  0x42 ; 'B'
0000000000006ea1         db  0x0e ; '.'
0000000000006ea2         db  0x70 ; 'p'
0000000000006ea3         db  0x42 ; 'B'
0000000000006ea4         db  0x0e ; '.'
0000000000006ea5         db  0x78 ; 'x'
0000000000006ea6         db  0x42 ; 'B'
0000000000006ea7         db  0x0e ; '.'
0000000000006ea8         db  0x80 ; '.'
0000000000006ea9         db  0x01 ; '.'
0000000000006eaa         db  0x51 ; 'Q'
0000000000006eab         db  0x0b ; '.'
0000000000006eac         dd         0x00000010                                  ; Length of the record
0000000000006eb0         dd         0x00000818                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006eb4         db         0x3c, 0xde, 2 dup (0xff)                    ; begin 0x4cf0
0000000000006eb8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4d10)
0000000000006ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ebd         align      64
0000000000006ec0         dd         0x00000018                                  ; Length of the record
0000000000006ec4         dd         0x0000082c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006ec8         db         0x48, 0xde, 2 dup (0xff)                    ; begin 0x4d10
0000000000006ecc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4d88)
0000000000006ed0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ed1         db  0x44 ; 'D'
0000000000006ed2         db  0x0e ; '.'
0000000000006ed3         db  0x70 ; 'p'
0000000000006ed4         db  0x02 ; '.'
0000000000006ed5         db  0x60 ; '`'
0000000000006ed6         db  0x0a ; '.'
0000000000006ed7         db  0x0e ; '.'
0000000000006ed8         db  0x08 ; '.'
0000000000006ed9         db  0x41 ; 'A'
0000000000006eda         db  0x0b ; '.'
0000000000006edb         db  0x00 ; '.'
0000000000006edc         dd         0x00000028                                  ; Length of the record
0000000000006ee0         dd         0x00000848                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006ee4         db         0xac, 0xde, 2 dup (0xff)                    ; begin 0x4d90
0000000000006ee8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4e65)
0000000000006eec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006eed         db  0x41 ; 'A'
0000000000006eee         db  0x0e ; '.'
0000000000006eef         db  0x10 ; '.'
0000000000006ef0         db  0x86 ; '.'
0000000000006ef1         db  0x02 ; '.'
0000000000006ef2         db  0x41 ; 'A'
0000000000006ef3         db  0x0e ; '.'
0000000000006ef4         db  0x18 ; '.'
0000000000006ef5         db  0x83 ; '.'
0000000000006ef6         db  0x03 ; '.'
0000000000006ef7         db  0x50 ; 'P'
0000000000006ef8         db  0x0e ; '.'
0000000000006ef9         db  0xd0 ; '.'
0000000000006efa         db  0x01 ; '.'
0000000000006efb         db  0x02 ; '.'
0000000000006efc         db  0xab ; '.'
0000000000006efd         db  0x0a ; '.'
0000000000006efe         db  0x0e ; '.'
0000000000006eff         db  0x18 ; '.'
0000000000006f00         db  0x41 ; 'A'
0000000000006f01         db  0x0e ; '.'
0000000000006f02         db  0x10 ; '.'
0000000000006f03         db  0x41 ; 'A'
0000000000006f04         db  0x0e ; '.'
0000000000006f05         db  0x08 ; '.'
0000000000006f06         db  0x41 ; 'A'
0000000000006f07         db  0x0b ; '.'
0000000000006f08         dd         0x0000001c                                  ; Length of the record
0000000000006f0c         dd         0x00000874                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f10         db         0x60, 0xdf, 2 dup (0xff)                    ; begin 0x4e70
0000000000006f14         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4ef0)
0000000000006f18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f19         db  0x41 ; 'A'
0000000000006f1a         db  0x0e ; '.'
0000000000006f1b         db  0x10 ; '.'
0000000000006f1c         db  0x83 ; '.'
0000000000006f1d         db  0x02 ; '.'
0000000000006f1e         db  0x02 ; '.'
0000000000006f1f         db  0x7a ; 'z'
0000000000006f20         db  0x0e ; '.'
0000000000006f21         db  0x08 ; '.'
0000000000006f22         db  0x00 ; '.'
0000000000006f23         db  0x00 ; '.'
0000000000006f24         db  0x00 ; '.'
0000000000006f25         db  0x00 ; '.'
0000000000006f26         db  0x00 ; '.'
0000000000006f27         db  0x00 ; '.'
0000000000006f28         dd         0x00000018                                  ; Length of the record
0000000000006f2c         dd         0x00000894                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f30         db         0xc0, 0xdf, 2 dup (0xff)                    ; begin 0x4ef0
0000000000006f34         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4f0a)
0000000000006f38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f39         db  0x41 ; 'A'
0000000000006f3a         db  0x0e ; '.'
0000000000006f3b         db  0x10 ; '.'
0000000000006f3c         db  0x83 ; '.'
0000000000006f3d         db  0x02 ; '.'
0000000000006f3e         db  0x53 ; 'S'
0000000000006f3f         db  0x0a ; '.'
0000000000006f40         db  0x0e ; '.'
0000000000006f41         db  0x08 ; '.'
0000000000006f42         db  0x41 ; 'A'
0000000000006f43         db  0x0b ; '.'
0000000000006f44         dd         0x00000010                                  ; Length of the record
0000000000006f48         dd         0x000008b0                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f4c         db         0xc4, 0xdf, 2 dup (0xff)                    ; begin 0x4f10
0000000000006f50         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4f34)
0000000000006f54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f55         db  0x5f ; '_'
0000000000006f56         db  0x0e ; '.'
0000000000006f57         db  0x10 ; '.'
0000000000006f58         dd         0x00000010                                  ; Length of the record
0000000000006f5c         dd         0x000008c4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f60         db         0xe0, 0xdf, 2 dup (0xff)                    ; begin 0x4f40
0000000000006f64         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4f42)
0000000000006f68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f69         align      4
0000000000006f6c         dd         0x00000020                                  ; Length of the record
0000000000006f70         dd         0x000008d8                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f74         db         0xdc, 0xdf, 2 dup (0xff)                    ; begin 0x4f50
0000000000006f78         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4f86)
0000000000006f7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f7d         db  0x44 ; 'D'
0000000000006f7e         db  0x0e ; '.'
0000000000006f7f         db  0x10 ; '.'
0000000000006f80         db  0x83 ; '.'
0000000000006f81         db  0x02 ; '.'
0000000000006f82         db  0x5d ; ']'
0000000000006f83         db  0x0a ; '.'
0000000000006f84         db  0x0e ; '.'
0000000000006f85         db  0x08 ; '.'
0000000000006f86         db  0x47 ; 'G'
0000000000006f87         db  0x0b ; '.'
0000000000006f88         db  0x48 ; 'H'
0000000000006f89         db  0x0a ; '.'
0000000000006f8a         db  0x0e ; '.'
0000000000006f8b         db  0x08 ; '.'
0000000000006f8c         db  0x41 ; 'A'
0000000000006f8d         db  0x0b ; '.'
0000000000006f8e         db  0x00 ; '.'
0000000000006f8f         db  0x00 ; '.'
0000000000006f90         dd         0x00000010                                  ; Length of the record
0000000000006f94         dd         0x000008fc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006f98         db         0xf8, 0xdf, 2 dup (0xff)                    ; begin 0x4f90
0000000000006f9c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4fb4)
0000000000006fa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fa1         db  0x5f ; '_'
0000000000006fa2         db  0x0e ; '.'
0000000000006fa3         db  0x10 ; '.'
0000000000006fa4         dd         0x00000014                                  ; Length of the record
0000000000006fa8         dd         0x00000910                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006fac         db         0x14, 0xe0, 2 dup (0xff)                    ; begin 0x4fc0
0000000000006fb0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5042)
0000000000006fb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fb5         db  0x02 ; '.'
0000000000006fb6         db  0x5f ; '_'
0000000000006fb7         db  0x0e ; '.'
0000000000006fb8         db  0x10 ; '.'
0000000000006fb9         db  0x49 ; 'I'
0000000000006fba         db  0x0e ; '.'
0000000000006fbb         db  0x08 ; '.'
0000000000006fbc         dd         0x00000014                                  ; Length of the record
0000000000006fc0         dd         0x00000928                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006fc4         db         0x8c, 0xe0, 2 dup (0xff)                    ; begin 0x5050
0000000000006fc8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x509a)
0000000000006fcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fcd         db  0x02 ; '.'
0000000000006fce         db  0x45 ; 'E'
0000000000006fcf         db  0x0e ; '.'
0000000000006fd0         db  0x10 ; '.'
0000000000006fd1         db  0x00 ; '.'
0000000000006fd2         db  0x00 ; '.'
0000000000006fd3         db  0x00 ; '.'
0000000000006fd4         dd         0x00000018                                  ; Length of the record
0000000000006fd8         dd         0x00000940                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006fdc         db         0xc4, 0xe0, 2 dup (0xff)                    ; begin 0x50a0
0000000000006fe0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x50b7)
0000000000006fe4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fe5         db  0x41 ; 'A'
0000000000006fe6         db  0x0e ; '.'
0000000000006fe7         db  0x10 ; '.'
0000000000006fe8         db  0x83 ; '.'
0000000000006fe9         db  0x02 ; '.'
0000000000006fea         db  0x51 ; 'Q'
0000000000006feb         db  0x0e ; '.'
0000000000006fec         db  0x08 ; '.'
0000000000006fed         db  0x00 ; '.'
0000000000006fee         db  0x00 ; '.'
0000000000006fef         db  0x00 ; '.'
0000000000006ff0         dd         0x00000018                                  ; Length of the record
0000000000006ff4         dd         0x0000095c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000006ff8         db         0xc8, 0xe0, 2 dup (0xff)                    ; begin 0x50c0
0000000000006ffc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x50ee)
0000000000007000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007001         db  0x47 ; 'G'
0000000000007002         db  0x0e ; '.'
0000000000007003         db  0x10 ; '.'
0000000000007004         db  0x61 ; 'a'
0000000000007005         db  0x0a ; '.'
0000000000007006         db  0x0e ; '.'
0000000000007007         db  0x08 ; '.'
0000000000007008         db  0x41 ; 'A'
0000000000007009         db  0x0b ; '.'
000000000000700a         db  0x00 ; '.'
000000000000700b         db  0x00 ; '.'
000000000000700c         dd         0x00000024                                  ; Length of the record
0000000000007010         dd         0x00000978                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007014         db         0xdc, 0xe0, 2 dup (0xff)                    ; begin 0x50f0
0000000000007018         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5118)
000000000000701c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000701d         db  0x41 ; 'A'
000000000000701e         db  0x0e ; '.'
000000000000701f         db  0x10 ; '.'
0000000000007020         db  0x86 ; '.'
0000000000007021         db  0x02 ; '.'
0000000000007022         db  0x41 ; 'A'
0000000000007023         db  0x0e ; '.'
0000000000007024         db  0x18 ; '.'
0000000000007025         db  0x83 ; '.'
0000000000007026         db  0x03 ; '.'
0000000000007027         db  0x4d ; 'M'
0000000000007028         db  0x0e ; '.'
0000000000007029         db  0x20 ; ' '
000000000000702a         db  0x49 ; 'I'
000000000000702b         db  0x0e ; '.'
000000000000702c         db  0x18 ; '.'
000000000000702d         db  0x47 ; 'G'
000000000000702e         db  0x0e ; '.'
000000000000702f         db  0x10 ; '.'
0000000000007030         db  0x41 ; 'A'
0000000000007031         db  0x0e ; '.'
0000000000007032         db  0x08 ; '.'
0000000000007033         db  0x00 ; '.'
0000000000007034         dd         0x00000018                                  ; Length of the record
0000000000007038         dd         0x000009a0                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
000000000000703c         db         0xe4, 0xe0, 2 dup (0xff)                    ; begin 0x5120
0000000000007040         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5133)
0000000000007044         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007045         db  0x41 ; 'A'
0000000000007046         db  0x0e ; '.'
0000000000007047         db  0x10 ; '.'
0000000000007048         db  0x83 ; '.'
0000000000007049         db  0x02 ; '.'
000000000000704a         db  0x50 ; 'P'
000000000000704b         db  0x0e ; '.'
000000000000704c         db  0x08 ; '.'
000000000000704d         db  0x00 ; '.'
000000000000704e         db  0x00 ; '.'
000000000000704f         db  0x00 ; '.'
0000000000007050         dd         0x00000014                                  ; Length of the record
0000000000007054         dd         0x000009bc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007058         db         0xe8, 0xe0, 2 dup (0xff)                    ; begin 0x5140
000000000000705c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5175)
0000000000007060         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007061         db  0x4b ; 'K'
0000000000007062         db  0x0e ; '.'
0000000000007063         db  0x10 ; '.'
0000000000007064         db  0x00 ; '.'
0000000000007065         db  0x00 ; '.'
0000000000007066         db  0x00 ; '.'
0000000000007067         db  0x00 ; '.'
0000000000007068         dd         0x0000003c                                  ; Length of the record
000000000000706c         dd         0x000009d4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007070         db         0x10, 0xe1, 2 dup (0xff)                    ; begin 0x5180
0000000000007074         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5203)
0000000000007078         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007079         db  0x42 ; 'B'
000000000000707a         db  0x0e ; '.'
000000000000707b         db  0x10 ; '.'
000000000000707c         db  0x8d ; '.'
000000000000707d         db  0x02 ; '.'
000000000000707e         db  0x42 ; 'B'
000000000000707f         db  0x0e ; '.'
0000000000007080         db  0x18 ; '.'
0000000000007081         db  0x8c ; '.'
0000000000007082         db  0x03 ; '.'
0000000000007083         db  0x44 ; 'D'
0000000000007084         db  0x0e ; '.'
0000000000007085         db  0x20 ; ' '
0000000000007086         db  0x86 ; '.'
0000000000007087         db  0x04 ; '.'
0000000000007088         db  0x41 ; 'A'
0000000000007089         db  0x0e ; '.'
000000000000708a         db  0x28 ; '('
000000000000708b         db  0x83 ; '.'
000000000000708c         db  0x05 ; '.'
000000000000708d         db  0x4a ; 'J'
000000000000708e         db  0x0e ; '.'
000000000000708f         db  0x40 ; '@'
0000000000007090         db  0x02 ; '.'
0000000000007091         db  0x64 ; 'd'
0000000000007092         db  0x0a ; '.'
0000000000007093         db  0x0e ; '.'
0000000000007094         db  0x28 ; '('
0000000000007095         db  0x41 ; 'A'
0000000000007096         db  0x0e ; '.'
0000000000007097         db  0x20 ; ' '
0000000000007098         db  0x41 ; 'A'
0000000000007099         db  0x0e ; '.'
000000000000709a         db  0x18 ; '.'
000000000000709b         db  0x42 ; 'B'
000000000000709c         db  0x0e ; '.'
000000000000709d         db  0x10 ; '.'
000000000000709e         db  0x42 ; 'B'
000000000000709f         db  0x0e ; '.'
00000000000070a0         db  0x08 ; '.'
00000000000070a1         db  0x41 ; 'A'
00000000000070a2         db  0x0b ; '.'
00000000000070a3         db  0x00 ; '.'
00000000000070a4         db  0x00 ; '.'
00000000000070a5         db  0x00 ; '.'
00000000000070a6         db  0x00 ; '.'
00000000000070a7         db  0x00 ; '.'
00000000000070a8         dd         0x0000004c                                  ; Length of the record
00000000000070ac         dd         0x00000a14                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000070b0         db         0x60, 0xe1, 2 dup (0xff)                    ; begin 0x5210
00000000000070b4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x528d)
00000000000070b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070b9         db  0x42 ; 'B'
00000000000070ba         db  0x0e ; '.'
00000000000070bb         db  0x10 ; '.'
00000000000070bc         db  0x8c ; '.'
00000000000070bd         db  0x02 ; '.'
00000000000070be         db  0x41 ; 'A'
00000000000070bf         db  0x0e ; '.'
00000000000070c0         db  0x18 ; '.'
00000000000070c1         db  0x86 ; '.'
00000000000070c2         db  0x03 ; '.'
00000000000070c3         db  0x44 ; 'D'
00000000000070c4         db  0x0e ; '.'
00000000000070c5         db  0x20 ; ' '
00000000000070c6         db  0x83 ; '.'
00000000000070c7         db  0x04 ; '.'
00000000000070c8         db  0x69 ; 'i'
00000000000070c9         db  0x0a ; '.'
00000000000070ca         db  0x0e ; '.'
00000000000070cb         db  0x18 ; '.'
00000000000070cc         db  0x41 ; 'A'
00000000000070cd         db  0x0e ; '.'
00000000000070ce         db  0x10 ; '.'
00000000000070cf         db  0x42 ; 'B'
00000000000070d0         db  0x0e ; '.'
00000000000070d1         db  0x08 ; '.'
00000000000070d2         db  0x45 ; 'E'
00000000000070d3         db  0x0b ; '.'
00000000000070d4         db  0x55 ; 'U'
00000000000070d5         db  0x0a ; '.'
00000000000070d6         db  0x0e ; '.'
00000000000070d7         db  0x18 ; '.'
00000000000070d8         db  0x41 ; 'A'
00000000000070d9         db  0x0e ; '.'
00000000000070da         db  0x10 ; '.'
00000000000070db         db  0x42 ; 'B'
00000000000070dc         db  0x0e ; '.'
00000000000070dd         db  0x08 ; '.'
00000000000070de         db  0x48 ; 'H'
00000000000070df         db  0x0b ; '.'
00000000000070e0         db  0x41 ; 'A'
00000000000070e1         db  0x0a ; '.'
00000000000070e2         db  0x0e ; '.'
00000000000070e3         db  0x18 ; '.'
00000000000070e4         db  0x46 ; 'F'
00000000000070e5         db  0x0e ; '.'
00000000000070e6         db  0x10 ; '.'
00000000000070e7         db  0x42 ; 'B'
00000000000070e8         db  0x0e ; '.'
00000000000070e9         db  0x08 ; '.'
00000000000070ea         db  0x47 ; 'G'
00000000000070eb         db  0x0b ; '.'
00000000000070ec         db  0x49 ; 'I'
00000000000070ed         db  0x0e ; '.'
00000000000070ee         db  0x18 ; '.'
00000000000070ef         db  0x41 ; 'A'
00000000000070f0         db  0x0e ; '.'
00000000000070f1         db  0x10 ; '.'
00000000000070f2         db  0x42 ; 'B'
00000000000070f3         db  0x0e ; '.'
00000000000070f4         db  0x08 ; '.'
00000000000070f5         db  0x00 ; '.'
00000000000070f6         db  0x00 ; '.'
00000000000070f7         db  0x00 ; '.'
00000000000070f8         dd         0x0000001c                                  ; Length of the record
00000000000070fc         dd         0x00000a64                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007100         db         0x90, 0xe1, 2 dup (0xff)                    ; begin 0x5290
0000000000007104         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x52f0)
0000000000007108         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007109         db  0x44 ; 'D'
000000000000710a         db  0x0e ; '.'
000000000000710b         db  0x10 ; '.'
000000000000710c         db  0x75 ; 'u'
000000000000710d         db  0x0a ; '.'
000000000000710e         db  0x0e ; '.'
000000000000710f         db  0x08 ; '.'
0000000000007110         db  0x47 ; 'G'
0000000000007111         db  0x0b ; '.'
0000000000007112         db  0x5f ; '_'
0000000000007113         db  0x0e ; '.'
0000000000007114         db  0x08 ; '.'
0000000000007115         db  0x00 ; '.'
0000000000007116         db  0x00 ; '.'
0000000000007117         db  0x00 ; '.'
0000000000007118         dd         0x0000001c                                  ; Length of the record
000000000000711c         dd         0x00000a84                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007120         db         0xd0, 0xe1, 2 dup (0xff)                    ; begin 0x52f0
0000000000007124         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x532c)
0000000000007128         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007129         db  0x44 ; 'D'
000000000000712a         db  0x0e ; '.'
000000000000712b         db  0x10 ; '.'
000000000000712c         db  0x61 ; 'a'
000000000000712d         db  0x0a ; '.'
000000000000712e         db  0x0e ; '.'
000000000000712f         db  0x08 ; '.'
0000000000007130         db  0x4b ; 'K'
0000000000007131         db  0x0b ; '.'
0000000000007132         db  0x4b ; 'K'
0000000000007133         db  0x0e ; '.'
0000000000007134         db  0x08 ; '.'
0000000000007135         db  0x00 ; '.'
0000000000007136         db  0x00 ; '.'
0000000000007137         db  0x00 ; '.'
0000000000007138         dd         0x00000034                                  ; Length of the record
000000000000713c         dd         0x00000aa4                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007140         db         0xf0, 0xe1, 2 dup (0xff)                    ; begin 0x5330
0000000000007144         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x53ab)
0000000000007148         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007149         db  0x42 ; 'B'
000000000000714a         db  0x0e ; '.'
000000000000714b         db  0x10 ; '.'
000000000000714c         db  0x8c ; '.'
000000000000714d         db  0x02 ; '.'
000000000000714e         db  0x41 ; 'A'
000000000000714f         db  0x0e ; '.'
0000000000007150         db  0x18 ; '.'
0000000000007151         db  0x86 ; '.'
0000000000007152         db  0x03 ; '.'
0000000000007153         db  0x41 ; 'A'
0000000000007154         db  0x0e ; '.'
0000000000007155         db  0x20 ; ' '
0000000000007156         db  0x83 ; '.'
0000000000007157         db  0x04 ; '.'
0000000000007158         db  0x7d ; '}'
0000000000007159         db  0x0a ; '.'
000000000000715a         db  0x0e ; '.'
000000000000715b         db  0x18 ; '.'
000000000000715c         db  0x41 ; 'A'
000000000000715d         db  0x0e ; '.'
000000000000715e         db  0x10 ; '.'
000000000000715f         db  0x42 ; 'B'
0000000000007160         db  0x0e ; '.'
0000000000007161         db  0x08 ; '.'
0000000000007162         db  0x44 ; 'D'
0000000000007163         db  0x0b ; '.'
0000000000007164         db  0x60 ; '`'
0000000000007165         db  0x0a ; '.'
0000000000007166         db  0x0e ; '.'
0000000000007167         db  0x18 ; '.'
0000000000007168         db  0x41 ; 'A'
0000000000007169         db  0x0e ; '.'
000000000000716a         db  0x10 ; '.'
000000000000716b         db  0x42 ; 'B'
000000000000716c         db  0x0e ; '.'
000000000000716d         db  0x08 ; '.'
000000000000716e         db  0x45 ; 'E'
000000000000716f         db  0x0b ; '.'
0000000000007170         dd         0x0000001c                                  ; Length of the record
0000000000007174         dd         0x00000adc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007178         db         0x38, 0xe2, 2 dup (0xff)                    ; begin 0x53b0
000000000000717c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x53f0)
0000000000007180         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007181         db  0x44 ; 'D'
0000000000007182         db  0x0e ; '.'
0000000000007183         db  0x10 ; '.'
0000000000007184         db  0x83 ; '.'
0000000000007185         db  0x02 ; '.'
0000000000007186         db  0x5a ; 'Z'
0000000000007187         db  0x0a ; '.'
0000000000007188         db  0x0e ; '.'
0000000000007189         db  0x08 ; '.'
000000000000718a         db  0x4a ; 'J'
000000000000718b         db  0x0b ; '.'
000000000000718c         db  0x53 ; 'S'
000000000000718d         db  0x0e ; '.'
000000000000718e         db  0x08 ; '.'
000000000000718f         db  0x00 ; '.'
0000000000007190         dd         0x0000002c                                  ; Length of the record
0000000000007194         dd         0x00000afc                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007198         db         0x58, 0xe2, 2 dup (0xff)                    ; begin 0x53f0
000000000000719c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5447)
00000000000071a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071a1         db  0x63 ; 'c'
00000000000071a2         db  0x0e ; '.'
00000000000071a3         db  0x10 ; '.'
00000000000071a4         db  0x8c ; '.'
00000000000071a5         db  0x02 ; '.'
00000000000071a6         db  0x41 ; 'A'
00000000000071a7         db  0x0e ; '.'
00000000000071a8         db  0x18 ; '.'
00000000000071a9         db  0x86 ; '.'
00000000000071aa         db  0x03 ; '.'
00000000000071ab         db  0x44 ; 'D'
00000000000071ac         db  0x0e ; '.'
00000000000071ad         db  0x20 ; ' '
00000000000071ae         db  0x83 ; '.'
00000000000071af         db  0x04 ; '.'
00000000000071b0         db  0x6b ; 'k'
00000000000071b1         db  0x0e ; '.'
00000000000071b2         db  0x18 ; '.'
00000000000071b3         db  0x41 ; 'A'
00000000000071b4         db  0x0e ; '.'
00000000000071b5         db  0x10 ; '.'
00000000000071b6         db  0x42 ; 'B'
00000000000071b7         db  0x0e ; '.'
00000000000071b8         db  0x08 ; '.'
00000000000071b9         db  0x00 ; '.'
00000000000071ba         db  0x00 ; '.'
00000000000071bb         db  0x00 ; '.'
00000000000071bc         db  0x00 ; '.'
00000000000071bd         db  0x00 ; '.'
00000000000071be         db  0x00 ; '.'
00000000000071bf         db  0x00 ; '.'
00000000000071c0         dd         0x00000044                                  ; Length of the record
00000000000071c4         dd         0x00000b2c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000071c8         db         0x88, 0xe2, 2 dup (0xff)                    ; begin 0x5450
00000000000071cc         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x54b5)
00000000000071d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071d1         db  0x42 ; 'B'
00000000000071d2         db  0x0e ; '.'
00000000000071d3         db  0x10 ; '.'
00000000000071d4         db  0x8f ; '.'
00000000000071d5         db  0x02 ; '.'
00000000000071d6         db  0x42 ; 'B'
00000000000071d7         db  0x0e ; '.'
00000000000071d8         db  0x18 ; '.'
00000000000071d9         db  0x8e ; '.'
00000000000071da         db  0x03 ; '.'
00000000000071db         db  0x45 ; 'E'
00000000000071dc         db  0x0e ; '.'
00000000000071dd         db  0x20 ; ' '
00000000000071de         db  0x8d ; '.'
00000000000071df         db  0x04 ; '.'
00000000000071e0         db  0x42 ; 'B'
00000000000071e1         db  0x0e ; '.'
00000000000071e2         db  0x28 ; '('
00000000000071e3         db  0x8c ; '.'
00000000000071e4         db  0x05 ; '.'
00000000000071e5         db  0x48 ; 'H'
00000000000071e6         db  0x0e ; '.'
00000000000071e7         db  0x30 ; '0'
00000000000071e8         db  0x86 ; '.'
00000000000071e9         db  0x06 ; '.'
00000000000071ea         db  0x48 ; 'H'
00000000000071eb         db  0x0e ; '.'
00000000000071ec         db  0x38 ; '8'
00000000000071ed         db  0x83 ; '.'
00000000000071ee         db  0x07 ; '.'
00000000000071ef         db  0x4d ; 'M'
00000000000071f0         db  0x0e ; '.'
00000000000071f1         db  0x40 ; '@'
00000000000071f2         db  0x72 ; 'r'
00000000000071f3         db  0x0e ; '.'
00000000000071f4         db  0x38 ; '8'
00000000000071f5         db  0x41 ; 'A'
00000000000071f6         db  0x0e ; '.'
00000000000071f7         db  0x30 ; '0'
00000000000071f8         db  0x41 ; 'A'
00000000000071f9         db  0x0e ; '.'
00000000000071fa         db  0x28 ; '('
00000000000071fb         db  0x42 ; 'B'
00000000000071fc         db  0x0e ; '.'
00000000000071fd         db  0x20 ; ' '
00000000000071fe         db  0x42 ; 'B'
00000000000071ff         db  0x0e ; '.'
0000000000007200         db  0x18 ; '.'
0000000000007201         db  0x42 ; 'B'
0000000000007202         db  0x0e ; '.'
0000000000007203         db  0x10 ; '.'
0000000000007204         db  0x42 ; 'B'
0000000000007205         db  0x0e ; '.'
0000000000007206         db  0x08 ; '.'
0000000000007207         db  0x00 ; '.'
0000000000007208         dd         0x00000014                                  ; Length of the record
000000000000720c         dd         0x00000b74                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007210         db         0xb0, 0xe2, 2 dup (0xff)                    ; begin 0x54c0
0000000000007214         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x54c2)
0000000000007218         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007219         align      32
0000000000007220         dd         0x00000010                                  ; Length of the record
0000000000007224         dd         0x00000b8c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
0000000000007228         db         0xa8, 0xe2, 2 dup (0xff)                    ; begin 0x54d0
000000000000722c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x54de)
0000000000007230         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007231         align      8


        ; Segment Segment 3
        ; Range: [0x207a90; 0x208258[ (1992 bytes)
        ; File offset : [31376; 32960[ (1584 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207a90; 0x207a98[ (8 bytes)
        ; File offset : [31376; 31384[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207a90         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207a98; 0x207aa0[ (8 bytes)
        ; File offset : [31384; 31392[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207a98         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207aa0; 0x207c38[ (408 bytes)
        ; File offset : [31392; 31800[ (408 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options.7050:
0000000000207aa0         db  0x5b ; '['                                         ; DATA XREF=main+169
0000000000207aa1         db  0x56 ; 'V'
0000000000207aa2         db  0x00 ; '.'
0000000000207aa3         db  0x00 ; '.'
0000000000207aa4         db  0x00 ; '.'
0000000000207aa5         db  0x00 ; '.'
0000000000207aa6         db  0x00 ; '.'
0000000000207aa7         db  0x00 ; '.'
0000000000207aa8         db  0x00 ; '.'
0000000000207aa9         db  0x00 ; '.'
0000000000207aaa         db  0x00 ; '.'
0000000000207aab         db  0x00 ; '.'
0000000000207aac         db  0x00 ; '.'
0000000000207aad         db  0x00 ; '.'
0000000000207aae         db  0x00 ; '.'
0000000000207aaf         db  0x00 ; '.'
0000000000207ab0         db  0x00 ; '.'
0000000000207ab1         db  0x00 ; '.'
0000000000207ab2         db  0x00 ; '.'
0000000000207ab3         db  0x00 ; '.'
0000000000207ab4         db  0x00 ; '.'
0000000000207ab5         db  0x00 ; '.'
0000000000207ab6         db  0x00 ; '.'
0000000000207ab7         db  0x00 ; '.'
0000000000207ab8         db  0x62 ; 'b'
0000000000207ab9         db  0x00 ; '.'
0000000000207aba         db  0x00 ; '.'
0000000000207abb         db  0x00 ; '.'
0000000000207abc         db  0x00 ; '.'
0000000000207abd         db  0x00 ; '.'
0000000000207abe         db  0x00 ; '.'
0000000000207abf         db  0x00 ; '.'
0000000000207ac0         db  0x6b ; 'k'
0000000000207ac1         db  0x56 ; 'V'
0000000000207ac2         db  0x00 ; '.'
0000000000207ac3         db  0x00 ; '.'
0000000000207ac4         db  0x00 ; '.'
0000000000207ac5         db  0x00 ; '.'
0000000000207ac6         db  0x00 ; '.'
0000000000207ac7         db  0x00 ; '.'
0000000000207ac8         db  0x00 ; '.'
0000000000207ac9         db  0x00 ; '.'
0000000000207aca         db  0x00 ; '.'
0000000000207acb         db  0x00 ; '.'
0000000000207acc         db  0x00 ; '.'
0000000000207acd         db  0x00 ; '.'
0000000000207ace         db  0x00 ; '.'
0000000000207acf         db  0x00 ; '.'
0000000000207ad0         db  0x00 ; '.'
0000000000207ad1         db  0x00 ; '.'
0000000000207ad2         db  0x00 ; '.'
0000000000207ad3         db  0x00 ; '.'
0000000000207ad4         db  0x00 ; '.'
0000000000207ad5         db  0x00 ; '.'
0000000000207ad6         db  0x00 ; '.'
0000000000207ad7         db  0x00 ; '.'
0000000000207ad8         db  0x6e ; 'n'
0000000000207ad9         db  0x00 ; '.'
0000000000207ada         db  0x00 ; '.'
0000000000207adb         db  0x00 ; '.'
0000000000207adc         db  0x00 ; '.'
0000000000207add         db  0x00 ; '.'
0000000000207ade         db  0x00 ; '.'
0000000000207adf         db  0x00 ; '.'
0000000000207ae0         db  0x72 ; 'r'
0000000000207ae1         db  0x56 ; 'V'
0000000000207ae2         db  0x00 ; '.'
0000000000207ae3         db  0x00 ; '.'
0000000000207ae4         db  0x00 ; '.'
0000000000207ae5         db  0x00 ; '.'
0000000000207ae6         db  0x00 ; '.'
0000000000207ae7         db  0x00 ; '.'
0000000000207ae8         db  0x00 ; '.'
0000000000207ae9         db  0x00 ; '.'
0000000000207aea         db  0x00 ; '.'
0000000000207aeb         db  0x00 ; '.'
0000000000207aec         db  0x00 ; '.'
0000000000207aed         db  0x00 ; '.'
0000000000207aee         db  0x00 ; '.'
0000000000207aef         db  0x00 ; '.'
0000000000207af0         db  0x00 ; '.'
0000000000207af1         db  0x00 ; '.'
0000000000207af2         db  0x00 ; '.'
0000000000207af3         db  0x00 ; '.'
0000000000207af4         db  0x00 ; '.'
0000000000207af5         db  0x00 ; '.'
0000000000207af6         db  0x00 ; '.'
0000000000207af7         db  0x00 ; '.'
0000000000207af8         db  0x73 ; 's'
0000000000207af9         db  0x00 ; '.'
0000000000207afa         db  0x00 ; '.'
0000000000207afb         db  0x00 ; '.'
0000000000207afc         db  0x00 ; '.'
0000000000207afd         db  0x00 ; '.'
0000000000207afe         db  0x00 ; '.'
0000000000207aff         db  0x00 ; '.'
0000000000207b00         db  0x80 ; '.'
0000000000207b01         db  0x56 ; 'V'
0000000000207b02         db  0x00 ; '.'
0000000000207b03         db  0x00 ; '.'
0000000000207b04         db  0x00 ; '.'
0000000000207b05         db  0x00 ; '.'
0000000000207b06         db  0x00 ; '.'
0000000000207b07         db  0x00 ; '.'
0000000000207b08         db  0x00 ; '.'
0000000000207b09         db  0x00 ; '.'
0000000000207b0a         db  0x00 ; '.'
0000000000207b0b         db  0x00 ; '.'
0000000000207b0c         db  0x00 ; '.'
0000000000207b0d         db  0x00 ; '.'
0000000000207b0e         db  0x00 ; '.'
0000000000207b0f         db  0x00 ; '.'
0000000000207b10         db  0x00 ; '.'
0000000000207b11         db  0x00 ; '.'
0000000000207b12         db  0x00 ; '.'
0000000000207b13         db  0x00 ; '.'
0000000000207b14         db  0x00 ; '.'
0000000000207b15         db  0x00 ; '.'
0000000000207b16         db  0x00 ; '.'
0000000000207b17         db  0x00 ; '.'
0000000000207b18         db  0x76 ; 'v'
0000000000207b19         db  0x00 ; '.'
0000000000207b1a         db  0x00 ; '.'
0000000000207b1b         db  0x00 ; '.'
0000000000207b1c         db  0x00 ; '.'
0000000000207b1d         db  0x00 ; '.'
0000000000207b1e         db  0x00 ; '.'
0000000000207b1f         db  0x00 ; '.'
0000000000207b20         db  0x91 ; '.'
0000000000207b21         db  0x56 ; 'V'
0000000000207b22         db  0x00 ; '.'
0000000000207b23         db  0x00 ; '.'
0000000000207b24         db  0x00 ; '.'
0000000000207b25         db  0x00 ; '.'
0000000000207b26         db  0x00 ; '.'
0000000000207b27         db  0x00 ; '.'
0000000000207b28         db  0x00 ; '.'
0000000000207b29         db  0x00 ; '.'
0000000000207b2a         db  0x00 ; '.'
0000000000207b2b         db  0x00 ; '.'
0000000000207b2c         db  0x00 ; '.'
0000000000207b2d         db  0x00 ; '.'
0000000000207b2e         db  0x00 ; '.'
0000000000207b2f         db  0x00 ; '.'
0000000000207b30         db  0x00 ; '.'
0000000000207b31         db  0x00 ; '.'
0000000000207b32         db  0x00 ; '.'
0000000000207b33         db  0x00 ; '.'
0000000000207b34         db  0x00 ; '.'
0000000000207b35         db  0x00 ; '.'
0000000000207b36         db  0x00 ; '.'
0000000000207b37         db  0x00 ; '.'
0000000000207b38         db  0x45 ; 'E'
0000000000207b39         db  0x00 ; '.'
0000000000207b3a         db  0x00 ; '.'
0000000000207b3b         db  0x00 ; '.'
0000000000207b3c         db  0x00 ; '.'
0000000000207b3d         db  0x00 ; '.'
0000000000207b3e         db  0x00 ; '.'
0000000000207b3f         db  0x00 ; '.'
0000000000207b40         db  0x9b ; '.'
0000000000207b41         db  0x56 ; 'V'
0000000000207b42         db  0x00 ; '.'
0000000000207b43         db  0x00 ; '.'
0000000000207b44         db  0x00 ; '.'
0000000000207b45         db  0x00 ; '.'
0000000000207b46         db  0x00 ; '.'
0000000000207b47         db  0x00 ; '.'
0000000000207b48         db  0x00 ; '.'
0000000000207b49         db  0x00 ; '.'
0000000000207b4a         db  0x00 ; '.'
0000000000207b4b         db  0x00 ; '.'
0000000000207b4c         db  0x00 ; '.'
0000000000207b4d         db  0x00 ; '.'
0000000000207b4e         db  0x00 ; '.'
0000000000207b4f         db  0x00 ; '.'
0000000000207b50         db  0x00 ; '.'
0000000000207b51         db  0x00 ; '.'
0000000000207b52         db  0x00 ; '.'
0000000000207b53         db  0x00 ; '.'
0000000000207b54         db  0x00 ; '.'
0000000000207b55         db  0x00 ; '.'
0000000000207b56         db  0x00 ; '.'
0000000000207b57         db  0x00 ; '.'
0000000000207b58         db  0x54 ; 'T'
0000000000207b59         db  0x00 ; '.'
0000000000207b5a         db  0x00 ; '.'
0000000000207b5b         db  0x00 ; '.'
0000000000207b5c         db  0x00 ; '.'
0000000000207b5d         db  0x00 ; '.'
0000000000207b5e         db  0x00 ; '.'
0000000000207b5f         db  0x00 ; '.'
0000000000207b60         db  0xa5 ; '.'
0000000000207b61         db  0x56 ; 'V'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x00 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x41 ; 'A'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0xae ; '.'
0000000000207b81         db  0x56 ; 'V'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x7e ; '~'
0000000000207b99         db  0xff ; '.'
0000000000207b9a         db  0xff ; '.'
0000000000207b9b         db  0xff ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0xb3 ; '.'
0000000000207ba1         db  0x56 ; 'V'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7d ; '}'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x00 ; '.'
0000000000207bc1         db  0x00 ; '.'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x00 ; '.'
0000000000207bd9         db  0x00 ; '.'
0000000000207bda         db  0x00 ; '.'
0000000000207bdb         db  0x00 ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000207be0         db  0xa1 ; '.'
0000000000207be1         db  0x5b ; '['
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0xa9 ; '.'
0000000000207be9         db  0x5b ; '['
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0xaf ; '.'
0000000000207bf1         db  0x5b ; '['
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0xbc ; '.'
0000000000207bf9         db  0x5b ; '['
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
0000000000207c00         db  0xc9 ; '.'
0000000000207c01         db  0x5b ; '['
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0xdd ; '.'
0000000000207c09         db  0x5b ; '['
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0xdf ; '.'
0000000000207c11         db  0x5b ; '['
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0xc2 ; '.'
0000000000207c19         db  0x5b ; '['
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0xc8 ; '.'
0000000000207c21         db  0x55 ; 'U'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0xe7 ; '.'
0000000000207c29         db  0x5b ; '['
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x00 ; '.'
0000000000207c31         db  0x00 ; '.'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c38; 0x207e28[ (496 bytes)
        ; File offset : [31800; 32296[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c38         db  0x01 ; '.'
0000000000207c39         db  0x00 ; '.'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x01 ; '.'
0000000000207c41         db  0x00 ; '.'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x0c ; '.'
0000000000207c49         db  0x00 ; '.'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x50 ; 'P'
0000000000207c51         db  0x14 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'
0000000000207c58         db  0x0d ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0xe0 ; '.'
0000000000207c61         db  0x54 ; 'T'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x19 ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x90 ; '.'
0000000000207c71         db  0x7a ; 'z'
0000000000207c72         db  0x20 ; ' '
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x1b ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x08 ; '.'
0000000000207c81         db  0x00 ; '.'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x1a ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x98 ; '.'
0000000000207c91         db  0x7a ; 'z'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1c ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0xf5 ; '.'
0000000000207ca9         db  0xfe ; '.'
0000000000207caa         db  0xff ; '.'
0000000000207cab         db  0x6f ; 'o'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x98 ; '.'
0000000000207cb1         db  0x02 ; '.'
0000000000207cb2         db  0x00 ; '.'
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x05 ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0xa8 ; '.'
0000000000207cc1         db  0x08 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0x06 ; '.'
0000000000207cc9         db  0x00 ; '.'
0000000000207cca         db  0x00 ; '.'
0000000000207ccb         db  0x00 ; '.'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0xd8 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x0a ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0xba ; '.'
0000000000207ce1         db  0x02 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x0b ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0x18 ; '.'
0000000000207cf1         db  0x00 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x15 ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0x00 ; '.'
0000000000207d01         db  0x00 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x03 ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x28 ; '('
0000000000207d11         db  0x7e ; '~'
0000000000207d12         db  0x20 ; ' '
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x02 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x98 ; '.'
0000000000207d21         db  0x04 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x14 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x07 ; '.'
0000000000207d31         db  0x00 ; '.'
0000000000207d32         db  0x00 ; '.'
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x17 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0xb8 ; '.'
0000000000207d41         db  0x0f ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x07 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x40 ; '@'
0000000000207d51         db  0x0c ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x08 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x78 ; 'x'
0000000000207d61         db  0x03 ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x09 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x18 ; '.'
0000000000207d71         db  0x00 ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x1e ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x08 ; '.'
0000000000207d81         db  0x00 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0xfb ; '.'
0000000000207d89         db  0xff ; '.'
0000000000207d8a         db  0xff ; '.'
0000000000207d8b         db  0x6f ; 'o'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x01 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x08 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0xfe ; '.'
0000000000207d99         db  0xff ; '.'
0000000000207d9a         db  0xff ; '.'
0000000000207d9b         db  0x6f ; 'o'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0xe0 ; '.'
0000000000207da1         db  0x0b ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xff ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x00 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xf0 ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0x62 ; 'b'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xf9 ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x1b ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0x00 ; '.'
0000000000207dd9         db  0x00 ; '.'
0000000000207dda         db  0x00 ; '.'
0000000000207ddb         db  0x00 ; '.'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x00 ; '.'
0000000000207de1         db  0x00 ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0x00 ; '.'
0000000000207de9         db  0x00 ; '.'
0000000000207dea         db  0x00 ; '.'
0000000000207deb         db  0x00 ; '.'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x00 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e28; 0x207ff0[ (456 bytes)
        ; File offset : [32296; 32752[ (456 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e28         db  0x38 ; '8'
0000000000207e29         db  0x7c ; '|'
0000000000207e2a         db  0x20 ; ' '
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
                     qword_207e30:
0000000000207e30         dq         0x0000000000000000                          ; DATA XREF=0x1470
0000000000207e38         db  0x00 ; '.'                                         ; DATA XREF=0x1476
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000207e40         dq         0x0000000000208260                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e48         dq         0x0000000000208268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e50         dq         0x0000000000208270                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e58         dq         0x0000000000208278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e60         dq         0x0000000000208288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e68         dq         0x0000000000208290                          ; DATA XREF=j___fpending
                     write@GOT:        // write
0000000000207e70         dq         0x0000000000208298                          ; DATA XREF=j_write
                     textdomain@GOT:        // textdomain
0000000000207e78         dq         0x00000000002082a0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207e80         dq         0x00000000002082a8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207e88         dq         0x00000000002082b0                          ; DATA XREF=j_bindtextdomain
                     stpcpy@GOT:        // stpcpy
0000000000207e90         dq         0x00000000002082b8                          ; DATA XREF=j_stpcpy
                     dcgettext@GOT:        // dcgettext
0000000000207e98         dq         0x00000000002082c0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ea0         dq         0x00000000002082c8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ea8         dq         0x00000000002082d0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207eb0         dq         0x00000000002082d8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207eb8         dq         0x00000000002082e0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ec0         dq         0x00000000002082e8                          ; DATA XREF=j_mbrtowc
                     strrchr@GOT:        // strrchr
0000000000207ec8         dq         0x00000000002082f0                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ed0         dq         0x00000000002082f8                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000207ed8         dq         0x0000000000208300                          ; DATA XREF=j_memset
                     ioctl@GOT:        // ioctl
0000000000207ee0         dq         0x0000000000208308                          ; DATA XREF=j_ioctl
                     close@GOT:        // close
0000000000207ee8         dq         0x0000000000208310                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207ef0         dq         0x0000000000208318                          ; DATA XREF=j_posix_fadvise
                     read@GOT:        // read
0000000000207ef8         dq         0x0000000000208320                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
0000000000207f00         dq         0x0000000000208330                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f08         dq         0x0000000000208338                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f10         dq         0x0000000000208340                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f18         dq         0x0000000000208350                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f20         dq         0x0000000000208358                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f28         dq         0x0000000000208360                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f30         dq         0x0000000000208368                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f38         dq         0x0000000000208370                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
0000000000207f40         dq         0x0000000000208378                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
0000000000207f48         dq         0x0000000000208380                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f50         dq         0x0000000000208388                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f58         dq         0x0000000000208390                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f60         dq         0x0000000000208398                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000207f68         dq         0x00000000002083a0                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000207f70         dq         0x00000000002083a8                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000207f78         dq         0x00000000002083b0                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000207f80         dq         0x00000000002083b8                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f88         dq         0x00000000002083c0                          ; DATA XREF=j___cxa_atexit
                     getpagesize@GOT:        // getpagesize
0000000000207f90         dq         0x00000000002083c8                          ; DATA XREF=j_getpagesize
                     exit@GOT:        // exit
0000000000207f98         dq         0x00000000002083d0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207fa0         dq         0x00000000002083d8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa8         dq         0x00000000002083e0                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fb0         dq         0x00000000002083f0                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb8         dq         0x00000000002083f8                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fc0         dq         0x0000000000208408                          ; DATA XREF=j___ctype_b_loc
                     qword_207fc8:
0000000000207fc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fd1         db  0x00 ; '.'
0000000000207fd2         db  0x00 ; '.'
0000000000207fd3         db  0x00 ; '.'
0000000000207fd4         db  0x00 ; '.'
0000000000207fd5         db  0x00 ; '.'
0000000000207fd6         db  0x00 ; '.'
0000000000207fd7         db  0x00 ; '.'
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe8, __do_global_dtors_aux+9
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x2080c0[ (192 bytes)
        ; File offset : [32768; 32960[ (192 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     line_buf:
0000000000208010         db         "                 0\t", 0                   ; DATA XREF=next_line_num+48, next_line_num+104
0000000000208024         align      8
                     line_num_start:
0000000000208028         dq         0x0000000000208021                          ; DATA XREF=next_line_num, next_line_num+68
                     line_num_print:
0000000000208030         dq         0x000000000020801c                          ; DATA XREF=main+1197, main+1652, next_line_num+75, next_line_num+91
                     Version:
0000000000208038         dq         0x0000000000005b3b                          ; "8.31", DATA XREF=main+358
                     exit_failure:
0000000000208040         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
0000000000208058         db  0x00 ; '.'
0000000000208059         db  0x00 ; '.'
000000000020805a         db  0x00 ; '.'
000000000020805b         db  0x00 ; '.'
000000000020805c         db  0x00 ; '.'
000000000020805d         db  0x00 ; '.'
000000000020805e         db  0x00 ; '.'
000000000020805f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208060         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208061         db  0x00 ; '.'
0000000000208062         db  0x00 ; '.'
0000000000208063         db  0x00 ; '.'
0000000000208064         db  0x00 ; '.'
0000000000208065         db  0x00 ; '.'
0000000000208066         db  0x00 ; '.'
0000000000208067         db  0x00 ; '.'
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
0000000000208070         db  0x00 ; '.'
0000000000208071         db  0x00 ; '.'
0000000000208072         db  0x00 ; '.'
0000000000208073         db  0x00 ; '.'
0000000000208074         db  0x00 ; '.'
0000000000208075         db  0x00 ; '.'
0000000000208076         db  0x00 ; '.'
0000000000208077         db  0x00 ; '.'
0000000000208078         db  0x00 ; '.'
0000000000208079         db  0x00 ; '.'
000000000020807a         db  0x00 ; '.'
000000000020807b         db  0x00 ; '.'
000000000020807c         db  0x00 ; '.'
000000000020807d         db  0x00 ; '.'
000000000020807e         db  0x00 ; '.'
000000000020807f         db  0x00 ; '.'
0000000000208080         db  0x00 ; '.'
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
0000000000208088         db  0x00 ; '.'
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
0000000000208090         db  0x00 ; '.'
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     nslots:
0000000000208098         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020809c         align      32
                     slotvec:
00000000002080a0         dq         0x00000000002080b0                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
00000000002080a8         db  0x00 ; '.'
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
                     slotvec0:
00000000002080b0         dq         1.26481e-321, 1.05246e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x2080c0; 0x208258[ (408 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=main+351, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+944, close_stdout+6, emit_bug_reporting_address+90
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002080d0         db  0x00 ; '.'                                         ; DATA XREF=main+499
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080d8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     completed.7697:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     newlines2:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=main+919, main+2178, main+2300, main+2955
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
                     input_desc:
00000000002080f4         db  0x00 ; '.'                                         ; DATA XREF=main+700, main+1098, main+1760, main+1945, main+2246, main+2352, main+2719
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     infile:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=main+632, main+659, main+1957, main+2103, main+2212, main+2384, main+2455, main+2745, main+2870
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
                     file_name:
0000000000208108         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
                     program_name:
0000000000208110         db  0x00 ; '.'                                         ; DATA XREF=usage+20, usage+347, set_program_name+109
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
0000000000208118         db  0x00 ; '.'
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
                     slot0:
0000000000208120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
0000000000208200         db  0x00 ; '.'
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
                     default_quoting_options:
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'
0000000000208238         db  0x00 ; '.'
0000000000208239         db  0x00 ; '.'
000000000020823a         db  0x00 ; '.'
000000000020823b         db  0x00 ; '.'
000000000020823c         db  0x00 ; '.'
000000000020823d         db  0x00 ; '.'
000000000020823e         db  0x00 ; '.'
000000000020823f         db  0x00 ; '.'
0000000000208240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208241         db  0x00 ; '.'
0000000000208242         db  0x00 ; '.'
0000000000208243         db  0x00 ; '.'
0000000000208244         db  0x00 ; '.'
0000000000208245         db  0x00 ; '.'
0000000000208246         db  0x00 ; '.'
0000000000208247         db  0x00 ; '.'
0000000000208248         db  0x00 ; '.'
0000000000208249         db  0x00 ; '.'
000000000020824a         db  0x00 ; '.'
000000000020824b         db  0x00 ; '.'
000000000020824c         db  0x00 ; '.'
000000000020824d         db  0x00 ; '.'
000000000020824e         db  0x00 ; '.'
000000000020824f         db  0x00 ; '.'
                     qword_208250:
0000000000208250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208251         db  0x00 ; '.'
0000000000208252         db  0x00 ; '.'
0000000000208253         db  0x00 ; '.'
0000000000208254         db  0x00 ; '.'
0000000000208255         db  0x00 ; '.'
0000000000208256         db  0x00 ; '.'
0000000000208257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208260; 0x2085c0[ (864 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208260; 0x410820[ (2131392 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
0000000000208260         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208280         extern function code
                     _exit:
0000000000208288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208290         extern function code                                   ; DATA XREF=__fpending@GOT
                     write:
0000000000208298         extern function code                                   ; DATA XREF=write@GOT
                     textdomain:
00000000002082a0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002082a8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002082b0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     stpcpy:
00000000002082b8         extern function code                                   ; DATA XREF=stpcpy@GOT
                     dcgettext:
00000000002082c0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082c8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082d0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082d8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082e0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082e8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strrchr:
00000000002082f0         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002082f8         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
0000000000208300         extern function code                                   ; DATA XREF=memset@GOT
                     ioctl:
0000000000208308         extern function code                                   ; DATA XREF=ioctl@GOT
                     close:
0000000000208310         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
0000000000208318         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     read:
0000000000208320         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
0000000000208328         extern function code
                     memcmp:
0000000000208330         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208338         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208340         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
0000000000208348         extern function code
                     memcpy:
0000000000208350         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208358         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000208360         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208368         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208370         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
0000000000208378         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
0000000000208380         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000208388         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208390         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208398         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
00000000002083a0         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
00000000002083a8         extern function code                                   ; DATA XREF=error@GOT
                     open:
00000000002083b0         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
00000000002083b8         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
00000000002083c0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     getpagesize:
00000000002083c8         extern function code                                   ; DATA XREF=getpagesize@GOT
                     exit:
00000000002083d0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083d8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083e0         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083e8         extern function code
                     mbsinit:
00000000002083f0         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083f8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000208400         extern function code
                     __ctype_b_loc:
0000000000208408         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
0000000000208410         extern function code
                     abort@@GLIBC_2.2.5:
0000000000208418         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208420         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208428         extern function code
                     _ITM_deregisterTMCloneTable_208430:        // _ITM_deregisterTMCloneTable
0000000000208430         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208438         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208440         extern function code
                     write@@GLIBC_2.2.5:
0000000000208448         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208450         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208458         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208460         extern function code
                     stpcpy@@GLIBC_2.2.5:
0000000000208468         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208470         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208478         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208480         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208488         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208490         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208498         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     memset@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     ioctl@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     close@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002084c8         extern function code
                     read@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     __gmon_start___2084f8:        // __gmon_start__
00000000002084f8         extern function code
                     memcpy@@GLIBC_2.14:
0000000000208500         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000208508         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000208510         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000208518         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000208520         extern function code
                     __fxstat@@GLIBC_2.2.5:
0000000000208528         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208530         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208538         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208540         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208548         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000208550         extern function code
                     error@@GLIBC_2.2.5:
0000000000208558         extern function code
                     open@@GLIBC_2.2.5:
0000000000208560         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208568         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208570         extern function code
                     getpagesize@@GLIBC_2.2.5:
0000000000208578         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208580         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208588         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208590         extern function code
                     _ITM_registerTMCloneTable_208598:        // _ITM_registerTMCloneTable
0000000000208598         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002085a0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002085a8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002085b0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002085b8         extern function code
