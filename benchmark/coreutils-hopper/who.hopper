
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/who
        UUID: 639B6383-3A73-B0E8-A962-7616F5385C4C
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xa8c8[ (43208 bytes)
        ; File offset : [0; 43208[ (43208 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x1f ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc8 ; '.'
0000000000000029         db  0x74 ; 't'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xc8 ; '.'
00000000000000d1         db  0xa8 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xc8 ; '.'
00000000000000d9         db  0xa8 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0xa9 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0xa9 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=who+595, quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xa9 ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x07 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xc8 ; '.'
0000000000000111         db  0x09 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xd8 ; '.'
0000000000000129         db  0xab ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xd8 ; '.'
0000000000000131         db  0xab ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xd8 ; '.'
0000000000000139         db  0xab ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=who+368, who+482, read_utmp+151, read_utmp+352
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xbc ; '.'
0000000000000199         db  0x97 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xbc ; '.'
00000000000001a1         db  0x97 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xbc ; '.'
00000000000001a9         db  0x97 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xbc ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xbc ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0xa9 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0xa9 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0xa9 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'                                         ; DATA XREF=print_user+33, print_user+579
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x63 ; 'c'
0000000000000285         db  0x9b ; '.'
0000000000000286         db  0x63 ; 'c'
0000000000000287         db  0x83 ; '.'
0000000000000288         db  0x3a ; ':'
0000000000000289         db  0x73 ; 's'
000000000000028a         db  0xb0 ; '.'
000000000000028b         db  0xe8 ; '.'
000000000000028c         db  0xa9 ; '.'
000000000000028d         db  0x62 ; 'b'
000000000000028e         db  0x76 ; 'v'
000000000000028f         db  0x16 ; '.'
0000000000000290         db  0xf5 ; '.'
0000000000000291         db  0x38 ; '8'
0000000000000292         db  0x5c ; '\'
0000000000000293         db  0x4c ; 'L'
0000000000000294         db  0x88 ; '.'
0000000000000295         db  0xff ; '.'
0000000000000296         db  0x0f ; '.'
0000000000000297         db  0x89 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2d8[ (64 bytes)
        ; File offset : [664; 728[ (64 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x43 ; 'C'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x43 ; 'C'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x44 ; 'D'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x49 ; 'I'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x33 ; '3'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2d8; 0x9c8[ (1776 bytes)
        ; File offset : [728; 2504[ (1776 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002d8         db  0x00 ; '.'
00000000000002d9         db  0x00 ; '.'
00000000000002da         db  0x00 ; '.'
00000000000002db         db  0x00 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'
00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0xbd ; '.'
00000000000002f1         db  0x01 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x12 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0xa2 ; '.'
0000000000000309         db  0x01 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x12 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x94 ; '.'
0000000000000321         db  0x02 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0xe8 ; '.'
0000000000000339         db  0x01 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x95 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x12 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x1e ; '.'
0000000000000369         db  0x01 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x12 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x66 ; 'f'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x12 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x45 ; 'E'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x12 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0xf8 ; '.'
00000000000003b1         db  0x02 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x20 ; ' '
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x9b ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x12 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0xdd ; '.'
00000000000003f9         db  0x01 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x6e ; 'n'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x61 ; 'a'
0000000000000429         db  0x02 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0xf2 ; '.'
0000000000000441         db  0x01 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x60 ; '`'
0000000000000459         db  0x01 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x5d ; ']'
0000000000000471         db  0x02 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x5c ; '\'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0xe6 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x04 ; '.'
00000000000004b9         db  0x01 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x73 ; 's'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0xb1 ; '.'
00000000000004e9         db  0x01 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x30 ; '0'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0xfc ; '.'
0000000000000519         db  0x01 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x38 ; '8'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x54 ; 'T'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x53 ; 'S'
0000000000000561         db  0x01 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0xce ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x17 ; '.'
0000000000000591         db  0x01 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0xc7 ; '.'
00000000000005a9         db  0x01 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x12 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x6c ; 'l'
00000000000005c1         db  0x02 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x12 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x2f ; '/'
00000000000005d9         db  0x01 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x85 ; '.'
00000000000005f1         db  0x02 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0xfd ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x12 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0xdc ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x14 ; '.'
0000000000000639         db  0x03 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x20 ; ' '
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x59 ; 'Y'
0000000000000651         db  0x01 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0xa1 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0xc9 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0xcf ; '.'
0000000000000699         db  0x01 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x12 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x55 ; 'U'
00000000000006b1         db  0x02 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x67 ; 'g'
00000000000006c9         db  0x01 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x0b ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x76 ; 'v'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x90 ; '.'
0000000000000711         db  0x01 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x36 ; '6'
0000000000000729         db  0x01 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x8d ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x26 ; '&'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x19 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x12 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0xc5 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x12 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x21 ; '!'
00000000000007a1         db  0x02 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x3f ; '?'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x12 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x7e ; '~'
00000000000007d1         db  0x02 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x12 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0xb4 ; '.'
00000000000007e9         db  0x02 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x12 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x9c ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x12 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x00 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0xd6 ; '.'
0000000000000819         db  0x01 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x12 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x00 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x3e ; '>'
0000000000000831         db  0x01 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x12 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x00 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x23 ; '#'
0000000000000849         db  0x03 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x20 ; ' '
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x00 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x0b ; '.'
0000000000000861         db  0x01 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x12 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0xbe ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x12 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x6e ; 'n'
0000000000000891         db  0x01 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x12 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x84 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x12 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x00 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x2b ; '+'
00000000000008c1         db  0x02 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x22 ; '"'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x00 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x82 ; '.'
00000000000008d9         db  0x01 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x12 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x00 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x3a ; ':'
00000000000008f1         db  0x02 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x12 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x00 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x47 ; 'G'
0000000000000909         db  0x02 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x12 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x00 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x4c ; 'L'
0000000000000921         db  0x01 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x11 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x19 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xa8 ; '.'
0000000000000929         db  0xb0 ; '.'
000000000000092a         db  0x20 ; ' '
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x00 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x08 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x99 ; '.'
0000000000000939         db  0x02 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x11 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x19 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0xa0 ; '.'
0000000000000941         db  0xb0 ; '.'
0000000000000942         db  0x20 ; ' '
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x00 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x08 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0xa6 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x21 ; '!'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x19 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0xb8 ; '.'
0000000000000959         db  0xb0 ; '.'
000000000000095a         db  0x20 ; ' '
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x08 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0xa4 ; '.'
0000000000000969         db  0x02 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x11 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x19 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0xb8 ; '.'
0000000000000971         db  0xb0 ; '.'
0000000000000972         db  0x20 ; ' '
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x00 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x08 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x03 ; '.'
0000000000000981         db  0x02 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x21 ; '!'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x19 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0xa0 ; '.'
0000000000000989         db  0xb0 ; '.'
000000000000098a         db  0x20 ; ' '
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x00 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x08 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x9b ; '.'
0000000000000999         db  0x01 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x11 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x19 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0xc0 ; '.'
00000000000009a1         db  0xb0 ; '.'
00000000000009a2         db  0x20 ; ' '
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x08 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x4d ; 'M'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x11 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x19 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0xb0 ; '.'
00000000000009b9         db  0xb0 ; '.'
00000000000009ba         db  0x20 ; ' '
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x04 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x9c8; 0xd05[ (829 bytes)
        ; File offset : [2504; 3333[ (829 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x6c ; 'l'
00000000000009ca         db  0x69 ; 'i'
00000000000009cb         db  0x62 ; 'b'
00000000000009cc         db  0x63 ; 'c'
00000000000009cd         db  0x2e ; '.'
00000000000009ce         db  0x73 ; 's'
00000000000009cf         db  0x6f ; 'o'
00000000000009d0         db  0x2e ; '.'
00000000000009d1         db  0x36 ; '6'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x66 ; 'f'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x6c ; 'l'
00000000000009d6         db  0x75 ; 'u'
00000000000009d7         db  0x73 ; 's'
00000000000009d8         db  0x68 ; 'h'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x73 ; 's'
00000000000009db         db  0x74 ; 't'
00000000000009dc         db  0x72 ; 'r'
00000000000009dd         db  0x63 ; 'c'
00000000000009de         db  0x70 ; 'p'
00000000000009df         db  0x79 ; 'y'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x5f ; '_'
00000000000009e2         db  0x5f ; '_'
00000000000009e3         db  0x70 ; 'p'
00000000000009e4         db  0x72 ; 'r'
00000000000009e5         db  0x69 ; 'i'
00000000000009e6         db  0x6e ; 'n'
00000000000009e7         db  0x74 ; 't'
00000000000009e8         db  0x66 ; 'f'
00000000000009e9         db  0x5f ; '_'
00000000000009ea         db  0x63 ; 'c'
00000000000009eb         db  0x68 ; 'h'
00000000000009ec         db  0x6b ; 'k'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x73 ; 's'
00000000000009ef         db  0x65 ; 'e'
00000000000009f0         db  0x74 ; 't'
00000000000009f1         db  0x6c ; 'l'
00000000000009f2         db  0x6f ; 'o'
00000000000009f3         db  0x63 ; 'c'
00000000000009f4         db  0x61 ; 'a'
00000000000009f5         db  0x6c ; 'l'
00000000000009f6         db  0x65 ; 'e'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x6d ; 'm'
00000000000009f9         db  0x62 ; 'b'
00000000000009fa         db  0x72 ; 'r'
00000000000009fb         db  0x74 ; 't'
00000000000009fc         db  0x6f ; 'o'
00000000000009fd         db  0x77 ; 'w'
00000000000009fe         db  0x63 ; 'c'
00000000000009ff         db  0x00 ; '.'
                     aGaistrerror:
0000000000000a00         db         "gai_strerror", 0
0000000000000a0d         db  0x73 ; 's'
0000000000000a0e         db  0x74 ; 't'
0000000000000a0f         db  0x72 ; 'r'
0000000000000a10         db  0x6e ; 'n'
0000000000000a11         db  0x63 ; 'c'
0000000000000a12         db  0x6d ; 'm'
0000000000000a13         db  0x70 ; 'p'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x6f ; 'o'
0000000000000a16         db  0x70 ; 'p'
0000000000000a17         db  0x74 ; 't'
0000000000000a18         db  0x69 ; 'i'
0000000000000a19         db  0x6e ; 'n'
0000000000000a1a         db  0x64 ; 'd'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x73 ; 's'
0000000000000a1d         db  0x74 ; 't'
0000000000000a1e         db  0x72 ; 'r'
0000000000000a1f         db  0x72 ; 'r'
0000000000000a20         db  0x63 ; 'c'
0000000000000a21         db  0x68 ; 'h'
0000000000000a22         db  0x72 ; 'r'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x64 ; 'd'
0000000000000a25         db  0x63 ; 'c'
0000000000000a26         db  0x67 ; 'g'
0000000000000a27         db  0x65 ; 'e'
0000000000000a28         db  0x74 ; 't'
0000000000000a29         db  0x74 ; 't'
0000000000000a2a         db  0x65 ; 'e'
0000000000000a2b         db  0x78 ; 'x'
0000000000000a2c         db  0x74 ; 't'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x73 ; 's'
0000000000000a2f         db  0x74 ; 't'
0000000000000a30         db  0x72 ; 'r'
0000000000000a31         db  0x6e ; 'n'
0000000000000a32         db  0x63 ; 'c'
0000000000000a33         db  0x70 ; 'p'
0000000000000a34         db  0x79 ; 'y'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x70 ; 'p'
0000000000000a37         db  0x75 ; 'u'
0000000000000a38         db  0x74 ; 't'
0000000000000a39         db  0x73 ; 's'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x5f ; '_'
0000000000000a3c         db  0x5f ; '_'
0000000000000a3d         db  0x73 ; 's'
0000000000000a3e         db  0x74 ; 't'
0000000000000a3f         db  0x61 ; 'a'
0000000000000a40         db  0x63 ; 'c'
0000000000000a41         db  0x6b ; 'k'
0000000000000a42         db  0x5f ; '_'
0000000000000a43         db  0x63 ; 'c'
0000000000000a44         db  0x68 ; 'h'
0000000000000a45         db  0x6b ; 'k'
0000000000000a46         db  0x5f ; '_'
0000000000000a47         db  0x66 ; 'f'
0000000000000a48         db  0x61 ; 'a'
0000000000000a49         db  0x69 ; 'i'
0000000000000a4a         db  0x6c ; 'l'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x69 ; 'i'
0000000000000a4d         db  0x73 ; 's'
0000000000000a4e         db  0x77 ; 'w'
0000000000000a4f         db  0x70 ; 'p'
0000000000000a50         db  0x72 ; 'r'
0000000000000a51         db  0x69 ; 'i'
0000000000000a52         db  0x6e ; 'n'
0000000000000a53         db  0x74 ; 't'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x72 ; 'r'
0000000000000a56         db  0x65 ; 'e'
0000000000000a57         db  0x61 ; 'a'
0000000000000a58         db  0x6c ; 'l'
0000000000000a59         db  0x6c ; 'l'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x63 ; 'c'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x61 ; 'a'
0000000000000a5e         db  0x62 ; 'b'
0000000000000a5f         db  0x6f ; 'o'
0000000000000a60         db  0x72 ; 'r'
0000000000000a61         db  0x74 ; 't'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x65 ; 'e'
0000000000000a65         db  0x78 ; 'x'
0000000000000a66         db  0x69 ; 'i'
0000000000000a67         db  0x74 ; 't'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x6b ; 'k'
0000000000000a6a         db  0x69 ; 'i'
0000000000000a6b         db  0x6c ; 'l'
0000000000000a6c         db  0x6c ; 'l'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x70 ; 'p'
0000000000000a6f         db  0x72 ; 'r'
0000000000000a70         db  0x6f ; 'o'
0000000000000a71         db  0x67 ; 'g'
0000000000000a72         db  0x72 ; 'r'
0000000000000a73         db  0x61 ; 'a'
0000000000000a74         db  0x6d ; 'm'
0000000000000a75         db  0x5f ; '_'
0000000000000a76         db  0x69 ; 'i'
0000000000000a77         db  0x6e ; 'n'
0000000000000a78         db  0x76 ; 'v'
0000000000000a79         db  0x6f ; 'o'
0000000000000a7a         db  0x63 ; 'c'
0000000000000a7b         db  0x61 ; 'a'
0000000000000a7c         db  0x74 ; 't'
0000000000000a7d         db  0x69 ; 'i'
0000000000000a7e         db  0x6f ; 'o'
0000000000000a7f         db  0x6e ; 'n'
0000000000000a80         db  0x5f ; '_'
0000000000000a81         db  0x6e ; 'n'
0000000000000a82         db  0x61 ; 'a'
0000000000000a83         db  0x6d ; 'm'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x73 ; 's'
0000000000000a87         db  0x74 ; 't'
0000000000000a88         db  0x72 ; 'r'
0000000000000a89         db  0x64 ; 'd'
0000000000000a8a         db  0x75 ; 'u'
0000000000000a8b         db  0x70 ; 'p'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x73 ; 's'
0000000000000a8e         db  0x74 ; 't'
0000000000000a8f         db  0x72 ; 'r'
0000000000000a90         db  0x66 ; 'f'
0000000000000a91         db  0x74 ; 't'
0000000000000a92         db  0x69 ; 'i'
0000000000000a93         db  0x6d ; 'm'
0000000000000a94         db  0x65 ; 'e'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x5f ; '_'
0000000000000a97         db  0x5f ; '_'
0000000000000a98         db  0x61 ; 'a'
0000000000000a99         db  0x73 ; 's'
0000000000000a9a         db  0x73 ; 's'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x72 ; 'r'
0000000000000a9d         db  0x74 ; 't'
0000000000000a9e         db  0x5f ; '_'
0000000000000a9f         db  0x66 ; 'f'
0000000000000aa0         db  0x61 ; 'a'
0000000000000aa1         db  0x69 ; 'i'
0000000000000aa2         db  0x6c ; 'l'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x73 ; 's'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x74 ; 't'
0000000000000aa7         db  0x75 ; 'u'
0000000000000aa8         db  0x74 ; 't'
0000000000000aa9         db  0x78 ; 'x'
0000000000000aaa         db  0x65 ; 'e'
0000000000000aab         db  0x6e ; 'n'
0000000000000aac         db  0x74 ; 't'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x5f ; '_'
0000000000000aaf         db  0x5f ; '_'
0000000000000ab0         db  0x63 ; 'c'
0000000000000ab1         db  0x74 ; 't'
0000000000000ab2         db  0x79 ; 'y'
0000000000000ab3         db  0x70 ; 'p'
0000000000000ab4         db  0x65 ; 'e'
0000000000000ab5         db  0x5f ; '_'
0000000000000ab6         db  0x67 ; 'g'
0000000000000ab7         db  0x65 ; 'e'
0000000000000ab8         db  0x74 ; 't'
0000000000000ab9         db  0x5f ; '_'
0000000000000aba         db  0x6d ; 'm'
0000000000000abb         db  0x62 ; 'b'
0000000000000abc         db  0x5f ; '_'
0000000000000abd         db  0x63 ; 'c'
0000000000000abe         db  0x75 ; 'u'
0000000000000abf         db  0x72 ; 'r'
0000000000000ac0         db  0x5f ; '_'
0000000000000ac1         db  0x6d ; 'm'
0000000000000ac2         db  0x61 ; 'a'
0000000000000ac3         db  0x78 ; 'x'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x63 ; 'c'
0000000000000ac6         db  0x61 ; 'a'
0000000000000ac7         db  0x6c ; 'l'
0000000000000ac8         db  0x6c ; 'l'
0000000000000ac9         db  0x6f ; 'o'
0000000000000aca         db  0x63 ; 'c'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x73 ; 's'
0000000000000acd         db  0x74 ; 't'
0000000000000ace         db  0x72 ; 'r'
0000000000000acf         db  0x6c ; 'l'
0000000000000ad0         db  0x65 ; 'e'
0000000000000ad1         db  0x6e ; 'n'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x67 ; 'g'
0000000000000ad4         db  0x65 ; 'e'
0000000000000ad5         db  0x74 ; 't'
0000000000000ad6         db  0x61 ; 'a'
0000000000000ad7         db  0x64 ; 'd'
0000000000000ad8         db  0x64 ; 'd'
0000000000000ad9         db  0x72 ; 'r'
0000000000000ada         db  0x69 ; 'i'
0000000000000adb         db  0x6e ; 'n'
0000000000000adc         db  0x66 ; 'f'
0000000000000add         db  0x6f ; 'o'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x6d ; 'm'
0000000000000ae0         db  0x65 ; 'e'
0000000000000ae1         db  0x6d ; 'm'
0000000000000ae2         db  0x73 ; 's'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x74 ; 't'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x5f ; '_'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x65 ; 'e'
0000000000000ae9         db  0x72 ; 'r'
0000000000000aea         db  0x72 ; 'r'
0000000000000aeb         db  0x6e ; 'n'
0000000000000aec         db  0x6f ; 'o'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x6c ; 'l'
0000000000000aef         db  0x6f ; 'o'
0000000000000af0         db  0x63 ; 'c'
0000000000000af1         db  0x61 ; 'a'
0000000000000af2         db  0x74 ; 't'
0000000000000af3         db  0x69 ; 'i'
0000000000000af4         db  0x6f ; 'o'
0000000000000af5         db  0x6e ; 'n'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x6d ; 'm'
0000000000000af8         db  0x65 ; 'e'
0000000000000af9         db  0x6d ; 'm'
0000000000000afa         db  0x63 ; 'c'
0000000000000afb         db  0x6d ; 'm'
0000000000000afc         db  0x70 ; 'p'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x74 ; 't'
0000000000000aff         db  0x74 ; 't'
                     aYname:
0000000000000b00         db         "yname", 0
0000000000000b06         db  0x5f ; '_'
0000000000000b07         db  0x5f ; '_'
0000000000000b08         db  0x66 ; 'f'
0000000000000b09         db  0x70 ; 'p'
0000000000000b0a         db  0x72 ; 'r'
0000000000000b0b         db  0x69 ; 'i'
0000000000000b0c         db  0x6e ; 'n'
0000000000000b0d         db  0x74 ; 't'
0000000000000b0e         db  0x66 ; 'f'
0000000000000b0f         db  0x5f ; '_'
0000000000000b10         db  0x63 ; 'c'
0000000000000b11         db  0x68 ; 'h'
0000000000000b12         db  0x6b ; 'k'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x73 ; 's'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x64 ; 'd'
0000000000000b17         db  0x6f ; 'o'
0000000000000b18         db  0x75 ; 'u'
0000000000000b19         db  0x74 ; 't'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x6c ; 'l'
0000000000000b1c         db  0x73 ; 's'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x65 ; 'e'
0000000000000b1f         db  0x6b ; 'k'
0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x6d ; 'm'
0000000000000b22         db  0x65 ; 'e'
0000000000000b23         db  0x6d ; 'm'
0000000000000b24         db  0x63 ; 'c'
0000000000000b25         db  0x70 ; 'p'
0000000000000b26         db  0x79 ; 'y'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x66 ; 'f'
0000000000000b29         db  0x63 ; 'c'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x6f ; 'o'
0000000000000b2c         db  0x73 ; 's'
0000000000000b2d         db  0x65 ; 'e'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x6d ; 'm'
0000000000000b30         db  0x61 ; 'a'
0000000000000b31         db  0x6c ; 'l'
0000000000000b32         db  0x6c ; 'l'
0000000000000b33         db  0x6f ; 'o'
0000000000000b34         db  0x63 ; 'c'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x6d ; 'm'
0000000000000b37         db  0x62 ; 'b'
0000000000000b38         db  0x73 ; 's'
0000000000000b39         db  0x69 ; 'i'
0000000000000b3a         db  0x6e ; 'n'
0000000000000b3b         db  0x69 ; 'i'
0000000000000b3c         db  0x74 ; 't'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x6e ; 'n'
0000000000000b3f         db  0x6c ; 'l'
0000000000000b40         db  0x5f ; '_'
                     aLanginfo:
0000000000000b41         db         "langinfo", 0
0000000000000b4a         db  0x5f ; '_'
0000000000000b4b         db  0x5f ; '_'
0000000000000b4c         db  0x63 ; 'c'
0000000000000b4d         db  0x74 ; 't'
0000000000000b4e         db  0x79 ; 'y'
0000000000000b4f         db  0x70 ; 'p'
0000000000000b50         db  0x65 ; 'e'
0000000000000b51         db  0x5f ; '_'
0000000000000b52         db  0x62 ; 'b'
0000000000000b53         db  0x5f ; '_'
0000000000000b54         db  0x6c ; 'l'
0000000000000b55         db  0x6f ; 'o'
0000000000000b56         db  0x63 ; 'c'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x5f ; '_'
0000000000000b59         db  0x5f ; '_'
0000000000000b5a         db  0x66 ; 'f'
0000000000000b5b         db  0x72 ; 'r'
0000000000000b5c         db  0x65 ; 'e'
0000000000000b5d         db  0x61 ; 'a'
0000000000000b5e         db  0x64 ; 'd'
0000000000000b5f         db  0x69 ; 'i'
0000000000000b60         db  0x6e ; 'n'
0000000000000b61         db  0x67 ; 'g'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x73 ; 's'
0000000000000b64         db  0x74 ; 't'
0000000000000b65         db  0x64 ; 'd'
0000000000000b66         db  0x65 ; 'e'
0000000000000b67         db  0x72 ; 'r'
0000000000000b68         db  0x72 ; 'r'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x5f ; '_'
0000000000000b6c         db  0x73 ; 's'
0000000000000b6d         db  0x6e ; 'n'
0000000000000b6e         db  0x70 ; 'p'
0000000000000b6f         db  0x72 ; 'r'
0000000000000b70         db  0x69 ; 'i'
0000000000000b71         db  0x6e ; 'n'
0000000000000b72         db  0x74 ; 't'
0000000000000b73         db  0x66 ; 'f'
0000000000000b74         db  0x5f ; '_'
0000000000000b75         db  0x63 ; 'c'
0000000000000b76         db  0x68 ; 'h'
0000000000000b77         db  0x6b ; 'k'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x67 ; 'g'
0000000000000b7a         db  0x65 ; 'e'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x6f ; 'o'
0000000000000b7d         db  0x70 ; 'p'
0000000000000b7e         db  0x74 ; 't'
0000000000000b7f         db  0x5f ; '_'
0000000000000b80         db  0x6c ; 'l'
0000000000000b81         db  0x6f ; 'o'
0000000000000b82         db  0x6e ; 'n'
0000000000000b83         db  0x67 ; 'g'
0000000000000b84         db  0x00 ; '.'
0000000000000b85         db  0x75 ; 'u'
0000000000000b86         db  0x74 ; 't'
0000000000000b87         db  0x6d ; 'm'
0000000000000b88         db  0x70 ; 'p'
0000000000000b89         db  0x78 ; 'x'
0000000000000b8a         db  0x6e ; 'n'
0000000000000b8b         db  0x61 ; 'a'
0000000000000b8c         db  0x6d ; 'm'
0000000000000b8d         db  0x65 ; 'e'
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x73 ; 's'
0000000000000b90         db  0x74 ; 't'
0000000000000b91         db  0x72 ; 'r'
0000000000000b92         db  0x6e ; 'n'
0000000000000b93         db  0x63 ; 'c'
0000000000000b94         db  0x61 ; 'a'
0000000000000b95         db  0x74 ; 't'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x66 ; 'f'
0000000000000b98         db  0x69 ; 'i'
0000000000000b99         db  0x6c ; 'l'
0000000000000b9a         db  0x65 ; 'e'
0000000000000b9b         db  0x6e ; 'n'
0000000000000b9c         db  0x6f ; 'o'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x66 ; 'f'
0000000000000b9f         db  0x77 ; 'w'
0000000000000ba0         db  0x72 ; 'r'
0000000000000ba1         db  0x69 ; 'i'
0000000000000ba2         db  0x74 ; 't'
0000000000000ba3         db  0x65 ; 'e'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x5f ; '_'
0000000000000ba6         db  0x5f ; '_'
0000000000000ba7         db  0x66 ; 'f'
0000000000000ba8         db  0x70 ; 'p'
0000000000000ba9         db  0x65 ; 'e'
0000000000000baa         db  0x6e ; 'n'
0000000000000bab         db  0x64 ; 'd'
0000000000000bac         db  0x69 ; 'i'
0000000000000bad         db  0x6e ; 'n'
0000000000000bae         db  0x67 ; 'g'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x6c ; 'l'
0000000000000bb1         db  0x6f ; 'o'
0000000000000bb2         db  0x63 ; 'c'
0000000000000bb3         db  0x61 ; 'a'
0000000000000bb4         db  0x6c ; 'l'
0000000000000bb5         db  0x74 ; 't'
0000000000000bb6         db  0x69 ; 'i'
0000000000000bb7         db  0x6d ; 'm'
0000000000000bb8         db  0x65 ; 'e'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x65 ; 'e'
0000000000000bbb         db  0x6e ; 'n'
0000000000000bbc         db  0x64 ; 'd'
0000000000000bbd         db  0x75 ; 'u'
0000000000000bbe         db  0x74 ; 't'
0000000000000bbf         db  0x78 ; 'x'
0000000000000bc0         db  0x65 ; 'e'
0000000000000bc1         db  0x6e ; 'n'
0000000000000bc2         db  0x74 ; 't'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x73 ; 's'
0000000000000bc5         db  0x74 ; 't'
0000000000000bc6         db  0x72 ; 'r'
0000000000000bc7         db  0x63 ; 'c'
0000000000000bc8         db  0x68 ; 'h'
0000000000000bc9         db  0x72 ; 'r'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x70 ; 'p'
0000000000000bcc         db  0x72 ; 'r'
0000000000000bcd         db  0x6f ; 'o'
0000000000000bce         db  0x67 ; 'g'
0000000000000bcf         db  0x72 ; 'r'
0000000000000bd0         db  0x61 ; 'a'
0000000000000bd1         db  0x6d ; 'm'
0000000000000bd2         db  0x5f ; '_'
0000000000000bd3         db  0x69 ; 'i'
0000000000000bd4         db  0x6e ; 'n'
0000000000000bd5         db  0x76 ; 'v'
0000000000000bd6         db  0x6f ; 'o'
0000000000000bd7         db  0x63 ; 'c'
0000000000000bd8         db  0x61 ; 'a'
0000000000000bd9         db  0x74 ; 't'
0000000000000bda         db  0x69 ; 'i'
0000000000000bdb         db  0x6f ; 'o'
0000000000000bdc         db  0x6e ; 'n'
0000000000000bdd         db  0x5f ; '_'
0000000000000bde         db  0x73 ; 's'
0000000000000bdf         db  0x68 ; 'h'
0000000000000be0         db  0x6f ; 'o'
0000000000000be1         db  0x72 ; 'r'
0000000000000be2         db  0x74 ; 't'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x6e ; 'n'
0000000000000be5         db  0x61 ; 'a'
0000000000000be6         db  0x6d ; 'm'
0000000000000be7         db  0x65 ; 'e'
0000000000000be8         db  0x00 ; '.'
0000000000000be9         db  0x67 ; 'g'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x74 ; 't'
0000000000000bec         db  0x75 ; 'u'
0000000000000bed         db  0x74 ; 't'
0000000000000bee         db  0x78 ; 'x'
0000000000000bef         db  0x65 ; 'e'
0000000000000bf0         db  0x6e ; 'n'
0000000000000bf1         db  0x74 ; 't'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x5f ; '_'
0000000000000bf4         db  0x5f ; '_'
0000000000000bf5         db  0x63 ; 'c'
0000000000000bf6         db  0x78 ; 'x'
0000000000000bf7         db  0x61 ; 'a'
0000000000000bf8         db  0x5f ; '_'
0000000000000bf9         db  0x66 ; 'f'
0000000000000bfa         db  0x69 ; 'i'
0000000000000bfb         db  0x6e ; 'n'
0000000000000bfc         db  0x61 ; 'a'
0000000000000bfd         db  0x6c ; 'l'
0000000000000bfe         db  0x69 ; 'i'
0000000000000bff         db  0x7a ; 'z'
0000000000000c00         db  0x65 ; 'e'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x66 ; 'f'
0000000000000c03         db  0x72 ; 'r'
0000000000000c04         db  0x65 ; 'e'
0000000000000c05         db  0x65 ; 'e'
0000000000000c06         db  0x61 ; 'a'
0000000000000c07         db  0x64 ; 'd'
0000000000000c08         db  0x64 ; 'd'
0000000000000c09         db  0x72 ; 'r'
0000000000000c0a         db  0x69 ; 'i'
0000000000000c0b         db  0x6e ; 'n'
0000000000000c0c         db  0x66 ; 'f'
0000000000000c0d         db  0x6f ; 'o'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x5f ; '_'
0000000000000c10         db  0x5f ; '_'
0000000000000c11         db  0x73 ; 's'
0000000000000c12         db  0x70 ; 'p'
0000000000000c13         db  0x72 ; 'r'
0000000000000c14         db  0x69 ; 'i'
0000000000000c15         db  0x6e ; 'n'
0000000000000c16         db  0x74 ; 't'
0000000000000c17         db  0x66 ; 'f'
0000000000000c18         db  0x5f ; '_'
0000000000000c19         db  0x63 ; 'c'
0000000000000c1a         db  0x68 ; 'h'
0000000000000c1b         db  0x6b ; 'k'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x5f ; '_'
0000000000000c1f         db  0x78 ; 'x'
0000000000000c20         db  0x73 ; 's'
0000000000000c21         db  0x74 ; 't'
0000000000000c22         db  0x61 ; 'a'
0000000000000c23         db  0x74 ; 't'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x62 ; 'b'
0000000000000c26         db  0x69 ; 'i'
0000000000000c27         db  0x6e ; 'n'
0000000000000c28         db  0x64 ; 'd'
0000000000000c29         db  0x74 ; 't'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x78 ; 'x'
0000000000000c2c         db  0x74 ; 't'
0000000000000c2d         db  0x64 ; 'd'
0000000000000c2e         db  0x6f ; 'o'
0000000000000c2f         db  0x6d ; 'm'
0000000000000c30         db  0x61 ; 'a'
0000000000000c31         db  0x69 ; 'i'
0000000000000c32         db  0x6e ; 'n'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x5f ; '_'
0000000000000c35         db  0x5f ; '_'
0000000000000c36         db  0x6c ; 'l'
0000000000000c37         db  0x69 ; 'i'
0000000000000c38         db  0x62 ; 'b'
0000000000000c39         db  0x63 ; 'c'
0000000000000c3a         db  0x5f ; '_'
0000000000000c3b         db  0x73 ; 's'
0000000000000c3c         db  0x74 ; 't'
0000000000000c3d         db  0x61 ; 'a'
0000000000000c3e         db  0x72 ; 'r'
0000000000000c3f         db  0x74 ; 't'
0000000000000c40         db  0x5f ; '_'
0000000000000c41         db  0x6d ; 'm'
0000000000000c42         db  0x61 ; 'a'
0000000000000c43         db  0x69 ; 'i'
0000000000000c44         db  0x6e ; 'n'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x66 ; 'f'
0000000000000c47         db  0x73 ; 's'
0000000000000c48         db  0x65 ; 'e'
0000000000000c49         db  0x65 ; 'e'
0000000000000c4a         db  0x6b ; 'k'
0000000000000c4b         db  0x6f ; 'o'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x66 ; 'f'
0000000000000c4e         db  0x70 ; 'p'
0000000000000c4f         db  0x75 ; 'u'
0000000000000c50         db  0x74 ; 't'
0000000000000c51         db  0x73 ; 's'
0000000000000c52         db  0x5f ; '_'
0000000000000c53         db  0x75 ; 'u'
0000000000000c54         db  0x6e ; 'n'
0000000000000c55         db  0x6c ; 'l'
0000000000000c56         db  0x6f ; 'o'
0000000000000c57         db  0x63 ; 'c'
0000000000000c58         db  0x6b ; 'k'
0000000000000c59         db  0x65 ; 'e'
0000000000000c5a         db  0x64 ; 'd'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x66 ; 'f'
0000000000000c5d         db  0x72 ; 'r'
0000000000000c5e         db  0x65 ; 'e'
0000000000000c5f         db  0x65 ; 'e'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x5f ; '_'
0000000000000c62         db  0x5f ; '_'
0000000000000c63         db  0x70 ; 'p'
0000000000000c64         db  0x72 ; 'r'
0000000000000c65         db  0x6f ; 'o'
0000000000000c66         db  0x67 ; 'g'
0000000000000c67         db  0x6e ; 'n'
0000000000000c68         db  0x61 ; 'a'
0000000000000c69         db  0x6d ; 'm'
0000000000000c6a         db  0x65 ; 'e'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x5f ; '_'
0000000000000c6d         db  0x5f ; '_'
0000000000000c6e         db  0x70 ; 'p'
0000000000000c6f         db  0x72 ; 'r'
0000000000000c70         db  0x6f ; 'o'
0000000000000c71         db  0x67 ; 'g'
0000000000000c72         db  0x6e ; 'n'
0000000000000c73         db  0x61 ; 'a'
0000000000000c74         db  0x6d ; 'm'
0000000000000c75         db  0x65 ; 'e'
0000000000000c76         db  0x5f ; '_'
0000000000000c77         db  0x66 ; 'f'
0000000000000c78         db  0x75 ; 'u'
0000000000000c79         db  0x6c ; 'l'
0000000000000c7a         db  0x6c ; 'l'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x5f ; '_'
0000000000000c7d         db  0x5f ; '_'
0000000000000c7e         db  0x63 ; 'c'
0000000000000c7f         db  0x78 ; 'x'
0000000000000c80         db  0x61 ; 'a'
0000000000000c81         db  0x5f ; '_'
0000000000000c82         db  0x61 ; 'a'
0000000000000c83         db  0x74 ; 't'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x78 ; 'x'
0000000000000c86         db  0x69 ; 'i'
0000000000000c87         db  0x74 ; 't'
0000000000000c88         db  0x00 ; '.'
0000000000000c89         db  0x47 ; 'G'
0000000000000c8a         db  0x4c ; 'L'
0000000000000c8b         db  0x49 ; 'I'
0000000000000c8c         db  0x42 ; 'B'
0000000000000c8d         db  0x43 ; 'C'
0000000000000c8e         db  0x5f ; '_'
0000000000000c8f         db  0x32 ; '2'
0000000000000c90         db  0x2e ; '.'
0000000000000c91         db  0x33 ; '3'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x47 ; 'G'
0000000000000c94         db  0x4c ; 'L'
0000000000000c95         db  0x49 ; 'I'
0000000000000c96         db  0x42 ; 'B'
0000000000000c97         db  0x43 ; 'C'
0000000000000c98         db  0x5f ; '_'
0000000000000c99         db  0x32 ; '2'
0000000000000c9a         db  0x2e ; '.'
0000000000000c9b         db  0x31 ; '1'
0000000000000c9c         db  0x34 ; '4'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x47 ; 'G'
0000000000000c9f         db  0x4c ; 'L'
0000000000000ca0         db  0x49 ; 'I'
0000000000000ca1         db  0x42 ; 'B'
0000000000000ca2         db  0x43 ; 'C'
0000000000000ca3         db  0x5f ; '_'
0000000000000ca4         db  0x32 ; '2'
0000000000000ca5         db  0x2e ; '.'
0000000000000ca6         db  0x34 ; '4'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x47 ; 'G'
0000000000000ca9         db  0x4c ; 'L'
0000000000000caa         db  0x49 ; 'I'
0000000000000cab         db  0x42 ; 'B'
0000000000000cac         db  0x43 ; 'C'
0000000000000cad         db  0x5f ; '_'
0000000000000cae         db  0x32 ; '2'
0000000000000caf         db  0x2e ; '.'
0000000000000cb0         db  0x33 ; '3'
0000000000000cb1         db  0x2e ; '.'
0000000000000cb2         db  0x34 ; '4'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x47 ; 'G'
0000000000000cb5         db  0x4c ; 'L'
0000000000000cb6         db  0x49 ; 'I'
0000000000000cb7         db  0x42 ; 'B'
0000000000000cb8         db  0x43 ; 'C'
0000000000000cb9         db  0x5f ; '_'
0000000000000cba         db  0x32 ; '2'
0000000000000cbb         db  0x2e ; '.'
0000000000000cbc         db  0x32 ; '2'
0000000000000cbd         db  0x2e ; '.'
0000000000000cbe         db  0x35 ; '5'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x5f ; '_'
0000000000000cc1         db  0x49 ; 'I'
0000000000000cc2         db  0x54 ; 'T'
0000000000000cc3         db  0x4d ; 'M'
0000000000000cc4         db  0x5f ; '_'
0000000000000cc5         db  0x64 ; 'd'
0000000000000cc6         db  0x65 ; 'e'
0000000000000cc7         db  0x72 ; 'r'
0000000000000cc8         db  0x65 ; 'e'
0000000000000cc9         db  0x67 ; 'g'
0000000000000cca         db  0x69 ; 'i'
0000000000000ccb         db  0x73 ; 's'
0000000000000ccc         db  0x74 ; 't'
0000000000000ccd         db  0x65 ; 'e'
0000000000000cce         db  0x72 ; 'r'
0000000000000ccf         db  0x54 ; 'T'
0000000000000cd0         db  0x4d ; 'M'
0000000000000cd1         db  0x43 ; 'C'
0000000000000cd2         db  0x6c ; 'l'
0000000000000cd3         db  0x6f ; 'o'
0000000000000cd4         db  0x6e ; 'n'
0000000000000cd5         db  0x65 ; 'e'
0000000000000cd6         db  0x54 ; 'T'
0000000000000cd7         db  0x61 ; 'a'
0000000000000cd8         db  0x62 ; 'b'
0000000000000cd9         db  0x6c ; 'l'
0000000000000cda         db  0x65 ; 'e'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x5f ; '_'
0000000000000cdd         db  0x5f ; '_'
0000000000000cde         db  0x67 ; 'g'
0000000000000cdf         db  0x6d ; 'm'
0000000000000ce0         db  0x6f ; 'o'
0000000000000ce1         db  0x6e ; 'n'
0000000000000ce2         db  0x5f ; '_'
0000000000000ce3         db  0x73 ; 's'
0000000000000ce4         db  0x74 ; 't'
0000000000000ce5         db  0x61 ; 'a'
0000000000000ce6         db  0x72 ; 'r'
0000000000000ce7         db  0x74 ; 't'
0000000000000ce8         db  0x5f ; '_'
0000000000000ce9         db  0x5f ; '_'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x5f ; '_'
0000000000000cec         db  0x49 ; 'I'
0000000000000ced         db  0x54 ; 'T'
0000000000000cee         db  0x4d ; 'M'
0000000000000cef         db  0x5f ; '_'
0000000000000cf0         db  0x72 ; 'r'
0000000000000cf1         db  0x65 ; 'e'
0000000000000cf2         db  0x67 ; 'g'
0000000000000cf3         db  0x69 ; 'i'
0000000000000cf4         db  0x73 ; 's'
0000000000000cf5         db  0x74 ; 't'
0000000000000cf6         db  0x65 ; 'e'
0000000000000cf7         db  0x72 ; 'r'
0000000000000cf8         db  0x54 ; 'T'
0000000000000cf9         db  0x4d ; 'M'
0000000000000cfa         db  0x43 ; 'C'
0000000000000cfb         db  0x6c ; 'l'
0000000000000cfc         db  0x6f ; 'o'
0000000000000cfd         db  0x6e ; 'n'
0000000000000cfe         db  0x65 ; 'e'
0000000000000cff         db  0x54 ; 'T'
                     aAble:
0000000000000d00         db         "able", 0
0000000000000d05         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xd06; 0xd9a[ (148 bytes)
        ; File offset : [3334; 3482[ (148 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x02 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x03 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x02 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x02 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x02 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x02 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x02 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x02 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x02 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x02 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x02 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x02 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x02 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x02 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x02 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x02 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x02 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x02 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x02 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x04 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x02 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x02 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x02 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x02 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x02 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x02 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x02 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x02 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x02 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x02 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x02 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x02 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x02 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x05 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x02 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x02 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x02 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x02 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x02 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x02 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x02 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x02 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x02 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x02 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x02 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x03 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x02 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x02 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x02 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x02 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x02 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x02 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x02 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x03 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x02 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x02 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x02 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x02 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x02 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x06 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x02 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x03 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x02 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x02 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x02 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x02 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x02 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x02 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x02 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xda0; 0xe00[ (96 bytes)
        ; File offset : [3488; 3584[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000da0         db  0x01 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x05 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x01 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x10 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x13 ; '.'
0000000000000db1         db  0x69 ; 'i'
0000000000000db2         db  0x69 ; 'i'
0000000000000db3         db  0x0d ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x06 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xc1 ; '.'
0000000000000db9         db  0x02 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x10 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x94 ; '.'
0000000000000dc1         db  0x91 ; '.'
0000000000000dc2         db  0x96 ; '.'
0000000000000dc3         db  0x06 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x05 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xcb ; '.'
0000000000000dc9         db  0x02 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x10 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x14 ; '.'
0000000000000dd1         db  0x69 ; 'i'
0000000000000dd2         db  0x69 ; 'i'
0000000000000dd3         db  0x0d ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x04 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xd6 ; '.'
0000000000000dd9         db  0x02 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x10 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x74 ; 't'
0000000000000de1         db  0x19 ; '.'
0000000000000de2         db  0x69 ; 'i'
0000000000000de3         db  0x09 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x03 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xe0 ; '.'
0000000000000de9         db  0x02 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x10 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x75 ; 'u'
0000000000000df1         db  0x1a ; '.'
0000000000000df2         db  0x69 ; 'i'
0000000000000df3         db  0x09 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x02 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xec ; '.'
0000000000000df9         db  0x02 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xe00; 0x1208[ (1032 bytes)
        ; File offset : [3584; 4616[ (1032 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e00         db  0x30 ; '0'
0000000000000e01         db  0xa9 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x40 ; '@'                                         ; DATA XREF=print_user+1285
0000000000000e11         db  0x20 ; ' '
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x38 ; '8'
0000000000000e19         db  0xa9 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x00 ; '.'
0000000000000e29         db  0x20 ; ' '
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x40 ; '@'
0000000000000e31         db  0xa9 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xb9 ; '.'
0000000000000e41         db  0x86 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x60 ; '`'
0000000000000e49         db  0xa9 ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x46 ; 'F'
0000000000000e59         db  0x85 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x80 ; '.'
0000000000000e61         db  0xa9 ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xbd ; '.'
0000000000000e71         db  0x86 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xa0 ; '.'
0000000000000e79         db  0xa9 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xc3 ; '.'
0000000000000e89         db  0x86 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xc0 ; '.'
0000000000000e91         db  0xa9 ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xc8 ; '.'
0000000000000ea1         db  0x86 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xe0 ; '.'
0000000000000ea9         db  0xa9 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xd0 ; '.'
0000000000000eb9         db  0x86 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0xaa ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xd6 ; '.'
0000000000000ed1         db  0x86 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x20 ; ' '
0000000000000ed9         db  0xaa ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xdd ; '.'
0000000000000ee9         db  0x86 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x40 ; '@'
0000000000000ef1         db  0xaa ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xe5 ; '.'
0000000000000f01         db  0x86 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x60 ; '`'
0000000000000f09         db  0xaa ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xea ; '.'
0000000000000f19         db  0x86 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x80 ; '.'
0000000000000f21         db  0xaa ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xf2 ; '.'
0000000000000f31         db  0x86 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xa0 ; '.'
0000000000000f39         db  0xaa ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0xfb ; '.'
0000000000000f49         db  0x86 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xc0 ; '.'
0000000000000f51         db  0xaa ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x01 ; '.'
0000000000000f61         db  0x87 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xe0 ; '.'
0000000000000f69         db  0xaa ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x08 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x06 ; '.'
0000000000000f79         db  0x87 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0xab ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x08 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x0c ; '.'
0000000000000f91         db  0x87 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x20 ; ' '
0000000000000f99         db  0xab ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0x08 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x15 ; '.'
0000000000000fa9         db  0x87 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x40 ; '@'
0000000000000fb1         db  0xab ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x08 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x1a ; '.'
0000000000000fc1         db  0x87 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x80 ; '.'
0000000000000fc9         db  0xab ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x08 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x49 ; 'I'
0000000000000fd9         db  0x8d ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x88 ; '.'
0000000000000fe1         db  0xab ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x08 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x51 ; 'Q'
0000000000000ff1         db  0x8d ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x90 ; '.'
0000000000000ff9         db  0xab ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x08 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x57 ; 'W'
0000000000001009         db  0x8d ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x98 ; '.'
0000000000001011         db  0xab ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x08 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x64 ; 'd'
0000000000001021         db  0x8d ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0xa0 ; '.'
0000000000001029         db  0xab ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x08 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x71 ; 'q'
0000000000001039         db  0x8d ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xa8 ; '.'
0000000000001041         db  0xab ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x08 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x32 ; '2'
0000000000001051         db  0x85 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xb0 ; '.'
0000000000001059         db  0xab ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x08 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x85 ; '.'
0000000000001069         db  0x8d ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xb8 ; '.'
0000000000001071         db  0xab ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x08 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x6a ; 'j'
0000000000001081         db  0x8d ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xc0 ; '.'
0000000000001089         db  0xab ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x08 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x48 ; 'H'
0000000000001099         db  0x86 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xc8 ; '.'
00000000000010a1         db  0xab ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x08 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x8d ; '.'
00000000000010b1         db  0x8d ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x08 ; '.'
00000000000010b9         db  0xb0 ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x08 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x08 ; '.'
00000000000010c9         db  0xb0 ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x20 ; ' '
00000000000010d1         db  0xb0 ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x08 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0xcc ; '.'
00000000000010e1         db  0x8c ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x80 ; '.'
00000000000010e9         db  0xb0 ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x08 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x90 ; '.'
00000000000010f9         db  0xb0 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x98 ; '.'
0000000000001101         db  0xb0 ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x08 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xc0 ; '.'
0000000000001111         db  0xb1 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xc8 ; '.'
0000000000001119         db  0xaf ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x06 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x09 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xd0 ; '.'
0000000000001131         db  0xaf ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x06 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x1f ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xd8 ; '.'
0000000000001149         db  0xaf ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x06 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x24 ; '$'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xe0 ; '.'
0000000000001161         db  0xaf ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x06 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x3a ; ':'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xe8 ; '.'
0000000000001179         db  0xaf ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x06 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x3f ; '?'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xa0 ; '.'
0000000000001191         db  0xb0 ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x05 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x44 ; 'D'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xa8 ; '.'
00000000000011a9         db  0xb0 ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x05 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x43 ; 'C'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xb0 ; '.'
00000000000011c1         db  0xb0 ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x05 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x49 ; 'I'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xb8 ; '.'
00000000000011d9         db  0xb0 ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x05 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x46 ; 'F'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xc0 ; '.'
00000000000011f1         db  0xb0 ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x05 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x48 ; 'H'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1208; 0x17c0[ (1464 bytes)
        ; File offset : [4616; 6080[ (1464 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001208         db  0xe0 ; '.'
0000000000001209         db  0xad ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x01 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xe8 ; '.'
0000000000001221         db  0xad ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x02 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xf0 ; '.'
0000000000001239         db  0xad ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x03 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0xf8 ; '.'
0000000000001251         db  0xad ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x04 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0xae ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x05 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x08 ; '.'
0000000000001281         db  0xae ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x06 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x10 ; '.'
0000000000001299         db  0xae ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x07 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x18 ; '.'
00000000000012b1         db  0xae ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x08 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x20 ; ' '
00000000000012c9         db  0xae ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x0a ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x28 ; '('
00000000000012e1         db  0xae ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x0b ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x30 ; '0'
00000000000012f9         db  0xae ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x0c ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x38 ; '8'
0000000000001311         db  0xae ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x0d ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x40 ; '@'
0000000000001329         db  0xae ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x0e ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x48 ; 'H'
0000000000001341         db  0xae ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x0f ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x50 ; 'P'
0000000000001359         db  0xae ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x10 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x58 ; 'X'
0000000000001371         db  0xae ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x11 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x60 ; '`'
0000000000001389         db  0xae ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x12 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x68 ; 'h'
00000000000013a1         db  0xae ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x13 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x70 ; 'p'
00000000000013b9         db  0xae ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x14 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x78 ; 'x'
00000000000013d1         db  0xae ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x15 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x80 ; '.'
00000000000013e9         db  0xae ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x16 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x88 ; '.'
0000000000001401         db  0xae ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x17 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x90 ; '.'
0000000000001419         db  0xae ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x18 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x98 ; '.'
0000000000001431         db  0xae ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x19 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xa0 ; '.'
0000000000001449         db  0xae ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x1a ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xa8 ; '.'
0000000000001461         db  0xae ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x1b ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xb0 ; '.'
0000000000001479         db  0xae ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x1c ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0xb8 ; '.'
0000000000001491         db  0xae ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x1d ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0xc0 ; '.'
00000000000014a9         db  0xae ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x1e ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0xc8 ; '.'
00000000000014c1         db  0xae ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x20 ; ' '
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0xd0 ; '.'
00000000000014d9         db  0xae ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x21 ; '!'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0xd8 ; '.'
00000000000014f1         db  0xae ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x22 ; '"'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xe0 ; '.'
0000000000001509         db  0xae ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x23 ; '#'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xe8 ; '.'
0000000000001521         db  0xae ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x25 ; '%'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xf0 ; '.'
0000000000001539         db  0xae ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x26 ; '&'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xf8 ; '.'
0000000000001551         db  0xae ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x27 ; '''
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0xaf ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x28 ; '('
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x08 ; '.'
0000000000001581         db  0xaf ; '.'
0000000000001582         db  0x20 ; ' '
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x07 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x29 ; ')'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x00 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x10 ; '.'
0000000000001599         db  0xaf ; '.'
000000000000159a         db  0x20 ; ' '
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x07 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x2a ; '*'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x00 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x18 ; '.'
00000000000015b1         db  0xaf ; '.'
00000000000015b2         db  0x20 ; ' '
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x07 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x2b ; '+'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x00 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x20 ; ' '
00000000000015c9         db  0xaf ; '.'
00000000000015ca         db  0x20 ; ' '
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x07 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x2c ; ','
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x00 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x28 ; '('
00000000000015e1         db  0xaf ; '.'
00000000000015e2         db  0x20 ; ' '
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x07 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x2d ; '-'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x00 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x30 ; '0'
00000000000015f9         db  0xaf ; '.'
00000000000015fa         db  0x20 ; ' '
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x07 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x2e ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x00 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x38 ; '8'
0000000000001611         db  0xaf ; '.'
0000000000001612         db  0x20 ; ' '
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x07 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x2f ; '/'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x00 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x40 ; '@'
0000000000001629         db  0xaf ; '.'
000000000000162a         db  0x20 ; ' '
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x07 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x30 ; '0'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x00 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x48 ; 'H'
0000000000001641         db  0xaf ; '.'
0000000000001642         db  0x20 ; ' '
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x07 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x31 ; '1'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x00 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x50 ; 'P'
0000000000001659         db  0xaf ; '.'
000000000000165a         db  0x20 ; ' '
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x07 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x32 ; '2'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x00 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x58 ; 'X'
0000000000001671         db  0xaf ; '.'
0000000000001672         db  0x20 ; ' '
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x07 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x33 ; '3'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x00 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x60 ; '`'
0000000000001689         db  0xaf ; '.'
000000000000168a         db  0x20 ; ' '
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x07 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x34 ; '4'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x00 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x68 ; 'h'
00000000000016a1         db  0xaf ; '.'
00000000000016a2         db  0x20 ; ' '
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x07 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x35 ; '5'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x00 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x70 ; 'p'
00000000000016b9         db  0xaf ; '.'
00000000000016ba         db  0x20 ; ' '
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x07 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x36 ; '6'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x00 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x78 ; 'x'
00000000000016d1         db  0xaf ; '.'
00000000000016d2         db  0x20 ; ' '
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x07 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x37 ; '7'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x00 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x80 ; '.'
00000000000016e9         db  0xaf ; '.'
00000000000016ea         db  0x20 ; ' '
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x07 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x38 ; '8'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x00 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x88 ; '.'
0000000000001701         db  0xaf ; '.'
0000000000001702         db  0x20 ; ' '
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x07 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x39 ; '9'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x00 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x90 ; '.'
0000000000001719         db  0xaf ; '.'
000000000000171a         db  0x20 ; ' '
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x07 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x3b ; ';'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x00 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x98 ; '.'
0000000000001731         db  0xaf ; '.'
0000000000001732         db  0x20 ; ' '
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x07 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x3c ; '<'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x00 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0xa0 ; '.'
0000000000001749         db  0xaf ; '.'
000000000000174a         db  0x20 ; ' '
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x07 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x3d ; '='
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x00 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0xa8 ; '.'
0000000000001761         db  0xaf ; '.'
0000000000001762         db  0x20 ; ' '
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x07 ; '.'
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x3e ; '>'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x00 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0xb0 ; '.'
0000000000001779         db  0xaf ; '.'
000000000000177a         db  0x20 ; ' '
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x07 ; '.'
0000000000001781         db  0x00 ; '.'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x40 ; '@'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x00 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0xb8 ; '.'
0000000000001791         db  0xaf ; '.'
0000000000001792         db  0x20 ; ' '
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x07 ; '.'
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x41 ; 'A'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x00 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0xc0 ; '.'
00000000000017a9         db  0xaf ; '.'
00000000000017aa         db  0x20 ; ' '
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x07 ; '.'
00000000000017b1         db  0x00 ; '.'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x42 ; 'B'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x00 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x17c0; 0x17d7[ (23 bytes)
        ; File offset : [6080; 6103[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000017c0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000017c4         mov        rax, qword [qword_20afd8]                   ; qword_20afd8
00000000000017cb         test       rax, rax
00000000000017ce         je         loc_17d2

00000000000017d0         call       rax

                     loc_17d2:
00000000000017d2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000017d6         ret
                        ; endp
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x00 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x17e0; 0x1bc0[ (992 bytes)
        ; File offset : [6112; 7104[ (992 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_17e0:
00000000000017e0         push       qword [qword_20add0]                        ; Begin of unwind block (FDE at 0x9ac4), qword_20add0, CODE XREF=sub_17f6+5
00000000000017e6         jmp        qword [qword_20add0+8]                      ; 0x20add8
                        ; endp
00000000000017ec         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utmpxname:        // utmpxname
00000000000017f0         jmp        qword [utmpxname@GOT]                       ; utmpxname, utmpxname@GOT, CODE XREF=read_utmp+44
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x0
00000000000017fb         jmp        loc_17e0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000001800         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x1
000000000000180b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001810         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=print_line+391, print_line+433, print_user+479, print_user+918, print_user+1119, print_user+1184, who+390, who+583, who+1319, who+1686, quotearg_n_options+277
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x2
000000000000181b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localtime:        // localtime
0000000000001820         jmp        qword [localtime@GOT]                       ; localtime, localtime@GOT, CODE XREF=time_string.isra.1+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x3
000000000000182b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001830         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_40f0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, vasnprintf+3878
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x4
000000000000183b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001840         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=who+1960, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, read_utmp+260, rpl_vasprintf+96, close_stream+60, close_stream+104, rpl_fclose+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x5
000000000000184b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncpy:        // strncpy
0000000000001850         jmp        qword [strncpy@GOT]                         ; strncpy, strncpy@GOT, CODE XREF=extract_trimmed_name+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x6
000000000000185b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001860         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=who+182, who+879, usage+748, usage+941
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x7
000000000000186b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001870         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x8
000000000000187b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
0000000000001880         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=make_id_equals_comment+73
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x9
000000000000188b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001890         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0xa
000000000000189b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_puts:        // puts
00000000000018a0         jmp        qword [puts@GOT]                            ; puts, puts@GOT, CODE XREF=print_line+381
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0xb
00000000000018ab         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000018b0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+66
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0xc
00000000000018bb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endutxent:        // endutxent
00000000000018c0         jmp        qword [endutxent@GOT]                       ; endutxent, endutxent@GOT, CODE XREF=read_utmp+177
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0xd
00000000000018cb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000018d0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0xe
00000000000018db         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000018e0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+54
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0xf
00000000000018eb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000018f0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+851, make_id_equals_comment+23, make_id_equals_comment+62, print_user+670, who+509, who+637, who+729, who+915, who+939, who+961, who+983
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x10
00000000000018fb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001900         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x11
000000000000190b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001910         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=print_line+138, print_line+182, print_line+343, print_line+456, make_id_equals_comment+31, print_user+352, print_user+400, print_user+1354, quotearg_buffer_restyled+343, sub_40f0+411, sub_40f0+1742
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x12
000000000000191b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001920         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=print_line+621, time_string.isra.1+114, print_user+1422, who+1989, canon_host_r+163, sub_40f0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x13
000000000000192b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001930         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+110
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x14
000000000000193b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001940         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x15
000000000000194b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001950         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=print_user+306
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x16
000000000000195b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gai_strerror:        // gai_strerror
0000000000001960         jmp        qword [gai_strerror@GOT]                    ; gai_strerror, gai_strerror@GOT, CODE XREF=ch_strerror+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x17
000000000000196b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001970         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x18
000000000000197b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001980         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x19
000000000000198b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001990         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=print_user+1453
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x1a
000000000000199b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000019a0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x1b
00000000000019ab         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncat:        // strncat
00000000000019b0         jmp        qword [strncat@GOT]                         ; strncat, strncat@GOT, CODE XREF=make_id_equals_comment+90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x1c
00000000000019bb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000019c0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x1d
00000000000019cb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000019d0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+423, usage+1056, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x1e
00000000000019db         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000019e0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x1f
00000000000019eb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setutxent:        // setutxent
00000000000019f0         jmp        qword [setutxent@GOT]                       ; setutxent, setutxent@GOT, CODE XREF=read_utmp+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x20
00000000000019fb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001a00         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, vasnprintf+686, vasnprintf+912, vasnprintf+973, vasnprintf+2590, vasnprintf+3085, vasnprintf+3403, vasnprintf+3547, vasnprintf+4227, printf_parse+2492, printf_parse+2595
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x21
0000000000001a0b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_kill:        // kill
0000000000001a10         jmp        qword [kill@GOT]                            ; kill, kill@GOT, CODE XREF=read_utmp+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x22
0000000000001a1b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_time:        // time
0000000000001a20         jmp        qword [time@GOT]                            ; time, time@GOT, CODE XREF=print_user+1159
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x23
0000000000001a2b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001a30         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x24
0000000000001a3b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001a40         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=print_user+156
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x25
0000000000001a4b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001a50         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, vasnprintf+210, vasnprintf+2547, vasnprintf+3007, vasnprintf+3353, vasnprintf+3497, vasnprintf+4191, printf_parse+2420, printf_parse+2528, printf_parse+2852, printf_parse+3169
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x26
0000000000001a5b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001a60         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x27
0000000000001a6b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001a70         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x28
0000000000001a7b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001a80         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x29
0000000000001a8b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ttyname:        // ttyname
0000000000001a90         jmp        qword [ttyname@GOT]                         ; ttyname, ttyname@GOT, CODE XREF=who+847
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x2a
0000000000001a9b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001aa0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266, printf_parse+2729
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x2b
0000000000001aab         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001ab0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+35, usage+723, usage+916, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x2c
0000000000001abb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001ac0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=who+527, who+572, usage+120, usage+471, usage+711, usage+804, usage+865, usage+904, usage+1007, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x2d
0000000000001acb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strftime:        // strftime
0000000000001ad0         jmp        qword [strftime@GOT]                        ; strftime, strftime@GOT, CODE XREF=time_string.isra.1+62
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x2e
0000000000001adb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getutxent:        // getutxent
0000000000001ae0         jmp        qword [getutxent@GOT]                       ; getutxent, getutxent@GOT, CODE XREF=read_utmp+54, read_utmp+164
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x2f
0000000000001aeb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001af0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+868, who+1984, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x30
0000000000001afb         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001b00         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x31
0000000000001b0b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001b10         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x32
0000000000001b1b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001b20         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+390, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x33
0000000000001b2b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001b30         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x34
0000000000001b3b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001b40         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x35
0000000000001b4b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getaddrinfo:        // getaddrinfo
0000000000001b50         jmp        qword [getaddrinfo@GOT]                     ; getaddrinfo, getaddrinfo@GOT, CODE XREF=canon_host_r+60
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x36
0000000000001b5b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strdup:        // strdup
0000000000001b60         jmp        qword [strdup@GOT]                          ; strdup, strdup@GOT, CODE XREF=canon_host_r+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x37
0000000000001b6b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001b70         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_40f0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x38
0000000000001b7b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001b80         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_40f0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x39
0000000000001b8b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001b90         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3e90+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x3a
0000000000001b9b         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_freeaddrinfo:        // freeaddrinfo
0000000000001ba0         jmp        qword [freeaddrinfo@GOT]                    ; freeaddrinfo, freeaddrinfo@GOT, CODE XREF=canon_host_r+112
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x3b
0000000000001bab         jmp        0x17e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000001bb0         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=print_line+503, print_line+557, print_line+606, print_user+74, print_user+466, print_user+714, print_user+1089, print_user+1318, who+674, who+772, who+1255
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x3c
0000000000001bbb         jmp        0x17e0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1bc0; 0x1bc8[ (8 bytes)
        ; File offset : [7104; 7112[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20afe8:        // qword_20afe8
0000000000001bc0         jmp        qword [qword_20afe8]                        ; qword, End of unwind block (FDE at 0x9ac4), Begin of unwind block (FDE at 0x9aec), qword_20afe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001bc6         align      8
0000000000001bc8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9aec)
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1bd0; 0x843e[ (26734 bytes)
        ; File offset : [7120; 33854[ (26734 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
0000000000001bd0         push       r12                                         ; Begin of unwind block (FDE at 0x9d20), DATA XREF=_start+29
0000000000001bd2         push       rbp
0000000000001bd3         mov        rbp, rsi
0000000000001bd6         push       rbx
0000000000001bd7         mov        ebx, edi
0000000000001bd9         mov        rdi, qword [rsi]
0000000000001bdc         mov        r12d, 0x1
0000000000001be2         call       set_program_name                            ; set_program_name
0000000000001be7         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x9261
0000000000001bee         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001bf3         call       j_setlocale                                 ; setlocale
0000000000001bf8         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001bff         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001c06         call       j_bindtextdomain                            ; bindtextdomain
0000000000001c0b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001c12         call       j_textdomain                                ; textdomain
0000000000001c17         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001c1e         call       atexit                                      ; atexit
0000000000001c23         nop        dword [rax+rax]

                     loc_1c28:
0000000000001c28         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+186, main+249, main+286, main+402, main+414, main+429, main+441, main+453, main+468, main+490, main+519
0000000000001c2f         lea        rdx, qword [aAbdlmpqrstuwht]                ; argument "__shortopts" for method j_getopt_long, "abdlmpqrstuwHT"
0000000000001c36         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001c39         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000001c3c         mov        edi, ebx                                    ; argument "___argc" for method j_getopt_long
0000000000001c3e         call       j_getopt_long                               ; getopt_long
0000000000001c43         cmp        eax, 0xffffffff
0000000000001c46         je         loc_1e55

0000000000001c4c         cmp        eax, 0x6d
0000000000001c4f         je         loc_1d82

0000000000001c55         jle        loc_1c90

0000000000001c57         cmp        eax, 0x73
0000000000001c5a         je         loc_1d67

0000000000001c60         jle        loc_1cd0

0000000000001c62         cmp        eax, 0x75
0000000000001c65         je         loc_1da9

0000000000001c6b         jl         loc_1d9a

0000000000001c71         cmp        eax, 0x77
0000000000001c74         je         loc_1d8e

0000000000001c7a         add        eax, 0xffffff80
0000000000001c7d         jne        loc_1d0f

0000000000001c83         mov        byte [do_lookup], 0x1                       ; do_lookup
0000000000001c8a         jmp        loc_1c28
0000000000001c8c         align      16

                     loc_1c90:
0000000000001c90         cmp        eax, 0x54                                   ; CODE XREF=main+133
0000000000001c93         je         loc_1d8e

0000000000001c99         jle        loc_1cf8

0000000000001c9b         cmp        eax, 0x62
0000000000001c9e         je         loc_1d73

0000000000001ca4         jle        loc_1ddc

0000000000001caa         cmp        eax, 0x64
0000000000001cad         je         loc_1dbf

0000000000001cb3         cmp        eax, 0x6c
0000000000001cb6         jne        loc_1d0f

0000000000001cb8         mov        byte [need_login], 0x1                      ; need_login
0000000000001cbf         mov        byte [include_idle], 0x1                    ; include_idle
0000000000001cc6         xor        r12d, r12d
0000000000001cc9         jmp        loc_1c28
0000000000001cce         align      16

                     loc_1cd0:
0000000000001cd0         cmp        eax, 0x71                                   ; CODE XREF=main+144
0000000000001cd3         je         loc_1e49

0000000000001cd9         jg         loc_1e33

0000000000001cdf         cmp        eax, 0x70
0000000000001ce2         jne        loc_1d0f

0000000000001ce4         mov        byte [need_initspawn], 0x1                  ; need_initspawn
0000000000001ceb         xor        r12d, r12d
0000000000001cee         jmp        loc_1c28
0000000000001cf3         align      8

                     loc_1cf8:
0000000000001cf8         cmp        eax, 0xffffff7e                             ; CODE XREF=main+201
0000000000001cfd         je         loc_1f01

0000000000001d03         cmp        eax, 0x48
0000000000001d06         je         loc_1d5b

0000000000001d08         cmp        eax, 0xffffff7d
0000000000001d0d         je         loc_1d19

                     loc_1d0f:
0000000000001d0f         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+173, main+230, main+274, main+527, main+873
0000000000001d14         call       usage                                       ; usage

                     loc_1d19:
0000000000001d19         lea        rax, qword [aMichaelStone]                  ; "Michael Stone", CODE XREF=main+317
0000000000001d20         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001d27         mov        rcx, qword [Version]                        ; Version
0000000000001d2e         push       0x0
0000000000001d30         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001d37         lea        r8, qword [aJosephArceneau]                 ; "Joseph Arceneaux"
0000000000001d3e         push       rax
0000000000001d3f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x860a
0000000000001d46         lea        rsi, qword [aSdSd+10]                       ; 0x8574
0000000000001d4d         xor        eax, eax
0000000000001d4f         call       version_etc                                 ; version_etc
0000000000001d54         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001d56         call       j_exit                                      ; exit
                        ; endp

                     loc_1d5b:
0000000000001d5b         mov        byte [include_heading], 0x1                 ; include_heading, CODE XREF=main+310
0000000000001d62         jmp        loc_1c28

                     loc_1d67:
0000000000001d67         mov        byte [short_output], 0x1                    ; short_output, CODE XREF=main+138
0000000000001d6e         jmp        loc_1c28

                     loc_1d73:
0000000000001d73         mov        byte [need_boottime], 0x1                   ; need_boottime, CODE XREF=main+206
0000000000001d7a         xor        r12d, r12d
0000000000001d7d         jmp        loc_1c28

                     loc_1d82:
0000000000001d82         mov        byte [my_line_only], 0x1                    ; my_line_only, CODE XREF=main+127
0000000000001d89         jmp        loc_1c28

                     loc_1d8e:
0000000000001d8e         mov        byte [include_mesg], 0x1                    ; include_mesg, CODE XREF=main+164, main+195
0000000000001d95         jmp        loc_1c28

                     loc_1d9a:
0000000000001d9a         mov        byte [need_clockchange], 0x1                ; need_clockchange, CODE XREF=main+155
0000000000001da1         xor        r12d, r12d
0000000000001da4         jmp        loc_1c28

                     loc_1da9:
0000000000001da9         mov        byte [need_users], 0x1                      ; need_users, CODE XREF=main+149
0000000000001db0         mov        byte [include_idle], 0x1                    ; include_idle
0000000000001db7         xor        r12d, r12d
0000000000001dba         jmp        loc_1c28

                     loc_1dbf:
0000000000001dbf         mov        byte [need_deadprocs], 0x1                  ; need_deadprocs, CODE XREF=main+221
0000000000001dc6         mov        byte [include_idle], 0x1                    ; include_idle
0000000000001dcd         xor        r12d, r12d
0000000000001dd0         mov        byte [include_exit], 0x1                    ; include_exit
0000000000001dd7         jmp        loc_1c28

                     loc_1ddc:
0000000000001ddc         cmp        eax, 0x61                                   ; CODE XREF=main+212
0000000000001ddf         jne        loc_1d0f

0000000000001de5         mov        byte [need_boottime], 0x1                   ; need_boottime
0000000000001dec         mov        byte [need_deadprocs], 0x1                  ; need_deadprocs
0000000000001df3         xor        r12d, r12d
0000000000001df6         mov        byte [need_login], 0x1                      ; need_login
0000000000001dfd         mov        byte [need_initspawn], 0x1                  ; need_initspawn
0000000000001e04         mov        byte [need_runlevel], 0x1                   ; need_runlevel
0000000000001e0b         mov        byte [need_clockchange], 0x1                ; need_clockchange
0000000000001e12         mov        byte [need_users], 0x1                      ; need_users
0000000000001e19         mov        byte [include_mesg], 0x1                    ; include_mesg
0000000000001e20         mov        byte [include_idle], 0x1                    ; include_idle
0000000000001e27         mov        byte [include_exit], 0x1                    ; include_exit
0000000000001e2e         jmp        loc_1c28

                     loc_1e33:
0000000000001e33         mov        byte [need_runlevel], 0x1                   ; need_runlevel, CODE XREF=main+265
0000000000001e3a         mov        byte [include_idle], 0x1                    ; include_idle
0000000000001e41         xor        r12d, r12d
0000000000001e44         jmp        loc_1c28

                     loc_1e49:
0000000000001e49         mov        byte [short_list], 0x1                      ; short_list, CODE XREF=main+259
0000000000001e50         jmp        loc_1c28

                     loc_1e55:
0000000000001e55         test       r12b, r12b                                  ; CODE XREF=main+118
0000000000001e58         je         loc_1e68

0000000000001e5a         mov        byte [need_users], 0x1                      ; need_users
0000000000001e61         mov        byte [short_output], 0x1                    ; short_output

                     loc_1e68:
0000000000001e68         cmp        byte [include_exit], 0x0                    ; include_exit, CODE XREF=main+648
0000000000001e6f         je         loc_1e78

0000000000001e71         mov        byte [short_output], 0x0                    ; short_output

                     loc_1e78:
0000000000001e78         mov        edi, 0x2                                    ; CODE XREF=main+671
0000000000001e7d         call       hard_locale                                 ; hard_locale
0000000000001e82         test       al, al
0000000000001e84         jne        loc_1ecb

0000000000001e86         lea        rax, qword [aBEHm]                          ; "%b %e %H:%M"
0000000000001e8d         mov        dword [time_format_width], 0xc              ; time_format_width
0000000000001e97         mov        qword [time_format], rax                    ; time_format

                     loc_1e9e:
0000000000001e9e         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+787
0000000000001ea5         sub        ebx, eax
0000000000001ea7         cmp        ebx, 0x1
0000000000001eaa         je         loc_1ef3

0000000000001eac         jg         loc_1ee5

0000000000001eae         add        ebx, 0x1
0000000000001eb1         jl         loc_1f08

                     loc_1eb3:
0000000000001eb3         lea        rdi, qword [aVarrunutmp]                    ; "/var/run/utmp", CODE XREF=main+801
0000000000001eba         mov        esi, 0x1
0000000000001ebf         call       who                                         ; who

                     loc_1ec4:
0000000000001ec4         pop        rbx                                         ; CODE XREF=main+815
0000000000001ec5         xor        eax, eax
0000000000001ec7         pop        rbp
0000000000001ec8         pop        r12
0000000000001eca         ret
                        ; endp

                     loc_1ecb:
0000000000001ecb         lea        rax, qword [aYmdHm]                         ; "%Y-%m-%d %H:%M", CODE XREF=main+692
0000000000001ed2         mov        dword [time_format_width], 0x10             ; time_format_width
0000000000001edc         mov        qword [time_format], rax                    ; time_format
0000000000001ee3         jmp        loc_1e9e

                     loc_1ee5:
0000000000001ee5         cmp        ebx, 0x2                                    ; CODE XREF=main+732
0000000000001ee8         jne        loc_1f08

0000000000001eea         mov        byte [my_line_only], 0x1                    ; my_line_only
0000000000001ef1         jmp        loc_1eb3

                     loc_1ef3:
0000000000001ef3         mov        rdi, qword [rbp+rax*8]                      ; CODE XREF=main+730
0000000000001ef8         xor        esi, esi
0000000000001efa         call       who                                         ; who
0000000000001eff         jmp        loc_1ec4

                     loc_1f01:
0000000000001f01         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+301
0000000000001f03         call       usage                                       ; usage

                     loc_1f08:
0000000000001f08         mov        rdi, qword [rbp+rax*8+0x10]                 ; CODE XREF=main+737, main+792
0000000000001f0d         call       quote                                       ; quote
0000000000001f12         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000001f19         mov        rbx, rax
0000000000001f1c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f1e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f23         call       j_dcgettext                                 ; dcgettext
0000000000001f28         mov        rcx, rbx
0000000000001f2b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f2e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001f30         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001f32         xor        eax, eax
0000000000001f34         call       j_error                                     ; error
0000000000001f39         jmp        loc_1d0f
0000000000001f3e         align      64                                          ; End of unwind block (FDE at 0x9d20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001f40         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x9a94)
0000000000001f42         mov        r9, rdx
0000000000001f45         pop        rsi
0000000000001f46         mov        rdx, rsp
0000000000001f49         and        rsp, 0xfffffffffffffff0
0000000000001f4d         push       rax
0000000000001f4e         push       rsp
0000000000001f4f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001f56         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001f5d         lea        rdi, qword [main]                           ; main
0000000000001f64         call       qword [qword_20afc8+8]                      ; 0x20afd0
0000000000001f6a         hlt
                        ; endp
0000000000001f6b         align      16                                          ; End of unwind block (FDE at 0x9a94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001f70         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001f77         push       rbp
0000000000001f78         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001f7f         cmp        rax, rdi
0000000000001f82         mov        rbp, rsp
0000000000001f85         je         loc_1fa0

0000000000001f87         mov        rax, qword [qword_20afc8]                   ; qword_20afc8
0000000000001f8e         test       rax, rax
0000000000001f91         je         loc_1fa0

0000000000001f93         pop        rbp
0000000000001f94         jmp        rax
                        ; endp
0000000000001f96         align      32

                     loc_1fa0:
0000000000001fa0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001fa1         ret
                        ; endp
0000000000001fa2         align      16

                     register_tm_clones:
0000000000001fb0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001fb7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001fbe         push       rbp
0000000000001fbf         sub        rsi, rdi
0000000000001fc2         mov        rbp, rsp
0000000000001fc5         sar        rsi, 0x3
0000000000001fc9         mov        rax, rsi
0000000000001fcc         shr        rax, 0x3f
0000000000001fd0         add        rsi, rax
0000000000001fd3         sar        rsi, 0x1
0000000000001fd6         je         loc_1ff0

0000000000001fd8         mov        rax, qword [qword_20afe0]                   ; qword_20afe0
0000000000001fdf         test       rax, rax
0000000000001fe2         je         loc_1ff0

0000000000001fe4         pop        rbp
0000000000001fe5         jmp        rax
                        ; endp
0000000000001fe7         align      16

                     loc_1ff0:
0000000000001ff0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001ff1         ret
                        ; endp
0000000000001ff2         align      8192


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002000         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002007         jne        loc_2038

0000000000002009         cmp        qword [qword_20afe8], 0x0                   ; qword_20afe8
0000000000002011         push       rbp
0000000000002012         mov        rbp, rsp
0000000000002015         je         loc_2023

0000000000002017         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000201e         call       j_qword_20afe8                              ; qword_20afe8

                     loc_2023:
0000000000002023         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002028         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000202f         pop        rbp
0000000000002030         ret
                        ; endp
0000000000002031         align      8

                     loc_2038:
0000000000002038         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000203a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002040         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002041         mov        rbp, rsp
0000000000002044         pop        rbp
0000000000002045         jmp        register_tm_clones                          ; register_tm_clones
000000000000204a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_4D: int8_t, -77
        ;    var_55: int8_t, -85
        ;    var_60: int64_t, -96
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_84: int32_t, -132
        ;    var_88: int32_t, -136


                     print_line:
0000000000002050         push       r15                                         ; Begin of unwind block (FDE at 0x9b04), CODE XREF=print_user+547, who+831, who+1092, who+1168, who+1307, who+1674
0000000000002052         push       r14
0000000000002054         mov        r15, r8
0000000000002057         push       r13
0000000000002059         push       r12
000000000000205b         mov        r14, r9
000000000000205e         push       rbp
000000000000205f         push       rbx
0000000000002060         mov        rbx, rsi
0000000000002063         sub        rsp, 0x58
0000000000002067         mov        byte [byte_20b019], dl                      ; byte_20b019
000000000000206d         movzx      r12d, byte [short_output]                   ; short_output
0000000000002075         mov        rax, qword [rsp+0x88+arg_10]
000000000000207d         mov        dword [rsp+0x88+var_88], edi
0000000000002080         mov        dword [rsp+0x88+var_84], ecx
0000000000002084         mov        r8, qword [rsp+0x88+arg_0]
000000000000208c         mov        rbp, qword [rsp+0x88+arg_8]
0000000000002094         mov        qword [rsp+0x88+var_80], rax
0000000000002099         mov        rax, qword [rsp+0x88+arg_18]
00000000000020a1         mov        qword [rsp+0x88+var_78], rax
00000000000020a6         mov        rax, qword [fs:0x28]
00000000000020af         mov        qword [rsp+0x88+var_40], rax
00000000000020b4         xor        eax, eax
00000000000020b6         cmp        byte [include_idle], 0x0                    ; include_idle
00000000000020bd         je         loc_20c8

00000000000020bf         test       r12b, r12b
00000000000020c2         je         loc_2210

                     loc_20c8:
00000000000020c8         lea        r13, qword [rsp+0x88+var_55]                ; CODE XREF=print_line+109, print_line+470
00000000000020cd         mov        byte [rsp+0x88+var_55], 0x0

                     loc_20d2:
00000000000020d2         test       r12b, r12b                                  ; CODE XREF=print_line+516
00000000000020d5         jne        loc_20e9

00000000000020d7         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
00000000000020da         call       j_strlen                                    ; strlen
00000000000020df         cmp        rax, 0xb
00000000000020e3         jbe        loc_2290

                     loc_20e9:
00000000000020e9         lea        r12, qword [rsp+0x88+var_4D]                ; CODE XREF=print_line+133
00000000000020ee         mov        byte [rsp+0x88+var_4D], 0x0

                     loc_20f3:
00000000000020f3         cmp        byte [include_exit], 0x0                    ; include_exit, CODE XREF=print_line+611
00000000000020fa         mov        edi, 0x1
00000000000020ff         je         loc_211c

0000000000002101         mov        rdi, qword [rsp+0x88+var_78]                ; argument "__s" for method j_strlen
0000000000002106         call       j_strlen                                    ; strlen
000000000000210b         lea        rdi, qword [rax+2]
000000000000210f         cmp        rax, 0xb
0000000000002113         mov        eax, 0xe
0000000000002118         cmovbe     rdi, rax

                     loc_211c:
000000000000211c         call       xmalloc                                     ; xmalloc, CODE XREF=print_line+175
0000000000002121         cmp        byte [include_exit], 0x0                    ; include_exit
0000000000002128         mov        rbp, rax
000000000000212b         jne        loc_2260

0000000000002131         mov        byte [rax], 0x0

                     loc_2134:
0000000000002134         cmp        byte [include_mesg], 0x0                    ; include_mesg, CODE XREF=print_line+562
000000000000213b         lea        rax, qword [mesg.7721]                      ; mesg.7721
0000000000002142         lea        r8, qword [aWrittenBySSAnd+27]              ; 0x9261
0000000000002149         lea        rdi, qword [rsp+0x88+var_60]
000000000000214e         lea        rsi, qword [a8ss12sSss8ss]                  ; "%-8.*s%s %-12.*s %-*s%s%s %-8s%s"
0000000000002155         cmovne     r8, rax
0000000000002159         lea        rax, qword [_IO_stdin_used+4]               ; 0x8464
0000000000002160         test       rbx, rbx
0000000000002163         cmove      rbx, rax
0000000000002167         mov        eax, dword [time_format_width]              ; time_format_width
000000000000216d         sub        rsp, 0x8
0000000000002171         push       rbp
0000000000002172         push       qword [rsp+0x98+var_80]
0000000000002176         mov        rcx, rbx
0000000000002179         push       r12
000000000000217b         push       r13
000000000000217d         push       r14
000000000000217f         push       rax
0000000000002180         xor        eax, eax
0000000000002182         push       r15
0000000000002184         mov        r9d, dword [rsp+0xc8+var_84]
0000000000002189         mov        edx, dword [rsp+0xc8+var_88]
000000000000218d         call       rpl_asprintf                                ; rpl_asprintf
0000000000002192         add        rsp, 0x40
0000000000002196         cmp        eax, 0xffffffff
0000000000002199         je         loc_22b8

000000000000219f         mov        rbx, qword [rsp+0x88+var_60]
00000000000021a4         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000021a7         call       j_strlen                                    ; strlen
00000000000021ac         add        rax, rbx
00000000000021af         jmp        loc_21bb
00000000000021b1         align      8

                     loc_21b8:
00000000000021b8         mov        rax, rdx                                    ; CODE XREF=print_line+371

                     loc_21bb:
00000000000021bb         cmp        byte [rax-1], 0x20                          ; CODE XREF=print_line+351
00000000000021bf         lea        rdx, qword [rax-1]
00000000000021c3         je         loc_21b8

00000000000021c5         mov        byte [rax], 0x0
00000000000021c8         mov        rdi, qword [rsp+0x88+var_60]                ; argument "__s" for method j_puts
00000000000021cd         call       j_puts                                      ; puts
00000000000021d2         mov        rdi, qword [rsp+0x88+var_60]                ; argument "__ptr" for method j_free
00000000000021d7         call       j_free                                      ; free
00000000000021dc         mov        rax, qword [rsp+0x88+var_40]
00000000000021e1         xor        rax, qword [fs:0x28]
00000000000021ea         jne        loc_22bd

00000000000021f0         add        rsp, 0x58
00000000000021f4         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
00000000000021f7         pop        rbx
00000000000021f8         pop        rbp
00000000000021f9         pop        r12
00000000000021fb         pop        r13
00000000000021fd         pop        r14
00000000000021ff         pop        r15
0000000000002201         jmp        j_free                                      ; free
                        ; endp
0000000000002206         align      16

                     loc_2210:
0000000000002210         mov        rdi, r8                                     ; argument "__s" for method j_strlen, CODE XREF=print_line+114
0000000000002213         mov        qword [rsp+0x88+var_70], r8
0000000000002218         call       j_strlen                                    ; strlen
000000000000221d         cmp        rax, 0x6
0000000000002221         mov        r8, qword [rsp+0x88+var_70]
0000000000002226         ja         loc_20c8

000000000000222c         lea        r13, qword [rsp+0x88+var_55]
0000000000002231         lea        rcx, qword [a6s]                            ; " %-6s"
0000000000002238         mov        edx, 0x8
000000000000223d         mov        esi, 0x1
0000000000002242         xor        eax, eax
0000000000002244         mov        rdi, r13
0000000000002247         call       j___sprintf_chk                             ; __sprintf_chk
000000000000224c         movzx      r12d, byte [short_output]                   ; short_output
0000000000002254         jmp        loc_20d2
0000000000002259         align      32

                     loc_2260:
0000000000002260         mov        r8, qword [rsp+0x88+var_78]                 ; CODE XREF=print_line+219
0000000000002265         lea        rcx, qword [a12s]                           ; " %-12s"
000000000000226c         mov        rdi, rax
000000000000226f         mov        rdx, 0xffffffffffffffff
0000000000002276         mov        esi, 0x1
000000000000227b         xor        eax, eax
000000000000227d         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002282         jmp        loc_2134
0000000000002287         align      16

                     loc_2290:
0000000000002290         lea        r12, qword [rsp+0x88+var_4D]                ; CODE XREF=print_line+147
0000000000002295         lea        rcx, qword [a10s]                           ; " %10s"
000000000000229c         mov        r8, rbp
000000000000229f         mov        edx, 0xd
00000000000022a4         mov        esi, 0x1
00000000000022a9         xor        eax, eax
00000000000022ab         mov        rdi, r12
00000000000022ae         call       j___sprintf_chk                             ; __sprintf_chk
00000000000022b3         jmp        loc_20f3

                     loc_22b8:
00000000000022b8         call       xalloc_die                                  ; xalloc_die, CODE XREF=print_line+329
                        ; endp

                     loc_22bd:
00000000000022bd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_line+410
                        ; endp
00000000000022c2         align      16                                          ; End of unwind block (FDE at 0x9b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     make_id_equals_comment:
00000000000022d0         push       rbp                                         ; Begin of unwind block (FDE at 0x9b78), CODE XREF=who+1215, who+1332, who+1446
00000000000022d1         push       rbx
00000000000022d2         lea        rsi, qword [a12s+7]                         ; argument "msgid" for method j_dcgettext, 0x847c
00000000000022d9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022de         mov        rbp, rdi
00000000000022e1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022e3         sub        rsp, 0x8
00000000000022e7         call       j_dcgettext                                 ; dcgettext
00000000000022ec         mov        rdi, rax                                    ; argument "__s" for method j_strlen
00000000000022ef         call       j_strlen                                    ; strlen
00000000000022f4         lea        rdi, qword [rax+5]
00000000000022f8         call       xmalloc                                     ; xmalloc
00000000000022fd         lea        rsi, qword [a12s+7]                         ; argument "msgid" for method j_dcgettext, 0x847c
0000000000002304         mov        rbx, rax
0000000000002307         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000230c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000230e         call       j_dcgettext                                 ; dcgettext
0000000000002313         mov        rdi, rbx                                    ; argument "__dest" for method j_strcpy
0000000000002316         mov        rsi, rax                                    ; argument "__src" for method j_strcpy
0000000000002319         call       j_strcpy                                    ; strcpy
000000000000231e         lea        rsi, qword [rbp+0x28]                       ; argument "__src" for method j_strncat
0000000000002322         mov        rdi, rbx                                    ; argument "__dest" for method j_strncat
0000000000002325         mov        edx, 0x4                                    ; argument "__n" for method j_strncat
000000000000232a         call       j_strncat                                   ; strncat
000000000000232f         add        rsp, 0x8
0000000000002333         pop        rbx
0000000000002334         pop        rbp
0000000000002335         ret
                        ; endp
0000000000002336         align      64                                          ; End of unwind block (FDE at 0x9b78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     time_string.isra.1:
0000000000002340         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x9ba0), CODE XREF=print_user+511, who+798, who+1114, who+1190, who+1268, who+1382, who+1632
0000000000002344         movsxd     rdi, edi
0000000000002347         mov        qword [rsp+0x18+var_18], rdi
000000000000234b         mov        rdi, rsp                                    ; argument "__timer" for method j_localtime
000000000000234e         mov        rax, qword [fs:0x28]
0000000000002357         mov        qword [rsp+0x18+var_10], rax
000000000000235c         xor        eax, eax
000000000000235e         call       j_localtime                                 ; localtime
0000000000002363         test       rax, rax
0000000000002366         je         loc_23a0

0000000000002368         mov        rdx, qword [time_format]                    ; argument "__format" for method j_strftime, time_format
000000000000236f         lea        rdi, qword [buf.7706]                       ; argument "__s" for method j_strftime, buf.7706
0000000000002376         mov        rcx, rax                                    ; argument "__tp" for method j_strftime
0000000000002379         mov        esi, 0x21                                   ; argument "__maxsize" for method j_strftime
000000000000237e         call       j_strftime                                  ; strftime
0000000000002383         lea        rax, qword [buf.7706]                       ; buf.7706

                     loc_238a:
000000000000238a         mov        rdx, qword [rsp+0x18+var_10]                ; CODE XREF=time_string.isra.1+112
000000000000238f         xor        rdx, qword [fs:0x28]
0000000000002398         jne        loc_23b2

000000000000239a         add        rsp, 0x18
000000000000239e         ret
                        ; endp
000000000000239f         align      32

                     loc_23a0:
00000000000023a0         mov        rdi, qword [rsp+0x18+var_18]                ; CODE XREF=time_string.isra.1+38
00000000000023a4         lea        rsi, qword [buf.7706]                       ; buf.7706
00000000000023ab         call       imaxtostr                                   ; imaxtostr
00000000000023b0         jmp        loc_238a

                     loc_23b2:
00000000000023b2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=time_string.isra.1+88
                        ; endp
00000000000023b7         align      64                                          ; End of unwind block (FDE at 0x9ba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_148: int8_t, -328
        ;    var_174: int16_t, -372
        ;    var_178: int32_t, -376
        ;    var_184: int8_t, -388
        ;    var_18B: int32_t, -395
        ;    var_1E0: int64_t, -480
        ;    var_210: int32_t, -528
        ;    var_228: int8_t, -552
        ;    var_230: int64_t, -560
        ;    var_238: int64_t, -568
        ;    var_240: int64_t, -576
        ;    var_248: int64_t, -584
        ;    var_24C: int32_t, -588


                     print_user:
00000000000023c0         push       r15                                         ; Begin of unwind block (FDE at 0x9bbc), CODE XREF=who+1703
00000000000023c2         push       r14
00000000000023c4         lea        rcx, qword [asc+6]                          ; 0x8486
00000000000023cb         push       r13
00000000000023cd         push       r12
00000000000023cf         mov        edx, 0xc
00000000000023d4         push       rbp
00000000000023d5         push       rbx
00000000000023d6         mov        r12, rsi
00000000000023d9         mov        rbx, rdi
00000000000023dc         mov        esi, 0x1
00000000000023e1         sub        rsp, 0x228
00000000000023e8         movsxd     r8, dword [rdi+4]
00000000000023ec         lea        rbp, qword [rsp+0x258+var_184]
00000000000023f4         mov        rax, qword [fs:0x28]
00000000000023fd         mov        qword [rsp+0x258+var_40], rax
0000000000002405         xor        eax, eax
0000000000002407         mov        rdi, rbp
000000000000240a         call       j___sprintf_chk                             ; __sprintf_chk
000000000000240f         movzx      ecx, byte [rbx+8]
0000000000002413         cmp        cl, 0x2f
0000000000002416         jne        loc_26d0

000000000000241c         lea        rax, qword [rbx+8]
0000000000002420         lea        rsi, qword [rsp+0x258+var_178]
0000000000002428         lea        rdi, qword [rbx+0x28]
000000000000242c         mov        r15, rax
000000000000242f         mov        rdx, rsi
0000000000002432         jmp        loc_243f
0000000000002434         align      8

                     loc_2438:
0000000000002438         movzx      ecx, byte [rax]                             ; CODE XREF=print_user+141
000000000000243b         test       cl, cl
000000000000243d         je         loc_244f

                     loc_243f:
000000000000243f         add        rax, 0x1                                    ; CODE XREF=print_user+114, print_user+833
0000000000002443         add        rdx, 0x1
0000000000002447         mov        byte [rdx-1], cl
000000000000244a         cmp        rdi, rax
000000000000244d         ja         loc_2438

                     loc_244f:
000000000000244f         mov        byte [rdx], 0x0                             ; CODE XREF=print_user+125, print_user+839
0000000000002452         lea        rdx, qword [rsp+0x258+var_228]              ; argument "__stat_buf" for method j___xstat
0000000000002457         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000245c         call       j___xstat                                   ; __xstat
0000000000002461         test       eax, eax
0000000000002463         jne        loc_2710

0000000000002469         mov        eax, dword [rsp+0x258+var_210]
000000000000246d         mov        r14, qword [rsp+0x258+var_1E0]
0000000000002472         and        eax, 0x10
0000000000002475         cmp        eax, 0x1
0000000000002478         sbb        r13d, r13d
000000000000247b         and        r13d, 0x2
000000000000247f         add        r13d, 0x2b
0000000000002483         test       r14, r14
0000000000002486         jne        loc_2618

000000000000248c         movsx      eax, r13b
0000000000002490         mov        dword [rsp+0x258+var_24C], eax

                     loc_2494:
0000000000002494         movzx      edx, byte [rbx+0x4c]                        ; CODE XREF=print_user+856
0000000000002498         mov        dword [rsp+0x258+var_18B], 0x3f2020
00000000000024a3         lea        r14, qword [rsp+0x258+var_18B]
00000000000024ab         test       dl, dl
00000000000024ad         je         loc_26a3

                     loc_24b3:
00000000000024b3         lea        r12, qword [rsp+0x258+var_148]              ; CODE XREF=print_user+733
00000000000024bb         lea        rax, qword [rbx+0x4c]
00000000000024bf         lea        rsi, qword [rbx+0x14c]
00000000000024c6         mov        rcx, r12
00000000000024c9         jmp        loc_24d7
00000000000024cb         align      16

                     loc_24d0:
00000000000024d0         movzx      edx, byte [rax]                             ; CODE XREF=print_user+293
00000000000024d3         test       dl, dl
00000000000024d5         je         loc_24e7

                     loc_24d7:
00000000000024d7         add        rax, 0x1                                    ; CODE XREF=print_user+265
00000000000024db         add        rcx, 0x1
00000000000024df         mov        byte [rcx-1], dl
00000000000024e2         cmp        rsi, rax
00000000000024e5         ja         loc_24d0

                     loc_24e7:
00000000000024e7         mov        byte [rcx], 0x0                             ; CODE XREF=print_user+277
00000000000024ea         mov        esi, 0x3a                                   ; argument "__c" for method j_strchr
00000000000024ef         mov        rdi, r12                                    ; argument "__s" for method j_strchr
00000000000024f2         call       j_strchr                                    ; strchr
00000000000024f7         test       rax, rax
00000000000024fa         je         loc_2778

0000000000002500         mov        byte [rax], 0x0
0000000000002503         cmp        byte [rsp+0x258+var_148], 0x0
000000000000250b         lea        rsi, qword [rax+1]
000000000000250f         mov        r13, r12
0000000000002512         mov        qword [rsp+0x258+var_248], rsi
0000000000002517         jne        loc_2720

                     loc_251d:
000000000000251d         mov        rdi, r13                                    ; argument "__s" for method j_strlen, CODE XREF=print_user+871, print_user+895
0000000000002520         call       j_strlen                                    ; strlen
0000000000002525         mov        rdi, qword [rsp+0x258+var_248]
000000000000252a         mov        qword [rsp+0x258+var_230], rax
000000000000252f         mov        rcx, qword [hostlen.7743]                   ; hostlen.7743
0000000000002536         mov        r10, qword [hoststr.7742]                   ; hoststr.7742
000000000000253d         test       rdi, rdi
0000000000002540         je         loc_27dd

0000000000002546         mov        qword [rsp+0x258+var_238], r10
000000000000254b         mov        qword [rsp+0x258+var_240], rcx
0000000000002550         call       j_strlen                                    ; strlen
0000000000002555         mov        rdx, qword [rsp+0x258+var_230]
000000000000255a         mov        rcx, qword [rsp+0x258+var_240]
000000000000255f         mov        r10, qword [rsp+0x258+var_238]
0000000000002564         lea        rax, qword [rdx+rax+4]
0000000000002569         cmp        rax, rcx
000000000000256c         ja         loc_2810

                     loc_2572:
0000000000002572         mov        r9, qword [rsp+0x258+var_248]               ; CODE XREF=print_user+1147
0000000000002577         lea        rcx, qword [aSs]                            ; "(%s:%s)"
000000000000257e         mov        r8, r13
0000000000002581         mov        rdx, 0xffffffffffffffff
0000000000002588         mov        esi, 0x1
000000000000258d         mov        rdi, r10
0000000000002590         xor        eax, eax
0000000000002592         call       j___sprintf_chk                             ; __sprintf_chk

                     loc_2597:
0000000000002597         cmp        r13, r12                                    ; CODE XREF=print_user+1094
000000000000259a         je         loc_25a4

000000000000259c         mov        rdi, r13                                    ; argument "__ptr" for method j_free
000000000000259f         call       j_free                                      ; free

                     loc_25a4:
00000000000025a4         mov        r12, qword [hoststr.7742]                   ; hoststr.7742, CODE XREF=print_user+474
00000000000025ab         lea        r13, qword [aWrittenBySSAnd+27]             ; 0x9261
00000000000025b2         test       r12, r12
00000000000025b5         cmove      r12, r13

                     loc_25b9:
00000000000025b9         mov        edi, dword [rbx+0x154]                      ; CODE XREF=print_user+772
00000000000025bf         call       time_string.isra.1                          ; time_string.isra.1
00000000000025c4         push       r13
00000000000025c6         push       r12
00000000000025c8         lea        rsi, qword [rbx+0x2c]
00000000000025cc         push       rbp
00000000000025cd         push       r14
00000000000025cf         mov        r9, rax
00000000000025d2         mov        edx, dword [rsp+0x278+var_24C]
00000000000025d6         mov        r8, r15
00000000000025d9         mov        ecx, 0x20
00000000000025de         mov        edi, 0x20
00000000000025e3         call       print_line                                  ; print_line
00000000000025e8         add        rsp, 0x20
00000000000025ec         mov        rax, qword [rsp+0x258+var_40]
00000000000025f4         xor        rax, qword [fs:0x28]
00000000000025fd         jne        loc_294e

0000000000002603         add        rsp, 0x228
000000000000260a         pop        rbx
000000000000260b         pop        rbp
000000000000260c         pop        r12
000000000000260e         pop        r13
0000000000002610         pop        r14
0000000000002612         pop        r15
0000000000002614         ret
                        ; endp
0000000000002615         align      8

                     loc_2618:
0000000000002618         movabs     rax, 0x8000000000000000                     ; CODE XREF=print_user+198
0000000000002622         cmp        qword [now.7699], rax                       ; now.7699
0000000000002629         je         loc_2840

                     loc_262f:
000000000000262f         cmp        r14, r12                                    ; CODE XREF=print_user+1164
0000000000002632         jle        loc_2650

0000000000002634         mov        rax, qword [now.7699]                       ; now.7699
000000000000263b         lea        rdx, qword [rax-0x1517f]
0000000000002642         cmp        r14, rdx
0000000000002645         jl         loc_2650

0000000000002647         cmp        r14, rax
000000000000264a         jle        loc_2881

                     loc_2650:
0000000000002650         lea        rsi, qword [aOld]                           ; argument "msgid" for method j_dcgettext, " old ", CODE XREF=print_user+626, print_user+645
0000000000002657         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000265c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000265e         call       j_dcgettext                                 ; dcgettext
0000000000002663         mov        r9, rax

                     loc_2666:
0000000000002666         lea        r14, qword [rsp+0x258+var_18B]              ; CODE XREF=print_user+1330, print_user+1385
000000000000266e         lea        rcx, qword [aOld+6]                         ; 0x84d4
0000000000002675         mov        edx, 0x7
000000000000267a         xor        eax, eax
000000000000267c         mov        r8d, 0x6
0000000000002682         mov        esi, 0x1
0000000000002687         mov        rdi, r14
000000000000268a         call       j___sprintf_chk                             ; __sprintf_chk
000000000000268f         movzx      edx, byte [rbx+0x4c]
0000000000002693         movsx      eax, r13b
0000000000002697         mov        dword [rsp+0x258+var_24C], eax
000000000000269b         test       dl, dl
000000000000269d         jne        loc_24b3

                     loc_26a3:
00000000000026a3         cmp        qword [hostlen.7743], 0x0                   ; hostlen.7743, CODE XREF=print_user+237
00000000000026ab         mov        r12, qword [hoststr.7742]                   ; hoststr.7742
00000000000026b2         je         loc_2748

                     loc_26b8:
00000000000026b8         mov        byte [r12], 0x0                             ; CODE XREF=print_user+943
00000000000026bd         lea        r13, qword [aWrittenBySSAnd+27]             ; 0x9261
00000000000026c4         jmp        loc_25b9
00000000000026c9         align      16

                     loc_26d0:
00000000000026d0         mov        eax, 0x2f                                   ; CODE XREF=print_user+86
00000000000026d5         lea        rsi, qword [rsp+0x258+var_178]
00000000000026dd         test       cl, cl
00000000000026df         mov        word [rsp+0x258+var_174], ax
00000000000026e7         lea        rax, qword [rbx+8]
00000000000026eb         mov        dword [rsp+0x258+var_178], 0x7665642f
00000000000026f6         lea        rdi, qword [rbx+0x28]
00000000000026fa         lea        rdx, qword [rsi+5]
00000000000026fe         mov        r15, rax
0000000000002701         jne        loc_243f

0000000000002707         jmp        loc_244f
000000000000270c         align      16

                     loc_2710:
0000000000002710         mov        dword [rsp+0x258+var_24C], 0x3f             ; CODE XREF=print_user+163
0000000000002718         jmp        loc_2494
000000000000271d         align      32

                     loc_2720:
0000000000002720         cmp        byte [do_lookup], 0x0                       ; do_lookup, CODE XREF=print_user+343
0000000000002727         je         loc_251d

000000000000272d         mov        rdi, r12
0000000000002730         call       canon_host                                  ; canon_host
0000000000002735         mov        r13, rax
0000000000002738         test       rax, rax
000000000000273b         cmove      r13, r12
000000000000273f         jmp        loc_251d
0000000000002744         align      8

                     loc_2748:
0000000000002748         mov        rdi, r12                                    ; argument "__ptr" for method j_free, CODE XREF=print_user+754
000000000000274b         mov        qword [hostlen.7743], 0x1                   ; hostlen.7743
0000000000002756         call       j_free                                      ; free
000000000000275b         mov        edi, 0x1
0000000000002760         call       xmalloc                                     ; xmalloc
0000000000002765         mov        r12, rax
0000000000002768         mov        qword [hoststr.7742], rax                   ; hoststr.7742
000000000000276f         jmp        loc_26b8
0000000000002774         align      8

                     loc_2778:
0000000000002778         cmp        byte [rsp+0x258+var_148], 0x0               ; CODE XREF=print_user+314
0000000000002780         je         loc_278f

0000000000002782         cmp        byte [do_lookup], 0x0                       ; do_lookup
0000000000002789         jne        loc_28f7

                     loc_278f:
000000000000278f         mov        rax, r12                                    ; CODE XREF=print_user+960

                     loc_2792:
0000000000002792         mov        ecx, dword [rax]                            ; CODE XREF=print_user+1000
0000000000002794         add        rax, 0x4
0000000000002798         lea        edx, dword [rcx-0x1010101]
000000000000279e         not        ecx
00000000000027a0         and        edx, ecx
00000000000027a2         and        edx, 0x80808080
00000000000027a8         je         loc_2792

                     loc_27aa:
00000000000027aa         mov        ecx, edx                                    ; CODE XREF=print_user+1417
00000000000027ac         mov        r10, qword [hoststr.7742]                   ; hoststr.7742
00000000000027b3         mov        r13, r12
00000000000027b6         shr        ecx, 0x10
00000000000027b9         test       edx, 0x8080
00000000000027bf         cmove      edx, ecx
00000000000027c2         lea        rcx, qword [rax+2]
00000000000027c6         mov        esi, edx
00000000000027c8         cmove      rax, rcx
00000000000027cc         add        sil, dl
00000000000027cf         mov        rcx, qword [hostlen.7743]                   ; hostlen.7743
00000000000027d6         sbb        rax, 0x3
00000000000027da         sub        rax, r12

                     loc_27dd:
00000000000027dd         add        rax, 0x3                                    ; CODE XREF=print_user+384, print_user+1373
00000000000027e1         cmp        rax, rcx
00000000000027e4         ja         loc_2851

                     loc_27e6:
00000000000027e6         lea        rcx, qword [aSs+8]                          ; 0x84e1, CODE XREF=print_user+1212
00000000000027ed         mov        r8, r13
00000000000027f0         mov        rdx, 0xffffffffffffffff
00000000000027f7         mov        esi, 0x1
00000000000027fc         mov        rdi, r10
00000000000027ff         xor        eax, eax
0000000000002801         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002806         jmp        loc_2597
000000000000280b         align      16

                     loc_2810:
0000000000002810         mov        rdi, r10                                    ; argument "__ptr" for method j_free, CODE XREF=print_user+428
0000000000002813         mov        qword [hostlen.7743], rax                   ; hostlen.7743
000000000000281a         mov        qword [rsp+0x258+var_240], rax
000000000000281f         call       j_free                                      ; free
0000000000002824         mov        rax, qword [rsp+0x258+var_240]
0000000000002829         mov        rdi, rax
000000000000282c         call       xmalloc                                     ; xmalloc
0000000000002831         mov        r10, rax
0000000000002834         mov        qword [hoststr.7742], rax                   ; hoststr.7742
000000000000283b         jmp        loc_2572

                     loc_2840:
0000000000002840         lea        rdi, qword [now.7699]                       ; argument "__timer" for method j_time, now.7699, CODE XREF=print_user+617
0000000000002847         call       j_time                                      ; time
000000000000284c         jmp        loc_262f

                     loc_2851:
0000000000002851         mov        rdi, r10                                    ; argument "__ptr" for method j_free, CODE XREF=print_user+1060
0000000000002854         mov        qword [hostlen.7743], rax                   ; hostlen.7743
000000000000285b         mov        qword [rsp+0x258+var_248], rax
0000000000002860         call       j_free                                      ; free
0000000000002865         mov        rax, qword [rsp+0x258+var_248]
000000000000286a         mov        rdi, rax
000000000000286d         call       xmalloc                                     ; xmalloc
0000000000002872         mov        r10, rax
0000000000002875         mov        qword [hoststr.7742], rax                   ; hoststr.7742
000000000000287c         jmp        loc_27e6

                     loc_2881:
0000000000002881         mov        ecx, eax                                    ; CODE XREF=print_user+650
0000000000002883         sub        ecx, r14d
0000000000002886         cmp        ecx, 0x3b
0000000000002889         jle        loc_2922

000000000000288f         cmp        ecx, 0x1517f
0000000000002895         jg         loc_2953

000000000000289b         mov        eax, ecx
000000000000289d         mov        edx, 0x91a2b3c5
00000000000028a2         lea        rdi, qword [idle_hhmm.7701]                 ; idle_hhmm.7701
00000000000028a9         imul       edx
00000000000028ab         mov        eax, ecx
00000000000028ad         mov        esi, 0x1
00000000000028b2         sar        eax, 0x1f
00000000000028b5         lea        r8d, dword [rdx+rcx]
00000000000028b9         mov        edx, 0x88888889
00000000000028be         sar        r8d, 0xb
00000000000028c2         sub        r8d, eax
00000000000028c5         imul       eax, r8d, 0xe10
00000000000028cc         sub        ecx, eax
00000000000028ce         mov        eax, ecx
00000000000028d0         lea        rcx, qword [a02d02d]                        ; "%02d:%02d"
00000000000028d7         mul        edx
00000000000028d9         xor        eax, eax
00000000000028db         shr        edx, 0x5
00000000000028de         mov        r9d, edx
00000000000028e1         mov        edx, 0x6
00000000000028e6         call       j___sprintf_chk                             ; __sprintf_chk
00000000000028eb         lea        r9, qword [idle_hhmm.7701]                  ; idle_hhmm.7701
00000000000028f2         jmp        loc_2666

                     loc_28f7:
00000000000028f7         mov        rdi, r12                                    ; CODE XREF=print_user+969
00000000000028fa         call       canon_host                                  ; canon_host
00000000000028ff         test       rax, rax
0000000000002902         mov        r13, rax
0000000000002905         je         loc_292e

0000000000002907         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000290a         call       j_strlen                                    ; strlen
000000000000290f         mov        rcx, qword [hostlen.7743]                   ; hostlen.7743
0000000000002916         mov        r10, qword [hoststr.7742]                   ; hoststr.7742
000000000000291d         jmp        loc_27dd

                     loc_2922:
0000000000002922         lea        r9, qword [asc]                             ; "  .  ", CODE XREF=print_user+1225
0000000000002929         jmp        loc_2666

                     loc_292e:
000000000000292e         mov        rax, r12                                    ; CODE XREF=print_user+1349

                     loc_2931:
0000000000002931         mov        ecx, dword [rax]                            ; CODE XREF=print_user+1415
0000000000002933         add        rax, 0x4
0000000000002937         lea        edx, dword [rcx-0x1010101]
000000000000293d         not        ecx
000000000000293f         and        edx, ecx
0000000000002941         and        edx, 0x80808080
0000000000002947         je         loc_2931

0000000000002949         jmp        loc_27aa

                     loc_294e:
000000000000294e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_user+573
                        ; endp

                     loc_2953:
0000000000002953         lea        rcx, qword [__PRETTY_FUNCTION__.7702]       ; argument "__function" for method j___assert_fail, "idle_string", CODE XREF=print_user+1237
000000000000295a         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/who.c"
0000000000002961         lea        rdi, qword [aSecondsidle606]                ; argument "__assertion" for method j___assert_fail, "seconds_idle / (60 * 60) < 24"
0000000000002968         mov        edx, 0xcd                                   ; argument "__line" for method j___assert_fail
000000000000296d         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000002972         align      128                                         ; End of unwind block (FDE at 0x9bbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4C: int8_t, -76
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136


                     who:
0000000000002980         push       r15                                         ; Begin of unwind block (FDE at 0x9c20), CODE XREF=main+751, main+810
0000000000002982         push       r14
0000000000002984         mov        ecx, esi
0000000000002986         push       r13
0000000000002988         push       r12
000000000000298a         push       rbp
000000000000298b         push       rbx
000000000000298c         mov        rbx, rdi
000000000000298f         sub        rsp, 0x58
0000000000002993         lea        rdx, qword [rsp+0x88+var_58]
0000000000002998         lea        rsi, qword [rsp+0x88+var_60]
000000000000299d         mov        rax, qword [fs:0x28]
00000000000029a6         mov        qword [rsp+0x88+var_40], rax
00000000000029ab         xor        eax, eax
00000000000029ad         call       read_utmp                                   ; read_utmp
00000000000029b2         test       eax, eax
00000000000029b4         jne        loc_3116

00000000000029ba         cmp        byte [short_list], 0x0                      ; short_list
00000000000029c1         mov        r15, qword [rsp+0x88+var_58]
00000000000029c6         mov        r13, qword [rsp+0x88+var_60]
00000000000029cb         jne        loc_2b2e

00000000000029d1         cmp        byte [include_heading], 0x0                 ; include_heading
00000000000029d8         jne        loc_2d05

                     loc_29de:
00000000000029de         cmp        byte [my_line_only], 0x0                    ; my_line_only, CODE XREF=who+1101
00000000000029e5         jne        loc_2ccd

                     loc_29eb:
00000000000029eb         movabs     rax, 0x8000000000000000                     ; CODE XREF=who+886, who+896
00000000000029f5         test       r13, r13
00000000000029f8         lea        r12, qword [r13-1]
00000000000029fc         mov        qword [rsp+0x88+var_88], rax
0000000000002a00         je         loc_2b01

0000000000002a06         lea        rax, qword [rsp+0x88+var_4C]
0000000000002a0b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002a12         mov        r14, r12
0000000000002a15         mov        r12, r15
0000000000002a18         mov        qword [rsp+0x88+var_80], rax
0000000000002a1d         nop        dword [rax]

                     loc_2a20:
0000000000002a20         cmp        byte [my_line_only], 0x0                    ; my_line_only, CODE XREF=who+379
0000000000002a27         je         loc_2a43

0000000000002a29         lea        rsi, qword [r12+8]                          ; argument "__s2" for method j_strncmp
0000000000002a2e         mov        edx, 0x20                                   ; argument "__n" for method j_strncmp
0000000000002a33         mov        rdi, rbp                                    ; argument "__s1" for method j_strncmp
0000000000002a36         call       j_strncmp                                   ; strncmp
0000000000002a3b         test       eax, eax
0000000000002a3d         jne        loc_2ad8

                     loc_2a43:
0000000000002a43         cmp        byte [need_users], 0x0                      ; need_users, CODE XREF=who+167
0000000000002a4a         movzx      eax, word [r12]
0000000000002a4f         je         loc_2a63

0000000000002a51         cmp        byte [r12+0x2c], 0x0
0000000000002a57         je         loc_2a63

0000000000002a59         cmp        ax, 0x7
0000000000002a5d         je         loc_3020

                     loc_2a63:
0000000000002a63         cmp        byte [need_runlevel], 0x0                   ; need_runlevel, CODE XREF=who+207, who+215
0000000000002a6a         je         loc_2a76

0000000000002a6c         cmp        ax, 0x1
0000000000002a70         je         loc_2bce

                     loc_2a76:
0000000000002a76         cmp        byte [need_boottime], 0x0                   ; need_boottime, CODE XREF=who+234
0000000000002a7d         je         loc_2a89

0000000000002a7f         cmp        ax, 0x2
0000000000002a83         je         loc_2dd2

                     loc_2a89:
0000000000002a89         cmp        byte [need_clockchange], 0x0                ; need_clockchange, CODE XREF=who+253
0000000000002a90         je         loc_2a9c

0000000000002a92         cmp        ax, 0x3
0000000000002a96         je         loc_2e1e

                     loc_2a9c:
0000000000002a9c         cmp        byte [need_initspawn], 0x0                  ; need_initspawn, CODE XREF=who+272
0000000000002aa3         je         loc_2aaf

0000000000002aa5         cmp        ax, 0x5
0000000000002aa9         je         loc_2e3c

                     loc_2aaf:
0000000000002aaf         cmp        byte [need_login], 0x0                      ; need_login, CODE XREF=who+291
0000000000002ab6         je         loc_2ac2

0000000000002ab8         cmp        ax, 0x6
0000000000002abc         je         loc_2eb1

                     loc_2ac2:
0000000000002ac2         cmp        byte [need_deadprocs], 0x0                  ; need_deadprocs, CODE XREF=who+310
0000000000002ac9         je         loc_2ad8

0000000000002acb         cmp        ax, 0x8
0000000000002acf         je         loc_2f23

0000000000002ad5         nop        dword [rax]

                     loc_2ad8:
0000000000002ad8         cmp        word [r12], 0x2                             ; CODE XREF=who+189, who+329, who+840, who+1177, who+1324, who+1691, who+1708
0000000000002ade         jne        loc_2aec

0000000000002ae0         movsxd     rax, dword [r12+0x154]
0000000000002ae8         mov        qword [rsp+0x88+var_88], rax

                     loc_2aec:
0000000000002aec         sub        r14, 0x1                                    ; CODE XREF=who+350
0000000000002af0         add        r12, 0x180
0000000000002af7         cmp        r14, 0xffffffffffffffff
0000000000002afb         jne        loc_2a20

                     loc_2b01:
0000000000002b01         mov        rdi, qword [rsp+0x88+var_58]                ; argument "__ptr" for method j_free, CODE XREF=who+128, who+532, who+858
0000000000002b06         call       j_free                                      ; free
0000000000002b0b         mov        rax, qword [rsp+0x88+var_40]
0000000000002b10         xor        rax, qword [fs:0x28]
0000000000002b19         jne        loc_3145

0000000000002b1f         add        rsp, 0x58
0000000000002b23         pop        rbx
0000000000002b24         pop        rbp
0000000000002b25         pop        r12
0000000000002b27         pop        r13
0000000000002b29         pop        r14
0000000000002b2b         pop        r15
0000000000002b2d         ret
                        ; endp

                     loc_2b2e:
0000000000002b2e         xor        ebp, ebp                                    ; CODE XREF=who+75
0000000000002b30         test       r13, r13
0000000000002b33         lea        rbx, qword [r13-1]
0000000000002b37         je         loc_2b6f

0000000000002b39         lea        r12, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002b40         lea        r14, qword [asc+4]                          ; 0x8484
0000000000002b47         nop        word [rax+rax]

                     loc_2b50:
0000000000002b50         cmp        byte [r15+0x2c], 0x0                        ; CODE XREF=who+493
0000000000002b55         je         loc_2b5e

0000000000002b57         cmp        word [r15], 0x7
0000000000002b5c         je         loc_2b99

                     loc_2b5e:
0000000000002b5e         sub        rbx, 0x1                                    ; CODE XREF=who+469, who+588
0000000000002b62         add        r15, 0x180
0000000000002b69         cmp        rbx, 0xffffffffffffffff
0000000000002b6d         jne        loc_2b50

                     loc_2b6f:
0000000000002b6f         lea        rsi, qword [aNUserslun]                     ; argument "msgid" for method j_dcgettext, "\\n# users=%lu\\n", CODE XREF=who+439
0000000000002b76         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b78         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b7d         call       j_dcgettext                                 ; dcgettext
0000000000002b82         mov        rdx, rbp
0000000000002b85         mov        rsi, rax
0000000000002b88         mov        edi, 0x1
0000000000002b8d         xor        eax, eax
0000000000002b8f         call       j___printf_chk                              ; __printf_chk
0000000000002b94         jmp        loc_2b01

                     loc_2b99:
0000000000002b99         mov        rdi, r15                                    ; CODE XREF=who+476
0000000000002b9c         add        rbp, 0x1
0000000000002ba0         call       extract_trimmed_name                        ; extract_trimmed_name
0000000000002ba5         lea        rsi, qword [aSs+13]                         ; 0x84e6
0000000000002bac         mov        rcx, rax
0000000000002baf         mov        rdx, r12
0000000000002bb2         mov        r13, rax
0000000000002bb5         mov        edi, 0x1
0000000000002bba         xor        eax, eax
0000000000002bbc         call       j___printf_chk                              ; __printf_chk
0000000000002bc1         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000002bc4         mov        r12, r14
0000000000002bc7         call       j_free                                      ; free
0000000000002bcc         jmp        loc_2b5e

                     loc_2bce:
0000000000002bce         mov        eax, dword [r12+4]                          ; CODE XREF=who+240
0000000000002bd3         mov        ecx, 0x100
0000000000002bd8         cdq
0000000000002bd9         idiv       ecx
0000000000002bdb         cmp        qword [runlevline.7780], 0x0                ; runlevline.7780
0000000000002be3         mov        r15d, edx
0000000000002be6         mov        r13d, eax
0000000000002be9         je         loc_3031

                     loc_2bef:
0000000000002bef         lea        rsi, qword [aRunlevel]                      ; argument "msgid" for method j_dcgettext, "run-level", CODE XREF=who+1765
0000000000002bf6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bf8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bfd         call       j_dcgettext                                 ; dcgettext
0000000000002c02         mov        rdi, qword [runlevline.7780]                ; runlevline.7780
0000000000002c09         lea        rcx, qword [aSC]                            ; "%s %c"
0000000000002c10         mov        r8, rax
0000000000002c13         or         rdx, 0xffffffffffffffff
0000000000002c17         xor        eax, eax
0000000000002c19         movzx      r9d, r15b
0000000000002c1d         mov        esi, 0x1
0000000000002c22         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002c27         cmp        qword [comment.7781], 0x0                   ; comment.7781
0000000000002c2f         je         loc_306a

                     loc_2c35:
0000000000002c35         cmp        r13b, 0x4e                                  ; CODE XREF=who+1818
0000000000002c39         movzx      r15d, r13b
0000000000002c3d         lea        rsi, qword [aLast]                          ; argument "msgid" for method j_dcgettext, "last="
0000000000002c44         mov        r13d, 0x53
0000000000002c4a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c4f         cmovne     r13d, r15d
0000000000002c53         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c55         sub        r15d, 0x20
0000000000002c59         call       j_dcgettext                                 ; dcgettext
0000000000002c5e         mov        rdi, qword [comment.7781]                   ; comment.7781
0000000000002c65         lea        rcx, qword [aLast+6]                        ; 0x853a
0000000000002c6c         mov        r8, rax
0000000000002c6f         mov        r9d, r13d
0000000000002c72         or         rdx, 0xffffffffffffffff
0000000000002c76         xor        eax, eax
0000000000002c78         mov        esi, 0x1
0000000000002c7d         lea        r13, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002c84         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002c89         cmp        r15d, 0x5e
0000000000002c8d         ja         loc_2c96

0000000000002c8f         mov        r13, qword [comment.7781]                   ; comment.7781

                     loc_2c96:
0000000000002c96         mov        edi, dword [r12+0x154]                      ; CODE XREF=who+781
0000000000002c9e         call       time_string.isra.1                          ; time_string.isra.1
0000000000002ca3         mov        r8, qword [runlevline.7780]                 ; runlevline.7780
0000000000002caa         push       rbx
0000000000002cab         or         ecx, 0xffffffff
0000000000002cae         push       r13
0000000000002cb0         push       rbx
0000000000002cb1         mov        r9, rax
0000000000002cb4         push       rbx
0000000000002cb5         mov        edx, 0x20
0000000000002cba         mov        rsi, rbx
0000000000002cbd         mov        edi, ecx
0000000000002cbf         call       print_line                                  ; print_line
0000000000002cc4         add        rsp, 0x20
0000000000002cc8         jmp        loc_2ad8

                     loc_2ccd:
0000000000002ccd         xor        edi, edi                                    ; argument "__fd" for method j_ttyname, CODE XREF=who+101
0000000000002ccf         call       j_ttyname                                   ; ttyname
0000000000002cd4         test       rax, rax
0000000000002cd7         mov        rbp, rax
0000000000002cda         je         loc_2b01

0000000000002ce0         lea        rsi, qword [aDev]                           ; argument "__s2" for method j_strncmp, "/dev/"
0000000000002ce7         mov        edx, 0x5                                    ; argument "__n" for method j_strncmp
0000000000002cec         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002cef         call       j_strncmp                                   ; strncmp
0000000000002cf4         test       eax, eax
0000000000002cf6         jne        loc_29eb

0000000000002cfc         add        rbp, 0x5
0000000000002d00         jmp        loc_29eb

                     loc_2d05:
0000000000002d05         lea        rsi, qword [aNUserslun+14]                  ; argument "msgid" for method j_dcgettext, 0x84f9, CODE XREF=who+88
0000000000002d0c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d11         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d13         call       j_dcgettext                                 ; dcgettext
0000000000002d18         lea        rsi, qword [aComment]                       ; argument "msgid" for method j_dcgettext, "COMMENT"
0000000000002d1f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d24         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d26         mov        qword [rsp+0x88+var_78], rax
0000000000002d2b         call       j_dcgettext                                 ; dcgettext
0000000000002d30         lea        rsi, qword [aComment+8]                     ; argument "msgid" for method j_dcgettext, 0x8506
0000000000002d37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d3c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d3e         mov        r12, rax
0000000000002d41         call       j_dcgettext                                 ; dcgettext
0000000000002d46         lea        rsi, qword [aComment+12]                    ; argument "msgid" for method j_dcgettext, 0x850a
0000000000002d4d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d54         mov        rbx, rax
0000000000002d57         call       j_dcgettext                                 ; dcgettext
0000000000002d5c         lea        rsi, qword [aComment+17]                    ; argument "msgid" for method j_dcgettext, 0x850f
0000000000002d63         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d68         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d6a         mov        r14, rax
0000000000002d6d         call       j_dcgettext                                 ; dcgettext
0000000000002d72         lea        rsi, qword [aComment+22]                    ; argument "msgid" for method j_dcgettext, 0x8514
0000000000002d79         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d7e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d80         mov        qword [rsp+0x88+var_80], rax
0000000000002d85         call       j_dcgettext                                 ; dcgettext
0000000000002d8a         lea        rsi, qword [aComment+27]                    ; argument "msgid" for method j_dcgettext, 0x8519
0000000000002d91         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d96         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d98         mov        qword [rsp+0x88+var_88], rax
0000000000002d9c         call       j_dcgettext                                 ; dcgettext
0000000000002da1         mov        r8, qword [rsp+0x88+var_78]
0000000000002da6         or         ecx, 0xffffffff
0000000000002da9         mov        edx, 0x20
0000000000002dae         mov        rsi, rax
0000000000002db1         mov        edi, ecx
0000000000002db3         push       r8
0000000000002db5         push       r12
0000000000002db7         push       rbx
0000000000002db8         push       r14
0000000000002dba         mov        r9, qword [rsp+0xa8+var_80]
0000000000002dbf         mov        r8, qword [rsp+0xa8+var_88]
0000000000002dc4         call       print_line                                  ; print_line
0000000000002dc9         add        rsp, 0x20
0000000000002dcd         jmp        loc_29de

                     loc_2dd2:
0000000000002dd2         mov        edi, dword [r12+0x154]                      ; CODE XREF=who+259
0000000000002dda         call       time_string.isra.1                          ; time_string.isra.1
0000000000002ddf         lea        rsi, qword [aSystemBoot]                    ; "system boot"
0000000000002de6         mov        r13, rax
0000000000002de9         mov        edx, 0x5

                     loc_2dee:
0000000000002dee         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=who+1210
0000000000002df0         call       j_dcgettext                                 ; dcgettext
0000000000002df5         push       rbx
0000000000002df6         or         ecx, 0xffffffff
0000000000002df9         push       rbx
0000000000002dfa         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002e01         push       rbx
0000000000002e02         push       rbx
0000000000002e03         mov        r8, rax
0000000000002e06         mov        r9, r13
0000000000002e09         mov        edx, 0x20
0000000000002e0e         mov        edi, ecx
0000000000002e10         call       print_line                                  ; print_line
0000000000002e15         add        rsp, 0x20
0000000000002e19         jmp        loc_2ad8

                     loc_2e1e:
0000000000002e1e         mov        edi, dword [r12+0x154]                      ; CODE XREF=who+278
0000000000002e26         call       time_string.isra.1                          ; time_string.isra.1
0000000000002e2b         mov        edx, 0x5
0000000000002e30         mov        r13, rax
0000000000002e33         lea        rsi, qword [aClockChange]                   ; "clock change"
0000000000002e3a         jmp        loc_2dee

                     loc_2e3c:
0000000000002e3c         mov        rdi, r12                                    ; CODE XREF=who+297
0000000000002e3f         call       make_id_equals_comment                      ; make_id_equals_comment
0000000000002e44         mov        r15, qword [rsp+0x88+var_80]
0000000000002e49         movsxd     r8, dword [r12+4]
0000000000002e4e         lea        rcx, qword [asc+6]                          ; 0x8486
0000000000002e55         mov        edx, 0xc
0000000000002e5a         mov        esi, 0x1
0000000000002e5f         mov        r13, rax
0000000000002e62         xor        eax, eax
0000000000002e64         mov        rdi, r15
0000000000002e67         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002e6c         mov        edi, dword [r12+0x154]
0000000000002e74         call       time_string.isra.1                          ; time_string.isra.1
0000000000002e79         push       rbx
0000000000002e7a         lea        r8, qword [r12+8]
0000000000002e7f         push       r13
0000000000002e81         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002e88         push       r15
0000000000002e8a         push       rbx
0000000000002e8b         mov        r9, rax
0000000000002e8e         mov        ecx, 0x20
0000000000002e93         mov        edx, 0x20

                     loc_2e98:
0000000000002e98         or         edi, 0xffffffff                             ; CODE XREF=who+1438
0000000000002e9b         call       print_line                                  ; print_line
0000000000002ea0         add        rsp, 0x20
0000000000002ea4         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000002ea7         call       j_free                                      ; free
0000000000002eac         jmp        loc_2ad8

                     loc_2eb1:
0000000000002eb1         mov        rdi, r12                                    ; CODE XREF=who+316
0000000000002eb4         call       make_id_equals_comment                      ; make_id_equals_comment
0000000000002eb9         movsxd     r8, dword [r12+4]
0000000000002ebe         mov        rdi, qword [rsp+0x88+var_80]
0000000000002ec3         lea        rcx, qword [asc+6]                          ; 0x8486
0000000000002eca         mov        edx, 0xc
0000000000002ecf         mov        esi, 0x1
0000000000002ed4         mov        r13, rax
0000000000002ed7         xor        eax, eax
0000000000002ed9         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002ede         mov        edi, dword [r12+0x154]
0000000000002ee6         call       time_string.isra.1                          ; time_string.isra.1
0000000000002eeb         lea        rsi, qword [aLogin]                         ; argument "msgid" for method j_dcgettext, "LOGIN"
0000000000002ef2         mov        r15, rax
0000000000002ef5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002efa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002efc         call       j_dcgettext                                 ; dcgettext
0000000000002f01         push       rbx
0000000000002f02         mov        r9, r15
0000000000002f05         push       r13
0000000000002f07         lea        r8, qword [r12+8]
0000000000002f0c         push       qword [rsp+0x98+var_80]
0000000000002f10         mov        ecx, 0x20
0000000000002f15         push       rbx
0000000000002f16         mov        edx, 0x20
0000000000002f1b         mov        rsi, rax
0000000000002f1e         jmp        loc_2e98

                     loc_2f23:
0000000000002f23         mov        rdi, r12                                    ; CODE XREF=who+335
0000000000002f26         call       make_id_equals_comment                      ; make_id_equals_comment
0000000000002f2b         movsxd     r8, dword [r12+4]
0000000000002f30         mov        rdi, qword [rsp+0x88+var_80]
0000000000002f35         lea        rcx, qword [asc+6]                          ; 0x8486
0000000000002f3c         mov        r13, rax
0000000000002f3f         mov        edx, 0xc
0000000000002f44         xor        eax, eax
0000000000002f46         mov        esi, 0x1
0000000000002f4b         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002f50         cmp        qword [exitstr.7761], 0x0                   ; exitstr.7761
0000000000002f58         je         loc_309f

                     loc_2f5e:
0000000000002f5e         movsx      r9d, word [r12+0x14e]                       ; CODE XREF=who+1937
0000000000002f67         lea        rsi, qword [aExit]                          ; argument "msgid" for method j_dcgettext, "exit="
0000000000002f6e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f70         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f75         mov        dword [rsp+0x88+var_70], r9d
0000000000002f7a         call       j_dcgettext                                 ; dcgettext
0000000000002f7f         mov        r15, rax
0000000000002f82         movsx      eax, word [r12+0x14c]
0000000000002f8b         lea        rsi, qword [aTerm]                          ; argument "msgid" for method j_dcgettext, "term="
0000000000002f92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f94         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f99         mov        dword [rsp+0x88+var_78], eax
0000000000002f9d         call       j_dcgettext                                 ; dcgettext
0000000000002fa2         mov        r9d, dword [rsp+0x88+var_70]
0000000000002fa7         mov        rdi, qword [exitstr.7761]                   ; exitstr.7761
0000000000002fae         lea        rcx, qword [aSdSd]                          ; "%s%d %s%d"
0000000000002fb5         mov        r8, rax
0000000000002fb8         or         rdx, 0xffffffffffffffff
0000000000002fbc         mov        esi, 0x1
0000000000002fc1         xor        eax, eax
0000000000002fc3         push       r9
0000000000002fc5         push       r15
0000000000002fc7         mov        r9d, dword [rsp+0x98+var_78]
0000000000002fcc         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002fd1         mov        r15, qword [exitstr.7761]                   ; exitstr.7761
0000000000002fd8         mov        edi, dword [r12+0x154]
0000000000002fe0         call       time_string.isra.1                          ; time_string.isra.1
0000000000002fe5         push       r15
0000000000002fe7         lea        r8, qword [r12+8]
0000000000002fec         push       r13
0000000000002fee         lea        rsi, qword [aWrittenBySSAnd+27]             ; 0x9261
0000000000002ff5         push       qword [rsp+0xa8+var_80]
0000000000002ff9         push       rbx
0000000000002ffa         or         edi, 0xffffffff
0000000000002ffd         mov        r9, rax
0000000000003000         mov        ecx, 0x20
0000000000003005         mov        edx, 0x20
000000000000300a         call       print_line                                  ; print_line
000000000000300f         add        rsp, 0x30
0000000000003013         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003016         call       j_free                                      ; free
000000000000301b         jmp        loc_2ad8

                     loc_3020:
0000000000003020         mov        rsi, qword [rsp+0x88+var_88]                ; CODE XREF=who+221
0000000000003024         mov        rdi, r12
0000000000003027         call       print_user                                  ; print_user
000000000000302c         jmp        loc_2ad8

                     loc_3031:
0000000000003031         lea        rsi, qword [aRunlevel]                      ; argument "msgid" for method j_dcgettext, "run-level", CODE XREF=who+617
0000000000003038         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000303d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000303f         call       j_dcgettext                                 ; dcgettext
0000000000003044         or         rcx, 0xffffffffffffffff
0000000000003048         mov        rdi, rax
000000000000304b         xor        eax, eax
000000000000304d         repne scasb al, byte [rdi]
000000000000304f         mov        rax, rcx
0000000000003052         not        rax
0000000000003055         lea        rdi, qword [rax+2]
0000000000003059         call       xmalloc                                     ; xmalloc
000000000000305e         mov        qword [runlevline.7780], rax                ; runlevline.7780
0000000000003065         jmp        loc_2bef

                     loc_306a:
000000000000306a         lea        rsi, qword [aLast]                          ; argument "msgid" for method j_dcgettext, "last=", CODE XREF=who+687
0000000000003071         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003076         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003078         call       j_dcgettext                                 ; dcgettext
000000000000307d         or         rcx, 0xffffffffffffffff
0000000000003081         mov        rdi, rax
0000000000003084         xor        eax, eax
0000000000003086         repne scasb al, byte [rdi]
0000000000003088         neg        rcx
000000000000308b         mov        rdi, rcx
000000000000308e         call       xmalloc                                     ; xmalloc
0000000000003093         mov        qword [comment.7781], rax                   ; comment.7781
000000000000309a         jmp        loc_2c35

                     loc_309f:
000000000000309f         lea        rsi, qword [aTerm]                          ; argument "msgid" for method j_dcgettext, "term=", CODE XREF=who+1496
00000000000030a6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030ad         xor        r15d, r15d
00000000000030b0         call       j_dcgettext                                 ; dcgettext
00000000000030b5         or         r8, 0xffffffffffffffff
00000000000030b9         mov        rdi, rax
00000000000030bc         mov        eax, r15d
00000000000030bf         mov        rcx, r8
00000000000030c2         mov        qword [rsp+0x88+var_70], r8
00000000000030c7         lea        rsi, qword [aExit]                          ; argument "msgid" for method j_dcgettext, "exit="
00000000000030ce         repne scasb al, byte [rdi]
00000000000030d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030d7         not        rcx
00000000000030da         lea        rax, qword [rcx+r8]
00000000000030de         mov        qword [rsp+0x88+var_78], rax
00000000000030e3         call       j_dcgettext                                 ; dcgettext
00000000000030e8         mov        r8, qword [rsp+0x88+var_70]
00000000000030ed         mov        rdi, rax
00000000000030f0         mov        eax, r15d
00000000000030f3         mov        rcx, r8
00000000000030f6         repne scasb al, byte [rdi]
00000000000030f8         mov        rax, qword [rsp+0x88+var_78]
00000000000030fd         not        rcx
0000000000003100         lea        rdi, qword [rax+rcx+0xd]
0000000000003105         call       xmalloc                                     ; xmalloc
000000000000310a         mov        qword [exitstr.7761], rax                   ; exitstr.7761
0000000000003111         jmp        loc_2f5e

                     loc_3116:
0000000000003116         mov        rdx, rbx                                    ; CODE XREF=who+52
0000000000003119         mov        esi, 0x3
000000000000311e         xor        edi, edi
0000000000003120         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003125         mov        rbx, rax
0000000000003128         call       j___errno_location                          ; __errno_location
000000000000312d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000312f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8ce1
0000000000003136         mov        rcx, rbx
0000000000003139         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000313e         xor        eax, eax
0000000000003140         call       j_error                                     ; error

                     loc_3145:
0000000000003145         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=who+409
                        ; endp
000000000000314a         align      16                                          ; End of unwind block (FDE at 0x9c20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000003150         push       r13                                         ; Begin of unwind block (FDE at 0x9cf4), CODE XREF=main+324, main+819
0000000000003152         push       r12
0000000000003154         mov        edx, 0x5
0000000000003159         push       rbp
000000000000315a         push       rbx
000000000000315b         mov        ebp, edi
000000000000315d         sub        rsp, 0x88
0000000000003164         mov        rbx, qword [program_name]                   ; program_name
000000000000316b         mov        rax, qword [fs:0x28]
0000000000003174         mov        qword [rsp+0xa8+var_30], rax
0000000000003179         xor        eax, eax
000000000000317b         test       edi, edi
000000000000317d         je         loc_31ad

000000000000317f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000003186         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003188         call       j_dcgettext                                 ; dcgettext
000000000000318d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003194         mov        rdx, rax
0000000000003197         mov        rcx, rbx
000000000000319a         mov        esi, 0x1
000000000000319f         xor        eax, eax
00000000000031a1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_31a6:
00000000000031a6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+870
00000000000031a8         call       j_exit                                      ; exit
                        ; endp

                     loc_31ad:
00000000000031ad         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\\n", CODE XREF=usage+45
00000000000031b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031b6         call       j_dcgettext                                 ; dcgettext
00000000000031bb         mov        rdx, rbx
00000000000031be         mov        rsi, rax
00000000000031c1         mov        edi, 0x1
00000000000031c6         xor        eax, eax
00000000000031c8         call       j___printf_chk                              ; __printf_chk
00000000000031cd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000031d4         lea        rsi, qword [aPrintInformati]                ; argument "msgid" for method j_dcgettext, "Print information about users who are currently logged in.\\n"
00000000000031db         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031e0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031e2         call       j_dcgettext                                 ; dcgettext
00000000000031e7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000031ea         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000031ed         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000031f2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000031f9         lea        rsi, qword [aNAAllSameAsBDL]                ; argument "msgid" for method j_dcgettext, "\\n  -a, --all         same as -b -d --login -p -r -t -T -u\\n  -b, --boot        time of last system boot\\n  -d, --dead        print dead processes\\n  -H, --heading     print line of column headings\\n"
0000000000003200         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003205         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003207         call       j_dcgettext                                 ; dcgettext
000000000000320c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000320f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003212         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003217         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000321e         lea        rsi, qword [aLLoginPrintSys]                ; argument "msgid" for method j_dcgettext, "  -l, --login       print system login processes\\n"
0000000000003225         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000322a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000322c         call       j_dcgettext                                 ; dcgettext
0000000000003231         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003234         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003237         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000323c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003243         lea        rsi, qword [aLookupAttemptT]                ; argument "msgid" for method j_dcgettext, "      --lookup      attempt to canonicalize hostnames via DNS\\n  -m                only hostname and user associated with stdin\\n  -p, --process     print active processes spawned by init\\n"
000000000000324a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000324f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003251         call       j_dcgettext                                 ; dcgettext
0000000000003256         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003259         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000325c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003261         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003268         lea        rsi, qword [aQCountAllLogin]                ; argument "msgid" for method j_dcgettext, "  -q, --count       all login names and number of users logged on\\n  -r, --runlevel    print current runlevel\\n  -s, --short       print only name, line, and time (default)\\n  -t, --time        print last system clock change\\n"
000000000000326f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003274         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003276         call       j_dcgettext                                 ; dcgettext
000000000000327b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000327e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003281         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003286         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000328d         lea        rsi, qword [aTWMesgAddUsers]                ; argument "msgid" for method j_dcgettext, "  -T, -w, --mesg    add user's message status as +, - or ?\\n  -u, --users       list users logged in\\n      --message     same as -T\\n      --writable    same as -T\\n"
0000000000003294         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003299         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000329b         call       j_dcgettext                                 ; dcgettext
00000000000032a0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000032a3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000032a6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000032ab         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000032b2         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000032b9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032c0         call       j_dcgettext                                 ; dcgettext
00000000000032c5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000032c8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000032cb         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000032d0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000032d7         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000032de         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032e3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032e5         call       j_dcgettext                                 ; dcgettext
00000000000032ea         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000032ed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000032f0         lea        rbx, qword [aSdSd+10]                       ; 0x8574
00000000000032f7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000032fc         lea        rsi, qword [aNifFileIsNotSp]                ; argument "msgid" for method j_dcgettext, "\\nIf FILE is not specified, use %s.  %s as FILE is common.\\nIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\\n"
0000000000003303         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003308         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000330a         call       j_dcgettext                                 ; dcgettext
000000000000330f         lea        rcx, qword [aVarlogwtmp]                    ; "/var/log/wtmp"
0000000000003316         lea        rdx, qword [aVarrunutmp]                    ; "/var/run/utmp"
000000000000331d         mov        rsi, rax
0000000000003320         mov        edi, 0x1
0000000000003325         xor        eax, eax
0000000000003327         call       j___printf_chk                              ; __printf_chk
000000000000332c         lea        rax, qword [aVarrunutmp+14]                 ; 0x8594
0000000000003333         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000333a         mov        qword [rsp+0xa8+var_48], 0x0
0000000000003343         mov        qword [rsp+0xa8+var_40], 0x0
000000000000334c         mov        rdx, rsp
000000000000334f         mov        qword [rsp+0xa8+var_A8], rax
0000000000003353         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000335a         mov        qword [rsp+0xa8+var_78], rcx
000000000000335f         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000003366         mov        qword [rsp+0xa8+var_A0], rax
000000000000336b         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000003372         mov        qword [rsp+0xa8+var_68], rcx
0000000000003377         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000337e         mov        qword [rsp+0xa8+var_98], rax
0000000000003383         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000338a         mov        qword [rsp+0xa8+var_58], rcx
000000000000338f         mov        qword [rsp+0xa8+var_90], rax
0000000000003394         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000339b         mov        qword [rsp+0xa8+var_88], rax
00000000000033a0         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000033a7         mov        qword [rsp+0xa8+var_80], rax
00000000000033ac         mov        qword [rsp+0xa8+var_70], rax
00000000000033b1         mov        qword [rsp+0xa8+var_60], rax
00000000000033b6         mov        qword [rsp+0xa8+var_50], rax
00000000000033bb         nop        dword [rax+rax]

                     loc_33c0:
00000000000033c0         add        rdx, 0x10                                   ; CODE XREF=usage+653
00000000000033c4         mov        rdi, qword [rdx]
00000000000033c7         test       rdi, rdi
00000000000033ca         je         loc_33df

00000000000033cc         mov        ecx, 0x4
00000000000033d1         mov        rsi, rbx
00000000000033d4         rep  cmpsb byte [rsi], byte [rdi]
00000000000033d6         seta       al
00000000000033d9         sbb        al, 0x0
00000000000033db         test       al, al
00000000000033dd         jne        loc_33c0

                     loc_33df:
00000000000033df         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+634
00000000000033e3         xor        edi, edi
00000000000033e5         mov        edx, 0x5
00000000000033ea         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000033f1         test       r12, r12
00000000000033f4         je         loc_34bb

00000000000033fa         call       j_dcgettext                                 ; dcgettext
00000000000033ff         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003406         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x860a
000000000000340d         mov        rsi, rax
0000000000003410         mov        edi, 0x1
0000000000003415         xor        eax, eax
0000000000003417         call       j___printf_chk                              ; __printf_chk
000000000000341c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000341e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003423         call       j_setlocale                                 ; setlocale
0000000000003428         test       rax, rax
000000000000342b         je         loc_3449

000000000000342d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x8618
0000000000003434         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003439         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000343c         call       j_strncmp                                   ; strncmp
0000000000003441         test       eax, eax
0000000000003443         jne        loc_3550

                     loc_3449:
0000000000003449         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+731, usage+1061
0000000000003450         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003452         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003457         call       j_dcgettext                                 ; dcgettext
000000000000345c         lea        rcx, qword [aSdSd+10]                       ; 0x8574
0000000000003463         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000346a         mov        rsi, rax
000000000000346d         mov        edi, 0x1
0000000000003472         xor        eax, eax
0000000000003474         call       j___printf_chk                              ; __printf_chk
0000000000003479         cmp        r12, rbx
000000000000347c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x85b0
0000000000003483         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x9261
000000000000348a         cmove      rbx, rcx

                     loc_348e:
000000000000348e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1012
0000000000003495         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003497         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000349c         call       j_dcgettext                                 ; dcgettext
00000000000034a1         mov        rcx, rbx
00000000000034a4         mov        rsi, rax
00000000000034a7         mov        rdx, r12
00000000000034aa         mov        edi, 0x1
00000000000034af         xor        eax, eax
00000000000034b1         call       j___printf_chk                              ; __printf_chk
00000000000034b6         jmp        loc_31a6

                     loc_34bb:
00000000000034bb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+676
00000000000034c0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000034c7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x860a
00000000000034ce         mov        rsi, rax
00000000000034d1         mov        edi, 0x1
00000000000034d6         xor        eax, eax
00000000000034d8         call       j___printf_chk                              ; __printf_chk
00000000000034dd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000034df         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000034e4         call       j_setlocale                                 ; setlocale
00000000000034e9         test       rax, rax
00000000000034ec         je         loc_3506

00000000000034ee         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x8618
00000000000034f5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000034fa         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000034fd         call       j_strncmp                                   ; strncmp
0000000000003502         test       eax, eax
0000000000003504         jne        loc_3549

                     loc_3506:
0000000000003506         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+924
000000000000350d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003512         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003514         lea        r12, qword [aSdSd+10]                       ; 0x8574
000000000000351b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x85b0
0000000000003522         call       j_dcgettext                                 ; dcgettext
0000000000003527         lea        rcx, qword [aSdSd+10]                       ; 0x8574
000000000000352e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003535         mov        rsi, rax
0000000000003538         mov        edi, 0x1
000000000000353d         xor        eax, eax
000000000000353f         call       j___printf_chk                              ; __printf_chk
0000000000003544         jmp        loc_348e

                     loc_3549:
0000000000003549         lea        r12, qword [aSdSd+10]                       ; 0x8574, CODE XREF=usage+948

                     loc_3550:
0000000000003550         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+755
0000000000003557         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000355e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003560         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003565         call       j_dcgettext                                 ; dcgettext
000000000000356a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000356d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003570         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003575         jmp        loc_3449
000000000000357a         align      128                                         ; End of unwind block (FDE at 0x9cf4)

                     canon_host_r:
0000000000003580         push       r12                                         ; Begin of unwind block (FDE at 0x9d5c), CODE XREF=canon_host+7
0000000000003582         push       rbp
0000000000003583         lea        rdx, qword [hints.3317]                     ; argument "__req" for method j_getaddrinfo, hints.3317
000000000000358a         push       rbx
000000000000358b         mov        rbx, rsi
000000000000358e         xor        esi, esi                                    ; argument "__service" for method j_getaddrinfo
0000000000003590         mov        rbp, rdi
0000000000003593         sub        rsp, 0x10
0000000000003597         mov        dword [hints.3317], 0x2                     ; hints.3317
00000000000035a1         mov        rcx, rsp                                    ; argument "__pai" for method j_getaddrinfo
00000000000035a4         mov        qword [rsp+0x28+var_28], 0x0
00000000000035ac         mov        rax, qword [fs:0x28]
00000000000035b5         mov        qword [rsp+0x28+var_20], rax
00000000000035ba         xor        eax, eax
00000000000035bc         call       j_getaddrinfo                               ; getaddrinfo
00000000000035c1         test       eax, eax
00000000000035c3         jne        loc_3618

00000000000035c5         mov        r12, qword [rsp+0x28+var_28]
00000000000035c9         mov        rdi, qword [r12+0x20]
00000000000035ce         test       rdi, rdi
00000000000035d1         cmove      rdi, rbp                                    ; argument "__s" for method j_strdup
00000000000035d5         call       j_strdup                                    ; strdup
00000000000035da         test       rax, rax
00000000000035dd         mov        rbp, rax
00000000000035e0         jne        loc_35ed

00000000000035e2         test       rbx, rbx
00000000000035e5         je         loc_35ed

00000000000035e7         mov        dword [rbx], 0xfffffff6

                     loc_35ed:
00000000000035ed         mov        rdi, r12                                    ; argument "__ai" for method j_freeaddrinfo, CODE XREF=canon_host_r+96, canon_host_r+101
00000000000035f0         call       j_freeaddrinfo                              ; freeaddrinfo

                     loc_35f5:
00000000000035f5         mov        rdx, qword [rsp+0x28+var_20]                ; CODE XREF=canon_host_r+157, canon_host_r+161
00000000000035fa         xor        rdx, qword [fs:0x28]
0000000000003603         mov        rax, rbp
0000000000003606         jne        loc_3623

0000000000003608         add        rsp, 0x10
000000000000360c         pop        rbx
000000000000360d         pop        rbp
000000000000360e         pop        r12
0000000000003610         ret
                        ; endp
0000000000003611         align      8

                     loc_3618:
0000000000003618         xor        ebp, ebp                                    ; CODE XREF=canon_host_r+67
000000000000361a         test       rbx, rbx
000000000000361d         je         loc_35f5

000000000000361f         mov        dword [rbx], eax
0000000000003621         jmp        loc_35f5

                     loc_3623:
0000000000003623         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=canon_host_r+134
                        ; endp
0000000000003628         align      16                                          ; End of unwind block (FDE at 0x9d5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     canon_host:
0000000000003630         lea        rsi, qword [last_cherror]                   ; Begin of unwind block (FDE at 0x9d90), last_cherror, CODE XREF=print_user+880, print_user+1338
0000000000003637         jmp        canon_host_r                                ; canon_host_r
000000000000363c         align      64                                          ; End of unwind block (FDE at 0x9d90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     ch_strerror:
0000000000003640         mov        edi, dword [last_cherror]                   ; Begin of unwind block (FDE at 0x9da4), argument "__ecode" for method j_gai_strerror, last_cherror
0000000000003646         jmp        j_gai_strerror                              ; gai_strerror
                        ; endp
000000000000364b         align      16                                          ; End of unwind block (FDE at 0x9da4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003650         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x9dbc), file_name
0000000000003657         ret
                        ; endp
0000000000003658         align      32                                          ; End of unwind block (FDE at 0x9dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003660         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x9dd0), ignore_EPIPE
0000000000003667         ret
                        ; endp
0000000000003668         align      16                                          ; End of unwind block (FDE at 0x9dd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003670         push       rbp                                         ; Begin of unwind block (FDE at 0x9de4), DATA XREF=main+71
0000000000003671         push       rbx
0000000000003672         sub        rsp, 0x8
0000000000003676         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000367d         call       close_stream                                ; close_stream
0000000000003682         test       eax, eax
0000000000003684         je         loc_369c

0000000000003686         call       j___errno_location                          ; __errno_location
000000000000368b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003692         mov        rbx, rax
0000000000003695         je         loc_36b3

0000000000003697         cmp        dword [rax], 0x20
000000000000369a         jne        loc_36b3

                     loc_369c:
000000000000369c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000036a3         call       close_stream                                ; close_stream
00000000000036a8         test       eax, eax
00000000000036aa         jne        loc_36f2

00000000000036ac         add        rsp, 0x8
00000000000036b0         pop        rbx
00000000000036b1         pop        rbp
00000000000036b2         ret
                        ; endp

                     loc_36b3:
00000000000036b3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000036ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036bc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000036c1         call       j_dcgettext                                 ; dcgettext
00000000000036c6         mov        rdi, qword [file_name]                      ; file_name
00000000000036cd         mov        rbp, rax
00000000000036d0         test       rdi, rdi
00000000000036d3         je         loc_36fd

00000000000036d5         call       quotearg_colon                              ; quotearg_colon
00000000000036da         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000036dc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000036e3         mov        rcx, rax
00000000000036e6         mov        r8, rbp
00000000000036e9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000036eb         xor        eax, eax
00000000000036ed         call       j_error                                     ; error

                     loc_36f2:
00000000000036f2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000036f8         call       j__exit                                     ; _exit
                        ; endp

                     loc_36fd:
00000000000036fd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000036ff         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8ce1
0000000000003706         mov        rcx, rax
0000000000003709         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000370b         xor        eax, eax
000000000000370d         call       j_error                                     ; error
0000000000003712         jmp        loc_36f2
0000000000003714         align      32                                          ; End of unwind block (FDE at 0x9de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000003720         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9e14), CODE XREF=main+685, rpl_mbrtowc+71
0000000000003724         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003726         call       j_setlocale                                 ; setlocale
000000000000372b         mov        rdx, rax
000000000000372e         mov        eax, 0x1
0000000000003733         test       rdx, rdx
0000000000003736         je         loc_3755

0000000000003738         lea        rdi, qword [aSS+7]                          ; 0x8ce4
000000000000373f         mov        ecx, 0x2
0000000000003744         mov        rsi, rdx
0000000000003747         rep  cmpsb byte [rsi], byte [rdi]
0000000000003749         seta       cl
000000000000374c         sbb        cl, 0x0
000000000000374f         xor        eax, eax
0000000000003751         test       cl, cl
0000000000003753         jne        loc_3760

                     loc_3755:
0000000000003755         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000003759         ret
                        ; endp
000000000000375a         align      32

                     loc_3760:
0000000000003760         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000003767         mov        ecx, 0x6
000000000000376c         mov        rsi, rdx
000000000000376f         rep  cmpsb byte [rsi], byte [rdi]
0000000000003771         seta       al
0000000000003774         sbb        al, 0x0
0000000000003776         test       al, al
0000000000003778         setne      al
000000000000377b         add        rsp, 0x8
000000000000377f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     imaxtostr:
0000000000003780         test       rdi, rdi                                    ; End of unwind block (FDE at 0x9e14), Begin of unwind block (FDE at 0x9e34), CODE XREF=time_string.isra.1+107
0000000000003783         lea        rcx, qword [rsi+0x14]
0000000000003787         mov        byte [rsi+0x14], 0x0
000000000000378b         movabs     r9, 0x6666666666666667
0000000000003795         movabs     rsi, 0xcccccccccccccccd
000000000000379f         mov        r8d, 0x30
00000000000037a5         js         loc_37e3

00000000000037a7         nop        word [rax+rax]

                     loc_37b0:
00000000000037b0         mov        rax, rdi                                    ; CODE XREF=imaxtostr+84
00000000000037b3         sub        rcx, 0x1
00000000000037b7         mul        rsi
00000000000037ba         shr        rdx, 0x3
00000000000037be         lea        rax, qword [rdx+rdx*4]
00000000000037c2         add        rax, rax
00000000000037c5         sub        rdi, rax
00000000000037c8         add        edi, 0x30
00000000000037cb         test       rdx, rdx
00000000000037ce         mov        byte [rcx], dil
00000000000037d1         mov        rdi, rdx
00000000000037d4         jne        loc_37b0

00000000000037d6         mov        rax, rcx
00000000000037d9         ret
                        ; endp
00000000000037da         align      32

                     loc_37e0:
00000000000037e0         mov        rcx, rsi                                    ; CODE XREF=imaxtostr+142

                     loc_37e3:
00000000000037e3         mov        rax, rdi                                    ; CODE XREF=imaxtostr+37
00000000000037e6         lea        rsi, qword [rcx-1]
00000000000037ea         imul       r9
00000000000037ed         mov        rax, rdi
00000000000037f0         sar        rax, 0x3f
00000000000037f4         sar        rdx, 0x2
00000000000037f8         sub        rdx, rax
00000000000037fb         lea        rax, qword [rdx+rdx*4]
00000000000037ff         lea        eax, dword [r8+rax*2]
0000000000003803         sub        eax, edi
0000000000003805         test       rdx, rdx
0000000000003808         mov        rdi, rdx
000000000000380b         mov        byte [rcx-1], al
000000000000380e         jne        loc_37e0

0000000000003810         sub        rcx, 0x2
0000000000003814         mov        byte [rsi-1], 0x2d
0000000000003818         mov        rax, rcx
000000000000381b         ret
                        ; endp
000000000000381c         align      32                                          ; End of unwind block (FDE at 0x9e34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003820         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9e4c), CODE XREF=main+18
0000000000003823         push       rbx
0000000000003824         je         loc_389d

0000000000003826         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000382b         mov        rbx, rdi
000000000000382e         call       j_strrchr                                   ; strrchr
0000000000003833         test       rax, rax
0000000000003836         je         loc_388d

0000000000003838         lea        r8, qword [rax+1]
000000000000383c         mov        rdx, r8
000000000000383f         sub        rdx, rbx
0000000000003842         cmp        rdx, 0x6
0000000000003846         jle        loc_388d

0000000000003848         lea        rsi, qword [rax-6]
000000000000384c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003853         mov        ecx, 0x7
0000000000003858         rep  cmpsb byte [rsi], byte [rdi]
000000000000385a         seta       dl
000000000000385d         sbb        dl, 0x0
0000000000003860         test       dl, dl
0000000000003862         jne        loc_388d

0000000000003864         lea        rdi, qword [aLibs+8]                        ; 0x8d30
000000000000386b         mov        ecx, 0x3
0000000000003870         mov        rsi, r8
0000000000003873         mov        rbx, r8
0000000000003876         rep  cmpsb byte [rsi], byte [rdi]
0000000000003878         seta       dl
000000000000387b         sbb        dl, 0x0
000000000000387e         test       dl, dl
0000000000003880         jne        loc_388d

0000000000003882         lea        rbx, qword [rax+4]
0000000000003886         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_388d:
000000000000388d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003894         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000389b         pop        rbx
000000000000389c         ret
                        ; endp

                     loc_389d:
000000000000389d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000038a4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000038ab         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000038b0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000038b5         call       j_fwrite                                    ; fwrite
00000000000038ba         call       j_abort                                     ; abort
                        ; endp
00000000000038bf         align      64                                          ; End of unwind block (FDE at 0x9e4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000038c0         push       rbp                                         ; Begin of unwind block (FDE at 0x9e6c), CODE XREF=sub_40f0+2597, sub_40f0+2619
00000000000038c1         push       rbx
00000000000038c2         mov        rbp, rdi
00000000000038c5         mov        ebx, esi
00000000000038c7         sub        rsp, 0x8
00000000000038cb         call       locale_charset                              ; locale_charset
00000000000038d0         movzx      edx, byte [rax]
00000000000038d3         and        edx, 0xffffffdf
00000000000038d6         cmp        dl, 0x55
00000000000038d9         je         loc_3950

00000000000038db         cmp        dl, 0x47
00000000000038de         je         loc_3900

                     loc_38e0:
00000000000038e0         lea        rax, qword [aLibs+27]                       ; 0x8d43, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000038e7         lea        rdx, qword [aLibs+29]                       ; 0x8d45
00000000000038ee         cmp        ebx, 0x9
00000000000038f1         cmovne     rax, rdx
00000000000038f5         add        rsp, 0x8
00000000000038f9         pop        rbx
00000000000038fa         pop        rbp
00000000000038fb         ret
                        ; endp
00000000000038fc         align      256

                     loc_3900:
0000000000003900         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003904         and        edx, 0xffffffdf
0000000000003907         cmp        dl, 0x42
000000000000390a         jne        loc_38e0

000000000000390c         cmp        byte [rax+2], 0x31
0000000000003910         jne        loc_38e0

0000000000003912         cmp        byte [rax+3], 0x38
0000000000003916         jne        loc_38e0

0000000000003918         cmp        byte [rax+4], 0x30
000000000000391c         jne        loc_38e0

000000000000391e         cmp        byte [rax+5], 0x33
0000000000003922         jne        loc_38e0

0000000000003924         cmp        byte [rax+6], 0x30
0000000000003928         jne        loc_38e0

000000000000392a         cmp        byte [rax+7], 0x0
000000000000392e         jne        loc_38e0

0000000000003930         cmp        byte [rbp], 0x60
0000000000003934         lea        rax, qword [aLibs+20]                       ; 0x8d3c
000000000000393b         lea        rdx, qword [aLibs+24]                       ; 0x8d40
0000000000003942         cmovne     rax, rdx
0000000000003946         add        rsp, 0x8
000000000000394a         pop        rbx
000000000000394b         pop        rbp
000000000000394c         ret
                        ; endp
000000000000394d         align      16

                     loc_3950:
0000000000003950         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003954         and        edx, 0xffffffdf
0000000000003957         cmp        dl, 0x54
000000000000395a         jne        loc_38e0

000000000000395c         movzx      edx, byte [rax+2]
0000000000003960         and        edx, 0xffffffdf
0000000000003963         cmp        dl, 0x46
0000000000003966         jne        loc_38e0

000000000000396c         cmp        byte [rax+3], 0x2d
0000000000003970         jne        loc_38e0

0000000000003976         cmp        byte [rax+4], 0x38
000000000000397a         jne        loc_38e0

0000000000003980         cmp        byte [rax+5], 0x0
0000000000003984         jne        loc_38e0

000000000000398a         cmp        byte [rbp], 0x60
000000000000398e         lea        rax, qword [aLibs+12]                       ; 0x8d34
0000000000003995         lea        rdx, qword [aLibs+16]                       ; 0x8d38
000000000000399c         cmovne     rax, rdx
00000000000039a0         add        rsp, 0x8
00000000000039a4         pop        rbx
00000000000039a5         pop        rbp
00000000000039a6         ret
                        ; endp
00000000000039a7         align      16                                          ; End of unwind block (FDE at 0x9e6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000039b0         push       r15                                         ; Begin of unwind block (FDE at 0x9eb0), CODE XREF=sub_40f0+1165, sub_40f0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000039b2         push       r14
00000000000039b4         mov        r15d, r8d
00000000000039b7         push       r13
00000000000039b9         push       r12
00000000000039bb         mov        r14, rdi
00000000000039be         push       rbp
00000000000039bf         push       rbx
00000000000039c0         mov        ebx, r9d
00000000000039c3         mov        r13, rsi
00000000000039c6         mov        rbp, rcx
00000000000039c9         and        ebx, 0x2
00000000000039cc         sub        rsp, 0xb8
00000000000039d3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000039db         mov        qword [rsp+0xe8+var_D8], rdx
00000000000039e0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000039e5         mov        dword [rsp+0xe8+var_70], r9d
00000000000039ea         mov        qword [rsp+0xe8+var_C8], rax
00000000000039ef         mov        rax, qword [rsp+0xe8+arg_8]
00000000000039f7         mov        qword [rsp+0xe8+var_80], rax
00000000000039fc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003a04         mov        qword [rsp+0xe8+var_88], rax
0000000000003a09         mov        rax, qword [fs:0x28]
0000000000003a12         mov        qword [rsp+0xe8+var_40], rax
0000000000003a1a         xor        eax, eax
0000000000003a1c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003a21         cmp        r15d, 0xa
0000000000003a25         mov        qword [rsp+0xe8+var_90], rax
0000000000003a2a         ja         loc_4bdf

0000000000003a30         lea        rcx, qword [switch_table_8da0]              ; switch_table_8da0
0000000000003a37         mov        edx, r15d
0000000000003a3a         movsxd     rax, dword [rcx+rdx*4]
0000000000003a3e         add        rax, rcx
0000000000003a41         jmp        rax                                         ; switch statement using table at 0x8da0, with 11 cases, 0x3a43,0x4614,0x4670,0x46c5,0x470a,0x4744,0x47ea,0x4824,0x4a18

                     loc_3a43:
0000000000003a43         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_40f0+1318
0000000000003a48         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a4d         xor        r12d, r12d
0000000000003a50         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a59         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003a5e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3a63:
0000000000003a63         lea        rax, qword [aLibs+29]                       ; 0x8d45, CODE XREF=sub_40f0+1876
0000000000003a6a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003a73         xor        r15d, r15d
0000000000003a76         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003a7e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3a83:
0000000000003a83         xor        r11d, r11d                                  ; CODE XREF=sub_40f0+180, sub_40f0+1400, sub_40f0+1488, sub_40f0+1557, sub_40f0+1615, sub_40f0+1781, sub_40f0+1839, sub_40f0+2408, sub_40f0+2485
0000000000003a86         mov        rax, rbp
0000000000003a89         mov        r8d, r12d
0000000000003a8c         mov        rbp, r11
0000000000003a8f         mov        r11, rax
0000000000003a92         nop        word [rax+rax]

                     loc_3a98:
0000000000003a98         cmp        r11, rbp                                    ; CODE XREF=sub_3ba0+194
0000000000003a9b         setne      r12b
0000000000003a9f         cmp        r11, 0xffffffffffffffff
0000000000003aa3         jne        loc_3ab2

0000000000003aa5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000003aaa         cmp        byte [rax+rbp], 0x0
0000000000003aae         setne      r12b

                     loc_3ab2:
0000000000003ab2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003ab5         je         loc_4110

0000000000003abb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003ac0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003ac5         lea        r9, qword [rdi+rbp]
0000000000003ac9         setne      al
0000000000003acc         and        al, byte [rsp+0xe8+var_DB]
0000000000003ad0         mov        r10d, eax
0000000000003ad3         je         loc_3b80

0000000000003ad9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000003ade         test       rax, rax
0000000000003ae1         je         loc_3f10

0000000000003ae7         cmp        r11, 0xffffffffffffffff
0000000000003aeb         lea        rbx, qword [rbp+rax]
0000000000003af0         jne        loc_3b20

0000000000003af2         cmp        rax, 0x1
0000000000003af6         jbe        loc_3b20

0000000000003af8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003afd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003b02         mov        qword [rsp+0xe8+var_C0], r9
0000000000003b07         call       j_strlen                                    ; strlen
0000000000003b0c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003b12         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003b18         mov        r11, rax
0000000000003b1b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3b20:
0000000000003b20         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003b23         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003b28         ja         loc_40e0

0000000000003b2e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003b33         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003b38         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003b3b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003b40         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003b45         mov        qword [rsp+0xe8+var_B8], r9
0000000000003b4a         call       j_memcmp                                    ; memcmp
0000000000003b4f         test       eax, eax
0000000000003b51         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003b56         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003b5c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003b61         jne        loc_40e0

0000000000003b67         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003b6c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003b72         jne        loc_4af5

0000000000003b78         nop        dword [rax+rax]

                     loc_3b80:
0000000000003b80         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_40d0+19
0000000000003b84         cmp        bl, 0x7e
0000000000003b87         ja         loc_3ea8

0000000000003b8d         lea        rcx, qword [switch_table_8da0+44]           ; 0x8dcc
0000000000003b94         movzx      edx, bl
0000000000003b97         movsxd     rax, dword [rcx+rdx*4]
0000000000003b9b         add        rax, rcx
0000000000003b9e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3ba0:
0000000000003ba0         xor        r10d, r10d
0000000000003ba3         cmp        r11, 0x1
0000000000003ba7         setne      al
0000000000003baa         cmp        r11, 0xffffffffffffffff
0000000000003bae         jne        loc_3bbc

0000000000003bb0         mov        rax, qword [rsp+arg_8]
0000000000003bb5         cmp        byte [rax+1], 0x0
0000000000003bb9         setne      al

                     loc_3bbc:
0000000000003bbc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3ba0+14
0000000000003bc1         sete       dl
0000000000003bc4         test       al, al
0000000000003bc6         je         loc_3e18

                     loc_3bcc:
0000000000003bcc         xor        r12d, r12d                                  ; CODE XREF=sub_3e10+11
0000000000003bcf         xor        eax, eax
0000000000003bd1         nop        dword [rax]
                        ; endp

                     loc_3bd8:
0000000000003bd8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3dc0+50, sub_3e90+119
0000000000003bdd         jne        loc_3cf2

0000000000003be3         test       dl, dl
0000000000003be5         jne        loc_3cf2

                     loc_3beb:
0000000000003beb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3ca0+87
0000000000003bf0         test       rsi, rsi
0000000000003bf3         je         loc_3c09

0000000000003bf5         mov        edx, ebx
0000000000003bf7         shr        dl, 0x5
0000000000003bfa         movzx      edx, dl
0000000000003bfd         mov        edx, dword [rsi+rdx*4]
0000000000003c00         bt         edx, ebx
0000000000003c03         jb         loc_3d53

                     loc_3c09:
0000000000003c09         test       r10b, r10b                                  ; CODE XREF=sub_3ba0+83, sub_3ca0+93
0000000000003c0c         jne        loc_3d53

0000000000003c12         xor        eax, 0x1
0000000000003c15         add        rbp, 0x1
0000000000003c19         and        eax, r8d

                     loc_3c1c:
0000000000003c1c         test       al, al                                      ; CODE XREF=sub_40f0+936
0000000000003c1e         je         loc_3c40

0000000000003c20         cmp        r13, r15
0000000000003c23         jbe        loc_3c2a

0000000000003c25         mov        byte [r14+r15], 0x27

                     loc_3c2a:
0000000000003c2a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3ba0+131
0000000000003c2e         cmp        r13, rax
0000000000003c31         jbe        loc_3c39

0000000000003c33         mov        byte [r14+r15+1], 0x27

                     loc_3c39:
0000000000003c39         add        r15, 0x2                                    ; CODE XREF=sub_3ba0+145
0000000000003c3d         xor        r8d, r8d

                     loc_3c40:
0000000000003c40         cmp        r15, r13                                    ; CODE XREF=sub_3ba0+126, sub_3ca0+275, sub_40f0+869
0000000000003c43         jae        loc_3c49

0000000000003c45         mov        byte [r14+r15], bl

                     loc_3c49:
0000000000003c49         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3ba0+163
0000000000003c4e         add        r15, 0x1
0000000000003c52         mov        eax, 0x0
0000000000003c57         test       r12b, r12b
0000000000003c5a         cmove      edi, eax
0000000000003c5d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003c62         jmp        loc_3a98
0000000000003c67         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3c70:
0000000000003c70         xor        r10d, r10d
0000000000003c73         mov        eax, dword [rsp+arg_0]
0000000000003c77         cmp        eax, 0x2
0000000000003c7a         je         loc_4238

0000000000003c80         cmp        eax, 0x5
0000000000003c83         je         loc_41f8

0000000000003c89         cmp        eax, 0x2
0000000000003c8c         mov        ebx, 0x3f
0000000000003c91         sete       dl
0000000000003c94         xor        r12d, r12d
0000000000003c97         xor        eax, eax
0000000000003c99         jmp        sub_3ba0+56
                        ; endp
0000000000003c9e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3ca0:
0000000000003ca0         xor        r10d, r10d
0000000000003ca3         cmp        dword [rsp+arg_0], 0x2
0000000000003ca8         je         loc_41b0

0000000000003cae         mov        byte [rsp+arg_74], r12b
0000000000003cb3         xor        edx, edx
0000000000003cb5         xor        eax, eax
0000000000003cb7         mov        ebx, 0x27
0000000000003cbc         jmp        sub_3ba0+56
                        ; endp
0000000000003cc1         nop        dword [rax]
0000000000003cc8         mov        edx, 0x9
0000000000003ccd         mov        ebx, 0x74

                     loc_3cd2:
0000000000003cd2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3e60+10, sub_3f50+37, sub_4090+53
0000000000003cd7         sete       al
0000000000003cda         and        al, byte [rsp+arg_7]
0000000000003cde         jne        sub_3e10+30

0000000000003ce4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3ca0+114
0000000000003ce9         jne        loc_3d50

                     loc_3ceb:
0000000000003ceb         mov        ebx, edx                                    ; CODE XREF=sub_3dc0+18
0000000000003ced         xor        r12d, r12d
0000000000003cf0         xor        eax, eax
                        ; endp

                     loc_3cf2:
0000000000003cf2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3ba0+61, sub_3ba0+69
0000000000003cf7         jne        loc_3beb

0000000000003cfd         jmp        loc_3c09
0000000000003d02         nop        word [rax+rax]
0000000000003d08         mov        edx, 0x8
0000000000003d0d         mov        ebx, 0x62
0000000000003d12         jmp        sub_3ca0+68
0000000000003d14         nop        dword [rax]
0000000000003d18         cmp        dword [rsp+8], 0x2
0000000000003d1d         je         sub_40f0                                    ; sub_40f0
0000000000003d23         cmp        byte [rsp+0xd], 0x0
0000000000003d28         je         sub_3f30+16

                     loc_3d2e:
0000000000003d2e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3f30+8
0000000000003d33         je         loc_3f40

0000000000003d39         cmp        qword [rsp+arg_10], 0x0
0000000000003d3f         jne        loc_40fb

0000000000003d45         mov        ebx, 0x5c
0000000000003d4a         nop        word [rax+rax]
                        ; endp

                     loc_3d50:
0000000000003d50         xor        r12d, r12d                                  ; CODE XREF=sub_3ca0+73, sub_4090+29
                        ; endp

                     loc_3d53:
0000000000003d53         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3ba0+99, sub_3ba0+108
0000000000003d58         sete       dl
0000000000003d5b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003d60         mov        eax, edx
0000000000003d62         jne        loc_45b8

0000000000003d68         mov        eax, r8d
0000000000003d6b         xor        eax, 0x1
0000000000003d6e         and        al, dl
0000000000003d70         je         loc_3da1

0000000000003d72         cmp        r13, r15
0000000000003d75         jbe        loc_3d7c

0000000000003d77         mov        byte [r14+r15], 0x27

                     loc_3d7c:
0000000000003d7c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3ca0+213
0000000000003d80         cmp        r13, rdx
0000000000003d83         jbe        loc_3d8b

0000000000003d85         mov        byte [r14+r15+1], 0x24

                     loc_3d8b:
0000000000003d8b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3ca0+227
0000000000003d8f         cmp        r13, rdx
0000000000003d92         jbe        loc_3d9a

0000000000003d94         mov        byte [r14+r15+2], 0x27

                     loc_3d9a:
0000000000003d9a         add        r15, 0x3                                    ; CODE XREF=sub_3ca0+242
0000000000003d9e         mov        r8d, eax

                     loc_3da1:
0000000000003da1         cmp        r13, r15                                    ; CODE XREF=sub_3ca0+208
0000000000003da4         jbe        loc_3dab

0000000000003da6         mov        byte [r14+r15], 0x5c

                     loc_3dab:
0000000000003dab         add        r15, 0x1                                    ; CODE XREF=sub_3ca0+260
0000000000003daf         add        rbp, 0x1
0000000000003db3         jmp        loc_3c40
0000000000003db8         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3dc0:
0000000000003dc0         cmp        byte [rsp+arg_5], 0x0
0000000000003dc5         jne        loc_3f93

0000000000003dcb         xor        edx, edx
0000000000003dcd         test       byte [rsp+arg_70], 0x1
0000000000003dd2         je         loc_3ceb

0000000000003dd8         add        rbp, 0x1
0000000000003ddc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003de1         nop        dword [rax]
0000000000003de8         cmp        dword [rsp+8], 0x2
0000000000003ded         sete       dl
0000000000003df0         xor        eax, eax
0000000000003df2         jmp        sub_3ba0+56
0000000000003df7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e00:
0000000000003e00         mov        edx, 0x7
0000000000003e05         mov        ebx, 0x61
0000000000003e0a         jmp        sub_3ca0+68
                        ; endp
0000000000003e0f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e10:
0000000000003e10         cmp        dword [rsp+8], 0x2
0000000000003e15         sete       dl
                        ; endp

                     loc_3e18:
0000000000003e18         test       rbp, rbp                                    ; CODE XREF=sub_3ba0+38, sub_4030+35
0000000000003e1b         jne        loc_3bcc

0000000000003e21         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4060+43
0000000000003e26         and        al, dl
0000000000003e28         je         sub_3ba0+56

0000000000003e2e         mov        rbp, r11
0000000000003e31         mov        dword [rsp+arg_0], 0x2
0000000000003e39         jmp        sub_40f0+1097
                        ; endp
0000000000003e3e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3e40:
0000000000003e40         cmp        dword [rsp+arg_0], 0x2
0000000000003e45         sete       dl
0000000000003e48         xor        r12d, r12d
0000000000003e4b         jmp        sub_3e10+17
                        ; endp
0000000000003e4d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3e50:
0000000000003e50         cmp        dword [rsp+arg_0], 0x2
0000000000003e55         mov        ebx, 0x20
0000000000003e5a         sete       dl
0000000000003e5d         jmp        sub_3e10+17
                        ; endp
0000000000003e5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3e60:
0000000000003e60         mov        edx, 0xd
0000000000003e65         mov        ebx, 0x72
0000000000003e6a         jmp        loc_3cd2
0000000000003e6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e70:
0000000000003e70         mov        edx, 0xc
0000000000003e75         mov        ebx, 0x66
0000000000003e7a         jmp        sub_3ca0+68
                        ; endp
0000000000003e7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e80:
0000000000003e80         mov        edx, 0xb
0000000000003e85         mov        ebx, 0x76
0000000000003e8a         jmp        sub_3ca0+68
                        ; endp
0000000000003e8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e90:
0000000000003e90         mov        edx, 0xa
0000000000003e95         mov        ebx, 0x6e
0000000000003e9a         jmp        sub_3ca0+50
                        ; endp
0000000000003e9f         align      32

                     loc_3ea0:
0000000000003ea0         xor        r10d, r10d                                  ; CODE XREF=sub_3e90+135
0000000000003ea3         nop        dword [rax+rax]

                     loc_3ea8:
0000000000003ea8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003eae         jne        loc_4258

0000000000003eb4         mov        qword [rsp+0xe8+var_B0], r11
0000000000003eb9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003ebe         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003ec3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003ec8         mov        rcx, qword [rax]
0000000000003ecb         movzx      edx, bl
0000000000003ece         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003ed4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003eda         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003edf         mov        edi, 0x1
0000000000003ee4         movzx      eax, word [rcx+rdx*2]
0000000000003ee8         and        ax, 0x4000
0000000000003eec         setne      r12b
0000000000003ef0         sete       al
0000000000003ef3         and        al, byte [rsp+0xe8+var_DB]

                     loc_3ef7:
0000000000003ef7         test       al, al                                      ; CODE XREF=sub_40f0+2221
0000000000003ef9         jne        loc_4891

0000000000003eff         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003f04         sete       dl
0000000000003f07         jmp        loc_3bd8
0000000000003f0c         align      16

                     loc_3f10:
0000000000003f10         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003f14         cmp        bl, 0x7e
0000000000003f17         ja         loc_3ea0

0000000000003f19         lea        rcx, qword [switch_table_8da0+552]          ; 0x8fc8
0000000000003f20         movzx      edx, bl
0000000000003f23         movsxd     rax, dword [rcx+rdx*4]
0000000000003f27         add        rax, rcx
0000000000003f2a         jmp        rax
                        ; endp
0000000000003f2c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3f30:
0000000000003f30         xor        r10d, r10d
0000000000003f33         cmp        byte [rsp+arg_5], 0x0
0000000000003f38         jne        loc_3d2e

0000000000003f3e         nop

                     loc_3f40:
0000000000003f40         mov        edx, 0x5c                                   ; CODE XREF=sub_3ca0+136, sub_3ca0+147
0000000000003f45         mov        ebx, 0x5c
0000000000003f4a         jmp        sub_3ca0+68
                        ; endp
0000000000003f4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f50:
0000000000003f50         mov        edx, 0xc
0000000000003f55         xor        r10d, r10d
0000000000003f58         mov        ebx, 0x66
0000000000003f5d         jmp        sub_3ca0+68
                        ; endp
0000000000003f62         nop        word [rax+rax]
0000000000003f68         mov        edx, 0xa
0000000000003f6d         xor        r10d, r10d
0000000000003f70         mov        ebx, 0x6e
0000000000003f75         jmp        sub_3ca0+50
0000000000003f7a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f80:
0000000000003f80         mov        ebx, 0x61
0000000000003f85         jmp        sub_3ca0+176
                        ; endp
0000000000003f8a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f90:
0000000000003f90         xor        r10d, r10d
                        ; endp

                     loc_3f93:
0000000000003f93         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3dc0+5
0000000000003f98         sete       dl
0000000000003f9b         cmp        byte [rsp+arg_7], 0x0
0000000000003fa0         jne        loc_4b3a

0000000000003fa6         mov        eax, r8d
0000000000003fa9         mov        rcx, r15
0000000000003fac         xor        eax, 0x1
0000000000003faf         and        al, dl
0000000000003fb1         je         loc_3fe0

0000000000003fb3         cmp        r13, r15
0000000000003fb6         jbe        loc_3fbd

0000000000003fb8         mov        byte [r14+r15], 0x27

                     loc_3fbd:
0000000000003fbd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3f90+38
0000000000003fc1         cmp        r13, rcx
0000000000003fc4         jbe        loc_3fcc

0000000000003fc6         mov        byte [r14+r15+1], 0x24

                     loc_3fcc:
0000000000003fcc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3f90+52
0000000000003fd0         cmp        r13, rcx
0000000000003fd3         ja         loc_4609

                     loc_3fd9:
0000000000003fd9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_40f0+1311
0000000000003fdd         mov        r8d, eax

                     loc_3fe0:
0000000000003fe0         cmp        r13, rcx                                    ; CODE XREF=sub_3f90+33
0000000000003fe3         jbe        loc_3fea

0000000000003fe5         mov        byte [r14+rcx], 0x5c

                     loc_3fea:
0000000000003fea         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3f90+83
0000000000003fef         lea        r15, qword [rcx+1]
0000000000003ff3         je         loc_45f9

0000000000003ff9         lea        rax, qword [rbp+1]
0000000000003ffd         cmp        rax, r11
0000000000004000         jae        loc_401b                                    ; DATA XREF=sub_3e90+88

0000000000004002         mov        rax, qword [rsp+arg_8]
0000000000004007         movzx      eax, byte [rax+rbp+1]
000000000000400c         mov        byte [rsp+arg_20], al
0000000000004010         sub        eax, 0x30
0000000000004013         cmp        al, 0x9
0000000000004015         jbe        loc_4849

                     loc_401b:
000000000000401b         mov        eax, r12d                                   ; CODE XREF=sub_3f90+112
000000000000401e         mov        ebx, 0x30
0000000000004023         xor        r12d, r12d
0000000000004026         jmp        sub_3ba0+56
                        ; endp
000000000000402b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4030:
0000000000004030         cmp        dword [rsp+arg_0], 0x2
0000000000004035         mov        r12d, r10d
0000000000004038         sete       dl
000000000000403b         xor        r10d, r10d
000000000000403e         xor        eax, eax
0000000000004040         jmp        sub_3ba0+56
                        ; endp
0000000000004045         nop        dword [rax]
0000000000004048         cmp        dword [rsp+8], 0x2
000000000000404d         sete       dl
0000000000004050         xor        r10d, r10d
0000000000004053         jmp        sub_3e10+8
0000000000004058         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4060:
0000000000004060         cmp        dword [rsp+8], 0x2
0000000000004065         sete       dl
0000000000004068         xor        r10d, r10d
000000000000406b         xor        r12d, r12d
000000000000406e         jmp        sub_3e10+17
                        ; endp
0000000000004073         nop        dword [rax+rax]
0000000000004078         cmp        dword [rsp+8], 0x2
000000000000407d         mov        r12d, r10d
0000000000004080         mov        ebx, 0x20
0000000000004085         sete       dl
0000000000004088         xor        r10d, r10d
000000000000408b         jmp        sub_3e10+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4090:
0000000000004090         mov        edx, 0xd
0000000000004095         xor        r10d, r10d
0000000000004098         mov        ebx, 0x72
000000000000409d         jmp        sub_3ca0+50
                        ; endp
00000000000040a2         nop        word [rax+rax]
00000000000040a8         mov        ebx, 0x76
00000000000040ad         jmp        sub_3ca0+176
00000000000040b2         nop        word [rax+rax]
00000000000040b8         mov        edx, 0x9
00000000000040bd         xor        r10d, r10d
00000000000040c0         mov        ebx, 0x74
00000000000040c5         jmp        sub_3ca0+50
00000000000040ca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_40d0:
00000000000040d0         mov        ebx, 0x62
00000000000040d5         jmp        sub_3ca0+176
                        ; endp
00000000000040da         nop        word [rax+rax]

                     loc_40e0:
00000000000040e0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000040e3         jmp        loc_3b80
00000000000040e8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_40f0:
00000000000040f0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3ca0+125
00000000000040f5         jne        sub_40f0+2416
                        ; endp

                     loc_40fb:
00000000000040fb         add        rbp, 0x1                                    ; CODE XREF=sub_3ca0+159
00000000000040ff         mov        eax, r8d
0000000000004102         xor        r12d, r12d
0000000000004105         mov        ebx, 0x5c
000000000000410a         jmp        sub_3ba0+124
                        ; endp
000000000000410f         align      16

                     loc_4110:
0000000000004110         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004115         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000411a         mov        r12d, r8d
000000000000411d         mov        rbp, r11
0000000000004120         sete       dl
0000000000004123         mov        eax, ebx
0000000000004125         test       r15, r15
0000000000004128         sete       cl
000000000000412b         and        eax, edx
000000000000412d         and        al, cl
000000000000412f         jne        loc_4b96

0000000000004135         mov        eax, ebx
0000000000004137         xor        eax, 0x1
000000000000413a         and        dl, al
000000000000413c         je         loc_4aac

0000000000004142         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004147         je         loc_4aaa

000000000000414d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004152         jne        loc_4b4d

0000000000004158         test       r13, r13
000000000000415b         sete       al
000000000000415e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004164         setne      dl
0000000000004167         and        al, dl
0000000000004169         je         loc_4b8c

000000000000416f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4174:
0000000000004174         lea        rbx, qword [aLibs+29]                       ; 0x8d45, CODE XREF=sub_40f0+2781
000000000000417b         mov        byte [r14], 0x27
000000000000417f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004187         mov        r15d, 0x1
000000000000418d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004196         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000419b         mov        qword [rsp+0xe8+var_A0], rbx
00000000000041a0         mov        byte [rsp+0xe8+var_6C], al
00000000000041a4         jmp        loc_3a83
00000000000041a9         align      16

                     loc_41b0:
00000000000041b0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3ca0+8
00000000000041b5         jne        sub_40f0+2416

00000000000041bb         test       r13, r13
00000000000041be         je         loc_45c0

00000000000041c4         xor        edx, edx
00000000000041c6         cmp        qword [rsp+arg_48], 0x0
00000000000041cc         jne        loc_45c0

                     loc_41d2:
00000000000041d2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_40f0+1284, sub_40f0+2794
00000000000041d7         add        r15, 0x3
00000000000041db         xor        eax, eax
00000000000041dd         mov        byte [rsp+arg_74], r12b
00000000000041e2         xor        r8d, r8d
00000000000041e5         mov        r13, rdx
00000000000041e8         mov        ebx, 0x27
00000000000041ed         jmp        sub_3ba0+105
                        ; endp
00000000000041f2         align      8

                     loc_41f8:
00000000000041f8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3c70+19
00000000000041fd         je         loc_4220

00000000000041ff         lea        rcx, qword [rbp+2]
0000000000004203         cmp        rcx, r11
0000000000004206         jae        loc_4220

0000000000004208         mov        rax, qword [rsp+arg_8]
000000000000420d         cmp        byte [rax+rbp+1], 0x3f
0000000000004212         je         loc_49a2

0000000000004218         nop        dword [rax+rax]

                     loc_4220:
0000000000004220         xor        edx, edx                                    ; CODE XREF=sub_40f0+269, sub_40f0+278, sub_40f0+2233, sub_40f0+2253
0000000000004222         xor        r12d, r12d
0000000000004225         xor        eax, eax
0000000000004227         mov        ebx, 0x3f
000000000000422c         jmp        sub_3ba0+56
                        ; endp
0000000000004231         align      8

                     loc_4238:
0000000000004238         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3c70+10
000000000000423d         jne        loc_4a60

0000000000004243         xor        r12d, r12d
0000000000004246         xor        eax, eax
0000000000004248         mov        ebx, 0x3f
000000000000424d         jmp        sub_3ba0+105
                        ; endp
0000000000004252         align      8

                     loc_4258:
0000000000004258         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3e90+30
0000000000004260         cmp        r11, 0xffffffffffffffff
0000000000004264         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004270         mov        qword [rsp+0xe8+var_C0], rax
0000000000004275         jne        loc_42a4

0000000000004277         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000427c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004281         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004286         mov        qword [rsp+0xe8+var_B8], r9
000000000000428b         call       j_strlen                                    ; strlen
0000000000004290         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004296         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000429c         mov        r11, rax
000000000000429f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_42a4:
00000000000042a4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_40f0+389
00000000000042ac         xor        ecx, ecx
00000000000042ae         mov        byte [rsp+0xe8+var_6A], bl
00000000000042b2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000042b7         mov        rbx, rcx
00000000000042ba         mov        qword [rsp+0xe8+var_60], r9
00000000000042c2         mov        qword [rsp+0xe8+var_B0], rax
00000000000042c7         mov        byte [rsp+0xe8+var_69], r10b
00000000000042cc         mov        qword [rsp+0xe8+var_68], r15
00000000000042d4         mov        qword [rsp+0xe8+var_A8], r14
00000000000042d9         mov        qword [rsp+0xe8+var_78], r13
00000000000042de         mov        qword [rsp+0xe8+var_B8], r11

                     loc_42e3:
00000000000042e3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_40f0+623
00000000000042e8         lea        r14, qword [rbp+rbx]
00000000000042ed         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000042f2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000042f7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000042fc         lea        r13, qword [rax+r14]
0000000000004300         sub        rdx, r14
0000000000004303         mov        rsi, r13
0000000000004306         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000430b         test       rax, rax
000000000000430e         mov        r15, rax
0000000000004311         je         loc_4361

0000000000004313         cmp        rax, 0xffffffffffffffff
0000000000004317         je         loc_4935

000000000000431d         cmp        rax, 0xfffffffffffffffe
0000000000004321         je         loc_48c1

0000000000004327         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000432c         sete       al
000000000000432f         and        al, byte [rsp+0xe8+var_D9]
0000000000004333         jne        loc_44d0

                     loc_4339:
0000000000004339         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_40f0+996, sub_40f0+1031
0000000000004340         call       j_iswprint                                  ; iswprint
0000000000004345         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000434a         test       eax, eax
000000000000434c         mov        eax, 0x0
0000000000004351         cmove      r12d, eax
0000000000004355         add        rbx, r15
0000000000004358         call       j_mbsinit                                   ; mbsinit
000000000000435d         test       eax, eax
000000000000435f         je         loc_42e3

                     loc_4361:
0000000000004361         mov        edx, r12d                                   ; CODE XREF=sub_40f0+545
0000000000004364         mov        rdi, rbx
0000000000004367         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000436d         xor        edx, 0x1
0000000000004370         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004375         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000437b         and        dl, byte [rsp+0xe8+var_DB]
000000000000437f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004387         mov        r14, qword [rsp+0xe8+var_A8]
000000000000438c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004391         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4396:
0000000000004396         cmp        rdi, 0x1                                    ; CODE XREF=sub_40f0+2112, sub_40f0+2168
000000000000439a         jbe        loc_499b

                     loc_43a0:
00000000000043a0         mov        rcx, rdi                                    ; CODE XREF=sub_40f0+1961
00000000000043a3         xor        esi, esi
00000000000043a5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000043ab         add        rcx, rbp
00000000000043ae         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000043b3         jmp        loc_446e
00000000000043b8         align      64

                     loc_43c0:
00000000000043c0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_40f0+896
00000000000043c5         sete       al
00000000000043c8         test       r9b, r9b
00000000000043cb         jne        loc_4880

00000000000043d1         mov        esi, r8d
00000000000043d4         xor        esi, 0x1
00000000000043d7         and        al, sil
00000000000043da         je         loc_440b

00000000000043dc         cmp        r13, r15
00000000000043df         jbe        loc_43e6

00000000000043e1         mov        byte [r14+r15], 0x27

                     loc_43e6:
00000000000043e6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_40f0+751
00000000000043ea         cmp        r13, rsi
00000000000043ed         jbe        loc_43f5

00000000000043ef         mov        byte [r14+r15+1], 0x24

                     loc_43f5:
00000000000043f5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_40f0+765
00000000000043f9         cmp        r13, rsi
00000000000043fc         jbe        loc_4404

00000000000043fe         mov        byte [r14+r15+2], 0x27

                     loc_4404:
0000000000004404         add        r15, 0x3                                    ; CODE XREF=sub_40f0+780
0000000000004408         mov        r8d, eax

                     loc_440b:
000000000000440b         cmp        r13, r15                                    ; CODE XREF=sub_40f0+746
000000000000440e         jbe        loc_4415

0000000000004410         mov        byte [r14+r15], 0x5c

                     loc_4415:
0000000000004415         lea        rax, qword [r15+1]                          ; CODE XREF=sub_40f0+798
0000000000004419         cmp        r13, rax
000000000000441c         jbe        loc_442b

000000000000441e         mov        eax, ebx
0000000000004420         shr        al, 0x6
0000000000004423         add        eax, 0x30
0000000000004426         mov        byte [r14+r15+1], al

                     loc_442b:
000000000000442b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_40f0+812
000000000000442f         cmp        r13, rax
0000000000004432         jbe        loc_4444

0000000000004434         mov        eax, ebx
0000000000004436         shr        al, 0x3
0000000000004439         and        eax, 0x7
000000000000443c         add        eax, 0x30
000000000000443f         mov        byte [r14+r15+2], al

                     loc_4444:
0000000000004444         and        ebx, 0x7                                    ; CODE XREF=sub_40f0+834
0000000000004447         add        rbp, 0x1
000000000000444b         add        r15, 0x3
000000000000444f         add        ebx, 0x30
0000000000004452         cmp        rbp, rcx
0000000000004455         jae        loc_3c40

000000000000445b         mov        esi, edx

                     loc_445d:
000000000000445d         cmp        r13, r15                                    ; CODE XREF=sub_40f0+985, sub_40f0+1969
0000000000004460         jbe        loc_4466

0000000000004462         mov        byte [r14+r15], bl

                     loc_4466:
0000000000004466         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_40f0+880
000000000000446a         add        r15, 0x1

                     loc_446e:
000000000000446e         test       dl, dl                                      ; CODE XREF=sub_40f0+707
0000000000004470         jne        loc_43c0

0000000000004476         mov        eax, esi
0000000000004478         xor        eax, 0x1
000000000000447b         and        eax, r8d
000000000000447e         test       r10b, r10b
0000000000004481         je         loc_4491

0000000000004483         cmp        r13, r15
0000000000004486         jbe        loc_448d

0000000000004488         mov        byte [r14+r15], 0x5c

                     loc_448d:
000000000000448d         add        r15, 0x1                                    ; CODE XREF=sub_40f0+918

                     loc_4491:
0000000000004491         add        rbp, 0x1                                    ; CODE XREF=sub_40f0+913
0000000000004495         cmp        rbp, rcx
0000000000004498         jae        loc_3c1c

000000000000449e         test       al, al
00000000000044a0         je         loc_489e

00000000000044a6         cmp        r13, r15
00000000000044a9         jbe        loc_44b0

00000000000044ab         mov        byte [r14+r15], 0x27

                     loc_44b0:
00000000000044b0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_40f0+953
00000000000044b4         cmp        r13, rax
00000000000044b7         jbe        loc_44bf

00000000000044b9         mov        byte [r14+r15+1], 0x27

                     loc_44bf:
00000000000044bf         add        r15, 0x2                                    ; CODE XREF=sub_40f0+967
00000000000044c3         xor        r10d, r10d
00000000000044c6         xor        r8d, r8d
00000000000044c9         jmp        loc_445d
00000000000044cb         align      16

                     loc_44d0:
00000000000044d0         cmp        r15, 0x1                                    ; CODE XREF=sub_40f0+579
00000000000044d4         je         loc_4339

00000000000044da         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000044df         lea        rcx, qword [rdi+r15]
00000000000044e3         lea        rdx, qword [rdi+r14+1]
00000000000044e8         lea        r8, qword [rcx+r14]
00000000000044ec         jmp        loc_44fd
00000000000044ee         align      16

                     loc_44f0:
00000000000044f0         add        rdx, 0x1                                    ; CODE XREF=sub_40f0+1046, sub_40f0+1072
00000000000044f4         cmp        r8, rdx
00000000000044f7         je         loc_4339

                     loc_44fd:
00000000000044fd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_40f0+1020
0000000000004500         sub        ecx, 0x5b
0000000000004503         cmp        cl, 0x21
0000000000004506         ja         loc_44f0

0000000000004508         mov        esi, 0x1
000000000000450d         shl        rsi, cl
0000000000004510         mov        rcx, rsi
0000000000004513         movabs     rsi, 0x20000002b
000000000000451d         test       rcx, rsi
0000000000004520         je         loc_44f0

0000000000004522         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004527         mov        r13, qword [rsp+0xe8+var_78]
000000000000452c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004531         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4539:
0000000000004539         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_40f0+1227, sub_40f0+1948, sub_40f0+2585, sub_40f0+2734
000000000000453e         je         loc_4550

0000000000004540         test       al, al
0000000000004542         mov        eax, 0x4
0000000000004547         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000454c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4550:
0000000000004550         sub        rsp, 0x8                                    ; CODE XREF=sub_40f0+1102
0000000000004554         mov        rcx, rbp
0000000000004557         mov        rsi, r13
000000000000455a         push       qword [rsp+0xf0+var_88]
000000000000455e         push       qword [rsp+0xf8+var_80]
0000000000004562         mov        rdi, r14
0000000000004565         push       0x0
0000000000004567         mov        r9d, dword [rsp+0x108+var_70]
000000000000456f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004574         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004579         and        r9d, 0xfffffffd
000000000000457d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004582         add        rsp, 0x20
0000000000004586         mov        r15, rax

                     loc_4589:
0000000000004589         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_40f0+2549, sub_40f0+2560, sub_40f0+2711
0000000000004591         xor        rbx, qword [fs:0x28]
000000000000459a         mov        rax, r15
000000000000459d         jne        loc_4ba3

00000000000045a3         add        rsp, 0xb8
00000000000045aa         pop        rbx
00000000000045ab         pop        rbp
00000000000045ac         pop        r12
00000000000045ae         pop        r13
00000000000045b0         pop        r14
00000000000045b2         pop        r15
00000000000045b4         ret
                        ; endp
00000000000045b5         align      8

                     loc_45b8:
00000000000045b8         mov        rbp, r11                                    ; CODE XREF=sub_3ca0+194
00000000000045bb         jmp        loc_4539

                     loc_45c0:
00000000000045c0         cmp        r13, r15                                    ; CODE XREF=sub_40f0+206, sub_40f0+220
00000000000045c3         jbe        loc_45ca

00000000000045c5         mov        byte [r14+r15], 0x27

                     loc_45ca:
00000000000045ca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_40f0+1235
00000000000045ce         cmp        r13, rax
00000000000045d1         jbe        loc_45d9

00000000000045d3         mov        byte [r14+r15+1], 0x5c

                     loc_45d9:
00000000000045d9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_40f0+1249
00000000000045dd         cmp        r13, rax
00000000000045e0         jbe        loc_4bd2

00000000000045e6         mov        rdx, r13
00000000000045e9         mov        byte [r14+r15+2], 0x27
00000000000045ef         mov        r13, qword [rsp+arg_48]
00000000000045f4         jmp        loc_41d2

                     loc_45f9:
00000000000045f9         mov        eax, r12d                                   ; CODE XREF=sub_3f90+99
00000000000045fc         mov        ebx, 0x30
0000000000004601         xor        r12d, r12d
0000000000004604         jmp        sub_3ba0+105
                        ; endp

                     loc_4609:
0000000000004609         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3f90+67
000000000000460f         jmp        loc_3fd9

                     loc_4614:
0000000000004614         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004616         jne        loc_3a43

000000000000461c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4621:
0000000000004621         test       r13, r13                                    ; CODE XREF=sub_40f0+2749
0000000000004624         jne        loc_4bba

000000000000462a         lea        rax, qword [aLibs+29]                       ; 0x8d45
0000000000004631         mov        qword [rsp+0xe8+var_98], 0x0
000000000000463a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000463f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004644         xor        r12d, r12d
0000000000004647         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000464c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004655         mov        qword [rsp+0xe8+var_A0], rax
000000000000465a         mov        r15d, 0x1
0000000000004660         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004668         jmp        loc_3a83
000000000000466d         align      16

                     loc_4670:
0000000000004670         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004672         jne        loc_4a6d

0000000000004678         test       r13, r13
000000000000467b         je         loc_48a6

0000000000004681         mov        byte [r14], 0x22
0000000000004685         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000468a         xor        r12d, r12d
000000000000468d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004692         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_469b:
000000000000469b         lea        rax, qword [aLibs+27]                       ; 0x8d43, CODE XREF=sub_40f0+1996
00000000000046a2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000046a7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000046ac         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000046b5         mov        r15d, 0x1
00000000000046bb         mov        qword [rsp+0xe8+var_A0], rax
00000000000046c0         jmp        loc_3a83

                     loc_46c5:
00000000000046c5         lea        rax, qword [aLibs+27]                       ; case 6, 0x8d43, CODE XREF=quotearg_buffer_restyled+145
00000000000046cc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000046d1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000046d6         xor        r12d, r12d
00000000000046d9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000046e2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000046e7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000046ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000046f5         xor        r15d, r15d
00000000000046f8         mov        qword [rsp+0xe8+var_A0], rax
00000000000046fd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004705         jmp        loc_3a83

                     loc_470a:
000000000000470a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000470f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004714         xor        r12d, r12d
0000000000004717         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004720         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004725         xor        r15d, r15d
0000000000004728         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000472d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004736         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000473f         jmp        loc_3a83

                     loc_4744:
0000000000004744         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004749         je         loc_47a1

000000000000474b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x8d47
0000000000004752         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004754         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004759         call       j_dcgettext                                 ; dcgettext
000000000000475e         mov        rcx, rax
0000000000004761         mov        qword [rsp+0xe8+var_80], rax
0000000000004766         lea        rax, qword [aLibs+31]                       ; 0x8d47
000000000000476d         cmp        rcx, rax
0000000000004770         je         loc_4b0e

                     loc_4776:
0000000000004776         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x8d45, CODE XREF=sub_40f0+2607
000000000000477d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000477f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004784         call       j_dcgettext                                 ; dcgettext
0000000000004789         mov        rcx, rax
000000000000478c         mov        qword [rsp+0xe8+var_88], rax
0000000000004791         lea        rax, qword [aLibs+29]                       ; 0x8d45
0000000000004798         cmp        rcx, rax
000000000000479b         je         loc_4b24

                     loc_47a1:
00000000000047a1         xor        r15d, r15d                                  ; CODE XREF=sub_40f0+1625, sub_40f0+2629
00000000000047a4         test       ebx, ebx
00000000000047a6         je         loc_496d

                     loc_47ac:
00000000000047ac         test       ebx, ebx                                    ; CODE XREF=sub_40f0+2183, sub_40f0+2214
00000000000047ae         mov        rbx, qword [rsp+0xe8+var_88]
00000000000047b3         setne      byte [rsp+0xe8+var_D9]
00000000000047b8         xor        r12d, r12d
00000000000047bb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000047be         call       j_strlen                                    ; strlen
00000000000047c3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000047c8         mov        qword [rsp+0xe8+var_D0], rax
00000000000047cd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000047d2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000047e0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047e5         jmp        loc_3a83

                     loc_47ea:
00000000000047ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000047ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047f4         xor        r12d, r12d
00000000000047f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004800         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004805         xor        r15d, r15d
0000000000004808         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000480d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004816         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000481f         jmp        loc_3a83

                     loc_4824:
0000000000004824         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004829         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000482e         xor        r12d, r12d
0000000000004831         mov        qword [rsp+0xe8+var_98], 0x0
000000000000483a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000483f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004844         jmp        loc_3a63

                     loc_4849:
0000000000004849         cmp        r13, r15                                    ; CODE XREF=sub_3f90+133
000000000000484c         jbe        loc_4853

000000000000484e         mov        byte [r14+r15], 0x30

                     loc_4853:
0000000000004853         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_40f0+1884
0000000000004857         cmp        r13, rax
000000000000485a         jbe        loc_4862

000000000000485c         mov        byte [r14+rcx+2], 0x30

                     loc_4862:
0000000000004862         mov        eax, r12d                                   ; CODE XREF=sub_40f0+1898
0000000000004865         lea        r15, qword [rcx+3]
0000000000004869         xor        r12d, r12d
000000000000486c         mov        ebx, 0x30
0000000000004871         jmp        sub_3ba0+56
                        ; endp
0000000000004876         align      128

                     loc_4880:
0000000000004880         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_40f0+731
0000000000004885         mov        rbp, r11
0000000000004888         mov        byte [rsp+0xe8+var_DB], bl
000000000000488c         jmp        loc_4539

                     loc_4891:
0000000000004891         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3e90+105
0000000000004896         xor        r12d, r12d
0000000000004899         jmp        loc_43a0

                     loc_489e:
000000000000489e         xor        r10d, r10d                                  ; CODE XREF=sub_40f0+944
00000000000048a1         jmp        loc_445d

                     loc_48a6:
00000000000048a6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_40f0+1419
00000000000048af         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000048b4         xor        r12d, r12d
00000000000048b7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048bc         jmp        loc_469b

                     loc_48c1:
00000000000048c1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_40f0+561
00000000000048c6         mov        rsi, r14
00000000000048c9         mov        rcx, r13
00000000000048cc         mov        rax, rbx
00000000000048cf         mov        rdi, rbx
00000000000048d2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000048d8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000048dd         mov        r9, qword [rsp+0xe8+var_60]
00000000000048e5         cmp        rsi, r11
00000000000048e8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000048ee         mov        r15, qword [rsp+0xe8+var_68]
00000000000048f6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000048fb         mov        r13, qword [rsp+0xe8+var_78]
0000000000004900         jae        loc_4928

0000000000004902         cmp        byte [rcx], 0x0
0000000000004905         jne        loc_4917

0000000000004907         jmp        loc_4928
0000000000004909         align      16

                     loc_4910:
0000000000004910         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_40f0+2099
0000000000004915         je         loc_4925

                     loc_4917:
0000000000004917         add        rax, 0x1                                    ; CODE XREF=sub_40f0+2069
000000000000491b         lea        rdx, qword [rbp+rax]
0000000000004920         cmp        r11, rdx
0000000000004923         ja         loc_4910

                     loc_4925:
0000000000004925         mov        rdi, rax                                    ; CODE XREF=sub_40f0+2085

                     loc_4928:
0000000000004928         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_40f0+2064, sub_40f0+2071
000000000000492d         xor        r12d, r12d
0000000000004930         jmp        loc_4396

                     loc_4935:
0000000000004935         mov        rdi, rbx                                    ; CODE XREF=sub_40f0+551
0000000000004938         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000493e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004943         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004949         mov        r15, qword [rsp+0xe8+var_68]
0000000000004951         xor        r12d, r12d
0000000000004954         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004959         mov        r13, qword [rsp+0xe8+var_78]
000000000000495e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004963         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004968         jmp        loc_4396

                     loc_496d:
000000000000496d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_40f0+1718
0000000000004972         movzx      eax, byte [rdx]
0000000000004975         test       al, al
0000000000004977         je         loc_47ac

000000000000497d         nop        dword [rax]

                     loc_4980:
0000000000004980         cmp        r13, r15                                    ; CODE XREF=sub_40f0+2212
0000000000004983         jbe        loc_4989

0000000000004985         mov        byte [r14+r15], al

                     loc_4989:
0000000000004989         add        r15, 0x1                                    ; CODE XREF=sub_40f0+2195
000000000000498d         movzx      eax, byte [rdx+r15]
0000000000004992         test       al, al
0000000000004994         jne        loc_4980

0000000000004996         jmp        loc_47ac

                     loc_499b:
000000000000499b         mov        eax, edx                                    ; CODE XREF=sub_40f0+682
000000000000499d         jmp        loc_3ef7

                     loc_49a2:
00000000000049a2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_40f0+290
00000000000049a6         cmp        bl, 0x3e
00000000000049a9         ja         loc_4220

00000000000049af         movabs     rax, 0x7000a38200000000
00000000000049b9         bt         rax, rbx
00000000000049bd         jae        loc_4220

00000000000049c3         cmp        byte [rsp+arg_7], 0x0
00000000000049c8         jne        loc_4bb2

00000000000049ce         cmp        r13, r15
00000000000049d1         jbe        loc_49d8

00000000000049d3         mov        byte [r14+r15], 0x3f

                     loc_49d8:
00000000000049d8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_40f0+2273
00000000000049dc         cmp        r13, rax
00000000000049df         jbe        loc_49e7

00000000000049e1         mov        byte [r14+r15+1], 0x22

                     loc_49e7:
00000000000049e7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_40f0+2287
00000000000049eb         cmp        r13, rax
00000000000049ee         jbe        loc_49f6

00000000000049f0         mov        byte [r14+r15+2], 0x22

                     loc_49f6:
00000000000049f6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_40f0+2302
00000000000049fa         cmp        r13, rax
00000000000049fd         jbe        loc_4a05

00000000000049ff         mov        byte [r14+r15+3], 0x3f

                     loc_4a05:
0000000000004a05         add        r15, 0x4                                    ; CODE XREF=sub_40f0+2317
0000000000004a09         xor        edx, edx
0000000000004a0b         xor        r12d, r12d
0000000000004a0e         xor        eax, eax
0000000000004a10         mov        rbp, rcx
0000000000004a13         jmp        sub_3ba0+56
                        ; endp

                     loc_4a18:
0000000000004a18         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000004a1a         je         loc_4ba8

0000000000004a20         lea        rax, qword [aLibs+29]                       ; 0x8d45
0000000000004a27         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004a2c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a31         xor        r12d, r12d
0000000000004a34         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004a3d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004a42         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004a47         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a50         xor        r15d, r15d
0000000000004a53         mov        qword [rsp+0xe8+var_A0], rax
0000000000004a58         jmp        loc_3a83
0000000000004a5d         align      32

                     loc_4a60:
0000000000004a60         mov        rbp, r11                                    ; CODE XREF=sub_40f0+333
0000000000004a63         movzx      eax, byte [rsp+arg_7]
0000000000004a68         jmp        sub_40f0+1097
                        ; endp

                     loc_4a6d:
0000000000004a6d         lea        rax, qword [aLibs+27]                       ; 0x8d43, CODE XREF=sub_40f0+1410
0000000000004a74         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004a79         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a7e         xor        r12d, r12d
0000000000004a81         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004a8a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004a8f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004a94         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a9d         xor        r15d, r15d
0000000000004aa0         mov        qword [rsp+0xe8+var_A0], rax
0000000000004aa5         jmp        loc_3a83

                     loc_4aaa:
0000000000004aaa         mov        eax, edx                                    ; CODE XREF=sub_40f0+87

                     loc_4aac:
0000000000004aac         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_40f0+76, sub_40f0+2721
0000000000004ab1         test       rbx, rbx
0000000000004ab4         je         loc_4ae2

0000000000004ab6         test       al, al
0000000000004ab8         je         loc_4ae2

0000000000004aba         movzx      ecx, byte [rbx]
0000000000004abd         mov        rax, rbx
0000000000004ac0         test       cl, cl
0000000000004ac2         je         loc_4ae2

0000000000004ac4         mov        rdx, r15
0000000000004ac7         sub        rax, r15

                     loc_4aca:
0000000000004aca         cmp        r13, rdx                                    ; CODE XREF=sub_40f0+2541
0000000000004acd         jbe        loc_4ad3

0000000000004acf         mov        byte [r14+rdx], cl

                     loc_4ad3:
0000000000004ad3         add        rdx, 0x1                                    ; CODE XREF=sub_40f0+2525
0000000000004ad7         movzx      ecx, byte [rax+rdx]
0000000000004adb         test       cl, cl
0000000000004add         jne        loc_4aca

0000000000004adf         mov        r15, rdx

                     loc_4ae2:
0000000000004ae2         cmp        r13, r15                                    ; CODE XREF=sub_40f0+2500, sub_40f0+2504, sub_40f0+2514
0000000000004ae5         jbe        loc_4589

0000000000004aeb         mov        byte [r14+r15], 0x0
0000000000004af0         jmp        loc_4589

                     loc_4af5:
0000000000004af5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000004afa         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004aff         mov        rbp, r11
0000000000004b02         sete       al
0000000000004b05         mov        byte [rsp+0xe8+var_DB], bl
0000000000004b09         jmp        loc_4539

                     loc_4b0e:
0000000000004b0e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_40f0+1664
0000000000004b12         mov        rdi, rcx
0000000000004b15         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004b1a         mov        qword [rsp+0xe8+var_80], rax
0000000000004b1f         jmp        loc_4776

                     loc_4b24:
0000000000004b24         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_40f0+1707
0000000000004b28         mov        rdi, rcx
0000000000004b2b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004b30         mov        qword [rsp+0xe8+var_88], rax
0000000000004b35         jmp        loc_47a1

                     loc_4b3a:
0000000000004b3a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3f90+16
0000000000004b3f         mov        rbp, r11
0000000000004b42         mov        eax, edx
0000000000004b44         mov        byte [rsp+arg_5], bl
0000000000004b48         jmp        sub_40f0+1097
                        ; endp

                     loc_4b4d:
0000000000004b4d         sub        rsp, 0x8                                    ; CODE XREF=sub_40f0+98
0000000000004b51         mov        r8d, 0x5
0000000000004b57         mov        rcx, r11
0000000000004b5a         push       qword [rsp+0xf0+var_88]
0000000000004b5e         push       qword [rsp+0xf8+var_80]
0000000000004b62         mov        rdi, r14
0000000000004b65         push       qword [rsp+0x100+var_C8]
0000000000004b69         mov        r9d, dword [rsp+0x108+var_70]
0000000000004b71         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004b76         mov        rsi, qword [rsp+0x108+var_98]
0000000000004b7b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004b80         add        rsp, 0x20
0000000000004b84         mov        r15, rax
0000000000004b87         jmp        loc_4589

                     loc_4b8c:
0000000000004b8c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_40f0+121
0000000000004b91         jmp        loc_4aac

                     loc_4b96:
0000000000004b96         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_40f0+63
0000000000004b9e         jmp        loc_4539

                     loc_4ba3:
0000000000004ba3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_40f0+1197
                        ; endp

                     loc_4ba8:
0000000000004ba8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_40f0+2346
0000000000004bad         jmp        loc_4621

                     loc_4bb2:
0000000000004bb2         mov        rbp, r11                                    ; CODE XREF=sub_40f0+2264
0000000000004bb5         jmp        sub_40f0+1120
                        ; endp

                     loc_4bba:
0000000000004bba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_40f0+1332
0000000000004bbf         xor        eax, eax
0000000000004bc1         xor        r12d, r12d
0000000000004bc4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004bcd         jmp        loc_4174

                     loc_4bd2:
0000000000004bd2         mov        rdx, r13                                    ; CODE XREF=sub_40f0+1264
0000000000004bd5         mov        r13, qword [rsp+arg_48]
0000000000004bda         jmp        loc_41d2

                     loc_4bdf:
0000000000004bdf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004be4         align      16                                          ; End of unwind block (FDE at 0x9eb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004bf0         push       r15                                         ; Begin of unwind block (FDE at 0x9f28), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004bf2         push       r14
0000000000004bf4         movsxd     r15, edi
0000000000004bf7         push       r13
0000000000004bf9         push       r12
0000000000004bfb         mov        r14, rdx
0000000000004bfe         push       rbp
0000000000004bff         push       rbx
0000000000004c00         mov        rbp, rcx
0000000000004c03         sub        rsp, 0x28
0000000000004c07         mov        qword [rsp+0x58+var_50], rsi
0000000000004c0c         call       j___errno_location                          ; __errno_location
0000000000004c11         mov        r13, rax
0000000000004c14         mov        eax, dword [rax]
0000000000004c16         test       r15d, r15d
0000000000004c19         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004c20         mov        dword [rsp+0x58+var_40], eax
0000000000004c24         js         loc_4d91

0000000000004c2a         cmp        dword [nslots], r15d                        ; nslots
0000000000004c31         jg         loc_4c95

0000000000004c33         cmp        r15d, 0x7fffffff
0000000000004c3a         je         loc_4d96

0000000000004c40         lea        r12d, dword [r15+1]
0000000000004c44         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004c4b         movsxd     rsi, r12d
0000000000004c4e         shl        rsi, 0x4
0000000000004c52         cmp        rbx, rax
0000000000004c55         je         loc_4d70

0000000000004c5b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004c5e         call       xrealloc                                    ; xrealloc
0000000000004c63         mov        rbx, rax
0000000000004c66         mov        qword [slotvec], rax                        ; slotvec

                     loc_4c6d:
0000000000004c6d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004c74         mov        edx, r12d
0000000000004c77         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004c79         sub        edx, edi
0000000000004c7b         shl        rdi, 0x4
0000000000004c7f         movsxd     rdx, edx
0000000000004c82         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004c85         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004c89         call       j_memset                                    ; memset
0000000000004c8e         mov        dword [nslots], r12d                        ; nslots

                     loc_4c95:
0000000000004c95         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004c98         shl        r15, 0x4
0000000000004c9c         sub        rsp, 0x8
0000000000004ca0         add        rbx, r15
0000000000004ca3         lea        r15, qword [rbp+8]
0000000000004ca7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004cab         mov        r11, qword [rbx]
0000000000004cae         mov        r12, qword [rbx+8]
0000000000004cb2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004cb5         or         eax, 0x1
0000000000004cb8         mov        dword [rsp+0x60+var_3C], eax
0000000000004cbc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004cbf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004cc2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004cc5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004cc7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000004cca         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004ccf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004cd2         mov        qword [rsp+0x78+var_48], r11
0000000000004cd7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004cdc         add        rsp, 0x20
0000000000004ce0         mov        r11, qword [rsp+0x58+var_48]
0000000000004ce5         cmp        r11, rax
0000000000004ce8         ja         loc_4d51

0000000000004cea         lea        rsi, qword [rax+1]
0000000000004cee         lea        rax, qword [slot0]                          ; slot0
0000000000004cf5         cmp        r12, rax
0000000000004cf8         mov        qword [rbx], rsi
0000000000004cfb         je         loc_4d0f

0000000000004cfd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004d00         mov        qword [rsp+0x58+var_48], rsi
0000000000004d05         call       j_free                                      ; free
0000000000004d0a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4d0f:
0000000000004d0f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004d12         mov        qword [rsp+0x58+var_48], rsi
0000000000004d17         call       xmalloc                                     ; xmalloc
0000000000004d1c         sub        rsp, 0x8
0000000000004d20         mov        qword [rbx+8], rax
0000000000004d24         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004d28         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004d2b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004d2e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004d31         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004d33         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004d38         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004d3b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004d40         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004d45         mov        r12, rax
0000000000004d48         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004d4d         add        rsp, 0x20

                     loc_4d51:
0000000000004d51         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004d55         mov        dword [r13], eax
0000000000004d59         add        rsp, 0x28
0000000000004d5d         mov        rax, r12
0000000000004d60         pop        rbx
0000000000004d61         pop        rbp
0000000000004d62         pop        r12
0000000000004d64         pop        r13
0000000000004d66         pop        r14
0000000000004d68         pop        r15
0000000000004d6a         ret
                        ; endp
0000000000004d6b         align      16

                     loc_4d70:
0000000000004d70         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004d72         call       xrealloc                                    ; xrealloc
0000000000004d77         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004d7f         mov        rbx, rax
0000000000004d82         mov        qword [slotvec], rax                        ; slotvec
0000000000004d89         movups     xmmword [rax], xmm0
0000000000004d8c         jmp        loc_4c6d

                     loc_4d91:
0000000000004d91         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4d96:
0000000000004d96         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d9b:
0000000000004d9b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9f28)
                     clone_quoting_options:
0000000000004da0         push       r12                                         ; Begin of unwind block (FDE at 0x9f94)
0000000000004da2         push       rbp
0000000000004da3         push       rbx
0000000000004da4         mov        rbx, rdi
0000000000004da7         call       j___errno_location                          ; __errno_location
0000000000004dac         mov        r12d, dword [rax]
0000000000004daf         mov        rbp, rax
0000000000004db2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004db9         test       rbx, rbx
0000000000004dbc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004dc1         cmove      rbx, rax
0000000000004dc5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004dc8         call       xmemdup                                     ; xmemdup
0000000000004dcd         mov        dword [rbp], r12d
0000000000004dd1         pop        rbx
0000000000004dd2         pop        rbp
0000000000004dd3         pop        r12
0000000000004dd5         ret
                        ; endp
0000000000004dd6         align      32                                          ; End of unwind block (FDE at 0x9f94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004de0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9fc0), default_quoting_options
0000000000004de7         test       rdi, rdi
0000000000004dea         cmove      rdi, rax
0000000000004dee         mov        eax, dword [rdi]
0000000000004df0         ret
                        ; endp
0000000000004df1         align      512                                         ; End of unwind block (FDE at 0x9fc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004e00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9fd4), default_quoting_options
0000000000004e07         test       rdi, rdi
0000000000004e0a         cmove      rdi, rax
0000000000004e0e         mov        dword [rdi], esi
0000000000004e10         ret
                        ; endp
0000000000004e11         align      32                                          ; End of unwind block (FDE at 0x9fd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004e20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9fe8), default_quoting_options
0000000000004e27         test       rdi, rdi
0000000000004e2a         mov        ecx, esi
0000000000004e2c         cmove      rdi, rax
0000000000004e30         mov        eax, esi
0000000000004e32         and        ecx, 0x1f
0000000000004e35         shr        al, 0x5
0000000000004e38         movzx      eax, al
0000000000004e3b         lea        rdi, qword [rdi+rax*4+8]
0000000000004e40         mov        esi, dword [rdi]
0000000000004e42         mov        eax, esi
0000000000004e44         shr        eax, cl
0000000000004e46         xor        edx, eax
0000000000004e48         and        eax, 0x1
0000000000004e4b         and        edx, 0x1
0000000000004e4e         shl        edx, cl
0000000000004e50         xor        edx, esi
0000000000004e52         mov        dword [rdi], edx
0000000000004e54         ret
                        ; endp
0000000000004e55         align      32                                          ; End of unwind block (FDE at 0x9fe8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004e60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9ffc), default_quoting_options
0000000000004e67         test       rdi, rdi
0000000000004e6a         cmove      rdi, rax
0000000000004e6e         mov        eax, dword [rdi+4]
0000000000004e71         mov        dword [rdi+4], esi
0000000000004e74         ret
                        ; endp
0000000000004e75         align      128                                         ; End of unwind block (FDE at 0x9ffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004e80         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa010), default_quoting_options
0000000000004e87         test       rdi, rdi
0000000000004e8a         cmove      rdi, rax
0000000000004e8e         test       rsi, rsi
0000000000004e91         mov        dword [rdi], 0xa
0000000000004e97         je         loc_4ea7

0000000000004e99         test       rdx, rdx
0000000000004e9c         je         loc_4ea7

0000000000004e9e         mov        qword [rdi+0x28], rsi
0000000000004ea2         mov        qword [rdi+0x30], rdx
0000000000004ea6         ret
                        ; endp

                     loc_4ea7:
0000000000004ea7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004eab         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004eb0         push       r15                                         ; End of unwind block (FDE at 0xa010), Begin of unwind block (FDE at 0xa024)
0000000000004eb2         push       r14
0000000000004eb4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004ebb         push       r13
0000000000004ebd         push       r12
0000000000004ebf         mov        r13, rdi
0000000000004ec2         push       rbp
0000000000004ec3         push       rbx
0000000000004ec4         mov        rbx, r8
0000000000004ec7         mov        r14, rsi
0000000000004eca         mov        r15, rdx
0000000000004ecd         sub        rsp, 0x18
0000000000004ed1         test       r8, r8
0000000000004ed4         cmove      rbx, rax
0000000000004ed8         mov        qword [rsp+0x48+var_40], rcx
0000000000004edd         call       j___errno_location                          ; __errno_location
0000000000004ee2         mov        r12d, dword [rax]
0000000000004ee5         mov        rbp, rax
0000000000004ee8         lea        rax, qword [rbx+8]
0000000000004eec         sub        rsp, 0x8
0000000000004ef0         mov        r9d, dword [rbx+4]
0000000000004ef4         push       qword [rbx+0x30]
0000000000004ef7         mov        r8d, dword [rbx]
0000000000004efa         push       qword [rbx+0x28]
0000000000004efd         mov        rdx, r15
0000000000004f00         push       rax
0000000000004f01         mov        rcx, qword [rsp+0x68+var_40]
0000000000004f06         mov        rsi, r14
0000000000004f09         mov        rdi, r13
0000000000004f0c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004f11         mov        dword [rbp], r12d
0000000000004f15         add        rsp, 0x38
0000000000004f19         pop        rbx
0000000000004f1a         pop        rbp
0000000000004f1b         pop        r12
0000000000004f1d         pop        r13
0000000000004f1f         pop        r14
0000000000004f21         pop        r15
0000000000004f23         ret
                        ; endp
0000000000004f24         align      16                                          ; End of unwind block (FDE at 0xa024)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004f30         push       r15                                         ; Begin of unwind block (FDE at 0xa078), CODE XREF=quotearg_alloc+5
0000000000004f32         push       r14
0000000000004f34         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004f3b         push       r13
0000000000004f3d         push       r12
0000000000004f3f         mov        r12, rdx
0000000000004f42         push       rbp
0000000000004f43         push       rbx
0000000000004f44         mov        rbx, rcx
0000000000004f47         mov        r14, rdi
0000000000004f4a         mov        r15, rsi
0000000000004f4d         sub        rsp, 0x38
0000000000004f51         test       rcx, rcx
0000000000004f54         cmove      rbx, rax
0000000000004f58         xor        ebp, ebp
0000000000004f5a         call       j___errno_location                          ; __errno_location
0000000000004f5f         test       r12, r12
0000000000004f62         mov        r13, rax
0000000000004f65         mov        eax, dword [rax]
0000000000004f67         sete       bpl
0000000000004f6b         or         ebp, dword [rbx+4]
0000000000004f6e         lea        r10, qword [rbx+8]
0000000000004f72         sub        rsp, 0x8
0000000000004f76         mov        r8d, dword [rbx]
0000000000004f79         mov        rcx, r15
0000000000004f7c         mov        dword [rsp+0x70+var_5C], eax
0000000000004f80         push       qword [rbx+0x30]
0000000000004f83         mov        rdx, r14
0000000000004f86         push       qword [rbx+0x28]
0000000000004f89         push       r10
0000000000004f8b         xor        esi, esi
0000000000004f8d         mov        r9d, ebp
0000000000004f90         xor        edi, edi
0000000000004f92         mov        qword [rsp+0x88+var_48], r10
0000000000004f97         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004f9c         lea        rsi, qword [rax+1]
0000000000004fa0         mov        qword [rsp+0x88+var_40], rax
0000000000004fa5         add        rsp, 0x20
0000000000004fa9         mov        rdi, rsi
0000000000004fac         mov        qword [rsp+0x68+var_50], rsi
0000000000004fb1         call       xmalloc                                     ; xmalloc
0000000000004fb6         mov        qword [rsp+0x68+var_58], rax
0000000000004fbb         sub        rsp, 0x8
0000000000004fbf         push       qword [rbx+0x30]
0000000000004fc2         push       qword [rbx+0x28]
0000000000004fc5         mov        r10, qword [rsp+0x80+var_48]
0000000000004fca         mov        r9d, ebp
0000000000004fcd         mov        r8d, dword [rbx]
0000000000004fd0         mov        rcx, r15
0000000000004fd3         mov        rdx, r14
0000000000004fd6         mov        rdi, rax
0000000000004fd9         push       r10
0000000000004fdb         mov        rsi, qword [rsp+0x88+var_50]
0000000000004fe0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004fe5         mov        eax, dword [rsp+0x88+var_5C]
0000000000004fe9         add        rsp, 0x20
0000000000004fed         test       r12, r12
0000000000004ff0         mov        dword [r13], eax
0000000000004ff4         je         loc_4fff

0000000000004ff6         mov        r11, qword [rsp+0x68+var_40]
0000000000004ffb         mov        qword [r12], r11

                     loc_4fff:
0000000000004fff         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005004         add        rsp, 0x38
0000000000005008         pop        rbx
0000000000005009         pop        rbp
000000000000500a         pop        r12
000000000000500c         pop        r13
000000000000500e         pop        r14
0000000000005010         pop        r15
0000000000005012         ret
                        ; endp
0000000000005013         align      32                                          ; End of unwind block (FDE at 0xa078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005020         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa0e4)
0000000000005023         xor        edx, edx
0000000000005025         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000502a         align      16                                          ; End of unwind block (FDE at 0xa0e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005030         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xa0f8), nslots
0000000000005036         push       r12
0000000000005038         mov        r12, qword [slotvec]                        ; slotvec
000000000000503f         push       rbp
0000000000005040         push       rbx
0000000000005041         cmp        eax, 0x1
0000000000005044         jle        loc_5071

0000000000005046         sub        eax, 0x2
0000000000005049         lea        rbx, qword [r12+0x18]
000000000000504e         shl        rax, 0x4
0000000000005052         lea        rbp, qword [r12+rax+0x28]
0000000000005057         nop        word [rax+rax]

                     loc_5060:
0000000000005060         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005063         add        rbx, 0x10
0000000000005067         call       j_free                                      ; free
000000000000506c         cmp        rbx, rbp
000000000000506f         jne        loc_5060

                     loc_5071:
0000000000005071         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005076         lea        rbx, qword [slot0]                          ; slot0
000000000000507d         cmp        rdi, rbx
0000000000005080         je         loc_5099

0000000000005082         call       j_free                                      ; free
0000000000005087         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005092         mov        qword [slotvec0+8], rbx                     ; 0x20b098

                     loc_5099:
0000000000005099         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000050a0         cmp        r12, rbx
00000000000050a3         je         loc_50b4

00000000000050a5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000050a8         call       j_free                                      ; free
00000000000050ad         mov        qword [slotvec], rbx                        ; slotvec

                     loc_50b4:
00000000000050b4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000050b5         mov        dword [nslots], 0x1                         ; nslots
00000000000050bf         pop        rbp
00000000000050c0         pop        r12
00000000000050c2         ret
                        ; endp
00000000000050c3         align      16                                          ; End of unwind block (FDE at 0xa0f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000050d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa124), default_quoting_options
00000000000050d7         mov        rdx, 0xffffffffffffffff
00000000000050de         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000050e3         align      16                                          ; End of unwind block (FDE at 0xa124)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000050f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa138), default_quoting_options
00000000000050f7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000050fc         align      256                                         ; End of unwind block (FDE at 0xa138)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005100         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa14c), default_quoting_options
0000000000005107         mov        rsi, rdi
000000000000510a         mov        rdx, 0xffffffffffffffff
0000000000005111         xor        edi, edi
0000000000005113         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005118         align      32                                          ; End of unwind block (FDE at 0xa14c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005120         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa160), default_quoting_options
0000000000005127         mov        rdx, rsi
000000000000512a         mov        rsi, rdi
000000000000512d         xor        edi, edi
000000000000512f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005134         align      64                                          ; End of unwind block (FDE at 0xa160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005140         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa174)
0000000000005144         mov        rax, rdx
0000000000005147         mov        rdx, qword [fs:0x28]
0000000000005150         mov        qword [rsp+0x48+var_10], rdx
0000000000005155         xor        edx, edx
0000000000005157         cmp        esi, 0xa
000000000000515a         je         loc_51c4

000000000000515c         mov        dword [rsp+0x48+var_48], esi
000000000000515f         mov        rcx, rsp
0000000000005162         mov        rdx, 0xffffffffffffffff
0000000000005169         mov        rsi, rax
000000000000516c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005175         mov        qword [rsp+0x48+var_3C], 0x0
000000000000517e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005187         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005190         mov        qword [rsp+0x48+var_24], 0x0
0000000000005199         mov        qword [rsp+0x48+var_1C], 0x0
00000000000051a2         mov        dword [rsp+0x48+var_14], 0x0
00000000000051aa         call       quotearg_n_options                          ; quotearg_n_options
00000000000051af         mov        rcx, qword [rsp+0x48+var_10]
00000000000051b4         xor        rcx, qword [fs:0x28]
00000000000051bd         jne        loc_51c9

00000000000051bf         add        rsp, 0x48
00000000000051c3         ret
                        ; endp

                     loc_51c4:
00000000000051c4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_51c9:
00000000000051c9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000051ce         align      16                                          ; End of unwind block (FDE at 0xa174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000051d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa190), CODE XREF=quotearg_style_mem+10
00000000000051d4         mov        rax, rdx
00000000000051d7         mov        rdx, rcx
00000000000051da         mov        rcx, qword [fs:0x28]
00000000000051e3         mov        qword [rsp+0x48+var_10], rcx
00000000000051e8         xor        ecx, ecx
00000000000051ea         cmp        esi, 0xa
00000000000051ed         je         loc_5250

00000000000051ef         mov        dword [rsp+0x48+var_48], esi
00000000000051f2         mov        rcx, rsp
00000000000051f5         mov        rsi, rax
00000000000051f8         mov        qword [rsp+0x48+var_44], 0x0
0000000000005201         mov        qword [rsp+0x48+var_3C], 0x0
000000000000520a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005213         mov        qword [rsp+0x48+var_2C], 0x0
000000000000521c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005225         mov        qword [rsp+0x48+var_1C], 0x0
000000000000522e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005236         call       quotearg_n_options                          ; quotearg_n_options
000000000000523b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005240         xor        rdx, qword [fs:0x28]
0000000000005249         jne        loc_5255

000000000000524b         add        rsp, 0x48
000000000000524f         ret
                        ; endp

                     loc_5250:
0000000000005250         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5255:
0000000000005255         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000525a         align      32                                          ; End of unwind block (FDE at 0xa190)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005260         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xa1ac)
0000000000005263         mov        esi, edi
0000000000005265         xor        edi, edi
0000000000005267         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000526c         align      16                                          ; End of unwind block (FDE at 0xa1ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005270         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa1c0)
0000000000005273         mov        rdx, rsi
0000000000005276         mov        esi, edi
0000000000005278         xor        edi, edi
000000000000527a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000527f         align      128                                         ; End of unwind block (FDE at 0xa1c0)

                     quotearg_char_mem:
0000000000005280         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa1d4), CODE XREF=quotearg_char+11
0000000000005284         mov        ecx, edx
0000000000005286         mov        rax, qword [fs:0x28]
000000000000528f         mov        qword [rsp+0x48+var_10], rax
0000000000005294         xor        eax, eax
0000000000005296         mov        rax, qword [qword_20b2f0]                   ; qword_20b2f0
000000000000529d         mov        r8, rsp
00000000000052a0         and        ecx, 0x1f
00000000000052a3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000052ab         mov        qword [rsp+0x48+var_18], rax
00000000000052b0         mov        eax, edx
00000000000052b2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000052b6         shr        al, 0x5
00000000000052b9         movzx      eax, al
00000000000052bc         lea        r9, qword [r8+rax*4+8]
00000000000052c1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b2d0
00000000000052c9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000052ce         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b2e0
00000000000052d6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000052db         mov        edx, dword [r9]
00000000000052de         mov        eax, edx
00000000000052e0         shr        eax, cl
00000000000052e2         not        eax
00000000000052e4         and        eax, 0x1
00000000000052e7         shl        eax, cl
00000000000052e9         mov        rcx, r8
00000000000052ec         xor        eax, edx
00000000000052ee         mov        rdx, rsi
00000000000052f1         mov        rsi, rdi
00000000000052f4         mov        dword [r9], eax
00000000000052f7         xor        edi, edi
00000000000052f9         call       quotearg_n_options                          ; quotearg_n_options
00000000000052fe         mov        rsi, qword [rsp+0x48+var_10]
0000000000005303         xor        rsi, qword [fs:0x28]
000000000000530c         jne        loc_5313

000000000000530e         add        rsp, 0x48
0000000000005312         ret
                        ; endp

                     loc_5313:
0000000000005313         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005318         align      32                                          ; End of unwind block (FDE at 0xa1d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005320         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xa1f0)
0000000000005324         mov        rsi, 0xffffffffffffffff
000000000000532b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005330         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xa1f0), Begin of unwind block (FDE at 0xa204), CODE XREF=close_stdout+101
0000000000005335         mov        rsi, 0xffffffffffffffff
000000000000533c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005341         align      16                                          ; End of unwind block (FDE at 0xa204)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005350         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xa218)
0000000000005355         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000535a         align      32                                          ; End of unwind block (FDE at 0xa218)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005360         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa22c), CODE XREF=who+1952
0000000000005364         mov        rax, rdx
0000000000005367         mov        rdx, qword [fs:0x28]
0000000000005370         mov        qword [rsp+0x48+var_10], rdx
0000000000005375         xor        edx, edx
0000000000005377         cmp        esi, 0xa
000000000000537a         je         loc_53e4

000000000000537c         mov        dword [rsp+0x48+var_48], esi
000000000000537f         mov        rcx, rsp
0000000000005382         mov        rdx, 0xffffffffffffffff
0000000000005389         mov        rsi, rax
000000000000538c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005395         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000539e         mov        qword [rsp+0x48+var_34], 0x0
00000000000053a7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000053b0         mov        qword [rsp+0x48+var_24], 0x0
00000000000053b9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000053c2         mov        dword [rsp+0x48+var_14], 0x0
00000000000053ca         call       quotearg_n_options                          ; quotearg_n_options
00000000000053cf         mov        rcx, qword [rsp+0x48+var_10]
00000000000053d4         xor        rcx, qword [fs:0x28]
00000000000053dd         jne        loc_53e9

00000000000053df         add        rsp, 0x48
00000000000053e3         ret
                        ; endp

                     loc_53e4:
00000000000053e4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_53e9:
00000000000053e9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000053ee         align      16                                          ; End of unwind block (FDE at 0xa22c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
00000000000053f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa248), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000053f4         mov        r9, rcx
00000000000053f7         mov        rcx, qword [qword_20b2f0]                   ; qword_20b2f0
00000000000053fe         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005406         mov        rax, qword [fs:0x28]
000000000000540f         mov        qword [rsp+0x48+var_10], rax
0000000000005414         xor        eax, eax
0000000000005416         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000541a         test       rsi, rsi
000000000000541d         mov        qword [rsp+0x48+var_18], rcx
0000000000005422         mov        dword [rsp+0x48+var_48], 0xa
0000000000005429         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b2d0
0000000000005431         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005436         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b2e0
000000000000543e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005443         je         loc_5477

0000000000005445         test       rdx, rdx
0000000000005448         je         loc_5477

000000000000544a         mov        qword [rsp+0x48+var_20], rsi
000000000000544f         mov        qword [rsp+0x48+var_18], rdx
0000000000005454         mov        rcx, rsp
0000000000005457         mov        rdx, r8
000000000000545a         mov        rsi, r9
000000000000545d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005462         mov        rdi, qword [rsp+0x48+var_10]
0000000000005467         xor        rdi, qword [fs:0x28]
0000000000005470         jne        loc_547c

0000000000005472         add        rsp, 0x48
0000000000005476         ret
                        ; endp

                     loc_5477:
0000000000005477         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_547c:
000000000000547c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005481         align      16                                          ; End of unwind block (FDE at 0xa248)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000005490         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xa264)
0000000000005497         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000549c         align      32                                          ; End of unwind block (FDE at 0xa264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000054a0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa278)
00000000000054a3         mov        r8, 0xffffffffffffffff
00000000000054aa         mov        rdx, rsi
00000000000054ad         mov        rsi, rdi
00000000000054b0         xor        edi, edi
00000000000054b2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000054b7         align      64                                          ; End of unwind block (FDE at 0xa278)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000054c0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xa28c)
00000000000054c3         mov        rcx, rdx
00000000000054c6         mov        rdx, rsi
00000000000054c9         mov        rsi, rdi
00000000000054cc         xor        edi, edi
00000000000054ce         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000054d3         align      32                                          ; End of unwind block (FDE at 0xa28c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000054e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa2a0), quote_quoting_options
00000000000054e7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000054ec         align      16                                          ; End of unwind block (FDE at 0xa2a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000054f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa2b4), quote_quoting_options
00000000000054f7         mov        rdx, rsi
00000000000054fa         mov        rsi, rdi
00000000000054fd         xor        edi, edi
00000000000054ff         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005504         align      16                                          ; End of unwind block (FDE at 0xa2b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005510         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa2c8), quote_quoting_options
0000000000005517         mov        rdx, 0xffffffffffffffff
000000000000551e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005523         align      16                                          ; End of unwind block (FDE at 0xa2c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005530         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa2dc), quote_quoting_options, CODE XREF=main+829
0000000000005537         mov        rsi, rdi
000000000000553a         mov        rdx, 0xffffffffffffffff
0000000000005541         xor        edi, edi
0000000000005543         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005548         align      16                                          ; End of unwind block (FDE at 0xa2dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005550         push       r15                                         ; Begin of unwind block (FDE at 0xa2f4), CODE XREF=version_etc_va+75, version_etc+161
0000000000005552         push       r14
0000000000005554         push       r13
0000000000005556         push       r12
0000000000005558         mov        r12, r9
000000000000555b         push       rbp
000000000000555c         push       rbx
000000000000555d         mov        rbp, rdi
0000000000005560         mov        rbx, r8
0000000000005563         sub        rsp, 0x28
0000000000005567         test       rsi, rsi
000000000000556a         je         loc_5688

0000000000005570         mov        r8, rdx
0000000000005573         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000557a         mov        r9, rcx
000000000000557d         xor        eax, eax
000000000000557f         mov        rcx, rsi
0000000000005582         mov        esi, 0x1
0000000000005587         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_558c:
000000000000558c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x921b, CODE XREF=version_etc_arn+337
0000000000005593         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005595         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000559a         call       j_dcgettext                                 ; dcgettext
000000000000559f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000055a6         mov        rcx, rax
00000000000055a9         mov        r8d, 0x7e3
00000000000055af         mov        esi, 0x1
00000000000055b4         mov        rdi, rbp
00000000000055b7         xor        eax, eax
00000000000055b9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000055be         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000055c5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055cc         call       j_dcgettext                                 ; dcgettext
00000000000055d1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000055d4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000055d7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000055dc         cmp        r12, 0x9
00000000000055e0         ja         loc_5920

00000000000055e6         lea        rdx, qword [switch_table_9508]              ; switch_table_9508
00000000000055ed         movsxd     rax, dword [rdx+r12*4]
00000000000055f1         add        rax, rdx
00000000000055f4         jmp        rax                                         ; switch statement using table at 0x9508, with 10 cases, 0x5600,0x5676,0x56b0,0x5708,0x5748,0x5790,0x57e0,0x5838,0x5868,0x58d0
00000000000055f6         align      512

                     loc_5600:
0000000000005600         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005604         mov        rax, qword [rbx+0x10]
0000000000005608         lea        rsi, qword [aWrittenBySSSns_9418]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000560f         mov        r8, qword [rbx+8]
0000000000005613         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005618         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000561a         mov        r13, qword [rbx+0x30]
000000000000561e         mov        r12, qword [rbx+0x28]
0000000000005622         mov        qword [rsp+0x58+var_48], r9
0000000000005627         mov        r15, qword [rbx+0x20]
000000000000562b         mov        r14, qword [rbx+0x18]
000000000000562f         mov        qword [rsp+0x58+var_58], rax
0000000000005633         mov        qword [rsp+0x58+var_50], r8
0000000000005638         mov        rbx, qword [rbx]
000000000000563b         call       j_dcgettext                                 ; dcgettext
0000000000005640         sub        rsp, 0x8

                     loc_5644:
0000000000005644         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005649         mov        rdx, rax
000000000000564c         mov        rcx, rbx
000000000000564f         mov        esi, 0x1
0000000000005654         mov        rdi, rbp
0000000000005657         xor        eax, eax
0000000000005659         push       r9
000000000000565b         push       r13
000000000000565d         push       r12
000000000000565f         push       r15
0000000000005661         push       r14
0000000000005663         mov        r9, qword [rsp+0x88+var_58]
0000000000005668         mov        r8, qword [rsp+0x88+var_50]
000000000000566d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005672         add        rsp, 0x30

                     loc_5676:
0000000000005676         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000567a         pop        rbx
000000000000567b         pop        rbp
000000000000567c         pop        r12
000000000000567e         pop        r13
0000000000005680         pop        r14
0000000000005682         pop        r15
0000000000005684         ret
                        ; endp
0000000000005685         align      8

                     loc_5688:
0000000000005688         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000568b         mov        rcx, rdx
000000000000568e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005695         mov        esi, 0x1
000000000000569a         xor        eax, eax
000000000000569c         call       j___fprintf_chk                             ; __fprintf_chk
00000000000056a1         jmp        loc_558c
00000000000056a6         align      16

                     loc_56b0:
00000000000056b0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000056b4         mov        r9, qword [rbx+0x38]
00000000000056b8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000056bf         mov        rax, qword [rbx+0x10]
00000000000056c3         mov        r8, qword [rbx+8]
00000000000056c7         mov        edx, 0x5
00000000000056cc         mov        r13, qword [rbx+0x30]
00000000000056d0         mov        r12, qword [rbx+0x28]
00000000000056d4         mov        r15, qword [rbx+0x20]
00000000000056d8         mov        r14, qword [rbx+0x18]
00000000000056dc         mov        rbx, qword [rbx]
00000000000056df         mov        qword [rsp+0x58+var_40], r10
00000000000056e4         mov        qword [rsp+0x58+var_48], r9
00000000000056e9         mov        qword [rsp+0x58+var_58], rax
00000000000056ed         mov        qword [rsp+0x58+var_50], r8

                     loc_56f2:
00000000000056f2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000056f4         call       j_dcgettext                                 ; dcgettext
00000000000056f9         mov        r10, qword [rsp+0x58+var_40]
00000000000056fe         push       r10
0000000000005700         jmp        loc_5644
0000000000005705         align      8

                     loc_5708:
0000000000005708         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000570b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005712         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005717         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005719         call       j_dcgettext                                 ; dcgettext
000000000000571e         add        rsp, 0x28
0000000000005722         mov        rcx, rbx
0000000000005725         mov        rdi, rbp
0000000000005728         pop        rbx
0000000000005729         pop        rbp
000000000000572a         pop        r12
000000000000572c         pop        r13
000000000000572e         pop        r14
0000000000005730         pop        r15
0000000000005732         mov        rdx, rax
0000000000005735         mov        esi, 0x1
000000000000573a         xor        eax, eax
000000000000573c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005741         align      8

                     loc_5748:
0000000000005748         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000574c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005753         mov        rbx, qword [rbx]
0000000000005756         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000575b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000575d         call       j_dcgettext                                 ; dcgettext
0000000000005762         add        rsp, 0x28
0000000000005766         mov        r8, r12
0000000000005769         mov        rcx, rbx
000000000000576c         mov        rdi, rbp
000000000000576f         mov        rdx, rax
0000000000005772         mov        esi, 0x1
0000000000005777         pop        rbx
0000000000005778         pop        rbp
0000000000005779         pop        r12
000000000000577b         pop        r13
000000000000577d         pop        r14
000000000000577f         pop        r15
0000000000005781         xor        eax, eax
0000000000005783         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005788         align      16

                     loc_5790:
0000000000005790         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005794         mov        r12, qword [rbx+8]
0000000000005798         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000579f         mov        rbx, qword [rbx]
00000000000057a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000057a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000057a9         call       j_dcgettext                                 ; dcgettext
00000000000057ae         add        rsp, 0x28
00000000000057b2         mov        r9, r13
00000000000057b5         mov        r8, r12
00000000000057b8         mov        rcx, rbx
00000000000057bb         mov        rdi, rbp
00000000000057be         mov        rdx, rax
00000000000057c1         pop        rbx
00000000000057c2         pop        rbp
00000000000057c3         pop        r12
00000000000057c5         pop        r13
00000000000057c7         pop        r14
00000000000057c9         pop        r15
00000000000057cb         mov        esi, 0x1
00000000000057d0         xor        eax, eax
00000000000057d2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000057d7         align      32

                     loc_57e0:
00000000000057e0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000057e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000057ec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000057ee         mov        r14, qword [rbx+0x18]
00000000000057f2         mov        r13, qword [rbx+0x10]
00000000000057f6         mov        r12, qword [rbx+8]
00000000000057fa         mov        rbx, qword [rbx]
00000000000057fd         call       j_dcgettext                                 ; dcgettext
0000000000005802         sub        rsp, 0x8

                     loc_5806:
0000000000005806         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005808         mov        rdx, rax
000000000000580b         mov        r9, r13
000000000000580e         mov        r8, r12
0000000000005811         mov        rcx, rbx
0000000000005814         mov        rdi, rbp
0000000000005817         mov        esi, 0x1
000000000000581c         xor        eax, eax
000000000000581e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005823         pop        rax
0000000000005824         pop        rdx
0000000000005825         add        rsp, 0x28
0000000000005829         pop        rbx
000000000000582a         pop        rbp
000000000000582b         pop        r12
000000000000582d         pop        r13
000000000000582f         pop        r14
0000000000005831         pop        r15
0000000000005833         ret
                        ; endp
0000000000005834         align      8

                     loc_5838:
0000000000005838         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000583c         lea        rsi, qword [aWrittenBySSSns_9398]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005843         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005848         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000584a         mov        r14, qword [rbx+0x18]
000000000000584e         mov        r13, qword [rbx+0x10]
0000000000005852         mov        r12, qword [rbx+8]
0000000000005856         mov        rbx, qword [rbx]
0000000000005859         call       j_dcgettext                                 ; dcgettext
000000000000585e         push       r15
0000000000005860         jmp        loc_5806
0000000000005862         align      8

                     loc_5868:
0000000000005868         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000586c         mov        r12, qword [rbx+0x28]
0000000000005870         lea        rsi, qword [aWrittenBySSSns_93c0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005877         mov        r15, qword [rbx+0x20]
000000000000587b         mov        r14, qword [rbx+0x18]
000000000000587f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005884         mov        r13, qword [rbx+0x10]
0000000000005888         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000588a         mov        rbx, qword [rbx]
000000000000588d         mov        qword [rsp+0x58+var_58], r8
0000000000005891         call       j_dcgettext                                 ; dcgettext
0000000000005896         sub        rsp, 0x8
000000000000589a         mov        r9, r13
000000000000589d         push       r12
000000000000589f         push       r15
00000000000058a1         push       r14

                     loc_58a3:
00000000000058a3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000058a8         mov        rcx, rbx
00000000000058ab         mov        rdx, rax
00000000000058ae         mov        rdi, rbp
00000000000058b1         mov        esi, 0x1
00000000000058b6         xor        eax, eax
00000000000058b8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000058bd         add        rsp, 0x20
00000000000058c1         add        rsp, 0x28
00000000000058c5         pop        rbx
00000000000058c6         pop        rbp
00000000000058c7         pop        r12
00000000000058c9         pop        r13
00000000000058cb         pop        r14
00000000000058cd         pop        r15
00000000000058cf         ret
                        ; endp

                     loc_58d0:
00000000000058d0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000058d4         mov        r13, qword [rbx+0x30]
00000000000058d8         lea        rsi, qword [aWrittenBySSSns_93e8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000058df         mov        r12, qword [rbx+0x28]
00000000000058e3         mov        r15, qword [rbx+0x20]
00000000000058e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058ec         mov        r14, qword [rbx+0x18]
00000000000058f0         mov        r8, qword [rbx+8]
00000000000058f4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058f6         mov        qword [rsp+0x58+var_50], r9
00000000000058fb         mov        rbx, qword [rbx]
00000000000058fe         mov        qword [rsp+0x58+var_58], r8
0000000000005902         call       j_dcgettext                                 ; dcgettext
0000000000005907         push       r13
0000000000005909         push       r12
000000000000590b         push       r15
000000000000590d         push       r14
000000000000590f         mov        r9, qword [rsp+0x78+var_50]
0000000000005914         jmp        loc_58a3
0000000000005916         align      32

                     loc_5920:
0000000000005920         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005924         mov        r9, qword [rbx+0x38]
0000000000005928         mov        edx, 0x5
000000000000592d         mov        rax, qword [rbx+0x10]
0000000000005931         mov        r8, qword [rbx+8]
0000000000005935         lea        rsi, qword [aWrittenBySSSns_9480]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000593c         mov        r13, qword [rbx+0x30]
0000000000005940         mov        r12, qword [rbx+0x28]
0000000000005944         mov        r15, qword [rbx+0x20]
0000000000005948         mov        r14, qword [rbx+0x18]
000000000000594c         mov        qword [rsp+0x58+var_40], r10
0000000000005951         mov        qword [rsp+0x58+var_48], r9
0000000000005956         mov        qword [rsp+0x58+var_58], rax
000000000000595a         mov        qword [rsp+0x58+var_50], r8
000000000000595f         mov        rbx, qword [rbx]
0000000000005962         jmp        loc_56f2
0000000000005967         align      16                                          ; End of unwind block (FDE at 0xa2f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005970         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xa408)
0000000000005973         cmp        qword [r8], 0x0
0000000000005977         je         j_version_etc_arn                           ; version_etc_arn

0000000000005979         nop        dword [rax]

                     loc_5980:
0000000000005980         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005984         cmp        qword [r8+r9*8], 0x0
0000000000005989         jne        loc_5980

                     j_version_etc_arn:        // version_etc_arn
000000000000598b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005990         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xa408), Begin of unwind block (FDE at 0xa41c)
0000000000005994         mov        r10, r8
0000000000005997         xor        r9d, r9d
000000000000599a         mov        rax, qword [fs:0x28]
00000000000059a3         mov        qword [rsp+0x68+var_10], rax
00000000000059a8         xor        eax, eax
00000000000059aa         mov        r8, rsp
00000000000059ad         nop        dword [rax]

                     loc_59b0:
00000000000059b0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000059b3         cmp        eax, 0x2f
00000000000059b6         ja         loc_59fa

00000000000059b8         mov        r11d, eax
00000000000059bb         add        r11, qword [r10+0x10]
00000000000059bf         add        eax, 0x8
00000000000059c2         mov        dword [r10], eax

                     loc_59c5:
00000000000059c5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000059c8         test       rax, rax
00000000000059cb         mov        qword [r8+r9*8], rax
00000000000059cf         je         loc_59db

00000000000059d1         add        r9, 0x1
00000000000059d5         cmp        r9, 0xa
00000000000059d9         jne        loc_59b0

                     loc_59db:
00000000000059db         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000059e0         mov        rax, qword [rsp+0x68+var_10]
00000000000059e5         xor        rax, qword [fs:0x28]
00000000000059ee         jne        loc_59f5

00000000000059f0         add        rsp, 0x68
00000000000059f4         ret
                        ; endp

                     loc_59f5:
00000000000059f5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_59fa:
00000000000059fa         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000059fe         lea        rax, qword [r11+8]
0000000000005a02         mov        qword [r10+8], rax
0000000000005a06         jmp        loc_59c5
0000000000005a08         align      16                                          ; End of unwind block (FDE at 0xa41c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005a10         push       rbp                                         ; Begin of unwind block (FDE at 0xa438), CODE XREF=main+383
0000000000005a11         push       rbx
0000000000005a12         mov        r10d, 0x20
0000000000005a18         xor        r11d, r11d
0000000000005a1b         sub        rsp, 0xb8
0000000000005a22         mov        rax, qword [fs:0x28]
0000000000005a2b         mov        qword [rsp+0xc8+var_50], rax
0000000000005a30         xor        eax, eax
0000000000005a32         lea        rax, qword [rsp+0xc8+arg_0]
0000000000005a3a         mov        qword [rsp+0xc8+var_28], r8
0000000000005a42         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000005a4a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000005a4f         mov        qword [rsp+0xc8+var_20], r9
0000000000005a57         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000005a5f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005a64         lea        rax, qword [rsp+0xc8+var_48]
0000000000005a6c         xor        r9d, r9d
0000000000005a6f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005a74         mov        rbp, rax
0000000000005a77         nop        word [rax+rax]

                     loc_5a80:
0000000000005a80         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005a84         ja         loc_5adc

0000000000005a86         mov        eax, r10d
0000000000005a89         mov        r11d, 0x1
0000000000005a8f         add        r10d, 0x8
0000000000005a93         add        rax, rbp

                     loc_5a96:
0000000000005a96         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005a99         test       rax, rax
0000000000005a9c         mov        qword [r8+r9*8], rax
0000000000005aa0         je         loc_5aac

0000000000005aa2         add        r9, 0x1
0000000000005aa6         cmp        r9, 0xa
0000000000005aaa         jne        loc_5a80

                     loc_5aac:
0000000000005aac         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000005aaf         jne        loc_5ad5

                     loc_5ab1:
0000000000005ab1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005ab6         mov        rax, qword [rsp+0xc8+var_50]
0000000000005abb         xor        rax, qword [fs:0x28]
0000000000005ac4         jne        loc_5ad0

0000000000005ac6         add        rsp, 0xb8
0000000000005acd         pop        rbx
0000000000005ace         pop        rbp
0000000000005acf         ret
                        ; endp

                     loc_5ad0:
0000000000005ad0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5ad5:
0000000000005ad5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000005ada         jmp        loc_5ab1

                     loc_5adc:
0000000000005adc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000005adf         add        rbx, 0x8
0000000000005ae3         jmp        loc_5a96
0000000000005ae5         align      16                                          ; End of unwind block (FDE at 0xa438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005af0         push       rbx                                         ; Begin of unwind block (FDE at 0xa464)
0000000000005af1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005af8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005afd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005aff         call       j_dcgettext                                 ; dcgettext
0000000000005b04         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000005b0b         mov        rsi, rax
0000000000005b0e         mov        edi, 0x1
0000000000005b13         xor        eax, eax
0000000000005b15         call       j___printf_chk                              ; __printf_chk
0000000000005b1a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005b21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b28         call       j_dcgettext                                 ; dcgettext
0000000000005b2d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005b34         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x860a
0000000000005b3b         mov        rsi, rax
0000000000005b3e         mov        edi, 0x1
0000000000005b43         xor        eax, eax
0000000000005b45         call       j___printf_chk                              ; __printf_chk
0000000000005b4a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005b51         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005b58         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b5a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b5f         call       j_dcgettext                                 ; dcgettext
0000000000005b64         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005b67         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005b6a         pop        rbx
0000000000005b6b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005b70         push       rbx                                         ; End of unwind block (FDE at 0xa464), Begin of unwind block (FDE at 0xa484), CODE XREF=print_line+204, make_id_equals_comment+40, print_user+928, print_user+1132, print_user+1197, who+1753, who+1806, who+1925, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25
0000000000005b71         mov        rbx, rdi
0000000000005b74         call       j_malloc                                    ; malloc
0000000000005b79         test       rax, rax
0000000000005b7c         jne        loc_5b83

0000000000005b7e         test       rbx, rbx
0000000000005b81         jne        loc_5b85

                     loc_5b83:
0000000000005b83         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005b84         ret
                        ; endp

                     loc_5b85:
0000000000005b85         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5b8a:
0000000000005b8a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xa484)
                     xnmalloc:
0000000000005b90         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xa4a0)
0000000000005b93         mul        rsi
0000000000005b96         mov        rdi, rax
0000000000005b99         seto       al
0000000000005b9c         test       rdi, rdi
0000000000005b9f         js         loc_5bab

0000000000005ba1         movzx      eax, al
0000000000005ba4         test       rax, rax
0000000000005ba7         jne        loc_5bab

0000000000005ba9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_5bab:
0000000000005bab         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000005baf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5bb4:
0000000000005bb4         nop                                                    ; End of unwind block (FDE at 0xa4a0)
0000000000005bb6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005bc0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xa4b4)
                        ; endp
0000000000005bc2         align      16                                          ; End of unwind block (FDE at 0xa4b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005bd0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xa4c8), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40, read_utmp+331
0000000000005bd3         push       rbx
0000000000005bd4         mov        rbx, rsi
0000000000005bd7         jne        loc_5bde

0000000000005bd9         test       rdi, rdi
0000000000005bdc         jne        loc_5bf8

                     loc_5bde:
0000000000005bde         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005be1         call       j_realloc                                   ; realloc
0000000000005be6         test       rax, rax
0000000000005be9         jne        loc_5bf0

0000000000005beb         test       rbx, rbx
0000000000005bee         jne        loc_5c01

                     loc_5bf0:
0000000000005bf0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005bf1         ret
                        ; endp
0000000000005bf2         align      8

                     loc_5bf8:
0000000000005bf8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000005bfd         xor        eax, eax
0000000000005bff         pop        rbx
0000000000005c00         ret
                        ; endp

                     loc_5c01:
0000000000005c01         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c06:
0000000000005c06         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xa4c8)
                     xnrealloc:
0000000000005c10         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xa4ec)
0000000000005c13         mul        rdx
0000000000005c16         mov        rsi, rax
0000000000005c19         seto       al
0000000000005c1c         test       rsi, rsi
0000000000005c1f         js         loc_5c2b

0000000000005c21         movzx      eax, al
0000000000005c24         test       rax, rax
0000000000005c27         jne        loc_5c2b

0000000000005c29         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_5c2b:
0000000000005c2b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000005c2f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c34:
0000000000005c34         nop                                                    ; End of unwind block (FDE at 0xa4ec)
0000000000005c36         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005c40         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xa500)
0000000000005c43         mov        r9, rdx
0000000000005c46         mov        rcx, qword [rsi]
0000000000005c49         je         loc_5c80

0000000000005c4b         xor        edx, edx
0000000000005c4d         movabs     rax, 0x5555555555555554
0000000000005c57         div        r9
0000000000005c5a         cmp        rax, rcx
0000000000005c5d         jbe        loc_5c9b

0000000000005c5f         mov        rax, rcx
0000000000005c62         shr        rax, 0x1
0000000000005c65         lea        rcx, qword [rax+rcx+1]

                     loc_5c6a:
0000000000005c6a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005c6d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005c71         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005c74         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005c79         align      128

                     loc_5c80:
0000000000005c80         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005c83         je         loc_5ca8

                     loc_5c85:
0000000000005c85         mov        rax, rcx                                    ; CODE XREF=sub_5ca4+28
0000000000005c88         mul        r9
0000000000005c8b         seto       dl
0000000000005c8e         test       rax, rax
0000000000005c91         movzx      edx, dl
0000000000005c94         js         loc_5c9b

0000000000005c96         test       rdx, rdx
0000000000005c99         je         loc_5c6a

                     loc_5c9b:
0000000000005c9b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005c9f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ca4:
0000000000005ca4         nop        dword [rax]
                        ; endp

                     loc_5ca8:
0000000000005ca8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005caa         mov        eax, 0x80
0000000000005caf         xor        r8d, r8d
0000000000005cb2         div        r9
0000000000005cb5         test       rax, rax
0000000000005cb8         sete       r8b
0000000000005cbc         lea        rcx, qword [r8+rax]
0000000000005cc0         jmp        loc_5c85
0000000000005cc2         align      16                                          ; End of unwind block (FDE at 0xa500)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005cd0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xa518)
0000000000005cd3         mov        rax, qword [rsi]
0000000000005cd6         je         loc_5d00

0000000000005cd8         movabs     rdx, 0x5555555555555553
0000000000005ce2         cmp        rax, rdx
0000000000005ce5         ja         loc_5d11

0000000000005ce7         mov        rdx, rax
0000000000005cea         shr        rdx, 0x1
0000000000005ced         lea        rax, qword [rdx+rax+1]

                     loc_5cf2:
0000000000005cf2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005cf5         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005cf8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005cfd         align      256

                     loc_5d00:
0000000000005d00         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005d03         mov        edx, 0x80
0000000000005d08         cmove      rax, rdx
0000000000005d0c         test       rax, rax
0000000000005d0f         jns        loc_5cf2

                     loc_5d11:
0000000000005d11         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005d15         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d1a:
0000000000005d1a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xa518)
                     xzalloc:
0000000000005d20         push       rbx                                         ; Begin of unwind block (FDE at 0xa530)
0000000000005d21         mov        rbx, rdi
0000000000005d24         call       xmalloc                                     ; xmalloc
0000000000005d29         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005d2c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005d2e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005d31         pop        rbx
0000000000005d32         jmp        j_memset                                    ; memset
                        ; endp
0000000000005d37         align      64                                          ; End of unwind block (FDE at 0xa530)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005d40         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xa54c)
0000000000005d43         sub        rsp, 0x8
0000000000005d47         mul        rsi
0000000000005d4a         seto       dl
0000000000005d4d         test       rax, rax
0000000000005d50         js         loc_5d69

0000000000005d52         movzx      edx, dl
0000000000005d55         test       rdx, rdx
0000000000005d58         jne        loc_5d69

0000000000005d5a         call       j_calloc                                    ; calloc
0000000000005d5f         test       rax, rax
0000000000005d62         je         loc_5d69

0000000000005d64         add        rsp, 0x8
0000000000005d68         ret
                        ; endp

                     loc_5d69:
0000000000005d69         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d6e:
0000000000005d6e         nop                                                    ; End of unwind block (FDE at 0xa54c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005d70         push       rbp                                         ; Begin of unwind block (FDE at 0xa568), CODE XREF=clone_quoting_options+40
0000000000005d71         push       rbx
0000000000005d72         mov        rbp, rdi
0000000000005d75         mov        rdi, rsi
0000000000005d78         mov        rbx, rsi
0000000000005d7b         sub        rsp, 0x8
0000000000005d7f         call       xmalloc                                     ; xmalloc
0000000000005d84         add        rsp, 0x8
0000000000005d88         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005d8b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005d8e         pop        rbx
0000000000005d8f         pop        rbp
0000000000005d90         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005d93         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005d98         align      32                                          ; End of unwind block (FDE at 0xa568)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005da0         push       rbx                                         ; Begin of unwind block (FDE at 0xa590)
0000000000005da1         mov        rbx, rdi
0000000000005da4         call       j_strlen                                    ; strlen
0000000000005da9         mov        rdi, rbx
0000000000005dac         lea        rsi, qword [rax+1]
0000000000005db0         pop        rbx
0000000000005db1         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005db3         align      64                                          ; End of unwind block (FDE at 0xa590)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005dc0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xa5ac), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=print_line+616, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, read_utmp+381
0000000000005dc7         sub        rsp, 0x8
0000000000005dcb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005dd0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005dd2         call       j_dcgettext                                 ; dcgettext
0000000000005dd7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005ddd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8ce1
0000000000005de4         mov        rcx, rax
0000000000005de7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005de9         xor        eax, eax
0000000000005deb         call       j_error                                     ; error
0000000000005df0         call       j_abort                                     ; abort
                        ; endp
0000000000005df5         align      512                                         ; End of unwind block (FDE at 0xa5ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_18: -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B8: int8_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D4: int32_t, -212
        ;    var_D8: int32_t, -216


                     rpl_asprintf:
0000000000005e00         sub        rsp, 0xd8                                   ; Begin of unwind block (FDE at 0xa5c4), CODE XREF=print_line+317
0000000000005e07         test       al, al
0000000000005e09         mov        qword [rsp+0xd8+var_A8], rdx
0000000000005e0e         mov        qword [rsp+0xd8+var_A0], rcx
0000000000005e13         mov        qword [rsp+0xd8+var_98], r8
0000000000005e18         mov        qword [rsp+0xd8+var_90], r9
0000000000005e1d         je         loc_5e56

0000000000005e1f         movaps     xmmword [rsp+0xd8+var_88], xmm0
0000000000005e24         movaps     xmmword [rsp+0xd8+var_78], xmm1
0000000000005e29         movaps     xmmword [rsp+0xd8+var_68], xmm2
0000000000005e2e         movaps     xmmword [rsp+0xd8+var_58], xmm3
0000000000005e36         movaps     xmmword [rsp+0xd8+var_48], xmm4
0000000000005e3e         movaps     xmmword [rsp+0xd8+var_38], xmm5
0000000000005e46         movaps     xmmword [rsp+0xd8+var_28], xmm6
0000000000005e4e         movaps     xmmword [rsp+0xd8+var_18], xmm7

                     loc_5e56:
0000000000005e56         mov        rax, qword [fs:0x28]                        ; CODE XREF=rpl_asprintf+29
0000000000005e5f         mov        qword [rsp+0xd8+var_C0], rax
0000000000005e64         xor        eax, eax
0000000000005e66         lea        rax, qword [rsp+0xd8+arg_0]
0000000000005e6e         mov        rdx, rsp
0000000000005e71         mov        qword [rsp+0xd8+var_D0], rax
0000000000005e76         lea        rax, qword [rsp+0xd8+var_B8]
0000000000005e7b         mov        dword [rsp+0xd8+var_D8], 0x10
0000000000005e82         mov        dword [rsp+0xd8+var_D4], 0x30
0000000000005e8a         mov        qword [rsp+0xd8+var_C8], rax
0000000000005e8f         call       rpl_vasprintf                               ; rpl_vasprintf
0000000000005e94         mov        rcx, qword [rsp+0xd8+var_C0]
0000000000005e99         xor        rcx, qword [fs:0x28]
0000000000005ea2         jne        loc_5eac

0000000000005ea4         add        rsp, 0xd8
0000000000005eab         ret
                        ; endp

                     loc_5eac:
0000000000005eac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_asprintf+162
                        ; endp
0000000000005eb1         align      64                                          ; End of unwind block (FDE at 0xa5c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005ec0         push       r13                                         ; Begin of unwind block (FDE at 0xa5e4), CODE XREF=sub_40f0+534
0000000000005ec2         push       r12
0000000000005ec4         mov        r13, rsi
0000000000005ec7         push       rbp
0000000000005ec8         push       rbx
0000000000005ec9         mov        rbx, rdi
0000000000005ecc         mov        r12, rdx
0000000000005ecf         sub        rsp, 0x18
0000000000005ed3         mov        rax, qword [fs:0x28]
0000000000005edc         mov        qword [rsp+0x38+var_30], rax
0000000000005ee1         xor        eax, eax
0000000000005ee3         lea        rax, qword [rsp+0x38+var_34]
0000000000005ee8         test       rdi, rdi
0000000000005eeb         cmove      rbx, rax
0000000000005eef         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005ef2         call       j_mbrtowc                                   ; mbrtowc
0000000000005ef7         cmp        rax, 0xfffffffffffffffd
0000000000005efb         mov        rbp, rax
0000000000005efe         jbe        loc_5f20

0000000000005f00         test       r12, r12
0000000000005f03         je         loc_5f20

0000000000005f05         xor        edi, edi
0000000000005f07         call       hard_locale                                 ; hard_locale
0000000000005f0c         test       al, al
0000000000005f0e         jne        loc_5f20

0000000000005f10         movzx      eax, byte [r13]
0000000000005f15         mov        ebp, 0x1
0000000000005f1a         mov        dword [rbx], eax
0000000000005f1c         nop        dword [rax]

                     loc_5f20:
0000000000005f20         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005f25         xor        rdx, qword [fs:0x28]
0000000000005f2e         mov        rax, rbp
0000000000005f31         jne        loc_5f3e

0000000000005f33         add        rsp, 0x18
0000000000005f37         pop        rbx
0000000000005f38         pop        rbp
0000000000005f39         pop        r12
0000000000005f3b         pop        r13
0000000000005f3d         ret
                        ; endp

                     loc_5f3e:
0000000000005f3e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005f43         align      16                                          ; End of unwind block (FDE at 0xa5e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extract_trimmed_name:
0000000000005f50         push       rbp                                         ; Begin of unwind block (FDE at 0xa624), CODE XREF=who+544
0000000000005f51         push       rbx
0000000000005f52         mov        rbp, rdi
0000000000005f55         mov        edi, 0x21
0000000000005f5a         sub        rsp, 0x8
0000000000005f5e         call       xmalloc                                     ; xmalloc
0000000000005f63         lea        rsi, qword [rbp+0x2c]                       ; argument "__src" for method j_strncpy
0000000000005f67         mov        rbx, rax
0000000000005f6a         mov        edx, 0x20                                   ; argument "__n" for method j_strncpy
0000000000005f6f         mov        rdi, rax                                    ; argument "__dest" for method j_strncpy
0000000000005f72         call       j_strncpy                                   ; strncpy
0000000000005f77         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000005f7a         mov        byte [rbx+0x20], 0x0
0000000000005f7e         call       j_strlen                                    ; strlen
0000000000005f83         add        rax, rbx
0000000000005f86         cmp        rbx, rax
0000000000005f89         jae        loc_5f91

                     loc_5f8b:
0000000000005f8b         cmp        byte [rax-1], 0x20                          ; CODE XREF=extract_trimmed_name+90
0000000000005f8f         je         loc_5fa0

                     loc_5f91:
0000000000005f91         add        rsp, 0x8                                    ; CODE XREF=extract_trimmed_name+57, extract_trimmed_name+92
0000000000005f95         mov        rax, rbx
0000000000005f98         pop        rbx
0000000000005f99         pop        rbp
0000000000005f9a         ret
                        ; endp
0000000000005f9b         align      32

                     loc_5fa0:
0000000000005fa0         sub        rax, 0x1                                    ; CODE XREF=extract_trimmed_name+63
0000000000005fa4         mov        byte [rax], 0x0
0000000000005fa7         cmp        rbx, rax
0000000000005faa         jne        loc_5f8b

0000000000005fac         jmp        loc_5f91
0000000000005fae         align      16                                          ; End of unwind block (FDE at 0xa624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     read_utmp:
0000000000005fb0         push       r15                                         ; Begin of unwind block (FDE at 0xa650), CODE XREF=who+45
0000000000005fb2         push       r14
0000000000005fb4         xor        r14d, r14d
0000000000005fb7         push       r13
0000000000005fb9         mov        r13d, ecx
0000000000005fbc         push       r12
0000000000005fbe         push       rbp
0000000000005fbf         push       rbx
0000000000005fc0         mov        r12d, r13d
0000000000005fc3         xor        ebx, ebx
0000000000005fc5         xor        ebp, ebp
0000000000005fc7         and        r12d, 0x2
0000000000005fcb         sub        rsp, 0x18
0000000000005fcf         and        r13d, 0x1
0000000000005fd3         mov        qword [rsp+0x48+var_48], rsi
0000000000005fd7         mov        qword [rsp+0x48+var_40], rdx
0000000000005fdc         call       j_utmpxname                                 ; utmpxname
0000000000005fe1         call       j_setutxent                                 ; setutxent

                     loc_5fe6:
0000000000005fe6         call       j_getutxent                                 ; getutxent, CODE XREF=read_utmp+88, read_utmp+268
0000000000005feb         test       rax, rax
0000000000005fee         mov        r15, rax
0000000000005ff1         je         loc_6061

                     loc_5ff3:
0000000000005ff3         cmp        word [r15], 0x7                             ; CODE XREF=read_utmp+175
0000000000005ff8         jne        loc_6005

0000000000005ffa         cmp        byte [r15+0x2c], 0x0
0000000000005fff         jne        loc_6090

                     loc_6005:
0000000000006005         test       r12d, r12d                                  ; CODE XREF=read_utmp+72
0000000000006008         jne        loc_5fe6

                     loc_600a:
000000000000600a         cmp        rbp, rbx                                    ; CODE XREF=read_utmp+230, read_utmp+239, read_utmp+254
000000000000600d         je         loc_60d0

                     loc_6013:
0000000000006013         lea        rax, qword [rbx+rbx*2]                      ; CODE XREF=read_utmp+277, read_utmp+339
0000000000006017         mov        rdx, qword [r15]
000000000000601a         mov        rsi, r15
000000000000601d         add        rbx, 0x1
0000000000006021         shl        rax, 0x7
0000000000006025         add        rax, r14
0000000000006028         mov        qword [rax], rdx
000000000000602b         lea        rdi, qword [rax+8]
000000000000602f         mov        rdx, qword [r15+0x178]
0000000000006036         and        rdi, 0xfffffffffffffff8
000000000000603a         mov        qword [rax+0x178], rdx
0000000000006041         sub        rax, rdi
0000000000006044         sub        rsi, rax
0000000000006047         add        eax, 0x180
000000000000604c         shr        eax, 0x3
000000000000604f         mov        ecx, eax
0000000000006051         rep movsq  qword [rdi], qword [rsi]
0000000000006054         call       j_getutxent                                 ; getutxent
0000000000006059         test       rax, rax
000000000000605c         mov        r15, rax
000000000000605f         jne        loc_5ff3

                     loc_6061:
0000000000006061         call       j_endutxent                                 ; endutxent, CODE XREF=read_utmp+65
0000000000006066         mov        rax, qword [rsp+0x48+var_48]
000000000000606a         mov        qword [rax], rbx
000000000000606d         mov        rax, qword [rsp+0x48+var_40]
0000000000006072         mov        qword [rax], r14
0000000000006075         add        rsp, 0x18
0000000000006079         xor        eax, eax
000000000000607b         pop        rbx
000000000000607c         pop        rbp
000000000000607d         pop        r12
000000000000607f         pop        r13
0000000000006081         pop        r14
0000000000006083         pop        r15
0000000000006085         ret
                        ; endp
0000000000006086         align      16

                     loc_6090:
0000000000006090         mov        edi, dword [r15+4]                          ; CODE XREF=read_utmp+79
0000000000006094         test       edi, edi
0000000000006096         jle        loc_600a

000000000000609c         test       r13b, r13b
000000000000609f         je         loc_600a

00000000000060a5         xor        esi, esi                                    ; argument "__sig" for method j_kill
00000000000060a7         call       j_kill                                      ; kill
00000000000060ac         test       eax, eax
00000000000060ae         jns        loc_600a

00000000000060b4         call       j___errno_location                          ; __errno_location
00000000000060b9         cmp        dword [rax], 0x3
00000000000060bc         je         loc_5fe6

00000000000060c2         cmp        rbp, rbx
00000000000060c5         jne        loc_6013

00000000000060cb         nop        dword [rax+rax]

                     loc_60d0:
00000000000060d0         test       r14, r14                                    ; CODE XREF=read_utmp+93
00000000000060d3         je         loc_6108

00000000000060d5         movabs     rax, 0x38e38e38e38e37
00000000000060df         cmp        rbp, rax
00000000000060e2         ja         loc_612d

00000000000060e4         mov        rax, rbp
00000000000060e7         shr        rax, 0x1
00000000000060ea         lea        rbp, qword [rbp+rax+1]

                     loc_60ef:
00000000000060ef         lea        rsi, qword [rbp+rbp*2]                      ; CODE XREF=read_utmp+379
00000000000060f4         mov        rdi, r14                                    ; argument #1 for method xrealloc
00000000000060f7         shl        rsi, 0x7                                    ; argument #2 for method xrealloc
00000000000060fb         call       xrealloc                                    ; xrealloc
0000000000006100         mov        r14, rax
0000000000006103         jmp        loc_6013

                     loc_6108:
0000000000006108         test       rbp, rbp                                    ; CODE XREF=read_utmp+291
000000000000610b         mov        eax, 0x1
0000000000006110         mov        edx, 0x180
0000000000006115         cmove      rbp, rax
0000000000006119         mov        rax, rdx
000000000000611c         xor        esi, esi
000000000000611e         mul        rbp
0000000000006121         jo         loc_6132

                     loc_6123:
0000000000006123         test       rax, rax                                    ; CODE XREF=read_utmp+391
0000000000006126         js         loc_612d

0000000000006128         test       rsi, rsi
000000000000612b         je         loc_60ef

                     loc_612d:
000000000000612d         call       xalloc_die                                  ; xalloc_die, CODE XREF=read_utmp+306, read_utmp+374
                        ; endp

                     loc_6132:
0000000000006132         mov        esi, 0x1                                    ; CODE XREF=read_utmp+369
0000000000006137         jmp        loc_6123
0000000000006139         align      64                                          ; End of unwind block (FDE at 0xa650)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     rpl_vasprintf:
0000000000006140         push       rbx                                         ; Begin of unwind block (FDE at 0xa69c), CODE XREF=rpl_asprintf+143
0000000000006141         mov        rax, rsi
0000000000006144         mov        rbx, rdi
0000000000006147         xor        edi, edi
0000000000006149         sub        rsp, 0x10
000000000000614d         mov        rcx, qword [fs:0x28]
0000000000006156         mov        qword [rsp+0x18+var_10], rcx
000000000000615b         xor        ecx, ecx
000000000000615d         mov        rsi, rsp
0000000000006160         mov        rcx, rdx
0000000000006163         mov        rdx, rax
0000000000006166         call       vasnprintf                                  ; vasnprintf
000000000000616b         test       rax, rax
000000000000616e         je         loc_61b2

0000000000006170         mov        rdx, qword [rsp+0x18+var_18]
0000000000006174         cmp        rdx, 0x7fffffff
000000000000617b         ja         loc_6198

000000000000617d         mov        qword [rbx], rax
0000000000006180         mov        eax, edx

                     loc_6182:
0000000000006182         mov        rbx, qword [rsp+0x18+var_10]                ; CODE XREF=rpl_vasprintf+112, rpl_vasprintf+119
0000000000006187         xor        rbx, qword [fs:0x28]
0000000000006190         jne        loc_61b9

0000000000006192         add        rsp, 0x10
0000000000006196         pop        rbx
0000000000006197         ret
                        ; endp

                     loc_6198:
0000000000006198         mov        rdi, rax                                    ; argument "__ptr" for method j_free, CODE XREF=rpl_vasprintf+59
000000000000619b         call       j_free                                      ; free
00000000000061a0         call       j___errno_location                          ; __errno_location
00000000000061a5         mov        dword [rax], 0x4b
00000000000061ab         mov        eax, 0xffffffff
00000000000061b0         jmp        loc_6182

                     loc_61b2:
00000000000061b2         mov        eax, 0xffffffff                             ; CODE XREF=rpl_vasprintf+46
00000000000061b7         jmp        loc_6182

                     loc_61b9:
00000000000061b9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vasprintf+80
                        ; endp
00000000000061be         align      64                                          ; End of unwind block (FDE at 0xa69c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000061c0         push       r12                                         ; Begin of unwind block (FDE at 0xa6c4), CODE XREF=close_stdout+13, close_stdout+51
00000000000061c2         push       rbp
00000000000061c3         mov        rbp, rdi
00000000000061c6         push       rbx
00000000000061c7         call       j___fpending                                ; __fpending
00000000000061cc         mov        ebx, dword [rbp]
00000000000061cf         mov        rdi, rbp
00000000000061d2         mov        r12, rax
00000000000061d5         call       rpl_fclose                                  ; rpl_fclose
00000000000061da         and        ebx, 0x20
00000000000061dd         test       ebx, ebx
00000000000061df         jne        loc_61f8

00000000000061e1         test       eax, eax
00000000000061e3         je         loc_61ef

00000000000061e5         test       r12, r12
00000000000061e8         mov        eax, 0xffffffff
00000000000061ed         je         loc_6228

                     loc_61ef:
00000000000061ef         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000061f0         pop        rbp
00000000000061f1         pop        r12
00000000000061f3         ret
                        ; endp
00000000000061f4         align      8

                     loc_61f8:
00000000000061f8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000061fa         jne        loc_6218

00000000000061fc         call       j___errno_location                          ; __errno_location
0000000000006201         mov        dword [rax], 0x0
0000000000006207         mov        eax, 0xffffffff
000000000000620c         pop        rbx
000000000000620d         pop        rbp
000000000000620e         pop        r12
0000000000006210         ret
                        ; endp
0000000000006211         align      8

                     loc_6218:
0000000000006218         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006219         mov        eax, 0xffffffff
000000000000621e         pop        rbp
000000000000621f         pop        r12
0000000000006221         ret
                        ; endp
0000000000006222         align      8

                     loc_6228:
0000000000006228         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000622d         cmp        dword [rax], 0x9
0000000000006230         pop        rbx
0000000000006231         pop        rbp
0000000000006232         pop        r12
0000000000006234         setne      al
0000000000006237         movzx      eax, al
000000000000623a         neg        eax
000000000000623c         ret
                        ; endp
000000000000623d         align      64                                          ; End of unwind block (FDE at 0xa6c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006240         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xa714), CODE XREF=gettext_quote.part.1+11
0000000000006244         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006249         call       j_nl_langinfo                               ; nl_langinfo
000000000000624e         test       rax, rax
0000000000006251         je         loc_6270

0000000000006253         cmp        byte [rax], 0x0
0000000000006256         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000625d         cmove      rax, rdx
0000000000006261         add        rsp, 0x8
0000000000006265         ret
                        ; endp
0000000000006266         align      16

                     loc_6270:
0000000000006270         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006277         add        rsp, 0x8
000000000000627b         ret
                        ; endp
000000000000627c         align      128                                         ; End of unwind block (FDE at 0xa714)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006280         push       r12                                         ; Begin of unwind block (FDE at 0xa734), CODE XREF=close_stream+21
0000000000006282         push       rbp
0000000000006283         push       rbx
0000000000006284         mov        rbx, rdi
0000000000006287         call       j_fileno                                    ; fileno
000000000000628c         test       eax, eax
000000000000628e         mov        rdi, rbx
0000000000006291         js         loc_62e7

0000000000006293         call       j___freading                                ; __freading
0000000000006298         test       eax, eax
000000000000629a         jne        loc_62c8

                     loc_629c:
000000000000629c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000629f         call       rpl_fflush                                  ; rpl_fflush
00000000000062a4         test       eax, eax
00000000000062a6         je         loc_62e4

00000000000062a8         call       j___errno_location                          ; __errno_location
00000000000062ad         mov        r12d, dword [rax]
00000000000062b0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000062b3         mov        rbp, rax
00000000000062b6         call       j_fclose                                    ; fclose
00000000000062bb         test       r12d, r12d
00000000000062be         jne        loc_62f0

                     loc_62c0:
00000000000062c0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000062c1         pop        rbp
00000000000062c2         pop        r12
00000000000062c4         ret
                        ; endp
00000000000062c5         align      8

                     loc_62c8:
00000000000062c8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000062cb         call       j_fileno                                    ; fileno
00000000000062d0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000062d2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000062d7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000062d9         call       j_lseek                                     ; lseek
00000000000062de         cmp        rax, 0xffffffffffffffff
00000000000062e2         jne        loc_629c

                     loc_62e4:
00000000000062e4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_62e7:
00000000000062e7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000062e8         pop        rbp
00000000000062e9         pop        r12
00000000000062eb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_62f0:
00000000000062f0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000062f4         mov        eax, 0xffffffff
00000000000062f9         jmp        loc_62c0
00000000000062fb         align      256                                         ; End of unwind block (FDE at 0xa734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006300         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xa76c), CODE XREF=rpl_fclose+31
0000000000006303         push       rbx
0000000000006304         mov        rbx, rdi
0000000000006307         je         loc_631a

0000000000006309         call       j___freading                                ; __freading
000000000000630e         test       eax, eax
0000000000006310         je         loc_631a

0000000000006312         test       dword [rbx], 0x100
0000000000006318         jne        loc_6328

                     loc_631a:
000000000000631a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000631d         pop        rbx
000000000000631e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006323         align      8

                     loc_6328:
0000000000006328         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000632b         mov        edx, 0x1
0000000000006330         xor        esi, esi
0000000000006332         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006337         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000633a         pop        rbx
000000000000633b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006340         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xa76c), Begin of unwind block (FDE at 0xa78c), CODE XREF=rpl_fflush+50
0000000000006344         cmp        qword [rdi+0x10], rax
0000000000006348         je         loc_6350

                     j_j_fseeko:        // fseeko
000000000000634a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000634f         align      16

                     loc_6350:
0000000000006350         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006354         cmp        qword [rdi+0x28], rax
0000000000006358         jne        j_j_fseeko                                  ; fseeko

000000000000635a         cmp        qword [rdi+0x48], 0x0
000000000000635f         jne        j_j_fseeko                                  ; fseeko

0000000000006361         push       r12
0000000000006363         push       rbp
0000000000006364         mov        r12d, edx
0000000000006367         push       rbx
0000000000006368         mov        rbp, rsi
000000000000636b         mov        rbx, rdi
000000000000636e         call       j_fileno                                    ; fileno
0000000000006373         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006376         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006379         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000637b         call       j_lseek                                     ; lseek
0000000000006380         cmp        rax, 0xffffffffffffffff
0000000000006384         je         loc_6392

0000000000006386         and        dword [rbx], 0xffffffef
0000000000006389         mov        qword [rbx+0x90], rax
0000000000006390         xor        eax, eax

                     loc_6392:
0000000000006392         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006393         pop        rbp
0000000000006394         pop        r12
0000000000006396         ret
                        ; endp
0000000000006397         align      32                                          ; End of unwind block (FDE at 0xa78c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
00000000000063a0         push       rbp                                         ; Begin of unwind block (FDE at 0xa7bc), CODE XREF=rpl_vasprintf+38
00000000000063a1         mov        rbp, rsp
00000000000063a4         push       r15
00000000000063a6         push       r14
00000000000063a8         push       r13
00000000000063aa         push       r12
00000000000063ac         lea        r14, qword [rbp+var_3B0]
00000000000063b3         push       rbx
00000000000063b4         mov        rbx, rdx
00000000000063b7         mov        r12, rcx
00000000000063ba         mov        rdx, r14
00000000000063bd         sub        rsp, 0x408
00000000000063c4         mov        qword [rbp+var_418], rsi
00000000000063cb         lea        rsi, qword [rbp+var_2C0]
00000000000063d2         mov        qword [rbp+var_3E8], rdi
00000000000063d9         mov        rdi, rbx
00000000000063dc         mov        qword [rbp+var_410], r14
00000000000063e3         mov        rax, qword [fs:0x28]
00000000000063ec         mov        qword [rbp+var_38], rax
00000000000063f0         xor        eax, eax
00000000000063f2         mov        qword [rbp+var_408], rsi
00000000000063f9         call       printf_parse                                ; printf_parse
00000000000063fe         test       eax, eax
0000000000006400         js         loc_7268

0000000000006406         mov        rsi, r14
0000000000006409         mov        rdi, r12
000000000000640c         call       printf_fetchargs                            ; printf_fetchargs
0000000000006411         test       eax, eax
0000000000006413         js         loc_72d0

0000000000006419         mov        rax, qword [rbp+var_2B0]
0000000000006420         mov        rdx, 0xffffffffffffffff
0000000000006427         add        rax, 0x7
000000000000642b         cmp        rax, 0x6
000000000000642f         cmovbe     rax, rdx
0000000000006433         add        rax, qword [rbp+var_2A8]
000000000000643a         jb         loc_6e68

0000000000006440         mov        rdi, rax
0000000000006443         xor        r8d, r8d
0000000000006446         add        rdi, 0x6
000000000000644a         setb       r8b
000000000000644e         jb         loc_6e68

0000000000006454         cmp        rdi, 0xf9f
000000000000645b         jbe        loc_65a8

0000000000006461         cmp        rdi, 0xffffffffffffffff
0000000000006465         mov        qword [rbp+var_3C8], r8
000000000000646c         je         loc_6e68

0000000000006472         call       j_malloc                                    ; malloc
0000000000006477         test       rax, rax
000000000000647a         mov        qword [rbp+var_3D8], rax
0000000000006481         je         loc_6e68

0000000000006487         mov        r8, qword [rbp+var_3C8]
000000000000648e         mov        qword [rbp+var_420], rax

                     loc_6495:
0000000000006495         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
0000000000006498         cmp        qword [rbp+var_3E8], 0x0
00000000000064a0         je         loc_64ac

00000000000064a2         mov        rax, qword [rbp+var_418]
00000000000064a9         mov        r12, qword [rax]

                     loc_64ac:
00000000000064ac         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
00000000000064b3         lea        rax, qword [rbp+var_3BC]
00000000000064ba         mov        r15, qword [rbp+var_3E8]
00000000000064c1         mov        qword [rbp+var_400], 0x0
00000000000064cc         mov        qword [rbp+var_3F0], rax
00000000000064d3         mov        rax, rbx
00000000000064d6         mov        rbx, r8
00000000000064d9         mov        rcx, qword [r13]
00000000000064dd         mov        r8, rax
00000000000064e0         cmp        rcx, r8
00000000000064e3         je         loc_6e51

                     loc_64e9:
00000000000064e9         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
00000000000064ec         mov        rax, rbx
00000000000064ef         add        rax, rcx
00000000000064f2         mov        r14, rax
00000000000064f5         jae        loc_65d8

00000000000064fb         cmp        r12, 0xffffffffffffffff
00000000000064ff         je         loc_6fd0

                     loc_6505:
0000000000006505         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_6f10, vasnprintf+2950, vasnprintf+3039, loc_7068, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_7280
000000000000650a         mov        qword [rbp+var_3C8], rax

                     loc_6511:
0000000000006511         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
0000000000006518         je         loc_6523

000000000000651a         test       r15, r15
000000000000651d         jne        loc_7000

                     loc_6523:
0000000000006523         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
000000000000652a         test       rax, rax
000000000000652d         je         loc_6537

000000000000652f         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006532         call       j_free                                      ; free

                     loc_6537:
0000000000006537         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
000000000000653e         mov        rdi, qword [rbp+var_2B8]
0000000000006545         add        rax, 0x20
0000000000006549         cmp        rdi, rax
000000000000654c         je         loc_6553

000000000000654e         call       j_free                                      ; free

                     loc_6553:
0000000000006553         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
000000000000655a         mov        rdi, qword [rbp+var_3A8]
0000000000006561         add        rax, 0x10
0000000000006565         cmp        rdi, rax
0000000000006568         je         loc_656f

000000000000656a         call       j_free                                      ; free

                     loc_656f:
000000000000656f         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
0000000000006576         xor        r15d, r15d
0000000000006579         mov        dword [rax], 0xc

                     loc_657f:
000000000000657f         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
0000000000006583         xor        rdi, qword [fs:0x28]
000000000000658c         mov        rax, r15
000000000000658f         jne        loc_7497

0000000000006595         lea        rsp, qword [rbp+var_28]
0000000000006599         pop        rbx
000000000000659a         pop        r12
000000000000659c         pop        r13
000000000000659e         pop        r14
00000000000065a0         pop        r15
00000000000065a2         pop        rbp
00000000000065a3         ret
                        ; endp
00000000000065a4         align      8

                     loc_65a8:
00000000000065a8         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
00000000000065ac         mov        qword [rbp+var_420], 0x0
00000000000065b7         and        rax, 0xfffffffffffffff0
00000000000065bb         sub        rsp, rax
00000000000065be         lea        rax, qword [rsp+0x430+var_421]
00000000000065c3         and        rax, 0xfffffffffffffff0
00000000000065c7         mov        qword [rbp+var_3D8], rax
00000000000065ce         jmp        loc_6495
00000000000065d3         align      8

                     loc_65d8:
00000000000065d8         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
00000000000065db         jae        loc_6644

00000000000065dd         test       r12, r12
00000000000065e0         jne        loc_6f10

00000000000065e6         cmp        rax, 0xc
00000000000065ea         ja         loc_6f22

00000000000065f0         mov        r12d, 0xc

                     loc_65f6:
00000000000065f6         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
00000000000065fd         sete       dl
0000000000006600         test       r15, r15
0000000000006603         je         loc_6f48

                     loc_6609:
0000000000006609         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
000000000000660b         jne        loc_6f48

0000000000006611         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006614         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006617         mov        qword [rbp+var_3D0], r8
000000000000661e         mov        qword [rbp+var_3C8], rcx
0000000000006625         call       j_realloc                                   ; realloc
000000000000662a         test       rax, rax
000000000000662d         mov        rcx, qword [rbp+var_3C8]
0000000000006634         mov        r8, qword [rbp+var_3D0]
000000000000663b         je         loc_6feb

0000000000006641         mov        r15, rax

                     loc_6644:
0000000000006644         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
0000000000006648         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
000000000000664b         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
000000000000664e         call       j_memcpy                                    ; memcpy

                     loc_6653:
0000000000006653         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
000000000000665a         cmp        qword [rbp+var_2C0], rax
0000000000006661         je         loc_731b

0000000000006667         movzx      edx, byte [r13+0x48]
000000000000666c         mov        rax, qword [r13+0x50]
0000000000006670         cmp        dl, 0x25
0000000000006673         je         loc_6e08

0000000000006679         cmp        rax, 0xffffffffffffffff
000000000000667d         je         loc_72c6

0000000000006683         mov        r8, qword [rbp+var_3A8]
000000000000668a         shl        rax, 0x5
000000000000668e         add        rax, r8
0000000000006691         cmp        dl, 0x6e
0000000000006694         mov        edi, dword [rax]
0000000000006696         mov        dword [rbp+var_3D0], edi
000000000000669c         je         loc_6e80

00000000000066a2         mov        eax, dword [r13+0x10]
00000000000066a6         mov        rdi, qword [rbp+var_3D8]
00000000000066ad         test       al, 0x1
00000000000066af         mov        byte [rdi], 0x25
00000000000066b2         lea        rbx, qword [rdi+1]
00000000000066b6         je         loc_66c7

00000000000066b8         mov        rdi, qword [rbp+var_3D8]
00000000000066bf         lea        rbx, qword [rdi+2]
00000000000066c3         mov        byte [rdi+1], 0x27

                     loc_66c7:
00000000000066c7         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
00000000000066c9         je         loc_66d2

00000000000066cb         mov        byte [rbx], 0x2d
00000000000066ce         add        rbx, 0x1

                     loc_66d2:
00000000000066d2         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
00000000000066d4         je         loc_66dd

00000000000066d6         mov        byte [rbx], 0x2b
00000000000066d9         add        rbx, 0x1

                     loc_66dd:
00000000000066dd         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
00000000000066df         je         loc_66e8

00000000000066e1         mov        byte [rbx], 0x20
00000000000066e4         add        rbx, 0x1

                     loc_66e8:
00000000000066e8         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
00000000000066ea         je         loc_66f3

00000000000066ec         mov        byte [rbx], 0x23
00000000000066ef         add        rbx, 0x1

                     loc_66f3:
00000000000066f3         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
00000000000066f5         je         loc_66fe

00000000000066f7         mov        byte [rbx], 0x49
00000000000066fa         add        rbx, 0x1

                     loc_66fe:
00000000000066fe         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
0000000000006700         je         loc_6709

0000000000006702         mov        byte [rbx], 0x30
0000000000006705         add        rbx, 0x1

                     loc_6709:
0000000000006709         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
000000000000670d         mov        rdx, qword [r13+0x20]
0000000000006711         cmp        rsi, rdx
0000000000006714         je         loc_6746

0000000000006716         mov        rcx, rdx
0000000000006719         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000000671c         mov        qword [rbp+var_3E0], r8
0000000000006723         sub        rcx, rsi
0000000000006726         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000006729         mov        qword [rbp+var_3C8], rcx
0000000000006730         call       j_memcpy                                    ; memcpy
0000000000006735         mov        rcx, qword [rbp+var_3C8]
000000000000673c         mov        r8, qword [rbp+var_3E0]
0000000000006743         add        rbx, rcx

                     loc_6746:
0000000000006746         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
000000000000674a         mov        rdx, qword [r13+0x38]
000000000000674e         cmp        rsi, rdx
0000000000006751         je         loc_6783

0000000000006753         mov        rcx, rdx
0000000000006756         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000006759         mov        qword [rbp+var_3E0], r8
0000000000006760         sub        rcx, rsi
0000000000006763         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000006766         mov        qword [rbp+var_3C8], rcx
000000000000676d         call       j_memcpy                                    ; memcpy
0000000000006772         mov        rcx, qword [rbp+var_3C8]
0000000000006779         mov        r8, qword [rbp+var_3E0]
0000000000006780         add        rbx, rcx

                     loc_6783:
0000000000006783         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
0000000000006789         cmp        edi, 0x10
000000000000678c         ja         loc_67bb

000000000000678e         mov        eax, 0x1
0000000000006793         mov        ecx, edi
0000000000006795         shl        rax, cl
0000000000006798         test       eax, 0x14180
000000000000679d         jne        loc_67b4

000000000000679f         test       ah, 0x10
00000000000067a2         jne        loc_7100

00000000000067a8         test       ah, 0x6
00000000000067ab         je         loc_67bb

00000000000067ad         mov        byte [rbx], 0x6c
00000000000067b0         add        rbx, 0x1

                     loc_67b4:
00000000000067b4         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
00000000000067b7         add        rbx, 0x1

                     loc_67bb:
00000000000067bb         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
00000000000067c0         mov        byte [rbx+1], 0x0
00000000000067c4         mov        byte [rbx], al
00000000000067c6         mov        rax, qword [r13+0x28]
00000000000067ca         cmp        rax, 0xffffffffffffffff
00000000000067ce         je         loc_6f00

00000000000067d4         shl        rax, 0x5
00000000000067d8         add        rax, r8
00000000000067db         cmp        dword [rax], 0x5
00000000000067de         jne        loc_72c6

00000000000067e4         mov        eax, dword [rax+0x10]
00000000000067e7         mov        dword [rbp+var_3E0], 0x1
00000000000067f1         mov        dword [rbp+var_3B8], eax

                     loc_67f7:
00000000000067f7         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
00000000000067fb         cmp        rax, 0xffffffffffffffff
00000000000067ff         je         loc_682c

0000000000006801         shl        rax, 0x5
0000000000006805         add        r8, rax
0000000000006808         cmp        dword [r8], 0x5
000000000000680c         jne        loc_72c6

0000000000006812         mov        eax, dword [rbp+var_3E0]
0000000000006818         mov        edx, dword [r8+0x10]
000000000000681c         mov        dword [rbp+rax*4+var_3B8], edx
0000000000006823         lea        eax, dword [rax+1]
0000000000006826         mov        dword [rbp+var_3E0], eax

                     loc_682c:
000000000000682c         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
000000000000682f         xor        edx, edx
0000000000006831         add        rax, 0x2
0000000000006835         jb         loc_749c

000000000000683b         cmp        r12, rax
000000000000683e         jae        loc_688b

0000000000006840         test       r12, r12
0000000000006843         jne        loc_7068

0000000000006849         cmp        rax, 0xc
000000000000684d         ja         loc_7080

0000000000006853         mov        r12d, 0xc

                     loc_6859:
0000000000006859         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
0000000000006860         sete       dl
0000000000006863         test       r15, r15
0000000000006866         je         loc_70b0

                     loc_686c:
000000000000686c         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
000000000000686e         jne        loc_70b0

0000000000006874         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006877         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000687a         call       j_realloc                                   ; realloc
000000000000687f         test       rax, rax
0000000000006882         je         loc_6505

0000000000006888         mov        r15, rax

                     loc_688b:
000000000000688b         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
0000000000006890         call       j___errno_location                          ; __errno_location
0000000000006895         mov        qword [rbp+var_3C8], rax
000000000000689c         mov        eax, dword [rax]
000000000000689e         mov        qword [rbp+var_3F8], rbx
00000000000068a5         mov        dword [rbp+var_424], eax
00000000000068ab         nop        dword [rax+rax]

                     loc_68b0:
00000000000068b0         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
00000000000068b7         mov        rbx, r12
00000000000068ba         mov        r10d, 0x7fffffff
00000000000068c0         sub        rbx, r14
00000000000068c3         mov        dword [rbp+var_3BC], 0xffffffff
00000000000068cd         cmp        rbx, 0x7fffffff
00000000000068d4         mov        dword [rax], 0x0
00000000000068da         mov        eax, dword [rbp+var_3D0]
00000000000068e0         cmovbe     r10, rbx
00000000000068e4         cmp        eax, 0x11
00000000000068e7         ja         loc_72c6

00000000000068ed         lea        rsi, qword [switch_table_9588]              ; switch_table_9588
00000000000068f4         movsxd     rax, dword [rsi+rax*4]
00000000000068f8         add        rax, rsi
00000000000068fb         jmp        rax                                         ; switch statement using table at 0x9588, with 18 cases, 0x6900,0x6a38,0x6b60,0x6be8,0x6c68,0x6ca8,0x6d30,0x6d60,0x72c6
00000000000068fd         align      256

                     loc_6900:
0000000000006900         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
0000000000006904         lea        rdi, qword [r15+r14]
0000000000006908         shl        rax, 0x5
000000000000690c         add        rax, qword [rbp+var_3A8]
0000000000006913         mov        r9, qword [rax+0x10]
0000000000006917         mov        eax, dword [rbp+var_3E0]
000000000000691d         cmp        eax, 0x1
0000000000006920         je         loc_6de8

0000000000006926         cmp        eax, 0x2
0000000000006929         je         loc_6dd0

000000000000692f         sub        rsp, 0x8
0000000000006933         push       qword [rbp+var_3F0]

                     loc_6939:
0000000000006939         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
0000000000006940         mov        rsi, r10
0000000000006943         mov        rcx, 0xffffffffffffffff
000000000000694a         mov        edx, 0x1
000000000000694f         xor        eax, eax
0000000000006951         mov        qword [rbp+var_430], r10
0000000000006958         call       j___snprintf_chk                            ; __snprintf_chk
000000000000695d         pop        rsi
000000000000695e         pop        rdi
000000000000695f         mov        r10, qword [rbp+var_430]

                     loc_6966:
0000000000006966         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
000000000000696c         test       ecx, ecx
000000000000696e         js         loc_6aac

                     loc_6974:
0000000000006974         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
0000000000006977         cmp        rdx, r10
000000000000697a         jae        loc_698a

000000000000697c         add        rdx, r15
000000000000697f         cmp        byte [rdx+r14], 0x0
0000000000006984         jne        loc_72c6

                     loc_698a:
000000000000698a         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
000000000000698c         jge        loc_6996

                     loc_698e:
000000000000698e         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
0000000000006994         mov        ecx, eax

                     loc_6996:
0000000000006996         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
0000000000006999         cmp        rax, r10
000000000000699c         jb         loc_71d0

00000000000069a2         cmp        rbx, 0x7ffffffe
00000000000069a9         ja         loc_71f0

00000000000069af         lea        rsi, qword [r12+r12]
00000000000069b3         lea        edx, dword [rcx+2]
00000000000069b6         test       r12, r12
00000000000069b9         mov        rax, 0xffffffffffffffff
00000000000069c0         cmovns     rax, rsi
00000000000069c4         add        rdx, r14
00000000000069c7         jb         loc_7488

00000000000069cd         cmp        rax, rdx
00000000000069d0         cmovb      rax, rdx
00000000000069d4         cmp        r12, rax
00000000000069d7         jae        loc_68b0

00000000000069dd         test       r12, r12
00000000000069e0         js         loc_6511

00000000000069e6         cmp        rsi, rax
00000000000069e9         mov        r12, rsi
00000000000069ec         jae        loc_69fb

00000000000069ee         cmp        rax, 0xffffffffffffffff
00000000000069f2         je         loc_6511

00000000000069f8         mov        r12, rax

                     loc_69fb:
00000000000069fb         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
0000000000006a02         sete       bl
0000000000006a05         test       r15, r15
0000000000006a08         je         loc_6d90

0000000000006a0e         test       bl, bl
0000000000006a10         jne        loc_6d90

0000000000006a16         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006a19         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006a1c         call       j_realloc                                   ; realloc
0000000000006a21         test       rax, rax
0000000000006a24         je         loc_6511

0000000000006a2a         mov        r15, rax
0000000000006a2d         jmp        loc_68b0
0000000000006a32         align      8

                     loc_6a38:
0000000000006a38         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
0000000000006a3c         lea        rdi, qword [r15+r14]
0000000000006a40         shl        rax, 0x5
0000000000006a44         add        rax, qword [rbp+var_3A8]
0000000000006a4b         mov        r9d, dword [rax+0x10]
0000000000006a4f         mov        eax, dword [rbp+var_3E0]
0000000000006a55         cmp        eax, 0x1
0000000000006a58         je         loc_6c90

                     loc_6a5e:
0000000000006a5e         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
0000000000006a61         je         loc_6cd8

                     loc_6a67:
0000000000006a67         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
0000000000006a6b         push       qword [rbp+var_3F0]

                     loc_6a71:
0000000000006a71         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
0000000000006a78         mov        rcx, 0xffffffffffffffff
0000000000006a7f         mov        edx, 0x1
0000000000006a84         mov        rsi, r10
0000000000006a87         xor        eax, eax
0000000000006a89         mov        qword [rbp+var_430], r10
0000000000006a90         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006a95         pop        rdx
0000000000006a96         pop        rcx
0000000000006a97         mov        ecx, dword [rbp+var_3BC]
0000000000006a9d         mov        r10, qword [rbp+var_430]
0000000000006aa4         test       ecx, ecx
0000000000006aa6         jns        loc_6974

                     loc_6aac:
0000000000006aac         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000006ab3         cmp        byte [rdi+1], 0x0
0000000000006ab7         jne        loc_6df8

0000000000006abd         test       eax, eax
0000000000006abf         jns        loc_698e

0000000000006ac5         mov        rax, qword [rbp+var_3C8]
0000000000006acc         mov        ebx, dword [rax]
0000000000006ace         test       ebx, ebx
0000000000006ad0         jne        loc_6af0

0000000000006ad2         movzx      eax, byte [r13+0x48]
0000000000006ad7         mov        ebx, 0x16
0000000000006adc         and        eax, 0xffffffef
0000000000006adf         cmp        al, 0x63
0000000000006ae1         mov        eax, 0x54
0000000000006ae6         cmove      ebx, eax
0000000000006ae9         nop        dword [rax]

                     loc_6af0:
0000000000006af0         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
0000000000006af7         je         loc_6b02

0000000000006af9         test       r15, r15
0000000000006afc         jne        loc_72ac

                     loc_6b02:
0000000000006b02         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
0000000000006b09         test       rax, rax
0000000000006b0c         je         loc_6b16

0000000000006b0e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006b11         call       j_free                                      ; free

                     loc_6b16:
0000000000006b16         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
0000000000006b1d         mov        rdi, qword [rbp+var_2B8]
0000000000006b24         add        rax, 0x20
0000000000006b28         cmp        rdi, rax
0000000000006b2b         je         loc_6b32

0000000000006b2d         call       j_free                                      ; free

                     loc_6b32:
0000000000006b32         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
0000000000006b39         mov        rdi, qword [rbp+var_3A8]
0000000000006b40         add        rax, 0x10
0000000000006b44         cmp        rdi, rax
0000000000006b47         je         loc_6b4e

0000000000006b49         call       j_free                                      ; free

                     loc_6b4e:
0000000000006b4e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
0000000000006b55         xor        r15d, r15d
0000000000006b58         mov        dword [rax], ebx
0000000000006b5a         jmp        loc_657f
0000000000006b5f         align      32

                     loc_6b60:
0000000000006b60         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
0000000000006b64         lea        rdi, qword [r15+r14]
0000000000006b68         shl        rax, 0x5
0000000000006b6c         add        rax, qword [rbp+var_3A8]
0000000000006b73         fld        tword [rax+0x10]
0000000000006b76         mov        eax, dword [rbp+var_3E0]
0000000000006b7c         cmp        eax, 0x1
0000000000006b7f         je         loc_71b0

0000000000006b85         cmp        eax, 0x2
0000000000006b88         jne        loc_7050

0000000000006b8e         mov        eax, dword [rbp+var_3B4]
0000000000006b94         sub        rsp, 0x8
0000000000006b98         push       qword [rbp+var_3F0]
0000000000006b9e         mov        r9d, dword [rbp+var_3B8]
0000000000006ba5         mov        r8, qword [rbp+var_3D8]
0000000000006bac         mov        rsi, r10
0000000000006baf         sub        rsp, 0x18
0000000000006bb3         mov        rcx, 0xffffffffffffffff
0000000000006bba         mov        edx, 0x1
0000000000006bbf         fstp       tword [rsp+0x458+var_450]
0000000000006bc3         push       rax
0000000000006bc4         xor        eax, eax
0000000000006bc6         mov        qword [rbp+var_430], r10
0000000000006bcd         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006bd2         add        rsp, 0x30
0000000000006bd6         mov        r10, qword [rbp+var_430]
0000000000006bdd         jmp        loc_6966
0000000000006be2         align      8

                     loc_6be8:
0000000000006be8         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
0000000000006bec         lea        rdi, qword [r15+r14]
0000000000006bf0         shl        rax, 0x5
0000000000006bf4         add        rax, qword [rbp+var_3A8]
0000000000006bfb         movsd      xmm0, qword [rax+0x10]
0000000000006c00         mov        eax, dword [rbp+var_3E0]
0000000000006c06         cmp        eax, 0x1
0000000000006c09         je         loc_71a0

0000000000006c0f         cmp        eax, 0x2
0000000000006c12         jne        loc_7010

0000000000006c18         mov        eax, dword [rbp+var_3B4]
0000000000006c1e         push       qword [rbp+var_3F0]
0000000000006c24         push       rax

                     loc_6c25:
0000000000006c25         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
0000000000006c2c         mov        r8, qword [rbp+var_3D8]
0000000000006c33         mov        rsi, r10
0000000000006c36         mov        rcx, 0xffffffffffffffff
0000000000006c3d         mov        edx, 0x1
0000000000006c42         mov        eax, 0x1
0000000000006c47         mov        qword [rbp+var_430], r10
0000000000006c4e         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006c53         pop        r8
0000000000006c55         mov        r10, qword [rbp+var_430]
0000000000006c5c         pop        r9
0000000000006c5e         jmp        loc_6966
0000000000006c63         align      8

                     loc_6c68:
0000000000006c68         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
0000000000006c6c         lea        rdi, qword [r15+r14]
0000000000006c70         shl        rax, 0x5
0000000000006c74         add        rax, qword [rbp+var_3A8]
0000000000006c7b         movzx      r9d, word [rax+0x10]
0000000000006c80         mov        eax, dword [rbp+var_3E0]
0000000000006c86         cmp        eax, 0x1
0000000000006c89         jne        loc_6a5e

0000000000006c8f         nop

                     loc_6c90:
0000000000006c90         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
0000000000006c96         push       r9

                     loc_6c98:
0000000000006c98         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
0000000000006c9f         jmp        loc_6a71
0000000000006ca4         align      8

                     loc_6ca8:
0000000000006ca8         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
0000000000006cac         lea        rdi, qword [r15+r14]
0000000000006cb0         shl        rax, 0x5
0000000000006cb4         add        rax, qword [rbp+var_3A8]
0000000000006cbb         movsx      r9d, word [rax+0x10]
0000000000006cc0         mov        eax, dword [rbp+var_3E0]
0000000000006cc6         cmp        eax, 0x1
0000000000006cc9         je         loc_6c90

0000000000006ccb         cmp        eax, 0x2
0000000000006cce         jne        loc_6a67

0000000000006cd4         nop        dword [rax]

                     loc_6cd8:
0000000000006cd8         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
0000000000006cdc         push       qword [rbp+var_3F0]
0000000000006ce2         push       r9

                     loc_6ce4:
0000000000006ce4         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
0000000000006cea         push       rax

                     loc_6ceb:
0000000000006ceb         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000006cf2         mov        r8, qword [rbp+var_3D8]
0000000000006cf9         mov        rsi, r10
0000000000006cfc         mov        rcx, 0xffffffffffffffff
0000000000006d03         mov        edx, 0x1
0000000000006d08         xor        eax, eax
0000000000006d0a         mov        qword [rbp+var_430], r10
0000000000006d11         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006d16         add        rsp, 0x20
0000000000006d1a         mov        r10, qword [rbp+var_430]
0000000000006d21         jmp        loc_6966
0000000000006d26         align      16

                     loc_6d30:
0000000000006d30         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
0000000000006d34         lea        rdi, qword [r15+r14]
0000000000006d38         shl        rax, 0x5
0000000000006d3c         add        rax, qword [rbp+var_3A8]
0000000000006d43         movzx      r9d, byte [rax+0x10]
0000000000006d48         mov        eax, dword [rbp+var_3E0]
0000000000006d4e         cmp        eax, 0x1
0000000000006d51         jne        loc_6a5e

0000000000006d57         jmp        loc_6c90
0000000000006d5c         align      32

                     loc_6d60:
0000000000006d60         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
0000000000006d64         lea        rdi, qword [r15+r14]
0000000000006d68         shl        rax, 0x5
0000000000006d6c         add        rax, qword [rbp+var_3A8]
0000000000006d73         movsx      r9d, byte [rax+0x10]
0000000000006d78         mov        eax, dword [rbp+var_3E0]
0000000000006d7e         cmp        eax, 0x1
0000000000006d81         jne        loc_6a5e

0000000000006d87         jmp        loc_6c90
0000000000006d8c         align      16

                     loc_6d90:
0000000000006d90         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
0000000000006d93         call       j_malloc                                    ; malloc
0000000000006d98         test       rax, rax
0000000000006d9b         mov        rcx, rax
0000000000006d9e         je         loc_6511

0000000000006da4         test       r14, r14
0000000000006da7         je         loc_6e60

0000000000006dad         test       bl, bl
0000000000006daf         je         loc_6e60

0000000000006db5         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006db8         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000006dbb         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006dbe         call       j_memcpy                                    ; memcpy
0000000000006dc3         mov        r15, rax
0000000000006dc6         jmp        loc_68b0
0000000000006dcb         align      16

                     loc_6dd0:
0000000000006dd0         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000006dd4         push       qword [rbp+var_3F0]
0000000000006dda         push       r9
0000000000006ddc         jmp        loc_6ce4
0000000000006de1         align      8

                     loc_6de8:
0000000000006de8         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
0000000000006dee         push       r9
0000000000006df0         jmp        loc_6c98
0000000000006df5         align      8

                     loc_6df8:
0000000000006df8         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
0000000000006dfc         jmp        loc_68b0
0000000000006e01         align      8

                     loc_6e08:
0000000000006e08         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
0000000000006e0c         jne        loc_72c6

0000000000006e12         mov        rax, r14
0000000000006e15         add        rax, 0x1
0000000000006e19         mov        rbx, rax
0000000000006e1c         jae        loc_6ea8

0000000000006e22         cmp        r12, 0xffffffffffffffff
0000000000006e26         jne        loc_6505

0000000000006e2c         mov        rbx, r12

                     loc_6e2f:
0000000000006e2f         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_6e34:
0000000000006e34         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
0000000000006e38         add        r13, 0x58
0000000000006e3c         mov        rcx, qword [r13]
0000000000006e40         add        qword [rbp+var_400], 0x1
0000000000006e48         cmp        rcx, r8
0000000000006e4b         jne        loc_64e9

                     loc_6e51:
0000000000006e51         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
0000000000006e54         jmp        loc_6653
0000000000006e59         align      32

                     loc_6e60:
0000000000006e60         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
0000000000006e63         jmp        loc_68b0

                     loc_6e68:
0000000000006e68         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
0000000000006e6d         mov        qword [rbp+var_3C8], rax
0000000000006e74         jmp        loc_6537
0000000000006e79         align      128

                     loc_6e80:
0000000000006e80         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
0000000000006e82         sub        edx, 0x12
0000000000006e85         cmp        edx, 0x4
0000000000006e88         ja         loc_72c6

0000000000006e8e         lea        rdi, qword [switch_table_95d0]              ; switch_table_95d0
0000000000006e95         mov        rax, qword [rax+0x10]
0000000000006e99         movsxd     rdx, dword [rdi+rdx*4]
0000000000006e9d         add        rdx, rdi
0000000000006ea0         jmp        rdx                                         ; switch statement using table at 0x95d0, with 5 cases, 0x6fe0,0x7110,0x7120,0x7130
0000000000006ea2         align      8

                     loc_6ea8:
0000000000006ea8         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
0000000000006eab         jae        loc_6e2f

0000000000006ead         test       r12, r12
0000000000006eb0         jne        loc_7280

0000000000006eb6         cmp        rax, 0xc
0000000000006eba         ja         loc_7292

0000000000006ec0         mov        r12d, 0xc

                     loc_6ec6:
0000000000006ec6         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
0000000000006ecd         sete       dl
0000000000006ed0         test       r15, r15
0000000000006ed3         je         loc_7140

0000000000006ed9         test       dl, dl
0000000000006edb         jne        loc_7140

0000000000006ee1         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006ee4         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006ee7         call       j_realloc                                   ; realloc
0000000000006eec         test       rax, rax
0000000000006eef         je         loc_6feb

0000000000006ef5         mov        r15, rax
0000000000006ef8         jmp        loc_6e2f
0000000000006efd         align      256

                     loc_6f00:
0000000000006f00         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
0000000000006f0a         jmp        loc_67f7
0000000000006f0f         align      16

                     loc_6f10:
0000000000006f10         js         loc_6505                                    ; CODE XREF=vasnprintf+576

0000000000006f16         add        r12, r12
0000000000006f19         cmp        r12, rax
0000000000006f1c         jae        loc_65f6

                     loc_6f22:
0000000000006f22         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
0000000000006f26         je         loc_6505

0000000000006f2c         cmp        r15, qword [rbp+var_3E8]
0000000000006f33         mov        r12, rax
0000000000006f36         sete       dl
0000000000006f39         test       r15, r15
0000000000006f3c         jne        loc_6609

0000000000006f42         nop        word [rax+rax]

                     loc_6f48:
0000000000006f48         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
0000000000006f4b         mov        qword [rbp+var_3E0], r8
0000000000006f52         mov        byte [rbp+var_3D0], dl
0000000000006f58         mov        qword [rbp+var_3C8], rcx
0000000000006f5f         call       j_malloc                                    ; malloc
0000000000006f64         test       rax, rax
0000000000006f67         mov        r9, rax
0000000000006f6a         mov        rcx, qword [rbp+var_3C8]
0000000000006f71         movzx      edx, byte [rbp+var_3D0]
0000000000006f78         mov        r8, qword [rbp+var_3E0]
0000000000006f7f         je         loc_6505

0000000000006f85         test       rbx, rbx
0000000000006f88         je         loc_7190

0000000000006f8e         test       dl, dl
0000000000006f90         je         loc_7190

0000000000006f96         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006f99         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000006f9c         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006f9f         mov        qword [rbp+var_3D0], r8
0000000000006fa6         mov        qword [rbp+var_3C8], rcx
0000000000006fad         call       j_memcpy                                    ; memcpy
0000000000006fb2         mov        rcx, qword [rbp+var_3C8]
0000000000006fb9         mov        r15, rax
0000000000006fbc         mov        r8, qword [rbp+var_3D0]
0000000000006fc3         jmp        loc_6644
0000000000006fc8         align      16

                     loc_6fd0:
0000000000006fd0         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000006fd3         jmp        loc_6644
0000000000006fd8         align      32

                     loc_6fe0:
0000000000006fe0         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000006fe3         mov        rbx, r14
0000000000006fe6         jmp        loc_6e34

                     loc_6feb:
0000000000006feb         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000006ff0         mov        qword [rbp+var_3C8], rax
0000000000006ff7         nop        word [rax+rax]

                     loc_7000:
0000000000007000         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+381
0000000000007003         call       j_free                                      ; free
0000000000007008         jmp        loc_6523
000000000000700d         align      16

                     loc_7010:
0000000000007010         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000007017         mov        r8, qword [rbp+var_3D8]
000000000000701e         mov        rsi, r10
0000000000007021         mov        rcx, 0xffffffffffffffff
0000000000007028         mov        edx, 0x1
000000000000702d         mov        eax, 0x1
0000000000007032         mov        qword [rbp+var_430], r10
0000000000007039         call       j___snprintf_chk                            ; __snprintf_chk
000000000000703e         mov        r10, qword [rbp+var_430]
0000000000007045         jmp        loc_6966
000000000000704a         align      16

                     loc_7050:
0000000000007050         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
0000000000007054         mov        r9, qword [rbp+var_3F0]
000000000000705b         fstp       tword [rsp+0x440+var_440]
000000000000705e         jmp        loc_6939
0000000000007063         align      8

                     loc_7068:
0000000000007068         js         loc_6505                                    ; CODE XREF=vasnprintf+1187

000000000000706e         add        r12, r12
0000000000007071         cmp        r12, rax
0000000000007074         jae        loc_6859

000000000000707a         nop        word [rax+rax]

                     loc_7080:
0000000000007080         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
0000000000007083         jne        loc_6505

0000000000007089         cmp        rax, 0xffffffffffffffff
000000000000708d         je         loc_6505

0000000000007093         cmp        r15, qword [rbp+var_3E8]
000000000000709a         mov        r12, rax
000000000000709d         sete       dl
00000000000070a0         test       r15, r15
00000000000070a3         jne        loc_686c

00000000000070a9         nop        dword [rax]

                     loc_70b0:
00000000000070b0         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
00000000000070b3         mov        byte [rbp+var_3C8], dl
00000000000070b9         call       j_malloc                                    ; malloc
00000000000070be         test       rax, rax
00000000000070c1         mov        rcx, rax
00000000000070c4         movzx      edx, byte [rbp+var_3C8]
00000000000070cb         je         loc_6505

00000000000070d1         test       r14, r14
00000000000070d4         je         loc_7270

00000000000070da         test       dl, dl
00000000000070dc         je         loc_7270

00000000000070e2         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000070e5         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
00000000000070e8         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000070eb         call       j_memcpy                                    ; memcpy
00000000000070f0         mov        r15, rax
00000000000070f3         jmp        loc_688b
00000000000070f8         align      256

                     loc_7100:
0000000000007100         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000007103         add        rbx, 0x1
0000000000007107         jmp        loc_67bb
000000000000710c         align      16

                     loc_7110:
0000000000007110         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000007113         mov        rbx, r14
0000000000007116         jmp        loc_6e34
000000000000711b         align      32

                     loc_7120:
0000000000007120         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
0000000000007123         mov        rbx, r14
0000000000007126         jmp        loc_6e34
000000000000712b         align      16

                     loc_7130:
0000000000007130         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
0000000000007134         mov        rbx, r14
0000000000007137         jmp        loc_6e34
000000000000713c         align      64

                     loc_7140:
0000000000007140         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
0000000000007143         mov        byte [rbp+var_3C8], dl
0000000000007149         call       j_malloc                                    ; malloc
000000000000714e         test       rax, rax
0000000000007151         mov        rcx, rax
0000000000007154         movzx      edx, byte [rbp+var_3C8]
000000000000715b         je         loc_6505

0000000000007161         test       r14, r14
0000000000007164         je         loc_72a4

000000000000716a         test       dl, dl
000000000000716c         je         loc_72a4

0000000000007172         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000007175         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000007178         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000717b         call       j_memcpy                                    ; memcpy
0000000000007180         mov        r15, rax
0000000000007183         jmp        loc_6e2f
0000000000007188         align      16

                     loc_7190:
0000000000007190         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
0000000000007193         jmp        loc_6644
0000000000007198         align      32

                     loc_71a0:
00000000000071a0         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
00000000000071a4         push       qword [rbp+var_3F0]
00000000000071aa         jmp        loc_6c25
00000000000071af         align      16

                     loc_71b0:
00000000000071b0         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
00000000000071b4         push       qword [rbp+var_3F0]
00000000000071ba         sub        rsp, 0x10
00000000000071be         fstp       tword [rsp+0x450+var_450]
00000000000071c1         jmp        loc_6ceb
00000000000071c6         align      16

                     loc_71d0:
00000000000071d0         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
00000000000071d7         mov        edi, dword [rbp+var_424]
00000000000071dd         movsxd     rbx, ecx
00000000000071e0         add        rbx, r14
00000000000071e3         mov        dword [rax], edi
00000000000071e5         jmp        loc_6e34
00000000000071ea         align      16

                     loc_71f0:
00000000000071f0         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
00000000000071f7         je         loc_7202

00000000000071f9         test       r15, r15
00000000000071fc         jne        loc_72b9

                     loc_7202:
0000000000007202         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
0000000000007209         test       rax, rax
000000000000720c         je         loc_7216

000000000000720e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000007211         call       j_free                                      ; free

                     loc_7216:
0000000000007216         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
000000000000721d         mov        rdi, qword [rbp+var_2B8]
0000000000007224         add        rax, 0x20
0000000000007228         cmp        rdi, rax
000000000000722b         je         loc_7232

000000000000722d         call       j_free                                      ; free

                     loc_7232:
0000000000007232         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
0000000000007239         mov        rdi, qword [rbp+var_3A8]
0000000000007240         add        rax, 0x10
0000000000007244         cmp        rdi, rax
0000000000007247         je         loc_724e

0000000000007249         call       j_free                                      ; free

                     loc_724e:
000000000000724e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
0000000000007255         xor        r15d, r15d
0000000000007258         mov        dword [rax], 0x4b
000000000000725e         jmp        loc_657f
0000000000007263         align      8

                     loc_7268:
0000000000007268         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
000000000000726b         jmp        loc_657f

                     loc_7270:
0000000000007270         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
0000000000007273         jmp        loc_688b
0000000000007278         align      128

                     loc_7280:
0000000000007280         js         loc_6505                                    ; CODE XREF=vasnprintf+2832

0000000000007286         add        r12, r12
0000000000007289         cmp        r12, rax
000000000000728c         jae        loc_6ec6

                     loc_7292:
0000000000007292         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
0000000000007296         je         loc_6505

000000000000729c         mov        r12, rax
000000000000729f         jmp        loc_6ec6

                     loc_72a4:
00000000000072a4         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
00000000000072a7         jmp        loc_6e2f

                     loc_72ac:
00000000000072ac         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+1884
00000000000072af         call       j_free                                      ; free
00000000000072b4         jmp        loc_6b02

                     loc_72b9:
00000000000072b9         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+3676
00000000000072bc         call       j_free                                      ; free
00000000000072c1         jmp        loc_7202

                     loc_72c6:
00000000000072c6         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
00000000000072cb         align      16

                     loc_72d0:
00000000000072d0         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
00000000000072d7         mov        rdi, qword [rbp+var_2B8]
00000000000072de         add        rax, 0x20
00000000000072e2         cmp        rdi, rax
00000000000072e5         je         loc_72ec

00000000000072e7         call       j_free                                      ; free

                     loc_72ec:
00000000000072ec         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
00000000000072f3         mov        rdi, qword [rbp+var_3A8]
00000000000072fa         add        rax, 0x10
00000000000072fe         cmp        rdi, rax
0000000000007301         je         loc_7308

0000000000007303         call       j_free                                      ; free

                     loc_7308:
0000000000007308         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
000000000000730d         xor        r15d, r15d
0000000000007310         mov        dword [rax], 0x16
0000000000007316         jmp        loc_657f

                     loc_731b:
000000000000731b         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
000000000000731e         xor        eax, eax
0000000000007320         add        rbx, 0x1
0000000000007324         jb         loc_7430

000000000000732a         cmp        r12, rbx
000000000000732d         jae        loc_737c

000000000000732f         test       r12, r12
0000000000007332         jne        loc_7469

0000000000007338         cmp        rbx, 0xc
000000000000733c         ja         loc_744e

0000000000007342         mov        r12d, 0xc

                     loc_7348:
0000000000007348         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
000000000000734f         sete       r13b
0000000000007353         test       r15, r15
0000000000007356         je         loc_73fc

000000000000735c         test       r13b, r13b
000000000000735f         jne        loc_73fc

0000000000007365         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000007368         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000736b         call       j_realloc                                   ; realloc
0000000000007370         test       rax, rax
0000000000007373         je         loc_6feb

0000000000007379         mov        r15, rax

                     loc_737c:
000000000000737c         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
0000000000007383         mov        byte [r15+r14], 0x0
0000000000007388         je         loc_73a1

000000000000738a         cmp        r12, rbx
000000000000738d         jbe        loc_73a1

000000000000738f         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000007392         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
0000000000007395         call       j_realloc                                   ; realloc
000000000000739a         test       rax, rax
000000000000739d         cmovne     r15, rax

                     loc_73a1:
00000000000073a1         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
00000000000073a8         test       rax, rax
00000000000073ab         je         loc_73b5

00000000000073ad         mov        rdi, rax                                    ; argument "__ptr" for method j_free
00000000000073b0         call       j_free                                      ; free

                     loc_73b5:
00000000000073b5         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
00000000000073bc         mov        rdi, qword [rbp+var_2B8]
00000000000073c3         add        rax, 0x20
00000000000073c7         cmp        rdi, rax
00000000000073ca         je         loc_73d1

00000000000073cc         call       j_free                                      ; free

                     loc_73d1:
00000000000073d1         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
00000000000073d8         mov        rdi, qword [rbp+var_3A8]
00000000000073df         add        rax, 0x10
00000000000073e3         cmp        rdi, rax
00000000000073e6         je         loc_73ed

00000000000073e8         call       j_free                                      ; free

                     loc_73ed:
00000000000073ed         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
00000000000073f4         mov        qword [rax], r14
00000000000073f7         jmp        loc_657f

                     loc_73fc:
00000000000073fc         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
00000000000073ff         call       j_malloc                                    ; malloc
0000000000007404         test       rax, rax
0000000000007407         mov        rcx, rax
000000000000740a         je         loc_6505

0000000000007410         test       r14, r14
0000000000007413         je         loc_7480

0000000000007415         test       r13b, r13b
0000000000007418         je         loc_7480

000000000000741a         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000741d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000007420         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000007423         call       j_memcpy                                    ; memcpy
0000000000007428         mov        r15, rax
000000000000742b         jmp        loc_737c

                     loc_7430:
0000000000007430         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
0000000000007434         mov        eax, 0x1
0000000000007439         je         loc_737c

000000000000743f         test       r12, r12
0000000000007442         je         loc_6505

0000000000007448         js         loc_6505

                     loc_744e:
000000000000744e         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
0000000000007451         jne        loc_6505

0000000000007457         cmp        rbx, 0xffffffffffffffff
000000000000745b         je         loc_6505

0000000000007461         mov        r12, rbx
0000000000007464         jmp        loc_7348

                     loc_7469:
0000000000007469         js         loc_6505                                    ; CODE XREF=vasnprintf+3986

000000000000746f         add        r12, r12
0000000000007472         cmp        r12, rbx
0000000000007475         jae        loc_7348

000000000000747b         jmp        loc_744e
000000000000747d         align      128

                     loc_7480:
0000000000007480         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
0000000000007483         jmp        loc_737c

                     loc_7488:
0000000000007488         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
000000000000748c         je         loc_68b0

0000000000007492         jmp        loc_6511

                     loc_7497:
0000000000007497         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_749c:
000000000000749c         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
00000000000074a0         mov        edx, 0x1
00000000000074a5         je         loc_688b

00000000000074ab         test       r12, r12
00000000000074ae         je         loc_6505

00000000000074b4         jns        loc_7080

00000000000074ba         jmp        loc_6505
00000000000074bf         align      64                                          ; End of unwind block (FDE at 0xa7bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
00000000000074c0         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0xa7ec), CODE XREF=vasnprintf+108
00000000000074c4         mov        rax, qword [rsi+8]
00000000000074c8         je         loc_752d

00000000000074ca         lea        r8, qword [aNull+12]                        ; 0x95f0
00000000000074d1         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
00000000000074d8         lea        r9, qword [aNull]                           ; "(NULL)"
00000000000074df         xor        ecx, ecx
00000000000074e1         nop        dword [rax]
00000000000074e8         cmp        dword [rax], 0x16
00000000000074eb         ja         loc_7530

00000000000074ed         mov        edx, dword [rax]
00000000000074ef         movsxd     rdx, dword [r8+rdx*4]
00000000000074f3         add        rdx, r8
00000000000074f6         jmp        rdx
                        ; endp
00000000000074f8         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7500:
0000000000007500         mov        rdx, qword [rdi+8]
0000000000007504         add        rdx, 0xf
0000000000007508         and        rdx, 0xfffffffffffffff0
000000000000750c         lea        r11, qword [rdx+0x10]
0000000000007510         mov        qword [rdi+8], r11
0000000000007514         fld        tword [rdx]
0000000000007516         fstp       tword [rax+0x10]
0000000000007519         nop        dword [rax]
0000000000007520         add        rcx, 0x1                                    ; CODE XREF=sub_7536+137, sub_7536+183
0000000000007524         add        rax, 0x20
0000000000007528         cmp        qword [rsi], rcx
000000000000752b         ja         printf_fetchargs+40
                        ; endp

                     loc_752d:
000000000000752d         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
000000000000752f         ret
                        ; endp

                     loc_7530:
0000000000007530         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
0000000000007535         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7536:
0000000000007536         mov        r11d, dword [rdi]
0000000000007539         cmp        r11d, 0x2f
000000000000753d         ja         loc_767a

0000000000007543         mov        edx, r11d
0000000000007546         add        rdx, qword [rdi+0x10]
000000000000754a         add        r11d, 0x8
000000000000754e         mov        dword [rdi], r11d

                     loc_7551:
0000000000007551         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7620+102
0000000000007554         mov        qword [rax+0x10], rdx
0000000000007558         jmp        sub_7500+32
                        ; endp
000000000000755a         mov        r11d, dword [rdi]
000000000000755d         cmp        r11d, 0x2f
0000000000007561         ja         sub_769c                                    ; sub_769c
0000000000007567         mov        edx, r11d
000000000000756a         add        rdx, qword [rdi+0x10]
000000000000756e         add        r11d, 0x8
0000000000007572         mov        dword [rdi], r11d

                     loc_7575:
0000000000007575         mov        edx, dword [rdx]                            ; CODE XREF=sub_769c+12
0000000000007577         mov        dword [rax+0x10], edx
000000000000757a         jmp        sub_7500+32
                        ; endp
000000000000757c         mov        r11d, dword [rdi]
000000000000757f         cmp        r11d, 0x2f
0000000000007583         ja         sub_768b                                    ; sub_768b
0000000000007589         mov        edx, r11d
000000000000758c         add        rdx, qword [rdi+0x10]
0000000000007590         add        r11d, 0x8
0000000000007594         mov        dword [rdi], r11d

                     loc_7597:
0000000000007597         mov        edx, dword [rdx]                            ; CODE XREF=sub_768b+12
0000000000007599         mov        byte [rax+0x10], dl
000000000000759c         jmp        sub_7500+32
                        ; endp
000000000000759e         mov        r11d, dword [rdi]
00000000000075a1         cmp        r11d, 0x2f
00000000000075a5         ja         sub_7620+42
00000000000075ab         mov        edx, r11d
00000000000075ae         add        rdx, qword [rdi+0x10]
00000000000075b2         add        r11d, 0x8
00000000000075b6         mov        dword [rdi], r11d
00000000000075b9         mov        edx, dword [rdx]                            ; CODE XREF=sub_7620+54
00000000000075bb         mov        word [rax+0x10], dx
00000000000075bf         jmp        sub_7500+32
00000000000075c4         mov        r11d, dword [rdi]
00000000000075c7         cmp        r11d, 0x2f
00000000000075cb         ja         sub_7620+59
00000000000075d1         mov        edx, r11d
00000000000075d4         add        rdx, qword [rdi+0x10]
00000000000075d8         add        r11d, 0x8
00000000000075dc         mov        dword [rdi], r11d
00000000000075df         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7620+71
00000000000075e2         test       rdx, rdx
00000000000075e5         cmove      rdx, r9
00000000000075e9         mov        qword [rax+0x10], rdx
00000000000075ed         jmp        sub_7500+32
00000000000075f2         mov        r11d, dword [rdi+4]
00000000000075f6         cmp        r11d, 0xaf
00000000000075fd         ja         sub_76ad                                    ; sub_76ad
0000000000007603         mov        edx, r11d
0000000000007606         add        rdx, qword [rdi+0x10]
000000000000760a         add        r11d, 0x10
000000000000760e         mov        dword [rdi+4], r11d

                     loc_7612:
0000000000007612         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_76ad+12
0000000000007616         movsd      qword [rax+0x10], xmm0
000000000000761b         jmp        sub_7500+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7620:
0000000000007620         mov        r11d, dword [rdi]
0000000000007623         cmp        r11d, 0x2f
0000000000007627         ja         loc_766c

0000000000007629         mov        edx, r11d
000000000000762c         add        rdx, qword [rdi+0x10]
0000000000007630         add        r11d, 0x8
0000000000007634         mov        dword [rdi], r11d

                     loc_7637:
0000000000007637         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7620+88
000000000000763a         test       rdx, rdx
000000000000763d         cmove      rdx, r10
0000000000007641         mov        qword [rax+0x10], rdx
0000000000007645         jmp        sub_7500+32
                        ; endp
000000000000764a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+111
000000000000764e         lea        r11, qword [rdx+8]
0000000000007652         mov        qword [rdi+8], r11
0000000000007656         jmp        sub_7536+131
000000000000765b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+149
000000000000765f         lea        r11, qword [rdx+8]
0000000000007663         mov        qword [rdi+8], r11
0000000000007667         jmp        sub_7536+169

                     loc_766c:
000000000000766c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7620+7
0000000000007670         lea        r11, qword [rdx+8]
0000000000007674         mov        qword [rdi+8], r11
0000000000007678         jmp        loc_7637

                     loc_767a:
000000000000767a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+7
000000000000767e         lea        r11, qword [rdx+8]
0000000000007682         mov        qword [rdi+8], r11
0000000000007686         jmp        loc_7551


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_768b:
000000000000768b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+77
000000000000768f         lea        r11, qword [rdx+8]
0000000000007693         mov        qword [rdi+8], r11
0000000000007697         jmp        loc_7597


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_769c:
000000000000769c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+43
00000000000076a0         lea        r11, qword [rdx+8]
00000000000076a4         mov        qword [rdi+8], r11
00000000000076a8         jmp        loc_7575


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_76ad:
00000000000076ad         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7536+199
00000000000076b1         lea        r11, qword [rdx+8]
00000000000076b5         mov        qword [rdi+8], r11
00000000000076b9         jmp        loc_7612


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_76be:
00000000000076be         nop                                                    ; End of unwind block (FDE at 0xa7ec)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
00000000000076c0         push       r15                                         ; Begin of unwind block (FDE at 0xa804), CODE XREF=vasnprintf+89
00000000000076c2         push       r14
00000000000076c4         lea        rcx, qword [rsi+0x20]
00000000000076c8         push       r13
00000000000076ca         push       r12
00000000000076cc         lea        rax, qword [rdx+0x10]
00000000000076d0         push       rbp
00000000000076d1         push       rbx
00000000000076d2         mov        r14, rsi
00000000000076d5         mov        r15, rdx
00000000000076d8         xor        ebx, ebx
00000000000076da         mov        r9d, 0x7
00000000000076e0         sub        rsp, 0x58
00000000000076e4         mov        r10d, 0x7
00000000000076ea         mov        qword [rsi], 0x0
00000000000076f1         mov        qword [rsi+8], rcx
00000000000076f5         mov        qword [rsp+0x88+var_60], rcx
00000000000076fa         mov        r8, 0xffffffffffffffff
0000000000007701         mov        qword [rdx], 0x0
0000000000007708         mov        qword [rsp+0x88+var_80], rax
000000000000770d         mov        qword [rdx+8], rax
0000000000007711         mov        qword [rsp+0x88+var_70], 0x0
000000000000771a         mov        qword [rsp+0x88+var_78], 0x0
0000000000007723         mov        qword [rsp+0x88+var_68], 0x0
000000000000772c         jmp        loc_773b
000000000000772e         align      16

                     loc_7730:
0000000000007730         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
0000000000007732         lea        rbp, qword [rdi+1]
0000000000007736         je         loc_7778

                     loc_7738:
0000000000007738         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_773b:
000000000000773b         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
000000000000773e         test       al, al
0000000000007740         jne        loc_7730

0000000000007742         lea        rax, qword [rbx+rbx*4]
0000000000007746         lea        rax, qword [rbx+rax*2]
000000000000774a         mov        qword [rcx+rax*8], rdi
000000000000774e         mov        rax, qword [rsp+0x88+var_78]
0000000000007753         mov        qword [r14+0x10], rax
0000000000007757         mov        rax, qword [rsp+0x88+var_70]
000000000000775c         mov        qword [r14+0x18], rax
0000000000007760         xor        eax, eax

                     loc_7762:
0000000000007762         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
0000000000007766         pop        rbx
0000000000007767         pop        rbp
0000000000007768         pop        r12
000000000000776a         pop        r13
000000000000776c         pop        r14
000000000000776e         pop        r15
0000000000007770         ret
                        ; endp
0000000000007771         align      8

                     loc_7778:
0000000000007778         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
000000000000777c         mov        r13, r8
000000000000777f         lea        rax, qword [rbx+rax*2]
0000000000007783         lea        r12, qword [rcx+rax*8]
0000000000007787         mov        qword [r12], rdi
000000000000778b         mov        dword [r12+0x10], 0x0
0000000000007794         mov        qword [r12+0x18], 0x0
000000000000779d         mov        qword [r12+0x20], 0x0
00000000000077a6         mov        qword [r12+0x28], r8
00000000000077ab         mov        qword [r12+0x30], 0x0
00000000000077b4         mov        qword [r12+0x38], 0x0
00000000000077bd         mov        qword [r12+0x40], r8
00000000000077c2         mov        qword [r12+0x50], r8
00000000000077c7         movzx      ebx, byte [rdi+1]
00000000000077cb         lea        eax, dword [rbx-0x30]
00000000000077ce         cmp        al, 0x9
00000000000077d0         ja         loc_780e

00000000000077d2         jmp        loc_7c0a
00000000000077d7         align      32

                     loc_77e0:
00000000000077e0         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
00000000000077e3         je         loc_7828

00000000000077e5         cmp        bl, 0x2b
00000000000077e8         je         loc_7830

00000000000077ea         cmp        bl, 0x20
00000000000077ed         je         loc_7840

00000000000077ef         cmp        bl, 0x23
00000000000077f2         je         loc_7850

00000000000077f4         cmp        bl, 0x30
00000000000077f7         je         loc_7860

00000000000077f9         cmp        bl, 0x49
00000000000077fc         jne        loc_7870

00000000000077fe         or         dword [r12+0x10], 0x40
0000000000007804         nop        dword [rax]

                     loc_7808:
0000000000007808         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
000000000000780b         mov        rbp, rax

                     loc_780e:
000000000000780e         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
0000000000007812         cmp        bl, 0x27
0000000000007815         mov        rdx, rax
0000000000007818         jne        loc_77e0

000000000000781a         or         dword [r12+0x10], 0x1
0000000000007820         jmp        loc_7808
0000000000007822         align      8

                     loc_7828:
0000000000007828         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
000000000000782e         jmp        loc_7808

                     loc_7830:
0000000000007830         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
0000000000007836         jmp        loc_7808
0000000000007838         align      64

                     loc_7840:
0000000000007840         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
0000000000007846         jmp        loc_7808
0000000000007848         align      16

                     loc_7850:
0000000000007850         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
0000000000007856         jmp        loc_7808
0000000000007858         align      32

                     loc_7860:
0000000000007860         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
0000000000007866         jmp        loc_7808
0000000000007868         align      16

                     loc_7870:
0000000000007870         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
0000000000007873         je         loc_7a29

0000000000007879         lea        ecx, dword [rbx-0x30]
000000000000787c         cmp        cl, 0x9
000000000000787f         jbe        loc_7c97

                     loc_7885:
0000000000007885         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
0000000000007888         je         loc_7b5f

                     loc_788e:
000000000000788e         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
0000000000007890         mov        esi, 0x1
0000000000007895         jmp        loc_78c7
0000000000007897         align      32

                     loc_78a0:
00000000000078a0         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
00000000000078a3         je         loc_78e0

00000000000078a5         cmp        bl, 0x6c
00000000000078a8         je         loc_78c0

00000000000078aa         cmp        bl, 0x6a
00000000000078ad         je         loc_78c0

00000000000078af         mov        edx, ebx
00000000000078b1         and        edx, 0xffffffdf
00000000000078b4         cmp        dl, 0x5a
00000000000078b7         je         loc_78c0

00000000000078b9         cmp        bl, 0x74
00000000000078bc         jne        loc_78e8

00000000000078be         nop

                     loc_78c0:
00000000000078c0         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_78c3:
00000000000078c3         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_78c7:
00000000000078c7         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
00000000000078cb         cmp        bl, 0x68
00000000000078ce         jne        loc_78a0

00000000000078d0         mov        ecx, eax
00000000000078d2         mov        edx, esi
00000000000078d4         and        ecx, 0x1
00000000000078d7         shl        edx, cl
00000000000078d9         or         eax, edx
00000000000078db         jmp        loc_78c3
00000000000078dd         align      32

                     loc_78e0:
00000000000078e0         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
00000000000078e3         jmp        loc_78c3
00000000000078e5         align      8

                     loc_78e8:
00000000000078e8         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
00000000000078eb         cmp        dl, 0x53
00000000000078ee         ja         loc_7f0b

00000000000078f4         lea        rcx, qword [switch_table_966c]              ; switch_table_966c
00000000000078fb         movzx      edx, dl
00000000000078fe         movsxd     rdx, dword [rcx+rdx*4]
0000000000007902         add        rdx, rcx
0000000000007905         jmp        rdx                                         ; switch statement using table at 0x966c, with 84 cases, 0x7907,0x797b,0x7dbc,0x7e08,0x7e1b,0x7e68,0x7e7b,0x7e9c,0x7eac,0x7f00,0x7f0b

                     loc_7907:
0000000000007907         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
000000000000790d         mov        ebx, 0x73
0000000000007912         nop        word [rax+rax]

                     loc_7918:
0000000000007918         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
000000000000791c         je         loc_7fd7

0000000000007922         mov        qword [r12+0x50], r13

                     loc_7927:
0000000000007927         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
000000000000792a         mov        rcx, qword [r15+8]
000000000000792e         jbe        loc_7f50

                     loc_7934:
0000000000007934         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
0000000000007937         mov        rdx, rax
000000000000793a         shl        rdx, 0x5
000000000000793e         add        rdx, rcx
0000000000007941         cmp        rax, r13
0000000000007944         ja         loc_7966

0000000000007946         nop        word [cs:rax+rax]

                     loc_7950:
0000000000007950         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
0000000000007954         mov        dword [rdx], 0x0
000000000000795a         add        rdx, 0x20
000000000000795e         cmp        rax, r13
0000000000007961         jbe        loc_7950

0000000000007963         mov        qword [r15], rax

                     loc_7966:
0000000000007966         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
000000000000796a         lea        rax, qword [rcx+r13]
000000000000796e         mov        edx, dword [rax]
0000000000007970         test       edx, edx
0000000000007972         jne        loc_7f43

0000000000007978         mov        dword [rax], r11d

                     loc_797b:
000000000000797b         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
0000000000007980         mov        rax, qword [r14]
0000000000007983         mov        qword [r12+8], rbp
0000000000007988         lea        rbx, qword [rax+1]
000000000000798c         cmp        r10, rbx
000000000000798f         mov        qword [r14], rbx
0000000000007992         ja         loc_7a20

0000000000007998         test       r10, r10
000000000000799b         js         loc_8347

00000000000079a1         add        r10, r10
00000000000079a4         movabs     rax, 0x2e8ba2e8ba2e8ba
00000000000079ae         cmp        r10, rax
00000000000079b1         ja         loc_8347

00000000000079b7         lea        rax, qword [r10+r10*4]
00000000000079bb         mov        rdi, qword [r14+8]
00000000000079bf         cmp        qword [rsp+0x88+var_60], rdi
00000000000079c4         mov        qword [rsp+0x88+var_48], r9
00000000000079c9         mov        qword [rsp+0x88+var_50], r10
00000000000079ce         lea        rax, qword [r10+rax*2]
00000000000079d2         mov        qword [rsp+0x88+var_58], r8
00000000000079d7         lea        rsi, qword [rax*8]
00000000000079df         je         loc_809d

00000000000079e5         call       j_realloc                                   ; realloc
00000000000079ea         test       rax, rax
00000000000079ed         mov        rcx, rax
00000000000079f0         mov        r8, qword [rsp+0x88+var_58]
00000000000079f5         mov        r10, qword [rsp+0x88+var_50]
00000000000079fa         mov        r9, qword [rsp+0x88+var_48]
00000000000079ff         je         loc_8347

0000000000007a05         mov        rax, qword [rsp+0x88+var_60]
0000000000007a0a         cmp        rax, qword [r14+8]
0000000000007a0e         mov        rbx, qword [r14]
0000000000007a11         je         loc_80c0

                     loc_7a17:
0000000000007a17         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
0000000000007a1b         jmp        loc_7738

                     loc_7a20:
0000000000007a20         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
0000000000007a24         jmp        loc_7738

                     loc_7a29:
0000000000007a29         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
0000000000007a2e         mov        ecx, 0x1
0000000000007a33         mov        qword [r12+0x18], rbp
0000000000007a38         mov        qword [r12+0x20], rax
0000000000007a3d         test       rsi, rsi
0000000000007a40         cmovne     rcx, rsi
0000000000007a44         mov        qword [rsp+0x88+var_78], rcx
0000000000007a49         movzx      ecx, byte [rbp+1]
0000000000007a4d         lea        esi, dword [rcx-0x30]
0000000000007a50         cmp        sil, 0x9
0000000000007a54         jbe        loc_7d35

                     loc_7a5a:
0000000000007a5a         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
0000000000007a5f         cmp        rsi, 0xffffffffffffffff
0000000000007a63         lea        rdx, qword [rsi+1]
0000000000007a67         mov        qword [r12+0x28], rsi
0000000000007a6c         je         loc_7f0b

0000000000007a72         mov        rbx, qword [rsp+0x88+var_68]
0000000000007a77         mov        rbp, rax
0000000000007a7a         mov        qword [rsp+0x88+var_68], rdx

                     loc_7a7f:
0000000000007a7f         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
0000000000007a82         mov        rcx, qword [r15+8]
0000000000007a86         ja         loc_8102

0000000000007a8c         add        r9, r9
0000000000007a8f         lea        rax, qword [rbx+1]
0000000000007a93         cmp        r9, rbx
0000000000007a96         cmovbe     r9, rax
0000000000007a9a         movabs     rax, 0x7ffffffffffffff
0000000000007aa4         cmp        r9, rax
0000000000007aa7         ja         loc_834b

0000000000007aad         mov        rsi, r9
0000000000007ab0         mov        qword [rsp+0x88+var_48], r9
0000000000007ab5         mov        qword [rsp+0x88+var_50], r10
0000000000007aba         shl        rsi, 0x5
0000000000007abe         cmp        qword [rsp+0x88+var_80], rcx
0000000000007ac3         mov        qword [rsp+0x88+var_58], r8
0000000000007ac8         je         loc_81e1

0000000000007ace         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000007ad1         call       j_realloc                                   ; realloc
0000000000007ad6         mov        rdx, qword [r15+8]
0000000000007ada         mov        r8, qword [rsp+0x88+var_58]
0000000000007adf         mov        rcx, rax
0000000000007ae2         mov        r10, qword [rsp+0x88+var_50]
0000000000007ae7         mov        r9, qword [rsp+0x88+var_48]

                     loc_7aec:
0000000000007aec         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
0000000000007aef         je         loc_83a7

0000000000007af5         cmp        qword [rsp+0x88+var_80], rdx
0000000000007afa         mov        rax, qword [r15]
0000000000007afd         je         loc_82bb

                     loc_7b03:
0000000000007b03         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_7b07:
0000000000007b07         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
0000000000007b0a         shl        rdx, 0x5
0000000000007b0e         add        rdx, rcx
0000000000007b11         cmp        rax, rbx
0000000000007b14         ja         loc_7b36

0000000000007b16         nop        word [cs:rax+rax]

                     loc_7b20:
0000000000007b20         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
0000000000007b24         mov        dword [rdx], 0x0
0000000000007b2a         add        rdx, 0x20
0000000000007b2e         cmp        rax, rbx
0000000000007b31         jbe        loc_7b20

0000000000007b33         mov        qword [r15], rax

                     loc_7b36:
0000000000007b36         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
0000000000007b3a         lea        rax, qword [rcx+rbx]
0000000000007b3e         mov        edx, dword [rax]
0000000000007b40         test       edx, edx
0000000000007b42         jne        loc_801b

0000000000007b48         mov        dword [rax], 0x5
0000000000007b4e         movzx      ebx, byte [rbp]
0000000000007b52         lea        rdx, qword [rbp+1]
0000000000007b56         cmp        bl, 0x2e
0000000000007b59         jne        loc_788e

                     loc_7b5f:
0000000000007b5f         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
0000000000007b63         mov        qword [r12+0x30], rbp
0000000000007b68         jne        loc_7cee

0000000000007b6e         mov        rsi, qword [rsp+0x88+var_70]
0000000000007b73         lea        r11, qword [rbp+2]
0000000000007b77         mov        eax, 0x2
0000000000007b7c         mov        qword [r12+0x38], r11
0000000000007b81         cmp        rsi, 0x2
0000000000007b85         cmovae     rax, rsi
0000000000007b89         mov        qword [rsp+0x88+var_70], rax
0000000000007b8e         movsx      eax, byte [rbp+2]
0000000000007b92         lea        edx, dword [rax-0x30]
0000000000007b95         cmp        dl, 0x9
0000000000007b98         jbe        loc_822c

                     loc_7b9e:
0000000000007b9e         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
0000000000007ba3         cmp        rbx, 0xffffffffffffffff
0000000000007ba7         je         loc_8205

                     loc_7bad:
0000000000007bad         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
0000000000007bb0         mov        rcx, qword [r15+8]
0000000000007bb4         jbe        loc_811f

0000000000007bba         mov        rax, qword [r15]

                     loc_7bbd:
0000000000007bbd         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
0000000000007bc0         shl        rdx, 0x5
0000000000007bc4         add        rdx, rcx
0000000000007bc7         cmp        rax, rbx
0000000000007bca         ja         loc_7be6

0000000000007bcc         nop        dword [rax]

                     loc_7bd0:
0000000000007bd0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
0000000000007bd4         mov        dword [rdx], 0x0
0000000000007bda         add        rdx, 0x20
0000000000007bde         cmp        rax, rbx
0000000000007be1         jbe        loc_7bd0

0000000000007be3         mov        qword [r15], rax

                     loc_7be6:
0000000000007be6         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
0000000000007bea         lea        rax, qword [rcx+rbx]
0000000000007bee         mov        edx, dword [rax]
0000000000007bf0         test       edx, edx
0000000000007bf2         jne        loc_810a

0000000000007bf8         mov        dword [rax], 0x5
0000000000007bfe         mov        rbp, r11
0000000000007c01         movzx      ebx, byte [r11]
0000000000007c05         jmp        loc_788e

                     loc_7c0a:
0000000000007c0a         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
0000000000007c0d         nop        dword [rax]

                     loc_7c10:
0000000000007c10         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
0000000000007c14         movzx      edx, byte [rax]
0000000000007c17         lea        ecx, dword [rdx-0x30]
0000000000007c1a         cmp        cl, 0x9
0000000000007c1d         jbe        loc_7c10

0000000000007c1f         cmp        dl, 0x24
0000000000007c22         mov        r13, r8
0000000000007c25         jne        loc_780e

0000000000007c2b         xor        edx, edx

                     loc_7c2d:
0000000000007c2d         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
0000000000007c30         movabs     rdi, 0x1999999999999999
0000000000007c3a         mov        rsi, r8
0000000000007c3d         sub        eax, 0x30
0000000000007c40         cmp        rdx, rdi
0000000000007c43         cdqe
0000000000007c45         ja         loc_7c4e

0000000000007c47         lea        rsi, qword [rdx+rdx*4]
0000000000007c4b         add        rsi, rsi

                     loc_7c4e:
0000000000007c4e         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_7c51:
0000000000007c51         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
0000000000007c54         movzx      ebx, byte [rbp+1]
0000000000007c58         setb       sil
0000000000007c5c         add        rbp, 0x1
0000000000007c60         mov        rdx, rax
0000000000007c63         movzx      esi, sil
0000000000007c67         test       rsi, rsi
0000000000007c6a         lea        edi, dword [rbx-0x30]
0000000000007c6d         jne        loc_7ffe

0000000000007c73         cmp        dil, 0x9
0000000000007c77         jbe        loc_7c2d

0000000000007c79         mov        r13, rax
0000000000007c7c         sub        r13, 0x1
0000000000007c80         cmp        r13, 0xfffffffffffffffd
0000000000007c84         ja         loc_7f0b

0000000000007c8a         lea        rbp, qword [rcx+2]
0000000000007c8e         movzx      ebx, byte [rcx+2]
0000000000007c92         jmp        loc_780e

                     loc_7c97:
0000000000007c97         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
0000000000007c9c         movzx      edi, byte [rbp]
0000000000007ca0         mov        rsi, rbp
0000000000007ca3         lea        ecx, dword [rdi-0x30]
0000000000007ca6         cmp        cl, 0x9
0000000000007ca9         jbe        loc_7cb7

0000000000007cab         jmp        loc_7ce0
0000000000007cad         align      16

                     loc_7cb0:
0000000000007cb0         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
0000000000007cb3         add        rax, 0x1

                     loc_7cb7:
0000000000007cb7         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
0000000000007cba         lea        edx, dword [rdi-0x30]
0000000000007cbd         cmp        dl, 0x9
0000000000007cc0         jbe        loc_7cb0

0000000000007cc2         mov        rcx, rax
0000000000007cc5         lea        rdx, qword [rbp+2]
0000000000007cc9         mov        rbp, rax
0000000000007ccc         sub        rcx, rsi
0000000000007ccf         mov        rsi, qword [rsp+0x88+var_78]
0000000000007cd4         cmp        rsi, rcx
0000000000007cd7         cmovae     rcx, rsi
0000000000007cdb         mov        qword [rsp+0x88+var_78], rcx

                     loc_7ce0:
0000000000007ce0         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
0000000000007ce5         movzx      ebx, byte [rbp]
0000000000007ce9         jmp        loc_7885

                     loc_7cee:
0000000000007cee         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
0000000000007cf2         sub        eax, 0x30
0000000000007cf5         cmp        al, 0x9
0000000000007cf7         ja         loc_7d0e

0000000000007cf9         nop        dword [rax]

                     loc_7d00:
0000000000007d00         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
0000000000007d04         movzx      eax, byte [rdx]
0000000000007d07         sub        eax, 0x30
0000000000007d0a         cmp        al, 0x9
0000000000007d0c         jbe        loc_7d00

                     loc_7d0e:
0000000000007d0e         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
0000000000007d13         mov        rax, rdx
0000000000007d16         mov        qword [r12+0x38], rdx
0000000000007d1b         sub        rax, rbp
0000000000007d1e         movzx      ebx, byte [rdx]
0000000000007d21         mov        rbp, rdx
0000000000007d24         cmp        rsi, rax
0000000000007d27         cmovae     rax, rsi
0000000000007d2b         mov        qword [rsp+0x88+var_70], rax
0000000000007d30         jmp        loc_788e

                     loc_7d35:
0000000000007d35         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_7d38:
0000000000007d38         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
0000000000007d3c         movzx      edi, byte [rsi]
0000000000007d3f         lea        r11d, dword [rdi-0x30]
0000000000007d43         cmp        r11b, 0x9
0000000000007d47         jbe        loc_7d38

0000000000007d49         cmp        dil, 0x24
0000000000007d4d         jne        loc_7a5a

0000000000007d53         xor        esi, esi

                     loc_7d55:
0000000000007d55         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
0000000000007d58         movabs     rdi, 0x1999999999999999
0000000000007d62         mov        rcx, r8
0000000000007d65         sub        eax, 0x30
0000000000007d68         cmp        rsi, rdi
0000000000007d6b         cdqe
0000000000007d6d         ja         loc_7d76

0000000000007d6f         lea        rcx, qword [rsi+rsi*4]
0000000000007d73         add        rcx, rcx

                     loc_7d76:
0000000000007d76         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_7d79:
0000000000007d79         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
0000000000007d7c         add        rax, rcx
0000000000007d7f         movzx      ecx, byte [rdx+1]
0000000000007d83         setb       r11b
0000000000007d87         add        rdx, 0x1
0000000000007d8b         mov        rsi, rax
0000000000007d8e         test       r11, r11
0000000000007d91         lea        edi, dword [rcx-0x30]
0000000000007d94         jne        loc_829e

0000000000007d9a         cmp        dil, 0x9
0000000000007d9e         jbe        loc_7d55

0000000000007da0         lea        rbx, qword [rax-1]
0000000000007da4         cmp        rbx, 0xfffffffffffffffd
0000000000007da8         ja         loc_7f0b

0000000000007dae         mov        qword [r12+0x28], rbx
0000000000007db3         add        rbp, 0x2
0000000000007db7         jmp        loc_7a7f

                     loc_7dbc:
0000000000007dbc         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
0000000000007dbf         mov        r11d, 0x16
0000000000007dc5         jg         loc_7918

0000000000007dcb         test       al, 0x4
0000000000007dcd         jne        loc_7918

0000000000007dd3         cmp        eax, 0x7
0000000000007dd6         mov        r11d, 0x15
0000000000007ddc         jg         loc_7918

0000000000007de2         test       al, 0x2
0000000000007de4         mov        r11d, 0x12
0000000000007dea         jne        loc_7918

0000000000007df0         xor        r11d, r11d
0000000000007df3         test       al, 0x1
0000000000007df5         sete       r11b
0000000000007df9         add        r11d, 0x13
0000000000007dfd         jmp        loc_7918
0000000000007e02         align      8

                     loc_7e08:
0000000000007e08         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
0000000000007e0b         cmp        eax, 0x7
0000000000007e0e         setg       r11b
0000000000007e12         add        r11d, 0xd
0000000000007e16         jmp        loc_7918

                     loc_7e1b:
0000000000007e1b         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
0000000000007e1e         mov        r11d, 0x9
0000000000007e24         jg         loc_7918

0000000000007e2a         test       al, 0x4
0000000000007e2c         jne        loc_7918

0000000000007e32         cmp        eax, 0x7
0000000000007e35         mov        r11d, 0x7
0000000000007e3b         jg         loc_7918

0000000000007e41         test       al, 0x2
0000000000007e43         mov        r11d, 0x1
0000000000007e49         jne        loc_7918

0000000000007e4f         and        eax, 0x1
0000000000007e52         cmp        eax, 0x1
0000000000007e55         sbb        r11d, r11d
0000000000007e58         and        r11d, 0x2
0000000000007e5c         add        r11d, 0x3
0000000000007e60         jmp        loc_7918
0000000000007e65         align      8

                     loc_7e68:
0000000000007e68         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
0000000000007e6b         cmp        eax, 0x7
0000000000007e6e         setg       r11b
0000000000007e72         add        r11d, 0xf
0000000000007e76         jmp        loc_7918

                     loc_7e7b:
0000000000007e7b         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
0000000000007e7e         mov        r11d, 0xc
0000000000007e84         jg         loc_7918

0000000000007e8a         xor        r11d, r11d
0000000000007e8d         test       al, 0x4
0000000000007e8f         setne      r11b
0000000000007e93         add        r11d, 0xb
0000000000007e97         jmp        loc_7918

                     loc_7e9c:
0000000000007e9c         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
0000000000007ea2         mov        ebx, 0x63
0000000000007ea7         jmp        loc_7918

                     loc_7eac:
0000000000007eac         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
0000000000007eaf         mov        r11d, 0xa
0000000000007eb5         jg         loc_7918

0000000000007ebb         test       al, 0x4
0000000000007ebd         jne        loc_7918

0000000000007ec3         cmp        eax, 0x7
0000000000007ec6         mov        r11d, 0x8
0000000000007ecc         jg         loc_7918

0000000000007ed2         test       al, 0x2
0000000000007ed4         mov        r11d, 0x2
0000000000007eda         jne        loc_7918

0000000000007ee0         and        eax, 0x1
0000000000007ee3         cmp        eax, 0x1
0000000000007ee6         sbb        r11d, r11d
0000000000007ee9         and        r11d, 0x2
0000000000007eed         add        r11d, 0x4
0000000000007ef1         jmp        loc_7918
0000000000007ef6         align      256

                     loc_7f00:
0000000000007f00         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
0000000000007f06         jmp        loc_7918

                     loc_7f0b:
0000000000007f0b         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_7f0f:
0000000000007f0f         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
0000000000007f14         je         loc_7f1e

0000000000007f16         mov        rdi, rcx                                    ; argument "__ptr" for method j_free
0000000000007f19         call       j_free                                      ; free

                     loc_7f1e:
0000000000007f1e         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
0000000000007f22         cmp        qword [rsp+0x88+var_60], rdi
0000000000007f27         je         loc_7f2e

0000000000007f29         call       j_free                                      ; free

                     loc_7f2e:
0000000000007f2e         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
0000000000007f33         mov        dword [rax], 0x16
0000000000007f39         mov        eax, 0xffffffff
0000000000007f3e         jmp        loc_7762

                     loc_7f43:
0000000000007f43         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
0000000000007f46         je         loc_797b

0000000000007f4c         jmp        loc_7f0f
0000000000007f4e         align      16

                     loc_7f50:
0000000000007f50         add        r9, r9                                      ; CODE XREF=printf_parse+622
0000000000007f53         lea        rax, qword [r13+1]
0000000000007f57         cmp        r9, r13
0000000000007f5a         cmovbe     r9, rax
0000000000007f5e         movabs     rax, 0x7ffffffffffffff
0000000000007f68         cmp        r9, rax
0000000000007f6b         ja         loc_834b

0000000000007f71         mov        rsi, r9
0000000000007f74         mov        qword [rsp+0x88+var_40], r9
0000000000007f79         mov        qword [rsp+0x88+var_48], r10
0000000000007f7e         shl        rsi, 0x5
0000000000007f82         cmp        qword [rsp+0x88+var_80], rcx
0000000000007f87         mov        qword [rsp+0x88+var_50], r8
0000000000007f8c         mov        dword [rsp+0x88+var_58], r11d
0000000000007f91         je         loc_8031

0000000000007f97         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000007f9a         call       j_realloc                                   ; realloc
0000000000007f9f         test       rax, rax
0000000000007fa2         mov        rcx, rax
0000000000007fa5         mov        r11d, dword [rsp+0x88+var_58]
0000000000007faa         mov        r8, qword [rsp+0x88+var_50]
0000000000007faf         mov        r10, qword [rsp+0x88+var_48]
0000000000007fb4         mov        r9, qword [rsp+0x88+var_40]
0000000000007fb9         je         loc_8347

0000000000007fbf         mov        rax, qword [rsp+0x88+var_80]
0000000000007fc4         cmp        rax, qword [r15+8]
0000000000007fc8         je         loc_8059

                     loc_7fce:
0000000000007fce         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
0000000000007fd2         jmp        loc_7934

                     loc_7fd7:
0000000000007fd7         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
0000000000007fdc         cmp        rsi, 0xffffffffffffffff
0000000000007fe0         lea        rax, qword [rsi+1]
0000000000007fe4         mov        qword [r12+0x50], rsi
0000000000007fe9         je         loc_7f0b

0000000000007fef         mov        r13, qword [rsp+0x88+var_68]
0000000000007ff4         mov        qword [rsp+0x88+var_68], rax
0000000000007ff9         jmp        loc_7927

                     loc_7ffe:
0000000000007ffe         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
0000000000008002         ja         loc_7f0b

0000000000008008         movsx      eax, bl
000000000000800b         mov        rsi, r8
000000000000800e         mov        rcx, rbp
0000000000008011         sub        eax, 0x30
0000000000008014         cdqe
0000000000008016         jmp        loc_7c51

                     loc_801b:
000000000000801b         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
000000000000801e         jne        loc_7f0f

0000000000008024         movzx      ebx, byte [rbp]
0000000000008028         lea        rdx, qword [rbp+1]
000000000000802c         jmp        loc_7885

                     loc_8031:
0000000000008031         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
0000000000008034         call       j_malloc                                    ; malloc
0000000000008039         test       rax, rax
000000000000803c         mov        rcx, rax
000000000000803f         mov        r11d, dword [rsp+0x88+var_58]
0000000000008044         mov        r8, qword [rsp+0x88+var_50]
0000000000008049         mov        r10, qword [rsp+0x88+var_48]
000000000000804e         mov        r9, qword [rsp+0x88+var_40]
0000000000008053         je         loc_81bc

                     loc_8059:
0000000000008059         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
000000000000805c         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
0000000000008061         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000008064         mov        qword [rsp+0x88+var_40], r9
0000000000008069         mov        qword [rsp+0x88+var_48], r10
000000000000806e         mov        qword [rsp+0x88+var_50], r8
0000000000008073         mov        dword [rsp+0x88+var_58], r11d
0000000000008078         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
000000000000807c         call       j_memcpy                                    ; memcpy
0000000000008081         mov        r9, qword [rsp+0x88+var_40]
0000000000008086         mov        r10, qword [rsp+0x88+var_48]
000000000000808b         mov        rcx, rax
000000000000808e         mov        r8, qword [rsp+0x88+var_50]
0000000000008093         mov        r11d, dword [rsp+0x88+var_58]
0000000000008098         jmp        loc_7fce

                     loc_809d:
000000000000809d         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
00000000000080a0         call       j_malloc                                    ; malloc
00000000000080a5         test       rax, rax
00000000000080a8         mov        rcx, rax
00000000000080ab         mov        r8, qword [rsp+0x88+var_58]
00000000000080b0         mov        r10, qword [rsp+0x88+var_50]
00000000000080b5         mov        r9, qword [rsp+0x88+var_48]
00000000000080ba         je         loc_81a9

                     loc_80c0:
00000000000080c0         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
00000000000080c4         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
00000000000080c9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000080cc         mov        qword [rsp+0x88+var_48], r9
00000000000080d1         mov        qword [rsp+0x88+var_50], r10
00000000000080d6         lea        rdx, qword [rbx+rax*2]
00000000000080da         mov        qword [rsp+0x88+var_58], r8
00000000000080df         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
00000000000080e3         call       j_memcpy                                    ; memcpy
00000000000080e8         mov        rbx, qword [r14]
00000000000080eb         mov        rcx, rax
00000000000080ee         mov        r9, qword [rsp+0x88+var_48]
00000000000080f3         mov        r10, qword [rsp+0x88+var_50]
00000000000080f8         mov        r8, qword [rsp+0x88+var_58]
00000000000080fd         jmp        loc_7a17

                     loc_8102:
0000000000008102         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
0000000000008105         jmp        loc_7b07

                     loc_810a:
000000000000810a         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
000000000000810d         jne        loc_7f0f

0000000000008113         movzx      ebx, byte [r11]
0000000000008117         mov        rbp, r11
000000000000811a         jmp        loc_788e

                     loc_811f:
000000000000811f         add        r9, r9                                      ; CODE XREF=printf_parse+1268
0000000000008122         lea        rax, qword [rbx+1]
0000000000008126         cmp        r9, rbx
0000000000008129         cmovbe     r9, rax
000000000000812d         movabs     rax, 0x7ffffffffffffff
0000000000008137         cmp        r9, rax
000000000000813a         ja         loc_834b

0000000000008140         mov        rsi, r9
0000000000008143         mov        qword [rsp+0x88+var_40], r9
0000000000008148         mov        qword [rsp+0x88+var_48], r10
000000000000814d         shl        rsi, 0x5
0000000000008151         cmp        qword [rsp+0x88+var_80], rcx
0000000000008156         mov        qword [rsp+0x88+var_50], r8
000000000000815b         mov        qword [rsp+0x88+var_58], r11
0000000000008160         je         loc_831e

0000000000008166         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000008169         call       j_realloc                                   ; realloc
000000000000816e         mov        rdx, qword [r15+8]
0000000000008172         mov        r11, qword [rsp+0x88+var_58]
0000000000008177         mov        rcx, rax
000000000000817a         mov        r8, qword [rsp+0x88+var_50]
000000000000817f         mov        r10, qword [rsp+0x88+var_48]
0000000000008184         mov        r9, qword [rsp+0x88+var_40]

                     loc_8189:
0000000000008189         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
000000000000818c         je         loc_83a7

0000000000008192         cmp        qword [rsp+0x88+var_80], rdx
0000000000008197         mov        rax, qword [r15]
000000000000819a         je         loc_8360

                     loc_81a0:
00000000000081a0         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
00000000000081a4         jmp        loc_7bbd

                     loc_81a9:
00000000000081a9         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
00000000000081ad         cmp        qword [rsp+0x88+var_80], rcx
00000000000081b2         je         loc_81cc

                     loc_81b4:
00000000000081b4         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=printf_parse+3216
00000000000081b7         call       j_free                                      ; free

                     loc_81bc:
00000000000081bc         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
00000000000081c0         cmp        qword [rsp+0x88+var_60], rdi
00000000000081c5         je         loc_81cc

00000000000081c7         call       j_free                                      ; free

                     loc_81cc:
00000000000081cc         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
00000000000081d1         mov        dword [rax], 0xc
00000000000081d7         mov        eax, 0xffffffff
00000000000081dc         jmp        loc_7762

                     loc_81e1:
00000000000081e1         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
00000000000081e4         call       j_malloc                                    ; malloc
00000000000081e9         mov        rdx, qword [rsp+0x88+var_80]
00000000000081ee         mov        rcx, rax
00000000000081f1         mov        r9, qword [rsp+0x88+var_48]
00000000000081f6         mov        r10, qword [rsp+0x88+var_50]
00000000000081fb         mov        r8, qword [rsp+0x88+var_58]
0000000000008200         jmp        loc_7aec

                     loc_8205:
0000000000008205         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
000000000000820a         cmp        rsi, 0xffffffffffffffff
000000000000820e         lea        rax, qword [rsi+1]
0000000000008212         mov        qword [r12+0x40], rsi
0000000000008217         je         loc_7f0b

000000000000821d         mov        rbx, qword [rsp+0x88+var_68]
0000000000008222         mov        qword [rsp+0x88+var_68], rax
0000000000008227         jmp        loc_7bad

                     loc_822c:
000000000000822c         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_822f:
000000000000822f         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
0000000000008233         movzx      ecx, byte [rdx]
0000000000008236         lea        esi, dword [rcx-0x30]
0000000000008239         cmp        sil, 0x9
000000000000823d         jbe        loc_822f

000000000000823f         cmp        cl, 0x24
0000000000008242         jne        loc_7b9e

0000000000008248         xor        ecx, ecx

                     loc_824a:
000000000000824a         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
0000000000008254         sub        eax, 0x30
0000000000008257         mov        rdx, r8
000000000000825a         cmp        rcx, rsi
000000000000825d         cdqe
000000000000825f         ja         loc_8268

0000000000008261         lea        rdx, qword [rcx+rcx*4]
0000000000008265         add        rdx, rdx

                     loc_8268:
0000000000008268         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_826b:
000000000000826b         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
000000000000826d         add        rdx, rax
0000000000008270         movsx      eax, byte [r11+1]
0000000000008275         setb       bl
0000000000008278         add        r11, 0x1
000000000000827c         mov        rcx, rdx
000000000000827f         test       rbx, rbx
0000000000008282         lea        edi, dword [rax-0x30]
0000000000008285         je         loc_82f8

0000000000008287         cmp        dil, 0x9
000000000000828b         ja         loc_7f0b

0000000000008291         sub        eax, 0x30
0000000000008294         mov        rdx, r8
0000000000008297         mov        rsi, r11
000000000000829a         cdqe
000000000000829c         jmp        loc_826b

                     loc_829e:
000000000000829e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
00000000000082a2         ja         loc_7f0b

00000000000082a8         movsx      eax, cl
00000000000082ab         mov        rbp, rdx
00000000000082ae         mov        rcx, r8
00000000000082b1         sub        eax, 0x30
00000000000082b4         cdqe
00000000000082b6         jmp        loc_7d79

                     loc_82bb:
00000000000082bb         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
00000000000082c0         shl        rax, 0x5
00000000000082c4         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000082c7         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
00000000000082ca         mov        qword [rsp+0x88+var_48], r9
00000000000082cf         mov        qword [rsp+0x88+var_50], r10
00000000000082d4         mov        qword [rsp+0x88+var_58], r8
00000000000082d9         call       j_memcpy                                    ; memcpy
00000000000082de         mov        r9, qword [rsp+0x88+var_48]
00000000000082e3         mov        rcx, rax
00000000000082e6         mov        r10, qword [rsp+0x88+var_50]
00000000000082eb         mov        rax, qword [r15]
00000000000082ee         mov        r8, qword [rsp+0x88+var_58]
00000000000082f3         jmp        loc_7b03

                     loc_82f8:
00000000000082f8         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
00000000000082fc         jbe        loc_824a

0000000000008302         lea        rbx, qword [rdx-1]
0000000000008306         cmp        rbx, 0xfffffffffffffffd
000000000000830a         ja         loc_7f0b

0000000000008310         mov        qword [r12+0x40], rbx
0000000000008315         lea        r11, qword [rsi+2]
0000000000008319         jmp        loc_7bad

                     loc_831e:
000000000000831e         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
0000000000008321         call       j_malloc                                    ; malloc
0000000000008326         mov        rdx, qword [rsp+0x88+var_80]
000000000000832b         mov        rcx, rax
000000000000832e         mov        r9, qword [rsp+0x88+var_40]
0000000000008333         mov        r10, qword [rsp+0x88+var_48]
0000000000008338         mov        r8, qword [rsp+0x88+var_50]
000000000000833d         mov        r11, qword [rsp+0x88+var_58]
0000000000008342         jmp        loc_8189

                     loc_8347:
0000000000008347         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_834b:
000000000000834b         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
0000000000008350         jne        loc_81b4

0000000000008356         jmp        loc_81bc
000000000000835b         align      32

                     loc_8360:
0000000000008360         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
0000000000008365         shl        rax, 0x5
0000000000008369         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000836c         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000000836f         mov        qword [rsp+0x88+var_40], r9
0000000000008374         mov        qword [rsp+0x88+var_48], r10
0000000000008379         mov        qword [rsp+0x88+var_50], r8
000000000000837e         mov        qword [rsp+0x88+var_58], r11
0000000000008383         call       j_memcpy                                    ; memcpy
0000000000008388         mov        r9, qword [rsp+0x88+var_40]
000000000000838d         mov        rcx, rax
0000000000008390         mov        r10, qword [rsp+0x88+var_48]
0000000000008395         mov        rax, qword [r15]
0000000000008398         mov        r8, qword [rsp+0x88+var_50]
000000000000839d         mov        r11, qword [rsp+0x88+var_58]
00000000000083a2         jmp        loc_81a0

                     loc_83a7:
00000000000083a7         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
00000000000083aa         jmp        loc_834b
00000000000083ac         align      16                                          ; End of unwind block (FDE at 0xa804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000083b0         push       r15                                         ; Begin of unwind block (FDE at 0xa854), DATA XREF=_start+22
00000000000083b2         push       r14
00000000000083b4         mov        r15, rdx
00000000000083b7         push       r13
00000000000083b9         push       r12
00000000000083bb         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000083c2         push       rbp
00000000000083c3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000083ca         push       rbx
00000000000083cb         mov        r13d, edi
00000000000083ce         mov        r14, rsi
00000000000083d1         sub        rbp, r12
00000000000083d4         sub        rsp, 0x8
00000000000083d8         sar        rbp, 0x3
00000000000083dc         call       _init                                       ; _init
00000000000083e1         test       rbp, rbp
00000000000083e4         je         loc_8406

00000000000083e6         xor        ebx, ebx
00000000000083e8         nop        dword [rax+rax]

                     loc_83f0:
00000000000083f0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000083f3         mov        rsi, r14
00000000000083f6         mov        edi, r13d
00000000000083f9         call       qword [r12+rbx*8]
00000000000083fd         add        rbx, 0x1
0000000000008401         cmp        rbp, rbx
0000000000008404         jne        loc_83f0

                     loc_8406:
0000000000008406         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000840a         pop        rbx
000000000000840b         pop        rbp
000000000000840c         pop        r12
000000000000840e         pop        r13
0000000000008410         pop        r14
0000000000008412         pop        r15
0000000000008414         ret
                        ; endp
0000000000008415         align      32                                          ; End of unwind block (FDE at 0xa854)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000008420         ret                                                    ; Begin of unwind block (FDE at 0xa89c), DATA XREF=_start+15
                        ; endp
0000000000008422         align      16                                          ; End of unwind block (FDE at 0xa89c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000008430         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xa8b4), __dso_handle, CODE XREF=main+78
0000000000008437         xor        esi, esi
0000000000008439         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000843e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xa8b4)
000000000000843f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x8440; 0x8449[ (9 bytes)
        ; File offset : [33856; 33865[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000008440         sub        rsp, 0x8
0000000000008444         add        rsp, 0x8
0000000000008448         ret
                        ; endp
0000000000008449         db  0x00 ; '.'
000000000000844a         db  0x00 ; '.'
000000000000844b         db  0x00 ; '.'
000000000000844c         db  0x00 ; '.'
000000000000844d         db  0x00 ; '.'
000000000000844e         db  0x00 ; '.'
000000000000844f         db  0x00 ; '.'
0000000000008450         db  0x00 ; '.'
0000000000008451         db  0x00 ; '.'
0000000000008452         db  0x00 ; '.'
0000000000008453         db  0x00 ; '.'
0000000000008454         db  0x00 ; '.'
0000000000008455         db  0x00 ; '.'
0000000000008456         db  0x00 ; '.'
0000000000008457         db  0x00 ; '.'
0000000000008458         db  0x00 ; '.'
0000000000008459         db  0x00 ; '.'
000000000000845a         db  0x00 ; '.'
000000000000845b         db  0x00 ; '.'
000000000000845c         db  0x00 ; '.'
000000000000845d         db  0x00 ; '.'
000000000000845e         db  0x00 ; '.'
000000000000845f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x8460; 0x97bc[ (4956 bytes)
        ; File offset : [33888; 38844[ (4956 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000008460         db  0x01 ; '.'
0000000000008461         db  0x00 ; '.'
0000000000008462         db  0x02 ; '.'
0000000000008463         db  0x00 ; '.'
0000000000008464         db  0x20 ; ' '                                         ; DATA XREF=print_line+265
0000000000008465         db  0x20 ; ' '
0000000000008466         db  0x20 ; ' '
0000000000008467         db  0x2e ; '.'
0000000000008468         db  0x00 ; '.'
                     a6s:
0000000000008469         db         " %-6s", 0                                  ; DATA XREF=print_line+481
                     a10s:
000000000000846f         db         " %10s", 0                                  ; DATA XREF=print_line+581
                     a12s:
0000000000008475         db         " %-12s", 0                                 ; DATA XREF=print_line+533
000000000000847c         db  0x69 ; 'i'                                         ; DATA XREF=make_id_equals_comment+2, make_id_equals_comment+45
000000000000847d         db  0x64 ; 'd'
000000000000847e         db  0x3d ; '='
000000000000847f         db  0x00 ; '.'
                     asc:
0000000000008480         db         "  .  ", 0                                  ; DATA XREF=print_user+1378
0000000000008486         db  0x25 ; '%'                                         ; DATA XREF=print_user+4, who+1230, who+1347, who+1461
0000000000008487         db  0x6c ; 'l'
0000000000008488         db  0x64 ; 'd'
0000000000008489         db  0x00 ; '.'
                     aCoreutils831sr:
000000000000848a         db         "../coreutils-8.31/src/who.c", 0            ; DATA XREF=print_user+1434
                     aSecondsidle606:
00000000000084a6         db         "seconds_idle / (60 * 60) < 24", 0          ; DATA XREF=print_user+1441
                     a02d02d:
00000000000084c4         db         "%02d:%02d", 0                              ; DATA XREF=print_user+1296
                     aOld:
00000000000084ce         db         " old ", 0                                  ; DATA XREF=print_user+656
00000000000084d4         db  0x25 ; '%'                                         ; DATA XREF=print_user+686
00000000000084d5         db  0x2e ; '.'
00000000000084d6         db  0x2a ; '*'
00000000000084d7         db  0x73 ; 's'
00000000000084d8         db  0x00 ; '.'
                     aSs:
00000000000084d9         db         "(%s:%s)", 0                                ; DATA XREF=print_user+439
00000000000084e1         db  0x28 ; '('                                         ; DATA XREF=print_user+1062
00000000000084e2         db  0x25 ; '%'
00000000000084e3         db  0x73 ; 's'
00000000000084e4         db  0x29 ; ')'
00000000000084e5         db  0x00 ; '.'
00000000000084e6         db  0x25 ; '%'                                         ; DATA XREF=who+549
00000000000084e7         db  0x73 ; 's'
00000000000084e8         db  0x25 ; '%'
00000000000084e9         db  0x73 ; 's'
00000000000084ea         db  0x00 ; '.'
                     aNUserslun:
00000000000084eb         db         "\n# users=%lu\n", 0                        ; DATA XREF=who+495
00000000000084f9         db  0x45 ; 'E'                                         ; DATA XREF=who+901
00000000000084fa         db  0x58 ; 'X'
00000000000084fb         db  0x49 ; 'I'
00000000000084fc         db  0x54 ; 'T'
00000000000084fd         db  0x00 ; '.'
                     aComment:
00000000000084fe         db         "COMMENT", 0                                ; DATA XREF=who+920
0000000000008506         db  0x50 ; 'P'                                         ; DATA XREF=who+944
0000000000008507         db  0x49 ; 'I'
0000000000008508         db  0x44 ; 'D'
0000000000008509         db  0x00 ; '.'
000000000000850a         db  0x49 ; 'I'                                         ; DATA XREF=who+966
000000000000850b         db  0x44 ; 'D'
000000000000850c         db  0x4c ; 'L'
000000000000850d         db  0x45 ; 'E'
000000000000850e         db  0x00 ; '.'
000000000000850f         db  0x54 ; 'T'                                         ; DATA XREF=who+988
0000000000008510         db  0x49 ; 'I'
0000000000008511         db  0x4d ; 'M'
0000000000008512         db  0x45 ; 'E'
0000000000008513         db  0x00 ; '.'
0000000000008514         db  0x4c ; 'L'                                         ; DATA XREF=who+1010
0000000000008515         db  0x49 ; 'I'
0000000000008516         db  0x4e ; 'N'
0000000000008517         db  0x45 ; 'E'
0000000000008518         db  0x00 ; '.'
0000000000008519         db  0x4e ; 'N'                                         ; DATA XREF=who+1034
000000000000851a         db  0x41 ; 'A'
000000000000851b         db  0x4d ; 'M'
000000000000851c         db  0x45 ; 'E'
000000000000851d         db  0x00 ; '.'
                     aDev:
000000000000851e         db         "/dev/", 0                                  ; DATA XREF=who+864
                     aRunlevel:
0000000000008524         db         "run-level", 0                              ; DATA XREF=who+623, who+1713
                     aSC:
000000000000852e         db         "%s %c", 0                                  ; DATA XREF=who+649
                     aLast:
0000000000008534         db         "last=", 0                                  ; DATA XREF=who+701, who+1770
000000000000853a         db  0x25 ; '%'                                         ; DATA XREF=who+741
000000000000853b         db  0x73 ; 's'
000000000000853c         db  0x25 ; '%'
000000000000853d         db  0x63 ; 'c'
000000000000853e         db  0x00 ; '.'
                     aSystemBoot:
000000000000853f         db         "system boot", 0                            ; DATA XREF=who+1119
                     aClockChange:
000000000000854b         db         "clock change", 0                           ; DATA XREF=who+1203
                     aLogin:
0000000000008558         db         "LOGIN", 0                                  ; DATA XREF=who+1387
                     aTerm:
000000000000855e         db         "term=", 0                                  ; DATA XREF=who+1547, who+1823
                     aExit:
0000000000008564         db         "exit=", 0                                  ; DATA XREF=who+1511, who+1863
                     aSdSd:
000000000000856a         db         "%s%d %s%d", 0                              ; DATA XREF=who+1582
0000000000008574         db  0x77 ; 'w'                                         ; DATA XREF=main+374, usage+416, usage+780, usage+964, usage+983, usage+1017
0000000000008575         db  0x68 ; 'h'
0000000000008576         db  0x6f ; 'o'
0000000000008577         db  0x00 ; '.'
                     aVarlogwtmp:
0000000000008578         db         "/var/log/wtmp", 0                          ; DATA XREF=usage+447
                     aVarrunutmp:
0000000000008586         db         "/var/run/utmp", 0                          ; DATA XREF=main+739, usage+454
0000000000008594         db  0x5b ; '['                                         ; DATA XREF=usage+476
0000000000008595         db  0x00 ; '.'
                     aTestInvocation:
0000000000008596         db         "test invocation", 0                        ; DATA XREF=usage+515
                     aMulticallInvoc:
00000000000085a6         db         "Multi-call invocation", 0                  ; DATA XREF=usage+563
                     aSha224sum:
00000000000085bc         db         "sha224sum", 0                              ; DATA XREF=usage+580
                     aSha2Utilities:
00000000000085c6         db         "sha2 utilities", 0                         ; DATA XREF=usage+592
                     aSha256sum:
00000000000085d5         db         "sha256sum", 0                              ; DATA XREF=usage+483
                     aSha384sum:
00000000000085df         db         "sha384sum", 0                              ; DATA XREF=usage+527
                     aSha512sum:
00000000000085e9         db         "sha512sum", 0                              ; DATA XREF=usage+551
                     aNsOnlineHelpSn:
00000000000085f3         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+666
000000000000860a         db  0x47 ; 'G'                                         ; DATA XREF=main+367, usage+694, usage+887, emit_bug_reporting_address+68
000000000000860b         db  0x4e ; 'N'
000000000000860c         db  0x55 ; 'U'
000000000000860d         db  0x20 ; ' '
                     aCoreutils:
000000000000860e         db         "coreutils", 0                              ; DATA XREF=main+47, main+59, usage+539
0000000000008618         db  0x65 ; 'e'                                         ; DATA XREF=usage+733, usage+926
0000000000008619         db  0x6e ; 'n'
000000000000861a         db  0x5f ; '_'
000000000000861b         db  0x00 ; '.'
                     aFullDocumentat:
000000000000861c         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+761, usage+950
                     aUsrlocalsharel:
0000000000008637         db         "/usr/local/share/locale", 0                ; DATA XREF=main+40
                     aDavidMackenzie:
000000000000864f         db         "David MacKenzie", 0                        ; DATA XREF=main+352
                     aJosephArceneau:
000000000000865f         db         "Joseph Arceneaux", 0                       ; DATA XREF=main+359
                     aMichaelStone:
0000000000008670         db         "Michael Stone", 0                          ; DATA XREF=main+329
                     aAbdlmpqrstuwht:
000000000000867e         db         "abdlmpqrstuwHT", 0                         ; DATA XREF=main+95
                     aYmdHm:
000000000000868d         db         "%Y-%m-%d %H:%M", 0                         ; DATA XREF=main+763
                     aBEHm:
000000000000869c         db         "%b %e %H:%M", 0                            ; DATA XREF=main+694
                     aExtraOperandS:
00000000000086a8         db         "extra operand %s", 0                       ; DATA XREF=main+834
00000000000086b9         db  0x61 ; 'a'
00000000000086ba         db  0x6c ; 'l'
00000000000086bb         db  0x6c ; 'l'
00000000000086bc         db  0x00 ; '.'
                     aCount:
00000000000086bd         db         "count", 0
                     aDead:
00000000000086c3         db         "dead", 0
                     aHeading:
00000000000086c8         db         "heading", 0
                     aLogin_86d0:        // aLogin
00000000000086d0         db         "login", 0
                     aLookup:
00000000000086d6         db         "lookup", 0
                     aMessage:
00000000000086dd         db         "message", 0
                     aMesg:
00000000000086e5         db         "mesg", 0
                     aProcess:
00000000000086ea         db         "process", 0
                     aRunlevel_86f2:        // aRunlevel
00000000000086f2         db         "runlevel", 0
                     aShort:
00000000000086fb         db         "short", 0
                     aTime:
0000000000008701         db         "time", 0
                     aUsers:
0000000000008706         db         "users", 0
                     aWritable:
000000000000870c         db         "writable", 0
                     aHelp:
0000000000008715         db         "help", 0
                     aVersion:
000000000000871a         db         "version", 0
0000000000008722         align      8
                     a8ss12sSss8ss:
0000000000008728         db         "%-8.*s%s %-12.*s %-*s%s%s %-8s%s", 0       ; DATA XREF=print_line+254
0000000000008749         align      16
                     aTrySHelpForMor:
0000000000008750         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000008777         align      8
                     aUsageSOptionFi:
0000000000008778         db         "Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\n", 0 ; DATA XREF=usage+93
00000000000087a4         align      8
                     aPrintInformati:
00000000000087a8         db         "Print information about users who are currently logged in.\n", 0 ; DATA XREF=usage+132
00000000000087e4         align      8
                     aNAAllSameAsBDL:
00000000000087e8         db         "\n  -a, --all         same as -b -d --login -p -r -t -T -u\n  -b, --boot        time of last system boot\n  -d, --dead        print dead processes\n  -H, --heading     print line of column headings\n", 0 ; DATA XREF=usage+169
00000000000088ab         align      16
                     aLLoginPrintSys:
00000000000088b0         db         "  -l, --login       print system login processes\n", 0 ; DATA XREF=usage+206
00000000000088e2         align      8
                     aLookupAttemptT:
00000000000088e8         db         "      --lookup      attempt to canonicalize hostnames via DNS\n  -m                only hostname and user associated with stdin\n  -p, --process     print active processes spawned by init\n", 0 ; DATA XREF=usage+243
00000000000089a3         align      8
                     aQCountAllLogin:
00000000000089a8         db         "  -q, --count       all login names and number of users logged on\n  -r, --runlevel    print current runlevel\n  -s, --short       print only name, line, and time (default)\n  -t, --time        print last system clock change\n", 0 ; DATA XREF=usage+280
0000000000008a87         align      8
                     aTWMesgAddUsers:
0000000000008a88         db         "  -T, -w, --mesg    add user's message status as +, - or ?\n  -u, --users       list users logged in\n      --message     same as -T\n      --writable    same as -T\n", 0 ; DATA XREF=usage+317
0000000000008b2b         align      16
                     aHelpDisplayThi:
0000000000008b30         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+354
0000000000008b5d         align      32
                     aVersionOutputV:
0000000000008b60         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+391
0000000000008b96         align      8
                     aNifFileIsNotSp:
0000000000008b98         db         "\nIf FILE is not specified, use %s.  %s as FILE is common.\nIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\n", 0 ; DATA XREF=usage+428
0000000000008c15         align      8
                     aHttpswwwgnuorg:
0000000000008c18         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+687, usage+787, usage+880, usage+990, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000008c40         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1031
0000000000008c87         align      8
                     aOrAvailableLoc:
0000000000008c88         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+830
0000000000008cbb         align      64
                     __PRETTY_FUNCTION__.7702:
0000000000008cc0         db         "idle_string", 0                            ; DATA XREF=print_user+1427
                     a831:
0000000000008ccc         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000008cd1         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000008cdd         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000008ce4         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000008ce5         db  0x00 ; '.'
                     aPosix:
0000000000008ce6         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
0000000000008cec         align      16
                     aANullArgv0WasP:
0000000000008cf0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000008d28         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000008d30         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000008d31         db  0x74 ; 't'
0000000000008d32         db  0x2d ; '-'
0000000000008d33         db  0x00 ; '.'
0000000000008d34         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000008d35         db  0x80 ; '.'
0000000000008d36         db  0x98 ; '.'
0000000000008d37         db  0x00 ; '.'
0000000000008d38         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000008d39         db  0x80 ; '.'
0000000000008d3a         db  0x99 ; '.'
0000000000008d3b         db  0x00 ; '.'
0000000000008d3c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000008d3d         db  0x07 ; '.'
0000000000008d3e         db  0x65 ; 'e'
0000000000008d3f         db  0x00 ; '.'
0000000000008d40         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000008d41         db  0xaf ; '.'
0000000000008d42         db  0x00 ; '.'
0000000000008d43         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_40f0+1451, sub_40f0+1493, sub_40f0+2429
0000000000008d44         db  0x00 ; '.'
0000000000008d45         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_40f0+132, sub_40f0+1338, sub_40f0+1670, sub_40f0+1697, sub_40f0+2352
0000000000008d46         db  0x00 ; '.'
0000000000008d47         db  0x60 ; '`'                                         ; DATA XREF=sub_40f0+1627, sub_40f0+1654
0000000000008d48         db  0x00 ; '.'
                     aLiteral:
0000000000008d49         db         "literal", 0
                     aShell:
0000000000008d51         db         "shell", 0
                     aShellalways:
0000000000008d57         db         "shell-always", 0
0000000000008d64         db  0x73 ; 's'
0000000000008d65         db  0x68 ; 'h'
0000000000008d66         db  0x65 ; 'e'
0000000000008d67         db  0x6c ; 'l'
0000000000008d68         db  0x6c ; 'l'
0000000000008d69         db  0x2d ; '-'
                     aEscape:
0000000000008d6a         db         "escape", 0
                     aShellescapealw:
0000000000008d71         db         "shell-escape-always", 0
                     aCmaybe:
0000000000008d85         db         "c-maybe", 0
                     aClocale:
0000000000008d8d         db         "clocale", 0
0000000000008d95         align      32
                     switch_table_8da0:        // switch_table
0000000000008da0         dd         quotearg_buffer_restyled.loc_47ea-switch_table_8da0, quotearg_buffer_restyled.loc_3a43-switch_table_8da0, quotearg_buffer_restyled.loc_4a18-switch_table_8da0, quotearg_buffer_restyled.loc_4824-switch_table_8da0 ; switch table used at 0x3a41 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008db0         dd         quotearg_buffer_restyled.loc_4614-switch_table_8da0, quotearg_buffer_restyled.loc_4670-switch_table_8da0, quotearg_buffer_restyled.loc_46c5-switch_table_8da0, quotearg_buffer_restyled.loc_470a-switch_table_8da0
0000000000008dc0         dd         3 dup (quotearg_buffer_restyled.loc_4744-switch_table_8da0)
0000000000008dcc         db  0xf4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000008dcd         db  0xaf ; '.'
0000000000008dce         db  0xff ; '.'
0000000000008dcf         db  0xff ; '.'
0000000000008dd0         db  0xdc ; '.'
0000000000008dd1         db  0xb0 ; '.'
0000000000008dd2         db  0xff ; '.'
0000000000008dd3         db  0xff ; '.'
0000000000008dd4         db  0xdc ; '.'
0000000000008dd5         db  0xb0 ; '.'
0000000000008dd6         db  0xff ; '.'
0000000000008dd7         db  0xff ; '.'
0000000000008dd8         db  0xdc ; '.'
0000000000008dd9         db  0xb0 ; '.'
0000000000008dda         db  0xff ; '.'
0000000000008ddb         db  0xff ; '.'
0000000000008ddc         db  0xdc ; '.'
0000000000008ddd         db  0xb0 ; '.'
0000000000008dde         db  0xff ; '.'
0000000000008ddf         db  0xff ; '.'
0000000000008de0         db  0xdc ; '.'
0000000000008de1         db  0xb0 ; '.'
0000000000008de2         db  0xff ; '.'
0000000000008de3         db  0xff ; '.'
0000000000008de4         db  0xdc ; '.'
0000000000008de5         db  0xb0 ; '.'
0000000000008de6         db  0xff ; '.'
0000000000008de7         db  0xff ; '.'
0000000000008de8         db  0x34 ; '4'
0000000000008de9         db  0xb0 ; '.'
0000000000008dea         db  0xff ; '.'
0000000000008deb         db  0xff ; '.'
0000000000008dec         db  0x3c ; '<'
0000000000008ded         db  0xaf ; '.'
0000000000008dee         db  0xff ; '.'
0000000000008def         db  0xff ; '.'
0000000000008df0         db  0xfc ; '.'
0000000000008df1         db  0xae ; '.'
0000000000008df2         db  0xff ; '.'
0000000000008df3         db  0xff ; '.'
0000000000008df4         db  0xc4 ; '.'
0000000000008df5         db  0xb0 ; '.'
0000000000008df6         db  0xff ; '.'
0000000000008df7         db  0xff ; '.'
0000000000008df8         db  0xb4 ; '.'
0000000000008df9         db  0xb0 ; '.'
0000000000008dfa         db  0xff ; '.'
0000000000008dfb         db  0xff ; '.'
0000000000008dfc         db  0xa4 ; '.'
0000000000008dfd         db  0xb0 ; '.'
0000000000008dfe         db  0xff ; '.'
0000000000008dff         db  0xff ; '.'
0000000000008e00         db  0x94 ; '.'
0000000000008e01         db  0xb0 ; '.'
0000000000008e02         db  0xff ; '.'
0000000000008e03         db  0xff ; '.'
0000000000008e04         db  0xdc ; '.'
0000000000008e05         db  0xb0 ; '.'
0000000000008e06         db  0xff ; '.'
0000000000008e07         db  0xff ; '.'
0000000000008e08         db  0xdc ; '.'
0000000000008e09         db  0xb0 ; '.'
0000000000008e0a         db  0xff ; '.'
0000000000008e0b         db  0xff ; '.'
0000000000008e0c         db  0xdc ; '.'
0000000000008e0d         db  0xb0 ; '.'
0000000000008e0e         db  0xff ; '.'
0000000000008e0f         db  0xff ; '.'
0000000000008e10         db  0xdc ; '.'
0000000000008e11         db  0xb0 ; '.'
0000000000008e12         db  0xff ; '.'
0000000000008e13         db  0xff ; '.'
0000000000008e14         db  0xdc ; '.'
0000000000008e15         db  0xb0 ; '.'
0000000000008e16         db  0xff ; '.'
0000000000008e17         db  0xff ; '.'
0000000000008e18         db  0xdc ; '.'
0000000000008e19         db  0xb0 ; '.'
0000000000008e1a         db  0xff ; '.'
0000000000008e1b         db  0xff ; '.'
0000000000008e1c         db  0xdc ; '.'
0000000000008e1d         db  0xb0 ; '.'
0000000000008e1e         db  0xff ; '.'
0000000000008e1f         db  0xff ; '.'
0000000000008e20         db  0xdc ; '.'
0000000000008e21         db  0xb0 ; '.'
0000000000008e22         db  0xff ; '.'
0000000000008e23         db  0xff ; '.'
0000000000008e24         db  0xdc ; '.'
0000000000008e25         db  0xb0 ; '.'
0000000000008e26         db  0xff ; '.'
0000000000008e27         db  0xff ; '.'
0000000000008e28         db  0xdc ; '.'
0000000000008e29         db  0xb0 ; '.'
0000000000008e2a         db  0xff ; '.'
0000000000008e2b         db  0xff ; '.'
0000000000008e2c         db  0xdc ; '.'
0000000000008e2d         db  0xb0 ; '.'
0000000000008e2e         db  0xff ; '.'
0000000000008e2f         db  0xff ; '.'
0000000000008e30         db  0xdc ; '.'
0000000000008e31         db  0xb0 ; '.'
0000000000008e32         db  0xff ; '.'
0000000000008e33         db  0xff ; '.'
0000000000008e34         db  0xdc ; '.'
0000000000008e35         db  0xb0 ; '.'
0000000000008e36         db  0xff ; '.'
0000000000008e37         db  0xff ; '.'
0000000000008e38         db  0xdc ; '.'
0000000000008e39         db  0xb0 ; '.'
0000000000008e3a         db  0xff ; '.'
0000000000008e3b         db  0xff ; '.'
0000000000008e3c         db  0xdc ; '.'
0000000000008e3d         db  0xb0 ; '.'
0000000000008e3e         db  0xff ; '.'
0000000000008e3f         db  0xff ; '.'
0000000000008e40         db  0xdc ; '.'
0000000000008e41         db  0xb0 ; '.'
0000000000008e42         db  0xff ; '.'
0000000000008e43         db  0xff ; '.'
0000000000008e44         db  0xdc ; '.'
0000000000008e45         db  0xb0 ; '.'
0000000000008e46         db  0xff ; '.'
0000000000008e47         db  0xff ; '.'
0000000000008e48         db  0xdc ; '.'
0000000000008e49         db  0xb0 ; '.'
0000000000008e4a         db  0xff ; '.'
0000000000008e4b         db  0xff ; '.'
0000000000008e4c         db  0x84 ; '.'
0000000000008e4d         db  0xb0 ; '.'
0000000000008e4e         db  0xff ; '.'
0000000000008e4f         db  0xff ; '.'
0000000000008e50         db  0x74 ; 't'
0000000000008e51         db  0xb0 ; '.'
0000000000008e52         db  0xff ; '.'
0000000000008e53         db  0xff ; '.'
0000000000008e54         db  0x74 ; 't'
0000000000008e55         db  0xb0 ; '.'
0000000000008e56         db  0xff ; '.'
0000000000008e57         db  0xff ; '.'
0000000000008e58         db  0x44 ; 'D'
0000000000008e59         db  0xb0 ; '.'
0000000000008e5a         db  0xff ; '.'
0000000000008e5b         db  0xff ; '.'
0000000000008e5c         db  0x74 ; 't'
0000000000008e5d         db  0xb0 ; '.'
0000000000008e5e         db  0xff ; '.'
0000000000008e5f         db  0xff ; '.'
0000000000008e60         db  0x1c ; '.'
0000000000008e61         db  0xb0 ; '.'
0000000000008e62         db  0xff ; '.'
0000000000008e63         db  0xff ; '.'
0000000000008e64         db  0x74 ; 't'
0000000000008e65         db  0xb0 ; '.'
0000000000008e66         db  0xff ; '.'
0000000000008e67         db  0xff ; '.'
0000000000008e68         db  0xd7 ; '.'
0000000000008e69         db  0xae ; '.'
0000000000008e6a         db  0xff ; '.'
0000000000008e6b         db  0xff ; '.'
0000000000008e6c         db  0x74 ; 't'
0000000000008e6d         db  0xb0 ; '.'
0000000000008e6e         db  0xff ; '.'
0000000000008e6f         db  0xff ; '.'
0000000000008e70         db  0x74 ; 't'
0000000000008e71         db  0xb0 ; '.'
0000000000008e72         db  0xff ; '.'
0000000000008e73         db  0xff ; '.'
0000000000008e74         db  0x74 ; 't'
0000000000008e75         db  0xb0 ; '.'
0000000000008e76         db  0xff ; '.'
0000000000008e77         db  0xff ; '.'
0000000000008e78         db  0x1c ; '.'
0000000000008e79         db  0xb0 ; '.'
0000000000008e7a         db  0xff ; '.'
0000000000008e7b         db  0xff ; '.'
0000000000008e7c         db  0x1c ; '.'
0000000000008e7d         db  0xb0 ; '.'
0000000000008e7e         db  0xff ; '.'
0000000000008e7f         db  0xff ; '.'
0000000000008e80         db  0x1c ; '.'
0000000000008e81         db  0xb0 ; '.'
0000000000008e82         db  0xff ; '.'
0000000000008e83         db  0xff ; '.'
0000000000008e84         db  0x1c ; '.'
0000000000008e85         db  0xb0 ; '.'
0000000000008e86         db  0xff ; '.'
0000000000008e87         db  0xff ; '.'
0000000000008e88         db  0x1c ; '.'
0000000000008e89         db  0xb0 ; '.'
0000000000008e8a         db  0xff ; '.'
0000000000008e8b         db  0xff ; '.'
0000000000008e8c         db  0x1c ; '.'
0000000000008e8d         db  0xb0 ; '.'
0000000000008e8e         db  0xff ; '.'
0000000000008e8f         db  0xff ; '.'
0000000000008e90         db  0x1c ; '.'
0000000000008e91         db  0xb0 ; '.'
0000000000008e92         db  0xff ; '.'
0000000000008e93         db  0xff ; '.'
0000000000008e94         db  0x1c ; '.'
0000000000008e95         db  0xb0 ; '.'
0000000000008e96         db  0xff ; '.'
0000000000008e97         db  0xff ; '.'
0000000000008e98         db  0x1c ; '.'
0000000000008e99         db  0xb0 ; '.'
0000000000008e9a         db  0xff ; '.'
0000000000008e9b         db  0xff ; '.'
0000000000008e9c         db  0x1c ; '.'
0000000000008e9d         db  0xb0 ; '.'
0000000000008e9e         db  0xff ; '.'
0000000000008e9f         db  0xff ; '.'
0000000000008ea0         db  0x1c ; '.'
0000000000008ea1         db  0xb0 ; '.'
0000000000008ea2         db  0xff ; '.'
0000000000008ea3         db  0xff ; '.'
0000000000008ea4         db  0x1c ; '.'
0000000000008ea5         db  0xb0 ; '.'
0000000000008ea6         db  0xff ; '.'
0000000000008ea7         db  0xff ; '.'
0000000000008ea8         db  0x1c ; '.'
0000000000008ea9         db  0xb0 ; '.'
0000000000008eaa         db  0xff ; '.'
0000000000008eab         db  0xff ; '.'
0000000000008eac         db  0x1c ; '.'
0000000000008ead         db  0xb0 ; '.'
0000000000008eae         db  0xff ; '.'
0000000000008eaf         db  0xff ; '.'
0000000000008eb0         db  0x1c ; '.'
0000000000008eb1         db  0xb0 ; '.'
0000000000008eb2         db  0xff ; '.'
0000000000008eb3         db  0xff ; '.'
0000000000008eb4         db  0x1c ; '.'
0000000000008eb5         db  0xb0 ; '.'
0000000000008eb6         db  0xff ; '.'
0000000000008eb7         db  0xff ; '.'
0000000000008eb8         db  0x74 ; 't'
0000000000008eb9         db  0xb0 ; '.'
0000000000008eba         db  0xff ; '.'
0000000000008ebb         db  0xff ; '.'
0000000000008ebc         db  0x74 ; 't'
0000000000008ebd         db  0xb0 ; '.'
0000000000008ebe         db  0xff ; '.'
0000000000008ebf         db  0xff ; '.'
0000000000008ec0         db  0x74 ; 't'
0000000000008ec1         db  0xb0 ; '.'
0000000000008ec2         db  0xff ; '.'
0000000000008ec3         db  0xff ; '.'
0000000000008ec4         db  0x74 ; 't'
0000000000008ec5         db  0xb0 ; '.'
0000000000008ec6         db  0xff ; '.'
0000000000008ec7         db  0xff ; '.'
0000000000008ec8         db  0xa7 ; '.'
0000000000008ec9         db  0xae ; '.'
0000000000008eca         db  0xff ; '.'
0000000000008ecb         db  0xff ; '.'
0000000000008ecc         db  0xdc ; '.'
0000000000008ecd         db  0xb0 ; '.'
0000000000008ece         db  0xff ; '.'
0000000000008ecf         db  0xff ; '.'
0000000000008ed0         db  0x1c ; '.'
0000000000008ed1         db  0xb0 ; '.'
0000000000008ed2         db  0xff ; '.'
0000000000008ed3         db  0xff ; '.'
0000000000008ed4         db  0x1c ; '.'
0000000000008ed5         db  0xb0 ; '.'
0000000000008ed6         db  0xff ; '.'
0000000000008ed7         db  0xff ; '.'
0000000000008ed8         db  0x1c ; '.'
0000000000008ed9         db  0xb0 ; '.'
0000000000008eda         db  0xff ; '.'
0000000000008edb         db  0xff ; '.'
0000000000008edc         db  0x1c ; '.'
0000000000008edd         db  0xb0 ; '.'
0000000000008ede         db  0xff ; '.'
0000000000008edf         db  0xff ; '.'
0000000000008ee0         db  0x1c ; '.'
0000000000008ee1         db  0xb0 ; '.'
0000000000008ee2         db  0xff ; '.'
0000000000008ee3         db  0xff ; '.'
0000000000008ee4         db  0x1c ; '.'
0000000000008ee5         db  0xb0 ; '.'
0000000000008ee6         db  0xff ; '.'
0000000000008ee7         db  0xff ; '.'
0000000000008ee8         db  0x1c ; '.'
0000000000008ee9         db  0xb0 ; '.'
0000000000008eea         db  0xff ; '.'
0000000000008eeb         db  0xff ; '.'
0000000000008eec         db  0x1c ; '.'
0000000000008eed         db  0xb0 ; '.'
0000000000008eee         db  0xff ; '.'
0000000000008eef         db  0xff ; '.'
0000000000008ef0         db  0x1c ; '.'
0000000000008ef1         db  0xb0 ; '.'
0000000000008ef2         db  0xff ; '.'
0000000000008ef3         db  0xff ; '.'
0000000000008ef4         db  0x1c ; '.'
0000000000008ef5         db  0xb0 ; '.'
0000000000008ef6         db  0xff ; '.'
0000000000008ef7         db  0xff ; '.'
0000000000008ef8         db  0x1c ; '.'
0000000000008ef9         db  0xb0 ; '.'
0000000000008efa         db  0xff ; '.'
0000000000008efb         db  0xff ; '.'
0000000000008efc         db  0x1c ; '.'
0000000000008efd         db  0xb0 ; '.'
0000000000008efe         db  0xff ; '.'
0000000000008eff         db  0xff ; '.'
0000000000008f00         db  0x1c ; '.'
0000000000008f01         db  0xb0 ; '.'
0000000000008f02         db  0xff ; '.'
0000000000008f03         db  0xff ; '.'
0000000000008f04         db  0x1c ; '.'
0000000000008f05         db  0xb0 ; '.'
0000000000008f06         db  0xff ; '.'
0000000000008f07         db  0xff ; '.'
0000000000008f08         db  0x1c ; '.'
0000000000008f09         db  0xb0 ; '.'
0000000000008f0a         db  0xff ; '.'
0000000000008f0b         db  0xff ; '.'
0000000000008f0c         db  0x1c ; '.'
0000000000008f0d         db  0xb0 ; '.'
0000000000008f0e         db  0xff ; '.'
0000000000008f0f         db  0xff ; '.'
0000000000008f10         db  0x1c ; '.'
0000000000008f11         db  0xb0 ; '.'
0000000000008f12         db  0xff ; '.'
0000000000008f13         db  0xff ; '.'
0000000000008f14         db  0x1c ; '.'
0000000000008f15         db  0xb0 ; '.'
0000000000008f16         db  0xff ; '.'
0000000000008f17         db  0xff ; '.'
0000000000008f18         db  0x1c ; '.'
0000000000008f19         db  0xb0 ; '.'
0000000000008f1a         db  0xff ; '.'
0000000000008f1b         db  0xff ; '.'
0000000000008f1c         db  0x1c ; '.'
0000000000008f1d         db  0xb0 ; '.'
0000000000008f1e         db  0xff ; '.'
0000000000008f1f         db  0xff ; '.'
0000000000008f20         db  0x1c ; '.'
0000000000008f21         db  0xb0 ; '.'
0000000000008f22         db  0xff ; '.'
0000000000008f23         db  0xff ; '.'
0000000000008f24         db  0x1c ; '.'
0000000000008f25         db  0xb0 ; '.'
0000000000008f26         db  0xff ; '.'
0000000000008f27         db  0xff ; '.'
0000000000008f28         db  0x1c ; '.'
0000000000008f29         db  0xb0 ; '.'
0000000000008f2a         db  0xff ; '.'
0000000000008f2b         db  0xff ; '.'
0000000000008f2c         db  0x1c ; '.'
0000000000008f2d         db  0xb0 ; '.'
0000000000008f2e         db  0xff ; '.'
0000000000008f2f         db  0xff ; '.'
0000000000008f30         db  0x1c ; '.'
0000000000008f31         db  0xb0 ; '.'
0000000000008f32         db  0xff ; '.'
0000000000008f33         db  0xff ; '.'
0000000000008f34         db  0x1c ; '.'
0000000000008f35         db  0xb0 ; '.'
0000000000008f36         db  0xff ; '.'
0000000000008f37         db  0xff ; '.'
0000000000008f38         db  0x74 ; 't'
0000000000008f39         db  0xb0 ; '.'
0000000000008f3a         db  0xff ; '.'
0000000000008f3b         db  0xff ; '.'
0000000000008f3c         db  0x4c ; 'L'
0000000000008f3d         db  0xaf ; '.'
0000000000008f3e         db  0xff ; '.'
0000000000008f3f         db  0xff ; '.'
0000000000008f40         db  0x1c ; '.'
0000000000008f41         db  0xb0 ; '.'
0000000000008f42         db  0xff ; '.'
0000000000008f43         db  0xff ; '.'
0000000000008f44         db  0x74 ; 't'
0000000000008f45         db  0xb0 ; '.'
0000000000008f46         db  0xff ; '.'
0000000000008f47         db  0xff ; '.'
0000000000008f48         db  0x1c ; '.'
0000000000008f49         db  0xb0 ; '.'
0000000000008f4a         db  0xff ; '.'
0000000000008f4b         db  0xff ; '.'
0000000000008f4c         db  0x74 ; 't'
0000000000008f4d         db  0xb0 ; '.'
0000000000008f4e         db  0xff ; '.'
0000000000008f4f         db  0xff ; '.'
0000000000008f50         db  0x1c ; '.'
0000000000008f51         db  0xb0 ; '.'
0000000000008f52         db  0xff ; '.'
0000000000008f53         db  0xff ; '.'
0000000000008f54         db  0x1c ; '.'
0000000000008f55         db  0xb0 ; '.'
0000000000008f56         db  0xff ; '.'
0000000000008f57         db  0xff ; '.'
0000000000008f58         db  0x1c ; '.'
0000000000008f59         db  0xb0 ; '.'
0000000000008f5a         db  0xff ; '.'
0000000000008f5b         db  0xff ; '.'
0000000000008f5c         db  0x1c ; '.'
0000000000008f5d         db  0xb0 ; '.'
0000000000008f5e         db  0xff ; '.'
0000000000008f5f         db  0xff ; '.'
0000000000008f60         db  0x1c ; '.'
0000000000008f61         db  0xb0 ; '.'
0000000000008f62         db  0xff ; '.'
0000000000008f63         db  0xff ; '.'
0000000000008f64         db  0x1c ; '.'
0000000000008f65         db  0xb0 ; '.'
0000000000008f66         db  0xff ; '.'
0000000000008f67         db  0xff ; '.'
0000000000008f68         db  0x1c ; '.'
0000000000008f69         db  0xb0 ; '.'
0000000000008f6a         db  0xff ; '.'
0000000000008f6b         db  0xff ; '.'
0000000000008f6c         db  0x1c ; '.'
0000000000008f6d         db  0xb0 ; '.'
0000000000008f6e         db  0xff ; '.'
0000000000008f6f         db  0xff ; '.'
0000000000008f70         db  0x1c ; '.'
0000000000008f71         db  0xb0 ; '.'
0000000000008f72         db  0xff ; '.'
0000000000008f73         db  0xff ; '.'
0000000000008f74         db  0x1c ; '.'
0000000000008f75         db  0xb0 ; '.'
0000000000008f76         db  0xff ; '.'
0000000000008f77         db  0xff ; '.'
0000000000008f78         db  0x1c ; '.'
0000000000008f79         db  0xb0 ; '.'
0000000000008f7a         db  0xff ; '.'
0000000000008f7b         db  0xff ; '.'
0000000000008f7c         db  0x1c ; '.'
0000000000008f7d         db  0xb0 ; '.'
0000000000008f7e         db  0xff ; '.'
0000000000008f7f         db  0xff ; '.'
0000000000008f80         db  0x1c ; '.'
0000000000008f81         db  0xb0 ; '.'
0000000000008f82         db  0xff ; '.'
0000000000008f83         db  0xff ; '.'
0000000000008f84         db  0x1c ; '.'
0000000000008f85         db  0xb0 ; '.'
0000000000008f86         db  0xff ; '.'
0000000000008f87         db  0xff ; '.'
0000000000008f88         db  0x1c ; '.'
0000000000008f89         db  0xb0 ; '.'
0000000000008f8a         db  0xff ; '.'
0000000000008f8b         db  0xff ; '.'
0000000000008f8c         db  0x1c ; '.'
0000000000008f8d         db  0xb0 ; '.'
0000000000008f8e         db  0xff ; '.'
0000000000008f8f         db  0xff ; '.'
0000000000008f90         db  0x1c ; '.'
0000000000008f91         db  0xb0 ; '.'
0000000000008f92         db  0xff ; '.'
0000000000008f93         db  0xff ; '.'
0000000000008f94         db  0x1c ; '.'
0000000000008f95         db  0xb0 ; '.'
0000000000008f96         db  0xff ; '.'
0000000000008f97         db  0xff ; '.'
0000000000008f98         db  0x1c ; '.'
0000000000008f99         db  0xb0 ; '.'
0000000000008f9a         db  0xff ; '.'
0000000000008f9b         db  0xff ; '.'
0000000000008f9c         db  0x1c ; '.'
0000000000008f9d         db  0xb0 ; '.'
0000000000008f9e         db  0xff ; '.'
0000000000008f9f         db  0xff ; '.'
0000000000008fa0         db  0x1c ; '.'
0000000000008fa1         db  0xb0 ; '.'
0000000000008fa2         db  0xff ; '.'
0000000000008fa3         db  0xff ; '.'
0000000000008fa4         db  0x1c ; '.'
0000000000008fa5         db  0xb0 ; '.'
0000000000008fa6         db  0xff ; '.'
0000000000008fa7         db  0xff ; '.'
0000000000008fa8         db  0x1c ; '.'
0000000000008fa9         db  0xb0 ; '.'
0000000000008faa         db  0xff ; '.'
0000000000008fab         db  0xff ; '.'
0000000000008fac         db  0x1c ; '.'
0000000000008fad         db  0xb0 ; '.'
0000000000008fae         db  0xff ; '.'
0000000000008faf         db  0xff ; '.'
0000000000008fb0         db  0x1c ; '.'
0000000000008fb1         db  0xb0 ; '.'
0000000000008fb2         db  0xff ; '.'
0000000000008fb3         db  0xff ; '.'
0000000000008fb4         db  0x1c ; '.'
0000000000008fb5         db  0xb0 ; '.'
0000000000008fb6         db  0xff ; '.'
0000000000008fb7         db  0xff ; '.'
0000000000008fb8         db  0xd7 ; '.'
0000000000008fb9         db  0xad ; '.'
0000000000008fba         db  0xff ; '.'
0000000000008fbb         db  0xff ; '.'
0000000000008fbc         db  0x74 ; 't'
0000000000008fbd         db  0xb0 ; '.'
0000000000008fbe         db  0xff ; '.'
0000000000008fbf         db  0xff ; '.'
0000000000008fc0         db  0xd7 ; '.'
0000000000008fc1         db  0xad ; '.'
0000000000008fc2         db  0xff ; '.'
0000000000008fc3         db  0xff ; '.'
0000000000008fc4         db  0x44 ; 'D'
0000000000008fc5         db  0xb0 ; '.'
0000000000008fc6         db  0xff ; '.'
0000000000008fc7         db  0xff ; '.'
0000000000008fc8         db  0xc8 ; '.'                                         ; DATA XREF=sub_3e90+137
0000000000008fc9         db  0xaf ; '.'
0000000000008fca         db  0xff ; '.'
0000000000008fcb         db  0xff ; '.'
0000000000008fcc         db  0xd8 ; '.'
0000000000008fcd         db  0xae ; '.'
0000000000008fce         db  0xff ; '.'
0000000000008fcf         db  0xff ; '.'
0000000000008fd0         db  0xd8 ; '.'
0000000000008fd1         db  0xae ; '.'
0000000000008fd2         db  0xff ; '.'
0000000000008fd3         db  0xff ; '.'
0000000000008fd4         db  0xd8 ; '.'
0000000000008fd5         db  0xae ; '.'
0000000000008fd6         db  0xff ; '.'
0000000000008fd7         db  0xff ; '.'
0000000000008fd8         db  0xd8 ; '.'
0000000000008fd9         db  0xae ; '.'
0000000000008fda         db  0xff ; '.'
0000000000008fdb         db  0xff ; '.'
0000000000008fdc         db  0xd8 ; '.'
0000000000008fdd         db  0xae ; '.'
0000000000008fde         db  0xff ; '.'
0000000000008fdf         db  0xff ; '.'
0000000000008fe0         db  0xd8 ; '.'
0000000000008fe1         db  0xae ; '.'
0000000000008fe2         db  0xff ; '.'
0000000000008fe3         db  0xff ; '.'
0000000000008fe4         db  0xb8 ; '.'
0000000000008fe5         db  0xaf ; '.'
0000000000008fe6         db  0xff ; '.'
0000000000008fe7         db  0xff ; '.'
0000000000008fe8         db  0x08 ; '.'
0000000000008fe9         db  0xb1 ; '.'
0000000000008fea         db  0xff ; '.'
0000000000008feb         db  0xff ; '.'
0000000000008fec         db  0xf0 ; '.'
0000000000008fed         db  0xb0 ; '.'
0000000000008fee         db  0xff ; '.'
0000000000008fef         db  0xff ; '.'
0000000000008ff0         db  0xa0 ; '.'
0000000000008ff1         db  0xaf ; '.'
0000000000008ff2         db  0xff ; '.'
0000000000008ff3         db  0xff ; '.'
0000000000008ff4         db  0xe0 ; '.'
0000000000008ff5         db  0xb0 ; '.'
0000000000008ff6         db  0xff ; '.'
0000000000008ff7         db  0xff ; '.'
0000000000008ff8         db  0x88 ; '.'
0000000000008ff9         db  0xaf ; '.'
0000000000008ffa         db  0xff ; '.'
0000000000008ffb         db  0xff ; '.'
0000000000008ffc         db  0xc8 ; '.'
0000000000008ffd         db  0xb0 ; '.'
0000000000008ffe         db  0xff ; '.'
0000000000008fff         db  0xff ; '.'
0000000000009000         db  0xd8 ; '.'
0000000000009001         db  0xae ; '.'
0000000000009002         db  0xff ; '.'
0000000000009003         db  0xff ; '.'
0000000000009004         db  0xd8 ; '.'
0000000000009005         db  0xae ; '.'
0000000000009006         db  0xff ; '.'
0000000000009007         db  0xff ; '.'
0000000000009008         db  0xd8 ; '.'
0000000000009009         db  0xae ; '.'
000000000000900a         db  0xff ; '.'
000000000000900b         db  0xff ; '.'
000000000000900c         db  0xd8 ; '.'
000000000000900d         db  0xae ; '.'
000000000000900e         db  0xff ; '.'
000000000000900f         db  0xff ; '.'
0000000000009010         db  0xd8 ; '.'
0000000000009011         db  0xae ; '.'
0000000000009012         db  0xff ; '.'
0000000000009013         db  0xff ; '.'
0000000000009014         db  0xd8 ; '.'
0000000000009015         db  0xae ; '.'
0000000000009016         db  0xff ; '.'
0000000000009017         db  0xff ; '.'
0000000000009018         db  0xd8 ; '.'
0000000000009019         db  0xae ; '.'
000000000000901a         db  0xff ; '.'
000000000000901b         db  0xff ; '.'
000000000000901c         db  0xd8 ; '.'
000000000000901d         db  0xae ; '.'
000000000000901e         db  0xff ; '.'
000000000000901f         db  0xff ; '.'
0000000000009020         db  0xd8 ; '.'
0000000000009021         db  0xae ; '.'
0000000000009022         db  0xff ; '.'
0000000000009023         db  0xff ; '.'
0000000000009024         db  0xd8 ; '.'
0000000000009025         db  0xae ; '.'
0000000000009026         db  0xff ; '.'
0000000000009027         db  0xff ; '.'
0000000000009028         db  0xd8 ; '.'
0000000000009029         db  0xae ; '.'
000000000000902a         db  0xff ; '.'
000000000000902b         db  0xff ; '.'
000000000000902c         db  0xd8 ; '.'
000000000000902d         db  0xae ; '.'
000000000000902e         db  0xff ; '.'
000000000000902f         db  0xff ; '.'
0000000000009030         db  0xd8 ; '.'
0000000000009031         db  0xae ; '.'
0000000000009032         db  0xff ; '.'
0000000000009033         db  0xff ; '.'
0000000000009034         db  0xd8 ; '.'
0000000000009035         db  0xae ; '.'
0000000000009036         db  0xff ; '.'
0000000000009037         db  0xff ; '.'
0000000000009038         db  0xd8 ; '.'
0000000000009039         db  0xae ; '.'
000000000000903a         db  0xff ; '.'
000000000000903b         db  0xff ; '.'
000000000000903c         db  0xd8 ; '.'
000000000000903d         db  0xae ; '.'
000000000000903e         db  0xff ; '.'
000000000000903f         db  0xff ; '.'
0000000000009040         db  0xd8 ; '.'
0000000000009041         db  0xae ; '.'
0000000000009042         db  0xff ; '.'
0000000000009043         db  0xff ; '.'
0000000000009044         db  0xd8 ; '.'
0000000000009045         db  0xae ; '.'
0000000000009046         db  0xff ; '.'
0000000000009047         db  0xff ; '.'
0000000000009048         db  0xb0 ; '.'
0000000000009049         db  0xb0 ; '.'
000000000000904a         db  0xff ; '.'
000000000000904b         db  0xff ; '.'
000000000000904c         db  0x98 ; '.'
000000000000904d         db  0xb0 ; '.'
000000000000904e         db  0xff ; '.'
000000000000904f         db  0xff ; '.'
0000000000009050         db  0x98 ; '.'
0000000000009051         db  0xb0 ; '.'
0000000000009052         db  0xff ; '.'
0000000000009053         db  0xff ; '.'
0000000000009054         db  0x80 ; '.'
0000000000009055         db  0xb0 ; '.'
0000000000009056         db  0xff ; '.'
0000000000009057         db  0xff ; '.'
0000000000009058         db  0x98 ; '.'
0000000000009059         db  0xb0 ; '.'
000000000000905a         db  0xff ; '.'
000000000000905b         db  0xff ; '.'
000000000000905c         db  0x68 ; 'h'
000000000000905d         db  0xb0 ; '.'
000000000000905e         db  0xff ; '.'
000000000000905f         db  0xff ; '.'
0000000000009060         db  0x98 ; '.'
0000000000009061         db  0xb0 ; '.'
0000000000009062         db  0xff ; '.'
0000000000009063         db  0xff ; '.'
0000000000009064         db  0xd8 ; '.'
0000000000009065         db  0xac ; '.'
0000000000009066         db  0xff ; '.'
0000000000009067         db  0xff ; '.'
0000000000009068         db  0x98 ; '.'
0000000000009069         db  0xb0 ; '.'
000000000000906a         db  0xff ; '.'
000000000000906b         db  0xff ; '.'
000000000000906c         db  0x98 ; '.'
000000000000906d         db  0xb0 ; '.'
000000000000906e         db  0xff ; '.'
000000000000906f         db  0xff ; '.'
0000000000009070         db  0x98 ; '.'
0000000000009071         db  0xb0 ; '.'
0000000000009072         db  0xff ; '.'
0000000000009073         db  0xff ; '.'
0000000000009074         db  0x68 ; 'h'
0000000000009075         db  0xb0 ; '.'
0000000000009076         db  0xff ; '.'
0000000000009077         db  0xff ; '.'
0000000000009078         db  0x68 ; 'h'
0000000000009079         db  0xb0 ; '.'
000000000000907a         db  0xff ; '.'
000000000000907b         db  0xff ; '.'
000000000000907c         db  0x68 ; 'h'
000000000000907d         db  0xb0 ; '.'
000000000000907e         db  0xff ; '.'
000000000000907f         db  0xff ; '.'
0000000000009080         db  0x68 ; 'h'
0000000000009081         db  0xb0 ; '.'
0000000000009082         db  0xff ; '.'
0000000000009083         db  0xff ; '.'
0000000000009084         db  0x68 ; 'h'
0000000000009085         db  0xb0 ; '.'
0000000000009086         db  0xff ; '.'
0000000000009087         db  0xff ; '.'
0000000000009088         db  0x68 ; 'h'
0000000000009089         db  0xb0 ; '.'
000000000000908a         db  0xff ; '.'
000000000000908b         db  0xff ; '.'
000000000000908c         db  0x68 ; 'h'
000000000000908d         db  0xb0 ; '.'
000000000000908e         db  0xff ; '.'
000000000000908f         db  0xff ; '.'
0000000000009090         db  0x68 ; 'h'
0000000000009091         db  0xb0 ; '.'
0000000000009092         db  0xff ; '.'
0000000000009093         db  0xff ; '.'
0000000000009094         db  0x68 ; 'h'
0000000000009095         db  0xb0 ; '.'
0000000000009096         db  0xff ; '.'
0000000000009097         db  0xff ; '.'
0000000000009098         db  0x68 ; 'h'
0000000000009099         db  0xb0 ; '.'
000000000000909a         db  0xff ; '.'
000000000000909b         db  0xff ; '.'
000000000000909c         db  0x68 ; 'h'
000000000000909d         db  0xb0 ; '.'
000000000000909e         db  0xff ; '.'
000000000000909f         db  0xff ; '.'
00000000000090a0         db  0x68 ; 'h'
00000000000090a1         db  0xb0 ; '.'
00000000000090a2         db  0xff ; '.'
00000000000090a3         db  0xff ; '.'
00000000000090a4         db  0x68 ; 'h'
00000000000090a5         db  0xb0 ; '.'
00000000000090a6         db  0xff ; '.'
00000000000090a7         db  0xff ; '.'
00000000000090a8         db  0x68 ; 'h'
00000000000090a9         db  0xb0 ; '.'
00000000000090aa         db  0xff ; '.'
00000000000090ab         db  0xff ; '.'
00000000000090ac         db  0x68 ; 'h'
00000000000090ad         db  0xb0 ; '.'
00000000000090ae         db  0xff ; '.'
00000000000090af         db  0xff ; '.'
00000000000090b0         db  0x68 ; 'h'
00000000000090b1         db  0xb0 ; '.'
00000000000090b2         db  0xff ; '.'
00000000000090b3         db  0xff ; '.'
00000000000090b4         db  0x98 ; '.'
00000000000090b5         db  0xb0 ; '.'
00000000000090b6         db  0xff ; '.'
00000000000090b7         db  0xff ; '.'
00000000000090b8         db  0x98 ; '.'
00000000000090b9         db  0xb0 ; '.'
00000000000090ba         db  0xff ; '.'
00000000000090bb         db  0xff ; '.'
00000000000090bc         db  0x98 ; '.'
00000000000090bd         db  0xb0 ; '.'
00000000000090be         db  0xff ; '.'
00000000000090bf         db  0xff ; '.'
00000000000090c0         db  0x98 ; '.'
00000000000090c1         db  0xb0 ; '.'
00000000000090c2         db  0xff ; '.'
00000000000090c3         db  0xff ; '.'
00000000000090c4         db  0xa8 ; '.'
00000000000090c5         db  0xac ; '.'
00000000000090c6         db  0xff ; '.'
00000000000090c7         db  0xff ; '.'
00000000000090c8         db  0xd8 ; '.'
00000000000090c9         db  0xae ; '.'
00000000000090ca         db  0xff ; '.'
00000000000090cb         db  0xff ; '.'
00000000000090cc         db  0x68 ; 'h'
00000000000090cd         db  0xb0 ; '.'
00000000000090ce         db  0xff ; '.'
00000000000090cf         db  0xff ; '.'
00000000000090d0         db  0x68 ; 'h'
00000000000090d1         db  0xb0 ; '.'
00000000000090d2         db  0xff ; '.'
00000000000090d3         db  0xff ; '.'
00000000000090d4         db  0x68 ; 'h'
00000000000090d5         db  0xb0 ; '.'
00000000000090d6         db  0xff ; '.'
00000000000090d7         db  0xff ; '.'
00000000000090d8         db  0x68 ; 'h'
00000000000090d9         db  0xb0 ; '.'
00000000000090da         db  0xff ; '.'
00000000000090db         db  0xff ; '.'
00000000000090dc         db  0x68 ; 'h'
00000000000090dd         db  0xb0 ; '.'
00000000000090de         db  0xff ; '.'
00000000000090df         db  0xff ; '.'
00000000000090e0         db  0x68 ; 'h'
00000000000090e1         db  0xb0 ; '.'
00000000000090e2         db  0xff ; '.'
00000000000090e3         db  0xff ; '.'
00000000000090e4         db  0x68 ; 'h'
00000000000090e5         db  0xb0 ; '.'
00000000000090e6         db  0xff ; '.'
00000000000090e7         db  0xff ; '.'
00000000000090e8         db  0x68 ; 'h'
00000000000090e9         db  0xb0 ; '.'
00000000000090ea         db  0xff ; '.'
00000000000090eb         db  0xff ; '.'
00000000000090ec         db  0x68 ; 'h'
00000000000090ed         db  0xb0 ; '.'
00000000000090ee         db  0xff ; '.'
00000000000090ef         db  0xff ; '.'
00000000000090f0         db  0x68 ; 'h'
00000000000090f1         db  0xb0 ; '.'
00000000000090f2         db  0xff ; '.'
00000000000090f3         db  0xff ; '.'
00000000000090f4         db  0x68 ; 'h'
00000000000090f5         db  0xb0 ; '.'
00000000000090f6         db  0xff ; '.'
00000000000090f7         db  0xff ; '.'
00000000000090f8         db  0x68 ; 'h'
00000000000090f9         db  0xb0 ; '.'
00000000000090fa         db  0xff ; '.'
00000000000090fb         db  0xff ; '.'
00000000000090fc         db  0x68 ; 'h'
00000000000090fd         db  0xb0 ; '.'
00000000000090fe         db  0xff ; '.'
00000000000090ff         db  0xff ; '.'
0000000000009100         db  0x68 ; 'h'
0000000000009101         db  0xb0 ; '.'
0000000000009102         db  0xff ; '.'
0000000000009103         db  0xff ; '.'
0000000000009104         db  0x68 ; 'h'
0000000000009105         db  0xb0 ; '.'
0000000000009106         db  0xff ; '.'
0000000000009107         db  0xff ; '.'
0000000000009108         db  0x68 ; 'h'
0000000000009109         db  0xb0 ; '.'
000000000000910a         db  0xff ; '.'
000000000000910b         db  0xff ; '.'
000000000000910c         db  0x68 ; 'h'
000000000000910d         db  0xb0 ; '.'
000000000000910e         db  0xff ; '.'
000000000000910f         db  0xff ; '.'
0000000000009110         db  0x68 ; 'h'
0000000000009111         db  0xb0 ; '.'
0000000000009112         db  0xff ; '.'
0000000000009113         db  0xff ; '.'
0000000000009114         db  0x68 ; 'h'
0000000000009115         db  0xb0 ; '.'
0000000000009116         db  0xff ; '.'
0000000000009117         db  0xff ; '.'
0000000000009118         db  0x68 ; 'h'
0000000000009119         db  0xb0 ; '.'
000000000000911a         db  0xff ; '.'
000000000000911b         db  0xff ; '.'
000000000000911c         db  0x68 ; 'h'
000000000000911d         db  0xb0 ; '.'
000000000000911e         db  0xff ; '.'
000000000000911f         db  0xff ; '.'
0000000000009120         db  0x68 ; 'h'
0000000000009121         db  0xb0 ; '.'
0000000000009122         db  0xff ; '.'
0000000000009123         db  0xff ; '.'
0000000000009124         db  0x68 ; 'h'
0000000000009125         db  0xb0 ; '.'
0000000000009126         db  0xff ; '.'
0000000000009127         db  0xff ; '.'
0000000000009128         db  0x68 ; 'h'
0000000000009129         db  0xb0 ; '.'
000000000000912a         db  0xff ; '.'
000000000000912b         db  0xff ; '.'
000000000000912c         db  0x68 ; 'h'
000000000000912d         db  0xb0 ; '.'
000000000000912e         db  0xff ; '.'
000000000000912f         db  0xff ; '.'
0000000000009130         db  0x68 ; 'h'
0000000000009131         db  0xb0 ; '.'
0000000000009132         db  0xff ; '.'
0000000000009133         db  0xff ; '.'
0000000000009134         db  0x98 ; '.'
0000000000009135         db  0xb0 ; '.'
0000000000009136         db  0xff ; '.'
0000000000009137         db  0xff ; '.'
0000000000009138         db  0x68 ; 'h'
0000000000009139         db  0xaf ; '.'
000000000000913a         db  0xff ; '.'
000000000000913b         db  0xff ; '.'
000000000000913c         db  0x68 ; 'h'
000000000000913d         db  0xb0 ; '.'
000000000000913e         db  0xff ; '.'
000000000000913f         db  0xff ; '.'
0000000000009140         db  0x98 ; '.'
0000000000009141         db  0xb0 ; '.'
0000000000009142         db  0xff ; '.'
0000000000009143         db  0xff ; '.'
0000000000009144         db  0x68 ; 'h'
0000000000009145         db  0xb0 ; '.'
0000000000009146         db  0xff ; '.'
0000000000009147         db  0xff ; '.'
0000000000009148         db  0x98 ; '.'
0000000000009149         db  0xb0 ; '.'
000000000000914a         db  0xff ; '.'
000000000000914b         db  0xff ; '.'
000000000000914c         db  0x68 ; 'h'
000000000000914d         db  0xb0 ; '.'
000000000000914e         db  0xff ; '.'
000000000000914f         db  0xff ; '.'
0000000000009150         db  0x68 ; 'h'
0000000000009151         db  0xb0 ; '.'
0000000000009152         db  0xff ; '.'
0000000000009153         db  0xff ; '.'
0000000000009154         db  0x68 ; 'h'
0000000000009155         db  0xb0 ; '.'
0000000000009156         db  0xff ; '.'
0000000000009157         db  0xff ; '.'
0000000000009158         db  0x68 ; 'h'
0000000000009159         db  0xb0 ; '.'
000000000000915a         db  0xff ; '.'
000000000000915b         db  0xff ; '.'
000000000000915c         db  0x68 ; 'h'
000000000000915d         db  0xb0 ; '.'
000000000000915e         db  0xff ; '.'
000000000000915f         db  0xff ; '.'
0000000000009160         db  0x68 ; 'h'
0000000000009161         db  0xb0 ; '.'
0000000000009162         db  0xff ; '.'
0000000000009163         db  0xff ; '.'
0000000000009164         db  0x68 ; 'h'
0000000000009165         db  0xb0 ; '.'
0000000000009166         db  0xff ; '.'
0000000000009167         db  0xff ; '.'
0000000000009168         db  0x68 ; 'h'
0000000000009169         db  0xb0 ; '.'
000000000000916a         db  0xff ; '.'
000000000000916b         db  0xff ; '.'
000000000000916c         db  0x68 ; 'h'
000000000000916d         db  0xb0 ; '.'
000000000000916e         db  0xff ; '.'
000000000000916f         db  0xff ; '.'
0000000000009170         db  0x68 ; 'h'
0000000000009171         db  0xb0 ; '.'
0000000000009172         db  0xff ; '.'
0000000000009173         db  0xff ; '.'
0000000000009174         db  0x68 ; 'h'
0000000000009175         db  0xb0 ; '.'
0000000000009176         db  0xff ; '.'
0000000000009177         db  0xff ; '.'
0000000000009178         db  0x68 ; 'h'
0000000000009179         db  0xb0 ; '.'
000000000000917a         db  0xff ; '.'
000000000000917b         db  0xff ; '.'
000000000000917c         db  0x68 ; 'h'
000000000000917d         db  0xb0 ; '.'
000000000000917e         db  0xff ; '.'
000000000000917f         db  0xff ; '.'
0000000000009180         db  0x68 ; 'h'
0000000000009181         db  0xb0 ; '.'
0000000000009182         db  0xff ; '.'
0000000000009183         db  0xff ; '.'
0000000000009184         db  0x68 ; 'h'
0000000000009185         db  0xb0 ; '.'
0000000000009186         db  0xff ; '.'
0000000000009187         db  0xff ; '.'
0000000000009188         db  0x68 ; 'h'
0000000000009189         db  0xb0 ; '.'
000000000000918a         db  0xff ; '.'
000000000000918b         db  0xff ; '.'
000000000000918c         db  0x68 ; 'h'
000000000000918d         db  0xb0 ; '.'
000000000000918e         db  0xff ; '.'
000000000000918f         db  0xff ; '.'
0000000000009190         db  0x68 ; 'h'
0000000000009191         db  0xb0 ; '.'
0000000000009192         db  0xff ; '.'
0000000000009193         db  0xff ; '.'
0000000000009194         db  0x68 ; 'h'
0000000000009195         db  0xb0 ; '.'
0000000000009196         db  0xff ; '.'
0000000000009197         db  0xff ; '.'
0000000000009198         db  0x68 ; 'h'
0000000000009199         db  0xb0 ; '.'
000000000000919a         db  0xff ; '.'
000000000000919b         db  0xff ; '.'
000000000000919c         db  0x68 ; 'h'
000000000000919d         db  0xb0 ; '.'
000000000000919e         db  0xff ; '.'
000000000000919f         db  0xff ; '.'
00000000000091a0         db  0x68 ; 'h'
00000000000091a1         db  0xb0 ; '.'
00000000000091a2         db  0xff ; '.'
00000000000091a3         db  0xff ; '.'
00000000000091a4         db  0x68 ; 'h'
00000000000091a5         db  0xb0 ; '.'
00000000000091a6         db  0xff ; '.'
00000000000091a7         db  0xff ; '.'
00000000000091a8         db  0x68 ; 'h'
00000000000091a9         db  0xb0 ; '.'
00000000000091aa         db  0xff ; '.'
00000000000091ab         db  0xff ; '.'
00000000000091ac         db  0x68 ; 'h'
00000000000091ad         db  0xb0 ; '.'
00000000000091ae         db  0xff ; '.'
00000000000091af         db  0xff ; '.'
00000000000091b0         db  0x68 ; 'h'
00000000000091b1         db  0xb0 ; '.'
00000000000091b2         db  0xff ; '.'
00000000000091b3         db  0xff ; '.'
00000000000091b4         db  0xd8 ; '.'
00000000000091b5         db  0xab ; '.'
00000000000091b6         db  0xff ; '.'
00000000000091b7         db  0xff ; '.'
00000000000091b8         db  0x98 ; '.'
00000000000091b9         db  0xb0 ; '.'
00000000000091ba         db  0xff ; '.'
00000000000091bb         db  0xff ; '.'
00000000000091bc         db  0xd8 ; '.'
00000000000091bd         db  0xab ; '.'
00000000000091be         db  0xff ; '.'
00000000000091bf         db  0xff ; '.'
00000000000091c0         db  0x80 ; '.'
00000000000091c1         db  0xb0 ; '.'
00000000000091c2         db  0xff ; '.'
00000000000091c3         db  0xff ; '.'
00000000000091c4         db  0x00 ; '.'
00000000000091c5         db  0x00 ; '.'
00000000000091c6         db  0x00 ; '.'
00000000000091c7         db  0x00 ; '.'
00000000000091c8         db  0x00 ; '.'
00000000000091c9         db  0x00 ; '.'
00000000000091ca         db  0x00 ; '.'
00000000000091cb         db  0x00 ; '.'
00000000000091cc         db  0x00 ; '.'
00000000000091cd         db  0x00 ; '.'
00000000000091ce         db  0x00 ; '.'
00000000000091cf         db  0x00 ; '.'
00000000000091d0         db  0x00 ; '.'
00000000000091d1         db  0x00 ; '.'
00000000000091d2         db  0x00 ; '.'
00000000000091d3         db  0x00 ; '.'
00000000000091d4         db  0x00 ; '.'
00000000000091d5         db  0x00 ; '.'
00000000000091d6         db  0x00 ; '.'
00000000000091d7         db  0x00 ; '.'
00000000000091d8         db  0x00 ; '.'
00000000000091d9         db  0x00 ; '.'
00000000000091da         db  0x00 ; '.'
00000000000091db         db  0x00 ; '.'
00000000000091dc         db  0x00 ; '.'
00000000000091dd         db  0x00 ; '.'
00000000000091de         db  0x00 ; '.'
00000000000091df         db  0x00 ; '.'
                     quoting_style_vals:
00000000000091e0         db  0x00 ; '.'
00000000000091e1         db  0x00 ; '.'
00000000000091e2         db  0x00 ; '.'
00000000000091e3         db  0x00 ; '.'
00000000000091e4         db  0x01 ; '.'
00000000000091e5         db  0x00 ; '.'
00000000000091e6         db  0x00 ; '.'
00000000000091e7         db  0x00 ; '.'
00000000000091e8         db  0x02 ; '.'
00000000000091e9         db  0x00 ; '.'
00000000000091ea         db  0x00 ; '.'
00000000000091eb         db  0x00 ; '.'
00000000000091ec         db  0x03 ; '.'
00000000000091ed         db  0x00 ; '.'
00000000000091ee         db  0x00 ; '.'
00000000000091ef         db  0x00 ; '.'
00000000000091f0         db  0x04 ; '.'
00000000000091f1         db  0x00 ; '.'
00000000000091f2         db  0x00 ; '.'
00000000000091f3         db  0x00 ; '.'
00000000000091f4         db  0x05 ; '.'
00000000000091f5         db  0x00 ; '.'
00000000000091f6         db  0x00 ; '.'
00000000000091f7         db  0x00 ; '.'
00000000000091f8         db  0x06 ; '.'
00000000000091f9         db  0x00 ; '.'
00000000000091fa         db  0x00 ; '.'
00000000000091fb         db  0x00 ; '.'
00000000000091fc         db  0x07 ; '.'
00000000000091fd         db  0x00 ; '.'
00000000000091fe         db  0x00 ; '.'
00000000000091ff         db  0x00 ; '.'
0000000000009200         db  0x08 ; '.'
0000000000009201         db  0x00 ; '.'
0000000000009202         db  0x00 ; '.'
0000000000009203         db  0x00 ; '.'
0000000000009204         db  0x09 ; '.'
0000000000009205         db  0x00 ; '.'
0000000000009206         db  0x00 ; '.'
0000000000009207         db  0x00 ; '.'
                     aSSSn:
0000000000009208         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000009214         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000921b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000921c         db  0x43 ; 'C'
000000000000921d         db  0x29 ; ')'
000000000000921e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000921f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000922f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000009246         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000009262         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000009277         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000928d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000092a1         align      8
                     aNlicenseGplv3G:
00000000000092a8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000009374         align      8
                     aWrittenBySSSna:
0000000000009378         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_9398:        // aWrittenBySSSns
0000000000009398         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000093bc         align      64
                     aWrittenBySSSns_93c0:        // aWrittenBySSSns
00000000000093c0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_93e8:        // aWrittenBySSSns
00000000000093e8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000009414         align      8
                     aWrittenBySSSns_9418:        // aWrittenBySSSns
0000000000009418         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000009448         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000947c         align      128
                     aWrittenBySSSns_9480:        // aWrittenBySSSns
0000000000009480         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000094bc         align      64
                     aGeneralHelpUsi:
00000000000094c0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000009501         align      8
                     switch_table_9508:        // switch_table
0000000000009508         dd         version_etc_arn.loc_5676-switch_table_9508, version_etc_arn.loc_5708-switch_table_9508, version_etc_arn.loc_5748-switch_table_9508, version_etc_arn.loc_5790-switch_table_9508 ; switch table used at 0x55f4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000009518         dd         version_etc_arn.loc_57e0-switch_table_9508, version_etc_arn.loc_5838-switch_table_9508, version_etc_arn.loc_5868-switch_table_9508, version_etc_arn.loc_58d0-switch_table_9508
0000000000009528         dd         version_etc_arn.loc_5600-switch_table_9508, version_etc_arn.loc_56b0-switch_table_9508
0000000000009530         align      64
                     version_etc_copyright:
0000000000009540         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000956f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aAscii:
0000000000009580         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000009586         align      8
                     switch_table_9588:        // switch_table
0000000000009588         dd         vasnprintf.loc_72c6-switch_table_9588, vasnprintf.loc_6d60-switch_table_9588, vasnprintf.loc_6d30-switch_table_9588, vasnprintf.loc_6ca8-switch_table_9588 ; switch table used at 0x68fb containing 18 entries, DATA XREF=vasnprintf+1357
0000000000009598         dd         vasnprintf.loc_6c68-switch_table_9588, 2 dup (vasnprintf.loc_6a38-switch_table_9588), 4 dup (vasnprintf.loc_6900-switch_table_9588), vasnprintf.loc_6be8-switch_table_9588
00000000000095b8         dd         vasnprintf.loc_6b60-switch_table_9588, 2 dup (vasnprintf.loc_6a38-switch_table_9588), 3 dup (vasnprintf.loc_6900-switch_table_9588)
                     switch_table_95d0:        // switch_table
00000000000095d0         dd         vasnprintf.loc_7110-switch_table_95d0, vasnprintf.loc_7130-switch_table_95d0, vasnprintf.loc_7120-switch_table_95d0, 2 dup (vasnprintf.loc_6fe0-switch_table_95d0) ; switch table used at 0x6ea0 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
00000000000095e4         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
00000000000095eb         db  0x00 ; '.'
00000000000095ec         db  0x00 ; '.'
00000000000095ed         db  0x00 ; '.'
00000000000095ee         db  0x00 ; '.'
00000000000095ef         db  0x00 ; '.'
00000000000095f0         db  0x40 ; '@'                                         ; DATA XREF=printf_fetchargs+10
00000000000095f1         db  0xdf ; '.'
00000000000095f2         db  0xff ; '.'
00000000000095f3         db  0xff ; '.'
00000000000095f4         db  0x8c ; '.'
00000000000095f5         db  0xdf ; '.'
00000000000095f6         db  0xff ; '.'
00000000000095f7         db  0xff ; '.'
00000000000095f8         db  0x8c ; '.'
00000000000095f9         db  0xdf ; '.'
00000000000095fa         db  0xff ; '.'
00000000000095fb         db  0xff ; '.'
00000000000095fc         db  0xae ; '.'
00000000000095fd         db  0xdf ; '.'
00000000000095fe         db  0xff ; '.'
00000000000095ff         db  0xff ; '.'
0000000000009600         db  0xae ; '.'
0000000000009601         db  0xdf ; '.'
0000000000009602         db  0xff ; '.'
0000000000009603         db  0xff ; '.'
0000000000009604         db  0x6a ; 'j'
0000000000009605         db  0xdf ; '.'
0000000000009606         db  0xff ; '.'
0000000000009607         db  0xff ; '.'
0000000000009608         db  0x6a ; 'j'
0000000000009609         db  0xdf ; '.'
000000000000960a         db  0xff ; '.'
000000000000960b         db  0xff ; '.'
000000000000960c         db  0x46 ; 'F'
000000000000960d         db  0xdf ; '.'
000000000000960e         db  0xff ; '.'
000000000000960f         db  0xff ; '.'
0000000000009610         db  0x46 ; 'F'
0000000000009611         db  0xdf ; '.'
0000000000009612         db  0xff ; '.'
0000000000009613         db  0xff ; '.'
0000000000009614         db  0x46 ; 'F'
0000000000009615         db  0xdf ; '.'
0000000000009616         db  0xff ; '.'
0000000000009617         db  0xff ; '.'
0000000000009618         db  0x46 ; 'F'
0000000000009619         db  0xdf ; '.'
000000000000961a         db  0xff ; '.'
000000000000961b         db  0xff ; '.'
000000000000961c         db  0x02 ; '.'
000000000000961d         db  0xe0 ; '.'
000000000000961e         db  0xff ; '.'
000000000000961f         db  0xff ; '.'
0000000000009620         db  0x10 ; '.'
0000000000009621         db  0xdf ; '.'
0000000000009622         db  0xff ; '.'
0000000000009623         db  0xff ; '.'
0000000000009624         db  0x6a ; 'j'
0000000000009625         db  0xdf ; '.'
0000000000009626         db  0xff ; '.'
0000000000009627         db  0xff ; '.'
0000000000009628         db  0x6a ; 'j'
0000000000009629         db  0xdf ; '.'
000000000000962a         db  0xff ; '.'
000000000000962b         db  0xff ; '.'
000000000000962c         db  0xd4 ; '.'
000000000000962d         db  0xdf ; '.'
000000000000962e         db  0xff ; '.'
000000000000962f         db  0xff ; '.'
0000000000009630         db  0x30 ; '0'
0000000000009631         db  0xe0 ; '.'
0000000000009632         db  0xff ; '.'
0000000000009633         db  0xff ; '.'
0000000000009634         db  0x46 ; 'F'
0000000000009635         db  0xdf ; '.'
0000000000009636         db  0xff ; '.'
0000000000009637         db  0xff ; '.'
0000000000009638         db  0x46 ; 'F'
0000000000009639         db  0xdf ; '.'
000000000000963a         db  0xff ; '.'
000000000000963b         db  0xff ; '.'
000000000000963c         db  0x46 ; 'F'
000000000000963d         db  0xdf ; '.'
000000000000963e         db  0xff ; '.'
000000000000963f         db  0xff ; '.'
0000000000009640         db  0x46 ; 'F'
0000000000009641         db  0xdf ; '.'
0000000000009642         db  0xff ; '.'
0000000000009643         db  0xff ; '.'
0000000000009644         db  0x46 ; 'F'
0000000000009645         db  0xdf ; '.'
0000000000009646         db  0xff ; '.'
0000000000009647         db  0xff ; '.'
0000000000009648         db  0x46 ; 'F'
0000000000009649         db  0xdf ; '.'
000000000000964a         db  0xff ; '.'
000000000000964b         db  0xff ; '.'
000000000000964c         db  0x00 ; '.'
000000000000964d         db  0x00 ; '.'
000000000000964e         db  0x00 ; '.'
000000000000964f         db  0x00 ; '.'
                     wide_null_string.2696:
0000000000009650         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
0000000000009651         db  0x00 ; '.'
0000000000009652         db  0x00 ; '.'
0000000000009653         db  0x00 ; '.'
0000000000009654         db  0x4e ; 'N'
0000000000009655         db  0x00 ; '.'
0000000000009656         db  0x00 ; '.'
0000000000009657         db  0x00 ; '.'
0000000000009658         db  0x55 ; 'U'
0000000000009659         db  0x00 ; '.'
000000000000965a         db  0x00 ; '.'
000000000000965b         db  0x00 ; '.'
000000000000965c         db  0x4c ; 'L'
000000000000965d         db  0x00 ; '.'
000000000000965e         db  0x00 ; '.'
000000000000965f         db  0x00 ; '.'
0000000000009660         db  0x4c ; 'L'
0000000000009661         db  0x00 ; '.'
0000000000009662         db  0x00 ; '.'
0000000000009663         db  0x00 ; '.'
0000000000009664         db  0x29 ; ')'
0000000000009665         db  0x00 ; '.'
0000000000009666         db  0x00 ; '.'
0000000000009667         db  0x00 ; '.'
0000000000009668         db  0x00 ; '.'
0000000000009669         db  0x00 ; '.'
000000000000966a         db  0x00 ; '.'
000000000000966b         db  0x00 ; '.'
                     switch_table_966c:        // switch_table
000000000000966c         dd         printf_parse.loc_797b-switch_table_966c, 27 dup (printf_parse.loc_7f0b-switch_table_966c), printf_parse.loc_7e7b-switch_table_966c, printf_parse.loc_7f0b-switch_table_966c ; switch table used at 0x7905 containing 84 entries, DATA XREF=printf_parse+564
00000000000096e4         dd         printf_parse.loc_7e9c-switch_table_966c, printf_parse.loc_7f0b-switch_table_966c, 3 dup (printf_parse.loc_7e7b-switch_table_966c), 11 dup (printf_parse.loc_7f0b-switch_table_966c)
0000000000009724         dd         printf_parse.loc_7907-switch_table_966c, 4 dup (printf_parse.loc_7f0b-switch_table_966c), printf_parse.loc_7eac-switch_table_966c, 8 dup (printf_parse.loc_7f0b-switch_table_966c)
000000000000975c         dd         printf_parse.loc_7e7b-switch_table_966c, printf_parse.loc_7f0b-switch_table_966c, printf_parse.loc_7e08-switch_table_966c, printf_parse.loc_7e1b-switch_table_966c
000000000000976c         dd         3 dup (printf_parse.loc_7e7b-switch_table_966c), printf_parse.loc_7f0b-switch_table_966c, printf_parse.loc_7e1b-switch_table_966c, 4 dup (printf_parse.loc_7f0b-switch_table_966c)
0000000000009790         dd         printf_parse.loc_7dbc-switch_table_966c, printf_parse.loc_7eac-switch_table_966c, printf_parse.loc_7f00-switch_table_966c, 2 dup (printf_parse.loc_7f0b-switch_table_966c)
00000000000097a4         dd         printf_parse.loc_7e68-switch_table_966c, printf_parse.loc_7f0b-switch_table_966c, printf_parse.loc_7eac-switch_table_966c, 2 dup (printf_parse.loc_7f0b-switch_table_966c)
00000000000097b8         dd         printf_parse.loc_7eac-switch_table_966c


        ; Section .eh_frame_hdr
        ; Range: [0x97bc; 0x9a78[ (700 bytes)
        ; File offset : [38844; 39544[ (700 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000097bc         db  0x01 ; '.'
00000000000097bd         db  0x1b ; '.'
00000000000097be         db  0x03 ; '.'
00000000000097bf         db  0x3b ; ';'
00000000000097c0         db  0xb8 ; '.'
00000000000097c1         db  0x02 ; '.'
00000000000097c2         db  0x00 ; '.'
00000000000097c3         db  0x00 ; '.'
00000000000097c4         db  0x56 ; 'V'
00000000000097c5         db  0x00 ; '.'
00000000000097c6         db  0x00 ; '.'
00000000000097c7         db  0x00 ; '.'
00000000000097c8         db  0x24 ; '$'
00000000000097c9         db  0x80 ; '.'
00000000000097ca         db  0xff ; '.'
00000000000097cb         db  0xff ; '.'
00000000000097cc         db  0x04 ; '.'
00000000000097cd         db  0x03 ; '.'
00000000000097ce         db  0x00 ; '.'
00000000000097cf         db  0x00 ; '.'
00000000000097d0         db  0x04 ; '.'
00000000000097d1         db  0x84 ; '.'
00000000000097d2         db  0xff ; '.'
00000000000097d3         db  0xff ; '.'
00000000000097d4         db  0x2c ; ','
00000000000097d5         db  0x03 ; '.'
00000000000097d6         db  0x00 ; '.'
00000000000097d7         db  0x00 ; '.'
00000000000097d8         db  0x14 ; '.'
00000000000097d9         db  0x84 ; '.'
00000000000097da         db  0xff ; '.'
00000000000097db         db  0xff ; '.'
00000000000097dc         db  0x60 ; '`'
00000000000097dd         db  0x05 ; '.'
00000000000097de         db  0x00 ; '.'
00000000000097df         db  0x00 ; '.'
00000000000097e0         db  0x84 ; '.'
00000000000097e1         db  0x87 ; '.'
00000000000097e2         db  0xff ; '.'
00000000000097e3         db  0xff ; '.'
00000000000097e4         db  0xd4 ; '.'
00000000000097e5         db  0x02 ; '.'
00000000000097e6         db  0x00 ; '.'
00000000000097e7         db  0x00 ; '.'
00000000000097e8         db  0x94 ; '.'
00000000000097e9         db  0x88 ; '.'
00000000000097ea         db  0xff ; '.'
00000000000097eb         db  0xff ; '.'
00000000000097ec         db  0x44 ; 'D'
00000000000097ed         db  0x03 ; '.'
00000000000097ee         db  0x00 ; '.'
00000000000097ef         db  0x00 ; '.'
00000000000097f0         db  0x14 ; '.'
00000000000097f1         db  0x8b ; '.'
00000000000097f2         db  0xff ; '.'
00000000000097f3         db  0xff ; '.'
00000000000097f4         db  0xb8 ; '.'
00000000000097f5         db  0x03 ; '.'
00000000000097f6         db  0x00 ; '.'
00000000000097f7         db  0x00 ; '.'
00000000000097f8         db  0x84 ; '.'
00000000000097f9         db  0x8b ; '.'
00000000000097fa         db  0xff ; '.'
00000000000097fb         db  0xff ; '.'
00000000000097fc         db  0xe0 ; '.'
00000000000097fd         db  0x03 ; '.'
00000000000097fe         db  0x00 ; '.'
00000000000097ff         db  0x00 ; '.'
0000000000009800         db  0x04 ; '.'
0000000000009801         db  0x8c ; '.'
0000000000009802         db  0xff ; '.'
0000000000009803         db  0xff ; '.'
0000000000009804         db  0xfc ; '.'
0000000000009805         db  0x03 ; '.'
0000000000009806         db  0x00 ; '.'
0000000000009807         db  0x00 ; '.'
0000000000009808         db  0xc4 ; '.'
0000000000009809         db  0x91 ; '.'
000000000000980a         db  0xff ; '.'
000000000000980b         db  0xff ; '.'
000000000000980c         db  0x60 ; '`'
000000000000980d         db  0x04 ; '.'
000000000000980e         db  0x00 ; '.'
000000000000980f         db  0x00 ; '.'
0000000000009810         db  0x94 ; '.'
0000000000009811         db  0x99 ; '.'
0000000000009812         db  0xff ; '.'
0000000000009813         db  0xff ; '.'
0000000000009814         db  0x34 ; '4'
0000000000009815         db  0x05 ; '.'
0000000000009816         db  0x00 ; '.'
0000000000009817         db  0x00 ; '.'
0000000000009818         db  0xc4 ; '.'
0000000000009819         db  0x9d ; '.'
000000000000981a         db  0xff ; '.'
000000000000981b         db  0xff ; '.'
000000000000981c         db  0x9c ; '.'
000000000000981d         db  0x05 ; '.'
000000000000981e         db  0x00 ; '.'
000000000000981f         db  0x00 ; '.'
0000000000009820         db  0x74 ; 't'
0000000000009821         db  0x9e ; '.'
0000000000009822         db  0xff ; '.'
0000000000009823         db  0xff ; '.'
0000000000009824         db  0xd0 ; '.'
0000000000009825         db  0x05 ; '.'
0000000000009826         db  0x00 ; '.'
0000000000009827         db  0x00 ; '.'
0000000000009828         db  0x84 ; '.'
0000000000009829         db  0x9e ; '.'
000000000000982a         db  0xff ; '.'
000000000000982b         db  0xff ; '.'
000000000000982c         db  0xe4 ; '.'
000000000000982d         db  0x05 ; '.'
000000000000982e         db  0x00 ; '.'
000000000000982f         db  0x00 ; '.'
0000000000009830         db  0x94 ; '.'
0000000000009831         db  0x9e ; '.'
0000000000009832         db  0xff ; '.'
0000000000009833         db  0xff ; '.'
0000000000009834         db  0xfc ; '.'
0000000000009835         db  0x05 ; '.'
0000000000009836         db  0x00 ; '.'
0000000000009837         db  0x00 ; '.'
0000000000009838         db  0xa4 ; '.'
0000000000009839         db  0x9e ; '.'
000000000000983a         db  0xff ; '.'
000000000000983b         db  0xff ; '.'
000000000000983c         db  0x10 ; '.'
000000000000983d         db  0x06 ; '.'
000000000000983e         db  0x00 ; '.'
000000000000983f         db  0x00 ; '.'
0000000000009840         db  0xb4 ; '.'
0000000000009841         db  0x9e ; '.'
0000000000009842         db  0xff ; '.'
0000000000009843         db  0xff ; '.'
0000000000009844         db  0x24 ; '$'
0000000000009845         db  0x06 ; '.'
0000000000009846         db  0x00 ; '.'
0000000000009847         db  0x00 ; '.'
0000000000009848         db  0x64 ; 'd'
0000000000009849         db  0x9f ; '.'
000000000000984a         db  0xff ; '.'
000000000000984b         db  0xff ; '.'
000000000000984c         db  0x54 ; 'T'
000000000000984d         db  0x06 ; '.'
000000000000984e         db  0x00 ; '.'
000000000000984f         db  0x00 ; '.'
0000000000009850         db  0xc4 ; '.'
0000000000009851         db  0x9f ; '.'
0000000000009852         db  0xff ; '.'
0000000000009853         db  0xff ; '.'
0000000000009854         db  0x74 ; 't'
0000000000009855         db  0x06 ; '.'
0000000000009856         db  0x00 ; '.'
0000000000009857         db  0x00 ; '.'
0000000000009858         db  0x64 ; 'd'
0000000000009859         db  0xa0 ; '.'
000000000000985a         db  0xff ; '.'
000000000000985b         db  0xff ; '.'
000000000000985c         db  0x8c ; '.'
000000000000985d         db  0x06 ; '.'
000000000000985e         db  0x00 ; '.'
000000000000985f         db  0x00 ; '.'
0000000000009860         db  0x04 ; '.'
0000000000009861         db  0xa1 ; '.'
0000000000009862         db  0xff ; '.'
0000000000009863         db  0xff ; '.'
0000000000009864         db  0xac ; '.'
0000000000009865         db  0x06 ; '.'
0000000000009866         db  0x00 ; '.'
0000000000009867         db  0x00 ; '.'
0000000000009868         db  0xf4 ; '.'
0000000000009869         db  0xa1 ; '.'
000000000000986a         db  0xff ; '.'
000000000000986b         db  0xff ; '.'
000000000000986c         db  0xf0 ; '.'
000000000000986d         db  0x06 ; '.'
000000000000986e         db  0x00 ; '.'
000000000000986f         db  0x00 ; '.'
0000000000009870         db  0x34 ; '4'
0000000000009871         db  0xb4 ; '.'
0000000000009872         db  0xff ; '.'
0000000000009873         db  0xff ; '.'
0000000000009874         db  0x68 ; 'h'
0000000000009875         db  0x07 ; '.'
0000000000009876         db  0x00 ; '.'
0000000000009877         db  0x00 ; '.'
0000000000009878         db  0xe4 ; '.'
0000000000009879         db  0xb5 ; '.'
000000000000987a         db  0xff ; '.'
000000000000987b         db  0xff ; '.'
000000000000987c         db  0xd4 ; '.'
000000000000987d         db  0x07 ; '.'
000000000000987e         db  0x00 ; '.'
000000000000987f         db  0x00 ; '.'
0000000000009880         db  0x24 ; '$'
0000000000009881         db  0xb6 ; '.'
0000000000009882         db  0xff ; '.'
0000000000009883         db  0xff ; '.'
0000000000009884         db  0x00 ; '.'
0000000000009885         db  0x08 ; '.'
0000000000009886         db  0x00 ; '.'
0000000000009887         db  0x00 ; '.'
0000000000009888         db  0x44 ; 'D'
0000000000009889         db  0xb6 ; '.'
000000000000988a         db  0xff ; '.'
000000000000988b         db  0xff ; '.'
000000000000988c         db  0x14 ; '.'
000000000000988d         db  0x08 ; '.'
000000000000988e         db  0x00 ; '.'
000000000000988f         db  0x00 ; '.'
0000000000009890         db  0x64 ; 'd'
0000000000009891         db  0xb6 ; '.'
0000000000009892         db  0xff ; '.'
0000000000009893         db  0xff ; '.'
0000000000009894         db  0x28 ; '('
0000000000009895         db  0x08 ; '.'
0000000000009896         db  0x00 ; '.'
0000000000009897         db  0x00 ; '.'
0000000000009898         db  0xa4 ; '.'
0000000000009899         db  0xb6 ; '.'
000000000000989a         db  0xff ; '.'
000000000000989b         db  0xff ; '.'
000000000000989c         db  0x3c ; '<'
000000000000989d         db  0x08 ; '.'
000000000000989e         db  0x00 ; '.'
000000000000989f         db  0x00 ; '.'
00000000000098a0         db  0xc4 ; '.'
00000000000098a1         db  0xb6 ; '.'
00000000000098a2         db  0xff ; '.'
00000000000098a3         db  0xff ; '.'
00000000000098a4         db  0x50 ; 'P'
00000000000098a5         db  0x08 ; '.'
00000000000098a6         db  0x00 ; '.'
00000000000098a7         db  0x00 ; '.'
00000000000098a8         db  0xf4 ; '.'
00000000000098a9         db  0xb6 ; '.'
00000000000098aa         db  0xff ; '.'
00000000000098ab         db  0xff ; '.'
00000000000098ac         db  0x64 ; 'd'
00000000000098ad         db  0x08 ; '.'
00000000000098ae         db  0x00 ; '.'
00000000000098af         db  0x00 ; '.'
00000000000098b0         db  0x74 ; 't'
00000000000098b1         db  0xb7 ; '.'
00000000000098b2         db  0xff ; '.'
00000000000098b3         db  0xff ; '.'
00000000000098b4         db  0xb8 ; '.'
00000000000098b5         db  0x08 ; '.'
00000000000098b6         db  0x00 ; '.'
00000000000098b7         db  0x00 ; '.'
00000000000098b8         db  0x64 ; 'd'
00000000000098b9         db  0xb8 ; '.'
00000000000098ba         db  0xff ; '.'
00000000000098bb         db  0xff ; '.'
00000000000098bc         db  0x24 ; '$'
00000000000098bd         db  0x09 ; '.'
00000000000098be         db  0x00 ; '.'
00000000000098bf         db  0x00 ; '.'
00000000000098c0         db  0x74 ; 't'
00000000000098c1         db  0xb8 ; '.'
00000000000098c2         db  0xff ; '.'
00000000000098c3         db  0xff ; '.'
00000000000098c4         db  0x38 ; '8'
00000000000098c5         db  0x09 ; '.'
00000000000098c6         db  0x00 ; '.'
00000000000098c7         db  0x00 ; '.'
00000000000098c8         db  0x14 ; '.'
00000000000098c9         db  0xb9 ; '.'
00000000000098ca         db  0xff ; '.'
00000000000098cb         db  0xff ; '.'
00000000000098cc         db  0x64 ; 'd'
00000000000098cd         db  0x09 ; '.'
00000000000098ce         db  0x00 ; '.'
00000000000098cf         db  0x00 ; '.'
00000000000098d0         db  0x34 ; '4'
00000000000098d1         db  0xb9 ; '.'
00000000000098d2         db  0xff ; '.'
00000000000098d3         db  0xff ; '.'
00000000000098d4         db  0x78 ; 'x'
00000000000098d5         db  0x09 ; '.'
00000000000098d6         db  0x00 ; '.'
00000000000098d7         db  0x00 ; '.'
00000000000098d8         db  0x44 ; 'D'
00000000000098d9         db  0xb9 ; '.'
00000000000098da         db  0xff ; '.'
00000000000098db         db  0xff ; '.'
00000000000098dc         db  0x8c ; '.'
00000000000098dd         db  0x09 ; '.'
00000000000098de         db  0x00 ; '.'
00000000000098df         db  0x00 ; '.'
00000000000098e0         db  0x64 ; 'd'
00000000000098e1         db  0xb9 ; '.'
00000000000098e2         db  0xff ; '.'
00000000000098e3         db  0xff ; '.'
00000000000098e4         db  0xa0 ; '.'
00000000000098e5         db  0x09 ; '.'
00000000000098e6         db  0x00 ; '.'
00000000000098e7         db  0x00 ; '.'
00000000000098e8         db  0x84 ; '.'
00000000000098e9         db  0xb9 ; '.'
00000000000098ea         db  0xff ; '.'
00000000000098eb         db  0xff ; '.'
00000000000098ec         db  0xb4 ; '.'
00000000000098ed         db  0x09 ; '.'
00000000000098ee         db  0x00 ; '.'
00000000000098ef         db  0x00 ; '.'
00000000000098f0         db  0x14 ; '.'
00000000000098f1         db  0xba ; '.'
00000000000098f2         db  0xff ; '.'
00000000000098f3         db  0xff ; '.'
00000000000098f4         db  0xd0 ; '.'
00000000000098f5         db  0x09 ; '.'
00000000000098f6         db  0x00 ; '.'
00000000000098f7         db  0x00 ; '.'
00000000000098f8         db  0xa4 ; '.'
00000000000098f9         db  0xba ; '.'
00000000000098fa         db  0xff ; '.'
00000000000098fb         db  0xff ; '.'
00000000000098fc         db  0xec ; '.'
00000000000098fd         db  0x09 ; '.'
00000000000098fe         db  0x00 ; '.'
00000000000098ff         db  0x00 ; '.'
0000000000009900         db  0xb4 ; '.'
0000000000009901         db  0xba ; '.'
0000000000009902         db  0xff ; '.'
0000000000009903         db  0xff ; '.'
0000000000009904         db  0x00 ; '.'
0000000000009905         db  0x0a ; '.'
0000000000009906         db  0x00 ; '.'
0000000000009907         db  0x00 ; '.'
0000000000009908         db  0xc4 ; '.'
0000000000009909         db  0xba ; '.'
000000000000990a         db  0xff ; '.'
000000000000990b         db  0xff ; '.'
000000000000990c         db  0x14 ; '.'
000000000000990d         db  0x0a ; '.'
000000000000990e         db  0x00 ; '.'
000000000000990f         db  0x00 ; '.'
0000000000009910         db  0x64 ; 'd'
0000000000009911         db  0xbb ; '.'
0000000000009912         db  0xff ; '.'
0000000000009913         db  0xff ; '.'
0000000000009914         db  0x30 ; '0'
0000000000009915         db  0x0a ; '.'
0000000000009916         db  0x00 ; '.'
0000000000009917         db  0x00 ; '.'
0000000000009918         db  0x74 ; 't'
0000000000009919         db  0xbb ; '.'
000000000000991a         db  0xff ; '.'
000000000000991b         db  0xff ; '.'
000000000000991c         db  0x44 ; 'D'
000000000000991d         db  0x0a ; '.'
000000000000991e         db  0x00 ; '.'
000000000000991f         db  0x00 ; '.'
0000000000009920         db  0x94 ; '.'
0000000000009921         db  0xbb ; '.'
0000000000009922         db  0xff ; '.'
0000000000009923         db  0xff ; '.'
0000000000009924         db  0x58 ; 'X'
0000000000009925         db  0x0a ; '.'
0000000000009926         db  0x00 ; '.'
0000000000009927         db  0x00 ; '.'
0000000000009928         db  0xa4 ; '.'
0000000000009929         db  0xbb ; '.'
000000000000992a         db  0xff ; '.'
000000000000992b         db  0xff ; '.'
000000000000992c         db  0x6c ; 'l'
000000000000992d         db  0x0a ; '.'
000000000000992e         db  0x00 ; '.'
000000000000992f         db  0x00 ; '.'
0000000000009930         db  0x34 ; '4'
0000000000009931         db  0xbc ; '.'
0000000000009932         db  0xff ; '.'
0000000000009933         db  0xff ; '.'
0000000000009934         db  0x88 ; '.'
0000000000009935         db  0x0a ; '.'
0000000000009936         db  0x00 ; '.'
0000000000009937         db  0x00 ; '.'
0000000000009938         db  0xd4 ; '.'
0000000000009939         db  0xbc ; '.'
000000000000993a         db  0xff ; '.'
000000000000993b         db  0xff ; '.'
000000000000993c         db  0xa4 ; '.'
000000000000993d         db  0x0a ; '.'
000000000000993e         db  0x00 ; '.'
000000000000993f         db  0x00 ; '.'
0000000000009940         db  0xe4 ; '.'
0000000000009941         db  0xbc ; '.'
0000000000009942         db  0xff ; '.'
0000000000009943         db  0xff ; '.'
0000000000009944         db  0xb8 ; '.'
0000000000009945         db  0x0a ; '.'
0000000000009946         db  0x00 ; '.'
0000000000009947         db  0x00 ; '.'
0000000000009948         db  0x04 ; '.'
0000000000009949         db  0xbd ; '.'
000000000000994a         db  0xff ; '.'
000000000000994b         db  0xff ; '.'
000000000000994c         db  0xcc ; '.'
000000000000994d         db  0x0a ; '.'
000000000000994e         db  0x00 ; '.'
000000000000994f         db  0x00 ; '.'
0000000000009950         db  0x24 ; '$'
0000000000009951         db  0xbd ; '.'
0000000000009952         db  0xff ; '.'
0000000000009953         db  0xff ; '.'
0000000000009954         db  0xe0 ; '.'
0000000000009955         db  0x0a ; '.'
0000000000009956         db  0x00 ; '.'
0000000000009957         db  0x00 ; '.'
0000000000009958         db  0x34 ; '4'
0000000000009959         db  0xbd ; '.'
000000000000995a         db  0xff ; '.'
000000000000995b         db  0xff ; '.'
000000000000995c         db  0xf4 ; '.'
000000000000995d         db  0x0a ; '.'
000000000000995e         db  0x00 ; '.'
000000000000995f         db  0x00 ; '.'
0000000000009960         db  0x54 ; 'T'
0000000000009961         db  0xbd ; '.'
0000000000009962         db  0xff ; '.'
0000000000009963         db  0xff ; '.'
0000000000009964         db  0x08 ; '.'
0000000000009965         db  0x0b ; '.'
0000000000009966         db  0x00 ; '.'
0000000000009967         db  0x00 ; '.'
0000000000009968         db  0x74 ; 't'
0000000000009969         db  0xbd ; '.'
000000000000996a         db  0xff ; '.'
000000000000996b         db  0xff ; '.'
000000000000996c         db  0x1c ; '.'
000000000000996d         db  0x0b ; '.'
000000000000996e         db  0x00 ; '.'
000000000000996f         db  0x00 ; '.'
0000000000009970         db  0x94 ; '.'
0000000000009971         db  0xbd ; '.'
0000000000009972         db  0xff ; '.'
0000000000009973         db  0xff ; '.'
0000000000009974         db  0x34 ; '4'
0000000000009975         db  0x0b ; '.'
0000000000009976         db  0x00 ; '.'
0000000000009977         db  0x00 ; '.'
0000000000009978         db  0xb4 ; '.'
0000000000009979         db  0xc1 ; '.'
000000000000997a         db  0xff ; '.'
000000000000997b         db  0xff ; '.'
000000000000997c         db  0x48 ; 'H'
000000000000997d         db  0x0c ; '.'
000000000000997e         db  0x00 ; '.'
000000000000997f         db  0x00 ; '.'
0000000000009980         db  0xd4 ; '.'
0000000000009981         db  0xc1 ; '.'
0000000000009982         db  0xff ; '.'
0000000000009983         db  0xff ; '.'
0000000000009984         db  0x5c ; '\'
0000000000009985         db  0x0c ; '.'
0000000000009986         db  0x00 ; '.'
0000000000009987         db  0x00 ; '.'
0000000000009988         db  0x54 ; 'T'
0000000000009989         db  0xc2 ; '.'
000000000000998a         db  0xff ; '.'
000000000000998b         db  0xff ; '.'
000000000000998c         db  0x78 ; 'x'
000000000000998d         db  0x0c ; '.'
000000000000998e         db  0x00 ; '.'
000000000000998f         db  0x00 ; '.'
0000000000009990         db  0x34 ; '4'
0000000000009991         db  0xc3 ; '.'
0000000000009992         db  0xff ; '.'
0000000000009993         db  0xff ; '.'
0000000000009994         db  0xa4 ; '.'
0000000000009995         db  0x0c ; '.'
0000000000009996         db  0x00 ; '.'
0000000000009997         db  0x00 ; '.'
0000000000009998         db  0xb4 ; '.'
0000000000009999         db  0xc3 ; '.'
000000000000999a         db  0xff ; '.'
000000000000999b         db  0xff ; '.'
000000000000999c         db  0xc4 ; '.'
000000000000999d         db  0x0c ; '.'
000000000000999e         db  0x00 ; '.'
000000000000999f         db  0x00 ; '.'
00000000000099a0         db  0xd4 ; '.'
00000000000099a1         db  0xc3 ; '.'
00000000000099a2         db  0xff ; '.'
00000000000099a3         db  0xff ; '.'
00000000000099a4         db  0xe0 ; '.'
00000000000099a5         db  0x0c ; '.'
00000000000099a6         db  0x00 ; '.'
00000000000099a7         db  0x00 ; '.'
00000000000099a8         db  0x04 ; '.'
00000000000099a9         db  0xc4 ; '.'
00000000000099aa         db  0xff ; '.'
00000000000099ab         db  0xff ; '.'
00000000000099ac         db  0xf4 ; '.'
00000000000099ad         db  0x0c ; '.'
00000000000099ae         db  0x00 ; '.'
00000000000099af         db  0x00 ; '.'
00000000000099b0         db  0x14 ; '.'
00000000000099b1         db  0xc4 ; '.'
00000000000099b2         db  0xff ; '.'
00000000000099b3         db  0xff ; '.'
00000000000099b4         db  0x08 ; '.'
00000000000099b5         db  0x0d ; '.'
00000000000099b6         db  0x00 ; '.'
00000000000099b7         db  0x00 ; '.'
00000000000099b8         db  0x54 ; 'T'
00000000000099b9         db  0xc4 ; '.'
00000000000099ba         db  0xff ; '.'
00000000000099bb         db  0xff ; '.'
00000000000099bc         db  0x2c ; ','
00000000000099bd         db  0x0d ; '.'
00000000000099be         db  0x00 ; '.'
00000000000099bf         db  0x00 ; '.'
00000000000099c0         db  0x84 ; '.'
00000000000099c1         db  0xc4 ; '.'
00000000000099c2         db  0xff ; '.'
00000000000099c3         db  0xff ; '.'
00000000000099c4         db  0x40 ; '@'
00000000000099c5         db  0x0d ; '.'
00000000000099c6         db  0x00 ; '.'
00000000000099c7         db  0x00 ; '.'
00000000000099c8         db  0x14 ; '.'
00000000000099c9         db  0xc5 ; '.'
00000000000099ca         db  0xff ; '.'
00000000000099cb         db  0xff ; '.'
00000000000099cc         db  0x58 ; 'X'
00000000000099cd         db  0x0d ; '.'
00000000000099ce         db  0x00 ; '.'
00000000000099cf         db  0x00 ; '.'
00000000000099d0         db  0x64 ; 'd'
00000000000099d1         db  0xc5 ; '.'
00000000000099d2         db  0xff ; '.'
00000000000099d3         db  0xff ; '.'
00000000000099d4         db  0x70 ; 'p'
00000000000099d5         db  0x0d ; '.'
00000000000099d6         db  0x00 ; '.'
00000000000099d7         db  0x00 ; '.'
00000000000099d8         db  0x84 ; '.'
00000000000099d9         db  0xc5 ; '.'
00000000000099da         db  0xff ; '.'
00000000000099db         db  0xff ; '.'
00000000000099dc         db  0x8c ; '.'
00000000000099dd         db  0x0d ; '.'
00000000000099de         db  0x00 ; '.'
00000000000099df         db  0x00 ; '.'
00000000000099e0         db  0xb4 ; '.'
00000000000099e1         db  0xc5 ; '.'
00000000000099e2         db  0xff ; '.'
00000000000099e3         db  0xff ; '.'
00000000000099e4         db  0xa8 ; '.'
00000000000099e5         db  0x0d ; '.'
00000000000099e6         db  0x00 ; '.'
00000000000099e7         db  0x00 ; '.'
00000000000099e8         db  0xe4 ; '.'
00000000000099e9         db  0xc5 ; '.'
00000000000099ea         db  0xff ; '.'
00000000000099eb         db  0xff ; '.'
00000000000099ec         db  0xd0 ; '.'
00000000000099ed         db  0x0d ; '.'
00000000000099ee         db  0x00 ; '.'
00000000000099ef         db  0x00 ; '.'
00000000000099f0         db  0x04 ; '.'
00000000000099f1         db  0xc6 ; '.'
00000000000099f2         db  0xff ; '.'
00000000000099f3         db  0xff ; '.'
00000000000099f4         db  0xec ; '.'
00000000000099f5         db  0x0d ; '.'
00000000000099f6         db  0x00 ; '.'
00000000000099f7         db  0x00 ; '.'
00000000000099f8         db  0x44 ; 'D'
00000000000099f9         db  0xc6 ; '.'
00000000000099fa         db  0xff ; '.'
00000000000099fb         db  0xff ; '.'
00000000000099fc         db  0x04 ; '.'
00000000000099fd         db  0x0e ; '.'
00000000000099fe         db  0x00 ; '.'
00000000000099ff         db  0x00 ; '.'
0000000000009a00         db  0x04 ; '.'
0000000000009a01         db  0xc7 ; '.'
0000000000009a02         db  0xff ; '.'
0000000000009a03         db  0xff ; '.'
0000000000009a04         db  0x24 ; '$'
0000000000009a05         db  0x0e ; '.'
0000000000009a06         db  0x00 ; '.'
0000000000009a07         db  0x00 ; '.'
0000000000009a08         db  0x94 ; '.'
0000000000009a09         db  0xc7 ; '.'
0000000000009a0a         db  0xff ; '.'
0000000000009a0b         db  0xff ; '.'
0000000000009a0c         db  0x64 ; 'd'
0000000000009a0d         db  0x0e ; '.'
0000000000009a0e         db  0x00 ; '.'
0000000000009a0f         db  0x00 ; '.'
0000000000009a10         db  0xf4 ; '.'
0000000000009a11         db  0xc7 ; '.'
0000000000009a12         db  0xff ; '.'
0000000000009a13         db  0xff ; '.'
0000000000009a14         db  0x90 ; '.'
0000000000009a15         db  0x0e ; '.'
0000000000009a16         db  0x00 ; '.'
0000000000009a17         db  0x00 ; '.'
0000000000009a18         db  0x84 ; '.'
0000000000009a19         db  0xc9 ; '.'
0000000000009a1a         db  0xff ; '.'
0000000000009a1b         db  0xff ; '.'
0000000000009a1c         db  0xdc ; '.'
0000000000009a1d         db  0x0e ; '.'
0000000000009a1e         db  0x00 ; '.'
0000000000009a1f         db  0x00 ; '.'
0000000000009a20         db  0x04 ; '.'
0000000000009a21         db  0xca ; '.'
0000000000009a22         db  0xff ; '.'
0000000000009a23         db  0xff ; '.'
0000000000009a24         db  0x04 ; '.'
0000000000009a25         db  0x0f ; '.'
0000000000009a26         db  0x00 ; '.'
0000000000009a27         db  0x00 ; '.'
0000000000009a28         db  0x84 ; '.'
0000000000009a29         db  0xca ; '.'
0000000000009a2a         db  0xff ; '.'
0000000000009a2b         db  0xff ; '.'
0000000000009a2c         db  0x54 ; 'T'
0000000000009a2d         db  0x0f ; '.'
0000000000009a2e         db  0x00 ; '.'
0000000000009a2f         db  0x00 ; '.'
0000000000009a30         db  0xc4 ; '.'
0000000000009a31         db  0xca ; '.'
0000000000009a32         db  0xff ; '.'
0000000000009a33         db  0xff ; '.'
0000000000009a34         db  0x74 ; 't'
0000000000009a35         db  0x0f ; '.'
0000000000009a36         db  0x00 ; '.'
0000000000009a37         db  0x00 ; '.'
0000000000009a38         db  0x44 ; 'D'
0000000000009a39         db  0xcb ; '.'
0000000000009a3a         db  0xff ; '.'
0000000000009a3b         db  0xff ; '.'
0000000000009a3c         db  0xac ; '.'
0000000000009a3d         db  0x0f ; '.'
0000000000009a3e         db  0x00 ; '.'
0000000000009a3f         db  0x00 ; '.'
0000000000009a40         db  0x84 ; '.'
0000000000009a41         db  0xcb ; '.'
0000000000009a42         db  0xff ; '.'
0000000000009a43         db  0xff ; '.'
0000000000009a44         db  0xcc ; '.'
0000000000009a45         db  0x0f ; '.'
0000000000009a46         db  0x00 ; '.'
0000000000009a47         db  0x00 ; '.'
0000000000009a48         db  0xe4 ; '.'
0000000000009a49         db  0xcb ; '.'
0000000000009a4a         db  0xff ; '.'
0000000000009a4b         db  0xff ; '.'
0000000000009a4c         db  0xfc ; '.'
0000000000009a4d         db  0x0f ; '.'
0000000000009a4e         db  0x00 ; '.'
0000000000009a4f         db  0x00 ; '.'
0000000000009a50         db  0x04 ; '.'
0000000000009a51         db  0xdd ; '.'
0000000000009a52         db  0xff ; '.'
0000000000009a53         db  0xff ; '.'
0000000000009a54         db  0x2c ; ','
0000000000009a55         db  0x10 ; '.'
0000000000009a56         db  0x00 ; '.'
0000000000009a57         db  0x00 ; '.'
0000000000009a58         db  0x04 ; '.'
0000000000009a59         db  0xdf ; '.'
0000000000009a5a         db  0xff ; '.'
0000000000009a5b         db  0xff ; '.'
0000000000009a5c         db  0x44 ; 'D'
0000000000009a5d         db  0x10 ; '.'
0000000000009a5e         db  0x00 ; '.'
0000000000009a5f         db  0x00 ; '.'
0000000000009a60         db  0xf4 ; '.'
0000000000009a61         db  0xeb ; '.'
0000000000009a62         db  0xff ; '.'
0000000000009a63         db  0xff ; '.'
0000000000009a64         db  0x94 ; '.'
0000000000009a65         db  0x10 ; '.'
0000000000009a66         db  0x00 ; '.'
0000000000009a67         db  0x00 ; '.'
0000000000009a68         db  0x64 ; 'd'
0000000000009a69         db  0xec ; '.'
0000000000009a6a         db  0xff ; '.'
0000000000009a6b         db  0xff ; '.'
0000000000009a6c         db  0xdc ; '.'
0000000000009a6d         db  0x10 ; '.'
0000000000009a6e         db  0x00 ; '.'
0000000000009a6f         db  0x00 ; '.'
0000000000009a70         db  0x74 ; 't'
0000000000009a71         db  0xec ; '.'
0000000000009a72         db  0xff ; '.'
0000000000009a73         db  0xff ; '.'
0000000000009a74         db  0xf4 ; '.'
0000000000009a75         db  0x10 ; '.'
0000000000009a76         db  0x00 ; '.'
0000000000009a77         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x9a78; 0xa8c8[ (3664 bytes)
        ; File offset : [39544; 43208[ (3664 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000009a78         dd         0x00000014                                  ; Length of the record
0000000000009a7c         dd         0x00000000                                  ; CIE ID
0000000000009a80         db         0x01                                        ; Version
0000000000009a81         db         "zR", 0                                     ; Augmentation String
0000000000009a84         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000009a85         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000009a86         db         0x10                                        ; Return address register
0000000000009a87         db         0x01                                        ; Augmentation data length
0000000000009a88         db         0x1b                                        ; FDE encoding
0000000000009a89         db  0x0c ; '.'
0000000000009a8a         db  0x07 ; '.'
0000000000009a8b         db  0x08 ; '.'
0000000000009a8c         db  0x90 ; '.'
0000000000009a8d         db  0x01 ; '.'
0000000000009a8e         db  0x07 ; '.'
0000000000009a8f         db  0x10 ; '.'
0000000000009a90         dd         0x00000014                                  ; Length of the record
0000000000009a94         dd         0x0000001c                                  ; FDE: parent CIE at 0x9a78 (FDE encoding = 0x1B)
0000000000009a98         db         0xa8, 0x84, 2 dup (0xff)                    ; begin 0x1f40
0000000000009a9c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1f6b)
0000000000009aa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009aa1         align      8
0000000000009aa8         dd         0x00000014                                  ; Length of the record
0000000000009aac         dd         0x00000000                                  ; CIE ID
0000000000009ab0         db         0x01                                        ; Version
0000000000009ab1         db         "zR", 0                                     ; Augmentation String
0000000000009ab4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000009ab5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000009ab6         db         0x10                                        ; Return address register
0000000000009ab7         db         0x01                                        ; Augmentation data length
0000000000009ab8         db         0x1b                                        ; FDE encoding
0000000000009ab9         db  0x0c ; '.'
0000000000009aba         db  0x07 ; '.'
0000000000009abb         db  0x08 ; '.'
0000000000009abc         db  0x90 ; '.'
0000000000009abd         db  0x01 ; '.'
0000000000009abe         db  0x00 ; '.'
0000000000009abf         db  0x00 ; '.'
0000000000009ac0         dd         0x00000024                                  ; Length of the record
0000000000009ac4         dd         0x0000001c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009ac8         db         0x18, 0x7d, 2 dup (0xff)                    ; begin 0x17e0
0000000000009acc         db         0xe0, 0x03, 2 dup (0x00)                    ; length 0x3e0 (end at 0x1bc0)
0000000000009ad0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ad1         db  0x0e ; '.'
0000000000009ad2         db  0x10 ; '.'
0000000000009ad3         db  0x46 ; 'F'
0000000000009ad4         db  0x0e ; '.'
0000000000009ad5         db  0x18 ; '.'
0000000000009ad6         db  0x4a ; 'J'
0000000000009ad7         db  0x0f ; '.'
0000000000009ad8         db  0x0b ; '.'
0000000000009ad9         db  0x77 ; 'w'
0000000000009ada         db  0x08 ; '.'
0000000000009adb         db  0x80 ; '.'
0000000000009adc         db  0x00 ; '.'
0000000000009add         db  0x3f ; '?'
0000000000009ade         db  0x1a ; '.'
0000000000009adf         db  0x3b ; ';'
0000000000009ae0         db  0x2a ; '*'
0000000000009ae1         db  0x33 ; '3'
0000000000009ae2         db  0x24 ; '$'
0000000000009ae3         db  0x22 ; '"'
0000000000009ae4         db  0x00 ; '.'
0000000000009ae5         db  0x00 ; '.'
0000000000009ae6         db  0x00 ; '.'
0000000000009ae7         db  0x00 ; '.'
0000000000009ae8         dd         0x00000014                                  ; Length of the record
0000000000009aec         dd         0x00000044                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009af0         db         0xd0, 0x80, 2 dup (0xff)                    ; begin 0x1bc0
0000000000009af4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1bc8)
0000000000009af8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009af9         align      256
0000000000009b00         dd         0x00000070                                  ; Length of the record
0000000000009b04         dd         0x0000005c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009b08         db         0x48, 0x85, 2 dup (0xff)                    ; begin 0x2050
0000000000009b0c         db         0x72, 0x02, 2 dup (0x00)                    ; length 0x272 (end at 0x22c2)
0000000000009b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b11         db  0x42 ; 'B'
0000000000009b12         db  0x0e ; '.'
0000000000009b13         db  0x10 ; '.'
0000000000009b14         db  0x8f ; '.'
0000000000009b15         db  0x02 ; '.'
0000000000009b16         db  0x42 ; 'B'
0000000000009b17         db  0x0e ; '.'
0000000000009b18         db  0x18 ; '.'
0000000000009b19         db  0x8e ; '.'
0000000000009b1a         db  0x03 ; '.'
0000000000009b1b         db  0x45 ; 'E'
0000000000009b1c         db  0x0e ; '.'
0000000000009b1d         db  0x20 ; ' '
0000000000009b1e         db  0x8d ; '.'
0000000000009b1f         db  0x04 ; '.'
0000000000009b20         db  0x42 ; 'B'
0000000000009b21         db  0x0e ; '.'
0000000000009b22         db  0x28 ; '('
0000000000009b23         db  0x8c ; '.'
0000000000009b24         db  0x05 ; '.'
0000000000009b25         db  0x44 ; 'D'
0000000000009b26         db  0x0e ; '.'
0000000000009b27         db  0x30 ; '0'
0000000000009b28         db  0x86 ; '.'
0000000000009b29         db  0x06 ; '.'
0000000000009b2a         db  0x41 ; 'A'
0000000000009b2b         db  0x0e ; '.'
0000000000009b2c         db  0x38 ; '8'
0000000000009b2d         db  0x83 ; '.'
0000000000009b2e         db  0x07 ; '.'
0000000000009b2f         db  0x47 ; 'G'
0000000000009b30         db  0x0e ; '.'
0000000000009b31         db  0x90 ; '.'
0000000000009b32         db  0x01 ; '.'
0000000000009b33         db  0x03 ; '.'
0000000000009b34         db  0x0a ; '.'
0000000000009b35         db  0x01 ; '.'
0000000000009b36         db  0x0e ; '.'
0000000000009b37         db  0x98 ; '.'
0000000000009b38         db  0x01 ; '.'
0000000000009b39         db  0x41 ; 'A'
0000000000009b3a         db  0x0e ; '.'
0000000000009b3b         db  0xa0 ; '.'
0000000000009b3c         db  0x01 ; '.'
0000000000009b3d         db  0x44 ; 'D'
0000000000009b3e         db  0x0e ; '.'
0000000000009b3f         db  0xa8 ; '.'
0000000000009b40         db  0x01 ; '.'
0000000000009b41         db  0x45 ; 'E'
0000000000009b42         db  0x0e ; '.'
0000000000009b43         db  0xb0 ; '.'
0000000000009b44         db  0x01 ; '.'
0000000000009b45         db  0x42 ; 'B'
0000000000009b46         db  0x0e ; '.'
0000000000009b47         db  0xb8 ; '.'
0000000000009b48         db  0x01 ; '.'
0000000000009b49         db  0x42 ; 'B'
0000000000009b4a         db  0x0e ; '.'
0000000000009b4b         db  0xc0 ; '.'
0000000000009b4c         db  0x01 ; '.'
0000000000009b4d         db  0x41 ; 'A'
0000000000009b4e         db  0x0e ; '.'
0000000000009b4f         db  0xc8 ; '.'
0000000000009b50         db  0x01 ; '.'
0000000000009b51         db  0x44 ; 'D'
0000000000009b52         db  0x0e ; '.'
0000000000009b53         db  0xd0 ; '.'
0000000000009b54         db  0x01 ; '.'
0000000000009b55         db  0x52 ; 'R'
0000000000009b56         db  0x0e ; '.'
0000000000009b57         db  0x90 ; '.'
0000000000009b58         db  0x01 ; '.'
0000000000009b59         db  0x02 ; '.'
0000000000009b5a         db  0x5e ; '^'
0000000000009b5b         db  0x0a ; '.'
0000000000009b5c         db  0x0e ; '.'
0000000000009b5d         db  0x38 ; '8'
0000000000009b5e         db  0x44 ; 'D'
0000000000009b5f         db  0x0e ; '.'
0000000000009b60         db  0x30 ; '0'
0000000000009b61         db  0x41 ; 'A'
0000000000009b62         db  0x0e ; '.'
0000000000009b63         db  0x28 ; '('
0000000000009b64         db  0x42 ; 'B'
0000000000009b65         db  0x0e ; '.'
0000000000009b66         db  0x20 ; ' '
0000000000009b67         db  0x42 ; 'B'
0000000000009b68         db  0x0e ; '.'
0000000000009b69         db  0x18 ; '.'
0000000000009b6a         db  0x42 ; 'B'
0000000000009b6b         db  0x0e ; '.'
0000000000009b6c         db  0x10 ; '.'
0000000000009b6d         db  0x42 ; 'B'
0000000000009b6e         db  0x0e ; '.'
0000000000009b6f         db  0x08 ; '.'
0000000000009b70         db  0x4f ; 'O'
0000000000009b71         db  0x0b ; '.'
0000000000009b72         db  0x00 ; '.'
0000000000009b73         db  0x00 ; '.'
0000000000009b74         dd         0x00000024                                  ; Length of the record
0000000000009b78         dd         0x000000d0                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009b7c         db         0x54, 0x87, 2 dup (0xff)                    ; begin 0x22d0
0000000000009b80         db         0x66, 3 dup (0x00)                          ; length 0x66 (end at 0x2336)
0000000000009b84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b85         db  0x41 ; 'A'
0000000000009b86         db  0x0e ; '.'
0000000000009b87         db  0x10 ; '.'
0000000000009b88         db  0x86 ; '.'
0000000000009b89         db  0x02 ; '.'
0000000000009b8a         db  0x41 ; 'A'
0000000000009b8b         db  0x0e ; '.'
0000000000009b8c         db  0x18 ; '.'
0000000000009b8d         db  0x83 ; '.'
0000000000009b8e         db  0x03 ; '.'
0000000000009b8f         db  0x55 ; 'U'
0000000000009b90         db  0x0e ; '.'
0000000000009b91         db  0x20 ; ' '
0000000000009b92         db  0x02 ; '.'
0000000000009b93         db  0x4c ; 'L'
0000000000009b94         db  0x0e ; '.'
0000000000009b95         db  0x18 ; '.'
0000000000009b96         db  0x41 ; 'A'
0000000000009b97         db  0x0e ; '.'
0000000000009b98         db  0x10 ; '.'
0000000000009b99         db  0x41 ; 'A'
0000000000009b9a         db  0x0e ; '.'
0000000000009b9b         db  0x08 ; '.'
0000000000009b9c         dd         0x00000018                                  ; Length of the record
0000000000009ba0         dd         0x000000f8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009ba4         db         0x9c, 0x87, 2 dup (0xff)                    ; begin 0x2340
0000000000009ba8         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x23b7)
0000000000009bac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bad         db  0x44 ; 'D'
0000000000009bae         db  0x0e ; '.'
0000000000009baf         db  0x20 ; ' '
0000000000009bb0         db  0x02 ; '.'
0000000000009bb1         db  0x5a ; 'Z'
0000000000009bb2         db  0x0a ; '.'
0000000000009bb3         db  0x0e ; '.'
0000000000009bb4         db  0x08 ; '.'
0000000000009bb5         db  0x42 ; 'B'
0000000000009bb6         db  0x0b ; '.'
0000000000009bb7         db  0x00 ; '.'
0000000000009bb8         dd         0x00000060                                  ; Length of the record
0000000000009bbc         dd         0x00000114                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009bc0         db         0x00, 0x88, 2 dup (0xff)                    ; begin 0x23c0
0000000000009bc4         db         0xb2, 0x05, 2 dup (0x00)                    ; length 0x5b2 (end at 0x2972)
0000000000009bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bc9         db  0x42 ; 'B'
0000000000009bca         db  0x0e ; '.'
0000000000009bcb         db  0x10 ; '.'
0000000000009bcc         db  0x8f ; '.'
0000000000009bcd         db  0x02 ; '.'
0000000000009bce         db  0x42 ; 'B'
0000000000009bcf         db  0x0e ; '.'
0000000000009bd0         db  0x18 ; '.'
0000000000009bd1         db  0x8e ; '.'
0000000000009bd2         db  0x03 ; '.'
0000000000009bd3         db  0x49 ; 'I'
0000000000009bd4         db  0x0e ; '.'
0000000000009bd5         db  0x20 ; ' '
0000000000009bd6         db  0x8d ; '.'
0000000000009bd7         db  0x04 ; '.'
0000000000009bd8         db  0x42 ; 'B'
0000000000009bd9         db  0x0e ; '.'
0000000000009bda         db  0x28 ; '('
0000000000009bdb         db  0x8c ; '.'
0000000000009bdc         db  0x05 ; '.'
0000000000009bdd         db  0x46 ; 'F'
0000000000009bde         db  0x0e ; '.'
0000000000009bdf         db  0x30 ; '0'
0000000000009be0         db  0x86 ; '.'
0000000000009be1         db  0x06 ; '.'
0000000000009be2         db  0x41 ; 'A'
0000000000009be3         db  0x0e ; '.'
0000000000009be4         db  0x38 ; '8'
0000000000009be5         db  0x83 ; '.'
0000000000009be6         db  0x07 ; '.'
0000000000009be7         db  0x52 ; 'R'
0000000000009be8         db  0x0e ; '.'
0000000000009be9         db  0xe0 ; '.'
0000000000009bea         db  0x04 ; '.'
0000000000009beb         db  0x03 ; '.'
0000000000009bec         db  0xde ; '.'
0000000000009bed         db  0x01 ; '.'
0000000000009bee         db  0x0e ; '.'
0000000000009bef         db  0xe8 ; '.'
0000000000009bf0         db  0x04 ; '.'
0000000000009bf1         db  0x42 ; 'B'
0000000000009bf2         db  0x0e ; '.'
0000000000009bf3         db  0xf0 ; '.'
0000000000009bf4         db  0x04 ; '.'
0000000000009bf5         db  0x45 ; 'E'
0000000000009bf6         db  0x0e ; '.'
0000000000009bf7         db  0xf8 ; '.'
0000000000009bf8         db  0x04 ; '.'
0000000000009bf9         db  0x42 ; 'B'
0000000000009bfa         db  0x0e ; '.'
0000000000009bfb         db  0x80 ; '.'
0000000000009bfc         db  0x05 ; '.'
0000000000009bfd         db  0x5d ; ']'
0000000000009bfe         db  0x0e ; '.'
0000000000009bff         db  0xe0 ; '.'
0000000000009c00         db  0x04 ; '.'
0000000000009c01         db  0x5e ; '^'
0000000000009c02         db  0x0a ; '.'
0000000000009c03         db  0x0e ; '.'
0000000000009c04         db  0x38 ; '8'
0000000000009c05         db  0x41 ; 'A'
0000000000009c06         db  0x0e ; '.'
0000000000009c07         db  0x30 ; '0'
0000000000009c08         db  0x41 ; 'A'
0000000000009c09         db  0x0e ; '.'
0000000000009c0a         db  0x28 ; '('
0000000000009c0b         db  0x42 ; 'B'
0000000000009c0c         db  0x0e ; '.'
0000000000009c0d         db  0x20 ; ' '
0000000000009c0e         db  0x42 ; 'B'
0000000000009c0f         db  0x0e ; '.'
0000000000009c10         db  0x18 ; '.'
0000000000009c11         db  0x42 ; 'B'
0000000000009c12         db  0x0e ; '.'
0000000000009c13         db  0x10 ; '.'
0000000000009c14         db  0x42 ; 'B'
0000000000009c15         db  0x0e ; '.'
0000000000009c16         db  0x08 ; '.'
0000000000009c17         db  0x44 ; 'D'
0000000000009c18         db  0x0b ; '.'
0000000000009c19         db  0x00 ; '.'
0000000000009c1a         db  0x00 ; '.'
0000000000009c1b         db  0x00 ; '.'
0000000000009c1c         dd         0x000000d0                                  ; Length of the record
0000000000009c20         dd         0x00000178                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009c24         db         0x5c, 0x8d, 2 dup (0xff)                    ; begin 0x2980
0000000000009c28         db         0xca, 0x07, 2 dup (0x00)                    ; length 0x7ca (end at 0x314a)
0000000000009c2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c2d         db  0x42 ; 'B'
0000000000009c2e         db  0x0e ; '.'
0000000000009c2f         db  0x10 ; '.'
0000000000009c30         db  0x8f ; '.'
0000000000009c31         db  0x02 ; '.'
0000000000009c32         db  0x42 ; 'B'
0000000000009c33         db  0x0e ; '.'
0000000000009c34         db  0x18 ; '.'
0000000000009c35         db  0x8e ; '.'
0000000000009c36         db  0x03 ; '.'
0000000000009c37         db  0x44 ; 'D'
0000000000009c38         db  0x0e ; '.'
0000000000009c39         db  0x20 ; ' '
0000000000009c3a         db  0x8d ; '.'
0000000000009c3b         db  0x04 ; '.'
0000000000009c3c         db  0x42 ; 'B'
0000000000009c3d         db  0x0e ; '.'
0000000000009c3e         db  0x28 ; '('
0000000000009c3f         db  0x8c ; '.'
0000000000009c40         db  0x05 ; '.'
0000000000009c41         db  0x41 ; 'A'
0000000000009c42         db  0x0e ; '.'
0000000000009c43         db  0x30 ; '0'
0000000000009c44         db  0x86 ; '.'
0000000000009c45         db  0x06 ; '.'
0000000000009c46         db  0x41 ; 'A'
0000000000009c47         db  0x0e ; '.'
0000000000009c48         db  0x38 ; '8'
0000000000009c49         db  0x83 ; '.'
0000000000009c4a         db  0x07 ; '.'
0000000000009c4b         db  0x47 ; 'G'
0000000000009c4c         db  0x0e ; '.'
0000000000009c4d         db  0x90 ; '.'
0000000000009c4e         db  0x01 ; '.'
0000000000009c4f         db  0x03 ; '.'
0000000000009c50         db  0x90 ; '.'
0000000000009c51         db  0x01 ; '.'
0000000000009c52         db  0x0a ; '.'
0000000000009c53         db  0x0e ; '.'
0000000000009c54         db  0x38 ; '8'
0000000000009c55         db  0x41 ; 'A'
0000000000009c56         db  0x0e ; '.'
0000000000009c57         db  0x30 ; '0'
0000000000009c58         db  0x41 ; 'A'
0000000000009c59         db  0x0e ; '.'
0000000000009c5a         db  0x28 ; '('
0000000000009c5b         db  0x42 ; 'B'
0000000000009c5c         db  0x0e ; '.'
0000000000009c5d         db  0x20 ; ' '
0000000000009c5e         db  0x42 ; 'B'
0000000000009c5f         db  0x0e ; '.'
0000000000009c60         db  0x18 ; '.'
0000000000009c61         db  0x42 ; 'B'
0000000000009c62         db  0x0e ; '.'
0000000000009c63         db  0x10 ; '.'
0000000000009c64         db  0x42 ; 'B'
0000000000009c65         db  0x0e ; '.'
0000000000009c66         db  0x08 ; '.'
0000000000009c67         db  0x41 ; 'A'
0000000000009c68         db  0x0b ; '.'
0000000000009c69         db  0x03 ; '.'
0000000000009c6a         db  0x7d ; '}'
0000000000009c6b         db  0x01 ; '.'
0000000000009c6c         db  0x0e ; '.'
0000000000009c6d         db  0x98 ; '.'
0000000000009c6e         db  0x01 ; '.'
0000000000009c6f         db  0x45 ; 'E'
0000000000009c70         db  0x0e ; '.'
0000000000009c71         db  0xa0 ; '.'
0000000000009c72         db  0x01 ; '.'
0000000000009c73         db  0x41 ; 'A'
0000000000009c74         db  0x0e ; '.'
0000000000009c75         db  0xa8 ; '.'
0000000000009c76         db  0x01 ; '.'
0000000000009c77         db  0x44 ; 'D'
0000000000009c78         db  0x0e ; '.'
0000000000009c79         db  0xb0 ; '.'
0000000000009c7a         db  0x01 ; '.'
0000000000009c7b         db  0x53 ; 'S'
0000000000009c7c         db  0x0e ; '.'
0000000000009c7d         db  0x90 ; '.'
0000000000009c7e         db  0x01 ; '.'
0000000000009c7f         db  0x02 ; '.'
0000000000009c80         db  0xed ; '.'
0000000000009c81         db  0x0e ; '.'
0000000000009c82         db  0x98 ; '.'
0000000000009c83         db  0x01 ; '.'
0000000000009c84         db  0x42 ; 'B'
0000000000009c85         db  0x0e ; '.'
0000000000009c86         db  0xa0 ; '.'
0000000000009c87         db  0x01 ; '.'
0000000000009c88         db  0x41 ; 'A'
0000000000009c89         db  0x0e ; '.'
0000000000009c8a         db  0xa8 ; '.'
0000000000009c8b         db  0x01 ; '.'
0000000000009c8c         db  0x42 ; 'B'
0000000000009c8d         db  0x0e ; '.'
0000000000009c8e         db  0xb0 ; '.'
0000000000009c8f         db  0x01 ; '.'
0000000000009c90         db  0x53 ; 'S'
0000000000009c91         db  0x0e ; '.'
0000000000009c92         db  0x90 ; '.'
0000000000009c93         db  0x01 ; '.'
0000000000009c94         db  0x69 ; 'i'
0000000000009c95         db  0x0e ; '.'
0000000000009c96         db  0x98 ; '.'
0000000000009c97         db  0x01 ; '.'
0000000000009c98         db  0x44 ; 'D'
0000000000009c99         db  0x0e ; '.'
0000000000009c9a         db  0xa0 ; '.'
0000000000009c9b         db  0x01 ; '.'
0000000000009c9c         db  0x48 ; 'H'
0000000000009c9d         db  0x0e ; '.'
0000000000009c9e         db  0xa8 ; '.'
0000000000009c9f         db  0x01 ; '.'
0000000000009ca0         db  0x41 ; 'A'
0000000000009ca1         db  0x0e ; '.'
0000000000009ca2         db  0xb0 ; '.'
0000000000009ca3         db  0x01 ; '.'
0000000000009ca4         db  0x56 ; 'V'
0000000000009ca5         db  0x0e ; '.'
0000000000009ca6         db  0x90 ; '.'
0000000000009ca7         db  0x01 ; '.'
0000000000009ca8         db  0x02 ; '.'
0000000000009ca9         db  0x61 ; 'a'
0000000000009caa         db  0x0e ; '.'
0000000000009cab         db  0x98 ; '.'
0000000000009cac         db  0x01 ; '.'
0000000000009cad         db  0x47 ; 'G'
0000000000009cae         db  0x0e ; '.'
0000000000009caf         db  0xa0 ; '.'
0000000000009cb0         db  0x01 ; '.'
0000000000009cb1         db  0x49 ; 'I'
0000000000009cb2         db  0x0e ; '.'
0000000000009cb3         db  0xa8 ; '.'
0000000000009cb4         db  0x01 ; '.'
0000000000009cb5         db  0x41 ; 'A'
0000000000009cb6         db  0x0e ; '.'
0000000000009cb7         db  0xb0 ; '.'
0000000000009cb8         db  0x01 ; '.'
0000000000009cb9         db  0x59 ; 'Y'
0000000000009cba         db  0x0e ; '.'
0000000000009cbb         db  0x90 ; '.'
0000000000009cbc         db  0x01 ; '.'
0000000000009cbd         db  0x02 ; '.'
0000000000009cbe         db  0x5e ; '^'
0000000000009cbf         db  0x0a ; '.'
0000000000009cc0         db  0x0e ; '.'
0000000000009cc1         db  0x98 ; '.'
0000000000009cc2         db  0x01 ; '.'
0000000000009cc3         db  0x45 ; 'E'
0000000000009cc4         db  0x0e ; '.'
0000000000009cc5         db  0xa0 ; '.'
0000000000009cc6         db  0x01 ; '.'
0000000000009cc7         db  0x49 ; 'I'
0000000000009cc8         db  0x0e ; '.'
0000000000009cc9         db  0xa8 ; '.'
0000000000009cca         db  0x01 ; '.'
0000000000009ccb         db  0x46 ; 'F'
0000000000009ccc         db  0x0e ; '.'
0000000000009ccd         db  0xb0 ; '.'
0000000000009cce         db  0x01 ; '.'
0000000000009ccf         db  0x4d ; 'M'
0000000000009cd0         db  0x0b ; '.'
0000000000009cd1         db  0x02 ; '.'
0000000000009cd2         db  0xa2 ; '.'
0000000000009cd3         db  0x0e ; '.'
0000000000009cd4         db  0x98 ; '.'
0000000000009cd5         db  0x01 ; '.'
0000000000009cd6         db  0x42 ; 'B'
0000000000009cd7         db  0x0e ; '.'
0000000000009cd8         db  0xa0 ; '.'
0000000000009cd9         db  0x01 ; '.'
0000000000009cda         db  0x60 ; '`'
0000000000009cdb         db  0x0e ; '.'
0000000000009cdc         db  0xa8 ; '.'
0000000000009cdd         db  0x01 ; '.'
0000000000009cde         db  0x47 ; 'G'
0000000000009cdf         db  0x0e ; '.'
0000000000009ce0         db  0xb0 ; '.'
0000000000009ce1         db  0x01 ; '.'
0000000000009ce2         db  0x4b ; 'K'
0000000000009ce3         db  0x0e ; '.'
0000000000009ce4         db  0xb8 ; '.'
0000000000009ce5         db  0x01 ; '.'
0000000000009ce6         db  0x41 ; 'A'
0000000000009ce7         db  0x0e ; '.'
0000000000009ce8         db  0xc0 ; '.'
0000000000009ce9         db  0x01 ; '.'
0000000000009cea         db  0x59 ; 'Y'
0000000000009ceb         db  0x0e ; '.'
0000000000009cec         db  0x90 ; '.'
0000000000009ced         db  0x01 ; '.'
0000000000009cee         db  0x00 ; '.'
0000000000009cef         db  0x00 ; '.'
0000000000009cf0         dd         0x00000028                                  ; Length of the record
0000000000009cf4         dd         0x0000024c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009cf8         db         0x58, 0x94, 2 dup (0xff)                    ; begin 0x3150
0000000000009cfc         db         0x2a, 0x04, 2 dup (0x00)                    ; length 0x42a (end at 0x357a)
0000000000009d00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d01         db  0x42 ; 'B'
0000000000009d02         db  0x0e ; '.'
0000000000009d03         db  0x10 ; '.'
0000000000009d04         db  0x8d ; '.'
0000000000009d05         db  0x02 ; '.'
0000000000009d06         db  0x42 ; 'B'
0000000000009d07         db  0x0e ; '.'
0000000000009d08         db  0x18 ; '.'
0000000000009d09         db  0x8c ; '.'
0000000000009d0a         db  0x03 ; '.'
0000000000009d0b         db  0x46 ; 'F'
0000000000009d0c         db  0x0e ; '.'
0000000000009d0d         db  0x20 ; ' '
0000000000009d0e         db  0x86 ; '.'
0000000000009d0f         db  0x04 ; '.'
0000000000009d10         db  0x41 ; 'A'
0000000000009d11         db  0x0e ; '.'
0000000000009d12         db  0x28 ; '('
0000000000009d13         db  0x83 ; '.'
0000000000009d14         db  0x05 ; '.'
0000000000009d15         db  0x49 ; 'I'
0000000000009d16         db  0x0e ; '.'
0000000000009d17         db  0xb0 ; '.'
0000000000009d18         db  0x01 ; '.'
0000000000009d19         db  0x00 ; '.'
0000000000009d1a         db  0x00 ; '.'
0000000000009d1b         db  0x00 ; '.'
0000000000009d1c         dd         0x00000038                                  ; Length of the record
0000000000009d20         dd         0x00000278                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009d24         db         0xac, 0x7e, 2 dup (0xff)                    ; begin 0x1bd0
0000000000009d28         db         0x6e, 0x03, 2 dup (0x00)                    ; length 0x36e (end at 0x1f3e)
0000000000009d2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d2d         db  0x42 ; 'B'
0000000000009d2e         db  0x0e ; '.'
0000000000009d2f         db  0x10 ; '.'
0000000000009d30         db  0x8c ; '.'
0000000000009d31         db  0x02 ; '.'
0000000000009d32         db  0x41 ; 'A'
0000000000009d33         db  0x0e ; '.'
0000000000009d34         db  0x18 ; '.'
0000000000009d35         db  0x86 ; '.'
0000000000009d36         db  0x03 ; '.'
0000000000009d37         db  0x44 ; 'D'
0000000000009d38         db  0x0e ; '.'
0000000000009d39         db  0x20 ; ' '
0000000000009d3a         db  0x83 ; '.'
0000000000009d3b         db  0x04 ; '.'
0000000000009d3c         db  0x03 ; '.'
0000000000009d3d         db  0x59 ; 'Y'
0000000000009d3e         db  0x01 ; '.'
0000000000009d3f         db  0x0a ; '.'
0000000000009d40         db  0x0e ; '.'
0000000000009d41         db  0x28 ; '('
0000000000009d42         db  0x4f ; 'O'
0000000000009d43         db  0x0e ; '.'
0000000000009d44         db  0x30 ; '0'
0000000000009d45         db  0x5c ; '\'
0000000000009d46         db  0x0b ; '.'
0000000000009d47         db  0x03 ; '.'
0000000000009d48         db  0x6a ; 'j'
0000000000009d49         db  0x01 ; '.'
0000000000009d4a         db  0x0a ; '.'
0000000000009d4b         db  0x0e ; '.'
0000000000009d4c         db  0x18 ; '.'
0000000000009d4d         db  0x43 ; 'C'
0000000000009d4e         db  0x0e ; '.'
0000000000009d4f         db  0x10 ; '.'
0000000000009d50         db  0x42 ; 'B'
0000000000009d51         db  0x0e ; '.'
0000000000009d52         db  0x08 ; '.'
0000000000009d53         db  0x41 ; 'A'
0000000000009d54         db  0x0b ; '.'
0000000000009d55         db  0x00 ; '.'
0000000000009d56         db  0x00 ; '.'
0000000000009d57         db  0x00 ; '.'
0000000000009d58         dd         0x00000030                                  ; Length of the record
0000000000009d5c         dd         0x000002b4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009d60         db         0x20, 0x98, 2 dup (0xff)                    ; begin 0x3580
0000000000009d64         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0x3628)
0000000000009d68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d69         db  0x42 ; 'B'
0000000000009d6a         db  0x0e ; '.'
0000000000009d6b         db  0x10 ; '.'
0000000000009d6c         db  0x8c ; '.'
0000000000009d6d         db  0x02 ; '.'
0000000000009d6e         db  0x41 ; 'A'
0000000000009d6f         db  0x0e ; '.'
0000000000009d70         db  0x18 ; '.'
0000000000009d71         db  0x86 ; '.'
0000000000009d72         db  0x03 ; '.'
0000000000009d73         db  0x48 ; 'H'
0000000000009d74         db  0x0e ; '.'
0000000000009d75         db  0x20 ; ' '
0000000000009d76         db  0x83 ; '.'
0000000000009d77         db  0x04 ; '.'
0000000000009d78         db  0x4c ; 'L'
0000000000009d79         db  0x0e ; '.'
0000000000009d7a         db  0x30 ; '0'
0000000000009d7b         db  0x02 ; '.'
0000000000009d7c         db  0x75 ; 'u'
0000000000009d7d         db  0x0a ; '.'
0000000000009d7e         db  0x0e ; '.'
0000000000009d7f         db  0x20 ; ' '
0000000000009d80         db  0x41 ; 'A'
0000000000009d81         db  0x0e ; '.'
0000000000009d82         db  0x18 ; '.'
0000000000009d83         db  0x41 ; 'A'
0000000000009d84         db  0x0e ; '.'
0000000000009d85         db  0x10 ; '.'
0000000000009d86         db  0x42 ; 'B'
0000000000009d87         db  0x0e ; '.'
0000000000009d88         db  0x08 ; '.'
0000000000009d89         db  0x48 ; 'H'
0000000000009d8a         db  0x0b ; '.'
0000000000009d8b         db  0x00 ; '.'
0000000000009d8c         dd         0x00000010                                  ; Length of the record
0000000000009d90         dd         0x000002e8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009d94         db         0x9c, 0x98, 2 dup (0xff)                    ; begin 0x3630
0000000000009d98         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x363c)
0000000000009d9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d9d         align      32
0000000000009da0         dd         0x00000014                                  ; Length of the record
0000000000009da4         dd         0x000002fc                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009da8         db         2 dup (0x98), 2 dup (0xff)                  ; begin 0x3640
0000000000009dac         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x364b)
0000000000009db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009db1         align      8
0000000000009db8         dd         0x00000010                                  ; Length of the record
0000000000009dbc         dd         0x00000314                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009dc0         db         0x90, 0x98, 2 dup (0xff)                    ; begin 0x3650
0000000000009dc4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3658)
0000000000009dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009dc9         align      4
0000000000009dcc         dd         0x00000010                                  ; Length of the record
0000000000009dd0         dd         0x00000328                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009dd4         db         0x8c, 0x98, 2 dup (0xff)                    ; begin 0x3660
0000000000009dd8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3668)
0000000000009ddc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ddd         align      32
0000000000009de0         dd         0x0000002c                                  ; Length of the record
0000000000009de4         dd         0x0000033c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009de8         db         0x88, 0x98, 2 dup (0xff)                    ; begin 0x3670
0000000000009dec         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3714)
0000000000009df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009df1         db  0x41 ; 'A'
0000000000009df2         db  0x0e ; '.'
0000000000009df3         db  0x10 ; '.'
0000000000009df4         db  0x86 ; '.'
0000000000009df5         db  0x02 ; '.'
0000000000009df6         db  0x41 ; 'A'
0000000000009df7         db  0x0e ; '.'
0000000000009df8         db  0x18 ; '.'
0000000000009df9         db  0x83 ; '.'
0000000000009dfa         db  0x03 ; '.'
0000000000009dfb         db  0x44 ; 'D'
0000000000009dfc         db  0x0e ; '.'
0000000000009dfd         db  0x20 ; ' '
0000000000009dfe         db  0x7a ; 'z'
0000000000009dff         db  0x0a ; '.'
0000000000009e00         db  0x0e ; '.'
0000000000009e01         db  0x18 ; '.'
0000000000009e02         db  0x41 ; 'A'
0000000000009e03         db  0x0e ; '.'
0000000000009e04         db  0x10 ; '.'
0000000000009e05         db  0x41 ; 'A'
0000000000009e06         db  0x0e ; '.'
0000000000009e07         db  0x08 ; '.'
0000000000009e08         db  0x41 ; 'A'
0000000000009e09         db  0x0b ; '.'
0000000000009e0a         db  0x00 ; '.'
0000000000009e0b         db  0x00 ; '.'
0000000000009e0c         db  0x00 ; '.'
0000000000009e0d         db  0x00 ; '.'
0000000000009e0e         db  0x00 ; '.'
0000000000009e0f         db  0x00 ; '.'
0000000000009e10         dd         0x0000001c                                  ; Length of the record
0000000000009e14         dd         0x0000036c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009e18         db         0x08, 0x99, 2 dup (0xff)                    ; begin 0x3720
0000000000009e1c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x3780)
0000000000009e20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e21         db  0x44 ; 'D'
0000000000009e22         db  0x0e ; '.'
0000000000009e23         db  0x10 ; '.'
0000000000009e24         db  0x75 ; 'u'
0000000000009e25         db  0x0a ; '.'
0000000000009e26         db  0x0e ; '.'
0000000000009e27         db  0x08 ; '.'
0000000000009e28         db  0x47 ; 'G'
0000000000009e29         db  0x0b ; '.'
0000000000009e2a         db  0x5f ; '_'
0000000000009e2b         db  0x0e ; '.'
0000000000009e2c         db  0x08 ; '.'
0000000000009e2d         db  0x00 ; '.'
0000000000009e2e         db  0x00 ; '.'
0000000000009e2f         db  0x00 ; '.'
0000000000009e30         dd         0x00000014                                  ; Length of the record
0000000000009e34         dd         0x0000038c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009e38         db         0x48, 0x99, 2 dup (0xff)                    ; begin 0x3780
0000000000009e3c         db         0x9c, 3 dup (0x00)                          ; length 0x9c (end at 0x381c)
0000000000009e40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e41         align      8
0000000000009e48         dd         0x0000001c                                  ; Length of the record
0000000000009e4c         dd         0x000003a4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009e50         db         0xd0, 0x99, 2 dup (0xff)                    ; begin 0x3820
0000000000009e54         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x38bf)
0000000000009e58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e59         db  0x44 ; 'D'
0000000000009e5a         db  0x0e ; '.'
0000000000009e5b         db  0x10 ; '.'
0000000000009e5c         db  0x83 ; '.'
0000000000009e5d         db  0x02 ; '.'
0000000000009e5e         db  0x02 ; '.'
0000000000009e5f         db  0x78 ; 'x'
0000000000009e60         db  0x0a ; '.'
0000000000009e61         db  0x0e ; '.'
0000000000009e62         db  0x08 ; '.'
0000000000009e63         db  0x41 ; 'A'
0000000000009e64         db  0x0b ; '.'
0000000000009e65         db  0x00 ; '.'
0000000000009e66         db  0x00 ; '.'
0000000000009e67         db  0x00 ; '.'
0000000000009e68         dd         0x00000040                                  ; Length of the record
0000000000009e6c         dd         0x000003c4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009e70         db         0x50, 0x9a, 2 dup (0xff)                    ; begin 0x38c0
0000000000009e74         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x39a7)
0000000000009e78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e79         db  0x41 ; 'A'
0000000000009e7a         db  0x0e ; '.'
0000000000009e7b         db  0x10 ; '.'
0000000000009e7c         db  0x86 ; '.'
0000000000009e7d         db  0x02 ; '.'
0000000000009e7e         db  0x41 ; 'A'
0000000000009e7f         db  0x0e ; '.'
0000000000009e80         db  0x18 ; '.'
0000000000009e81         db  0x83 ; '.'
0000000000009e82         db  0x03 ; '.'
0000000000009e83         db  0x49 ; 'I'
0000000000009e84         db  0x0e ; '.'
0000000000009e85         db  0x20 ; ' '
0000000000009e86         db  0x6e ; 'n'
0000000000009e87         db  0x0a ; '.'
0000000000009e88         db  0x0e ; '.'
0000000000009e89         db  0x18 ; '.'
0000000000009e8a         db  0x41 ; 'A'
0000000000009e8b         db  0x0e ; '.'
0000000000009e8c         db  0x10 ; '.'
0000000000009e8d         db  0x41 ; 'A'
0000000000009e8e         db  0x0e ; '.'
0000000000009e8f         db  0x08 ; '.'
0000000000009e90         db  0x45 ; 'E'
0000000000009e91         db  0x0b ; '.'
0000000000009e92         db  0x02 ; '.'
0000000000009e93         db  0x4a ; 'J'
0000000000009e94         db  0x0a ; '.'
0000000000009e95         db  0x0e ; '.'
0000000000009e96         db  0x18 ; '.'
0000000000009e97         db  0x41 ; 'A'
0000000000009e98         db  0x0e ; '.'
0000000000009e99         db  0x10 ; '.'
0000000000009e9a         db  0x41 ; 'A'
0000000000009e9b         db  0x0e ; '.'
0000000000009e9c         db  0x08 ; '.'
0000000000009e9d         db  0x44 ; 'D'
0000000000009e9e         db  0x0b ; '.'
0000000000009e9f         db  0x02 ; '.'
0000000000009ea0         db  0x54 ; 'T'
0000000000009ea1         db  0x0e ; '.'
0000000000009ea2         db  0x18 ; '.'
0000000000009ea3         db  0x41 ; 'A'
0000000000009ea4         db  0x0e ; '.'
0000000000009ea5         db  0x10 ; '.'
0000000000009ea6         db  0x41 ; 'A'
0000000000009ea7         db  0x0e ; '.'
0000000000009ea8         db  0x08 ; '.'
0000000000009ea9         db  0x00 ; '.'
0000000000009eaa         db  0x00 ; '.'
0000000000009eab         db  0x00 ; '.'
0000000000009eac         dd         0x00000074                                  ; Length of the record
0000000000009eb0         dd         0x00000408                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009eb4         db         0xfc, 0x9a, 2 dup (0xff)                    ; begin 0x39b0
0000000000009eb8         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4be4)
0000000000009ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ebd         db  0x42 ; 'B'
0000000000009ebe         db  0x0e ; '.'
0000000000009ebf         db  0x10 ; '.'
0000000000009ec0         db  0x8f ; '.'
0000000000009ec1         db  0x02 ; '.'
0000000000009ec2         db  0x42 ; 'B'
0000000000009ec3         db  0x0e ; '.'
0000000000009ec4         db  0x18 ; '.'
0000000000009ec5         db  0x8e ; '.'
0000000000009ec6         db  0x03 ; '.'
0000000000009ec7         db  0x45 ; 'E'
0000000000009ec8         db  0x0e ; '.'
0000000000009ec9         db  0x20 ; ' '
0000000000009eca         db  0x8d ; '.'
0000000000009ecb         db  0x04 ; '.'
0000000000009ecc         db  0x42 ; 'B'
0000000000009ecd         db  0x0e ; '.'
0000000000009ece         db  0x28 ; '('
0000000000009ecf         db  0x8c ; '.'
0000000000009ed0         db  0x05 ; '.'
0000000000009ed1         db  0x44 ; 'D'
0000000000009ed2         db  0x0e ; '.'
0000000000009ed3         db  0x30 ; '0'
0000000000009ed4         db  0x86 ; '.'
0000000000009ed5         db  0x06 ; '.'
0000000000009ed6         db  0x41 ; 'A'
0000000000009ed7         db  0x0e ; '.'
0000000000009ed8         db  0x38 ; '8'
0000000000009ed9         db  0x83 ; '.'
0000000000009eda         db  0x07 ; '.'
0000000000009edb         db  0x53 ; 'S'
0000000000009edc         db  0x0e ; '.'
0000000000009edd         db  0xf0 ; '.'
0000000000009ede         db  0x01 ; '.'
0000000000009edf         db  0x03 ; '.'
0000000000009ee0         db  0x81 ; '.'
0000000000009ee1         db  0x0b ; '.'
0000000000009ee2         db  0x0e ; '.'
0000000000009ee3         db  0xf8 ; '.'
0000000000009ee4         db  0x01 ; '.'
0000000000009ee5         db  0x4a ; 'J'
0000000000009ee6         db  0x0e ; '.'
0000000000009ee7         db  0x80 ; '.'
0000000000009ee8         db  0x02 ; '.'
0000000000009ee9         db  0x44 ; 'D'
0000000000009eea         db  0x0e ; '.'
0000000000009eeb         db  0x88 ; '.'
0000000000009eec         db  0x02 ; '.'
0000000000009eed         db  0x45 ; 'E'
0000000000009eee         db  0x0e ; '.'
0000000000009eef         db  0x90 ; '.'
0000000000009ef0         db  0x02 ; '.'
0000000000009ef1         db  0x5f ; '_'
0000000000009ef2         db  0x0e ; '.'
0000000000009ef3         db  0xf0 ; '.'
0000000000009ef4         db  0x01 ; '.'
0000000000009ef5         db  0x64 ; 'd'
0000000000009ef6         db  0x0a ; '.'
0000000000009ef7         db  0x0e ; '.'
0000000000009ef8         db  0x38 ; '8'
0000000000009ef9         db  0x41 ; 'A'
0000000000009efa         db  0x0e ; '.'
0000000000009efb         db  0x30 ; '0'
0000000000009efc         db  0x41 ; 'A'
0000000000009efd         db  0x0e ; '.'
0000000000009efe         db  0x28 ; '('
0000000000009eff         db  0x42 ; 'B'
0000000000009f00         db  0x0e ; '.'
0000000000009f01         db  0x20 ; ' '
0000000000009f02         db  0x42 ; 'B'
0000000000009f03         db  0x0e ; '.'
0000000000009f04         db  0x18 ; '.'
0000000000009f05         db  0x42 ; 'B'
0000000000009f06         db  0x0e ; '.'
0000000000009f07         db  0x10 ; '.'
0000000000009f08         db  0x42 ; 'B'
0000000000009f09         db  0x0e ; '.'
0000000000009f0a         db  0x08 ; '.'
0000000000009f0b         db  0x44 ; 'D'
0000000000009f0c         db  0x0b ; '.'
0000000000009f0d         db  0x03 ; '.'
0000000000009f0e         db  0x99 ; '.'
0000000000009f0f         db  0x05 ; '.'
0000000000009f10         db  0x0e ; '.'
0000000000009f11         db  0xf8 ; '.'
0000000000009f12         db  0x01 ; '.'
0000000000009f13         db  0x4d ; 'M'
0000000000009f14         db  0x0e ; '.'
0000000000009f15         db  0x80 ; '.'
0000000000009f16         db  0x02 ; '.'
0000000000009f17         db  0x44 ; 'D'
0000000000009f18         db  0x0e ; '.'
0000000000009f19         db  0x88 ; '.'
0000000000009f1a         db  0x02 ; '.'
0000000000009f1b         db  0x47 ; 'G'
0000000000009f1c         db  0x0e ; '.'
0000000000009f1d         db  0x90 ; '.'
0000000000009f1e         db  0x02 ; '.'
0000000000009f1f         db  0x5b ; '['
0000000000009f20         db  0x0e ; '.'
0000000000009f21         db  0xf0 ; '.'
0000000000009f22         db  0x01 ; '.'
0000000000009f23         db  0x00 ; '.'
0000000000009f24         dd         0x00000068                                  ; Length of the record
0000000000009f28         dd         0x00000480                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009f2c         db         0xc4, 0xac, 2 dup (0xff)                    ; begin 0x4bf0
0000000000009f30         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4d9b)
0000000000009f34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f35         db  0x42 ; 'B'
0000000000009f36         db  0x0e ; '.'
0000000000009f37         db  0x10 ; '.'
0000000000009f38         db  0x8f ; '.'
0000000000009f39         db  0x02 ; '.'
0000000000009f3a         db  0x42 ; 'B'
0000000000009f3b         db  0x0e ; '.'
0000000000009f3c         db  0x18 ; '.'
0000000000009f3d         db  0x8e ; '.'
0000000000009f3e         db  0x03 ; '.'
0000000000009f3f         db  0x45 ; 'E'
0000000000009f40         db  0x0e ; '.'
0000000000009f41         db  0x20 ; ' '
0000000000009f42         db  0x8d ; '.'
0000000000009f43         db  0x04 ; '.'
0000000000009f44         db  0x42 ; 'B'
0000000000009f45         db  0x0e ; '.'
0000000000009f46         db  0x28 ; '('
0000000000009f47         db  0x8c ; '.'
0000000000009f48         db  0x05 ; '.'
0000000000009f49         db  0x44 ; 'D'
0000000000009f4a         db  0x0e ; '.'
0000000000009f4b         db  0x30 ; '0'
0000000000009f4c         db  0x86 ; '.'
0000000000009f4d         db  0x06 ; '.'
0000000000009f4e         db  0x41 ; 'A'
0000000000009f4f         db  0x0e ; '.'
0000000000009f50         db  0x38 ; '8'
0000000000009f51         db  0x83 ; '.'
0000000000009f52         db  0x07 ; '.'
0000000000009f53         db  0x47 ; 'G'
0000000000009f54         db  0x0e ; '.'
0000000000009f55         db  0x60 ; '`'
0000000000009f56         db  0x02 ; '.'
0000000000009f57         db  0x99 ; '.'
0000000000009f58         db  0x0e ; '.'
0000000000009f59         db  0x68 ; 'h'
0000000000009f5a         db  0x5f ; '_'
0000000000009f5b         db  0x0e ; '.'
0000000000009f5c         db  0x70 ; 'p'
0000000000009f5d         db  0x46 ; 'F'
0000000000009f5e         db  0x0e ; '.'
0000000000009f5f         db  0x78 ; 'x'
0000000000009f60         db  0x42 ; 'B'
0000000000009f61         db  0x0e ; '.'
0000000000009f62         db  0x80 ; '.'
0000000000009f63         db  0x01 ; '.'
0000000000009f64         db  0x59 ; 'Y'
0000000000009f65         db  0x0e ; '.'
0000000000009f66         db  0x60 ; '`'
0000000000009f67         db  0x02 ; '.'
0000000000009f68         db  0x40 ; '@'
0000000000009f69         db  0x0e ; '.'
0000000000009f6a         db  0x68 ; 'h'
0000000000009f6b         db  0x4b ; 'K'
0000000000009f6c         db  0x0e ; '.'
0000000000009f6d         db  0x70 ; 'p'
0000000000009f6e         db  0x43 ; 'C'
0000000000009f6f         db  0x0e ; '.'
0000000000009f70         db  0x78 ; 'x'
0000000000009f71         db  0x45 ; 'E'
0000000000009f72         db  0x0e ; '.'
0000000000009f73         db  0x80 ; '.'
0000000000009f74         db  0x01 ; '.'
0000000000009f75         db  0x5e ; '^'
0000000000009f76         db  0x0e ; '.'
0000000000009f77         db  0x60 ; '`'
0000000000009f78         db  0x4c ; 'L'
0000000000009f79         db  0x0a ; '.'
0000000000009f7a         db  0x0e ; '.'
0000000000009f7b         db  0x38 ; '8'
0000000000009f7c         db  0x44 ; 'D'
0000000000009f7d         db  0x0e ; '.'
0000000000009f7e         db  0x30 ; '0'
0000000000009f7f         db  0x41 ; 'A'
0000000000009f80         db  0x0e ; '.'
0000000000009f81         db  0x28 ; '('
0000000000009f82         db  0x42 ; 'B'
0000000000009f83         db  0x0e ; '.'
0000000000009f84         db  0x20 ; ' '
0000000000009f85         db  0x42 ; 'B'
0000000000009f86         db  0x0e ; '.'
0000000000009f87         db  0x18 ; '.'
0000000000009f88         db  0x42 ; 'B'
0000000000009f89         db  0x0e ; '.'
0000000000009f8a         db  0x10 ; '.'
0000000000009f8b         db  0x42 ; 'B'
0000000000009f8c         db  0x0e ; '.'
0000000000009f8d         db  0x08 ; '.'
0000000000009f8e         db  0x46 ; 'F'
0000000000009f8f         db  0x0b ; '.'
0000000000009f90         dd         0x00000028                                  ; Length of the record
0000000000009f94         dd         0x000004ec                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009f98         db         0x08, 0xae, 2 dup (0xff)                    ; begin 0x4da0
0000000000009f9c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4dd6)
0000000000009fa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009fa1         db  0x42 ; 'B'
0000000000009fa2         db  0x0e ; '.'
0000000000009fa3         db  0x10 ; '.'
0000000000009fa4         db  0x8c ; '.'
0000000000009fa5         db  0x02 ; '.'
0000000000009fa6         db  0x41 ; 'A'
0000000000009fa7         db  0x0e ; '.'
0000000000009fa8         db  0x18 ; '.'
0000000000009fa9         db  0x86 ; '.'
0000000000009faa         db  0x03 ; '.'
0000000000009fab         db  0x41 ; 'A'
0000000000009fac         db  0x0e ; '.'
0000000000009fad         db  0x20 ; ' '
0000000000009fae         db  0x83 ; '.'
0000000000009faf         db  0x04 ; '.'
0000000000009fb0         db  0x6e ; 'n'
0000000000009fb1         db  0x0e ; '.'
0000000000009fb2         db  0x18 ; '.'
0000000000009fb3         db  0x41 ; 'A'
0000000000009fb4         db  0x0e ; '.'
0000000000009fb5         db  0x10 ; '.'
0000000000009fb6         db  0x42 ; 'B'
0000000000009fb7         db  0x0e ; '.'
0000000000009fb8         db  0x08 ; '.'
0000000000009fb9         db  0x00 ; '.'
0000000000009fba         db  0x00 ; '.'
0000000000009fbb         db  0x00 ; '.'
0000000000009fbc         dd         0x00000010                                  ; Length of the record
0000000000009fc0         dd         0x00000518                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009fc4         db         0x1c, 0xae, 2 dup (0xff)                    ; begin 0x4de0
0000000000009fc8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4df1)
0000000000009fcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009fcd         align      16
0000000000009fd0         dd         0x00000010                                  ; Length of the record
0000000000009fd4         dd         0x0000052c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009fd8         db         0x28, 0xae, 2 dup (0xff)                    ; begin 0x4e00
0000000000009fdc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4e11)
0000000000009fe0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009fe1         align      4
0000000000009fe4         dd         0x00000010                                  ; Length of the record
0000000000009fe8         dd         0x00000540                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
0000000000009fec         db         0x34, 0xae, 2 dup (0xff)                    ; begin 0x4e20
0000000000009ff0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4e55)
0000000000009ff4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ff5         align      8
0000000000009ff8         dd         0x00000010                                  ; Length of the record
0000000000009ffc         dd         0x00000554                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a000         db         0x60, 0xae, 2 dup (0xff)                    ; begin 0x4e60
000000000000a004         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4e75)
000000000000a008         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a009         align      4
000000000000a00c         dd         0x00000010                                  ; Length of the record
000000000000a010         dd         0x00000568                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a014         db         0x6c, 0xae, 2 dup (0xff)                    ; begin 0x4e80
000000000000a018         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4eb0)
000000000000a01c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a01d         db  0x6b ; 'k'
000000000000a01e         db  0x0e ; '.'
000000000000a01f         db  0x10 ; '.'
000000000000a020         dd         0x00000050                                  ; Length of the record
000000000000a024         dd         0x0000057c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a028         db         0x88, 0xae, 2 dup (0xff)                    ; begin 0x4eb0
000000000000a02c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4f24)
000000000000a030         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a031         db  0x42 ; 'B'
000000000000a032         db  0x0e ; '.'
000000000000a033         db  0x10 ; '.'
000000000000a034         db  0x8f ; '.'
000000000000a035         db  0x02 ; '.'
000000000000a036         db  0x42 ; 'B'
000000000000a037         db  0x0e ; '.'
000000000000a038         db  0x18 ; '.'
000000000000a039         db  0x8e ; '.'
000000000000a03a         db  0x03 ; '.'
000000000000a03b         db  0x49 ; 'I'
000000000000a03c         db  0x0e ; '.'
000000000000a03d         db  0x20 ; ' '
000000000000a03e         db  0x8d ; '.'
000000000000a03f         db  0x04 ; '.'
000000000000a040         db  0x42 ; 'B'
000000000000a041         db  0x0e ; '.'
000000000000a042         db  0x28 ; '('
000000000000a043         db  0x8c ; '.'
000000000000a044         db  0x05 ; '.'
000000000000a045         db  0x44 ; 'D'
000000000000a046         db  0x0e ; '.'
000000000000a047         db  0x30 ; '0'
000000000000a048         db  0x86 ; '.'
000000000000a049         db  0x06 ; '.'
000000000000a04a         db  0x41 ; 'A'
000000000000a04b         db  0x0e ; '.'
000000000000a04c         db  0x38 ; '8'
000000000000a04d         db  0x83 ; '.'
000000000000a04e         db  0x07 ; '.'
000000000000a04f         db  0x4d ; 'M'
000000000000a050         db  0x0e ; '.'
000000000000a051         db  0x50 ; 'P'
000000000000a052         db  0x5f ; '_'
000000000000a053         db  0x0e ; '.'
000000000000a054         db  0x58 ; 'X'
000000000000a055         db  0x47 ; 'G'
000000000000a056         db  0x0e ; '.'
000000000000a057         db  0x60 ; '`'
000000000000a058         db  0x46 ; 'F'
000000000000a059         db  0x0e ; '.'
000000000000a05a         db  0x68 ; 'h'
000000000000a05b         db  0x44 ; 'D'
000000000000a05c         db  0x0e ; '.'
000000000000a05d         db  0x70 ; 'p'
000000000000a05e         db  0x58 ; 'X'
000000000000a05f         db  0x0e ; '.'
000000000000a060         db  0x38 ; '8'
000000000000a061         db  0x41 ; 'A'
000000000000a062         db  0x0e ; '.'
000000000000a063         db  0x30 ; '0'
000000000000a064         db  0x41 ; 'A'
000000000000a065         db  0x0e ; '.'
000000000000a066         db  0x28 ; '('
000000000000a067         db  0x42 ; 'B'
000000000000a068         db  0x0e ; '.'
000000000000a069         db  0x20 ; ' '
000000000000a06a         db  0x42 ; 'B'
000000000000a06b         db  0x0e ; '.'
000000000000a06c         db  0x18 ; '.'
000000000000a06d         db  0x42 ; 'B'
000000000000a06e         db  0x0e ; '.'
000000000000a06f         db  0x10 ; '.'
000000000000a070         db  0x42 ; 'B'
000000000000a071         db  0x0e ; '.'
000000000000a072         db  0x08 ; '.'
000000000000a073         db  0x00 ; '.'
000000000000a074         dd         0x00000068                                  ; Length of the record
000000000000a078         dd         0x000005d0                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a07c         db         0xb4, 0xae, 2 dup (0xff)                    ; begin 0x4f30
000000000000a080         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5013)
000000000000a084         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a085         db  0x42 ; 'B'
000000000000a086         db  0x0e ; '.'
000000000000a087         db  0x10 ; '.'
000000000000a088         db  0x8f ; '.'
000000000000a089         db  0x02 ; '.'
000000000000a08a         db  0x42 ; 'B'
000000000000a08b         db  0x0e ; '.'
000000000000a08c         db  0x18 ; '.'
000000000000a08d         db  0x8e ; '.'
000000000000a08e         db  0x03 ; '.'
000000000000a08f         db  0x49 ; 'I'
000000000000a090         db  0x0e ; '.'
000000000000a091         db  0x20 ; ' '
000000000000a092         db  0x8d ; '.'
000000000000a093         db  0x04 ; '.'
000000000000a094         db  0x42 ; 'B'
000000000000a095         db  0x0e ; '.'
000000000000a096         db  0x28 ; '('
000000000000a097         db  0x8c ; '.'
000000000000a098         db  0x05 ; '.'
000000000000a099         db  0x44 ; 'D'
000000000000a09a         db  0x0e ; '.'
000000000000a09b         db  0x30 ; '0'
000000000000a09c         db  0x86 ; '.'
000000000000a09d         db  0x06 ; '.'
000000000000a09e         db  0x41 ; 'A'
000000000000a09f         db  0x0e ; '.'
000000000000a0a0         db  0x38 ; '8'
000000000000a0a1         db  0x83 ; '.'
000000000000a0a2         db  0x07 ; '.'
000000000000a0a3         db  0x4d ; 'M'
000000000000a0a4         db  0x0e ; '.'
000000000000a0a5         db  0x70 ; 'p'
000000000000a0a6         db  0x65 ; 'e'
000000000000a0a7         db  0x0e ; '.'
000000000000a0a8         db  0x78 ; 'x'
000000000000a0a9         db  0x4d ; 'M'
000000000000a0aa         db  0x0e ; '.'
000000000000a0ab         db  0x80 ; '.'
000000000000a0ac         db  0x01 ; '.'
000000000000a0ad         db  0x46 ; 'F'
000000000000a0ae         db  0x0e ; '.'
000000000000a0af         db  0x88 ; '.'
000000000000a0b0         db  0x01 ; '.'
000000000000a0b1         db  0x42 ; 'B'
000000000000a0b2         db  0x0e ; '.'
000000000000a0b3         db  0x90 ; '.'
000000000000a0b4         db  0x01 ; '.'
000000000000a0b5         db  0x5e ; '^'
000000000000a0b6         db  0x0e ; '.'
000000000000a0b7         db  0x70 ; 'p'
000000000000a0b8         db  0x56 ; 'V'
000000000000a0b9         db  0x0e ; '.'
000000000000a0ba         db  0x78 ; 'x'
000000000000a0bb         db  0x43 ; 'C'
000000000000a0bc         db  0x0e ; '.'
000000000000a0bd         db  0x80 ; '.'
000000000000a0be         db  0x01 ; '.'
000000000000a0bf         db  0x43 ; 'C'
000000000000a0c0         db  0x0e ; '.'
000000000000a0c1         db  0x88 ; '.'
000000000000a0c2         db  0x01 ; '.'
000000000000a0c3         db  0x56 ; 'V'
000000000000a0c4         db  0x0e ; '.'
000000000000a0c5         db  0x90 ; '.'
000000000000a0c6         db  0x01 ; '.'
000000000000a0c7         db  0x52 ; 'R'
000000000000a0c8         db  0x0e ; '.'
000000000000a0c9         db  0x70 ; 'p'
000000000000a0ca         db  0x5b ; '['
000000000000a0cb         db  0x0e ; '.'
000000000000a0cc         db  0x38 ; '8'
000000000000a0cd         db  0x41 ; 'A'
000000000000a0ce         db  0x0e ; '.'
000000000000a0cf         db  0x30 ; '0'
000000000000a0d0         db  0x41 ; 'A'
000000000000a0d1         db  0x0e ; '.'
000000000000a0d2         db  0x28 ; '('
000000000000a0d3         db  0x42 ; 'B'
000000000000a0d4         db  0x0e ; '.'
000000000000a0d5         db  0x20 ; ' '
000000000000a0d6         db  0x42 ; 'B'
000000000000a0d7         db  0x0e ; '.'
000000000000a0d8         db  0x18 ; '.'
000000000000a0d9         db  0x42 ; 'B'
000000000000a0da         db  0x0e ; '.'
000000000000a0db         db  0x10 ; '.'
000000000000a0dc         db  0x42 ; 'B'
000000000000a0dd         db  0x0e ; '.'
000000000000a0de         db  0x08 ; '.'
000000000000a0df         db  0x00 ; '.'
000000000000a0e0         dd         0x00000010                                  ; Length of the record
000000000000a0e4         dd         0x0000063c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a0e8         db         0x38, 0xaf, 2 dup (0xff)                    ; begin 0x5020
000000000000a0ec         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x502a)
000000000000a0f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a0f1         align      4
000000000000a0f4         dd         0x00000028                                  ; Length of the record
000000000000a0f8         dd         0x00000650                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a0fc         db         0x34, 0xaf, 2 dup (0xff)                    ; begin 0x5030
000000000000a100         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x50c3)
000000000000a104         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a105         db  0x48 ; 'H'
000000000000a106         db  0x0e ; '.'
000000000000a107         db  0x10 ; '.'
000000000000a108         db  0x8c ; '.'
000000000000a109         db  0x02 ; '.'
000000000000a10a         db  0x48 ; 'H'
000000000000a10b         db  0x0e ; '.'
000000000000a10c         db  0x18 ; '.'
000000000000a10d         db  0x86 ; '.'
000000000000a10e         db  0x03 ; '.'
000000000000a10f         db  0x41 ; 'A'
000000000000a110         db  0x0e ; '.'
000000000000a111         db  0x20 ; ' '
000000000000a112         db  0x83 ; '.'
000000000000a113         db  0x04 ; '.'
000000000000a114         db  0x02 ; '.'
000000000000a115         db  0x74 ; 't'
000000000000a116         db  0x0e ; '.'
000000000000a117         db  0x18 ; '.'
000000000000a118         db  0x4b ; 'K'
000000000000a119         db  0x0e ; '.'
000000000000a11a         db  0x10 ; '.'
000000000000a11b         db  0x42 ; 'B'
000000000000a11c         db  0x0e ; '.'
000000000000a11d         db  0x08 ; '.'
000000000000a11e         db  0x00 ; '.'
000000000000a11f         db  0x00 ; '.'
000000000000a120         dd         0x00000010                                  ; Length of the record
000000000000a124         dd         0x0000067c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a128         db         0xa8, 0xaf, 2 dup (0xff)                    ; begin 0x50d0
000000000000a12c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x50e3)
000000000000a130         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a131         align      4
000000000000a134         dd         0x00000010                                  ; Length of the record
000000000000a138         dd         0x00000690                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a13c         db         0xb4, 0xaf, 2 dup (0xff)                    ; begin 0x50f0
000000000000a140         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x50fc)
000000000000a144         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a145         align      8
000000000000a148         dd         0x00000010                                  ; Length of the record
000000000000a14c         dd         0x000006a4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a150         db         0xb0, 0xaf, 2 dup (0xff)                    ; begin 0x5100
000000000000a154         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5118)
000000000000a158         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a159         align      4
000000000000a15c         dd         0x00000010                                  ; Length of the record
000000000000a160         dd         0x000006b8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a164         db         0xbc, 0xaf, 2 dup (0xff)                    ; begin 0x5120
000000000000a168         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5134)
000000000000a16c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a16d         align      16
000000000000a170         dd         0x00000018                                  ; Length of the record
000000000000a174         dd         0x000006cc                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a178         db         0xc8, 0xaf, 2 dup (0xff)                    ; begin 0x5140
000000000000a17c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x51ce)
000000000000a180         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a181         db  0x44 ; 'D'
000000000000a182         db  0x0e ; '.'
000000000000a183         db  0x50 ; 'P'
000000000000a184         db  0x02 ; '.'
000000000000a185         db  0x7f ; '.'
000000000000a186         db  0x0a ; '.'
000000000000a187         db  0x0e ; '.'
000000000000a188         db  0x08 ; '.'
000000000000a189         db  0x41 ; 'A'
000000000000a18a         db  0x0b ; '.'
000000000000a18b         db  0x00 ; '.'
000000000000a18c         dd         0x00000018                                  ; Length of the record
000000000000a190         dd         0x000006e8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a194         db         0x3c, 0xb0, 2 dup (0xff)                    ; begin 0x51d0
000000000000a198         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x525a)
000000000000a19c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a19d         db  0x44 ; 'D'
000000000000a19e         db  0x0e ; '.'
000000000000a19f         db  0x50 ; 'P'
000000000000a1a0         db  0x02 ; '.'
000000000000a1a1         db  0x7b ; '{'
000000000000a1a2         db  0x0a ; '.'
000000000000a1a3         db  0x0e ; '.'
000000000000a1a4         db  0x08 ; '.'
000000000000a1a5         db  0x41 ; 'A'
000000000000a1a6         db  0x0b ; '.'
000000000000a1a7         db  0x00 ; '.'
000000000000a1a8         dd         0x00000010                                  ; Length of the record
000000000000a1ac         dd         0x00000704                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a1b0         db         2 dup (0xb0), 2 dup (0xff)                  ; begin 0x5260
000000000000a1b4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x526c)
000000000000a1b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a1b9         align      4
000000000000a1bc         dd         0x00000010                                  ; Length of the record
000000000000a1c0         dd         0x00000718                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a1c4         db         0xac, 0xb0, 2 dup (0xff)                    ; begin 0x5270
000000000000a1c8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x527f)
000000000000a1cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a1cd         align      16
000000000000a1d0         dd         0x00000018                                  ; Length of the record
000000000000a1d4         dd         0x0000072c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a1d8         db         0xa8, 0xb0, 2 dup (0xff)                    ; begin 0x5280
000000000000a1dc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5318)
000000000000a1e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a1e1         db  0x44 ; 'D'
000000000000a1e2         db  0x0e ; '.'
000000000000a1e3         db  0x50 ; 'P'
000000000000a1e4         db  0x02 ; '.'
000000000000a1e5         db  0x8e ; '.'
000000000000a1e6         db  0x0a ; '.'
000000000000a1e7         db  0x0e ; '.'
000000000000a1e8         db  0x08 ; '.'
000000000000a1e9         db  0x41 ; 'A'
000000000000a1ea         db  0x0b ; '.'
000000000000a1eb         db  0x00 ; '.'
000000000000a1ec         dd         0x00000010                                  ; Length of the record
000000000000a1f0         dd         0x00000748                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a1f4         db         0x2c, 0xb1, 2 dup (0xff)                    ; begin 0x5320
000000000000a1f8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5330)
000000000000a1fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a1fd         align      512
000000000000a200         dd         0x00000010                                  ; Length of the record
000000000000a204         dd         0x0000075c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a208         db         0x28, 0xb1, 2 dup (0xff)                    ; begin 0x5330
000000000000a20c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5341)
000000000000a210         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a211         align      4
000000000000a214         dd         0x00000010                                  ; Length of the record
000000000000a218         dd         0x00000770                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a21c         db         0x34, 0xb1, 2 dup (0xff)                    ; begin 0x5350
000000000000a220         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x535a)
000000000000a224         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a225         align      8
000000000000a228         dd         0x00000018                                  ; Length of the record
000000000000a22c         dd         0x00000784                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a230         db         0x30, 0xb1, 2 dup (0xff)                    ; begin 0x5360
000000000000a234         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x53ee)
000000000000a238         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a239         db  0x44 ; 'D'
000000000000a23a         db  0x0e ; '.'
000000000000a23b         db  0x50 ; 'P'
000000000000a23c         db  0x02 ; '.'
000000000000a23d         db  0x7f ; '.'
000000000000a23e         db  0x0a ; '.'
000000000000a23f         db  0x0e ; '.'
000000000000a240         db  0x08 ; '.'
000000000000a241         db  0x41 ; 'A'
000000000000a242         db  0x0b ; '.'
000000000000a243         db  0x00 ; '.'
000000000000a244         dd         0x00000018                                  ; Length of the record
000000000000a248         dd         0x000007a0                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a24c         db         0xa4, 0xb1, 2 dup (0xff)                    ; begin 0x53f0
000000000000a250         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5481)
000000000000a254         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a255         db  0x44 ; 'D'
000000000000a256         db  0x0e ; '.'
000000000000a257         db  0x50 ; 'P'
000000000000a258         db  0x02 ; '.'
000000000000a259         db  0x82 ; '.'
000000000000a25a         db  0x0a ; '.'
000000000000a25b         db  0x0e ; '.'
000000000000a25c         db  0x08 ; '.'
000000000000a25d         db  0x41 ; 'A'
000000000000a25e         db  0x0b ; '.'
000000000000a25f         db  0x00 ; '.'
000000000000a260         dd         0x00000010                                  ; Length of the record
000000000000a264         dd         0x000007bc                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a268         db         0x28, 0xb2, 2 dup (0xff)                    ; begin 0x5490
000000000000a26c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x549c)
000000000000a270         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a271         align      4
000000000000a274         dd         0x00000010                                  ; Length of the record
000000000000a278         dd         0x000007d0                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a27c         db         0x24, 0xb2, 2 dup (0xff)                    ; begin 0x54a0
000000000000a280         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x54b7)
000000000000a284         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a285         align      8
000000000000a288         dd         0x00000010                                  ; Length of the record
000000000000a28c         dd         0x000007e4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a290         db         0x30, 0xb2, 2 dup (0xff)                    ; begin 0x54c0
000000000000a294         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x54d3)
000000000000a298         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a299         align      4
000000000000a29c         dd         0x00000010                                  ; Length of the record
000000000000a2a0         dd         0x000007f8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a2a4         db         0x3c, 0xb2, 2 dup (0xff)                    ; begin 0x54e0
000000000000a2a8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x54ec)
000000000000a2ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2ad         align      16
000000000000a2b0         dd         0x00000010                                  ; Length of the record
000000000000a2b4         dd         0x0000080c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a2b8         db         0x38, 0xb2, 2 dup (0xff)                    ; begin 0x54f0
000000000000a2bc         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5504)
000000000000a2c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2c1         align      4
000000000000a2c4         dd         0x00000010                                  ; Length of the record
000000000000a2c8         dd         0x00000820                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a2cc         db         0x44, 0xb2, 2 dup (0xff)                    ; begin 0x5510
000000000000a2d0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5523)
000000000000a2d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2d5         align      8
000000000000a2d8         dd         0x00000014                                  ; Length of the record
000000000000a2dc         dd         0x00000834                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a2e0         db         0x50, 0xb2, 2 dup (0xff)                    ; begin 0x5530
000000000000a2e4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5548)
000000000000a2e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2e9         align      16
000000000000a2f0         dd         0x00000110                                  ; Length of the record
000000000000a2f4         dd         0x0000084c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a2f8         db         0x58, 0xb2, 2 dup (0xff)                    ; begin 0x5550
000000000000a2fc         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5967)
000000000000a300         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a301         db  0x42 ; 'B'
000000000000a302         db  0x0e ; '.'
000000000000a303         db  0x10 ; '.'
000000000000a304         db  0x8f ; '.'
000000000000a305         db  0x02 ; '.'
000000000000a306         db  0x42 ; 'B'
000000000000a307         db  0x0e ; '.'
000000000000a308         db  0x18 ; '.'
000000000000a309         db  0x8e ; '.'
000000000000a30a         db  0x03 ; '.'
000000000000a30b         db  0x42 ; 'B'
000000000000a30c         db  0x0e ; '.'
000000000000a30d         db  0x20 ; ' '
000000000000a30e         db  0x8d ; '.'
000000000000a30f         db  0x04 ; '.'
000000000000a310         db  0x42 ; 'B'
000000000000a311         db  0x0e ; '.'
000000000000a312         db  0x28 ; '('
000000000000a313         db  0x8c ; '.'
000000000000a314         db  0x05 ; '.'
000000000000a315         db  0x44 ; 'D'
000000000000a316         db  0x0e ; '.'
000000000000a317         db  0x30 ; '0'
000000000000a318         db  0x86 ; '.'
000000000000a319         db  0x06 ; '.'
000000000000a31a         db  0x41 ; 'A'
000000000000a31b         db  0x0e ; '.'
000000000000a31c         db  0x38 ; '8'
000000000000a31d         db  0x83 ; '.'
000000000000a31e         db  0x07 ; '.'
000000000000a31f         db  0x4a ; 'J'
000000000000a320         db  0x0e ; '.'
000000000000a321         db  0x60 ; '`'
000000000000a322         db  0x02 ; '.'
000000000000a323         db  0xdd ; '.'
000000000000a324         db  0x0e ; '.'
000000000000a325         db  0x68 ; 'h'
000000000000a326         db  0x57 ; 'W'
000000000000a327         db  0x0e ; '.'
000000000000a328         db  0x70 ; 'p'
000000000000a329         db  0x42 ; 'B'
000000000000a32a         db  0x0e ; '.'
000000000000a32b         db  0x78 ; 'x'
000000000000a32c         db  0x42 ; 'B'
000000000000a32d         db  0x0e ; '.'
000000000000a32e         db  0x80 ; '.'
000000000000a32f         db  0x01 ; '.'
000000000000a330         db  0x42 ; 'B'
000000000000a331         db  0x0e ; '.'
000000000000a332         db  0x88 ; '.'
000000000000a333         db  0x01 ; '.'
000000000000a334         db  0x42 ; 'B'
000000000000a335         db  0x0e ; '.'
000000000000a336         db  0x90 ; '.'
000000000000a337         db  0x01 ; '.'
000000000000a338         db  0x53 ; 'S'
000000000000a339         db  0x0e ; '.'
000000000000a33a         db  0x60 ; '`'
000000000000a33b         db  0x44 ; 'D'
000000000000a33c         db  0x0a ; '.'
000000000000a33d         db  0x0e ; '.'
000000000000a33e         db  0x38 ; '8'
000000000000a33f         db  0x41 ; 'A'
000000000000a340         db  0x0e ; '.'
000000000000a341         db  0x30 ; '0'
000000000000a342         db  0x41 ; 'A'
000000000000a343         db  0x0e ; '.'
000000000000a344         db  0x28 ; '('
000000000000a345         db  0x42 ; 'B'
000000000000a346         db  0x0e ; '.'
000000000000a347         db  0x20 ; ' '
000000000000a348         db  0x42 ; 'B'
000000000000a349         db  0x0e ; '.'
000000000000a34a         db  0x18 ; '.'
000000000000a34b         db  0x42 ; 'B'
000000000000a34c         db  0x0e ; '.'
000000000000a34d         db  0x10 ; '.'
000000000000a34e         db  0x42 ; 'B'
000000000000a34f         db  0x0e ; '.'
000000000000a350         db  0x08 ; '.'
000000000000a351         db  0x44 ; 'D'
000000000000a352         db  0x0b ; '.'
000000000000a353         db  0x02 ; '.'
000000000000a354         db  0x78 ; 'x'
000000000000a355         db  0x0a ; '.'
000000000000a356         db  0x0e ; '.'
000000000000a357         db  0x68 ; 'h'
000000000000a358         db  0x48 ; 'H'
000000000000a359         db  0x0b ; '.'
000000000000a35a         db  0x5a ; 'Z'
000000000000a35b         db  0x0a ; '.'
000000000000a35c         db  0x0e ; '.'
000000000000a35d         db  0x38 ; '8'
000000000000a35e         db  0x47 ; 'G'
000000000000a35f         db  0x0e ; '.'
000000000000a360         db  0x30 ; '0'
000000000000a361         db  0x41 ; 'A'
000000000000a362         db  0x0e ; '.'
000000000000a363         db  0x28 ; '('
000000000000a364         db  0x42 ; 'B'
000000000000a365         db  0x0e ; '.'
000000000000a366         db  0x20 ; ' '
000000000000a367         db  0x42 ; 'B'
000000000000a368         db  0x0e ; '.'
000000000000a369         db  0x18 ; '.'
000000000000a36a         db  0x42 ; 'B'
000000000000a36b         db  0x0e ; '.'
000000000000a36c         db  0x10 ; '.'
000000000000a36d         db  0x42 ; 'B'
000000000000a36e         db  0x0e ; '.'
000000000000a36f         db  0x08 ; '.'
000000000000a370         db  0x56 ; 'V'
000000000000a371         db  0x0b ; '.'
000000000000a372         db  0x5e ; '^'
000000000000a373         db  0x0a ; '.'
000000000000a374         db  0x0e ; '.'
000000000000a375         db  0x38 ; '8'
000000000000a376         db  0x52 ; 'R'
000000000000a377         db  0x0e ; '.'
000000000000a378         db  0x30 ; '0'
000000000000a379         db  0x41 ; 'A'
000000000000a37a         db  0x0e ; '.'
000000000000a37b         db  0x28 ; '('
000000000000a37c         db  0x42 ; 'B'
000000000000a37d         db  0x0e ; '.'
000000000000a37e         db  0x20 ; ' '
000000000000a37f         db  0x42 ; 'B'
000000000000a380         db  0x0e ; '.'
000000000000a381         db  0x18 ; '.'
000000000000a382         db  0x42 ; 'B'
000000000000a383         db  0x0e ; '.'
000000000000a384         db  0x10 ; '.'
000000000000a385         db  0x42 ; 'B'
000000000000a386         db  0x0e ; '.'
000000000000a387         db  0x08 ; '.'
000000000000a388         db  0x4f ; 'O'
000000000000a389         db  0x0b ; '.'
000000000000a38a         db  0x62 ; 'b'
000000000000a38b         db  0x0a ; '.'
000000000000a38c         db  0x0e ; '.'
000000000000a38d         db  0x38 ; '8'
000000000000a38e         db  0x50 ; 'P'
000000000000a38f         db  0x0e ; '.'
000000000000a390         db  0x30 ; '0'
000000000000a391         db  0x41 ; 'A'
000000000000a392         db  0x0e ; '.'
000000000000a393         db  0x28 ; '('
000000000000a394         db  0x42 ; 'B'
000000000000a395         db  0x0e ; '.'
000000000000a396         db  0x20 ; ' '
000000000000a397         db  0x42 ; 'B'
000000000000a398         db  0x0e ; '.'
000000000000a399         db  0x18 ; '.'
000000000000a39a         db  0x42 ; 'B'
000000000000a39b         db  0x0e ; '.'
000000000000a39c         db  0x10 ; '.'
000000000000a39d         db  0x42 ; 'B'
000000000000a39e         db  0x0e ; '.'
000000000000a39f         db  0x08 ; '.'
000000000000a3a0         db  0x55 ; 'U'
000000000000a3a1         db  0x0b ; '.'
000000000000a3a2         db  0x66 ; 'f'
000000000000a3a3         db  0x0e ; '.'
000000000000a3a4         db  0x68 ; 'h'
000000000000a3a5         db  0x42 ; 'B'
000000000000a3a6         db  0x0e ; '.'
000000000000a3a7         db  0x70 ; 'p'
000000000000a3a8         db  0x5c ; '\'
000000000000a3a9         db  0x0e ; '.'
000000000000a3aa         db  0x68 ; 'h'
000000000000a3ab         db  0x41 ; 'A'
000000000000a3ac         db  0x0e ; '.'
000000000000a3ad         db  0x60 ; '`'
000000000000a3ae         db  0x44 ; 'D'
000000000000a3af         db  0x0a ; '.'
000000000000a3b0         db  0x0e ; '.'
000000000000a3b1         db  0x38 ; '8'
000000000000a3b2         db  0x41 ; 'A'
000000000000a3b3         db  0x0e ; '.'
000000000000a3b4         db  0x30 ; '0'
000000000000a3b5         db  0x41 ; 'A'
000000000000a3b6         db  0x0e ; '.'
000000000000a3b7         db  0x28 ; '('
000000000000a3b8         db  0x42 ; 'B'
000000000000a3b9         db  0x0e ; '.'
000000000000a3ba         db  0x20 ; ' '
000000000000a3bb         db  0x42 ; 'B'
000000000000a3bc         db  0x0e ; '.'
000000000000a3bd         db  0x18 ; '.'
000000000000a3be         db  0x42 ; 'B'
000000000000a3bf         db  0x0e ; '.'
000000000000a3c0         db  0x10 ; '.'
000000000000a3c1         db  0x42 ; 'B'
000000000000a3c2         db  0x0e ; '.'
000000000000a3c3         db  0x08 ; '.'
000000000000a3c4         db  0x45 ; 'E'
000000000000a3c5         db  0x0b ; '.'
000000000000a3c6         db  0x68 ; 'h'
000000000000a3c7         db  0x0a ; '.'
000000000000a3c8         db  0x0e ; '.'
000000000000a3c9         db  0x68 ; 'h'
000000000000a3ca         db  0x48 ; 'H'
000000000000a3cb         db  0x0b ; '.'
000000000000a3cc         db  0x72 ; 'r'
000000000000a3cd         db  0x0e ; '.'
000000000000a3ce         db  0x68 ; 'h'
000000000000a3cf         db  0x45 ; 'E'
000000000000a3d0         db  0x0e ; '.'
000000000000a3d1         db  0x70 ; 'p'
000000000000a3d2         db  0x42 ; 'B'
000000000000a3d3         db  0x0e ; '.'
000000000000a3d4         db  0x78 ; 'x'
000000000000a3d5         db  0x42 ; 'B'
000000000000a3d6         db  0x0e ; '.'
000000000000a3d7         db  0x80 ; '.'
000000000000a3d8         db  0x01 ; '.'
000000000000a3d9         db  0x5e ; '^'
000000000000a3da         db  0x0e ; '.'
000000000000a3db         db  0x60 ; '`'
000000000000a3dc         db  0x44 ; 'D'
000000000000a3dd         db  0x0a ; '.'
000000000000a3de         db  0x0e ; '.'
000000000000a3df         db  0x38 ; '8'
000000000000a3e0         db  0x41 ; 'A'
000000000000a3e1         db  0x0e ; '.'
000000000000a3e2         db  0x30 ; '0'
000000000000a3e3         db  0x41 ; 'A'
000000000000a3e4         db  0x0e ; '.'
000000000000a3e5         db  0x28 ; '('
000000000000a3e6         db  0x42 ; 'B'
000000000000a3e7         db  0x0e ; '.'
000000000000a3e8         db  0x20 ; ' '
000000000000a3e9         db  0x42 ; 'B'
000000000000a3ea         db  0x0e ; '.'
000000000000a3eb         db  0x18 ; '.'
000000000000a3ec         db  0x42 ; 'B'
000000000000a3ed         db  0x0e ; '.'
000000000000a3ee         db  0x10 ; '.'
000000000000a3ef         db  0x42 ; 'B'
000000000000a3f0         db  0x0e ; '.'
000000000000a3f1         db  0x08 ; '.'
000000000000a3f2         db  0x41 ; 'A'
000000000000a3f3         db  0x0b ; '.'
000000000000a3f4         db  0x79 ; 'y'
000000000000a3f5         db  0x0a ; '.'
000000000000a3f6         db  0x0e ; '.'
000000000000a3f7         db  0x68 ; 'h'
000000000000a3f8         db  0x42 ; 'B'
000000000000a3f9         db  0x0e ; '.'
000000000000a3fa         db  0x70 ; 'p'
000000000000a3fb         db  0x42 ; 'B'
000000000000a3fc         db  0x0e ; '.'
000000000000a3fd         db  0x78 ; 'x'
000000000000a3fe         db  0x42 ; 'B'
000000000000a3ff         db  0x0e ; '.'
000000000000a400         db  0x80 ; '.'
000000000000a401         db  0x01 ; '.'
000000000000a402         db  0x51 ; 'Q'
000000000000a403         db  0x0b ; '.'
000000000000a404         dd         0x00000010                                  ; Length of the record
000000000000a408         dd         0x00000960                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a40c         db         0x64, 0xb5, 2 dup (0xff)                    ; begin 0x5970
000000000000a410         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5990)
000000000000a414         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a415         align      8
000000000000a418         dd         0x00000018                                  ; Length of the record
000000000000a41c         dd         0x00000974                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a420         db         0x70, 0xb5, 2 dup (0xff)                    ; begin 0x5990
000000000000a424         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5a08)
000000000000a428         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a429         db  0x44 ; 'D'
000000000000a42a         db  0x0e ; '.'
000000000000a42b         db  0x70 ; 'p'
000000000000a42c         db  0x02 ; '.'
000000000000a42d         db  0x60 ; '`'
000000000000a42e         db  0x0a ; '.'
000000000000a42f         db  0x0e ; '.'
000000000000a430         db  0x08 ; '.'
000000000000a431         db  0x41 ; 'A'
000000000000a432         db  0x0b ; '.'
000000000000a433         db  0x00 ; '.'
000000000000a434         dd         0x00000028                                  ; Length of the record
000000000000a438         dd         0x00000990                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a43c         db         0xd4, 0xb5, 2 dup (0xff)                    ; begin 0x5a10
000000000000a440         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5ae5)
000000000000a444         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a445         db  0x41 ; 'A'
000000000000a446         db  0x0e ; '.'
000000000000a447         db  0x10 ; '.'
000000000000a448         db  0x86 ; '.'
000000000000a449         db  0x02 ; '.'
000000000000a44a         db  0x41 ; 'A'
000000000000a44b         db  0x0e ; '.'
000000000000a44c         db  0x18 ; '.'
000000000000a44d         db  0x83 ; '.'
000000000000a44e         db  0x03 ; '.'
000000000000a44f         db  0x50 ; 'P'
000000000000a450         db  0x0e ; '.'
000000000000a451         db  0xd0 ; '.'
000000000000a452         db  0x01 ; '.'
000000000000a453         db  0x02 ; '.'
000000000000a454         db  0xab ; '.'
000000000000a455         db  0x0a ; '.'
000000000000a456         db  0x0e ; '.'
000000000000a457         db  0x18 ; '.'
000000000000a458         db  0x41 ; 'A'
000000000000a459         db  0x0e ; '.'
000000000000a45a         db  0x10 ; '.'
000000000000a45b         db  0x41 ; 'A'
000000000000a45c         db  0x0e ; '.'
000000000000a45d         db  0x08 ; '.'
000000000000a45e         db  0x41 ; 'A'
000000000000a45f         db  0x0b ; '.'
000000000000a460         dd         0x0000001c                                  ; Length of the record
000000000000a464         dd         0x000009bc                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a468         db         0x88, 0xb6, 2 dup (0xff)                    ; begin 0x5af0
000000000000a46c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5b70)
000000000000a470         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a471         db  0x41 ; 'A'
000000000000a472         db  0x0e ; '.'
000000000000a473         db  0x10 ; '.'
000000000000a474         db  0x83 ; '.'
000000000000a475         db  0x02 ; '.'
000000000000a476         db  0x02 ; '.'
000000000000a477         db  0x7a ; 'z'
000000000000a478         db  0x0e ; '.'
000000000000a479         db  0x08 ; '.'
000000000000a47a         db  0x00 ; '.'
000000000000a47b         db  0x00 ; '.'
000000000000a47c         db  0x00 ; '.'
000000000000a47d         db  0x00 ; '.'
000000000000a47e         db  0x00 ; '.'
000000000000a47f         db  0x00 ; '.'
000000000000a480         dd         0x00000018                                  ; Length of the record
000000000000a484         dd         0x000009dc                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a488         db         0xe8, 0xb6, 2 dup (0xff)                    ; begin 0x5b70
000000000000a48c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5b8a)
000000000000a490         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a491         db  0x41 ; 'A'
000000000000a492         db  0x0e ; '.'
000000000000a493         db  0x10 ; '.'
000000000000a494         db  0x83 ; '.'
000000000000a495         db  0x02 ; '.'
000000000000a496         db  0x53 ; 'S'
000000000000a497         db  0x0a ; '.'
000000000000a498         db  0x0e ; '.'
000000000000a499         db  0x08 ; '.'
000000000000a49a         db  0x41 ; 'A'
000000000000a49b         db  0x0b ; '.'
000000000000a49c         dd         0x00000010                                  ; Length of the record
000000000000a4a0         dd         0x000009f8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a4a4         db         0xec, 0xb6, 2 dup (0xff)                    ; begin 0x5b90
000000000000a4a8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5bb4)
000000000000a4ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a4ad         db  0x5f ; '_'
000000000000a4ae         db  0x0e ; '.'
000000000000a4af         db  0x10 ; '.'
000000000000a4b0         dd         0x00000010                                  ; Length of the record
000000000000a4b4         dd         0x00000a0c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a4b8         db         0x08, 0xb7, 2 dup (0xff)                    ; begin 0x5bc0
000000000000a4bc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5bc2)
000000000000a4c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a4c1         align      4
000000000000a4c4         dd         0x00000020                                  ; Length of the record
000000000000a4c8         dd         0x00000a20                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a4cc         db         0x04, 0xb7, 2 dup (0xff)                    ; begin 0x5bd0
000000000000a4d0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5c06)
000000000000a4d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a4d5         db  0x44 ; 'D'
000000000000a4d6         db  0x0e ; '.'
000000000000a4d7         db  0x10 ; '.'
000000000000a4d8         db  0x83 ; '.'
000000000000a4d9         db  0x02 ; '.'
000000000000a4da         db  0x5d ; ']'
000000000000a4db         db  0x0a ; '.'
000000000000a4dc         db  0x0e ; '.'
000000000000a4dd         db  0x08 ; '.'
000000000000a4de         db  0x47 ; 'G'
000000000000a4df         db  0x0b ; '.'
000000000000a4e0         db  0x48 ; 'H'
000000000000a4e1         db  0x0a ; '.'
000000000000a4e2         db  0x0e ; '.'
000000000000a4e3         db  0x08 ; '.'
000000000000a4e4         db  0x41 ; 'A'
000000000000a4e5         db  0x0b ; '.'
000000000000a4e6         db  0x00 ; '.'
000000000000a4e7         db  0x00 ; '.'
000000000000a4e8         dd         0x00000010                                  ; Length of the record
000000000000a4ec         dd         0x00000a44                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a4f0         db         0x20, 0xb7, 2 dup (0xff)                    ; begin 0x5c10
000000000000a4f4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5c34)
000000000000a4f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a4f9         db  0x5f ; '_'
000000000000a4fa         db  0x0e ; '.'
000000000000a4fb         db  0x10 ; '.'
000000000000a4fc         dd         0x00000014                                  ; Length of the record
000000000000a500         dd         0x00000a58                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a504         db         0x3c, 0xb7, 2 dup (0xff)                    ; begin 0x5c40
000000000000a508         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5cc2)
000000000000a50c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a50d         db  0x02 ; '.'
000000000000a50e         db  0x5f ; '_'
000000000000a50f         db  0x0e ; '.'
000000000000a510         db  0x10 ; '.'
000000000000a511         db  0x49 ; 'I'
000000000000a512         db  0x0e ; '.'
000000000000a513         db  0x08 ; '.'
000000000000a514         dd         0x00000014                                  ; Length of the record
000000000000a518         dd         0x00000a70                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a51c         db         0xb4, 0xb7, 2 dup (0xff)                    ; begin 0x5cd0
000000000000a520         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5d1a)
000000000000a524         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a525         db  0x02 ; '.'
000000000000a526         db  0x45 ; 'E'
000000000000a527         db  0x0e ; '.'
000000000000a528         db  0x10 ; '.'
000000000000a529         db  0x00 ; '.'
000000000000a52a         db  0x00 ; '.'
000000000000a52b         db  0x00 ; '.'
000000000000a52c         dd         0x00000018                                  ; Length of the record
000000000000a530         dd         0x00000a88                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a534         db         0xec, 0xb7, 2 dup (0xff)                    ; begin 0x5d20
000000000000a538         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5d37)
000000000000a53c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a53d         db  0x41 ; 'A'
000000000000a53e         db  0x0e ; '.'
000000000000a53f         db  0x10 ; '.'
000000000000a540         db  0x83 ; '.'
000000000000a541         db  0x02 ; '.'
000000000000a542         db  0x51 ; 'Q'
000000000000a543         db  0x0e ; '.'
000000000000a544         db  0x08 ; '.'
000000000000a545         db  0x00 ; '.'
000000000000a546         db  0x00 ; '.'
000000000000a547         db  0x00 ; '.'
000000000000a548         dd         0x00000018                                  ; Length of the record
000000000000a54c         dd         0x00000aa4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a550         db         0xf0, 0xb7, 2 dup (0xff)                    ; begin 0x5d40
000000000000a554         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5d6e)
000000000000a558         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a559         db  0x47 ; 'G'
000000000000a55a         db  0x0e ; '.'
000000000000a55b         db  0x10 ; '.'
000000000000a55c         db  0x61 ; 'a'
000000000000a55d         db  0x0a ; '.'
000000000000a55e         db  0x0e ; '.'
000000000000a55f         db  0x08 ; '.'
000000000000a560         db  0x41 ; 'A'
000000000000a561         db  0x0b ; '.'
000000000000a562         db  0x00 ; '.'
000000000000a563         db  0x00 ; '.'
000000000000a564         dd         0x00000024                                  ; Length of the record
000000000000a568         dd         0x00000ac0                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a56c         db         0x04, 0xb8, 2 dup (0xff)                    ; begin 0x5d70
000000000000a570         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5d98)
000000000000a574         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a575         db  0x41 ; 'A'
000000000000a576         db  0x0e ; '.'
000000000000a577         db  0x10 ; '.'
000000000000a578         db  0x86 ; '.'
000000000000a579         db  0x02 ; '.'
000000000000a57a         db  0x41 ; 'A'
000000000000a57b         db  0x0e ; '.'
000000000000a57c         db  0x18 ; '.'
000000000000a57d         db  0x83 ; '.'
000000000000a57e         db  0x03 ; '.'
000000000000a57f         db  0x4d ; 'M'
000000000000a580         db  0x0e ; '.'
000000000000a581         db  0x20 ; ' '
000000000000a582         db  0x49 ; 'I'
000000000000a583         db  0x0e ; '.'
000000000000a584         db  0x18 ; '.'
000000000000a585         db  0x47 ; 'G'
000000000000a586         db  0x0e ; '.'
000000000000a587         db  0x10 ; '.'
000000000000a588         db  0x41 ; 'A'
000000000000a589         db  0x0e ; '.'
000000000000a58a         db  0x08 ; '.'
000000000000a58b         db  0x00 ; '.'
000000000000a58c         dd         0x00000018                                  ; Length of the record
000000000000a590         dd         0x00000ae8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a594         db         0x0c, 0xb8, 2 dup (0xff)                    ; begin 0x5da0
000000000000a598         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5db3)
000000000000a59c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a59d         db  0x41 ; 'A'
000000000000a59e         db  0x0e ; '.'
000000000000a59f         db  0x10 ; '.'
000000000000a5a0         db  0x83 ; '.'
000000000000a5a1         db  0x02 ; '.'
000000000000a5a2         db  0x50 ; 'P'
000000000000a5a3         db  0x0e ; '.'
000000000000a5a4         db  0x08 ; '.'
000000000000a5a5         db  0x00 ; '.'
000000000000a5a6         db  0x00 ; '.'
000000000000a5a7         db  0x00 ; '.'
000000000000a5a8         dd         0x00000014                                  ; Length of the record
000000000000a5ac         dd         0x00000b04                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a5b0         db         0x10, 0xb8, 2 dup (0xff)                    ; begin 0x5dc0
000000000000a5b4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5df5)
000000000000a5b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a5b9         db  0x4b ; 'K'
000000000000a5ba         db  0x0e ; '.'
000000000000a5bb         db  0x10 ; '.'
000000000000a5bc         db  0x00 ; '.'
000000000000a5bd         db  0x00 ; '.'
000000000000a5be         db  0x00 ; '.'
000000000000a5bf         db  0x00 ; '.'
000000000000a5c0         dd         0x0000001c                                  ; Length of the record
000000000000a5c4         dd         0x00000b1c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a5c8         db         0x38, 0xb8, 2 dup (0xff)                    ; begin 0x5e00
000000000000a5cc         db         0xb1, 3 dup (0x00)                          ; length 0xb1 (end at 0x5eb1)
000000000000a5d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a5d1         db  0x47 ; 'G'
000000000000a5d2         db  0x0e ; '.'
000000000000a5d3         db  0xe0 ; '.'
000000000000a5d4         db  0x01 ; '.'
000000000000a5d5         db  0x02 ; '.'
000000000000a5d6         db  0xa4 ; '.'
000000000000a5d7         db  0x0a ; '.'
000000000000a5d8         db  0x0e ; '.'
000000000000a5d9         db  0x08 ; '.'
000000000000a5da         db  0x41 ; 'A'
000000000000a5db         db  0x0b ; '.'
000000000000a5dc         db  0x00 ; '.'
000000000000a5dd         db  0x00 ; '.'
000000000000a5de         db  0x00 ; '.'
000000000000a5df         db  0x00 ; '.'
000000000000a5e0         dd         0x0000003c                                  ; Length of the record
000000000000a5e4         dd         0x00000b3c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a5e8         db         0xd8, 0xb8, 2 dup (0xff)                    ; begin 0x5ec0
000000000000a5ec         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5f43)
000000000000a5f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a5f1         db  0x42 ; 'B'
000000000000a5f2         db  0x0e ; '.'
000000000000a5f3         db  0x10 ; '.'
000000000000a5f4         db  0x8d ; '.'
000000000000a5f5         db  0x02 ; '.'
000000000000a5f6         db  0x42 ; 'B'
000000000000a5f7         db  0x0e ; '.'
000000000000a5f8         db  0x18 ; '.'
000000000000a5f9         db  0x8c ; '.'
000000000000a5fa         db  0x03 ; '.'
000000000000a5fb         db  0x44 ; 'D'
000000000000a5fc         db  0x0e ; '.'
000000000000a5fd         db  0x20 ; ' '
000000000000a5fe         db  0x86 ; '.'
000000000000a5ff         db  0x04 ; '.'
000000000000a600         db  0x41 ; 'A'
000000000000a601         db  0x0e ; '.'
000000000000a602         db  0x28 ; '('
000000000000a603         db  0x83 ; '.'
000000000000a604         db  0x05 ; '.'
000000000000a605         db  0x4a ; 'J'
000000000000a606         db  0x0e ; '.'
000000000000a607         db  0x40 ; '@'
000000000000a608         db  0x02 ; '.'
000000000000a609         db  0x64 ; 'd'
000000000000a60a         db  0x0a ; '.'
000000000000a60b         db  0x0e ; '.'
000000000000a60c         db  0x28 ; '('
000000000000a60d         db  0x41 ; 'A'
000000000000a60e         db  0x0e ; '.'
000000000000a60f         db  0x20 ; ' '
000000000000a610         db  0x41 ; 'A'
000000000000a611         db  0x0e ; '.'
000000000000a612         db  0x18 ; '.'
000000000000a613         db  0x42 ; 'B'
000000000000a614         db  0x0e ; '.'
000000000000a615         db  0x10 ; '.'
000000000000a616         db  0x42 ; 'B'
000000000000a617         db  0x0e ; '.'
000000000000a618         db  0x08 ; '.'
000000000000a619         db  0x41 ; 'A'
000000000000a61a         db  0x0b ; '.'
000000000000a61b         db  0x00 ; '.'
000000000000a61c         db  0x00 ; '.'
000000000000a61d         db  0x00 ; '.'
000000000000a61e         db  0x00 ; '.'
000000000000a61f         db  0x00 ; '.'
000000000000a620         dd         0x00000028                                  ; Length of the record
000000000000a624         dd         0x00000b7c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a628         db         0x28, 0xb9, 2 dup (0xff)                    ; begin 0x5f50
000000000000a62c         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x5fae)
000000000000a630         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a631         db  0x41 ; 'A'
000000000000a632         db  0x0e ; '.'
000000000000a633         db  0x10 ; '.'
000000000000a634         db  0x86 ; '.'
000000000000a635         db  0x02 ; '.'
000000000000a636         db  0x41 ; 'A'
000000000000a637         db  0x0e ; '.'
000000000000a638         db  0x18 ; '.'
000000000000a639         db  0x83 ; '.'
000000000000a63a         db  0x03 ; '.'
000000000000a63b         db  0x4c ; 'L'
000000000000a63c         db  0x0e ; '.'
000000000000a63d         db  0x20 ; ' '
000000000000a63e         db  0x77 ; 'w'
000000000000a63f         db  0x0a ; '.'
000000000000a640         db  0x0e ; '.'
000000000000a641         db  0x18 ; '.'
000000000000a642         db  0x44 ; 'D'
000000000000a643         db  0x0e ; '.'
000000000000a644         db  0x10 ; '.'
000000000000a645         db  0x41 ; 'A'
000000000000a646         db  0x0e ; '.'
000000000000a647         db  0x08 ; '.'
000000000000a648         db  0x46 ; 'F'
000000000000a649         db  0x0b ; '.'
000000000000a64a         db  0x00 ; '.'
000000000000a64b         db  0x00 ; '.'
000000000000a64c         dd         0x00000048                                  ; Length of the record
000000000000a650         dd         0x00000ba8                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a654         db         0x5c, 0xb9, 2 dup (0xff)                    ; begin 0x5fb0
000000000000a658         db         0x89, 0x01, 2 dup (0x00)                    ; length 0x189 (end at 0x6139)
000000000000a65c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a65d         db  0x42 ; 'B'
000000000000a65e         db  0x0e ; '.'
000000000000a65f         db  0x10 ; '.'
000000000000a660         db  0x8f ; '.'
000000000000a661         db  0x02 ; '.'
000000000000a662         db  0x42 ; 'B'
000000000000a663         db  0x0e ; '.'
000000000000a664         db  0x18 ; '.'
000000000000a665         db  0x8e ; '.'
000000000000a666         db  0x03 ; '.'
000000000000a667         db  0x45 ; 'E'
000000000000a668         db  0x0e ; '.'
000000000000a669         db  0x20 ; ' '
000000000000a66a         db  0x8d ; '.'
000000000000a66b         db  0x04 ; '.'
000000000000a66c         db  0x45 ; 'E'
000000000000a66d         db  0x0e ; '.'
000000000000a66e         db  0x28 ; '('
000000000000a66f         db  0x8c ; '.'
000000000000a670         db  0x05 ; '.'
000000000000a671         db  0x41 ; 'A'
000000000000a672         db  0x0e ; '.'
000000000000a673         db  0x30 ; '0'
000000000000a674         db  0x86 ; '.'
000000000000a675         db  0x06 ; '.'
000000000000a676         db  0x41 ; 'A'
000000000000a677         db  0x0e ; '.'
000000000000a678         db  0x38 ; '8'
000000000000a679         db  0x83 ; '.'
000000000000a67a         db  0x07 ; '.'
000000000000a67b         db  0x4f ; 'O'
000000000000a67c         db  0x0e ; '.'
000000000000a67d         db  0x50 ; 'P'
000000000000a67e         db  0x02 ; '.'
000000000000a67f         db  0xaa ; '.'
000000000000a680         db  0x0a ; '.'
000000000000a681         db  0x0e ; '.'
000000000000a682         db  0x38 ; '8'
000000000000a683         db  0x43 ; 'C'
000000000000a684         db  0x0e ; '.'
000000000000a685         db  0x30 ; '0'
000000000000a686         db  0x41 ; 'A'
000000000000a687         db  0x0e ; '.'
000000000000a688         db  0x28 ; '('
000000000000a689         db  0x42 ; 'B'
000000000000a68a         db  0x0e ; '.'
000000000000a68b         db  0x20 ; ' '
000000000000a68c         db  0x42 ; 'B'
000000000000a68d         db  0x0e ; '.'
000000000000a68e         db  0x18 ; '.'
000000000000a68f         db  0x42 ; 'B'
000000000000a690         db  0x0e ; '.'
000000000000a691         db  0x10 ; '.'
000000000000a692         db  0x42 ; 'B'
000000000000a693         db  0x0e ; '.'
000000000000a694         db  0x08 ; '.'
000000000000a695         db  0x4b ; 'K'
000000000000a696         db  0x0b ; '.'
000000000000a697         db  0x00 ; '.'
000000000000a698         dd         0x00000024                                  ; Length of the record
000000000000a69c         dd         0x00000bf4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a6a0         db         0xa0, 0xba, 2 dup (0xff)                    ; begin 0x6140
000000000000a6a4         db         0x7e, 3 dup (0x00)                          ; length 0x7e (end at 0x61be)
000000000000a6a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a6a9         db  0x41 ; 'A'
000000000000a6aa         db  0x0e ; '.'
000000000000a6ab         db  0x10 ; '.'
000000000000a6ac         db  0x83 ; '.'
000000000000a6ad         db  0x02 ; '.'
000000000000a6ae         db  0x4c ; 'L'
000000000000a6af         db  0x0e ; '.'
000000000000a6b0         db  0x20 ; ' '
000000000000a6b1         db  0x02 ; '.'
000000000000a6b2         db  0x49 ; 'I'
000000000000a6b3         db  0x0a ; '.'
000000000000a6b4         db  0x0e ; '.'
000000000000a6b5         db  0x10 ; '.'
000000000000a6b6         db  0x41 ; 'A'
000000000000a6b7         db  0x0e ; '.'
000000000000a6b8         db  0x08 ; '.'
000000000000a6b9         db  0x41 ; 'A'
000000000000a6ba         db  0x0b ; '.'
000000000000a6bb         db  0x00 ; '.'
000000000000a6bc         db  0x00 ; '.'
000000000000a6bd         db  0x00 ; '.'
000000000000a6be         db  0x00 ; '.'
000000000000a6bf         db  0x00 ; '.'
000000000000a6c0         dd         0x0000004c                                  ; Length of the record
000000000000a6c4         dd         0x00000c1c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a6c8         db         0xf8, 0xba, 2 dup (0xff)                    ; begin 0x61c0
000000000000a6cc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x623d)
000000000000a6d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a6d1         db  0x42 ; 'B'
000000000000a6d2         db  0x0e ; '.'
000000000000a6d3         db  0x10 ; '.'
000000000000a6d4         db  0x8c ; '.'
000000000000a6d5         db  0x02 ; '.'
000000000000a6d6         db  0x41 ; 'A'
000000000000a6d7         db  0x0e ; '.'
000000000000a6d8         db  0x18 ; '.'
000000000000a6d9         db  0x86 ; '.'
000000000000a6da         db  0x03 ; '.'
000000000000a6db         db  0x44 ; 'D'
000000000000a6dc         db  0x0e ; '.'
000000000000a6dd         db  0x20 ; ' '
000000000000a6de         db  0x83 ; '.'
000000000000a6df         db  0x04 ; '.'
000000000000a6e0         db  0x69 ; 'i'
000000000000a6e1         db  0x0a ; '.'
000000000000a6e2         db  0x0e ; '.'
000000000000a6e3         db  0x18 ; '.'
000000000000a6e4         db  0x41 ; 'A'
000000000000a6e5         db  0x0e ; '.'
000000000000a6e6         db  0x10 ; '.'
000000000000a6e7         db  0x42 ; 'B'
000000000000a6e8         db  0x0e ; '.'
000000000000a6e9         db  0x08 ; '.'
000000000000a6ea         db  0x45 ; 'E'
000000000000a6eb         db  0x0b ; '.'
000000000000a6ec         db  0x55 ; 'U'
000000000000a6ed         db  0x0a ; '.'
000000000000a6ee         db  0x0e ; '.'
000000000000a6ef         db  0x18 ; '.'
000000000000a6f0         db  0x41 ; 'A'
000000000000a6f1         db  0x0e ; '.'
000000000000a6f2         db  0x10 ; '.'
000000000000a6f3         db  0x42 ; 'B'
000000000000a6f4         db  0x0e ; '.'
000000000000a6f5         db  0x08 ; '.'
000000000000a6f6         db  0x48 ; 'H'
000000000000a6f7         db  0x0b ; '.'
000000000000a6f8         db  0x41 ; 'A'
000000000000a6f9         db  0x0a ; '.'
000000000000a6fa         db  0x0e ; '.'
000000000000a6fb         db  0x18 ; '.'
000000000000a6fc         db  0x46 ; 'F'
000000000000a6fd         db  0x0e ; '.'
000000000000a6fe         db  0x10 ; '.'
000000000000a6ff         db  0x42 ; 'B'
000000000000a700         db  0x0e ; '.'
000000000000a701         db  0x08 ; '.'
000000000000a702         db  0x47 ; 'G'
000000000000a703         db  0x0b ; '.'
000000000000a704         db  0x49 ; 'I'
000000000000a705         db  0x0e ; '.'
000000000000a706         db  0x18 ; '.'
000000000000a707         db  0x41 ; 'A'
000000000000a708         db  0x0e ; '.'
000000000000a709         db  0x10 ; '.'
000000000000a70a         db  0x42 ; 'B'
000000000000a70b         db  0x0e ; '.'
000000000000a70c         db  0x08 ; '.'
000000000000a70d         db  0x00 ; '.'
000000000000a70e         db  0x00 ; '.'
000000000000a70f         db  0x00 ; '.'
000000000000a710         dd         0x0000001c                                  ; Length of the record
000000000000a714         dd         0x00000c6c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a718         db         0x28, 0xbb, 2 dup (0xff)                    ; begin 0x6240
000000000000a71c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x627c)
000000000000a720         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a721         db  0x44 ; 'D'
000000000000a722         db  0x0e ; '.'
000000000000a723         db  0x10 ; '.'
000000000000a724         db  0x61 ; 'a'
000000000000a725         db  0x0a ; '.'
000000000000a726         db  0x0e ; '.'
000000000000a727         db  0x08 ; '.'
000000000000a728         db  0x4b ; 'K'
000000000000a729         db  0x0b ; '.'
000000000000a72a         db  0x4b ; 'K'
000000000000a72b         db  0x0e ; '.'
000000000000a72c         db  0x08 ; '.'
000000000000a72d         db  0x00 ; '.'
000000000000a72e         db  0x00 ; '.'
000000000000a72f         db  0x00 ; '.'
000000000000a730         dd         0x00000034                                  ; Length of the record
000000000000a734         dd         0x00000c8c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a738         db         0x48, 0xbb, 2 dup (0xff)                    ; begin 0x6280
000000000000a73c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x62fb)
000000000000a740         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a741         db  0x42 ; 'B'
000000000000a742         db  0x0e ; '.'
000000000000a743         db  0x10 ; '.'
000000000000a744         db  0x8c ; '.'
000000000000a745         db  0x02 ; '.'
000000000000a746         db  0x41 ; 'A'
000000000000a747         db  0x0e ; '.'
000000000000a748         db  0x18 ; '.'
000000000000a749         db  0x86 ; '.'
000000000000a74a         db  0x03 ; '.'
000000000000a74b         db  0x41 ; 'A'
000000000000a74c         db  0x0e ; '.'
000000000000a74d         db  0x20 ; ' '
000000000000a74e         db  0x83 ; '.'
000000000000a74f         db  0x04 ; '.'
000000000000a750         db  0x7d ; '}'
000000000000a751         db  0x0a ; '.'
000000000000a752         db  0x0e ; '.'
000000000000a753         db  0x18 ; '.'
000000000000a754         db  0x41 ; 'A'
000000000000a755         db  0x0e ; '.'
000000000000a756         db  0x10 ; '.'
000000000000a757         db  0x42 ; 'B'
000000000000a758         db  0x0e ; '.'
000000000000a759         db  0x08 ; '.'
000000000000a75a         db  0x44 ; 'D'
000000000000a75b         db  0x0b ; '.'
000000000000a75c         db  0x60 ; '`'
000000000000a75d         db  0x0a ; '.'
000000000000a75e         db  0x0e ; '.'
000000000000a75f         db  0x18 ; '.'
000000000000a760         db  0x41 ; 'A'
000000000000a761         db  0x0e ; '.'
000000000000a762         db  0x10 ; '.'
000000000000a763         db  0x42 ; 'B'
000000000000a764         db  0x0e ; '.'
000000000000a765         db  0x08 ; '.'
000000000000a766         db  0x45 ; 'E'
000000000000a767         db  0x0b ; '.'
000000000000a768         dd         0x0000001c                                  ; Length of the record
000000000000a76c         dd         0x00000cc4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a770         db         0x90, 0xbb, 2 dup (0xff)                    ; begin 0x6300
000000000000a774         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6340)
000000000000a778         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a779         db  0x44 ; 'D'
000000000000a77a         db  0x0e ; '.'
000000000000a77b         db  0x10 ; '.'
000000000000a77c         db  0x83 ; '.'
000000000000a77d         db  0x02 ; '.'
000000000000a77e         db  0x5a ; 'Z'
000000000000a77f         db  0x0a ; '.'
000000000000a780         db  0x0e ; '.'
000000000000a781         db  0x08 ; '.'
000000000000a782         db  0x4a ; 'J'
000000000000a783         db  0x0b ; '.'
000000000000a784         db  0x53 ; 'S'
000000000000a785         db  0x0e ; '.'
000000000000a786         db  0x08 ; '.'
000000000000a787         db  0x00 ; '.'
000000000000a788         dd         0x0000002c                                  ; Length of the record
000000000000a78c         dd         0x00000ce4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a790         db         0xb0, 0xbb, 2 dup (0xff)                    ; begin 0x6340
000000000000a794         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6397)
000000000000a798         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a799         db  0x63 ; 'c'
000000000000a79a         db  0x0e ; '.'
000000000000a79b         db  0x10 ; '.'
000000000000a79c         db  0x8c ; '.'
000000000000a79d         db  0x02 ; '.'
000000000000a79e         db  0x41 ; 'A'
000000000000a79f         db  0x0e ; '.'
000000000000a7a0         db  0x18 ; '.'
000000000000a7a1         db  0x86 ; '.'
000000000000a7a2         db  0x03 ; '.'
000000000000a7a3         db  0x44 ; 'D'
000000000000a7a4         db  0x0e ; '.'
000000000000a7a5         db  0x20 ; ' '
000000000000a7a6         db  0x83 ; '.'
000000000000a7a7         db  0x04 ; '.'
000000000000a7a8         db  0x6b ; 'k'
000000000000a7a9         db  0x0e ; '.'
000000000000a7aa         db  0x18 ; '.'
000000000000a7ab         db  0x41 ; 'A'
000000000000a7ac         db  0x0e ; '.'
000000000000a7ad         db  0x10 ; '.'
000000000000a7ae         db  0x42 ; 'B'
000000000000a7af         db  0x0e ; '.'
000000000000a7b0         db  0x08 ; '.'
000000000000a7b1         db  0x00 ; '.'
000000000000a7b2         db  0x00 ; '.'
000000000000a7b3         db  0x00 ; '.'
000000000000a7b4         db  0x00 ; '.'
000000000000a7b5         db  0x00 ; '.'
000000000000a7b6         db  0x00 ; '.'
000000000000a7b7         db  0x00 ; '.'
000000000000a7b8         dd         0x0000002c                                  ; Length of the record
000000000000a7bc         dd         0x00000d14                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a7c0         db         0xe0, 0xbb, 2 dup (0xff)                    ; begin 0x63a0
000000000000a7c4         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0x74bf)
000000000000a7c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a7c9         db  0x41 ; 'A'
000000000000a7ca         db  0x0e ; '.'
000000000000a7cb         db  0x10 ; '.'
000000000000a7cc         db  0x86 ; '.'
000000000000a7cd         db  0x02 ; '.'
000000000000a7ce         db  0x43 ; 'C'
000000000000a7cf         db  0x0d ; '.'
000000000000a7d0         db  0x06 ; '.'
000000000000a7d1         db  0x48 ; 'H'
000000000000a7d2         db  0x8f ; '.'
000000000000a7d3         db  0x03 ; '.'
000000000000a7d4         db  0x8e ; '.'
000000000000a7d5         db  0x04 ; '.'
000000000000a7d6         db  0x8d ; '.'
000000000000a7d7         db  0x05 ; '.'
000000000000a7d8         db  0x8c ; '.'
000000000000a7d9         db  0x06 ; '.'
000000000000a7da         db  0x48 ; 'H'
000000000000a7db         db  0x83 ; '.'
000000000000a7dc         db  0x07 ; '.'
000000000000a7dd         db  0x03 ; '.'
000000000000a7de         db  0xef ; '.'
000000000000a7df         db  0x01 ; '.'
000000000000a7e0         db  0x0a ; '.'
000000000000a7e1         db  0x0c ; '.'
000000000000a7e2         db  0x07 ; '.'
000000000000a7e3         db  0x08 ; '.'
000000000000a7e4         db  0x45 ; 'E'
000000000000a7e5         db  0x0b ; '.'
000000000000a7e6         db  0x00 ; '.'
000000000000a7e7         db  0x00 ; '.'
000000000000a7e8         dd         0x00000014                                  ; Length of the record
000000000000a7ec         dd         0x00000d44                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a7f0         db         0xd0, 0xcc, 2 dup (0xff)                    ; begin 0x74c0
000000000000a7f4         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0x76be)
000000000000a7f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a7f9         align      2048
000000000000a800         dd         0x0000004c                                  ; Length of the record
000000000000a804         dd         0x00000d5c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a808         db         0xb8, 0xce, 2 dup (0xff)                    ; begin 0x76c0
000000000000a80c         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0x83ac)
000000000000a810         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a811         db  0x42 ; 'B'
000000000000a812         db  0x0e ; '.'
000000000000a813         db  0x10 ; '.'
000000000000a814         db  0x8f ; '.'
000000000000a815         db  0x02 ; '.'
000000000000a816         db  0x42 ; 'B'
000000000000a817         db  0x0e ; '.'
000000000000a818         db  0x18 ; '.'
000000000000a819         db  0x8e ; '.'
000000000000a81a         db  0x03 ; '.'
000000000000a81b         db  0x46 ; 'F'
000000000000a81c         db  0x0e ; '.'
000000000000a81d         db  0x20 ; ' '
000000000000a81e         db  0x8d ; '.'
000000000000a81f         db  0x04 ; '.'
000000000000a820         db  0x42 ; 'B'
000000000000a821         db  0x0e ; '.'
000000000000a822         db  0x28 ; '('
000000000000a823         db  0x8c ; '.'
000000000000a824         db  0x05 ; '.'
000000000000a825         db  0x45 ; 'E'
000000000000a826         db  0x0e ; '.'
000000000000a827         db  0x30 ; '0'
000000000000a828         db  0x86 ; '.'
000000000000a829         db  0x06 ; '.'
000000000000a82a         db  0x41 ; 'A'
000000000000a82b         db  0x0e ; '.'
000000000000a82c         db  0x38 ; '8'
000000000000a82d         db  0x83 ; '.'
000000000000a82e         db  0x07 ; '.'
000000000000a82f         db  0x52 ; 'R'
000000000000a830         db  0x0e ; '.'
000000000000a831         db  0x90 ; '.'
000000000000a832         db  0x01 ; '.'
000000000000a833         db  0x02 ; '.'
000000000000a834         db  0x82 ; '.'
000000000000a835         db  0x0a ; '.'
000000000000a836         db  0x0e ; '.'
000000000000a837         db  0x38 ; '8'
000000000000a838         db  0x41 ; 'A'
000000000000a839         db  0x0e ; '.'
000000000000a83a         db  0x30 ; '0'
000000000000a83b         db  0x41 ; 'A'
000000000000a83c         db  0x0e ; '.'
000000000000a83d         db  0x28 ; '('
000000000000a83e         db  0x42 ; 'B'
000000000000a83f         db  0x0e ; '.'
000000000000a840         db  0x20 ; ' '
000000000000a841         db  0x42 ; 'B'
000000000000a842         db  0x0e ; '.'
000000000000a843         db  0x18 ; '.'
000000000000a844         db  0x42 ; 'B'
000000000000a845         db  0x0e ; '.'
000000000000a846         db  0x10 ; '.'
000000000000a847         db  0x42 ; 'B'
000000000000a848         db  0x0e ; '.'
000000000000a849         db  0x08 ; '.'
000000000000a84a         db  0x48 ; 'H'
000000000000a84b         db  0x0b ; '.'
000000000000a84c         db  0x00 ; '.'
000000000000a84d         db  0x00 ; '.'
000000000000a84e         db  0x00 ; '.'
000000000000a84f         db  0x00 ; '.'
000000000000a850         dd         0x00000044                                  ; Length of the record
000000000000a854         dd         0x00000dac                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a858         db         0x58, 0xdb, 2 dup (0xff)                    ; begin 0x83b0
000000000000a85c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x8415)
000000000000a860         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a861         db  0x42 ; 'B'
000000000000a862         db  0x0e ; '.'
000000000000a863         db  0x10 ; '.'
000000000000a864         db  0x8f ; '.'
000000000000a865         db  0x02 ; '.'
000000000000a866         db  0x42 ; 'B'
000000000000a867         db  0x0e ; '.'
000000000000a868         db  0x18 ; '.'
000000000000a869         db  0x8e ; '.'
000000000000a86a         db  0x03 ; '.'
000000000000a86b         db  0x45 ; 'E'
000000000000a86c         db  0x0e ; '.'
000000000000a86d         db  0x20 ; ' '
000000000000a86e         db  0x8d ; '.'
000000000000a86f         db  0x04 ; '.'
000000000000a870         db  0x42 ; 'B'
000000000000a871         db  0x0e ; '.'
000000000000a872         db  0x28 ; '('
000000000000a873         db  0x8c ; '.'
000000000000a874         db  0x05 ; '.'
000000000000a875         db  0x48 ; 'H'
000000000000a876         db  0x0e ; '.'
000000000000a877         db  0x30 ; '0'
000000000000a878         db  0x86 ; '.'
000000000000a879         db  0x06 ; '.'
000000000000a87a         db  0x48 ; 'H'
000000000000a87b         db  0x0e ; '.'
000000000000a87c         db  0x38 ; '8'
000000000000a87d         db  0x83 ; '.'
000000000000a87e         db  0x07 ; '.'
000000000000a87f         db  0x4d ; 'M'
000000000000a880         db  0x0e ; '.'
000000000000a881         db  0x40 ; '@'
000000000000a882         db  0x72 ; 'r'
000000000000a883         db  0x0e ; '.'
000000000000a884         db  0x38 ; '8'
000000000000a885         db  0x41 ; 'A'
000000000000a886         db  0x0e ; '.'
000000000000a887         db  0x30 ; '0'
000000000000a888         db  0x41 ; 'A'
000000000000a889         db  0x0e ; '.'
000000000000a88a         db  0x28 ; '('
000000000000a88b         db  0x42 ; 'B'
000000000000a88c         db  0x0e ; '.'
000000000000a88d         db  0x20 ; ' '
000000000000a88e         db  0x42 ; 'B'
000000000000a88f         db  0x0e ; '.'
000000000000a890         db  0x18 ; '.'
000000000000a891         db  0x42 ; 'B'
000000000000a892         db  0x0e ; '.'
000000000000a893         db  0x10 ; '.'
000000000000a894         db  0x42 ; 'B'
000000000000a895         db  0x0e ; '.'
000000000000a896         db  0x08 ; '.'
000000000000a897         db  0x00 ; '.'
000000000000a898         dd         0x00000014                                  ; Length of the record
000000000000a89c         dd         0x00000df4                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a8a0         db         0x80, 0xdb, 2 dup (0xff)                    ; begin 0x8420
000000000000a8a4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x8422)
000000000000a8a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a8a9         align      16
000000000000a8b0         dd         0x00000010                                  ; Length of the record
000000000000a8b4         dd         0x00000e0c                                  ; FDE: parent CIE at 0x9aa8 (FDE encoding = 0x1B)
000000000000a8b8         db         0x78, 0xdb, 2 dup (0xff)                    ; begin 0x8430
000000000000a8bc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x843e)
000000000000a8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a8c1         align      8


        ; Segment Segment 3
        ; Range: [0x20a930; 0x20b2f8[ (2504 bytes)
        ; File offset : [43312; 45216[ (1904 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20a930; 0x20a938[ (8 bytes)
        ; File offset : [43312; 43320[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020a930         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20a938; 0x20a940[ (8 bytes)
        ; File offset : [43320; 43328[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020a938         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20a940; 0x20abd8[ (664 bytes)
        ; File offset : [43328; 43992[ (664 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
000000000020a940         db  0xb9 ; '.'                                         ; DATA XREF=main+88
000000000020a941         db  0x86 ; '.'
000000000020a942         db  0x00 ; '.'
000000000020a943         db  0x00 ; '.'
000000000020a944         db  0x00 ; '.'
000000000020a945         db  0x00 ; '.'
000000000020a946         db  0x00 ; '.'
000000000020a947         db  0x00 ; '.'
000000000020a948         db  0x00 ; '.'
000000000020a949         db  0x00 ; '.'
000000000020a94a         db  0x00 ; '.'
000000000020a94b         db  0x00 ; '.'
000000000020a94c         db  0x00 ; '.'
000000000020a94d         db  0x00 ; '.'
000000000020a94e         db  0x00 ; '.'
000000000020a94f         db  0x00 ; '.'
000000000020a950         db  0x00 ; '.'
000000000020a951         db  0x00 ; '.'
000000000020a952         db  0x00 ; '.'
000000000020a953         db  0x00 ; '.'
000000000020a954         db  0x00 ; '.'
000000000020a955         db  0x00 ; '.'
000000000020a956         db  0x00 ; '.'
000000000020a957         db  0x00 ; '.'
000000000020a958         db  0x61 ; 'a'
000000000020a959         db  0x00 ; '.'
000000000020a95a         db  0x00 ; '.'
000000000020a95b         db  0x00 ; '.'
000000000020a95c         db  0x00 ; '.'
000000000020a95d         db  0x00 ; '.'
000000000020a95e         db  0x00 ; '.'
000000000020a95f         db  0x00 ; '.'
000000000020a960         db  0x46 ; 'F'
000000000020a961         db  0x85 ; '.'
000000000020a962         db  0x00 ; '.'
000000000020a963         db  0x00 ; '.'
000000000020a964         db  0x00 ; '.'
000000000020a965         db  0x00 ; '.'
000000000020a966         db  0x00 ; '.'
000000000020a967         db  0x00 ; '.'
000000000020a968         db  0x00 ; '.'
000000000020a969         db  0x00 ; '.'
000000000020a96a         db  0x00 ; '.'
000000000020a96b         db  0x00 ; '.'
000000000020a96c         db  0x00 ; '.'
000000000020a96d         db  0x00 ; '.'
000000000020a96e         db  0x00 ; '.'
000000000020a96f         db  0x00 ; '.'
000000000020a970         db  0x00 ; '.'
000000000020a971         db  0x00 ; '.'
000000000020a972         db  0x00 ; '.'
000000000020a973         db  0x00 ; '.'
000000000020a974         db  0x00 ; '.'
000000000020a975         db  0x00 ; '.'
000000000020a976         db  0x00 ; '.'
000000000020a977         db  0x00 ; '.'
000000000020a978         db  0x62 ; 'b'
000000000020a979         db  0x00 ; '.'
000000000020a97a         db  0x00 ; '.'
000000000020a97b         db  0x00 ; '.'
000000000020a97c         db  0x00 ; '.'
000000000020a97d         db  0x00 ; '.'
000000000020a97e         db  0x00 ; '.'
000000000020a97f         db  0x00 ; '.'
000000000020a980         db  0xbd ; '.'
000000000020a981         db  0x86 ; '.'
000000000020a982         db  0x00 ; '.'
000000000020a983         db  0x00 ; '.'
000000000020a984         db  0x00 ; '.'
000000000020a985         db  0x00 ; '.'
000000000020a986         db  0x00 ; '.'
000000000020a987         db  0x00 ; '.'
000000000020a988         db  0x00 ; '.'
000000000020a989         db  0x00 ; '.'
000000000020a98a         db  0x00 ; '.'
000000000020a98b         db  0x00 ; '.'
000000000020a98c         db  0x00 ; '.'
000000000020a98d         db  0x00 ; '.'
000000000020a98e         db  0x00 ; '.'
000000000020a98f         db  0x00 ; '.'
000000000020a990         db  0x00 ; '.'
000000000020a991         db  0x00 ; '.'
000000000020a992         db  0x00 ; '.'
000000000020a993         db  0x00 ; '.'
000000000020a994         db  0x00 ; '.'
000000000020a995         db  0x00 ; '.'
000000000020a996         db  0x00 ; '.'
000000000020a997         db  0x00 ; '.'
000000000020a998         db  0x71 ; 'q'
000000000020a999         db  0x00 ; '.'
000000000020a99a         db  0x00 ; '.'
000000000020a99b         db  0x00 ; '.'
000000000020a99c         db  0x00 ; '.'
000000000020a99d         db  0x00 ; '.'
000000000020a99e         db  0x00 ; '.'
000000000020a99f         db  0x00 ; '.'
000000000020a9a0         db  0xc3 ; '.'
000000000020a9a1         db  0x86 ; '.'
000000000020a9a2         db  0x00 ; '.'
000000000020a9a3         db  0x00 ; '.'
000000000020a9a4         db  0x00 ; '.'
000000000020a9a5         db  0x00 ; '.'
000000000020a9a6         db  0x00 ; '.'
000000000020a9a7         db  0x00 ; '.'
000000000020a9a8         db  0x00 ; '.'
000000000020a9a9         db  0x00 ; '.'
000000000020a9aa         db  0x00 ; '.'
000000000020a9ab         db  0x00 ; '.'
000000000020a9ac         db  0x00 ; '.'
000000000020a9ad         db  0x00 ; '.'
000000000020a9ae         db  0x00 ; '.'
000000000020a9af         db  0x00 ; '.'
000000000020a9b0         db  0x00 ; '.'
000000000020a9b1         db  0x00 ; '.'
000000000020a9b2         db  0x00 ; '.'
000000000020a9b3         db  0x00 ; '.'
000000000020a9b4         db  0x00 ; '.'
000000000020a9b5         db  0x00 ; '.'
000000000020a9b6         db  0x00 ; '.'
000000000020a9b7         db  0x00 ; '.'
000000000020a9b8         db  0x64 ; 'd'
000000000020a9b9         db  0x00 ; '.'
000000000020a9ba         db  0x00 ; '.'
000000000020a9bb         db  0x00 ; '.'
000000000020a9bc         db  0x00 ; '.'
000000000020a9bd         db  0x00 ; '.'
000000000020a9be         db  0x00 ; '.'
000000000020a9bf         db  0x00 ; '.'
000000000020a9c0         db  0xc8 ; '.'
000000000020a9c1         db  0x86 ; '.'
000000000020a9c2         db  0x00 ; '.'
000000000020a9c3         db  0x00 ; '.'
000000000020a9c4         db  0x00 ; '.'
000000000020a9c5         db  0x00 ; '.'
000000000020a9c6         db  0x00 ; '.'
000000000020a9c7         db  0x00 ; '.'
000000000020a9c8         db  0x00 ; '.'
000000000020a9c9         db  0x00 ; '.'
000000000020a9ca         db  0x00 ; '.'
000000000020a9cb         db  0x00 ; '.'
000000000020a9cc         db  0x00 ; '.'
000000000020a9cd         db  0x00 ; '.'
000000000020a9ce         db  0x00 ; '.'
000000000020a9cf         db  0x00 ; '.'
000000000020a9d0         db  0x00 ; '.'
000000000020a9d1         db  0x00 ; '.'
000000000020a9d2         db  0x00 ; '.'
000000000020a9d3         db  0x00 ; '.'
000000000020a9d4         db  0x00 ; '.'
000000000020a9d5         db  0x00 ; '.'
000000000020a9d6         db  0x00 ; '.'
000000000020a9d7         db  0x00 ; '.'
000000000020a9d8         db  0x48 ; 'H'
000000000020a9d9         db  0x00 ; '.'
000000000020a9da         db  0x00 ; '.'
000000000020a9db         db  0x00 ; '.'
000000000020a9dc         db  0x00 ; '.'
000000000020a9dd         db  0x00 ; '.'
000000000020a9de         db  0x00 ; '.'
000000000020a9df         db  0x00 ; '.'
000000000020a9e0         db  0xd0 ; '.'
000000000020a9e1         db  0x86 ; '.'
000000000020a9e2         db  0x00 ; '.'
000000000020a9e3         db  0x00 ; '.'
000000000020a9e4         db  0x00 ; '.'
000000000020a9e5         db  0x00 ; '.'
000000000020a9e6         db  0x00 ; '.'
000000000020a9e7         db  0x00 ; '.'
000000000020a9e8         db  0x00 ; '.'
000000000020a9e9         db  0x00 ; '.'
000000000020a9ea         db  0x00 ; '.'
000000000020a9eb         db  0x00 ; '.'
000000000020a9ec         db  0x00 ; '.'
000000000020a9ed         db  0x00 ; '.'
000000000020a9ee         db  0x00 ; '.'
000000000020a9ef         db  0x00 ; '.'
000000000020a9f0         db  0x00 ; '.'
000000000020a9f1         db  0x00 ; '.'
000000000020a9f2         db  0x00 ; '.'
000000000020a9f3         db  0x00 ; '.'
000000000020a9f4         db  0x00 ; '.'
000000000020a9f5         db  0x00 ; '.'
000000000020a9f6         db  0x00 ; '.'
000000000020a9f7         db  0x00 ; '.'
000000000020a9f8         db  0x6c ; 'l'
000000000020a9f9         db  0x00 ; '.'
000000000020a9fa         db  0x00 ; '.'
000000000020a9fb         db  0x00 ; '.'
000000000020a9fc         db  0x00 ; '.'
000000000020a9fd         db  0x00 ; '.'
000000000020a9fe         db  0x00 ; '.'
000000000020a9ff         db  0x00 ; '.'
000000000020aa00         db  0xd6 ; '.'
000000000020aa01         db  0x86 ; '.'
000000000020aa02         db  0x00 ; '.'
000000000020aa03         db  0x00 ; '.'
000000000020aa04         db  0x00 ; '.'
000000000020aa05         db  0x00 ; '.'
000000000020aa06         db  0x00 ; '.'
000000000020aa07         db  0x00 ; '.'
000000000020aa08         db  0x00 ; '.'
000000000020aa09         db  0x00 ; '.'
000000000020aa0a         db  0x00 ; '.'
000000000020aa0b         db  0x00 ; '.'
000000000020aa0c         db  0x00 ; '.'
000000000020aa0d         db  0x00 ; '.'
000000000020aa0e         db  0x00 ; '.'
000000000020aa0f         db  0x00 ; '.'
000000000020aa10         db  0x00 ; '.'
000000000020aa11         db  0x00 ; '.'
000000000020aa12         db  0x00 ; '.'
000000000020aa13         db  0x00 ; '.'
000000000020aa14         db  0x00 ; '.'
000000000020aa15         db  0x00 ; '.'
000000000020aa16         db  0x00 ; '.'
000000000020aa17         db  0x00 ; '.'
000000000020aa18         db  0x80 ; '.'
000000000020aa19         db  0x00 ; '.'
000000000020aa1a         db  0x00 ; '.'
000000000020aa1b         db  0x00 ; '.'
000000000020aa1c         db  0x00 ; '.'
000000000020aa1d         db  0x00 ; '.'
000000000020aa1e         db  0x00 ; '.'
000000000020aa1f         db  0x00 ; '.'
000000000020aa20         db  0xdd ; '.'
000000000020aa21         db  0x86 ; '.'
000000000020aa22         db  0x00 ; '.'
000000000020aa23         db  0x00 ; '.'
000000000020aa24         db  0x00 ; '.'
000000000020aa25         db  0x00 ; '.'
000000000020aa26         db  0x00 ; '.'
000000000020aa27         db  0x00 ; '.'
000000000020aa28         db  0x00 ; '.'
000000000020aa29         db  0x00 ; '.'
000000000020aa2a         db  0x00 ; '.'
000000000020aa2b         db  0x00 ; '.'
000000000020aa2c         db  0x00 ; '.'
000000000020aa2d         db  0x00 ; '.'
000000000020aa2e         db  0x00 ; '.'
000000000020aa2f         db  0x00 ; '.'
000000000020aa30         db  0x00 ; '.'
000000000020aa31         db  0x00 ; '.'
000000000020aa32         db  0x00 ; '.'
000000000020aa33         db  0x00 ; '.'
000000000020aa34         db  0x00 ; '.'
000000000020aa35         db  0x00 ; '.'
000000000020aa36         db  0x00 ; '.'
000000000020aa37         db  0x00 ; '.'
000000000020aa38         db  0x54 ; 'T'
000000000020aa39         db  0x00 ; '.'
000000000020aa3a         db  0x00 ; '.'
000000000020aa3b         db  0x00 ; '.'
000000000020aa3c         db  0x00 ; '.'
000000000020aa3d         db  0x00 ; '.'
000000000020aa3e         db  0x00 ; '.'
000000000020aa3f         db  0x00 ; '.'
000000000020aa40         db  0xe5 ; '.'
000000000020aa41         db  0x86 ; '.'
000000000020aa42         db  0x00 ; '.'
000000000020aa43         db  0x00 ; '.'
000000000020aa44         db  0x00 ; '.'
000000000020aa45         db  0x00 ; '.'
000000000020aa46         db  0x00 ; '.'
000000000020aa47         db  0x00 ; '.'
000000000020aa48         db  0x00 ; '.'
000000000020aa49         db  0x00 ; '.'
000000000020aa4a         db  0x00 ; '.'
000000000020aa4b         db  0x00 ; '.'
000000000020aa4c         db  0x00 ; '.'
000000000020aa4d         db  0x00 ; '.'
000000000020aa4e         db  0x00 ; '.'
000000000020aa4f         db  0x00 ; '.'
000000000020aa50         db  0x00 ; '.'
000000000020aa51         db  0x00 ; '.'
000000000020aa52         db  0x00 ; '.'
000000000020aa53         db  0x00 ; '.'
000000000020aa54         db  0x00 ; '.'
000000000020aa55         db  0x00 ; '.'
000000000020aa56         db  0x00 ; '.'
000000000020aa57         db  0x00 ; '.'
000000000020aa58         db  0x54 ; 'T'
000000000020aa59         db  0x00 ; '.'
000000000020aa5a         db  0x00 ; '.'
000000000020aa5b         db  0x00 ; '.'
000000000020aa5c         db  0x00 ; '.'
000000000020aa5d         db  0x00 ; '.'
000000000020aa5e         db  0x00 ; '.'
000000000020aa5f         db  0x00 ; '.'
000000000020aa60         db  0xea ; '.'
000000000020aa61         db  0x86 ; '.'
000000000020aa62         db  0x00 ; '.'
000000000020aa63         db  0x00 ; '.'
000000000020aa64         db  0x00 ; '.'
000000000020aa65         db  0x00 ; '.'
000000000020aa66         db  0x00 ; '.'
000000000020aa67         db  0x00 ; '.'
000000000020aa68         db  0x00 ; '.'
000000000020aa69         db  0x00 ; '.'
000000000020aa6a         db  0x00 ; '.'
000000000020aa6b         db  0x00 ; '.'
000000000020aa6c         db  0x00 ; '.'
000000000020aa6d         db  0x00 ; '.'
000000000020aa6e         db  0x00 ; '.'
000000000020aa6f         db  0x00 ; '.'
000000000020aa70         db  0x00 ; '.'
000000000020aa71         db  0x00 ; '.'
000000000020aa72         db  0x00 ; '.'
000000000020aa73         db  0x00 ; '.'
000000000020aa74         db  0x00 ; '.'
000000000020aa75         db  0x00 ; '.'
000000000020aa76         db  0x00 ; '.'
000000000020aa77         db  0x00 ; '.'
000000000020aa78         db  0x70 ; 'p'
000000000020aa79         db  0x00 ; '.'
000000000020aa7a         db  0x00 ; '.'
000000000020aa7b         db  0x00 ; '.'
000000000020aa7c         db  0x00 ; '.'
000000000020aa7d         db  0x00 ; '.'
000000000020aa7e         db  0x00 ; '.'
000000000020aa7f         db  0x00 ; '.'
000000000020aa80         db  0xf2 ; '.'
000000000020aa81         db  0x86 ; '.'
000000000020aa82         db  0x00 ; '.'
000000000020aa83         db  0x00 ; '.'
000000000020aa84         db  0x00 ; '.'
000000000020aa85         db  0x00 ; '.'
000000000020aa86         db  0x00 ; '.'
000000000020aa87         db  0x00 ; '.'
000000000020aa88         db  0x00 ; '.'
000000000020aa89         db  0x00 ; '.'
000000000020aa8a         db  0x00 ; '.'
000000000020aa8b         db  0x00 ; '.'
000000000020aa8c         db  0x00 ; '.'
000000000020aa8d         db  0x00 ; '.'
000000000020aa8e         db  0x00 ; '.'
000000000020aa8f         db  0x00 ; '.'
000000000020aa90         db  0x00 ; '.'
000000000020aa91         db  0x00 ; '.'
000000000020aa92         db  0x00 ; '.'
000000000020aa93         db  0x00 ; '.'
000000000020aa94         db  0x00 ; '.'
000000000020aa95         db  0x00 ; '.'
000000000020aa96         db  0x00 ; '.'
000000000020aa97         db  0x00 ; '.'
000000000020aa98         db  0x72 ; 'r'
000000000020aa99         db  0x00 ; '.'
000000000020aa9a         db  0x00 ; '.'
000000000020aa9b         db  0x00 ; '.'
000000000020aa9c         db  0x00 ; '.'
000000000020aa9d         db  0x00 ; '.'
000000000020aa9e         db  0x00 ; '.'
000000000020aa9f         db  0x00 ; '.'
000000000020aaa0         db  0xfb ; '.'
000000000020aaa1         db  0x86 ; '.'
000000000020aaa2         db  0x00 ; '.'
000000000020aaa3         db  0x00 ; '.'
000000000020aaa4         db  0x00 ; '.'
000000000020aaa5         db  0x00 ; '.'
000000000020aaa6         db  0x00 ; '.'
000000000020aaa7         db  0x00 ; '.'
000000000020aaa8         db  0x00 ; '.'
000000000020aaa9         db  0x00 ; '.'
000000000020aaaa         db  0x00 ; '.'
000000000020aaab         db  0x00 ; '.'
000000000020aaac         db  0x00 ; '.'
000000000020aaad         db  0x00 ; '.'
000000000020aaae         db  0x00 ; '.'
000000000020aaaf         db  0x00 ; '.'
000000000020aab0         db  0x00 ; '.'
000000000020aab1         db  0x00 ; '.'
000000000020aab2         db  0x00 ; '.'
000000000020aab3         db  0x00 ; '.'
000000000020aab4         db  0x00 ; '.'
000000000020aab5         db  0x00 ; '.'
000000000020aab6         db  0x00 ; '.'
000000000020aab7         db  0x00 ; '.'
000000000020aab8         db  0x73 ; 's'
000000000020aab9         db  0x00 ; '.'
000000000020aaba         db  0x00 ; '.'
000000000020aabb         db  0x00 ; '.'
000000000020aabc         db  0x00 ; '.'
000000000020aabd         db  0x00 ; '.'
000000000020aabe         db  0x00 ; '.'
000000000020aabf         db  0x00 ; '.'
000000000020aac0         db  0x01 ; '.'
000000000020aac1         db  0x87 ; '.'
000000000020aac2         db  0x00 ; '.'
000000000020aac3         db  0x00 ; '.'
000000000020aac4         db  0x00 ; '.'
000000000020aac5         db  0x00 ; '.'
000000000020aac6         db  0x00 ; '.'
000000000020aac7         db  0x00 ; '.'
000000000020aac8         db  0x00 ; '.'
000000000020aac9         db  0x00 ; '.'
000000000020aaca         db  0x00 ; '.'
000000000020aacb         db  0x00 ; '.'
000000000020aacc         db  0x00 ; '.'
000000000020aacd         db  0x00 ; '.'
000000000020aace         db  0x00 ; '.'
000000000020aacf         db  0x00 ; '.'
000000000020aad0         db  0x00 ; '.'
000000000020aad1         db  0x00 ; '.'
000000000020aad2         db  0x00 ; '.'
000000000020aad3         db  0x00 ; '.'
000000000020aad4         db  0x00 ; '.'
000000000020aad5         db  0x00 ; '.'
000000000020aad6         db  0x00 ; '.'
000000000020aad7         db  0x00 ; '.'
000000000020aad8         db  0x74 ; 't'
000000000020aad9         db  0x00 ; '.'
000000000020aada         db  0x00 ; '.'
000000000020aadb         db  0x00 ; '.'
000000000020aadc         db  0x00 ; '.'
000000000020aadd         db  0x00 ; '.'
000000000020aade         db  0x00 ; '.'
000000000020aadf         db  0x00 ; '.'
000000000020aae0         db  0x06 ; '.'
000000000020aae1         db  0x87 ; '.'
000000000020aae2         db  0x00 ; '.'
000000000020aae3         db  0x00 ; '.'
000000000020aae4         db  0x00 ; '.'
000000000020aae5         db  0x00 ; '.'
000000000020aae6         db  0x00 ; '.'
000000000020aae7         db  0x00 ; '.'
000000000020aae8         db  0x00 ; '.'
000000000020aae9         db  0x00 ; '.'
000000000020aaea         db  0x00 ; '.'
000000000020aaeb         db  0x00 ; '.'
000000000020aaec         db  0x00 ; '.'
000000000020aaed         db  0x00 ; '.'
000000000020aaee         db  0x00 ; '.'
000000000020aaef         db  0x00 ; '.'
000000000020aaf0         db  0x00 ; '.'
000000000020aaf1         db  0x00 ; '.'
000000000020aaf2         db  0x00 ; '.'
000000000020aaf3         db  0x00 ; '.'
000000000020aaf4         db  0x00 ; '.'
000000000020aaf5         db  0x00 ; '.'
000000000020aaf6         db  0x00 ; '.'
000000000020aaf7         db  0x00 ; '.'
000000000020aaf8         db  0x75 ; 'u'
000000000020aaf9         db  0x00 ; '.'
000000000020aafa         db  0x00 ; '.'
000000000020aafb         db  0x00 ; '.'
000000000020aafc         db  0x00 ; '.'
000000000020aafd         db  0x00 ; '.'
000000000020aafe         db  0x00 ; '.'
000000000020aaff         db  0x00 ; '.'
000000000020ab00         db  0x0c ; '.'
000000000020ab01         db  0x87 ; '.'
000000000020ab02         db  0x00 ; '.'
000000000020ab03         db  0x00 ; '.'
000000000020ab04         db  0x00 ; '.'
000000000020ab05         db  0x00 ; '.'
000000000020ab06         db  0x00 ; '.'
000000000020ab07         db  0x00 ; '.'
000000000020ab08         db  0x00 ; '.'
000000000020ab09         db  0x00 ; '.'
000000000020ab0a         db  0x00 ; '.'
000000000020ab0b         db  0x00 ; '.'
000000000020ab0c         db  0x00 ; '.'
000000000020ab0d         db  0x00 ; '.'
000000000020ab0e         db  0x00 ; '.'
000000000020ab0f         db  0x00 ; '.'
000000000020ab10         db  0x00 ; '.'
000000000020ab11         db  0x00 ; '.'
000000000020ab12         db  0x00 ; '.'
000000000020ab13         db  0x00 ; '.'
000000000020ab14         db  0x00 ; '.'
000000000020ab15         db  0x00 ; '.'
000000000020ab16         db  0x00 ; '.'
000000000020ab17         db  0x00 ; '.'
000000000020ab18         db  0x54 ; 'T'
000000000020ab19         db  0x00 ; '.'
000000000020ab1a         db  0x00 ; '.'
000000000020ab1b         db  0x00 ; '.'
000000000020ab1c         db  0x00 ; '.'
000000000020ab1d         db  0x00 ; '.'
000000000020ab1e         db  0x00 ; '.'
000000000020ab1f         db  0x00 ; '.'
000000000020ab20         db  0x15 ; '.'
000000000020ab21         db  0x87 ; '.'
000000000020ab22         db  0x00 ; '.'
000000000020ab23         db  0x00 ; '.'
000000000020ab24         db  0x00 ; '.'
000000000020ab25         db  0x00 ; '.'
000000000020ab26         db  0x00 ; '.'
000000000020ab27         db  0x00 ; '.'
000000000020ab28         db  0x00 ; '.'
000000000020ab29         db  0x00 ; '.'
000000000020ab2a         db  0x00 ; '.'
000000000020ab2b         db  0x00 ; '.'
000000000020ab2c         db  0x00 ; '.'
000000000020ab2d         db  0x00 ; '.'
000000000020ab2e         db  0x00 ; '.'
000000000020ab2f         db  0x00 ; '.'
000000000020ab30         db  0x00 ; '.'
000000000020ab31         db  0x00 ; '.'
000000000020ab32         db  0x00 ; '.'
000000000020ab33         db  0x00 ; '.'
000000000020ab34         db  0x00 ; '.'
000000000020ab35         db  0x00 ; '.'
000000000020ab36         db  0x00 ; '.'
000000000020ab37         db  0x00 ; '.'
000000000020ab38         db  0x7e ; '~'
000000000020ab39         db  0xff ; '.'
000000000020ab3a         db  0xff ; '.'
000000000020ab3b         db  0xff ; '.'
000000000020ab3c         db  0x00 ; '.'
000000000020ab3d         db  0x00 ; '.'
000000000020ab3e         db  0x00 ; '.'
000000000020ab3f         db  0x00 ; '.'
000000000020ab40         db  0x1a ; '.'
000000000020ab41         db  0x87 ; '.'
000000000020ab42         db  0x00 ; '.'
000000000020ab43         db  0x00 ; '.'
000000000020ab44         db  0x00 ; '.'
000000000020ab45         db  0x00 ; '.'
000000000020ab46         db  0x00 ; '.'
000000000020ab47         db  0x00 ; '.'
000000000020ab48         db  0x00 ; '.'
000000000020ab49         db  0x00 ; '.'
000000000020ab4a         db  0x00 ; '.'
000000000020ab4b         db  0x00 ; '.'
000000000020ab4c         db  0x00 ; '.'
000000000020ab4d         db  0x00 ; '.'
000000000020ab4e         db  0x00 ; '.'
000000000020ab4f         db  0x00 ; '.'
000000000020ab50         db  0x00 ; '.'
000000000020ab51         db  0x00 ; '.'
000000000020ab52         db  0x00 ; '.'
000000000020ab53         db  0x00 ; '.'
000000000020ab54         db  0x00 ; '.'
000000000020ab55         db  0x00 ; '.'
000000000020ab56         db  0x00 ; '.'
000000000020ab57         db  0x00 ; '.'
000000000020ab58         db  0x7d ; '}'
000000000020ab59         db  0xff ; '.'
000000000020ab5a         db  0xff ; '.'
000000000020ab5b         db  0xff ; '.'
000000000020ab5c         db  0x00 ; '.'
000000000020ab5d         db  0x00 ; '.'
000000000020ab5e         db  0x00 ; '.'
000000000020ab5f         db  0x00 ; '.'
000000000020ab60         db  0x00 ; '.'
000000000020ab61         db  0x00 ; '.'
000000000020ab62         db  0x00 ; '.'
000000000020ab63         db  0x00 ; '.'
000000000020ab64         db  0x00 ; '.'
000000000020ab65         db  0x00 ; '.'
000000000020ab66         db  0x00 ; '.'
000000000020ab67         db  0x00 ; '.'
000000000020ab68         db  0x00 ; '.'
000000000020ab69         db  0x00 ; '.'
000000000020ab6a         db  0x00 ; '.'
000000000020ab6b         db  0x00 ; '.'
000000000020ab6c         db  0x00 ; '.'
000000000020ab6d         db  0x00 ; '.'
000000000020ab6e         db  0x00 ; '.'
000000000020ab6f         db  0x00 ; '.'
000000000020ab70         db  0x00 ; '.'
000000000020ab71         db  0x00 ; '.'
000000000020ab72         db  0x00 ; '.'
000000000020ab73         db  0x00 ; '.'
000000000020ab74         db  0x00 ; '.'
000000000020ab75         db  0x00 ; '.'
000000000020ab76         db  0x00 ; '.'
000000000020ab77         db  0x00 ; '.'
000000000020ab78         db  0x00 ; '.'
000000000020ab79         db  0x00 ; '.'
000000000020ab7a         db  0x00 ; '.'
000000000020ab7b         db  0x00 ; '.'
000000000020ab7c         db  0x00 ; '.'
000000000020ab7d         db  0x00 ; '.'
000000000020ab7e         db  0x00 ; '.'
000000000020ab7f         db  0x00 ; '.'
                     quoting_style_args:
000000000020ab80         db  0x49 ; 'I'
000000000020ab81         db  0x8d ; '.'
000000000020ab82         db  0x00 ; '.'
000000000020ab83         db  0x00 ; '.'
000000000020ab84         db  0x00 ; '.'
000000000020ab85         db  0x00 ; '.'
000000000020ab86         db  0x00 ; '.'
000000000020ab87         db  0x00 ; '.'
000000000020ab88         db  0x51 ; 'Q'
000000000020ab89         db  0x8d ; '.'
000000000020ab8a         db  0x00 ; '.'
000000000020ab8b         db  0x00 ; '.'
000000000020ab8c         db  0x00 ; '.'
000000000020ab8d         db  0x00 ; '.'
000000000020ab8e         db  0x00 ; '.'
000000000020ab8f         db  0x00 ; '.'
000000000020ab90         db  0x57 ; 'W'
000000000020ab91         db  0x8d ; '.'
000000000020ab92         db  0x00 ; '.'
000000000020ab93         db  0x00 ; '.'
000000000020ab94         db  0x00 ; '.'
000000000020ab95         db  0x00 ; '.'
000000000020ab96         db  0x00 ; '.'
000000000020ab97         db  0x00 ; '.'
000000000020ab98         db  0x64 ; 'd'
000000000020ab99         db  0x8d ; '.'
000000000020ab9a         db  0x00 ; '.'
000000000020ab9b         db  0x00 ; '.'
000000000020ab9c         db  0x00 ; '.'
000000000020ab9d         db  0x00 ; '.'
000000000020ab9e         db  0x00 ; '.'
000000000020ab9f         db  0x00 ; '.'
000000000020aba0         db  0x71 ; 'q'
000000000020aba1         db  0x8d ; '.'
000000000020aba2         db  0x00 ; '.'
000000000020aba3         db  0x00 ; '.'
000000000020aba4         db  0x00 ; '.'
000000000020aba5         db  0x00 ; '.'
000000000020aba6         db  0x00 ; '.'
000000000020aba7         db  0x00 ; '.'
000000000020aba8         db  0x32 ; '2'
000000000020aba9         db  0x85 ; '.'
000000000020abaa         db  0x00 ; '.'
000000000020abab         db  0x00 ; '.'
000000000020abac         db  0x00 ; '.'
000000000020abad         db  0x00 ; '.'
000000000020abae         db  0x00 ; '.'
000000000020abaf         db  0x00 ; '.'
000000000020abb0         db  0x85 ; '.'
000000000020abb1         db  0x8d ; '.'
000000000020abb2         db  0x00 ; '.'
000000000020abb3         db  0x00 ; '.'
000000000020abb4         db  0x00 ; '.'
000000000020abb5         db  0x00 ; '.'
000000000020abb6         db  0x00 ; '.'
000000000020abb7         db  0x00 ; '.'
000000000020abb8         db  0x6a ; 'j'
000000000020abb9         db  0x8d ; '.'
000000000020abba         db  0x00 ; '.'
000000000020abbb         db  0x00 ; '.'
000000000020abbc         db  0x00 ; '.'
000000000020abbd         db  0x00 ; '.'
000000000020abbe         db  0x00 ; '.'
000000000020abbf         db  0x00 ; '.'
000000000020abc0         db  0x48 ; 'H'
000000000020abc1         db  0x86 ; '.'
000000000020abc2         db  0x00 ; '.'
000000000020abc3         db  0x00 ; '.'
000000000020abc4         db  0x00 ; '.'
000000000020abc5         db  0x00 ; '.'
000000000020abc6         db  0x00 ; '.'
000000000020abc7         db  0x00 ; '.'
000000000020abc8         db  0x8d ; '.'
000000000020abc9         db  0x8d ; '.'
000000000020abca         db  0x00 ; '.'
000000000020abcb         db  0x00 ; '.'
000000000020abcc         db  0x00 ; '.'
000000000020abcd         db  0x00 ; '.'
000000000020abce         db  0x00 ; '.'
000000000020abcf         db  0x00 ; '.'
000000000020abd0         db  0x00 ; '.'
000000000020abd1         db  0x00 ; '.'
000000000020abd2         db  0x00 ; '.'
000000000020abd3         db  0x00 ; '.'
000000000020abd4         db  0x00 ; '.'
000000000020abd5         db  0x00 ; '.'
000000000020abd6         db  0x00 ; '.'
000000000020abd7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20abd8; 0x20adc8[ (496 bytes)
        ; File offset : [43992; 44488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020abd8         db  0x01 ; '.'
000000000020abd9         db  0x00 ; '.'
000000000020abda         db  0x00 ; '.'
000000000020abdb         db  0x00 ; '.'
000000000020abdc         db  0x00 ; '.'
000000000020abdd         db  0x00 ; '.'
000000000020abde         db  0x00 ; '.'
000000000020abdf         db  0x00 ; '.'
000000000020abe0         db  0x01 ; '.'
000000000020abe1         db  0x00 ; '.'
000000000020abe2         db  0x00 ; '.'
000000000020abe3         db  0x00 ; '.'
000000000020abe4         db  0x00 ; '.'
000000000020abe5         db  0x00 ; '.'
000000000020abe6         db  0x00 ; '.'
000000000020abe7         db  0x00 ; '.'
000000000020abe8         db  0x0c ; '.'
000000000020abe9         db  0x00 ; '.'
000000000020abea         db  0x00 ; '.'
000000000020abeb         db  0x00 ; '.'
000000000020abec         db  0x00 ; '.'
000000000020abed         db  0x00 ; '.'
000000000020abee         db  0x00 ; '.'
000000000020abef         db  0x00 ; '.'
000000000020abf0         db  0xc0 ; '.'
000000000020abf1         db  0x17 ; '.'
000000000020abf2         db  0x00 ; '.'
000000000020abf3         db  0x00 ; '.'
000000000020abf4         db  0x00 ; '.'
000000000020abf5         db  0x00 ; '.'
000000000020abf6         db  0x00 ; '.'
000000000020abf7         db  0x00 ; '.'
000000000020abf8         db  0x0d ; '.'
000000000020abf9         db  0x00 ; '.'
000000000020abfa         db  0x00 ; '.'
000000000020abfb         db  0x00 ; '.'
000000000020abfc         db  0x00 ; '.'
000000000020abfd         db  0x00 ; '.'
000000000020abfe         db  0x00 ; '.'
000000000020abff         db  0x00 ; '.'
000000000020ac00         db  0x40 ; '@'
000000000020ac01         db  0x84 ; '.'
000000000020ac02         db  0x00 ; '.'
000000000020ac03         db  0x00 ; '.'
000000000020ac04         db  0x00 ; '.'
000000000020ac05         db  0x00 ; '.'
000000000020ac06         db  0x00 ; '.'
000000000020ac07         db  0x00 ; '.'
000000000020ac08         db  0x19 ; '.'
000000000020ac09         db  0x00 ; '.'
000000000020ac0a         db  0x00 ; '.'
000000000020ac0b         db  0x00 ; '.'
000000000020ac0c         db  0x00 ; '.'
000000000020ac0d         db  0x00 ; '.'
000000000020ac0e         db  0x00 ; '.'
000000000020ac0f         db  0x00 ; '.'
000000000020ac10         db  0x30 ; '0'
000000000020ac11         db  0xa9 ; '.'
000000000020ac12         db  0x20 ; ' '
000000000020ac13         db  0x00 ; '.'
000000000020ac14         db  0x00 ; '.'
000000000020ac15         db  0x00 ; '.'
000000000020ac16         db  0x00 ; '.'
000000000020ac17         db  0x00 ; '.'
000000000020ac18         db  0x1b ; '.'
000000000020ac19         db  0x00 ; '.'
000000000020ac1a         db  0x00 ; '.'
000000000020ac1b         db  0x00 ; '.'
000000000020ac1c         db  0x00 ; '.'
000000000020ac1d         db  0x00 ; '.'
000000000020ac1e         db  0x00 ; '.'
000000000020ac1f         db  0x00 ; '.'
000000000020ac20         db  0x08 ; '.'
000000000020ac21         db  0x00 ; '.'
000000000020ac22         db  0x00 ; '.'
000000000020ac23         db  0x00 ; '.'
000000000020ac24         db  0x00 ; '.'
000000000020ac25         db  0x00 ; '.'
000000000020ac26         db  0x00 ; '.'
000000000020ac27         db  0x00 ; '.'
000000000020ac28         db  0x1a ; '.'
000000000020ac29         db  0x00 ; '.'
000000000020ac2a         db  0x00 ; '.'
000000000020ac2b         db  0x00 ; '.'
000000000020ac2c         db  0x00 ; '.'
000000000020ac2d         db  0x00 ; '.'
000000000020ac2e         db  0x00 ; '.'
000000000020ac2f         db  0x00 ; '.'
000000000020ac30         db  0x38 ; '8'
000000000020ac31         db  0xa9 ; '.'
000000000020ac32         db  0x20 ; ' '
000000000020ac33         db  0x00 ; '.'
000000000020ac34         db  0x00 ; '.'
000000000020ac35         db  0x00 ; '.'
000000000020ac36         db  0x00 ; '.'
000000000020ac37         db  0x00 ; '.'
000000000020ac38         db  0x1c ; '.'
000000000020ac39         db  0x00 ; '.'
000000000020ac3a         db  0x00 ; '.'
000000000020ac3b         db  0x00 ; '.'
000000000020ac3c         db  0x00 ; '.'
000000000020ac3d         db  0x00 ; '.'
000000000020ac3e         db  0x00 ; '.'
000000000020ac3f         db  0x00 ; '.'
000000000020ac40         db  0x08 ; '.'
000000000020ac41         db  0x00 ; '.'
000000000020ac42         db  0x00 ; '.'
000000000020ac43         db  0x00 ; '.'
000000000020ac44         db  0x00 ; '.'
000000000020ac45         db  0x00 ; '.'
000000000020ac46         db  0x00 ; '.'
000000000020ac47         db  0x00 ; '.'
000000000020ac48         db  0xf5 ; '.'
000000000020ac49         db  0xfe ; '.'
000000000020ac4a         db  0xff ; '.'
000000000020ac4b         db  0x6f ; 'o'
000000000020ac4c         db  0x00 ; '.'
000000000020ac4d         db  0x00 ; '.'
000000000020ac4e         db  0x00 ; '.'
000000000020ac4f         db  0x00 ; '.'
000000000020ac50         db  0x98 ; '.'
000000000020ac51         db  0x02 ; '.'
000000000020ac52         db  0x00 ; '.'
000000000020ac53         db  0x00 ; '.'
000000000020ac54         db  0x00 ; '.'
000000000020ac55         db  0x00 ; '.'
000000000020ac56         db  0x00 ; '.'
000000000020ac57         db  0x00 ; '.'
000000000020ac58         db  0x05 ; '.'
000000000020ac59         db  0x00 ; '.'
000000000020ac5a         db  0x00 ; '.'
000000000020ac5b         db  0x00 ; '.'
000000000020ac5c         db  0x00 ; '.'
000000000020ac5d         db  0x00 ; '.'
000000000020ac5e         db  0x00 ; '.'
000000000020ac5f         db  0x00 ; '.'
000000000020ac60         db  0xc8 ; '.'
000000000020ac61         db  0x09 ; '.'
000000000020ac62         db  0x00 ; '.'
000000000020ac63         db  0x00 ; '.'
000000000020ac64         db  0x00 ; '.'
000000000020ac65         db  0x00 ; '.'
000000000020ac66         db  0x00 ; '.'
000000000020ac67         db  0x00 ; '.'
000000000020ac68         db  0x06 ; '.'
000000000020ac69         db  0x00 ; '.'
000000000020ac6a         db  0x00 ; '.'
000000000020ac6b         db  0x00 ; '.'
000000000020ac6c         db  0x00 ; '.'
000000000020ac6d         db  0x00 ; '.'
000000000020ac6e         db  0x00 ; '.'
000000000020ac6f         db  0x00 ; '.'
000000000020ac70         db  0xd8 ; '.'
000000000020ac71         db  0x02 ; '.'
000000000020ac72         db  0x00 ; '.'
000000000020ac73         db  0x00 ; '.'
000000000020ac74         db  0x00 ; '.'
000000000020ac75         db  0x00 ; '.'
000000000020ac76         db  0x00 ; '.'
000000000020ac77         db  0x00 ; '.'
000000000020ac78         db  0x0a ; '.'
000000000020ac79         db  0x00 ; '.'
000000000020ac7a         db  0x00 ; '.'
000000000020ac7b         db  0x00 ; '.'
000000000020ac7c         db  0x00 ; '.'
000000000020ac7d         db  0x00 ; '.'
000000000020ac7e         db  0x00 ; '.'
000000000020ac7f         db  0x00 ; '.'
000000000020ac80         db  0x3d ; '='
000000000020ac81         db  0x03 ; '.'
000000000020ac82         db  0x00 ; '.'
000000000020ac83         db  0x00 ; '.'
000000000020ac84         db  0x00 ; '.'
000000000020ac85         db  0x00 ; '.'
000000000020ac86         db  0x00 ; '.'
000000000020ac87         db  0x00 ; '.'
000000000020ac88         db  0x0b ; '.'
000000000020ac89         db  0x00 ; '.'
000000000020ac8a         db  0x00 ; '.'
000000000020ac8b         db  0x00 ; '.'
000000000020ac8c         db  0x00 ; '.'
000000000020ac8d         db  0x00 ; '.'
000000000020ac8e         db  0x00 ; '.'
000000000020ac8f         db  0x00 ; '.'
000000000020ac90         db  0x18 ; '.'
000000000020ac91         db  0x00 ; '.'
000000000020ac92         db  0x00 ; '.'
000000000020ac93         db  0x00 ; '.'
000000000020ac94         db  0x00 ; '.'
000000000020ac95         db  0x00 ; '.'
000000000020ac96         db  0x00 ; '.'
000000000020ac97         db  0x00 ; '.'
000000000020ac98         db  0x15 ; '.'
000000000020ac99         db  0x00 ; '.'
000000000020ac9a         db  0x00 ; '.'
000000000020ac9b         db  0x00 ; '.'
000000000020ac9c         db  0x00 ; '.'
000000000020ac9d         db  0x00 ; '.'
000000000020ac9e         db  0x00 ; '.'
000000000020ac9f         db  0x00 ; '.'
000000000020aca0         db  0x00 ; '.'
000000000020aca1         db  0x00 ; '.'
000000000020aca2         db  0x00 ; '.'
000000000020aca3         db  0x00 ; '.'
000000000020aca4         db  0x00 ; '.'
000000000020aca5         db  0x00 ; '.'
000000000020aca6         db  0x00 ; '.'
000000000020aca7         db  0x00 ; '.'
000000000020aca8         db  0x03 ; '.'
000000000020aca9         db  0x00 ; '.'
000000000020acaa         db  0x00 ; '.'
000000000020acab         db  0x00 ; '.'
000000000020acac         db  0x00 ; '.'
000000000020acad         db  0x00 ; '.'
000000000020acae         db  0x00 ; '.'
000000000020acaf         db  0x00 ; '.'
000000000020acb0         db  0xc8 ; '.'
000000000020acb1         db  0xad ; '.'
000000000020acb2         db  0x20 ; ' '
000000000020acb3         db  0x00 ; '.'
000000000020acb4         db  0x00 ; '.'
000000000020acb5         db  0x00 ; '.'
000000000020acb6         db  0x00 ; '.'
000000000020acb7         db  0x00 ; '.'
000000000020acb8         db  0x02 ; '.'
000000000020acb9         db  0x00 ; '.'
000000000020acba         db  0x00 ; '.'
000000000020acbb         db  0x00 ; '.'
000000000020acbc         db  0x00 ; '.'
000000000020acbd         db  0x00 ; '.'
000000000020acbe         db  0x00 ; '.'
000000000020acbf         db  0x00 ; '.'
000000000020acc0         db  0xb8 ; '.'
000000000020acc1         db  0x05 ; '.'
000000000020acc2         db  0x00 ; '.'
000000000020acc3         db  0x00 ; '.'
000000000020acc4         db  0x00 ; '.'
000000000020acc5         db  0x00 ; '.'
000000000020acc6         db  0x00 ; '.'
000000000020acc7         db  0x00 ; '.'
000000000020acc8         db  0x14 ; '.'
000000000020acc9         db  0x00 ; '.'
000000000020acca         db  0x00 ; '.'
000000000020accb         db  0x00 ; '.'
000000000020accc         db  0x00 ; '.'
000000000020accd         db  0x00 ; '.'
000000000020acce         db  0x00 ; '.'
000000000020accf         db  0x00 ; '.'
000000000020acd0         db  0x07 ; '.'
000000000020acd1         db  0x00 ; '.'
000000000020acd2         db  0x00 ; '.'
000000000020acd3         db  0x00 ; '.'
000000000020acd4         db  0x00 ; '.'
000000000020acd5         db  0x00 ; '.'
000000000020acd6         db  0x00 ; '.'
000000000020acd7         db  0x00 ; '.'
000000000020acd8         db  0x17 ; '.'
000000000020acd9         db  0x00 ; '.'
000000000020acda         db  0x00 ; '.'
000000000020acdb         db  0x00 ; '.'
000000000020acdc         db  0x00 ; '.'
000000000020acdd         db  0x00 ; '.'
000000000020acde         db  0x00 ; '.'
000000000020acdf         db  0x00 ; '.'
000000000020ace0         db  0x08 ; '.'
000000000020ace1         db  0x12 ; '.'
000000000020ace2         db  0x00 ; '.'
000000000020ace3         db  0x00 ; '.'
000000000020ace4         db  0x00 ; '.'
000000000020ace5         db  0x00 ; '.'
000000000020ace6         db  0x00 ; '.'
000000000020ace7         db  0x00 ; '.'
000000000020ace8         db  0x07 ; '.'
000000000020ace9         db  0x00 ; '.'
000000000020acea         db  0x00 ; '.'
000000000020aceb         db  0x00 ; '.'
000000000020acec         db  0x00 ; '.'
000000000020aced         db  0x00 ; '.'
000000000020acee         db  0x00 ; '.'
000000000020acef         db  0x00 ; '.'
000000000020acf0         db  0x00 ; '.'
000000000020acf1         db  0x0e ; '.'
000000000020acf2         db  0x00 ; '.'
000000000020acf3         db  0x00 ; '.'
000000000020acf4         db  0x00 ; '.'
000000000020acf5         db  0x00 ; '.'
000000000020acf6         db  0x00 ; '.'
000000000020acf7         db  0x00 ; '.'
000000000020acf8         db  0x08 ; '.'
000000000020acf9         db  0x00 ; '.'
000000000020acfa         db  0x00 ; '.'
000000000020acfb         db  0x00 ; '.'
000000000020acfc         db  0x00 ; '.'
000000000020acfd         db  0x00 ; '.'
000000000020acfe         db  0x00 ; '.'
000000000020acff         db  0x00 ; '.'
000000000020ad00         db  0x08 ; '.'
000000000020ad01         db  0x04 ; '.'
000000000020ad02         db  0x00 ; '.'
000000000020ad03         db  0x00 ; '.'
000000000020ad04         db  0x00 ; '.'
000000000020ad05         db  0x00 ; '.'
000000000020ad06         db  0x00 ; '.'
000000000020ad07         db  0x00 ; '.'
000000000020ad08         db  0x09 ; '.'
000000000020ad09         db  0x00 ; '.'
000000000020ad0a         db  0x00 ; '.'
000000000020ad0b         db  0x00 ; '.'
000000000020ad0c         db  0x00 ; '.'
000000000020ad0d         db  0x00 ; '.'
000000000020ad0e         db  0x00 ; '.'
000000000020ad0f         db  0x00 ; '.'
000000000020ad10         db  0x18 ; '.'
000000000020ad11         db  0x00 ; '.'
000000000020ad12         db  0x00 ; '.'
000000000020ad13         db  0x00 ; '.'
000000000020ad14         db  0x00 ; '.'
000000000020ad15         db  0x00 ; '.'
000000000020ad16         db  0x00 ; '.'
000000000020ad17         db  0x00 ; '.'
000000000020ad18         db  0x1e ; '.'
000000000020ad19         db  0x00 ; '.'
000000000020ad1a         db  0x00 ; '.'
000000000020ad1b         db  0x00 ; '.'
000000000020ad1c         db  0x00 ; '.'
000000000020ad1d         db  0x00 ; '.'
000000000020ad1e         db  0x00 ; '.'
000000000020ad1f         db  0x00 ; '.'
000000000020ad20         db  0x08 ; '.'
000000000020ad21         db  0x00 ; '.'
000000000020ad22         db  0x00 ; '.'
000000000020ad23         db  0x00 ; '.'
000000000020ad24         db  0x00 ; '.'
000000000020ad25         db  0x00 ; '.'
000000000020ad26         db  0x00 ; '.'
000000000020ad27         db  0x00 ; '.'
000000000020ad28         db  0xfb ; '.'
000000000020ad29         db  0xff ; '.'
000000000020ad2a         db  0xff ; '.'
000000000020ad2b         db  0x6f ; 'o'
000000000020ad2c         db  0x00 ; '.'
000000000020ad2d         db  0x00 ; '.'
000000000020ad2e         db  0x00 ; '.'
000000000020ad2f         db  0x00 ; '.'
000000000020ad30         db  0x01 ; '.'
000000000020ad31         db  0x00 ; '.'
000000000020ad32         db  0x00 ; '.'
000000000020ad33         db  0x08 ; '.'
000000000020ad34         db  0x00 ; '.'
000000000020ad35         db  0x00 ; '.'
000000000020ad36         db  0x00 ; '.'
000000000020ad37         db  0x00 ; '.'
000000000020ad38         db  0xfe ; '.'
000000000020ad39         db  0xff ; '.'
000000000020ad3a         db  0xff ; '.'
000000000020ad3b         db  0x6f ; 'o'
000000000020ad3c         db  0x00 ; '.'
000000000020ad3d         db  0x00 ; '.'
000000000020ad3e         db  0x00 ; '.'
000000000020ad3f         db  0x00 ; '.'
000000000020ad40         db  0xa0 ; '.'
000000000020ad41         db  0x0d ; '.'
000000000020ad42         db  0x00 ; '.'
000000000020ad43         db  0x00 ; '.'
000000000020ad44         db  0x00 ; '.'
000000000020ad45         db  0x00 ; '.'
000000000020ad46         db  0x00 ; '.'
000000000020ad47         db  0x00 ; '.'
000000000020ad48         db  0xff ; '.'
000000000020ad49         db  0xff ; '.'
000000000020ad4a         db  0xff ; '.'
000000000020ad4b         db  0x6f ; 'o'
000000000020ad4c         db  0x00 ; '.'
000000000020ad4d         db  0x00 ; '.'
000000000020ad4e         db  0x00 ; '.'
000000000020ad4f         db  0x00 ; '.'
000000000020ad50         db  0x01 ; '.'
000000000020ad51         db  0x00 ; '.'
000000000020ad52         db  0x00 ; '.'
000000000020ad53         db  0x00 ; '.'
000000000020ad54         db  0x00 ; '.'
000000000020ad55         db  0x00 ; '.'
000000000020ad56         db  0x00 ; '.'
000000000020ad57         db  0x00 ; '.'
000000000020ad58         db  0xf0 ; '.'
000000000020ad59         db  0xff ; '.'
000000000020ad5a         db  0xff ; '.'
000000000020ad5b         db  0x6f ; 'o'
000000000020ad5c         db  0x00 ; '.'
000000000020ad5d         db  0x00 ; '.'
000000000020ad5e         db  0x00 ; '.'
000000000020ad5f         db  0x00 ; '.'
000000000020ad60         db  0x06 ; '.'
000000000020ad61         db  0x0d ; '.'
000000000020ad62         db  0x00 ; '.'
000000000020ad63         db  0x00 ; '.'
000000000020ad64         db  0x00 ; '.'
000000000020ad65         db  0x00 ; '.'
000000000020ad66         db  0x00 ; '.'
000000000020ad67         db  0x00 ; '.'
000000000020ad68         db  0xf9 ; '.'
000000000020ad69         db  0xff ; '.'
000000000020ad6a         db  0xff ; '.'
000000000020ad6b         db  0x6f ; 'o'
000000000020ad6c         db  0x00 ; '.'
000000000020ad6d         db  0x00 ; '.'
000000000020ad6e         db  0x00 ; '.'
000000000020ad6f         db  0x00 ; '.'
000000000020ad70         db  0x21 ; '!'
000000000020ad71         db  0x00 ; '.'
000000000020ad72         db  0x00 ; '.'
000000000020ad73         db  0x00 ; '.'
000000000020ad74         db  0x00 ; '.'
000000000020ad75         db  0x00 ; '.'
000000000020ad76         db  0x00 ; '.'
000000000020ad77         db  0x00 ; '.'
000000000020ad78         db  0x00 ; '.'
000000000020ad79         db  0x00 ; '.'
000000000020ad7a         db  0x00 ; '.'
000000000020ad7b         db  0x00 ; '.'
000000000020ad7c         db  0x00 ; '.'
000000000020ad7d         db  0x00 ; '.'
000000000020ad7e         db  0x00 ; '.'
000000000020ad7f         db  0x00 ; '.'
000000000020ad80         db  0x00 ; '.'
000000000020ad81         db  0x00 ; '.'
000000000020ad82         db  0x00 ; '.'
000000000020ad83         db  0x00 ; '.'
000000000020ad84         db  0x00 ; '.'
000000000020ad85         db  0x00 ; '.'
000000000020ad86         db  0x00 ; '.'
000000000020ad87         db  0x00 ; '.'
000000000020ad88         db  0x00 ; '.'
000000000020ad89         db  0x00 ; '.'
000000000020ad8a         db  0x00 ; '.'
000000000020ad8b         db  0x00 ; '.'
000000000020ad8c         db  0x00 ; '.'
000000000020ad8d         db  0x00 ; '.'
000000000020ad8e         db  0x00 ; '.'
000000000020ad8f         db  0x00 ; '.'
000000000020ad90         db  0x00 ; '.'
000000000020ad91         db  0x00 ; '.'
000000000020ad92         db  0x00 ; '.'
000000000020ad93         db  0x00 ; '.'
000000000020ad94         db  0x00 ; '.'
000000000020ad95         db  0x00 ; '.'
000000000020ad96         db  0x00 ; '.'
000000000020ad97         db  0x00 ; '.'
000000000020ad98         db  0x00 ; '.'
000000000020ad99         db  0x00 ; '.'
000000000020ad9a         db  0x00 ; '.'
000000000020ad9b         db  0x00 ; '.'
000000000020ad9c         db  0x00 ; '.'
000000000020ad9d         db  0x00 ; '.'
000000000020ad9e         db  0x00 ; '.'
000000000020ad9f         db  0x00 ; '.'
000000000020ada0         db  0x00 ; '.'
000000000020ada1         db  0x00 ; '.'
000000000020ada2         db  0x00 ; '.'
000000000020ada3         db  0x00 ; '.'
000000000020ada4         db  0x00 ; '.'
000000000020ada5         db  0x00 ; '.'
000000000020ada6         db  0x00 ; '.'
000000000020ada7         db  0x00 ; '.'
000000000020ada8         db  0x00 ; '.'
000000000020ada9         db  0x00 ; '.'
000000000020adaa         db  0x00 ; '.'
000000000020adab         db  0x00 ; '.'
000000000020adac         db  0x00 ; '.'
000000000020adad         db  0x00 ; '.'
000000000020adae         db  0x00 ; '.'
000000000020adaf         db  0x00 ; '.'
000000000020adb0         db  0x00 ; '.'
000000000020adb1         db  0x00 ; '.'
000000000020adb2         db  0x00 ; '.'
000000000020adb3         db  0x00 ; '.'
000000000020adb4         db  0x00 ; '.'
000000000020adb5         db  0x00 ; '.'
000000000020adb6         db  0x00 ; '.'
000000000020adb7         db  0x00 ; '.'
000000000020adb8         db  0x00 ; '.'
000000000020adb9         db  0x00 ; '.'
000000000020adba         db  0x00 ; '.'
000000000020adbb         db  0x00 ; '.'
000000000020adbc         db  0x00 ; '.'
000000000020adbd         db  0x00 ; '.'
000000000020adbe         db  0x00 ; '.'
000000000020adbf         db  0x00 ; '.'
000000000020adc0         db  0x00 ; '.'
000000000020adc1         db  0x00 ; '.'
000000000020adc2         db  0x00 ; '.'
000000000020adc3         db  0x00 ; '.'
000000000020adc4         db  0x00 ; '.'
000000000020adc5         db  0x00 ; '.'
000000000020adc6         db  0x00 ; '.'
000000000020adc7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20adc8; 0x20aff0[ (552 bytes)
        ; File offset : [44488; 45040[ (552 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020adc8         db  0xd8 ; '.'
000000000020adc9         db  0xab ; '.'
000000000020adca         db  0x20 ; ' '
000000000020adcb         db  0x00 ; '.'
000000000020adcc         db  0x00 ; '.'
000000000020adcd         db  0x00 ; '.'
000000000020adce         db  0x00 ; '.'
000000000020adcf         db  0x00 ; '.'
                     qword_20add0:
000000000020add0         dq         0x0000000000000000                          ; DATA XREF=0x17e0
000000000020add8         db  0x00 ; '.'                                         ; DATA XREF=0x17e6
000000000020add9         db  0x00 ; '.'
000000000020adda         db  0x00 ; '.'
000000000020addb         db  0x00 ; '.'
000000000020addc         db  0x00 ; '.'
000000000020addd         db  0x00 ; '.'
000000000020adde         db  0x00 ; '.'
000000000020addf         db  0x00 ; '.'
                     utmpxname@GOT:        // utmpxname
000000000020ade0         dq         0x000000000020b300                          ; DATA XREF=j_utmpxname
                     __snprintf_chk@GOT:        // __snprintf_chk
000000000020ade8         dq         0x000000000020b308                          ; DATA XREF=j___snprintf_chk
                     free@GOT:        // free
000000000020adf0         dq         0x000000000020b310                          ; DATA XREF=j_free
                     localtime@GOT:        // localtime
000000000020adf8         dq         0x000000000020b318                          ; DATA XREF=j_localtime
                     abort@GOT:        // abort
000000000020ae00         dq         0x000000000020b320                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ae08         dq         0x000000000020b328                          ; DATA XREF=j___errno_location
                     strncpy@GOT:        // strncpy
000000000020ae10         dq         0x000000000020b330                          ; DATA XREF=j_strncpy
                     strncmp@GOT:        // strncmp
000000000020ae18         dq         0x000000000020b338                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020ae20         dq         0x000000000020b348                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000020ae28         dq         0x000000000020b350                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000020ae30         dq         0x000000000020b358                          ; DATA XREF=j___fpending
                     puts@GOT:        // puts
000000000020ae38         dq         0x000000000020b360                          ; DATA XREF=j_puts
                     textdomain@GOT:        // textdomain
000000000020ae40         dq         0x000000000020b368                          ; DATA XREF=j_textdomain
                     endutxent@GOT:        // endutxent
000000000020ae48         dq         0x000000000020b370                          ; DATA XREF=j_endutxent
                     fclose@GOT:        // fclose
000000000020ae50         dq         0x000000000020b378                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020ae58         dq         0x000000000020b380                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020ae60         dq         0x000000000020b388                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020ae68         dq         0x000000000020b390                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020ae70         dq         0x000000000020b398                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020ae78         dq         0x000000000020b3a0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020ae80         dq         0x000000000020b3a8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020ae88         dq         0x000000000020b3b0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020ae90         dq         0x000000000020b3b8                          ; DATA XREF=j_strchr
                     gai_strerror@GOT:        // gai_strerror
000000000020ae98         dq         0x000000000020b3c0                          ; DATA XREF=j_gai_strerror
                     strrchr@GOT:        // strrchr
000000000020aea0         dq         0x000000000020b3c8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020aea8         dq         0x000000000020b3d0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020aeb0         dq         0x000000000020b3d8                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020aeb8         dq         0x000000000020b3e0                          ; DATA XREF=j_memset
                     strncat@GOT:        // strncat
000000000020aec0         dq         0x000000000020b3e8                          ; DATA XREF=j_strncat
                     memcmp@GOT:        // memcmp
000000000020aec8         dq         0x000000000020b3f8                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020aed0         dq         0x000000000020b400                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020aed8         dq         0x000000000020b408                          ; DATA XREF=j_calloc
                     setutxent@GOT:        // setutxent
000000000020aee0         dq         0x000000000020b410                          ; DATA XREF=j_setutxent
                     memcpy@GOT:        // memcpy
000000000020aee8         dq         0x000000000020b420                          ; DATA XREF=j_memcpy
                     kill@GOT:        // kill
000000000020aef0         dq         0x000000000020b428                          ; DATA XREF=j_kill
                     time@GOT:        // time
000000000020aef8         dq         0x000000000020b430                          ; DATA XREF=j_time
                     fileno@GOT:        // fileno
000000000020af00         dq         0x000000000020b438                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020af08         dq         0x000000000020b440                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
000000000020af10         dq         0x000000000020b448                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020af18         dq         0x000000000020b450                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020af20         dq         0x000000000020b458                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
000000000020af28         dq         0x000000000020b460                          ; DATA XREF=j___freading
                     ttyname@GOT:        // ttyname
000000000020af30         dq         0x000000000020b468                          ; DATA XREF=j_ttyname
                     realloc@GOT:        // realloc
000000000020af38         dq         0x000000000020b470                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020af40         dq         0x000000000020b478                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020af48         dq         0x000000000020b480                          ; DATA XREF=j___printf_chk
                     strftime@GOT:        // strftime
000000000020af50         dq         0x000000000020b488                          ; DATA XREF=j_strftime
                     getutxent@GOT:        // getutxent
000000000020af58         dq         0x000000000020b490                          ; DATA XREF=j_getutxent
                     error@GOT:        // error
000000000020af60         dq         0x000000000020b498                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
000000000020af68         dq         0x000000000020b4a0                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020af70         dq         0x000000000020b4a8                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020af78         dq         0x000000000020b4b0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020af80         dq         0x000000000020b4b8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020af88         dq         0x000000000020b4c0                          ; DATA XREF=j___fprintf_chk
                     getaddrinfo@GOT:        // getaddrinfo
000000000020af90         dq         0x000000000020b4d0                          ; DATA XREF=j_getaddrinfo
                     strdup@GOT:        // strdup
000000000020af98         dq         0x000000000020b4d8                          ; DATA XREF=j_strdup
                     mbsinit@GOT:        // mbsinit
000000000020afa0         dq         0x000000000020b4e0                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020afa8         dq         0x000000000020b4e8                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020afb0         dq         0x000000000020b4f8                          ; DATA XREF=j___ctype_b_loc
                     freeaddrinfo@GOT:        // freeaddrinfo
000000000020afb8         dq         0x000000000020b500                          ; DATA XREF=j_freeaddrinfo
                     __sprintf_chk@GOT:        // __sprintf_chk
000000000020afc0         dq         0x000000000020b508                          ; DATA XREF=j___sprintf_chk
                     qword_20afc8:
000000000020afc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020afd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020afd1         db  0x00 ; '.'
000000000020afd2         db  0x00 ; '.'
000000000020afd3         db  0x00 ; '.'
000000000020afd4         db  0x00 ; '.'
000000000020afd5         db  0x00 ; '.'
000000000020afd6         db  0x00 ; '.'
000000000020afd7         db  0x00 ; '.'
                     qword_20afd8:
000000000020afd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20afe0:
000000000020afe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20afe8:
000000000020afe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20afe8, __do_global_dtors_aux+9
000000000020aff0         db  0x00 ; '.'
000000000020aff1         db  0x00 ; '.'
000000000020aff2         db  0x00 ; '.'
000000000020aff3         db  0x00 ; '.'
000000000020aff4         db  0x00 ; '.'
000000000020aff5         db  0x00 ; '.'
000000000020aff6         db  0x00 ; '.'
000000000020aff7         db  0x00 ; '.'
000000000020aff8         db  0x00 ; '.'
000000000020aff9         db  0x00 ; '.'
000000000020affa         db  0x00 ; '.'
000000000020affb         db  0x00 ; '.'
000000000020affc         db  0x00 ; '.'
000000000020affd         db  0x00 ; '.'
000000000020affe         db  0x00 ; '.'
000000000020afff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20b000; 0x20b0a0[ (160 bytes)
        ; File offset : [45056; 45216[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020b000         db  0x00 ; '.'
000000000020b001         db  0x00 ; '.'
000000000020b002         db  0x00 ; '.'
000000000020b003         db  0x00 ; '.'
000000000020b004         db  0x00 ; '.'
000000000020b005         db  0x00 ; '.'
000000000020b006         db  0x00 ; '.'
000000000020b007         db  0x00 ; '.'
                     __dso_handle:
000000000020b008         dq         0x000000000020b008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     now.7699:
000000000020b010         dq         0x8000000000000000                          ; DATA XREF=print_user+610, print_user+628, print_user+1152
                     mesg.7721:
000000000020b018         db  0x20 ; ' '                                         ; DATA XREF=print_line+235
                     byte_20b019:
000000000020b019         db         0x78                                        ; DATA XREF=print_line+23
000000000020b01a         db  0x00 ; '.'
000000000020b01b         db  0x00 ; '.'
000000000020b01c         db  0x00 ; '.'
000000000020b01d         db  0x00 ; '.'
000000000020b01e         db  0x00 ; '.'
000000000020b01f         db  0x00 ; '.'
                     Version:
000000000020b020         dq         0x0000000000008ccc                          ; "8.31", DATA XREF=main+343
                     exit_failure:
000000000020b028         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020b02c         db  0x00 ; '.'
000000000020b02d         db  0x00 ; '.'
000000000020b02e         db  0x00 ; '.'
000000000020b02f         db  0x00 ; '.'
000000000020b030         db  0x00 ; '.'
000000000020b031         db  0x00 ; '.'
000000000020b032         db  0x00 ; '.'
000000000020b033         db  0x00 ; '.'
000000000020b034         db  0x00 ; '.'
000000000020b035         db  0x00 ; '.'
000000000020b036         db  0x00 ; '.'
000000000020b037         db  0x00 ; '.'
000000000020b038         db  0x00 ; '.'
000000000020b039         db  0x00 ; '.'
000000000020b03a         db  0x00 ; '.'
000000000020b03b         db  0x00 ; '.'
000000000020b03c         db  0x00 ; '.'
000000000020b03d         db  0x00 ; '.'
000000000020b03e         db  0x00 ; '.'
000000000020b03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020b040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020b041         db  0x00 ; '.'
000000000020b042         db  0x00 ; '.'
000000000020b043         db  0x00 ; '.'
000000000020b044         db  0x00 ; '.'
000000000020b045         db  0x00 ; '.'
000000000020b046         db  0x00 ; '.'
000000000020b047         db  0x00 ; '.'
000000000020b048         db  0x00 ; '.'
000000000020b049         db  0x00 ; '.'
000000000020b04a         db  0x00 ; '.'
000000000020b04b         db  0x00 ; '.'
000000000020b04c         db  0x00 ; '.'
000000000020b04d         db  0x00 ; '.'
000000000020b04e         db  0x00 ; '.'
000000000020b04f         db  0x00 ; '.'
000000000020b050         db  0x00 ; '.'
000000000020b051         db  0x00 ; '.'
000000000020b052         db  0x00 ; '.'
000000000020b053         db  0x00 ; '.'
000000000020b054         db  0x00 ; '.'
000000000020b055         db  0x00 ; '.'
000000000020b056         db  0x00 ; '.'
000000000020b057         db  0x00 ; '.'
000000000020b058         db  0x00 ; '.'
000000000020b059         db  0x00 ; '.'
000000000020b05a         db  0x00 ; '.'
000000000020b05b         db  0x00 ; '.'
000000000020b05c         db  0x00 ; '.'
000000000020b05d         db  0x00 ; '.'
000000000020b05e         db  0x00 ; '.'
000000000020b05f         db  0x00 ; '.'
000000000020b060         db  0x00 ; '.'
000000000020b061         db  0x00 ; '.'
000000000020b062         db  0x00 ; '.'
000000000020b063         db  0x00 ; '.'
000000000020b064         db  0x00 ; '.'
000000000020b065         db  0x00 ; '.'
000000000020b066         db  0x00 ; '.'
000000000020b067         db  0x00 ; '.'
000000000020b068         db  0x00 ; '.'
000000000020b069         db  0x00 ; '.'
000000000020b06a         db  0x00 ; '.'
000000000020b06b         db  0x00 ; '.'
000000000020b06c         db  0x00 ; '.'
000000000020b06d         db  0x00 ; '.'
000000000020b06e         db  0x00 ; '.'
000000000020b06f         db  0x00 ; '.'
000000000020b070         db  0x00 ; '.'
000000000020b071         db  0x00 ; '.'
000000000020b072         db  0x00 ; '.'
000000000020b073         db  0x00 ; '.'
000000000020b074         db  0x00 ; '.'
000000000020b075         db  0x00 ; '.'
000000000020b076         db  0x00 ; '.'
000000000020b077         db  0x00 ; '.'
                     nslots:
000000000020b078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020b07c         db  0x00 ; '.'
000000000020b07d         db  0x00 ; '.'
000000000020b07e         db  0x00 ; '.'
000000000020b07f         db  0x00 ; '.'
                     slotvec:
000000000020b080         dq         0x000000000020b090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020b088         db  0x00 ; '.'
000000000020b089         db  0x00 ; '.'
000000000020b08a         db  0x00 ; '.'
000000000020b08b         db  0x00 ; '.'
000000000020b08c         db  0x00 ; '.'
000000000020b08d         db  0x00 ; '.'
000000000020b08e         db  0x00 ; '.'
000000000020b08f         db  0x00 ; '.'
                     slotvec0:
000000000020b090         dq         1.26481e-321, 1.05861e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20b0a0; 0x20b2f8[ (600 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020b0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020b0a1         db  0x00 ; '.'
000000000020b0a2         db  0x00 ; '.'
000000000020b0a3         db  0x00 ; '.'
000000000020b0a4         db  0x00 ; '.'
000000000020b0a5         db  0x00 ; '.'
000000000020b0a6         db  0x00 ; '.'
000000000020b0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020b0a8         db  0x00 ; '.'                                         ; DATA XREF=main+336, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+347, usage+384, usage+1024, close_stdout+6
000000000020b0a9         db  0x00 ; '.'
000000000020b0aa         db  0x00 ; '.'
000000000020b0ab         db  0x00 ; '.'
000000000020b0ac         db  0x00 ; '.'
000000000020b0ad         db  0x00 ; '.'
000000000020b0ae         db  0x00 ; '.'
000000000020b0af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020b0b0         db  0x00 ; '.'                                         ; DATA XREF=main+718
000000000020b0b1         db  0x00 ; '.'
000000000020b0b2         db  0x00 ; '.'
000000000020b0b3         db  0x00 ; '.'
000000000020b0b4         db  0x00 ; '.'
000000000020b0b5         db  0x00 ; '.'
000000000020b0b6         db  0x00 ; '.'
000000000020b0b7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020b0b8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020b0b9         db  0x00 ; '.'
000000000020b0ba         db  0x00 ; '.'
000000000020b0bb         db  0x00 ; '.'
000000000020b0bc         db  0x00 ; '.'
000000000020b0bd         db  0x00 ; '.'
000000000020b0be         db  0x00 ; '.'
000000000020b0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020b0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020b0c1         db  0x00 ; '.'
000000000020b0c2         db  0x00 ; '.'
000000000020b0c3         db  0x00 ; '.'
000000000020b0c4         db  0x00 ; '.'
000000000020b0c5         db  0x00 ; '.'
000000000020b0c6         db  0x00 ; '.'
000000000020b0c7         db  0x00 ; '.'
                     completed.7697:
000000000020b0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020b0c9         db  0x00 ; '.'
000000000020b0ca         db  0x00 ; '.'
000000000020b0cb         db  0x00 ; '.'
000000000020b0cc         db  0x00 ; '.'
000000000020b0cd         db  0x00 ; '.'
000000000020b0ce         db  0x00 ; '.'
000000000020b0cf         db  0x00 ; '.'
000000000020b0d0         db  0x00 ; '.'
000000000020b0d1         db  0x00 ; '.'
000000000020b0d2         db  0x00 ; '.'
000000000020b0d3         db  0x00 ; '.'
000000000020b0d4         db  0x00 ; '.'
000000000020b0d5         db  0x00 ; '.'
000000000020b0d6         db  0x00 ; '.'
000000000020b0d7         db  0x00 ; '.'
000000000020b0d8         db  0x00 ; '.'
000000000020b0d9         db  0x00 ; '.'
000000000020b0da         db  0x00 ; '.'
000000000020b0db         db  0x00 ; '.'
000000000020b0dc         db  0x00 ; '.'
000000000020b0dd         db  0x00 ; '.'
000000000020b0de         db  0x00 ; '.'
000000000020b0df         db  0x00 ; '.'
                     exitstr.7761:
000000000020b0e0         db  0x00 ; '.'                                         ; DATA XREF=who+1488, who+1575, who+1617, who+1930
000000000020b0e1         db  0x00 ; '.'
000000000020b0e2         db  0x00 ; '.'
000000000020b0e3         db  0x00 ; '.'
000000000020b0e4         db  0x00 ; '.'
000000000020b0e5         db  0x00 ; '.'
000000000020b0e6         db  0x00 ; '.'
000000000020b0e7         db  0x00 ; '.'
                     comment.7781:
000000000020b0e8         db  0x00 ; '.'                                         ; DATA XREF=who+679, who+734, who+783, who+1811
000000000020b0e9         db  0x00 ; '.'
000000000020b0ea         db  0x00 ; '.'
000000000020b0eb         db  0x00 ; '.'
000000000020b0ec         db  0x00 ; '.'
000000000020b0ed         db  0x00 ; '.'
000000000020b0ee         db  0x00 ; '.'
000000000020b0ef         db  0x00 ; '.'
                     runlevline.7780:
000000000020b0f0         db  0x00 ; '.'                                         ; DATA XREF=who+603, who+642, who+803, who+1758
000000000020b0f1         db  0x00 ; '.'
000000000020b0f2         db  0x00 ; '.'
000000000020b0f3         db  0x00 ; '.'
000000000020b0f4         db  0x00 ; '.'
000000000020b0f5         db  0x00 ; '.'
000000000020b0f6         db  0x00 ; '.'
000000000020b0f7         db  0x00 ; '.'
000000000020b0f8         db  0x00 ; '.'
000000000020b0f9         db  0x00 ; '.'
000000000020b0fa         db  0x00 ; '.'
000000000020b0fb         db  0x00 ; '.'
000000000020b0fc         db  0x00 ; '.'
000000000020b0fd         db  0x00 ; '.'
000000000020b0fe         db  0x00 ; '.'
000000000020b0ff         db  0x00 ; '.'
                     buf.7706:
000000000020b100         db  0x00 ; '.'                                         ; DATA XREF=time_string.isra.1+47, time_string.isra.1+67, time_string.isra.1+100
000000000020b101         db  0x00 ; '.'
000000000020b102         db  0x00 ; '.'
000000000020b103         db  0x00 ; '.'
000000000020b104         db  0x00 ; '.'
000000000020b105         db  0x00 ; '.'
000000000020b106         db  0x00 ; '.'
000000000020b107         db  0x00 ; '.'
000000000020b108         db  0x00 ; '.'
000000000020b109         db  0x00 ; '.'
000000000020b10a         db  0x00 ; '.'
000000000020b10b         db  0x00 ; '.'
000000000020b10c         db  0x00 ; '.'
000000000020b10d         db  0x00 ; '.'
000000000020b10e         db  0x00 ; '.'
000000000020b10f         db  0x00 ; '.'
000000000020b110         db  0x00 ; '.'
000000000020b111         db  0x00 ; '.'
000000000020b112         db  0x00 ; '.'
000000000020b113         db  0x00 ; '.'
000000000020b114         db  0x00 ; '.'
000000000020b115         db  0x00 ; '.'
000000000020b116         db  0x00 ; '.'
000000000020b117         db  0x00 ; '.'
000000000020b118         db  0x00 ; '.'
000000000020b119         db  0x00 ; '.'
000000000020b11a         db  0x00 ; '.'
000000000020b11b         db  0x00 ; '.'
000000000020b11c         db  0x00 ; '.'
000000000020b11d         db  0x00 ; '.'
000000000020b11e         db  0x00 ; '.'
000000000020b11f         db  0x00 ; '.'
000000000020b120         db  0x00 ; '.'
                     idle_hhmm.7701:
000000000020b121         db  0x00 ; '.'                                         ; DATA XREF=print_user+1250, print_user+1323
000000000020b122         db  0x00 ; '.'
000000000020b123         db  0x00 ; '.'
000000000020b124         db  0x00 ; '.'
000000000020b125         db  0x00 ; '.'
000000000020b126         db  0x00 ; '.'
000000000020b127         db  0x00 ; '.'
                     hoststr.7742:
000000000020b128         db  0x00 ; '.'                                         ; DATA XREF=print_user+374, print_user+484, print_user+747, print_user+936, print_user+1004, print_user+1140, print_user+1205, print_user+1366
000000000020b129         db  0x00 ; '.'
000000000020b12a         db  0x00 ; '.'
000000000020b12b         db  0x00 ; '.'
000000000020b12c         db  0x00 ; '.'
000000000020b12d         db  0x00 ; '.'
000000000020b12e         db  0x00 ; '.'
000000000020b12f         db  0x00 ; '.'
                     hostlen.7743:
000000000020b130         db  0x00 ; '.'                                         ; DATA XREF=print_user+367, print_user+739, print_user+907, print_user+1039, print_user+1107, print_user+1172, print_user+1359
000000000020b131         db  0x00 ; '.'
000000000020b132         db  0x00 ; '.'
000000000020b133         db  0x00 ; '.'
000000000020b134         db  0x00 ; '.'
000000000020b135         db  0x00 ; '.'
000000000020b136         db  0x00 ; '.'
000000000020b137         db  0x00 ; '.'
                     time_format_width:
000000000020b138         db  0x00 ; '.'                                         ; DATA XREF=main+701, main+770, print_line+279
000000000020b139         db  0x00 ; '.'
000000000020b13a         db  0x00 ; '.'
000000000020b13b         db  0x00 ; '.'
000000000020b13c         db  0x00 ; '.'
000000000020b13d         db  0x00 ; '.'
000000000020b13e         db  0x00 ; '.'
000000000020b13f         db  0x00 ; '.'
                     time_format:
000000000020b140         db  0x00 ; '.'                                         ; DATA XREF=main+711, main+780, time_string.isra.1+40
000000000020b141         db  0x00 ; '.'
000000000020b142         db  0x00 ; '.'
000000000020b143         db  0x00 ; '.'
000000000020b144         db  0x00 ; '.'
000000000020b145         db  0x00 ; '.'
000000000020b146         db  0x00 ; '.'
000000000020b147         db  0x00 ; '.'
                     my_line_only:
000000000020b148         db  0x00 ; '.'                                         ; DATA XREF=main+434, main+794, who+94, who+160
                     need_users:
000000000020b149         db  0x00 ; '.'                                         ; DATA XREF=main+473, main+578, main+650, who+195
                     need_runlevel:
000000000020b14a         db  0x00 ; '.'                                         ; DATA XREF=main+564, main+611, who+227
                     need_clockchange:
000000000020b14b         db  0x00 ; '.'                                         ; DATA XREF=main+458, main+571, who+265
                     need_initspawn:
000000000020b14c         db  0x00 ; '.'                                         ; DATA XREF=main+276, main+557, who+284
                     need_login:
000000000020b14d         db  0x00 ; '.'                                         ; DATA XREF=main+232, main+550, who+303
                     need_deadprocs:
000000000020b14e         db  0x00 ; '.'                                         ; DATA XREF=main+495, main+540, who+322
                     need_boottime:
000000000020b14f         db  0x00 ; '.'                                         ; DATA XREF=main+419, main+533, who+246
                     include_exit:
000000000020b150         db  0x00 ; '.'                                         ; DATA XREF=main+512, main+599, main+664, print_line+163, print_line+209
                     include_mesg:
000000000020b151         db  0x00 ; '.'                                         ; DATA XREF=main+446, main+585, print_line+228
                     include_heading:
000000000020b152         db  0x00 ; '.'                                         ; DATA XREF=main+395, who+81
                     include_idle:
000000000020b153         db  0x00 ; '.'                                         ; DATA XREF=main+239, main+480, main+502, main+592, main+618, print_line+102
                     short_output:
000000000020b154         db  0x00 ; '.'                                         ; DATA XREF=main+407, main+657, main+673, print_line+29, print_line+508
                     short_list:
000000000020b155         db  0x00 ; '.'                                         ; DATA XREF=main+633, who+58
                     do_lookup:
000000000020b156         db  0x00 ; '.'                                         ; DATA XREF=main+179, print_user+864, print_user+962
000000000020b157         db  0x00 ; '.'
000000000020b158         db  0x00 ; '.'
000000000020b159         db  0x00 ; '.'
000000000020b15a         db  0x00 ; '.'
000000000020b15b         db  0x00 ; '.'
000000000020b15c         db  0x00 ; '.'
000000000020b15d         db  0x00 ; '.'
000000000020b15e         db  0x00 ; '.'
000000000020b15f         db  0x00 ; '.'
                     hints.3317:
000000000020b160         db  0x00 ; '.'                                         ; DATA XREF=canon_host_r+3, canon_host_r+23
000000000020b161         db  0x00 ; '.'
000000000020b162         db  0x00 ; '.'
000000000020b163         db  0x00 ; '.'
000000000020b164         db  0x00 ; '.'
000000000020b165         db  0x00 ; '.'
000000000020b166         db  0x00 ; '.'
000000000020b167         db  0x00 ; '.'
000000000020b168         db  0x00 ; '.'
000000000020b169         db  0x00 ; '.'
000000000020b16a         db  0x00 ; '.'
000000000020b16b         db  0x00 ; '.'
000000000020b16c         db  0x00 ; '.'
000000000020b16d         db  0x00 ; '.'
000000000020b16e         db  0x00 ; '.'
000000000020b16f         db  0x00 ; '.'
000000000020b170         db  0x00 ; '.'
000000000020b171         db  0x00 ; '.'
000000000020b172         db  0x00 ; '.'
000000000020b173         db  0x00 ; '.'
000000000020b174         db  0x00 ; '.'
000000000020b175         db  0x00 ; '.'
000000000020b176         db  0x00 ; '.'
000000000020b177         db  0x00 ; '.'
000000000020b178         db  0x00 ; '.'
000000000020b179         db  0x00 ; '.'
000000000020b17a         db  0x00 ; '.'
000000000020b17b         db  0x00 ; '.'
000000000020b17c         db  0x00 ; '.'
000000000020b17d         db  0x00 ; '.'
000000000020b17e         db  0x00 ; '.'
000000000020b17f         db  0x00 ; '.'
000000000020b180         db  0x00 ; '.'
000000000020b181         db  0x00 ; '.'
000000000020b182         db  0x00 ; '.'
000000000020b183         db  0x00 ; '.'
000000000020b184         db  0x00 ; '.'
000000000020b185         db  0x00 ; '.'
000000000020b186         db  0x00 ; '.'
000000000020b187         db  0x00 ; '.'
000000000020b188         db  0x00 ; '.'
000000000020b189         db  0x00 ; '.'
000000000020b18a         db  0x00 ; '.'
000000000020b18b         db  0x00 ; '.'
000000000020b18c         db  0x00 ; '.'
000000000020b18d         db  0x00 ; '.'
000000000020b18e         db  0x00 ; '.'
000000000020b18f         db  0x00 ; '.'
                     last_cherror:
000000000020b190         db  0x00 ; '.'                                         ; DATA XREF=canon_host, ch_strerror
000000000020b191         db  0x00 ; '.'
000000000020b192         db  0x00 ; '.'
000000000020b193         db  0x00 ; '.'
000000000020b194         db  0x00 ; '.'
000000000020b195         db  0x00 ; '.'
000000000020b196         db  0x00 ; '.'
000000000020b197         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020b198         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020b199         db  0x00 ; '.'
000000000020b19a         db  0x00 ; '.'
000000000020b19b         db  0x00 ; '.'
000000000020b19c         db  0x00 ; '.'
000000000020b19d         db  0x00 ; '.'
000000000020b19e         db  0x00 ; '.'
000000000020b19f         db  0x00 ; '.'
                     file_name:
000000000020b1a0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020b1a1         db  0x00 ; '.'
000000000020b1a2         db  0x00 ; '.'
000000000020b1a3         db  0x00 ; '.'
000000000020b1a4         db  0x00 ; '.'
000000000020b1a5         db  0x00 ; '.'
000000000020b1a6         db  0x00 ; '.'
000000000020b1a7         db  0x00 ; '.'
                     program_name:
000000000020b1a8         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020b1a9         db  0x00 ; '.'
000000000020b1aa         db  0x00 ; '.'
000000000020b1ab         db  0x00 ; '.'
000000000020b1ac         db  0x00 ; '.'
000000000020b1ad         db  0x00 ; '.'
000000000020b1ae         db  0x00 ; '.'
000000000020b1af         db  0x00 ; '.'
000000000020b1b0         db  0x00 ; '.'
000000000020b1b1         db  0x00 ; '.'
000000000020b1b2         db  0x00 ; '.'
000000000020b1b3         db  0x00 ; '.'
000000000020b1b4         db  0x00 ; '.'
000000000020b1b5         db  0x00 ; '.'
000000000020b1b6         db  0x00 ; '.'
000000000020b1b7         db  0x00 ; '.'
000000000020b1b8         db  0x00 ; '.'
000000000020b1b9         db  0x00 ; '.'
000000000020b1ba         db  0x00 ; '.'
000000000020b1bb         db  0x00 ; '.'
000000000020b1bc         db  0x00 ; '.'
000000000020b1bd         db  0x00 ; '.'
000000000020b1be         db  0x00 ; '.'
000000000020b1bf         db  0x00 ; '.'
                     slot0:
000000000020b1c0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020b1c1         db  0x00 ; '.'
000000000020b1c2         db  0x00 ; '.'
000000000020b1c3         db  0x00 ; '.'
000000000020b1c4         db  0x00 ; '.'
000000000020b1c5         db  0x00 ; '.'
000000000020b1c6         db  0x00 ; '.'
000000000020b1c7         db  0x00 ; '.'
000000000020b1c8         db  0x00 ; '.'
000000000020b1c9         db  0x00 ; '.'
000000000020b1ca         db  0x00 ; '.'
000000000020b1cb         db  0x00 ; '.'
000000000020b1cc         db  0x00 ; '.'
000000000020b1cd         db  0x00 ; '.'
000000000020b1ce         db  0x00 ; '.'
000000000020b1cf         db  0x00 ; '.'
000000000020b1d0         db  0x00 ; '.'
000000000020b1d1         db  0x00 ; '.'
000000000020b1d2         db  0x00 ; '.'
000000000020b1d3         db  0x00 ; '.'
000000000020b1d4         db  0x00 ; '.'
000000000020b1d5         db  0x00 ; '.'
000000000020b1d6         db  0x00 ; '.'
000000000020b1d7         db  0x00 ; '.'
000000000020b1d8         db  0x00 ; '.'
000000000020b1d9         db  0x00 ; '.'
000000000020b1da         db  0x00 ; '.'
000000000020b1db         db  0x00 ; '.'
000000000020b1dc         db  0x00 ; '.'
000000000020b1dd         db  0x00 ; '.'
000000000020b1de         db  0x00 ; '.'
000000000020b1df         db  0x00 ; '.'
000000000020b1e0         db  0x00 ; '.'
000000000020b1e1         db  0x00 ; '.'
000000000020b1e2         db  0x00 ; '.'
000000000020b1e3         db  0x00 ; '.'
000000000020b1e4         db  0x00 ; '.'
000000000020b1e5         db  0x00 ; '.'
000000000020b1e6         db  0x00 ; '.'
000000000020b1e7         db  0x00 ; '.'
000000000020b1e8         db  0x00 ; '.'
000000000020b1e9         db  0x00 ; '.'
000000000020b1ea         db  0x00 ; '.'
000000000020b1eb         db  0x00 ; '.'
000000000020b1ec         db  0x00 ; '.'
000000000020b1ed         db  0x00 ; '.'
000000000020b1ee         db  0x00 ; '.'
000000000020b1ef         db  0x00 ; '.'
000000000020b1f0         db  0x00 ; '.'
000000000020b1f1         db  0x00 ; '.'
000000000020b1f2         db  0x00 ; '.'
000000000020b1f3         db  0x00 ; '.'
000000000020b1f4         db  0x00 ; '.'
000000000020b1f5         db  0x00 ; '.'
000000000020b1f6         db  0x00 ; '.'
000000000020b1f7         db  0x00 ; '.'
000000000020b1f8         db  0x00 ; '.'
000000000020b1f9         db  0x00 ; '.'
000000000020b1fa         db  0x00 ; '.'
000000000020b1fb         db  0x00 ; '.'
000000000020b1fc         db  0x00 ; '.'
000000000020b1fd         db  0x00 ; '.'
000000000020b1fe         db  0x00 ; '.'
000000000020b1ff         db  0x00 ; '.'
000000000020b200         db  0x00 ; '.'
000000000020b201         db  0x00 ; '.'
000000000020b202         db  0x00 ; '.'
000000000020b203         db  0x00 ; '.'
000000000020b204         db  0x00 ; '.'
000000000020b205         db  0x00 ; '.'
000000000020b206         db  0x00 ; '.'
000000000020b207         db  0x00 ; '.'
000000000020b208         db  0x00 ; '.'
000000000020b209         db  0x00 ; '.'
000000000020b20a         db  0x00 ; '.'
000000000020b20b         db  0x00 ; '.'
000000000020b20c         db  0x00 ; '.'
000000000020b20d         db  0x00 ; '.'
000000000020b20e         db  0x00 ; '.'
000000000020b20f         db  0x00 ; '.'
000000000020b210         db  0x00 ; '.'
000000000020b211         db  0x00 ; '.'
000000000020b212         db  0x00 ; '.'
000000000020b213         db  0x00 ; '.'
000000000020b214         db  0x00 ; '.'
000000000020b215         db  0x00 ; '.'
000000000020b216         db  0x00 ; '.'
000000000020b217         db  0x00 ; '.'
000000000020b218         db  0x00 ; '.'
000000000020b219         db  0x00 ; '.'
000000000020b21a         db  0x00 ; '.'
000000000020b21b         db  0x00 ; '.'
000000000020b21c         db  0x00 ; '.'
000000000020b21d         db  0x00 ; '.'
000000000020b21e         db  0x00 ; '.'
000000000020b21f         db  0x00 ; '.'
000000000020b220         db  0x00 ; '.'
000000000020b221         db  0x00 ; '.'
000000000020b222         db  0x00 ; '.'
000000000020b223         db  0x00 ; '.'
000000000020b224         db  0x00 ; '.'
000000000020b225         db  0x00 ; '.'
000000000020b226         db  0x00 ; '.'
000000000020b227         db  0x00 ; '.'
000000000020b228         db  0x00 ; '.'
000000000020b229         db  0x00 ; '.'
000000000020b22a         db  0x00 ; '.'
000000000020b22b         db  0x00 ; '.'
000000000020b22c         db  0x00 ; '.'
000000000020b22d         db  0x00 ; '.'
000000000020b22e         db  0x00 ; '.'
000000000020b22f         db  0x00 ; '.'
000000000020b230         db  0x00 ; '.'
000000000020b231         db  0x00 ; '.'
000000000020b232         db  0x00 ; '.'
000000000020b233         db  0x00 ; '.'
000000000020b234         db  0x00 ; '.'
000000000020b235         db  0x00 ; '.'
000000000020b236         db  0x00 ; '.'
000000000020b237         db  0x00 ; '.'
000000000020b238         db  0x00 ; '.'
000000000020b239         db  0x00 ; '.'
000000000020b23a         db  0x00 ; '.'
000000000020b23b         db  0x00 ; '.'
000000000020b23c         db  0x00 ; '.'
000000000020b23d         db  0x00 ; '.'
000000000020b23e         db  0x00 ; '.'
000000000020b23f         db  0x00 ; '.'
000000000020b240         db  0x00 ; '.'
000000000020b241         db  0x00 ; '.'
000000000020b242         db  0x00 ; '.'
000000000020b243         db  0x00 ; '.'
000000000020b244         db  0x00 ; '.'
000000000020b245         db  0x00 ; '.'
000000000020b246         db  0x00 ; '.'
000000000020b247         db  0x00 ; '.'
000000000020b248         db  0x00 ; '.'
000000000020b249         db  0x00 ; '.'
000000000020b24a         db  0x00 ; '.'
000000000020b24b         db  0x00 ; '.'
000000000020b24c         db  0x00 ; '.'
000000000020b24d         db  0x00 ; '.'
000000000020b24e         db  0x00 ; '.'
000000000020b24f         db  0x00 ; '.'
000000000020b250         db  0x00 ; '.'
000000000020b251         db  0x00 ; '.'
000000000020b252         db  0x00 ; '.'
000000000020b253         db  0x00 ; '.'
000000000020b254         db  0x00 ; '.'
000000000020b255         db  0x00 ; '.'
000000000020b256         db  0x00 ; '.'
000000000020b257         db  0x00 ; '.'
000000000020b258         db  0x00 ; '.'
000000000020b259         db  0x00 ; '.'
000000000020b25a         db  0x00 ; '.'
000000000020b25b         db  0x00 ; '.'
000000000020b25c         db  0x00 ; '.'
000000000020b25d         db  0x00 ; '.'
000000000020b25e         db  0x00 ; '.'
000000000020b25f         db  0x00 ; '.'
000000000020b260         db  0x00 ; '.'
000000000020b261         db  0x00 ; '.'
000000000020b262         db  0x00 ; '.'
000000000020b263         db  0x00 ; '.'
000000000020b264         db  0x00 ; '.'
000000000020b265         db  0x00 ; '.'
000000000020b266         db  0x00 ; '.'
000000000020b267         db  0x00 ; '.'
000000000020b268         db  0x00 ; '.'
000000000020b269         db  0x00 ; '.'
000000000020b26a         db  0x00 ; '.'
000000000020b26b         db  0x00 ; '.'
000000000020b26c         db  0x00 ; '.'
000000000020b26d         db  0x00 ; '.'
000000000020b26e         db  0x00 ; '.'
000000000020b26f         db  0x00 ; '.'
000000000020b270         db  0x00 ; '.'
000000000020b271         db  0x00 ; '.'
000000000020b272         db  0x00 ; '.'
000000000020b273         db  0x00 ; '.'
000000000020b274         db  0x00 ; '.'
000000000020b275         db  0x00 ; '.'
000000000020b276         db  0x00 ; '.'
000000000020b277         db  0x00 ; '.'
000000000020b278         db  0x00 ; '.'
000000000020b279         db  0x00 ; '.'
000000000020b27a         db  0x00 ; '.'
000000000020b27b         db  0x00 ; '.'
000000000020b27c         db  0x00 ; '.'
000000000020b27d         db  0x00 ; '.'
000000000020b27e         db  0x00 ; '.'
000000000020b27f         db  0x00 ; '.'
000000000020b280         db  0x00 ; '.'
000000000020b281         db  0x00 ; '.'
000000000020b282         db  0x00 ; '.'
000000000020b283         db  0x00 ; '.'
000000000020b284         db  0x00 ; '.'
000000000020b285         db  0x00 ; '.'
000000000020b286         db  0x00 ; '.'
000000000020b287         db  0x00 ; '.'
000000000020b288         db  0x00 ; '.'
000000000020b289         db  0x00 ; '.'
000000000020b28a         db  0x00 ; '.'
000000000020b28b         db  0x00 ; '.'
000000000020b28c         db  0x00 ; '.'
000000000020b28d         db  0x00 ; '.'
000000000020b28e         db  0x00 ; '.'
000000000020b28f         db  0x00 ; '.'
000000000020b290         db  0x00 ; '.'
000000000020b291         db  0x00 ; '.'
000000000020b292         db  0x00 ; '.'
000000000020b293         db  0x00 ; '.'
000000000020b294         db  0x00 ; '.'
000000000020b295         db  0x00 ; '.'
000000000020b296         db  0x00 ; '.'
000000000020b297         db  0x00 ; '.'
000000000020b298         db  0x00 ; '.'
000000000020b299         db  0x00 ; '.'
000000000020b29a         db  0x00 ; '.'
000000000020b29b         db  0x00 ; '.'
000000000020b29c         db  0x00 ; '.'
000000000020b29d         db  0x00 ; '.'
000000000020b29e         db  0x00 ; '.'
000000000020b29f         db  0x00 ; '.'
000000000020b2a0         db  0x00 ; '.'
000000000020b2a1         db  0x00 ; '.'
000000000020b2a2         db  0x00 ; '.'
000000000020b2a3         db  0x00 ; '.'
000000000020b2a4         db  0x00 ; '.'
000000000020b2a5         db  0x00 ; '.'
000000000020b2a6         db  0x00 ; '.'
000000000020b2a7         db  0x00 ; '.'
000000000020b2a8         db  0x00 ; '.'
000000000020b2a9         db  0x00 ; '.'
000000000020b2aa         db  0x00 ; '.'
000000000020b2ab         db  0x00 ; '.'
000000000020b2ac         db  0x00 ; '.'
000000000020b2ad         db  0x00 ; '.'
000000000020b2ae         db  0x00 ; '.'
000000000020b2af         db  0x00 ; '.'
000000000020b2b0         db  0x00 ; '.'
000000000020b2b1         db  0x00 ; '.'
000000000020b2b2         db  0x00 ; '.'
000000000020b2b3         db  0x00 ; '.'
000000000020b2b4         db  0x00 ; '.'
000000000020b2b5         db  0x00 ; '.'
000000000020b2b6         db  0x00 ; '.'
000000000020b2b7         db  0x00 ; '.'
000000000020b2b8         db  0x00 ; '.'
000000000020b2b9         db  0x00 ; '.'
000000000020b2ba         db  0x00 ; '.'
000000000020b2bb         db  0x00 ; '.'
000000000020b2bc         db  0x00 ; '.'
000000000020b2bd         db  0x00 ; '.'
000000000020b2be         db  0x00 ; '.'
000000000020b2bf         db  0x00 ; '.'
                     default_quoting_options:
000000000020b2c0         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020b2c1         db  0x00 ; '.'
000000000020b2c2         db  0x00 ; '.'
000000000020b2c3         db  0x00 ; '.'
000000000020b2c4         db  0x00 ; '.'
000000000020b2c5         db  0x00 ; '.'
000000000020b2c6         db  0x00 ; '.'
000000000020b2c7         db  0x00 ; '.'
000000000020b2c8         db  0x00 ; '.'
000000000020b2c9         db  0x00 ; '.'
000000000020b2ca         db  0x00 ; '.'
000000000020b2cb         db  0x00 ; '.'
000000000020b2cc         db  0x00 ; '.'
000000000020b2cd         db  0x00 ; '.'
000000000020b2ce         db  0x00 ; '.'
000000000020b2cf         db  0x00 ; '.'
000000000020b2d0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020b2d1         db  0x00 ; '.'
000000000020b2d2         db  0x00 ; '.'
000000000020b2d3         db  0x00 ; '.'
000000000020b2d4         db  0x00 ; '.'
000000000020b2d5         db  0x00 ; '.'
000000000020b2d6         db  0x00 ; '.'
000000000020b2d7         db  0x00 ; '.'
000000000020b2d8         db  0x00 ; '.'
000000000020b2d9         db  0x00 ; '.'
000000000020b2da         db  0x00 ; '.'
000000000020b2db         db  0x00 ; '.'
000000000020b2dc         db  0x00 ; '.'
000000000020b2dd         db  0x00 ; '.'
000000000020b2de         db  0x00 ; '.'
000000000020b2df         db  0x00 ; '.'
000000000020b2e0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020b2e1         db  0x00 ; '.'
000000000020b2e2         db  0x00 ; '.'
000000000020b2e3         db  0x00 ; '.'
000000000020b2e4         db  0x00 ; '.'
000000000020b2e5         db  0x00 ; '.'
000000000020b2e6         db  0x00 ; '.'
000000000020b2e7         db  0x00 ; '.'
000000000020b2e8         db  0x00 ; '.'
000000000020b2e9         db  0x00 ; '.'
000000000020b2ea         db  0x00 ; '.'
000000000020b2eb         db  0x00 ; '.'
000000000020b2ec         db  0x00 ; '.'
000000000020b2ed         db  0x00 ; '.'
000000000020b2ee         db  0x00 ; '.'
000000000020b2ef         db  0x00 ; '.'
                     qword_20b2f0:
000000000020b2f0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020b2f1         db  0x00 ; '.'
000000000020b2f2         db  0x00 ; '.'
000000000020b2f3         db  0x00 ; '.'
000000000020b2f4         db  0x00 ; '.'
000000000020b2f5         db  0x00 ; '.'
000000000020b2f6         db  0x00 ; '.'
000000000020b2f7         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20b300; 0x20b720[ (1056 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20b300; 0x416a20[ (2144032 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     utmpxname:
000000000020b300         extern function code                                   ; DATA XREF=utmpxname@GOT
                     __snprintf_chk:
000000000020b308         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     free:
000000000020b310         extern function code                                   ; DATA XREF=free@GOT
                     localtime:
000000000020b318         extern function code                                   ; DATA XREF=localtime@GOT
                     abort:
000000000020b320         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020b328         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncpy:
000000000020b330         extern function code                                   ; DATA XREF=strncpy@GOT
                     strncmp:
000000000020b338         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020b340         extern function code
                     _exit:
000000000020b348         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000020b350         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000020b358         extern function code                                   ; DATA XREF=__fpending@GOT
                     puts:
000000000020b360         extern function code                                   ; DATA XREF=puts@GOT
                     textdomain:
000000000020b368         extern function code                                   ; DATA XREF=textdomain@GOT
                     endutxent:
000000000020b370         extern function code                                   ; DATA XREF=endutxent@GOT
                     fclose:
000000000020b378         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020b380         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020b388         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020b390         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020b398         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020b3a0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020b3a8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020b3b0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020b3b8         extern function code                                   ; DATA XREF=strchr@GOT
                     gai_strerror:
000000000020b3c0         extern function code                                   ; DATA XREF=gai_strerror@GOT
                     strrchr:
000000000020b3c8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020b3d0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020b3d8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020b3e0         extern function code                                   ; DATA XREF=memset@GOT
                     strncat:
000000000020b3e8         extern function code                                   ; DATA XREF=strncat@GOT
                     __libc_start_main:
000000000020b3f0         extern function code
                     memcmp:
000000000020b3f8         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020b400         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020b408         extern function code                                   ; DATA XREF=calloc@GOT
                     setutxent:
000000000020b410         extern function code                                   ; DATA XREF=setutxent@GOT
                     __gmon_start__:
000000000020b418         extern function code
                     memcpy:
000000000020b420         extern function code                                   ; DATA XREF=memcpy@GOT
                     kill:
000000000020b428         extern function code                                   ; DATA XREF=kill@GOT
                     time:
000000000020b430         extern function code                                   ; DATA XREF=time@GOT
                     fileno:
000000000020b438         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020b440         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
000000000020b448         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020b450         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020b458         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020b460         extern function code                                   ; DATA XREF=__freading@GOT
                     ttyname:
000000000020b468         extern function code                                   ; DATA XREF=ttyname@GOT
                     realloc:
000000000020b470         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020b478         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020b480         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     strftime:
000000000020b488         extern function code                                   ; DATA XREF=strftime@GOT
                     getutxent:
000000000020b490         extern function code                                   ; DATA XREF=getutxent@GOT
                     error:
000000000020b498         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020b4a0         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
000000000020b4a8         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020b4b0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020b4b8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020b4c0         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020b4c8         extern function code
                     getaddrinfo:
000000000020b4d0         extern function code                                   ; DATA XREF=getaddrinfo@GOT
                     strdup:
000000000020b4d8         extern function code                                   ; DATA XREF=strdup@GOT
                     mbsinit:
000000000020b4e0         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020b4e8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020b4f0         extern function code
                     __ctype_b_loc:
000000000020b4f8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     freeaddrinfo:
000000000020b500         extern function code                                   ; DATA XREF=freeaddrinfo@GOT
                     __sprintf_chk:
000000000020b508         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     utmpxname@@GLIBC_2.2.5:
000000000020b510         extern function code
                     __snprintf_chk@@GLIBC_2.3.4:
000000000020b518         extern function code
                     free@@GLIBC_2.2.5:
000000000020b520         extern function code
                     localtime@@GLIBC_2.2.5:
000000000020b528         extern function code
                     abort@@GLIBC_2.2.5:
000000000020b530         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020b538         extern function code
                     strncpy@@GLIBC_2.2.5:
000000000020b540         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020b548         extern function code
                     _ITM_deregisterTMCloneTable_20b550:        // _ITM_deregisterTMCloneTable
000000000020b550         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020b558         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000020b560         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020b568         extern function code
                     puts@@GLIBC_2.2.5:
000000000020b570         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020b578         extern function code
                     endutxent@@GLIBC_2.2.5:
000000000020b580         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020b588         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020b590         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020b598         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020b5a0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020b5a8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020b5b0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020b5b8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020b5c0         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020b5c8         extern function code
                     gai_strerror@@GLIBC_2.2.5:
000000000020b5d0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020b5d8         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020b5e0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020b5e8         extern function code
                     memset@@GLIBC_2.2.5:
000000000020b5f0         extern function code
                     strncat@@GLIBC_2.2.5:
000000000020b5f8         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020b600         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020b608         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020b610         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020b618         extern function code
                     setutxent@@GLIBC_2.2.5:
000000000020b620         extern function code
                     __gmon_start___20b628:        // __gmon_start__
000000000020b628         extern function code
                     memcpy@@GLIBC_2.14:
000000000020b630         extern function code
                     kill@@GLIBC_2.2.5:
000000000020b638         extern function code
                     time@@GLIBC_2.2.5:
000000000020b640         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020b648         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020b650         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020b658         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020b660         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020b668         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020b670         extern function code
                     ttyname@@GLIBC_2.2.5:
000000000020b678         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020b680         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020b688         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020b690         extern function code
                     strftime@@GLIBC_2.2.5:
000000000020b698         extern function code
                     getutxent@@GLIBC_2.2.5:
000000000020b6a0         extern function code
                     error@@GLIBC_2.2.5:
000000000020b6a8         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020b6b0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020b6b8         extern function code
                     exit@@GLIBC_2.2.5:
000000000020b6c0         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020b6c8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020b6d0         extern function code
                     _ITM_registerTMCloneTable_20b6d8:        // _ITM_registerTMCloneTable
000000000020b6d8         extern function code
                     getaddrinfo@@GLIBC_2.2.5:
000000000020b6e0         extern function code
                     strdup@@GLIBC_2.2.5:
000000000020b6e8         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020b6f0         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020b6f8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020b700         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020b708         extern function code
                     freeaddrinfo@@GLIBC_2.2.5:
000000000020b710         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
000000000020b718         extern function code
