
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/mktemp
        UUID: 92F04CDB-AAD6-B979-9338-4647CD4D7D54
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8b10[ (35600 bytes)
        ; File offset : [0; 35600[ (35600 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x30 ; '0'
0000000000000019         db  0x22 ; '"'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x68 ; 'h'
0000000000000029         db  0x2f ; '/'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x10 ; '.'
00000000000000d1         db  0x8b ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x10 ; '.'
00000000000000d9         db  0x8b ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x70 ; 'p'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x70 ; 'p'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x70 ; 'p'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x10 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xd0 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xd8 ; '.'
0000000000000129         db  0x9b ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xd8 ; '.'
0000000000000131         db  0x9b ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xd8 ; '.'
0000000000000139         db  0x9b ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'                                         ; DATA XREF=gen_tempname_len+43
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=try_file+2
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xa0 ; '.'
0000000000000199         db  0x78 ; 'x'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xa0 ; '.'
00000000000001a1         db  0x78 ; 'x'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xa0 ; '.'
00000000000001a9         db  0x78 ; 'x'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x24 ; '$'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x24 ; '$'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=try_dir
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x70 ; 'p'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x70 ; 'p'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x70 ; 'p'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x90 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x90 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x92 ; '.'
0000000000000285         db  0xf0 ; '.'
0000000000000286         db  0x4c ; 'L'
0000000000000287         db  0xdb ; '.'
0000000000000288         db  0xaa ; '.'
0000000000000289         db  0xd6 ; '.'
000000000000028a         db  0xb9 ; '.'
000000000000028b         db  0x79 ; 'y'
000000000000028c         db  0x93 ; '.'
000000000000028d         db  0x38 ; '8'
000000000000028e         db  0x46 ; 'F'
000000000000028f         db  0x47 ; 'G'
0000000000000290         db  0xcd ; '.'
0000000000000291         db  0x4d ; 'M'
0000000000000292         db  0x7d ; '}'
0000000000000293         db  0x54 ; 'T'
0000000000000294         db  0x6a ; 'j'
0000000000000295         db  0x51 ; 'Q'
0000000000000296         db  0x8d ; '.'
0000000000000297         db  0x4e ; 'N'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x44 ; 'D'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x44 ; 'D'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x45 ; 'E'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x4a ; 'J'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xa00[ (1824 bytes)
        ; File offset : [736; 2560[ (1824 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xb1 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x98 ; '.'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xae ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x31 ; '1'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x81 ; '.'
0000000000000359         db  0x01 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x37 ; '7'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x07 ; '.'
0000000000000389         db  0x03 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xb4 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x14 ; '.'
00000000000003b9         db  0x02 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x6d ; 'm'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xa0 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x78 ; 'x'                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x5b ; '['
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xba ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x1b ; '.'
0000000000000449         db  0x01 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x65 ; 'e'
0000000000000461         db  0x02 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x73 ; 's'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x61 ; 'a'
0000000000000491         db  0x02 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x4e ; 'N'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xee ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x14 ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x8e ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x7d ; '}'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xd1 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xd8 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x29 ; ')'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x46 ; 'F'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x66 ; 'f'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xf2 ; '.'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe0 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x2a ; '*'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x74 ; 't'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xc1 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x70 ; 'p'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x42 ; 'B'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x89 ; '.'
0000000000000641         db  0x02 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x0d ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x58 ; 'X'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x23 ; '#'
0000000000000689         db  0x03 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x20 ; ' '
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x6c ; 'l'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0xe4 ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x90 ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x7a ; 'z'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x0b ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x97 ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0xbf ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xa6 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x3d ; '='
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x1f ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x12 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x53 ; 'S'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x49 ; 'I'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x67 ; 'g'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xff ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=isaac_refill+74, isaac_refill+108, isaac_refill+141, isaac_refill+175, isaac_refill+207, isaac_refill+234, isaac_refill+275, isaac_refill+311, isaac_refill+378, isaac_refill+412, isaac_refill+445
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'                                         ; DATA XREF=randread_new+296, randread_new+495, randread_new+648, randread_new+735, randread_new+786, randread+200, randread+223
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=randread_new+250, randread_new+260, randread_new+431, randread_new+517, randread+165, randread+245, randread+258, randread+312, randread+323, randread+336
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x3f ; '?'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x82 ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x31 ; '1'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xb8 ; '.'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x05 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xb5 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xeb ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x51 ; 'Q'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x32 ; '2'
00000000000008c9         db  0x03 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x20 ; ' '
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x88 ; '.'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x97 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x44 ; 'D'
0000000000000911         db  0x02 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x22 ; '"'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xa3 ; '.'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x5f ; '_'
0000000000000941         db  0x01 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x88 ; '.'
0000000000000949         db  0xa0 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x08 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x9d ; '.'
0000000000000959         db  0x02 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x11 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x80 ; '.'
0000000000000961         db  0xa0 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0xc8 ; '.'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x21 ; '!'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x19 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xa0 ; '.'
0000000000000979         db  0xa0 ; '.'
000000000000097a         db  0x20 ; ' '
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x08 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0xa8 ; '.'
0000000000000989         db  0x02 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x11 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x19 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0xa0 ; '.'
0000000000000991         db  0xa0 ; '.'
0000000000000992         db  0x20 ; ' '
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x08 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x1f ; '.'
00000000000009a1         db  0x02 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x21 ; '!'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x19 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x80 ; '.'
00000000000009a9         db  0xa0 ; '.'
00000000000009aa         db  0x20 ; ' '
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x08 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0xca ; '.'
00000000000009b9         db  0x01 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x11 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0xc0 ; '.'
00000000000009c1         db  0xa0 ; '.'
00000000000009c2         db  0x20 ; ' '
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x08 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x3f ; '?'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x11 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x19 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x90 ; '.'
00000000000009d9         db  0xa0 ; '.'
00000000000009da         db  0x20 ; ' '
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x04 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xb8 ; '.'
00000000000009e9         db  0x01 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x11 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x19 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x98 ; '.'
00000000000009f1         db  0xa0 ; '.'
00000000000009f2         db  0x20 ; ' '
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x08 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xa00; 0xd4c[ (844 bytes)
        ; File offset : [2560; 3404[ (844 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x6c ; 'l'
0000000000000a02         db  0x69 ; 'i'
0000000000000a03         db  0x62 ; 'b'
0000000000000a04         db  0x63 ; 'c'
0000000000000a05         db  0x2e ; '.'
0000000000000a06         db  0x73 ; 's'
0000000000000a07         db  0x6f ; 'o'
0000000000000a08         db  0x2e ; '.'
0000000000000a09         db  0x36 ; '6'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x66 ; 'f'
0000000000000a0c         db  0x66 ; 'f'
0000000000000a0d         db  0x6c ; 'l'
0000000000000a0e         db  0x75 ; 'u'
0000000000000a0f         db  0x73 ; 's'
0000000000000a10         db  0x68 ; 'h'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x5f ; '_'
0000000000000a13         db  0x5f ; '_'
0000000000000a14         db  0x70 ; 'p'
0000000000000a15         db  0x72 ; 'r'
0000000000000a16         db  0x69 ; 'i'
0000000000000a17         db  0x6e ; 'n'
0000000000000a18         db  0x74 ; 't'
0000000000000a19         db  0x66 ; 'f'
0000000000000a1a         db  0x5f ; '_'
0000000000000a1b         db  0x63 ; 'c'
0000000000000a1c         db  0x68 ; 'h'
0000000000000a1d         db  0x6b ; 'k'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x73 ; 's'
0000000000000a20         db  0x65 ; 'e'
0000000000000a21         db  0x74 ; 't'
0000000000000a22         db  0x6c ; 'l'
0000000000000a23         db  0x6f ; 'o'
0000000000000a24         db  0x63 ; 'c'
0000000000000a25         db  0x61 ; 'a'
0000000000000a26         db  0x6c ; 'l'
0000000000000a27         db  0x65 ; 'e'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x6d ; 'm'
0000000000000a2a         db  0x62 ; 'b'
0000000000000a2b         db  0x72 ; 'r'
0000000000000a2c         db  0x74 ; 't'
0000000000000a2d         db  0x6f ; 'o'
0000000000000a2e         db  0x77 ; 'w'
0000000000000a2f         db  0x63 ; 'c'
0000000000000a30         db  0x00 ; '.'
0000000000000a31         db  0x66 ; 'f'
0000000000000a32         db  0x6f ; 'o'
0000000000000a33         db  0x70 ; 'p'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x6e ; 'n'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x73 ; 's'
0000000000000a38         db  0x74 ; 't'
0000000000000a39         db  0x72 ; 'r'
0000000000000a3a         db  0x6e ; 'n'
0000000000000a3b         db  0x63 ; 'c'
0000000000000a3c         db  0x6d ; 'm'
0000000000000a3d         db  0x70 ; 'p'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x6f ; 'o'
0000000000000a40         db  0x70 ; 'p'
0000000000000a41         db  0x74 ; 't'
0000000000000a42         db  0x69 ; 'i'
0000000000000a43         db  0x6e ; 'n'
0000000000000a44         db  0x64 ; 'd'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x73 ; 's'
0000000000000a47         db  0x74 ; 't'
0000000000000a48         db  0x72 ; 'r'
0000000000000a49         db  0x72 ; 'r'
0000000000000a4a         db  0x63 ; 'c'
0000000000000a4b         db  0x68 ; 'h'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x64 ; 'd'
0000000000000a4f         db  0x63 ; 'c'
0000000000000a50         db  0x67 ; 'g'
0000000000000a51         db  0x65 ; 'e'
0000000000000a52         db  0x74 ; 't'
0000000000000a53         db  0x74 ; 't'
0000000000000a54         db  0x65 ; 'e'
0000000000000a55         db  0x78 ; 'x'
0000000000000a56         db  0x74 ; 't'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x66 ; 'f'
0000000000000a59         db  0x70 ; 'p'
0000000000000a5a         db  0x75 ; 'u'
0000000000000a5b         db  0x74 ; 't'
0000000000000a5c         db  0x63 ; 'c'
0000000000000a5d         db  0x5f ; '_'
0000000000000a5e         db  0x75 ; 'u'
0000000000000a5f         db  0x6e ; 'n'
0000000000000a60         db  0x6c ; 'l'
0000000000000a61         db  0x6f ; 'o'
0000000000000a62         db  0x63 ; 'c'
0000000000000a63         db  0x6b ; 'k'
0000000000000a64         db  0x65 ; 'e'
0000000000000a65         db  0x64 ; 'd'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x65 ; 'e'
0000000000000a68         db  0x72 ; 'r'
0000000000000a69         db  0x72 ; 'r'
0000000000000a6a         db  0x6f ; 'o'
0000000000000a6b         db  0x72 ; 'r'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x5f ; '_'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x72 ; 'r'
0000000000000a70         db  0x65 ; 'e'
0000000000000a71         db  0x61 ; 'a'
0000000000000a72         db  0x64 ; 'd'
0000000000000a73         db  0x5f ; '_'
0000000000000a74         db  0x63 ; 'c'
0000000000000a75         db  0x68 ; 'h'
0000000000000a76         db  0x6b ; 'k'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x70 ; 'p'
0000000000000a79         db  0x75 ; 'u'
0000000000000a7a         db  0x74 ; 't'
0000000000000a7b         db  0x73 ; 's'
0000000000000a7c         db  0x00 ; '.'
0000000000000a7d         db  0x5f ; '_'
0000000000000a7e         db  0x5f ; '_'
0000000000000a7f         db  0x73 ; 's'
0000000000000a80         db  0x74 ; 't'
0000000000000a81         db  0x61 ; 'a'
0000000000000a82         db  0x63 ; 'c'
0000000000000a83         db  0x6b ; 'k'
0000000000000a84         db  0x5f ; '_'
0000000000000a85         db  0x63 ; 'c'
0000000000000a86         db  0x68 ; 'h'
0000000000000a87         db  0x6b ; 'k'
0000000000000a88         db  0x5f ; '_'
0000000000000a89         db  0x66 ; 'f'
0000000000000a8a         db  0x61 ; 'a'
0000000000000a8b         db  0x69 ; 'i'
0000000000000a8c         db  0x6c ; 'l'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x5f ; '_'
0000000000000a90         db  0x6c ; 'l'
0000000000000a91         db  0x78 ; 'x'
0000000000000a92         db  0x73 ; 's'
0000000000000a93         db  0x74 ; 't'
0000000000000a94         db  0x61 ; 'a'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x69 ; 'i'
0000000000000a98         db  0x73 ; 's'
0000000000000a99         db  0x77 ; 'w'
0000000000000a9a         db  0x70 ; 'p'
0000000000000a9b         db  0x72 ; 'r'
0000000000000a9c         db  0x69 ; 'i'
0000000000000a9d         db  0x6e ; 'n'
0000000000000a9e         db  0x74 ; 't'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x6d ; 'm'
0000000000000aa1         db  0x6b ; 'k'
0000000000000aa2         db  0x64 ; 'd'
0000000000000aa3         db  0x69 ; 'i'
0000000000000aa4         db  0x72 ; 'r'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x72 ; 'r'
0000000000000aa7         db  0x65 ; 'e'
0000000000000aa8         db  0x61 ; 'a'
0000000000000aa9         db  0x6c ; 'l'
0000000000000aaa         db  0x6c ; 'l'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x63 ; 'c'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x61 ; 'a'
0000000000000aaf         db  0x62 ; 'b'
0000000000000ab0         db  0x6f ; 'o'
0000000000000ab1         db  0x72 ; 'r'
0000000000000ab2         db  0x74 ; 't'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x5f ; '_'
0000000000000ab5         db  0x65 ; 'e'
0000000000000ab6         db  0x78 ; 'x'
0000000000000ab7         db  0x69 ; 'i'
0000000000000ab8         db  0x74 ; 't'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x67 ; 'g'
0000000000000abb         db  0x65 ; 'e'
0000000000000abc         db  0x74 ; 't'
0000000000000abd         db  0x70 ; 'p'
0000000000000abe         db  0x69 ; 'i'
0000000000000abf         db  0x64 ; 'd'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x73 ; 's'
0000000000000ac2         db  0x74 ; 't'
0000000000000ac3         db  0x72 ; 'r'
0000000000000ac4         db  0x73 ; 's'
0000000000000ac5         db  0x70 ; 'p'
0000000000000ac6         db  0x6e ; 'n'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x70 ; 'p'
0000000000000ac9         db  0x72 ; 'r'
0000000000000aca         db  0x6f ; 'o'
0000000000000acb         db  0x67 ; 'g'
0000000000000acc         db  0x72 ; 'r'
0000000000000acd         db  0x61 ; 'a'
0000000000000ace         db  0x6d ; 'm'
0000000000000acf         db  0x5f ; '_'
0000000000000ad0         db  0x69 ; 'i'
0000000000000ad1         db  0x6e ; 'n'
0000000000000ad2         db  0x76 ; 'v'
0000000000000ad3         db  0x6f ; 'o'
0000000000000ad4         db  0x63 ; 'c'
0000000000000ad5         db  0x61 ; 'a'
0000000000000ad6         db  0x74 ; 't'
0000000000000ad7         db  0x69 ; 'i'
0000000000000ad8         db  0x6f ; 'o'
0000000000000ad9         db  0x6e ; 'n'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x6e ; 'n'
0000000000000adc         db  0x61 ; 'a'
0000000000000add         db  0x6d ; 'm'
0000000000000ade         db  0x65 ; 'e'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x5f ; '_'
0000000000000ae1         db  0x5f ; '_'
0000000000000ae2         db  0x61 ; 'a'
0000000000000ae3         db  0x73 ; 's'
0000000000000ae4         db  0x73 ; 's'
0000000000000ae5         db  0x65 ; 'e'
0000000000000ae6         db  0x72 ; 'r'
0000000000000ae7         db  0x74 ; 't'
0000000000000ae8         db  0x5f ; '_'
0000000000000ae9         db  0x66 ; 'f'
0000000000000aea         db  0x61 ; 'a'
0000000000000aeb         db  0x69 ; 'i'
0000000000000aec         db  0x6c ; 'l'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x5f ; '_'
0000000000000aef         db  0x5f ; '_'
0000000000000af0         db  0x63 ; 'c'
0000000000000af1         db  0x74 ; 't'
0000000000000af2         db  0x79 ; 'y'
0000000000000af3         db  0x70 ; 'p'
0000000000000af4         db  0x65 ; 'e'
0000000000000af5         db  0x5f ; '_'
0000000000000af6         db  0x67 ; 'g'
0000000000000af7         db  0x65 ; 'e'
0000000000000af8         db  0x74 ; 't'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x6d ; 'm'
0000000000000afb         db  0x62 ; 'b'
0000000000000afc         db  0x5f ; '_'
0000000000000afd         db  0x63 ; 'c'
0000000000000afe         db  0x75 ; 'u'
0000000000000aff         db  0x72 ; 'r'
                     aMax:
0000000000000b00         db         "_max", 0
0000000000000b05         db  0x67 ; 'g'
0000000000000b06         db  0x65 ; 'e'
0000000000000b07         db  0x74 ; 't'
0000000000000b08         db  0x70 ; 'p'
0000000000000b09         db  0x70 ; 'p'
0000000000000b0a         db  0x69 ; 'i'
0000000000000b0b         db  0x64 ; 'd'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x63 ; 'c'
0000000000000b0e         db  0x61 ; 'a'
0000000000000b0f         db  0x6c ; 'l'
0000000000000b10         db  0x6c ; 'l'
0000000000000b11         db  0x6f ; 'o'
0000000000000b12         db  0x63 ; 'c'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x73 ; 's'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x72 ; 'r'
0000000000000b17         db  0x6c ; 'l'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x6e ; 'n'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x66 ; 'f'
0000000000000b1c         db  0x72 ; 'r'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x61 ; 'a'
0000000000000b1f         db  0x64 ; 'd'
0000000000000b20         db  0x5f ; '_'
0000000000000b21         db  0x75 ; 'u'
0000000000000b22         db  0x6e ; 'n'
0000000000000b23         db  0x6c ; 'l'
0000000000000b24         db  0x6f ; 'o'
0000000000000b25         db  0x63 ; 'c'
0000000000000b26         db  0x6b ; 'k'
0000000000000b27         db  0x65 ; 'e'
0000000000000b28         db  0x64 ; 'd'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x6d ; 'm'
0000000000000b2b         db  0x65 ; 'e'
0000000000000b2c         db  0x6d ; 'm'
0000000000000b2d         db  0x73 ; 's'
0000000000000b2e         db  0x65 ; 'e'
0000000000000b2f         db  0x74 ; 't'
0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x5f ; '_'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x65 ; 'e'
0000000000000b34         db  0x72 ; 'r'
0000000000000b35         db  0x72 ; 'r'
0000000000000b36         db  0x6e ; 'n'
0000000000000b37         db  0x6f ; 'o'
0000000000000b38         db  0x5f ; '_'
0000000000000b39         db  0x6c ; 'l'
0000000000000b3a         db  0x6f ; 'o'
0000000000000b3b         db  0x63 ; 'c'
0000000000000b3c         db  0x61 ; 'a'
0000000000000b3d         db  0x74 ; 't'
0000000000000b3e         db  0x69 ; 'i'
0000000000000b3f         db  0x6f ; 'o'
0000000000000b40         db  0x6e ; 'n'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x6d ; 'm'
0000000000000b43         db  0x65 ; 'e'
0000000000000b44         db  0x6d ; 'm'
0000000000000b45         db  0x63 ; 'c'
0000000000000b46         db  0x6d ; 'm'
0000000000000b47         db  0x70 ; 'p'
0000000000000b48         db  0x00 ; '.'
0000000000000b49         db  0x6d ; 'm'
0000000000000b4a         db  0x65 ; 'e'
0000000000000b4b         db  0x6d ; 'm'
0000000000000b4c         db  0x70 ; 'p'
0000000000000b4d         db  0x63 ; 'c'
0000000000000b4e         db  0x70 ; 'p'
0000000000000b4f         db  0x79 ; 'y'
0000000000000b50         db  0x00 ; '.'
0000000000000b51         db  0x5f ; '_'
0000000000000b52         db  0x5f ; '_'
0000000000000b53         db  0x66 ; 'f'
0000000000000b54         db  0x70 ; 'p'
0000000000000b55         db  0x72 ; 'r'
0000000000000b56         db  0x69 ; 'i'
0000000000000b57         db  0x6e ; 'n'
0000000000000b58         db  0x74 ; 't'
0000000000000b59         db  0x66 ; 'f'
0000000000000b5a         db  0x5f ; '_'
0000000000000b5b         db  0x63 ; 'c'
0000000000000b5c         db  0x68 ; 'h'
0000000000000b5d         db  0x6b ; 'k'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x73 ; 's'
0000000000000b60         db  0x74 ; 't'
0000000000000b61         db  0x64 ; 'd'
0000000000000b62         db  0x6f ; 'o'
0000000000000b63         db  0x75 ; 'u'
0000000000000b64         db  0x74 ; 't'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x6c ; 'l'
0000000000000b67         db  0x73 ; 's'
0000000000000b68         db  0x65 ; 'e'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x6b ; 'k'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x6d ; 'm'
0000000000000b6d         db  0x65 ; 'e'
0000000000000b6e         db  0x6d ; 'm'
0000000000000b6f         db  0x63 ; 'c'
0000000000000b70         db  0x70 ; 'p'
0000000000000b71         db  0x79 ; 'y'
0000000000000b72         db  0x00 ; '.'
0000000000000b73         db  0x66 ; 'f'
0000000000000b74         db  0x63 ; 'c'
0000000000000b75         db  0x6c ; 'l'
0000000000000b76         db  0x6f ; 'o'
0000000000000b77         db  0x73 ; 's'
0000000000000b78         db  0x65 ; 'e'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x6d ; 'm'
0000000000000b7b         db  0x61 ; 'a'
0000000000000b7c         db  0x6c ; 'l'
0000000000000b7d         db  0x6c ; 'l'
0000000000000b7e         db  0x6f ; 'o'
0000000000000b7f         db  0x63 ; 'c'
0000000000000b80         db  0x00 ; '.'
0000000000000b81         db  0x72 ; 'r'
0000000000000b82         db  0x65 ; 'e'
0000000000000b83         db  0x6d ; 'm'
0000000000000b84         db  0x6f ; 'o'
0000000000000b85         db  0x76 ; 'v'
0000000000000b86         db  0x65 ; 'e'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x6d ; 'm'
0000000000000b89         db  0x62 ; 'b'
0000000000000b8a         db  0x73 ; 's'
0000000000000b8b         db  0x69 ; 'i'
0000000000000b8c         db  0x6e ; 'n'
0000000000000b8d         db  0x69 ; 'i'
0000000000000b8e         db  0x74 ; 't'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x67 ; 'g'
0000000000000b91         db  0x65 ; 'e'
0000000000000b92         db  0x74 ; 't'
0000000000000b93         db  0x67 ; 'g'
0000000000000b94         db  0x69 ; 'i'
0000000000000b95         db  0x64 ; 'd'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x6e ; 'n'
0000000000000b98         db  0x6c ; 'l'
0000000000000b99         db  0x5f ; '_'
0000000000000b9a         db  0x6c ; 'l'
0000000000000b9b         db  0x61 ; 'a'
0000000000000b9c         db  0x6e ; 'n'
0000000000000b9d         db  0x67 ; 'g'
0000000000000b9e         db  0x69 ; 'i'
0000000000000b9f         db  0x6e ; 'n'
0000000000000ba0         db  0x66 ; 'f'
0000000000000ba1         db  0x6f ; 'o'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x5f ; '_'
0000000000000ba5         db  0x63 ; 'c'
0000000000000ba6         db  0x74 ; 't'
0000000000000ba7         db  0x79 ; 'y'
0000000000000ba8         db  0x70 ; 'p'
0000000000000ba9         db  0x65 ; 'e'
0000000000000baa         db  0x5f ; '_'
0000000000000bab         db  0x62 ; 'b'
0000000000000bac         db  0x5f ; '_'
0000000000000bad         db  0x6c ; 'l'
0000000000000bae         db  0x6f ; 'o'
0000000000000baf         db  0x63 ; 'c'
0000000000000bb0         db  0x00 ; '.'
0000000000000bb1         db  0x67 ; 'g'
0000000000000bb2         db  0x65 ; 'e'
0000000000000bb3         db  0x74 ; 't'
0000000000000bb4         db  0x65 ; 'e'
0000000000000bb5         db  0x6e ; 'n'
0000000000000bb6         db  0x76 ; 'v'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x6f ; 'o'
0000000000000bb9         db  0x70 ; 'p'
0000000000000bba         db  0x74 ; 't'
0000000000000bbb         db  0x61 ; 'a'
0000000000000bbc         db  0x72 ; 'r'
0000000000000bbd         db  0x67 ; 'g'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x5f ; '_'
0000000000000bc0         db  0x5f ; '_'
0000000000000bc1         db  0x66 ; 'f'
0000000000000bc2         db  0x72 ; 'r'
0000000000000bc3         db  0x65 ; 'e'
0000000000000bc4         db  0x61 ; 'a'
0000000000000bc5         db  0x64 ; 'd'
0000000000000bc6         db  0x69 ; 'i'
0000000000000bc7         db  0x6e ; 'n'
0000000000000bc8         db  0x67 ; 'g'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x73 ; 's'
0000000000000bcb         db  0x74 ; 't'
0000000000000bcc         db  0x64 ; 'd'
0000000000000bcd         db  0x65 ; 'e'
0000000000000bce         db  0x72 ; 'r'
0000000000000bcf         db  0x72 ; 'r'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x67 ; 'g'
0000000000000bd2         db  0x65 ; 'e'
0000000000000bd3         db  0x74 ; 't'
0000000000000bd4         db  0x75 ; 'u'
0000000000000bd5         db  0x69 ; 'i'
0000000000000bd6         db  0x64 ; 'd'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x67 ; 'g'
0000000000000bd9         db  0x65 ; 'e'
0000000000000bda         db  0x74 ; 't'
0000000000000bdb         db  0x6f ; 'o'
0000000000000bdc         db  0x70 ; 'p'
0000000000000bdd         db  0x74 ; 't'
0000000000000bde         db  0x5f ; '_'
0000000000000bdf         db  0x6c ; 'l'
0000000000000be0         db  0x6f ; 'o'
0000000000000be1         db  0x6e ; 'n'
0000000000000be2         db  0x67 ; 'g'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x66 ; 'f'
0000000000000be5         db  0x69 ; 'i'
0000000000000be6         db  0x6c ; 'l'
0000000000000be7         db  0x65 ; 'e'
0000000000000be8         db  0x6e ; 'n'
0000000000000be9         db  0x6f ; 'o'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x66 ; 'f'
0000000000000bec         db  0x77 ; 'w'
0000000000000bed         db  0x72 ; 'r'
0000000000000bee         db  0x69 ; 'i'
0000000000000bef         db  0x74 ; 't'
0000000000000bf0         db  0x65 ; 'e'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x67 ; 'g'
0000000000000bf3         db  0x65 ; 'e'
0000000000000bf4         db  0x74 ; 't'
0000000000000bf5         db  0x74 ; 't'
0000000000000bf6         db  0x69 ; 'i'
0000000000000bf7         db  0x6d ; 'm'
0000000000000bf8         db  0x65 ; 'e'
0000000000000bf9         db  0x6f ; 'o'
0000000000000bfa         db  0x66 ; 'f'
0000000000000bfb         db  0x64 ; 'd'
0000000000000bfc         db  0x61 ; 'a'
0000000000000bfd         db  0x79 ; 'y'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x5f ; '_'
                     aExplicitbzeroc:
0000000000000c00         db         "_explicit_bzero_chk", 0
0000000000000c14         db  0x5f ; '_'
0000000000000c15         db  0x5f ; '_'
0000000000000c16         db  0x66 ; 'f'
0000000000000c17         db  0x70 ; 'p'
0000000000000c18         db  0x65 ; 'e'
0000000000000c19         db  0x6e ; 'n'
0000000000000c1a         db  0x64 ; 'd'
0000000000000c1b         db  0x69 ; 'i'
0000000000000c1c         db  0x6e ; 'n'
0000000000000c1d         db  0x67 ; 'g'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x70 ; 'p'
0000000000000c20         db  0x72 ; 'r'
0000000000000c21         db  0x6f ; 'o'
0000000000000c22         db  0x67 ; 'g'
0000000000000c23         db  0x72 ; 'r'
0000000000000c24         db  0x61 ; 'a'
0000000000000c25         db  0x6d ; 'm'
0000000000000c26         db  0x5f ; '_'
0000000000000c27         db  0x69 ; 'i'
0000000000000c28         db  0x6e ; 'n'
0000000000000c29         db  0x76 ; 'v'
0000000000000c2a         db  0x6f ; 'o'
0000000000000c2b         db  0x63 ; 'c'
0000000000000c2c         db  0x61 ; 'a'
0000000000000c2d         db  0x74 ; 't'
0000000000000c2e         db  0x69 ; 'i'
0000000000000c2f         db  0x6f ; 'o'
0000000000000c30         db  0x6e ; 'n'
0000000000000c31         db  0x5f ; '_'
0000000000000c32         db  0x73 ; 's'
0000000000000c33         db  0x68 ; 'h'
0000000000000c34         db  0x6f ; 'o'
0000000000000c35         db  0x72 ; 'r'
0000000000000c36         db  0x74 ; 't'
0000000000000c37         db  0x5f ; '_'
0000000000000c38         db  0x6e ; 'n'
0000000000000c39         db  0x61 ; 'a'
0000000000000c3a         db  0x6d ; 'm'
0000000000000c3b         db  0x65 ; 'e'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x66 ; 'f'
0000000000000c3e         db  0x64 ; 'd'
0000000000000c3f         db  0x6f ; 'o'
0000000000000c40         db  0x70 ; 'p'
0000000000000c41         db  0x65 ; 'e'
0000000000000c42         db  0x6e ; 'n'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x5f ; '_'
0000000000000c45         db  0x5f ; '_'
0000000000000c46         db  0x63 ; 'c'
0000000000000c47         db  0x78 ; 'x'
0000000000000c48         db  0x61 ; 'a'
0000000000000c49         db  0x5f ; '_'
0000000000000c4a         db  0x66 ; 'f'
0000000000000c4b         db  0x69 ; 'i'
0000000000000c4c         db  0x6e ; 'n'
0000000000000c4d         db  0x61 ; 'a'
0000000000000c4e         db  0x6c ; 'l'
0000000000000c4f         db  0x69 ; 'i'
0000000000000c50         db  0x7a ; 'z'
0000000000000c51         db  0x65 ; 'e'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x73 ; 's'
0000000000000c54         db  0x65 ; 'e'
0000000000000c55         db  0x74 ; 't'
0000000000000c56         db  0x76 ; 'v'
0000000000000c57         db  0x62 ; 'b'
0000000000000c58         db  0x75 ; 'u'
0000000000000c59         db  0x66 ; 'f'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x66 ; 'f'
0000000000000c5c         db  0x63 ; 'c'
0000000000000c5d         db  0x6e ; 'n'
0000000000000c5e         db  0x74 ; 't'
0000000000000c5f         db  0x6c ; 'l'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x62 ; 'b'
0000000000000c62         db  0x69 ; 'i'
0000000000000c63         db  0x6e ; 'n'
0000000000000c64         db  0x64 ; 'd'
0000000000000c65         db  0x74 ; 't'
0000000000000c66         db  0x65 ; 'e'
0000000000000c67         db  0x78 ; 'x'
0000000000000c68         db  0x74 ; 't'
0000000000000c69         db  0x64 ; 'd'
0000000000000c6a         db  0x6f ; 'o'
0000000000000c6b         db  0x6d ; 'm'
0000000000000c6c         db  0x61 ; 'a'
0000000000000c6d         db  0x69 ; 'i'
0000000000000c6e         db  0x6e ; 'n'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x5f ; '_'
0000000000000c71         db  0x5f ; '_'
0000000000000c72         db  0x6c ; 'l'
0000000000000c73         db  0x69 ; 'i'
0000000000000c74         db  0x62 ; 'b'
0000000000000c75         db  0x63 ; 'c'
0000000000000c76         db  0x5f ; '_'
0000000000000c77         db  0x73 ; 's'
0000000000000c78         db  0x74 ; 't'
0000000000000c79         db  0x61 ; 'a'
0000000000000c7a         db  0x72 ; 'r'
0000000000000c7b         db  0x74 ; 't'
0000000000000c7c         db  0x5f ; '_'
0000000000000c7d         db  0x6d ; 'm'
0000000000000c7e         db  0x61 ; 'a'
0000000000000c7f         db  0x69 ; 'i'
0000000000000c80         db  0x6e ; 'n'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x66 ; 'f'
0000000000000c83         db  0x73 ; 's'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x65 ; 'e'
0000000000000c86         db  0x6b ; 'k'
0000000000000c87         db  0x6f ; 'o'
0000000000000c88         db  0x00 ; '.'
0000000000000c89         db  0x66 ; 'f'
0000000000000c8a         db  0x70 ; 'p'
0000000000000c8b         db  0x75 ; 'u'
0000000000000c8c         db  0x74 ; 't'
0000000000000c8d         db  0x73 ; 's'
0000000000000c8e         db  0x5f ; '_'
0000000000000c8f         db  0x75 ; 'u'
0000000000000c90         db  0x6e ; 'n'
0000000000000c91         db  0x6c ; 'l'
0000000000000c92         db  0x6f ; 'o'
0000000000000c93         db  0x63 ; 'c'
0000000000000c94         db  0x6b ; 'k'
0000000000000c95         db  0x65 ; 'e'
0000000000000c96         db  0x64 ; 'd'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x66 ; 'f'
0000000000000c99         db  0x72 ; 'r'
0000000000000c9a         db  0x65 ; 'e'
0000000000000c9b         db  0x65 ; 'e'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x5f ; '_'
0000000000000c9e         db  0x5f ; '_'
0000000000000c9f         db  0x70 ; 'p'
0000000000000ca0         db  0x72 ; 'r'
0000000000000ca1         db  0x6f ; 'o'
0000000000000ca2         db  0x67 ; 'g'
0000000000000ca3         db  0x6e ; 'n'
0000000000000ca4         db  0x61 ; 'a'
0000000000000ca5         db  0x6d ; 'm'
0000000000000ca6         db  0x65 ; 'e'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x5f ; '_'
0000000000000ca9         db  0x5f ; '_'
0000000000000caa         db  0x70 ; 'p'
0000000000000cab         db  0x72 ; 'r'
0000000000000cac         db  0x6f ; 'o'
0000000000000cad         db  0x67 ; 'g'
0000000000000cae         db  0x6e ; 'n'
0000000000000caf         db  0x61 ; 'a'
0000000000000cb0         db  0x6d ; 'm'
0000000000000cb1         db  0x65 ; 'e'
0000000000000cb2         db  0x5f ; '_'
0000000000000cb3         db  0x66 ; 'f'
0000000000000cb4         db  0x75 ; 'u'
0000000000000cb5         db  0x6c ; 'l'
0000000000000cb6         db  0x6c ; 'l'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x5f ; '_'
0000000000000cb9         db  0x5f ; '_'
0000000000000cba         db  0x63 ; 'c'
0000000000000cbb         db  0x78 ; 'x'
0000000000000cbc         db  0x61 ; 'a'
0000000000000cbd         db  0x5f ; '_'
0000000000000cbe         db  0x61 ; 'a'
0000000000000cbf         db  0x74 ; 't'
0000000000000cc0         db  0x65 ; 'e'
0000000000000cc1         db  0x78 ; 'x'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x74 ; 't'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x47 ; 'G'
0000000000000cc6         db  0x4c ; 'L'
0000000000000cc7         db  0x49 ; 'I'
0000000000000cc8         db  0x42 ; 'B'
0000000000000cc9         db  0x43 ; 'C'
0000000000000cca         db  0x5f ; '_'
0000000000000ccb         db  0x32 ; '2'
0000000000000ccc         db  0x2e ; '.'
0000000000000ccd         db  0x33 ; '3'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x47 ; 'G'
0000000000000cd0         db  0x4c ; 'L'
0000000000000cd1         db  0x49 ; 'I'
0000000000000cd2         db  0x42 ; 'B'
0000000000000cd3         db  0x43 ; 'C'
0000000000000cd4         db  0x5f ; '_'
0000000000000cd5         db  0x32 ; '2'
0000000000000cd6         db  0x2e ; '.'
0000000000000cd7         db  0x32 ; '2'
0000000000000cd8         db  0x35 ; '5'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x47 ; 'G'
0000000000000cdb         db  0x4c ; 'L'
0000000000000cdc         db  0x49 ; 'I'
0000000000000cdd         db  0x42 ; 'B'
0000000000000cde         db  0x43 ; 'C'
0000000000000cdf         db  0x5f ; '_'
0000000000000ce0         db  0x32 ; '2'
0000000000000ce1         db  0x2e ; '.'
0000000000000ce2         db  0x33 ; '3'
0000000000000ce3         db  0x2e ; '.'
0000000000000ce4         db  0x34 ; '4'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x47 ; 'G'
0000000000000ce7         db  0x4c ; 'L'
0000000000000ce8         db  0x49 ; 'I'
0000000000000ce9         db  0x42 ; 'B'
0000000000000cea         db  0x43 ; 'C'
0000000000000ceb         db  0x5f ; '_'
0000000000000cec         db  0x32 ; '2'
0000000000000ced         db  0x2e ; '.'
0000000000000cee         db  0x31 ; '1'
0000000000000cef         db  0x34 ; '4'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x47 ; 'G'
0000000000000cf2         db  0x4c ; 'L'
0000000000000cf3         db  0x49 ; 'I'
0000000000000cf4         db  0x42 ; 'B'
0000000000000cf5         db  0x43 ; 'C'
0000000000000cf6         db  0x5f ; '_'
0000000000000cf7         db  0x32 ; '2'
0000000000000cf8         db  0x2e ; '.'
0000000000000cf9         db  0x34 ; '4'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x47 ; 'G'
0000000000000cfc         db  0x4c ; 'L'
0000000000000cfd         db  0x49 ; 'I'
0000000000000cfe         db  0x42 ; 'B'
0000000000000cff         db  0x43 ; 'C'
                     a225:
0000000000000d00         db         "_2.2.5", 0
0000000000000d07         db  0x5f ; '_'
0000000000000d08         db  0x49 ; 'I'
0000000000000d09         db  0x54 ; 'T'
0000000000000d0a         db  0x4d ; 'M'
0000000000000d0b         db  0x5f ; '_'
0000000000000d0c         db  0x64 ; 'd'
0000000000000d0d         db  0x65 ; 'e'
0000000000000d0e         db  0x72 ; 'r'
0000000000000d0f         db  0x65 ; 'e'
0000000000000d10         db  0x67 ; 'g'
0000000000000d11         db  0x69 ; 'i'
0000000000000d12         db  0x73 ; 's'
0000000000000d13         db  0x74 ; 't'
0000000000000d14         db  0x65 ; 'e'
0000000000000d15         db  0x72 ; 'r'
0000000000000d16         db  0x54 ; 'T'
0000000000000d17         db  0x4d ; 'M'
0000000000000d18         db  0x43 ; 'C'
0000000000000d19         db  0x6c ; 'l'
0000000000000d1a         db  0x6f ; 'o'
0000000000000d1b         db  0x6e ; 'n'
0000000000000d1c         db  0x65 ; 'e'
0000000000000d1d         db  0x54 ; 'T'
0000000000000d1e         db  0x61 ; 'a'
0000000000000d1f         db  0x62 ; 'b'
0000000000000d20         db  0x6c ; 'l'
0000000000000d21         db  0x65 ; 'e'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x5f ; '_'
0000000000000d24         db  0x5f ; '_'
0000000000000d25         db  0x67 ; 'g'
0000000000000d26         db  0x6d ; 'm'
0000000000000d27         db  0x6f ; 'o'
0000000000000d28         db  0x6e ; 'n'
0000000000000d29         db  0x5f ; '_'
0000000000000d2a         db  0x73 ; 's'
0000000000000d2b         db  0x74 ; 't'
0000000000000d2c         db  0x61 ; 'a'
0000000000000d2d         db  0x72 ; 'r'
0000000000000d2e         db  0x74 ; 't'
0000000000000d2f         db  0x5f ; '_'
0000000000000d30         db  0x5f ; '_'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x5f ; '_'
0000000000000d33         db  0x49 ; 'I'
0000000000000d34         db  0x54 ; 'T'
0000000000000d35         db  0x4d ; 'M'
0000000000000d36         db  0x5f ; '_'
0000000000000d37         db  0x72 ; 'r'
0000000000000d38         db  0x65 ; 'e'
0000000000000d39         db  0x67 ; 'g'
0000000000000d3a         db  0x69 ; 'i'
0000000000000d3b         db  0x73 ; 's'
0000000000000d3c         db  0x74 ; 't'
0000000000000d3d         db  0x65 ; 'e'
0000000000000d3e         db  0x72 ; 'r'
0000000000000d3f         db  0x54 ; 'T'
0000000000000d40         db  0x4d ; 'M'
0000000000000d41         db  0x43 ; 'C'
0000000000000d42         db  0x6c ; 'l'
0000000000000d43         db  0x6f ; 'o'
0000000000000d44         db  0x6e ; 'n'
0000000000000d45         db  0x65 ; 'e'
0000000000000d46         db  0x54 ; 'T'
0000000000000d47         db  0x61 ; 'a'
0000000000000d48         db  0x62 ; 'b'
0000000000000d49         db  0x6c ; 'l'
0000000000000d4a         db  0x65 ; 'e'
0000000000000d4b         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xd4c; 0xde4[ (152 bytes)
        ; File offset : [3404; 3556[ (152 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x02 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x02 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x02 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x02 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x02 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x02 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x02 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x02 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x03 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x02 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x02 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x02 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x02 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x02 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x02 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x02 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x02 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x02 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x02 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x02 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x02 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x03 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x02 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x02 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x02 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x02 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x02 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x02 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x02 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x02 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x02 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x02 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x02 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x02 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x02 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x02 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x02 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x04 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x02 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x02 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x02 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x02 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x02 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x02 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x02 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x02 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x02 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x05 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x02 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x02 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x02 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x06 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x02 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x02 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x02 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x02 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x02 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x02 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x02 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x05 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x02 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x02 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x02 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x07 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x02 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x02 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x02 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x02 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x02 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x02 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x02 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x02 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xde8; 0xe58[ (112 bytes)
        ; File offset : [3560; 3672[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000de8         db  0x01 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x06 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x01 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x10 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x13 ; '.'
0000000000000df9         db  0x69 ; 'i'
0000000000000dfa         db  0x69 ; 'i'
0000000000000dfb         db  0x0d ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x07 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xc5 ; '.'
0000000000000e01         db  0x02 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x10 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x85 ; '.'
0000000000000e09         db  0x91 ; '.'
0000000000000e0a         db  0x96 ; '.'
0000000000000e0b         db  0x06 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x06 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xcf ; '.'
0000000000000e11         db  0x02 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x10 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x74 ; 't'
0000000000000e19         db  0x19 ; '.'
0000000000000e1a         db  0x69 ; 'i'
0000000000000e1b         db  0x09 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x05 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xda ; '.'
0000000000000e21         db  0x02 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x10 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x94 ; '.'
0000000000000e29         db  0x91 ; '.'
0000000000000e2a         db  0x96 ; '.'
0000000000000e2b         db  0x06 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x04 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xe6 ; '.'
0000000000000e31         db  0x02 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x10 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x14 ; '.'
0000000000000e39         db  0x69 ; 'i'
0000000000000e3a         db  0x69 ; 'i'
0000000000000e3b         db  0x0d ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x03 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xf1 ; '.'
0000000000000e41         db  0x02 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x10 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x75 ; 'u'
0000000000000e49         db  0x1a ; '.'
0000000000000e4a         db  0x69 ; 'i'
0000000000000e4b         db  0x09 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x02 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xfb ; '.'
0000000000000e51         db  0x02 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xe58; 0x1188[ (816 bytes)
        ; File offset : [3672; 4488[ (816 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e58         db  0x70 ; 'p'
0000000000000e59         db  0x9a ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x30 ; '0'
0000000000000e69         db  0x23 ; '#'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x78 ; 'x'
0000000000000e71         db  0x9a ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xf0 ; '.'
0000000000000e81         db  0x22 ; '"'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x80 ; '.'
0000000000000e89         db  0x9a ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x5b ; '['
0000000000000e99         db  0x67 ; 'g'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xa0 ; '.'
0000000000000ea1         db  0x9a ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x65 ; 'e'
0000000000000eb1         db  0x67 ; 'g'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc0 ; '.'
0000000000000eb9         db  0x9a ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x6b ; 'k'
0000000000000ec9         db  0x67 ; 'g'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xe0 ; '.'
0000000000000ed1         db  0x9a ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x73 ; 's'
0000000000000ee1         db  0x67 ; 'g'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x9b ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x7a ; 'z'
0000000000000ef9         db  0x67 ; 'g'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x20 ; ' '
0000000000000f01         db  0x9b ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x08 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x81 ; '.'
0000000000000f11         db  0x67 ; 'g'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x40 ; '@'
0000000000000f19         db  0x9b ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x86 ; '.'
0000000000000f29         db  0x67 ; 'g'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x80 ; '.'
0000000000000f31         db  0x9b ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x79 ; 'y'
0000000000000f41         db  0x6f ; 'o'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x88 ; '.'
0000000000000f49         db  0x9b ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x81 ; '.'
0000000000000f59         db  0x6f ; 'o'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x90 ; '.'
0000000000000f61         db  0x9b ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x87 ; '.'
0000000000000f71         db  0x6f ; 'o'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x98 ; '.'
0000000000000f79         db  0x9b ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x94 ; '.'
0000000000000f89         db  0x6f ; 'o'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xa0 ; '.'
0000000000000f91         db  0x9b ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xa1 ; '.'
0000000000000fa1         db  0x6f ; 'o'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xa8 ; '.'
0000000000000fa9         db  0x9b ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xb5 ; '.'
0000000000000fb9         db  0x6f ; 'o'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0xb0 ; '.'
0000000000000fc1         db  0x9b ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x08 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xb7 ; '.'
0000000000000fd1         db  0x6f ; 'o'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0xb8 ; '.'
0000000000000fd9         db  0x9b ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x08 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x9a ; '.'
0000000000000fe9         db  0x6f ; 'o'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0xc0 ; '.'
0000000000000ff1         db  0x9b ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x08 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xf3 ; '.'                                         ; DATA XREF=randread_new+97, randread_new+104
0000000000001001         db  0x66 ; 'f'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0xc8 ; '.'
0000000000001009         db  0x9b ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x08 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xbf ; '.'                                         ; DATA XREF=randread_new+270
0000000000001019         db  0x6f ; 'o'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x08 ; '.'
0000000000001021         db  0xa0 ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x08 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x08 ; '.'
0000000000001031         db  0xa0 ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x10 ; '.'                                         ; DATA XREF=randread_new+74, randread_new+176, randread_new+328, randread_free+12
0000000000001039         db  0xa0 ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x08 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x0e ; '.'
0000000000001049         db  0x6f ; 'o'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x60 ; '`'
0000000000001051         db  0xa0 ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x08 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x70 ; 'p'
0000000000001061         db  0xa0 ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x78 ; 'x'
0000000000001069         db  0xa0 ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x08 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0xa1 ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0xd0 ; '.'
0000000000001081         db  0x9f ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x06 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x07 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0xd8 ; '.'
0000000000001099         db  0x9f ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x06 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x22 ; '"'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0xe0 ; '.'
00000000000010b1         db  0x9f ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x06 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x27 ; '''
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0xe8 ; '.'
00000000000010c9         db  0x9f ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x06 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x3f ; '?'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0xf0 ; '.'
00000000000010e1         db  0x9f ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x06 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x42 ; 'B'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x80 ; '.'
00000000000010f9         db  0xa0 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x05 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x45 ; 'E'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x88 ; '.'
0000000000001111         db  0xa0 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x05 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x44 ; 'D'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x90 ; '.'
0000000000001129         db  0xa0 ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x05 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x4a ; 'J'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x98 ; '.'
0000000000001141         db  0xa0 ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x05 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x4b ; 'K'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xa0 ; '.'
0000000000001159         db  0xa0 ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x05 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x47 ; 'G'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xc0 ; '.'
0000000000001171         db  0xa0 ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x05 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x49 ; 'I'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1188; 0x1758[ (1488 bytes)
        ; File offset : [4488; 5976[ (1488 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001188         db  0xe0 ; '.'
0000000000001189         db  0x9d ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x01 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0xe8 ; '.'
00000000000011a1         db  0x9d ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x02 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0xf0 ; '.'
00000000000011b9         db  0x9d ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x03 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0xf8 ; '.'
00000000000011d1         db  0x9d ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x04 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x9e ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x05 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x08 ; '.'
0000000000001201         db  0x9e ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x06 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x10 ; '.'
0000000000001219         db  0x9e ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x08 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x18 ; '.'
0000000000001231         db  0x9e ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x09 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x20 ; ' '
0000000000001249         db  0x9e ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x0a ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x28 ; '('
0000000000001261         db  0x9e ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x0b ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x30 ; '0'
0000000000001279         db  0x9e ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x0c ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x38 ; '8'
0000000000001291         db  0x9e ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x0d ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x40 ; '@'
00000000000012a9         db  0x9e ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x0e ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x48 ; 'H'
00000000000012c1         db  0x9e ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x0f ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x50 ; 'P'
00000000000012d9         db  0x9e ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x10 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x58 ; 'X'
00000000000012f1         db  0x9e ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x11 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x60 ; '`'
0000000000001309         db  0x9e ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x12 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x68 ; 'h'
0000000000001321         db  0x9e ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x13 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x70 ; 'p'
0000000000001339         db  0x9e ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x14 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x78 ; 'x'
0000000000001351         db  0x9e ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x15 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x80 ; '.'
0000000000001369         db  0x9e ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x16 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x88 ; '.'
0000000000001381         db  0x9e ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x17 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x90 ; '.'
0000000000001399         db  0x9e ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x18 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x98 ; '.'
00000000000013b1         db  0x9e ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x19 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0xa0 ; '.'
00000000000013c9         db  0x9e ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x1a ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0xa8 ; '.'
00000000000013e1         db  0x9e ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x1b ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0xb0 ; '.'
00000000000013f9         db  0x9e ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x1c ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0xb8 ; '.'
0000000000001411         db  0x9e ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x1d ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0xc0 ; '.'
0000000000001429         db  0x9e ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x1e ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0xc8 ; '.'
0000000000001441         db  0x9e ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x1f ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0xd0 ; '.'
0000000000001459         db  0x9e ; '.'
000000000000145a         db  0x20 ; ' '
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x07 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x20 ; ' '
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0xd8 ; '.'
0000000000001471         db  0x9e ; '.'
0000000000001472         db  0x20 ; ' '
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x07 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x21 ; '!'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x00 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0xe0 ; '.'
0000000000001489         db  0x9e ; '.'
000000000000148a         db  0x20 ; ' '
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x07 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x23 ; '#'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0xe8 ; '.'
00000000000014a1         db  0x9e ; '.'
00000000000014a2         db  0x20 ; ' '
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x07 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x24 ; '$'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x00 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0xf0 ; '.'
00000000000014b9         db  0x9e ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x07 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x25 ; '%'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0xf8 ; '.'
00000000000014d1         db  0x9e ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x07 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x26 ; '&'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x9f ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x07 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x28 ; '('
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x08 ; '.'
0000000000001501         db  0x9f ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x07 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x29 ; ')'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x10 ; '.'
0000000000001519         db  0x9f ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x07 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x2a ; '*'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x18 ; '.'
0000000000001531         db  0x9f ; '.'
0000000000001532         db  0x20 ; ' '
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x2b ; '+'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x20 ; ' '
0000000000001549         db  0x9f ; '.'
000000000000154a         db  0x20 ; ' '
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x07 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x2c ; ','
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x28 ; '('
0000000000001561         db  0x9f ; '.'
0000000000001562         db  0x20 ; ' '
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x07 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x2d ; '-'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x30 ; '0'
0000000000001579         db  0x9f ; '.'
000000000000157a         db  0x20 ; ' '
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x07 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x2e ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x38 ; '8'
0000000000001591         db  0x9f ; '.'
0000000000001592         db  0x20 ; ' '
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x07 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x2f ; '/'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x40 ; '@'
00000000000015a9         db  0x9f ; '.'
00000000000015aa         db  0x20 ; ' '
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x07 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x30 ; '0'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x48 ; 'H'
00000000000015c1         db  0x9f ; '.'
00000000000015c2         db  0x20 ; ' '
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x07 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x31 ; '1'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x50 ; 'P'
00000000000015d9         db  0x9f ; '.'
00000000000015da         db  0x20 ; ' '
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x07 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x32 ; '2'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x58 ; 'X'
00000000000015f1         db  0x9f ; '.'
00000000000015f2         db  0x20 ; ' '
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x07 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x33 ; '3'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x00 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x60 ; '`'
0000000000001609         db  0x9f ; '.'
000000000000160a         db  0x20 ; ' '
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x07 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x34 ; '4'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x68 ; 'h'
0000000000001621         db  0x9f ; '.'
0000000000001622         db  0x20 ; ' '
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x07 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x35 ; '5'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x00 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x70 ; 'p'
0000000000001639         db  0x9f ; '.'
000000000000163a         db  0x20 ; ' '
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x07 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x36 ; '6'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x78 ; 'x'
0000000000001651         db  0x9f ; '.'
0000000000001652         db  0x20 ; ' '
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x07 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x37 ; '7'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x80 ; '.'
0000000000001669         db  0x9f ; '.'
000000000000166a         db  0x20 ; ' '
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x07 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x38 ; '8'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x88 ; '.'
0000000000001681         db  0x9f ; '.'
0000000000001682         db  0x20 ; ' '
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x07 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x39 ; '9'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x90 ; '.'
0000000000001699         db  0x9f ; '.'
000000000000169a         db  0x20 ; ' '
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x07 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x3a ; ':'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x00 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x98 ; '.'
00000000000016b1         db  0x9f ; '.'
00000000000016b2         db  0x20 ; ' '
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x07 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x3b ; ';'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x00 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0xa0 ; '.'
00000000000016c9         db  0x9f ; '.'
00000000000016ca         db  0x20 ; ' '
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x07 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x3c ; '<'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x00 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0xa8 ; '.'
00000000000016e1         db  0x9f ; '.'
00000000000016e2         db  0x20 ; ' '
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x07 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x3d ; '='
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x00 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0xb0 ; '.'
00000000000016f9         db  0x9f ; '.'
00000000000016fa         db  0x20 ; ' '
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x07 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x3e ; '>'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x00 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0xb8 ; '.'
0000000000001711         db  0x9f ; '.'
0000000000001712         db  0x20 ; ' '
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x07 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x40 ; '@'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x00 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0xc0 ; '.'
0000000000001729         db  0x9f ; '.'
000000000000172a         db  0x20 ; ' '
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x07 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x41 ; 'A'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x00 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0xc8 ; '.'
0000000000001741         db  0x9f ; '.'
0000000000001742         db  0x20 ; ' '
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x07 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x43 ; 'C'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x00 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1758; 0x176f[ (23 bytes)
        ; File offset : [5976; 5999[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001758         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000175c         mov        rax, qword [qword_209fe0]                   ; qword_209fe0
0000000000001763         test       rax, rax
0000000000001766         je         loc_176a

0000000000001768         call       rax

                     loc_176a:
000000000000176a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000176e         ret
                        ; endp
000000000000176f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1770; 0x1b60[ (1008 bytes)
        ; File offset : [6000; 7008[ (1008 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1770:
0000000000001770         push       qword [qword_209dd0]                        ; Begin of unwind block (FDE at 0x7c14), qword_209dd0, CODE XREF=sub_1786+5
0000000000001776         jmp        qword [qword_209dd0+8]                      ; 0x209dd8
                        ; endp
000000000000177c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001780         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+959, main+1374
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x0
000000000000178b         jmp        loc_1770


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001790         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+750, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, randint_free+25, randint_all_free+58, randread_free+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x1
000000000000179b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000017a0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3380+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, randread_error+72
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x2
00000000000017ab         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000017b0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1166, main+1284, close_stream+60, close_stream+104, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, try_nocreate+45, try_tempname_len+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x3
00000000000017bb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_remove:        // remove
00000000000017c0         jmp        qword [remove@GOT]                          ; remove, remove@GOT, CODE XREF=main+1176
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x4
00000000000017cb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000017d0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+716, usage+909
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x5
00000000000017db         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000017e0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=j_close_stdout+10, close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x6
00000000000017eb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000017f0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x7
00000000000017fb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___read_chk:        // __read_chk
0000000000001800         jmp        qword [__read_chk@GOT]                      ; __read_chk, __read_chk@GOT, CODE XREF=randread_new+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x8
000000000000180b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkdir:        // mkdir
0000000000001810         jmp        qword [mkdir@GOT]                           ; mkdir, mkdir@GOT, CODE XREF=try_dir+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x9
000000000000181b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_puts:        // puts
0000000000001820         jmp        qword [puts@GOT]                            ; puts, puts@GOT, CODE XREF=main+1027, main+1132, main+1314
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0xa
000000000000182b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001830         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0xb
000000000000183b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpid:        // getpid
0000000000001840         jmp        qword [getpid@GOT]                          ; getpid, getpid@GOT, CODE XREF=randread_new+407, randread_new+706
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0xc
000000000000184b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001850         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=randread+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0xd
000000000000185b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001860         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0xe
000000000000186b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001870         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0xf
000000000000187b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001880         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x10
000000000000188b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001890         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+927, main+1211, main+1276, main+1338, main+1458, main+1596, main+1646, main+1696, usage+56, usage+102, usage+146
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x11
000000000000189b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000018a0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x12
00000000000018ab         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000018b0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=base_len+4, mfile_name_concat+51, quotearg_buffer_restyled+343, sub_3380+411, sub_3380+1742, try_tempname_len+55, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x13
00000000000018bb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
00000000000018c0         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=try_nocreate+38
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x14
00000000000018cb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000018d0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sub_3380+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, try_nocreate+119, version_etc_va+101, version_etc+192, rpl_mbrtowc+126, randint_genmax+277
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x15
00000000000018db         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
00000000000018e0         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=randread_new+452
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x16
00000000000018eb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000018f0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+150
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x17
00000000000018fb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001900         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x18
000000000000190b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001910         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=main+1502, set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x19
000000000000191b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001920         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x1a
000000000000192b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gettimeofday:        // gettimeofday
0000000000001930         jmp        qword [gettimeofday@GOT]                    ; gettimeofday, gettimeofday@GOT, CODE XREF=randread_new+392, randread_new+632
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x1b
000000000000193b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001940         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=gen_tempname_len+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x1c
000000000000194b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001950         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x1d
000000000000195b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001960         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+1237, randread_new+291, fopen_safer+106, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x1e
000000000000196b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001970         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=try_tempname_len+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x1f
000000000000197b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001980         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x20
000000000000198b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001990         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+248, usage+285, usage+322, usage+359, usage+396, usage+440, usage+1024, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x21
000000000000199b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000019a0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x22
00000000000019ab         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputc_unlocked:        // fputc_unlocked
00000000000019b0         jmp        qword [fputc_unlocked@GOT]                  ; fputc_unlocked, fputc_unlocked@GOT, CODE XREF=usage+211
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x23
00000000000019bb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000019c0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=main+536, main+564, xmemdup+35, randread+190, randread+356
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x24
00000000000019cb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000019d0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36, fopen_safer+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x25
00000000000019db         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
00000000000019e0         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=randread_new+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x26
00000000000019eb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000019f0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=mfile_name_concat+151, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x27
00000000000019fb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001a00         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x28
0000000000001a0b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001a10         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x29
0000000000001a1b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001a20         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x2a
0000000000001a2b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001a30         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x2b
0000000000001a3b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000001a40         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x2c
0000000000001a4b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001a50         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+51, usage+691, usage+884, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x2d
0000000000001a5b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001a60         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+679, usage+772, usage+833, usage+872, usage+975, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x2e
0000000000001a6b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000001a70         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=randread_new+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x2f
0000000000001a7b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
0000000000001a80         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=mfile_name_concat+173, mfile_name_concat+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x30
0000000000001a8b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001a90         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+947, main+1225, main+1301, main+1352, main+1478, main+1616, main+1666, main+1716, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x31
0000000000001a9b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___explicit_bzero_chk:        // __explicit_bzero_chk
0000000000001aa0         jmp        qword [__explicit_bzero_chk@GOT]            ; __explicit_bzero_chk, __explicit_bzero_chk@GOT, CODE XREF=randint_free+16, randint_all_free+50, randread_free+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x32
0000000000001aab         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001ab0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=try_file+17, randread_new+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x33
0000000000001abb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001ac0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x34
0000000000001acb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001ad0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x35
0000000000001adb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001ae0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x36
0000000000001aeb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getppid:        // getppid
0000000000001af0         jmp        qword [getppid@GOT]                         ; getppid, getppid@GOT, CODE XREF=randread_new+419, randread_new+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x37
0000000000001afb         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001b00         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+399, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x38
0000000000001b0b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001b10         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x39
0000000000001b1b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001b20         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x3a
0000000000001b2b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001b30         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3380+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x3b
0000000000001b3b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001b40         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3380+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x3c
0000000000001b4b         jmp        0x1770
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001b50         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3120+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x3d
0000000000001b5b         jmp        0x1770
                        ; endp


        ; Section .plt.got
        ; Range: [0x1b60; 0x1b68[ (8 bytes)
        ; File offset : [7008; 7016[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209ff0:        // qword_209ff0
0000000000001b60         jmp        qword [qword_209ff0]                        ; qword, End of unwind block (FDE at 0x7c14), Begin of unwind block (FDE at 0x7c3c), qword_209ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001b66         align      8
0000000000001b68         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7c3c)
0000000000001b69         db  0x00 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1b70; 0x660e[ (19102 bytes)
        ; File offset : [7024; 26126[ (19102 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_51: int8_t, -81
        ;    var_52: int8_t, -82
        ;    var_60: int64_t, -96


                     main:
0000000000001b70         push       r15                                         ; Begin of unwind block (FDE at 0x7c9c), DATA XREF=_start+29
0000000000001b72         push       r14
0000000000001b74         xor        r15d, r15d
0000000000001b77         push       r13
0000000000001b79         push       r12
0000000000001b7b         xor        r14d, r14d
0000000000001b7e         push       rbp
0000000000001b7f         push       rbx
0000000000001b80         mov        ebp, edi
0000000000001b82         mov        rbx, rsi
0000000000001b85         xor        r12d, r12d
0000000000001b88         xor        r13d, r13d
0000000000001b8b         sub        rsp, 0x38
0000000000001b8f         mov        rdi, qword [rsi]
0000000000001b92         call       set_program_name                            ; set_program_name
0000000000001b97         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7558
0000000000001b9e         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001ba3         call       j_setlocale                                 ; setlocale
0000000000001ba8         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001baf         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001bb6         call       j_bindtextdomain                            ; bindtextdomain
0000000000001bbb         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001bc2         call       j_textdomain                                ; textdomain
0000000000001bc7         lea        rdi, qword [maybe_close_stdout]             ; argument "__func" for method atexit, maybe_close_stdout
0000000000001bce         call       atexit                                      ; atexit
0000000000001bd3         mov        byte [rsp+0x68+var_52], 0x0
0000000000001bd8         mov        byte [rsp+0x68+var_51], 0x0
0000000000001bdd         mov        qword [rsp+0x68+var_60], 0x0
0000000000001be6         nop        word [cs:rax+rax]

                     loc_1bf0:
0000000000001bf0         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+203, main+241, main+266, main+286, main+307, main+326
0000000000001bf7         lea        rdx, qword [aDpqtuv]                        ; argument "__shortopts" for method j_getopt_long, "dp:qtuV"
0000000000001bfe         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001c01         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001c04         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001c06         call       j_getopt_long                               ; getopt_long
0000000000001c0b         cmp        eax, 0xffffffff
0000000000001c0e         je         loc_1d04

0000000000001c14         cmp        eax, 0x70
0000000000001c17         je         loc_1c68

0000000000001c19         jle        loc_1c40

0000000000001c1b         cmp        eax, 0x74
0000000000001c1e         je         loc_1c98

0000000000001c20         jle        loc_1c80

0000000000001c22         cmp        eax, 0x75
0000000000001c25         je         loc_1cb0

0000000000001c2b         add        eax, 0xffffff80
0000000000001c2e         jne        loc_20bd

0000000000001c34         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001c3b         jmp        loc_1bf0
0000000000001c3d         align      64

                     loc_1c40:
0000000000001c40         cmp        eax, 0xffffff7e                             ; CODE XREF=main+169
0000000000001c45         je         loc_218c

0000000000001c4b         jle        loc_1cbb

0000000000001c4d         cmp        eax, 0x56
0000000000001c50         je         loc_1cc6

0000000000001c52         cmp        eax, 0x64
0000000000001c55         jne        loc_20bd

0000000000001c5b         mov        r14d, 0x1
0000000000001c61         jmp        loc_1bf0
0000000000001c63         align      8

                     loc_1c68:
0000000000001c68         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+167
0000000000001c6f         mov        r12d, 0x1
0000000000001c75         mov        qword [rsp+0x68+var_60], rax
0000000000001c7a         jmp        loc_1bf0
0000000000001c7f         align      128

                     loc_1c80:
0000000000001c80         cmp        eax, 0x71                                   ; CODE XREF=main+176
0000000000001c83         jne        loc_20bd

0000000000001c89         mov        byte [rsp+0x68+var_51], 0x1
0000000000001c8e         jmp        loc_1bf0
0000000000001c93         align      8

                     loc_1c98:
0000000000001c98         mov        byte [rsp+0x68+var_52], 0x1                 ; CODE XREF=main+174
0000000000001c9d         mov        r12d, 0x1
0000000000001ca3         jmp        loc_1bf0
0000000000001ca8         align      16

                     loc_1cb0:
0000000000001cb0         mov        r15d, 0x1                                   ; CODE XREF=main+181
0000000000001cb6         jmp        loc_1bf0

                     loc_1cbb:
0000000000001cbb         cmp        eax, 0xffffff7d                             ; CODE XREF=main+219
0000000000001cc0         jne        loc_20bd

                     loc_1cc6:
0000000000001cc6         sub        rsp, 0x8                                    ; CODE XREF=main+224
0000000000001cca         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001cd1         mov        rcx, qword [Version]                        ; Version
0000000000001cd8         push       0x0
0000000000001cda         lea        r9, qword [aEricBlake]                      ; "Eric Blake"
0000000000001ce1         lea        r8, qword [aJimMeyering]                    ; "Jim Meyering"
0000000000001ce8         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x66a1
0000000000001cef         lea        rsi, qword [aMktemp]                        ; "mktemp"
0000000000001cf6         xor        eax, eax
0000000000001cf8         call       version_etc                                 ; version_etc
0000000000001cfd         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001cff         call       j_exit                                      ; exit
                        ; endp

                     loc_1d04:
0000000000001d04         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+158
0000000000001d0b         sub        ebp, eax
0000000000001d0d         cmp        ebp, 0x1
0000000000001d10         ja         loc_209c

0000000000001d16         test       ebp, ebp
0000000000001d18         jne        loc_1ebf

0000000000001d1e         test       r13, r13
0000000000001d21         mov        r12d, 0x1
0000000000001d27         lea        rsi, qword [aTmpxxxxxxxxxx]                 ; "tmp.XXXXXXXXXX"
0000000000001d2e         je         loc_213b

0000000000001d34         lea        rsi, qword [aTmpxxxxxxxxxx]                 ; "tmp.XXXXXXXXXX"
0000000000001d3b         mov        qword [rsp+0x68+var_50], 0xe
0000000000001d44         mov        r12d, 0x1

                     loc_1d4a:
0000000000001d4a         mov        qword [rsp+0x68+var_40], rsi                ; CODE XREF=main+896
0000000000001d4f         xor        eax, eax
0000000000001d51         mov        rdi, r13
0000000000001d54         or         rcx, 0xffffffffffffffff
0000000000001d58         repne scasb al, byte [rdi]
0000000000001d5a         mov        rax, qword [rsp+0x68+var_50]
0000000000001d5f         mov        rdx, rcx
0000000000001d62         not        rdx
0000000000001d65         lea        rbp, qword [rdx-1]
0000000000001d69         mov        qword [rsp+0x68+var_48], rdx
0000000000001d6e         lea        rdi, qword [rax+rbp+1]
0000000000001d73         call       xmalloc                                     ; xmalloc
0000000000001d78         mov        rdx, qword [rsp+0x68+var_50]                ; argument "__n" for method j_memcpy
0000000000001d7d         mov        rsi, qword [rsp+0x68+var_40]                ; argument "__src" for method j_memcpy
0000000000001d82         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000001d85         mov        rbx, rax
0000000000001d88         call       j_memcpy                                    ; memcpy
0000000000001d8d         mov        rax, qword [rsp+0x68+var_50]
0000000000001d92         mov        rcx, qword [rsp+0x68+var_48]
0000000000001d97         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
0000000000001d9a         lea        r8, qword [rbx+rax]
0000000000001d9e         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000001da1         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000001da4         call       j_memcpy                                    ; memcpy
0000000000001da9         mov        r8, rax

                     loc_1dac:
0000000000001dac         test       rbp, rbp                                    ; CODE XREF=main+1537
0000000000001daf         je         loc_1dcc

0000000000001db1         mov        rdi, r8
0000000000001db4         mov        qword [rsp+0x68+var_50], r8
0000000000001db9         call       last_component                              ; last_component
0000000000001dbe         mov        r8, qword [rsp+0x68+var_50]
0000000000001dc3         cmp        rax, r8
0000000000001dc6         jne        loc_21f7

                     loc_1dcc:
0000000000001dcc         mov        rax, r8                                     ; CODE XREF=main+575
0000000000001dcf         sub        rax, rbx
0000000000001dd2         je         loc_21c5

0000000000001dd8         cmp        byte [r8-1], 0x58
0000000000001ddd         jne        loc_21c5

0000000000001de3         lea        rax, qword [rbx+rax-2]
0000000000001de8         lea        rdx, qword [rbx-1]
0000000000001dec         xor        r13d, r13d
0000000000001def         jmp        loc_1e02
0000000000001df1         align      8

                     loc_1df8:
0000000000001df8         sub        rax, 0x1                                    ; CODE XREF=main+665
0000000000001dfc         cmp        byte [rax+1], 0x58
0000000000001e00         jne        loc_1e0b

                     loc_1e02:
0000000000001e02         add        r13, 0x1                                    ; CODE XREF=main+639
0000000000001e06         cmp        rdx, rax
0000000000001e09         jne        loc_1df8

                     loc_1e0b:
0000000000001e0b         cmp        r13, 0x2                                    ; CODE XREF=main+656
0000000000001e0f         jbe        loc_21c5

0000000000001e15         test       r12b, r12b
0000000000001e18         je         loc_1e63

0000000000001e1a         cmp        byte [rsp+0x68+var_52], 0x0
0000000000001e1f         jne        loc_20c7

0000000000001e25         mov        rax, qword [rsp+0x68+var_60]
0000000000001e2a         test       rax, rax
0000000000001e2d         je         loc_1f28

0000000000001e33         cmp        byte [rax], 0x0
0000000000001e36         mov        r12, rax
0000000000001e39         je         loc_1f28

                     loc_1e3f:
0000000000001e3f         cmp        byte [rbx], 0x2f                            ; CODE XREF=main+975, main+988
0000000000001e42         je         loc_2193

                     loc_1e48:
0000000000001e48         mov        rsi, rbx                                    ; CODE XREF=main+1427
0000000000001e4b         mov        rdi, r12
0000000000001e4e         xor        edx, edx
0000000000001e50         call       file_name_concat                            ; file_name_concat
0000000000001e55         mov        r12, rax
0000000000001e58         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000001e5b         mov        rbx, r12
0000000000001e5e         call       j_free                                      ; free

                     loc_1e63:
0000000000001e63         mov        rdi, rbx                                    ; CODE XREF=main+680
0000000000001e66         call       xstrdup                                     ; xstrdup
0000000000001e6b         test       r14b, r14b
0000000000001e6e         mov        r12, rax
0000000000001e71         je         loc_1f51

0000000000001e77         test       r15b, r15b
0000000000001e7a         je         loc_1fbd

0000000000001e80         xor        edx, edx
0000000000001e82         mov        esi, ebp
0000000000001e84         mov        r8, r13
0000000000001e87         mov        ecx, 0x2
0000000000001e8c         mov        rdi, rax
0000000000001e8f         call       gen_tempname_len                            ; gen_tempname_len
0000000000001e94         test       eax, eax
0000000000001e96         mov        ebp, eax
0000000000001e98         je         loc_208f

                     loc_1e9e:
0000000000001e9e         cmp        byte [rsp+0x68+var_51], 0x0                 ; CODE XREF=main+1123
0000000000001ea3         je         loc_2053

                     loc_1ea9:
0000000000001ea9         mov        ebp, 0x1                                    ; CODE XREF=main+1067, main+1186, main+1306

                     loc_1eae:
0000000000001eae         add        rsp, 0x38                                   ; CODE XREF=main+1032, main+1160, main+1230, main+1319
0000000000001eb2         mov        eax, ebp
0000000000001eb4         pop        rbx
0000000000001eb5         pop        rbp
0000000000001eb6         pop        r12
0000000000001eb8         pop        r13
0000000000001eba         pop        r14
0000000000001ebc         pop        r15
0000000000001ebe         ret
                        ; endp

                     loc_1ebf:
0000000000001ebf         test       r13, r13                                    ; CODE XREF=main+424
0000000000001ec2         mov        rsi, qword [rbx+rax*8]
0000000000001ec6         je         loc_213b

0000000000001ecc         or         rcx, 0xffffffffffffffff
0000000000001ed0         xor        eax, eax
0000000000001ed2         mov        rdi, rsi
0000000000001ed5         repne scasb al, byte [rdi]
0000000000001ed7         mov        rdx, rcx
0000000000001eda         not        rdx
0000000000001edd         mov        rcx, rdx
0000000000001ee0         sub        rcx, 0x1
0000000000001ee4         mov        qword [rsp+0x68+var_50], rcx
0000000000001ee9         je         loc_1ef6

0000000000001eeb         cmp        byte [rsi+rcx-1], 0x58
0000000000001ef0         je         loc_1d4a

                     loc_1ef6:
0000000000001ef6         mov        rdi, rsi                                    ; CODE XREF=main+889
0000000000001ef9         call       quote                                       ; quote
0000000000001efe         lea        rsi, qword [aWithSuffixTemp]                ; argument "msgid" for method j_dcgettext, "with --suffix, template %s must end in X"
0000000000001f05         mov        rbx, rax
0000000000001f08         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f0d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f0f         call       j_dcgettext                                 ; dcgettext
0000000000001f14         mov        rcx, rbx
0000000000001f17         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f1a         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001f1c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f21         xor        eax, eax
0000000000001f23         call       j_error                                     ; error

                     loc_1f28:
0000000000001f28         lea        rdi, qword [aTmpdir]                        ; argument "__name" for method j_getenv, "TMPDIR", CODE XREF=main+701, main+713
0000000000001f2f         call       j_getenv                                    ; getenv
0000000000001f34         test       rax, rax
0000000000001f37         mov        r12, rax
0000000000001f3a         je         loc_1f45

0000000000001f3c         cmp        byte [rax], 0x0
0000000000001f3f         jne        loc_1e3f

                     loc_1f45:
0000000000001f45         lea        r12, qword [aTmpxxxxxxxxxx+15]              ; 0x66dd, CODE XREF=main+970
0000000000001f4c         jmp        loc_1e3f

                     loc_1f51:
0000000000001f51         test       r15b, r15b                                  ; CODE XREF=main+769
0000000000001f54         je         loc_1f7d

0000000000001f56         xor        edx, edx
0000000000001f58         mov        r8, r13
0000000000001f5b         mov        ecx, 0x2
0000000000001f60         mov        esi, ebp
0000000000001f62         mov        rdi, rax
0000000000001f65         call       gen_tempname_len                            ; gen_tempname_len
0000000000001f6a         test       eax, eax
0000000000001f6c         js         loc_1f96

0000000000001f6e         mov        rdi, r12                                    ; argument "__s" for method j_puts
0000000000001f71         xor        ebp, ebp
0000000000001f73         call       j_puts                                      ; puts
0000000000001f78         jmp        loc_1eae

                     loc_1f7d:
0000000000001f7d         xor        ecx, ecx                                    ; CODE XREF=main+996
0000000000001f7f         xor        edx, edx
0000000000001f81         mov        r8, r13
0000000000001f84         mov        esi, ebp
0000000000001f86         mov        rdi, rax
0000000000001f89         call       gen_tempname_len                            ; gen_tempname_len
0000000000001f8e         test       eax, eax
0000000000001f90         jns        loc_2043

                     loc_1f96:
0000000000001f96         cmp        byte [rsp+0x68+var_51], 0x0                 ; CODE XREF=main+1020, main+1246
0000000000001f9b         jne        loc_1ea9

0000000000001fa1         mov        rdi, rbx
0000000000001fa4         call       quote                                       ; quote
0000000000001fa9         mov        edx, 0x5
0000000000001fae         mov        rbp, rax
0000000000001fb1         lea        rsi, qword [aFailedToCreate_6ee8]           ; "failed to create file via template %s"
0000000000001fb8         jmp        loc_206a

                     loc_1fbd:
0000000000001fbd         xor        edx, edx                                    ; CODE XREF=main+778
0000000000001fbf         mov        r8, r13
0000000000001fc2         mov        ecx, 0x1
0000000000001fc7         mov        esi, ebp
0000000000001fc9         mov        rdi, rax
0000000000001fcc         call       gen_tempname_len                            ; gen_tempname_len
0000000000001fd1         test       eax, eax
0000000000001fd3         jne        loc_1e9e

                     loc_1fd9:
0000000000001fd9         mov        rdi, r12                                    ; argument "__s" for method j_puts, CODE XREF=main+1244
0000000000001fdc         call       j_puts                                      ; puts
0000000000001fe1         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fe8         mov        byte [stdout_closed], 0x1                   ; stdout_closed
0000000000001fef         call       close_stream                                ; close_stream
0000000000001ff4         test       eax, eax
0000000000001ff6         mov        ebp, eax
0000000000001ff8         je         loc_1eae

0000000000001ffe         call       j___errno_location                          ; __errno_location
0000000000002003         mov        rdi, r12                                    ; argument "__filename" for method j_remove
0000000000002006         mov        ebx, dword [rax]
0000000000002008         call       j_remove                                    ; remove
000000000000200d         cmp        byte [rsp+0x68+var_51], 0x0
0000000000002012         jne        loc_1ea9

0000000000002018         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
000000000000201f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002024         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002026         mov        ebp, 0x1
000000000000202b         call       j_dcgettext                                 ; dcgettext
0000000000002030         mov        esi, ebx                                    ; argument "__errnum" for method j_error
0000000000002032         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002035         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002037         xor        eax, eax
0000000000002039         call       j_error                                     ; error
000000000000203e         jmp        loc_1eae

                     loc_2043:
0000000000002043         mov        edi, eax                                    ; argument "__fd" for method j_close, CODE XREF=main+1056
0000000000002045         call       j_close                                     ; close
000000000000204a         test       eax, eax
000000000000204c         je         loc_1fd9

000000000000204e         jmp        loc_1f96

                     loc_2053:
0000000000002053         mov        rdi, rbx                                    ; CODE XREF=main+819
0000000000002056         call       quote                                       ; quote
000000000000205b         lea        rsi, qword [aFailedToCreate]                ; "failed to create directory via template %s"
0000000000002062         mov        rbp, rax
0000000000002065         mov        edx, 0x5

                     loc_206a:
000000000000206a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1096
000000000000206c         call       j_dcgettext                                 ; dcgettext
0000000000002071         mov        rbx, rax
0000000000002074         call       j___errno_location                          ; __errno_location
0000000000002079         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000207b         mov        rcx, rbp
000000000000207e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002081         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002083         xor        eax, eax
0000000000002085         call       j_error                                     ; error
000000000000208a         jmp        loc_1ea9

                     loc_208f:
000000000000208f         mov        rdi, r12                                    ; argument "__s" for method j_puts, CODE XREF=main+808
0000000000002092         call       j_puts                                      ; puts
0000000000002097         jmp        loc_1eae

                     loc_209c:
000000000000209c         lea        rsi, qword [aTooManyTemplat]                ; argument "msgid" for method j_dcgettext, "too many templates", CODE XREF=main+416
00000000000020a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020aa         call       j_dcgettext                                 ; dcgettext
00000000000020af         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000020b1         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000020b4         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000020b6         xor        eax, eax
00000000000020b8         call       j_error                                     ; error

                     loc_20bd:
00000000000020bd         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+190, main+229, main+275, main+336
00000000000020c2         call       usage                                       ; usage

                     loc_20c7:
00000000000020c7         lea        rdi, qword [aTmpdir]                        ; argument "__name" for method j_getenv, "TMPDIR", CODE XREF=main+687
00000000000020ce         call       j_getenv                                    ; getenv
00000000000020d3         test       rax, rax
00000000000020d6         mov        r12, rax
00000000000020d9         je         loc_20e0

00000000000020db         cmp        byte [rax], 0x0
00000000000020de         jne        loc_20f8

                     loc_20e0:
00000000000020e0         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=main+1385
00000000000020e5         lea        r12, qword [aTmpxxxxxxxxxx+15]              ; 0x66dd
00000000000020ec         test       rax, rax
00000000000020ef         je         loc_20f8

00000000000020f1         cmp        byte [rax], 0x0
00000000000020f4         cmovne     r12, rax

                     loc_20f8:
00000000000020f8         mov        rdi, rbx                                    ; CODE XREF=main+1390, main+1407
00000000000020fb         call       last_component                              ; last_component
0000000000002100         cmp        rax, rbx
0000000000002103         je         loc_1e48

0000000000002109         mov        rdi, rbx
000000000000210c         call       quote                                       ; quote
0000000000002111         lea        rsi, qword [aInvalidTemplat]                ; argument "msgid" for method j_dcgettext, "invalid template, %s, contains directory separator"
0000000000002118         mov        rbx, rax
000000000000211b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002120         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002122         call       j_dcgettext                                 ; dcgettext
0000000000002127         mov        rcx, rbx
000000000000212a         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000212d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000212f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002134         xor        eax, eax
0000000000002136         call       j_error                                     ; error

                     loc_213b:
000000000000213b         mov        rdi, rsi                                    ; CODE XREF=main+446, main+854
000000000000213e         call       xstrdup                                     ; xstrdup
0000000000002143         mov        esi, 0x58                                   ; argument "__c" for method j_strrchr
0000000000002148         mov        rdi, rax                                    ; argument "__s" for method j_strrchr
000000000000214b         mov        rbx, rax
000000000000214e         call       j_strrchr                                   ; strrchr
0000000000002153         test       rax, rax
0000000000002156         lea        r8, qword [rax+1]
000000000000215a         je         loc_2176

                     loc_215c:
000000000000215c         xor        eax, eax                                    ; CODE XREF=main+1562
000000000000215e         or         rcx, 0xffffffffffffffff
0000000000002162         mov        rdi, r8
0000000000002165         repne scasb al, byte [rdi]
0000000000002167         mov        rax, rcx
000000000000216a         not        rax
000000000000216d         lea        rbp, qword [rax-1]
0000000000002171         jmp        loc_1dac

                     loc_2176:
0000000000002176         or         rcx, 0xffffffffffffffff                     ; CODE XREF=main+1514
000000000000217a         mov        rdi, rbx
000000000000217d         repne scasb al, byte [rdi]
000000000000217f         mov        rax, rcx
0000000000002182         not        rax
0000000000002185         lea        r8, qword [rbx+rax-1]
000000000000218a         jmp        loc_215c

                     loc_218c:
000000000000218c         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+213
000000000000218e         call       usage                                       ; usage

                     loc_2193:
0000000000002193         mov        rdi, rbx                                    ; CODE XREF=main+722
0000000000002196         call       quote                                       ; quote
000000000000219b         lea        rsi, qword [aInvalidTemplat_6e78]           ; argument "msgid" for method j_dcgettext, "invalid template, %s; with --tmpdir, it may not be absolute"
00000000000021a2         mov        rbx, rax
00000000000021a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021ac         call       j_dcgettext                                 ; dcgettext
00000000000021b1         mov        rcx, rbx
00000000000021b4         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000021b7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000021b9         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000021be         xor        eax, eax
00000000000021c0         call       j_error                                     ; error

                     loc_21c5:
00000000000021c5         mov        rdi, rbx                                    ; CODE XREF=main+610, main+621, main+671
00000000000021c8         call       quote                                       ; quote
00000000000021cd         lea        rsi, qword [aTooFewXsInTemp]                ; argument "msgid" for method j_dcgettext, "too few X's in template %s"
00000000000021d4         mov        rbx, rax
00000000000021d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021de         call       j_dcgettext                                 ; dcgettext
00000000000021e3         mov        rcx, rbx
00000000000021e6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000021e9         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000021eb         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000021f0         xor        eax, eax
00000000000021f2         call       j_error                                     ; error

                     loc_21f7:
00000000000021f7         mov        rdi, r8                                     ; CODE XREF=main+598
00000000000021fa         call       quote                                       ; quote
00000000000021ff         lea        rsi, qword [aInvalidSuffixS]                ; argument "msgid" for method j_dcgettext, "invalid suffix %s, contains directory separator"
0000000000002206         mov        rbx, rax
0000000000002209         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000220e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002210         call       j_dcgettext                                 ; dcgettext
0000000000002215         mov        rcx, rbx
0000000000002218         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000221b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000221d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002222         xor        eax, eax
0000000000002224         call       j_error                                     ; error
0000000000002229         nop        dword [rax]                                 ; End of unwind block (FDE at 0x7c9c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002230         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7be4)
0000000000002232         mov        r9, rdx
0000000000002235         pop        rsi
0000000000002236         mov        rdx, rsp
0000000000002239         and        rsp, 0xfffffffffffffff0
000000000000223d         push       rax
000000000000223e         push       rsp
000000000000223f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002246         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000224d         lea        rdi, qword [main]                           ; main
0000000000002254         call       qword [qword_209fd0+8]                      ; 0x209fd8
000000000000225a         hlt
                        ; endp
000000000000225b         align      32                                          ; End of unwind block (FDE at 0x7be4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002260         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002267         push       rbp
0000000000002268         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000226f         cmp        rax, rdi
0000000000002272         mov        rbp, rsp
0000000000002275         je         loc_2290

0000000000002277         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
000000000000227e         test       rax, rax
0000000000002281         je         loc_2290

0000000000002283         pop        rbp
0000000000002284         jmp        rax
                        ; endp
0000000000002286         align      16

                     loc_2290:
0000000000002290         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002291         ret
                        ; endp
0000000000002292         align      32

                     register_tm_clones:
00000000000022a0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
00000000000022a7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000022ae         push       rbp
00000000000022af         sub        rsi, rdi
00000000000022b2         mov        rbp, rsp
00000000000022b5         sar        rsi, 0x3
00000000000022b9         mov        rax, rsi
00000000000022bc         shr        rax, 0x3f
00000000000022c0         add        rsi, rax
00000000000022c3         sar        rsi, 0x1
00000000000022c6         je         loc_22e0

00000000000022c8         mov        rax, qword [qword_209fe8]                   ; qword_209fe8
00000000000022cf         test       rax, rax
00000000000022d2         je         loc_22e0

00000000000022d4         pop        rbp
00000000000022d5         jmp        rax
                        ; endp
00000000000022d7         align      32

                     loc_22e0:
00000000000022e0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000022e1         ret
                        ; endp
00000000000022e2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000022f0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000022f7         jne        loc_2328

00000000000022f9         cmp        qword [qword_209ff0], 0x0                   ; qword_209ff0
0000000000002301         push       rbp
0000000000002302         mov        rbp, rsp
0000000000002305         je         loc_2313

0000000000002307         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000230e         call       j_qword_209ff0                              ; qword_209ff0

                     loc_2313:
0000000000002313         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002318         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000231f         pop        rbp
0000000000002320         ret
                        ; endp
0000000000002321         align      8

                     loc_2328:
0000000000002328         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000232a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002330         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002331         mov        rbp, rsp
0000000000002334         pop        rbp
0000000000002335         jmp        register_tm_clones                          ; register_tm_clones
000000000000233a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     maybe_close_stdout:
0000000000002340         cmp        byte [stdout_closed], 0x0                   ; Begin of unwind block (FDE at 0x7c54), stdout_closed, DATA XREF=main+87
0000000000002347         je         j_close_stdout                              ; close_stdout

0000000000002349         sub        rsp, 0x8
000000000000234d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002354         call       close_stream                                ; close_stream
0000000000002359         test       eax, eax
000000000000235b         jne        loc_236d

000000000000235d         add        rsp, 0x8
0000000000002361         ret
                        ; endp
0000000000002362         align      8

                     j_close_stdout:        // close_stdout
0000000000002368         jmp        close_stdout                                ; close_stdout, CODE XREF=maybe_close_stdout+7

                     loc_236d:
000000000000236d         mov        edi, 0x1                                    ; argument "__status" for method j__exit, CODE XREF=maybe_close_stdout+27
0000000000002372         call       j__exit                                     ; _exit
                        ; endp
0000000000002377         align      128                                         ; End of unwind block (FDE at 0x7c54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002380         push       r13                                         ; Begin of unwind block (FDE at 0x7c70), CODE XREF=main+1362, main+1566
0000000000002382         push       r12
0000000000002384         mov        edx, 0x5
0000000000002389         push       rbp
000000000000238a         push       rbx
000000000000238b         mov        ebp, edi
000000000000238d         sub        rsp, 0x88
0000000000002394         mov        rbx, qword [program_name]                   ; program_name
000000000000239b         mov        rax, qword [fs:0x28]
00000000000023a4         mov        qword [rsp+0xa8+var_30], rax
00000000000023a9         xor        eax, eax
00000000000023ab         test       edi, edi
00000000000023ad         je         loc_23dd

00000000000023af         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000023b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023b8         call       j_dcgettext                                 ; dcgettext
00000000000023bd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000023c4         mov        rdx, rax
00000000000023c7         mov        rcx, rbx
00000000000023ca         mov        esi, 0x1
00000000000023cf         xor        eax, eax
00000000000023d1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_23d6:
00000000000023d6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+838
00000000000023d8         call       j_exit                                      ; exit
                        ; endp

                     loc_23dd:
00000000000023dd         lea        rsi, qword [aUsageSOptionTe]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [TEMPLATE]\\n", CODE XREF=usage+45
00000000000023e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023e6         call       j_dcgettext                                 ; dcgettext
00000000000023eb         mov        rdx, rbx
00000000000023ee         mov        rsi, rax
00000000000023f1         mov        edi, 0x1
00000000000023f6         xor        eax, eax
00000000000023f8         call       j___printf_chk                              ; __printf_chk
00000000000023fd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002404         lea        rsi, qword [aCreateATempora]                ; argument "msgid" for method j_dcgettext, "Create a temporary file or directory, safely, and print its name.\\nTEMPLATE must contain at least 3 consecutive 'X's in last component.\\nIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\\n"
000000000000240b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002410         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002412         call       j_dcgettext                                 ; dcgettext
0000000000002417         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000241a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000241d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002422         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002429         lea        rsi, qword [aFilesAreCreate]                ; argument "msgid" for method j_dcgettext, "Files are created u+rw, and directories u+rwx, minus umask restrictions.\\n"
0000000000002430         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002435         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002437         call       j_dcgettext                                 ; dcgettext
000000000000243c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000243f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002442         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002447         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputc_unlocked, stdout@@GLIBC_2.2.5
000000000000244e         mov        edi, 0xa                                    ; argument "__c" for method j_fputc_unlocked
0000000000002453         call       j_fputc_unlocked                            ; fputc_unlocked
0000000000002458         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000245f         lea        rsi, qword [aDDirectoryCrea]                ; argument "msgid" for method j_dcgettext, "  -d, --directory     create a directory, not a file\\n  -u, --dry-run       do not create anything; merely print a name (unsafe)\\n  -q, --quiet         suppress diagnostics about file/dir-creation failure\\n"
0000000000002466         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000246b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000246d         call       j_dcgettext                                 ; dcgettext
0000000000002472         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002475         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002478         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000247d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002484         lea        rsi, qword [aSuffixsuffAppe]                ; argument "msgid" for method j_dcgettext, "      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\\n                        This option is implied if TEMPLATE does not end in X\\n"
000000000000248b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002490         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002492         call       j_dcgettext                                 ; dcgettext
0000000000002497         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000249a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000249d         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024a2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024a9         lea        rsi, qword [aPDirTmpdirdirI]                ; argument "msgid" for method j_dcgettext, "  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\\n                        specified, use $TMPDIR if set, else /tmp.  With\\n                        this option, TEMPLATE must not be an absolute name;\\n                        unlike w…"
00000000000024b0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024b7         call       j_dcgettext                                 ; dcgettext
00000000000024bc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024bf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024c2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024c7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024ce         lea        rsi, qword [aTInterpretTemp]                ; argument "msgid" for method j_dcgettext, "  -t                  interpret TEMPLATE as a single file name component,\\n                        relative to a directory: $TMPDIR, if set; else the\\n                        directory specified via -p; else /tmp [deprecated]\\n"
00000000000024d5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024da         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024dc         call       j_dcgettext                                 ; dcgettext
00000000000024e1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024e4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024e7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024ec         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024f3         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000024fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024ff         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002501         call       j_dcgettext                                 ; dcgettext
0000000000002506         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002509         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000250c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002511         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002518         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
000000000000251f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002524         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002526         call       j_dcgettext                                 ; dcgettext
000000000000252b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000252e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002531         lea        rbx, qword [aMktemp]                        ; "mktemp"
0000000000002538         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000253d         lea        rax, qword [aMktemp+7]                      ; 0x662b
0000000000002544         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000254b         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002554         mov        qword [rsp+0xa8+var_40], 0x0
000000000000255d         mov        rdx, rsp
0000000000002560         mov        qword [rsp+0xa8+var_A8], rax
0000000000002564         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000256b         mov        qword [rsp+0xa8+var_78], rcx
0000000000002570         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002577         mov        qword [rsp+0xa8+var_A0], rax
000000000000257c         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002583         mov        qword [rsp+0xa8+var_68], rcx
0000000000002588         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000258f         mov        qword [rsp+0xa8+var_98], rax
0000000000002594         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000259b         mov        qword [rsp+0xa8+var_58], rcx
00000000000025a0         mov        qword [rsp+0xa8+var_90], rax
00000000000025a5         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000025ac         mov        qword [rsp+0xa8+var_88], rax
00000000000025b1         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000025b8         mov        qword [rsp+0xa8+var_80], rax
00000000000025bd         mov        qword [rsp+0xa8+var_70], rax
00000000000025c2         mov        qword [rsp+0xa8+var_60], rax
00000000000025c7         mov        qword [rsp+0xa8+var_50], rax
00000000000025cc         nop        dword [rax]

                     loc_25d0:
00000000000025d0         add        rdx, 0x10                                   ; CODE XREF=usage+621
00000000000025d4         mov        rdi, qword [rdx]
00000000000025d7         test       rdi, rdi
00000000000025da         je         loc_25ef

00000000000025dc         mov        ecx, 0x7
00000000000025e1         mov        rsi, rbx
00000000000025e4         rep  cmpsb byte [rsi], byte [rdi]
00000000000025e6         seta       al
00000000000025e9         sbb        al, 0x0
00000000000025eb         test       al, al
00000000000025ed         jne        loc_25d0

                     loc_25ef:
00000000000025ef         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+602
00000000000025f3         xor        edi, edi
00000000000025f5         mov        edx, 0x5
00000000000025fa         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002601         test       r12, r12
0000000000002604         je         loc_26cb

000000000000260a         call       j_dcgettext                                 ; dcgettext
000000000000260f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002616         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x66a1
000000000000261d         mov        rsi, rax
0000000000002620         mov        edi, 0x1
0000000000002625         xor        eax, eax
0000000000002627         call       j___printf_chk                              ; __printf_chk
000000000000262c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000262e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002633         call       j_setlocale                                 ; setlocale
0000000000002638         test       rax, rax
000000000000263b         je         loc_2659

000000000000263d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x66af
0000000000002644         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002649         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000264c         call       j_strncmp                                   ; strncmp
0000000000002651         test       eax, eax
0000000000002653         jne        loc_2760

                     loc_2659:
0000000000002659         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+699, usage+1029
0000000000002660         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002662         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002667         call       j_dcgettext                                 ; dcgettext
000000000000266c         lea        rcx, qword [aMktemp]                        ; "mktemp"
0000000000002673         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000267a         mov        rsi, rax
000000000000267d         mov        edi, 0x1
0000000000002682         xor        eax, eax
0000000000002684         call       j___printf_chk                              ; __printf_chk
0000000000002689         cmp        r12, rbx
000000000000268c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6647
0000000000002693         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7558
000000000000269a         cmove      rbx, rcx

                     loc_269e:
000000000000269e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+980
00000000000026a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026ac         call       j_dcgettext                                 ; dcgettext
00000000000026b1         mov        rcx, rbx
00000000000026b4         mov        rsi, rax
00000000000026b7         mov        rdx, r12
00000000000026ba         mov        edi, 0x1
00000000000026bf         xor        eax, eax
00000000000026c1         call       j___printf_chk                              ; __printf_chk
00000000000026c6         jmp        loc_23d6

                     loc_26cb:
00000000000026cb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+644
00000000000026d0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000026d7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x66a1
00000000000026de         mov        rsi, rax
00000000000026e1         mov        edi, 0x1
00000000000026e6         xor        eax, eax
00000000000026e8         call       j___printf_chk                              ; __printf_chk
00000000000026ed         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000026ef         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000026f4         call       j_setlocale                                 ; setlocale
00000000000026f9         test       rax, rax
00000000000026fc         je         loc_2716

00000000000026fe         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x66af
0000000000002705         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000270a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000270d         call       j_strncmp                                   ; strncmp
0000000000002712         test       eax, eax
0000000000002714         jne        loc_2759

                     loc_2716:
0000000000002716         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+892
000000000000271d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002722         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002724         lea        r12, qword [aMktemp]                        ; "mktemp"
000000000000272b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6647
0000000000002732         call       j_dcgettext                                 ; dcgettext
0000000000002737         lea        rcx, qword [aMktemp]                        ; "mktemp"
000000000000273e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002745         mov        rsi, rax
0000000000002748         mov        edi, 0x1
000000000000274d         xor        eax, eax
000000000000274f         call       j___printf_chk                              ; __printf_chk
0000000000002754         jmp        loc_269e

                     loc_2759:
0000000000002759         lea        r12, qword [aMktemp]                        ; "mktemp", CODE XREF=usage+916

                     loc_2760:
0000000000002760         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+723
0000000000002767         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000276e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002770         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002775         call       j_dcgettext                                 ; dcgettext
000000000000277a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000277d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002780         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002785         jmp        loc_2659
000000000000278a         align      16                                          ; End of unwind block (FDE at 0x7c70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000002790         push       r12                                         ; Begin of unwind block (FDE at 0x7cf4), CODE XREF=main+1151, maybe_close_stdout+20, close_stdout+13, close_stdout+51
0000000000002792         push       rbp
0000000000002793         mov        rbp, rdi
0000000000002796         push       rbx
0000000000002797         call       j___fpending                                ; __fpending
000000000000279c         mov        ebx, dword [rbp]
000000000000279f         mov        rdi, rbp
00000000000027a2         mov        r12, rax
00000000000027a5         call       rpl_fclose                                  ; rpl_fclose
00000000000027aa         and        ebx, 0x20
00000000000027ad         test       ebx, ebx
00000000000027af         jne        loc_27c8

00000000000027b1         test       eax, eax
00000000000027b3         je         loc_27bf

00000000000027b5         test       r12, r12
00000000000027b8         mov        eax, 0xffffffff
00000000000027bd         je         loc_27f8

                     loc_27bf:
00000000000027bf         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000027c0         pop        rbp
00000000000027c1         pop        r12
00000000000027c3         ret
                        ; endp
00000000000027c4         align      8

                     loc_27c8:
00000000000027c8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000027ca         jne        loc_27e8

00000000000027cc         call       j___errno_location                          ; __errno_location
00000000000027d1         mov        dword [rax], 0x0
00000000000027d7         mov        eax, 0xffffffff
00000000000027dc         pop        rbx
00000000000027dd         pop        rbp
00000000000027de         pop        r12
00000000000027e0         ret
                        ; endp
00000000000027e1         align      8

                     loc_27e8:
00000000000027e8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000027e9         mov        eax, 0xffffffff
00000000000027ee         pop        rbp
00000000000027ef         pop        r12
00000000000027f1         ret
                        ; endp
00000000000027f2         align      8

                     loc_27f8:
00000000000027f8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000027fd         cmp        dword [rax], 0x9
0000000000002800         pop        rbx
0000000000002801         pop        rbp
0000000000002802         pop        r12
0000000000002804         setne      al
0000000000002807         movzx      eax, al
000000000000280a         neg        eax
000000000000280c         ret
                        ; endp
000000000000280d         align      16                                          ; End of unwind block (FDE at 0x7cf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002810         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x7d44), file_name
0000000000002817         ret
                        ; endp
0000000000002818         align      32                                          ; End of unwind block (FDE at 0x7d44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002820         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7d58), ignore_EPIPE
0000000000002827         ret
                        ; endp
0000000000002828         align      16                                          ; End of unwind block (FDE at 0x7d58)

                     close_stdout:
0000000000002830         push       rbp                                         ; Begin of unwind block (FDE at 0x7d6c), CODE XREF=j_close_stdout
0000000000002831         push       rbx
0000000000002832         sub        rsp, 0x8
0000000000002836         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000283d         call       close_stream                                ; close_stream
0000000000002842         test       eax, eax
0000000000002844         je         loc_285c

0000000000002846         call       j___errno_location                          ; __errno_location
000000000000284b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002852         mov        rbx, rax
0000000000002855         je         loc_2873

0000000000002857         cmp        dword [rax], 0x20
000000000000285a         jne        loc_2873

                     loc_285c:
000000000000285c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002863         call       close_stream                                ; close_stream
0000000000002868         test       eax, eax
000000000000286a         jne        loc_28b2

000000000000286c         add        rsp, 0x8
0000000000002870         pop        rbx
0000000000002871         pop        rbp
0000000000002872         ret
                        ; endp

                     loc_2873:
0000000000002873         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000287a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000287c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002881         call       j_dcgettext                                 ; dcgettext
0000000000002886         mov        rdi, qword [file_name]                      ; file_name
000000000000288d         mov        rbp, rax
0000000000002890         test       rdi, rdi
0000000000002893         je         loc_28bd

0000000000002895         call       quotearg_colon                              ; quotearg_colon
000000000000289a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000289c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000028a3         mov        rcx, rax
00000000000028a6         mov        r8, rbp
00000000000028a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000028ab         xor        eax, eax
00000000000028ad         call       j_error                                     ; error

                     loc_28b2:
00000000000028b2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000028b8         call       j__exit                                     ; _exit
                        ; endp

                     loc_28bd:
00000000000028bd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000028bf         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6f17
00000000000028c6         mov        rcx, rax
00000000000028c9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000028cb         xor        eax, eax
00000000000028cd         call       j_error                                     ; error
00000000000028d2         jmp        loc_28b2
00000000000028d4         align      32                                          ; End of unwind block (FDE at 0x7d6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
00000000000028e0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x7d9c), CODE XREF=main+585, main+1419, mfile_name_concat+23
00000000000028e3         mov        rax, rdi
00000000000028e6         cmp        dl, 0x2f
00000000000028e9         jne        loc_28fc

00000000000028eb         nop        dword [rax+rax]

                     loc_28f0:
00000000000028f0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000028f4         movzx      edx, byte [rax]
00000000000028f7         cmp        dl, 0x2f
00000000000028fa         je         loc_28f0

                     loc_28fc:
00000000000028fc         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000028fe         je         loc_293a

0000000000002900         mov        rcx, rax
0000000000002903         xor        esi, esi
0000000000002905         jmp        loc_2925
0000000000002907         align      16

                     loc_2910:
0000000000002910         test       sil, sil                                    ; CODE XREF=last_component+72
0000000000002913         je         loc_291a

0000000000002915         mov        rax, rcx
0000000000002918         xor        esi, esi

                     loc_291a:
000000000000291a         add        rcx, 0x1                                    ; CODE XREF=last_component+51
000000000000291e         movzx      edx, byte [rcx]
0000000000002921         test       dl, dl
0000000000002923         je         loc_293a

                     loc_2925:
0000000000002925         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
0000000000002928         jne        loc_2910

000000000000292a         add        rcx, 0x1
000000000000292e         movzx      edx, byte [rcx]
0000000000002931         mov        esi, 0x1
0000000000002936         test       dl, dl
0000000000002938         jne        loc_2925

                     loc_293a:
000000000000293a         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000293c         align      64                                          ; End of unwind block (FDE at 0x7d9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000002940         push       rbx                                         ; Begin of unwind block (FDE at 0x7db0), CODE XREF=mfile_name_concat+34
0000000000002941         mov        rbx, rdi
0000000000002944         call       j_strlen                                    ; strlen
0000000000002949         cmp        rax, 0x1
000000000000294d         jbe        loc_295a

000000000000294f         cmp        byte [rbx+rax-1], 0x2f
0000000000002954         lea        rdx, qword [rax-1]
0000000000002958         je         loc_2968

                     loc_295a:
000000000000295a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000295b         ret
                        ; endp
000000000000295c         align      32

                     loc_2960:
0000000000002960         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000002963         nop        dword [rax+rax]

                     loc_2968:
0000000000002968         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000296c         je         loc_2980

000000000000296e         cmp        byte [rbx+rdx-1], 0x2f
0000000000002973         lea        rax, qword [rdx-1]
0000000000002977         je         loc_2960

0000000000002979         mov        rax, rdx
000000000000297c         pop        rbx
000000000000297d         ret
                        ; endp
000000000000297e         align      128

                     loc_2980:
0000000000002980         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000002985         pop        rbx
0000000000002986         ret
                        ; endp
0000000000002987         align      16                                          ; End of unwind block (FDE at 0x7db0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_name_concat:
0000000000002990         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7ddc), CODE XREF=main+736
0000000000002994         call       mfile_name_concat                           ; mfile_name_concat
0000000000002999         test       rax, rax
000000000000299c         je         loc_29a3

000000000000299e         add        rsp, 0x8
00000000000029a2         ret
                        ; endp

                     loc_29a3:
00000000000029a3         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29a8:
00000000000029a8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7ddc)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     mfile_name_concat:
00000000000029b0         push       r15                                         ; Begin of unwind block (FDE at 0x7dfc), CODE XREF=file_name_concat+4
00000000000029b2         push       r14
00000000000029b4         mov        r15, rdx
00000000000029b7         push       r13
00000000000029b9         push       r12
00000000000029bb         mov        r12, rdi
00000000000029be         push       rbp
00000000000029bf         push       rbx
00000000000029c0         mov        rbp, rsi
00000000000029c3         sub        rsp, 0x18
00000000000029c7         call       last_component                              ; last_component
00000000000029cc         mov        rbx, rax
00000000000029cf         mov        rdi, rax
00000000000029d2         call       base_len                                    ; base_len
00000000000029d7         sub        rbx, r12
00000000000029da         mov        r13, rax
00000000000029dd         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
00000000000029e0         add        rbx, rax
00000000000029e3         call       j_strlen                                    ; strlen
00000000000029e8         test       r13, r13
00000000000029eb         mov        r14, rax
00000000000029ee         je         loc_2a20

00000000000029f0         cmp        byte [r12+rbx-1], 0x2f
00000000000029f6         je         loc_2aa0

00000000000029fc         xor        eax, eax
00000000000029fe         cmp        byte [rbp], 0x2f
0000000000002a02         mov        edx, 0x0
0000000000002a07         setne      al
0000000000002a0a         mov        qword [rsp+0x48+var_48], rax
0000000000002a0e         mov        eax, 0x2f
0000000000002a13         cmove      eax, edx
0000000000002a16         mov        byte [rsp+0x48+var_39], al
0000000000002a1a         jmp        loc_2a3e
0000000000002a1c         align      32

                     loc_2a20:
0000000000002a20         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
0000000000002a22         cmp        byte [rbp], 0x2f
0000000000002a26         mov        edx, 0x0
0000000000002a2b         sete       al
0000000000002a2e         mov        qword [rsp+0x48+var_48], rax
0000000000002a32         mov        eax, 0x2e
0000000000002a37         cmovne     eax, edx
0000000000002a3a         mov        byte [rsp+0x48+var_39], al

                     loc_2a3e:
0000000000002a3e         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
0000000000002a43         add        rdi, qword [rsp+0x48+var_48]                ; argument "__size" for method j_malloc
0000000000002a47         call       j_malloc                                    ; malloc
0000000000002a4c         test       rax, rax
0000000000002a4f         mov        r13, rax
0000000000002a52         je         loc_2a86

0000000000002a54         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
0000000000002a57         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
0000000000002a5a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
0000000000002a5d         call       j_mempcpy                                   ; mempcpy
0000000000002a62         movzx      ecx, byte [rsp+0x48+var_39]
0000000000002a67         mov        rdi, qword [rsp+0x48+var_48]
0000000000002a6b         add        rdi, rax
0000000000002a6e         test       r15, r15
0000000000002a71         mov        byte [rax], cl
0000000000002a73         je         loc_2a78

0000000000002a75         mov        qword [r15], rdi

                     loc_2a78:
0000000000002a78         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
0000000000002a7b         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
0000000000002a7e         call       j_mempcpy                                   ; mempcpy
0000000000002a83         mov        byte [rax], 0x0

                     loc_2a86:
0000000000002a86         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
0000000000002a8a         mov        rax, r13
0000000000002a8d         pop        rbx
0000000000002a8e         pop        rbp
0000000000002a8f         pop        r12
0000000000002a91         pop        r13
0000000000002a93         pop        r14
0000000000002a95         pop        r15
0000000000002a97         ret
                        ; endp
0000000000002a98         align      32

                     loc_2aa0:
0000000000002aa0         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
0000000000002aa8         mov        byte [rsp+0x48+var_39], 0x0
0000000000002aad         jmp        loc_2a3e
0000000000002aaf         align      16                                          ; End of unwind block (FDE at 0x7dfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002ab0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7e4c), CODE XREF=main+34
0000000000002ab3         push       rbx
0000000000002ab4         je         loc_2b2d

0000000000002ab6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002abb         mov        rbx, rdi
0000000000002abe         call       j_strrchr                                   ; strrchr
0000000000002ac3         test       rax, rax
0000000000002ac6         je         loc_2b1d

0000000000002ac8         lea        r8, qword [rax+1]
0000000000002acc         mov        rdx, r8
0000000000002acf         sub        rdx, rbx
0000000000002ad2         cmp        rdx, 0x6
0000000000002ad6         jle        loc_2b1d

0000000000002ad8         lea        rsi, qword [rax-6]
0000000000002adc         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002ae3         mov        ecx, 0x7
0000000000002ae8         rep  cmpsb byte [rsi], byte [rdi]
0000000000002aea         seta       dl
0000000000002aed         sbb        dl, 0x0
0000000000002af0         test       dl, dl
0000000000002af2         jne        loc_2b1d

0000000000002af4         lea        rdi, qword [aLibs+8]                        ; 0x6f60
0000000000002afb         mov        ecx, 0x3
0000000000002b00         mov        rsi, r8
0000000000002b03         mov        rbx, r8
0000000000002b06         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b08         seta       dl
0000000000002b0b         sbb        dl, 0x0
0000000000002b0e         test       dl, dl
0000000000002b10         jne        loc_2b1d

0000000000002b12         lea        rbx, qword [rax+4]
0000000000002b16         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2b1d:
0000000000002b1d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002b24         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002b2b         pop        rbx
0000000000002b2c         ret
                        ; endp

                     loc_2b2d:
0000000000002b2d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002b34         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002b3b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002b40         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002b45         call       j_fwrite                                    ; fwrite
0000000000002b4a         call       j_abort                                     ; abort
                        ; endp
0000000000002b4f         align      16                                          ; End of unwind block (FDE at 0x7e4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002b50         push       rbp                                         ; Begin of unwind block (FDE at 0x7e6c), CODE XREF=sub_3380+2597, sub_3380+2619
0000000000002b51         push       rbx
0000000000002b52         mov        rbp, rdi
0000000000002b55         mov        ebx, esi
0000000000002b57         sub        rsp, 0x8
0000000000002b5b         call       locale_charset                              ; locale_charset
0000000000002b60         movzx      edx, byte [rax]
0000000000002b63         and        edx, 0xffffffdf
0000000000002b66         cmp        dl, 0x55
0000000000002b69         je         loc_2be0

0000000000002b6b         cmp        dl, 0x47
0000000000002b6e         je         loc_2b90

                     loc_2b70:
0000000000002b70         lea        rax, qword [aLibs+27]                       ; 0x6f73, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002b77         lea        rdx, qword [aLibs+29]                       ; 0x6f75
0000000000002b7e         cmp        ebx, 0x9
0000000000002b81         cmovne     rax, rdx
0000000000002b85         add        rsp, 0x8
0000000000002b89         pop        rbx
0000000000002b8a         pop        rbp
0000000000002b8b         ret
                        ; endp
0000000000002b8c         align      16

                     loc_2b90:
0000000000002b90         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002b94         and        edx, 0xffffffdf
0000000000002b97         cmp        dl, 0x42
0000000000002b9a         jne        loc_2b70

0000000000002b9c         cmp        byte [rax+2], 0x31
0000000000002ba0         jne        loc_2b70

0000000000002ba2         cmp        byte [rax+3], 0x38
0000000000002ba6         jne        loc_2b70

0000000000002ba8         cmp        byte [rax+4], 0x30
0000000000002bac         jne        loc_2b70

0000000000002bae         cmp        byte [rax+5], 0x33
0000000000002bb2         jne        loc_2b70

0000000000002bb4         cmp        byte [rax+6], 0x30
0000000000002bb8         jne        loc_2b70

0000000000002bba         cmp        byte [rax+7], 0x0
0000000000002bbe         jne        loc_2b70

0000000000002bc0         cmp        byte [rbp], 0x60
0000000000002bc4         lea        rax, qword [aLibs+20]                       ; 0x6f6c
0000000000002bcb         lea        rdx, qword [aLibs+24]                       ; 0x6f70
0000000000002bd2         cmovne     rax, rdx
0000000000002bd6         add        rsp, 0x8
0000000000002bda         pop        rbx
0000000000002bdb         pop        rbp
0000000000002bdc         ret
                        ; endp
0000000000002bdd         align      32

                     loc_2be0:
0000000000002be0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002be4         and        edx, 0xffffffdf
0000000000002be7         cmp        dl, 0x54
0000000000002bea         jne        loc_2b70

0000000000002bec         movzx      edx, byte [rax+2]
0000000000002bf0         and        edx, 0xffffffdf
0000000000002bf3         cmp        dl, 0x46
0000000000002bf6         jne        loc_2b70

0000000000002bfc         cmp        byte [rax+3], 0x2d
0000000000002c00         jne        loc_2b70

0000000000002c06         cmp        byte [rax+4], 0x38
0000000000002c0a         jne        loc_2b70

0000000000002c10         cmp        byte [rax+5], 0x0
0000000000002c14         jne        loc_2b70

0000000000002c1a         cmp        byte [rbp], 0x60
0000000000002c1e         lea        rax, qword [aLibs+12]                       ; 0x6f64
0000000000002c25         lea        rdx, qword [aLibs+16]                       ; 0x6f68
0000000000002c2c         cmovne     rax, rdx
0000000000002c30         add        rsp, 0x8
0000000000002c34         pop        rbx
0000000000002c35         pop        rbp
0000000000002c36         ret
                        ; endp
0000000000002c37         align      64                                          ; End of unwind block (FDE at 0x7e6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002c40         push       r15                                         ; Begin of unwind block (FDE at 0x7eb0), CODE XREF=sub_3380+1165, sub_3380+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002c42         push       r14
0000000000002c44         mov        r15d, r8d
0000000000002c47         push       r13
0000000000002c49         push       r12
0000000000002c4b         mov        r14, rdi
0000000000002c4e         push       rbp
0000000000002c4f         push       rbx
0000000000002c50         mov        ebx, r9d
0000000000002c53         mov        r13, rsi
0000000000002c56         mov        rbp, rcx
0000000000002c59         and        ebx, 0x2
0000000000002c5c         sub        rsp, 0xb8
0000000000002c63         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002c6b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002c70         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002c75         mov        dword [rsp+0xe8+var_70], r9d
0000000000002c7a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002c7f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002c87         mov        qword [rsp+0xe8+var_80], rax
0000000000002c8c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002c94         mov        qword [rsp+0xe8+var_88], rax
0000000000002c99         mov        rax, qword [fs:0x28]
0000000000002ca2         mov        qword [rsp+0xe8+var_40], rax
0000000000002caa         xor        eax, eax
0000000000002cac         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002cb1         cmp        r15d, 0xa
0000000000002cb5         mov        qword [rsp+0xe8+var_90], rax
0000000000002cba         ja         loc_3e6f

0000000000002cc0         lea        rcx, qword [switch_table_6fe0]              ; switch_table_6fe0
0000000000002cc7         mov        edx, r15d
0000000000002cca         movsxd     rax, dword [rcx+rdx*4]
0000000000002cce         add        rax, rcx
0000000000002cd1         jmp        rax                                         ; switch statement using table at 0x6fe0, with 11 cases, 0x2cd3,0x38a4,0x3900,0x3955,0x399a,0x39d4,0x3a7a,0x3ab4,0x3ca8

                     loc_2cd3:
0000000000002cd3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3380+1318
0000000000002cd8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002cdd         xor        r12d, r12d
0000000000002ce0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002ce9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002cee         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2cf3:
0000000000002cf3         lea        rax, qword [aLibs+29]                       ; 0x6f75, CODE XREF=sub_3380+1876
0000000000002cfa         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002d03         xor        r15d, r15d
0000000000002d06         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002d0e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2d13:
0000000000002d13         xor        r11d, r11d                                  ; CODE XREF=sub_3380+180, sub_3380+1400, sub_3380+1488, sub_3380+1557, sub_3380+1615, sub_3380+1781, sub_3380+1839, sub_3380+2408, sub_3380+2485
0000000000002d16         mov        rax, rbp
0000000000002d19         mov        r8d, r12d
0000000000002d1c         mov        rbp, r11
0000000000002d1f         mov        r11, rax
0000000000002d22         nop        word [rax+rax]

                     loc_2d28:
0000000000002d28         cmp        r11, rbp                                    ; CODE XREF=sub_2e30+194
0000000000002d2b         setne      r12b
0000000000002d2f         cmp        r11, 0xffffffffffffffff
0000000000002d33         jne        loc_2d42

0000000000002d35         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002d3a         cmp        byte [rax+rbp], 0x0
0000000000002d3e         setne      r12b

                     loc_2d42:
0000000000002d42         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002d45         je         loc_33a0

0000000000002d4b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002d50         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002d55         lea        r9, qword [rdi+rbp]
0000000000002d59         setne      al
0000000000002d5c         and        al, byte [rsp+0xe8+var_DB]
0000000000002d60         mov        r10d, eax
0000000000002d63         je         loc_2e10

0000000000002d69         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002d6e         test       rax, rax
0000000000002d71         je         loc_31a0

0000000000002d77         cmp        r11, 0xffffffffffffffff
0000000000002d7b         lea        rbx, qword [rbp+rax]
0000000000002d80         jne        loc_2db0

0000000000002d82         cmp        rax, 0x1
0000000000002d86         jbe        loc_2db0

0000000000002d88         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002d8d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002d92         mov        qword [rsp+0xe8+var_C0], r9
0000000000002d97         call       j_strlen                                    ; strlen
0000000000002d9c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002da2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002da8         mov        r11, rax
0000000000002dab         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2db0:
0000000000002db0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002db3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002db8         ja         loc_3370

0000000000002dbe         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002dc3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002dc8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002dcb         mov        qword [rsp+0xe8+var_A8], r11
0000000000002dd0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002dd5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002dda         call       j_memcmp                                    ; memcmp
0000000000002ddf         test       eax, eax
0000000000002de1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002de6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002dec         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002df1         jne        loc_3370

0000000000002df7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002dfc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002e02         jne        loc_3d85

0000000000002e08         nop        dword [rax+rax]

                     loc_2e10:
0000000000002e10         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3360+19
0000000000002e14         cmp        bl, 0x7e
0000000000002e17         ja         loc_3138

0000000000002e1d         lea        rcx, qword [switch_table_6fe0+44]           ; 0x700c
0000000000002e24         movzx      edx, bl
0000000000002e27         movsxd     rax, dword [rcx+rdx*4]
0000000000002e2b         add        rax, rcx
0000000000002e2e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2e30:
0000000000002e30         xor        r10d, r10d
0000000000002e33         cmp        r11, 0x1
0000000000002e37         setne      al
0000000000002e3a         cmp        r11, 0xffffffffffffffff
0000000000002e3e         jne        loc_2e4c

0000000000002e40         mov        rax, qword [rsp+arg_8]
0000000000002e45         cmp        byte [rax+1], 0x0
0000000000002e49         setne      al

                     loc_2e4c:
0000000000002e4c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e30+14
0000000000002e51         sete       dl
0000000000002e54         test       al, al
0000000000002e56         je         loc_30a8

                     loc_2e5c:
0000000000002e5c         xor        r12d, r12d                                  ; CODE XREF=sub_30a0+11
0000000000002e5f         xor        eax, eax
0000000000002e61         nop        dword [rax]
                        ; endp

                     loc_2e68:
0000000000002e68         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3050+50, sub_3120+119
0000000000002e6d         jne        loc_2f82

0000000000002e73         test       dl, dl
0000000000002e75         jne        loc_2f82

                     loc_2e7b:
0000000000002e7b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2f30+87
0000000000002e80         test       rsi, rsi
0000000000002e83         je         loc_2e99

0000000000002e85         mov        edx, ebx
0000000000002e87         shr        dl, 0x5
0000000000002e8a         movzx      edx, dl
0000000000002e8d         mov        edx, dword [rsi+rdx*4]
0000000000002e90         bt         edx, ebx
0000000000002e93         jb         loc_2fe3

                     loc_2e99:
0000000000002e99         test       r10b, r10b                                  ; CODE XREF=sub_2e30+83, sub_2f30+93
0000000000002e9c         jne        loc_2fe3

0000000000002ea2         xor        eax, 0x1
0000000000002ea5         add        rbp, 0x1
0000000000002ea9         and        eax, r8d

                     loc_2eac:
0000000000002eac         test       al, al                                      ; CODE XREF=sub_3380+936
0000000000002eae         je         loc_2ed0

0000000000002eb0         cmp        r13, r15
0000000000002eb3         jbe        loc_2eba

0000000000002eb5         mov        byte [r14+r15], 0x27

                     loc_2eba:
0000000000002eba         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2e30+131
0000000000002ebe         cmp        r13, rax
0000000000002ec1         jbe        loc_2ec9

0000000000002ec3         mov        byte [r14+r15+1], 0x27

                     loc_2ec9:
0000000000002ec9         add        r15, 0x2                                    ; CODE XREF=sub_2e30+145
0000000000002ecd         xor        r8d, r8d

                     loc_2ed0:
0000000000002ed0         cmp        r15, r13                                    ; CODE XREF=sub_2e30+126, sub_2f30+275, sub_3380+869
0000000000002ed3         jae        loc_2ed9

0000000000002ed5         mov        byte [r14+r15], bl

                     loc_2ed9:
0000000000002ed9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2e30+163
0000000000002ede         add        r15, 0x1
0000000000002ee2         mov        eax, 0x0
0000000000002ee7         test       r12b, r12b
0000000000002eea         cmove      edi, eax
0000000000002eed         mov        byte [rsp+0xe8+var_DA], dil
0000000000002ef2         jmp        loc_2d28
0000000000002ef7         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f00:
0000000000002f00         xor        r10d, r10d
0000000000002f03         mov        eax, dword [rsp+arg_0]
0000000000002f07         cmp        eax, 0x2
0000000000002f0a         je         loc_34c8

0000000000002f10         cmp        eax, 0x5
0000000000002f13         je         loc_3488

0000000000002f19         cmp        eax, 0x2
0000000000002f1c         mov        ebx, 0x3f
0000000000002f21         sete       dl
0000000000002f24         xor        r12d, r12d
0000000000002f27         xor        eax, eax
0000000000002f29         jmp        sub_2e30+56
                        ; endp
0000000000002f2e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f30:
0000000000002f30         xor        r10d, r10d
0000000000002f33         cmp        dword [rsp+arg_0], 0x2
0000000000002f38         je         loc_3440

0000000000002f3e         mov        byte [rsp+arg_74], r12b
0000000000002f43         xor        edx, edx
0000000000002f45         xor        eax, eax
0000000000002f47         mov        ebx, 0x27
0000000000002f4c         jmp        sub_2e30+56
                        ; endp
0000000000002f51         nop        dword [rax]
0000000000002f58         mov        edx, 0x9
0000000000002f5d         mov        ebx, 0x74

                     loc_2f62:
0000000000002f62         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_30f0+10, sub_31e0+37, sub_3320+53
0000000000002f67         sete       al
0000000000002f6a         and        al, byte [rsp+arg_7]
0000000000002f6e         jne        sub_30a0+30

0000000000002f74         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2f30+114
0000000000002f79         jne        loc_2fe0

                     loc_2f7b:
0000000000002f7b         mov        ebx, edx                                    ; CODE XREF=sub_3050+18
0000000000002f7d         xor        r12d, r12d
0000000000002f80         xor        eax, eax
                        ; endp

                     loc_2f82:
0000000000002f82         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2e30+61, sub_2e30+69
0000000000002f87         jne        loc_2e7b

0000000000002f8d         jmp        loc_2e99
0000000000002f92         nop        word [rax+rax]
0000000000002f98         mov        edx, 0x8
0000000000002f9d         mov        ebx, 0x62
0000000000002fa2         jmp        sub_2f30+68
0000000000002fa4         nop        dword [rax]
0000000000002fa8         cmp        dword [rsp+8], 0x2
0000000000002fad         je         sub_3380                                    ; sub_3380
0000000000002fb3         cmp        byte [rsp+0xd], 0x0
0000000000002fb8         je         sub_31c0+16

                     loc_2fbe:
0000000000002fbe         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31c0+8
0000000000002fc3         je         loc_31d0

0000000000002fc9         cmp        qword [rsp+arg_10], 0x0
0000000000002fcf         jne        loc_338b

0000000000002fd5         mov        ebx, 0x5c
0000000000002fda         nop        word [rax+rax]
                        ; endp

                     loc_2fe0:
0000000000002fe0         xor        r12d, r12d                                  ; CODE XREF=sub_2f30+73, sub_3320+29
                        ; endp

                     loc_2fe3:
0000000000002fe3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2e30+99, sub_2e30+108
0000000000002fe8         sete       dl
0000000000002feb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002ff0         mov        eax, edx
0000000000002ff2         jne        loc_3848

0000000000002ff8         mov        eax, r8d
0000000000002ffb         xor        eax, 0x1
0000000000002ffe         and        al, dl
0000000000003000         je         loc_3031

0000000000003002         cmp        r13, r15
0000000000003005         jbe        loc_300c

0000000000003007         mov        byte [r14+r15], 0x27

                     loc_300c:
000000000000300c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2f30+213
0000000000003010         cmp        r13, rdx
0000000000003013         jbe        loc_301b

0000000000003015         mov        byte [r14+r15+1], 0x24

                     loc_301b:
000000000000301b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2f30+227
000000000000301f         cmp        r13, rdx
0000000000003022         jbe        loc_302a

0000000000003024         mov        byte [r14+r15+2], 0x27

                     loc_302a:
000000000000302a         add        r15, 0x3                                    ; CODE XREF=sub_2f30+242
000000000000302e         mov        r8d, eax

                     loc_3031:
0000000000003031         cmp        r13, r15                                    ; CODE XREF=sub_2f30+208
0000000000003034         jbe        loc_303b

0000000000003036         mov        byte [r14+r15], 0x5c

                     loc_303b:
000000000000303b         add        r15, 0x1                                    ; CODE XREF=sub_2f30+260
000000000000303f         add        rbp, 0x1
0000000000003043         jmp        loc_2ed0
0000000000003048         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3050:
0000000000003050         cmp        byte [rsp+arg_5], 0x0
0000000000003055         jne        loc_3223

000000000000305b         xor        edx, edx
000000000000305d         test       byte [rsp+arg_70], 0x1
0000000000003062         je         loc_2f7b

0000000000003068         add        rbp, 0x1
000000000000306c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003071         nop        dword [rax]
0000000000003078         cmp        dword [rsp+8], 0x2
000000000000307d         sete       dl
0000000000003080         xor        eax, eax
0000000000003082         jmp        sub_2e30+56
0000000000003087         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3090:
0000000000003090         mov        edx, 0x7
0000000000003095         mov        ebx, 0x61
000000000000309a         jmp        sub_2f30+68
                        ; endp
000000000000309f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30a0:
00000000000030a0         cmp        dword [rsp+8], 0x2
00000000000030a5         sete       dl
                        ; endp

                     loc_30a8:
00000000000030a8         test       rbp, rbp                                    ; CODE XREF=sub_2e30+38, sub_32c0+35
00000000000030ab         jne        loc_2e5c

00000000000030b1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_32f0+43
00000000000030b6         and        al, dl
00000000000030b8         je         sub_2e30+56

00000000000030be         mov        rbp, r11
00000000000030c1         mov        dword [rsp+arg_0], 0x2
00000000000030c9         jmp        sub_3380+1097
                        ; endp
00000000000030ce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30d0:
00000000000030d0         cmp        dword [rsp+arg_0], 0x2
00000000000030d5         sete       dl
00000000000030d8         xor        r12d, r12d
00000000000030db         jmp        sub_30a0+17
                        ; endp
00000000000030dd         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30e0:
00000000000030e0         cmp        dword [rsp+arg_0], 0x2
00000000000030e5         mov        ebx, 0x20
00000000000030ea         sete       dl
00000000000030ed         jmp        sub_30a0+17
                        ; endp
00000000000030ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_30f0:
00000000000030f0         mov        edx, 0xd
00000000000030f5         mov        ebx, 0x72
00000000000030fa         jmp        loc_2f62
00000000000030ff         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3100:
0000000000003100         mov        edx, 0xc
0000000000003105         mov        ebx, 0x66
000000000000310a         jmp        sub_2f30+68
                        ; endp
000000000000310f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3110:
0000000000003110         mov        edx, 0xb
0000000000003115         mov        ebx, 0x76
000000000000311a         jmp        sub_2f30+68
                        ; endp
000000000000311f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3120:
0000000000003120         mov        edx, 0xa
0000000000003125         mov        ebx, 0x6e
000000000000312a         jmp        sub_2f30+50
                        ; endp
000000000000312f         align      16

                     loc_3130:
0000000000003130         xor        r10d, r10d                                  ; CODE XREF=sub_3120+135
0000000000003133         nop        dword [rax+rax]

                     loc_3138:
0000000000003138         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000313e         jne        loc_34e8

0000000000003144         mov        qword [rsp+0xe8+var_B0], r11
0000000000003149         mov        byte [rsp+0xe8+var_B8], r8b
000000000000314e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003153         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003158         mov        rcx, qword [rax]
000000000000315b         movzx      edx, bl
000000000000315e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003164         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000316a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000316f         mov        edi, 0x1
0000000000003174         movzx      eax, word [rcx+rdx*2]
0000000000003178         and        ax, 0x4000
000000000000317c         setne      r12b
0000000000003180         sete       al
0000000000003183         and        al, byte [rsp+0xe8+var_DB]

                     loc_3187:
0000000000003187         test       al, al                                      ; CODE XREF=sub_3380+2221
0000000000003189         jne        loc_3b21

000000000000318f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003194         sete       dl
0000000000003197         jmp        loc_2e68
000000000000319c         align      32

                     loc_31a0:
00000000000031a0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000031a4         cmp        bl, 0x7e
00000000000031a7         ja         loc_3130

00000000000031a9         lea        rcx, qword [switch_table_6fe0+552]          ; 0x7208
00000000000031b0         movzx      edx, bl
00000000000031b3         movsxd     rax, dword [rcx+rdx*4]
00000000000031b7         add        rax, rcx
00000000000031ba         jmp        rax
                        ; endp
00000000000031bc         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_31c0:
00000000000031c0         xor        r10d, r10d
00000000000031c3         cmp        byte [rsp+arg_5], 0x0
00000000000031c8         jne        loc_2fbe

00000000000031ce         nop

                     loc_31d0:
00000000000031d0         mov        edx, 0x5c                                   ; CODE XREF=sub_2f30+136, sub_2f30+147
00000000000031d5         mov        ebx, 0x5c
00000000000031da         jmp        sub_2f30+68
                        ; endp
00000000000031df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31e0:
00000000000031e0         mov        edx, 0xc
00000000000031e5         xor        r10d, r10d
00000000000031e8         mov        ebx, 0x66
00000000000031ed         jmp        sub_2f30+68
                        ; endp
00000000000031f2         nop        word [rax+rax]
00000000000031f8         mov        edx, 0xa
00000000000031fd         xor        r10d, r10d
0000000000003200         mov        ebx, 0x6e
0000000000003205         jmp        sub_2f30+50
000000000000320a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3210:
0000000000003210         mov        ebx, 0x61
0000000000003215         jmp        sub_2f30+176
                        ; endp
000000000000321a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3220:
0000000000003220         xor        r10d, r10d
                        ; endp

                     loc_3223:
0000000000003223         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3050+5
0000000000003228         sete       dl
000000000000322b         cmp        byte [rsp+arg_7], 0x0
0000000000003230         jne        loc_3dca

0000000000003236         mov        eax, r8d
0000000000003239         mov        rcx, r15
000000000000323c         xor        eax, 0x1
000000000000323f         and        al, dl
0000000000003241         je         loc_3270

0000000000003243         cmp        r13, r15
0000000000003246         jbe        loc_324d

0000000000003248         mov        byte [r14+r15], 0x27

                     loc_324d:
000000000000324d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3220+38
0000000000003251         cmp        r13, rcx
0000000000003254         jbe        loc_325c

0000000000003256         mov        byte [r14+r15+1], 0x24

                     loc_325c:
000000000000325c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3220+52
0000000000003260         cmp        r13, rcx
0000000000003263         ja         loc_3899

                     loc_3269:
0000000000003269         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3380+1311
000000000000326d         mov        r8d, eax

                     loc_3270:
0000000000003270         cmp        r13, rcx                                    ; CODE XREF=sub_3220+33
0000000000003273         jbe        loc_327a

0000000000003275         mov        byte [r14+rcx], 0x5c

                     loc_327a:
000000000000327a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3220+83
000000000000327f         lea        r15, qword [rcx+1]
0000000000003283         je         loc_3889

0000000000003289         lea        rax, qword [rbp+1]
000000000000328d         cmp        rax, r11
0000000000003290         jae        loc_32ab

0000000000003292         mov        rax, qword [rsp+arg_8]
0000000000003297         movzx      eax, byte [rax+rbp+1]
000000000000329c         mov        byte [rsp+arg_20], al
00000000000032a0         sub        eax, 0x30
00000000000032a3         cmp        al, 0x9
00000000000032a5         jbe        loc_3ad9

                     loc_32ab:
00000000000032ab         mov        eax, r12d                                   ; CODE XREF=sub_3220+112
00000000000032ae         mov        ebx, 0x30
00000000000032b3         xor        r12d, r12d
00000000000032b6         jmp        sub_2e30+56
                        ; endp
00000000000032bb         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32c0:
00000000000032c0         cmp        dword [rsp+arg_0], 0x2
00000000000032c5         mov        r12d, r10d
00000000000032c8         sete       dl
00000000000032cb         xor        r10d, r10d
00000000000032ce         xor        eax, eax
00000000000032d0         jmp        sub_2e30+56
                        ; endp
00000000000032d5         nop        dword [rax]
00000000000032d8         cmp        dword [rsp+8], 0x2
00000000000032dd         sete       dl
00000000000032e0         xor        r10d, r10d
00000000000032e3         jmp        sub_30a0+8
00000000000032e8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32f0:
00000000000032f0         cmp        dword [rsp+8], 0x2
00000000000032f5         sete       dl
00000000000032f8         xor        r10d, r10d
00000000000032fb         xor        r12d, r12d
00000000000032fe         jmp        sub_30a0+17
                        ; endp
0000000000003303         nop        dword [rax+rax]
0000000000003308         cmp        dword [rsp+8], 0x2
000000000000330d         mov        r12d, r10d
0000000000003310         mov        ebx, 0x20
0000000000003315         sete       dl
0000000000003318         xor        r10d, r10d
000000000000331b         jmp        sub_30a0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3320:
0000000000003320         mov        edx, 0xd
0000000000003325         xor        r10d, r10d
0000000000003328         mov        ebx, 0x72
000000000000332d         jmp        sub_2f30+50
                        ; endp
0000000000003332         nop        word [rax+rax]
0000000000003338         mov        ebx, 0x76
000000000000333d         jmp        sub_2f30+176
0000000000003342         nop        word [rax+rax]
0000000000003348         mov        edx, 0x9
000000000000334d         xor        r10d, r10d
0000000000003350         mov        ebx, 0x74
0000000000003355         jmp        sub_2f30+50
000000000000335a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3360:
0000000000003360         mov        ebx, 0x62
0000000000003365         jmp        sub_2f30+176
                        ; endp
000000000000336a         nop        word [rax+rax]

                     loc_3370:
0000000000003370         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003373         jmp        loc_2e10
0000000000003378         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3380:
0000000000003380         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f30+125
0000000000003385         jne        sub_3380+2416
                        ; endp

                     loc_338b:
000000000000338b         add        rbp, 0x1                                    ; CODE XREF=sub_2f30+159
000000000000338f         mov        eax, r8d
0000000000003392         xor        r12d, r12d
0000000000003395         mov        ebx, 0x5c
000000000000339a         jmp        sub_2e30+124
                        ; endp
000000000000339f         align      32

                     loc_33a0:
00000000000033a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000033a5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000033aa         mov        r12d, r8d
00000000000033ad         mov        rbp, r11
00000000000033b0         sete       dl
00000000000033b3         mov        eax, ebx
00000000000033b5         test       r15, r15
00000000000033b8         sete       cl
00000000000033bb         and        eax, edx
00000000000033bd         and        al, cl
00000000000033bf         jne        loc_3e26

00000000000033c5         mov        eax, ebx
00000000000033c7         xor        eax, 0x1
00000000000033ca         and        dl, al
00000000000033cc         je         loc_3d3c

00000000000033d2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000033d7         je         loc_3d3a

00000000000033dd         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000033e2         jne        loc_3ddd

00000000000033e8         test       r13, r13
00000000000033eb         sete       al
00000000000033ee         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000033f4         setne      dl
00000000000033f7         and        al, dl
00000000000033f9         je         loc_3e1c

00000000000033ff         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3404:
0000000000003404         lea        rbx, qword [aLibs+29]                       ; 0x6f75, CODE XREF=sub_3380+2781
000000000000340b         mov        byte [r14], 0x27
000000000000340f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003417         mov        r15d, 0x1
000000000000341d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003426         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000342b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003430         mov        byte [rsp+0xe8+var_6C], al
0000000000003434         jmp        loc_2d13
0000000000003439         align      64

                     loc_3440:
0000000000003440         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f30+8
0000000000003445         jne        sub_3380+2416

000000000000344b         test       r13, r13
000000000000344e         je         loc_3850

0000000000003454         xor        edx, edx
0000000000003456         cmp        qword [rsp+arg_48], 0x0
000000000000345c         jne        loc_3850

                     loc_3462:
0000000000003462         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3380+1284, sub_3380+2794
0000000000003467         add        r15, 0x3
000000000000346b         xor        eax, eax
000000000000346d         mov        byte [rsp+arg_74], r12b
0000000000003472         xor        r8d, r8d
0000000000003475         mov        r13, rdx
0000000000003478         mov        ebx, 0x27
000000000000347d         jmp        sub_2e30+105
                        ; endp
0000000000003482         align      8

                     loc_3488:
0000000000003488         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2f00+19
000000000000348d         je         loc_34b0

000000000000348f         lea        rcx, qword [rbp+2]
0000000000003493         cmp        rcx, r11
0000000000003496         jae        loc_34b0

0000000000003498         mov        rax, qword [rsp+arg_8]
000000000000349d         cmp        byte [rax+rbp+1], 0x3f
00000000000034a2         je         loc_3c32

00000000000034a8         nop        dword [rax+rax]

                     loc_34b0:
00000000000034b0         xor        edx, edx                                    ; CODE XREF=sub_3380+269, sub_3380+278, sub_3380+2233, sub_3380+2253
00000000000034b2         xor        r12d, r12d
00000000000034b5         xor        eax, eax
00000000000034b7         mov        ebx, 0x3f
00000000000034bc         jmp        sub_2e30+56
                        ; endp
00000000000034c1         align      8

                     loc_34c8:
00000000000034c8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f00+10
00000000000034cd         jne        loc_3cf0

00000000000034d3         xor        r12d, r12d
00000000000034d6         xor        eax, eax
00000000000034d8         mov        ebx, 0x3f
00000000000034dd         jmp        sub_2e30+105
                        ; endp
00000000000034e2         align      8

                     loc_34e8:
00000000000034e8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3120+30
00000000000034f0         cmp        r11, 0xffffffffffffffff
00000000000034f4         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003500         mov        qword [rsp+0xe8+var_C0], rax
0000000000003505         jne        loc_3534

0000000000003507         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000350c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003511         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003516         mov        qword [rsp+0xe8+var_B8], r9
000000000000351b         call       j_strlen                                    ; strlen
0000000000003520         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003526         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000352c         mov        r11, rax
000000000000352f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3534:
0000000000003534         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3380+389
000000000000353c         xor        ecx, ecx
000000000000353e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003542         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003547         mov        rbx, rcx
000000000000354a         mov        qword [rsp+0xe8+var_60], r9
0000000000003552         mov        qword [rsp+0xe8+var_B0], rax
0000000000003557         mov        byte [rsp+0xe8+var_69], r10b
000000000000355c         mov        qword [rsp+0xe8+var_68], r15
0000000000003564         mov        qword [rsp+0xe8+var_A8], r14
0000000000003569         mov        qword [rsp+0xe8+var_78], r13
000000000000356e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3573:
0000000000003573         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3380+623
0000000000003578         lea        r14, qword [rbp+rbx]
000000000000357d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003582         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003587         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000358c         lea        r13, qword [rax+r14]
0000000000003590         sub        rdx, r14
0000000000003593         mov        rsi, r13
0000000000003596         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000359b         test       rax, rax
000000000000359e         mov        r15, rax
00000000000035a1         je         loc_35f1

00000000000035a3         cmp        rax, 0xffffffffffffffff
00000000000035a7         je         loc_3bc5

00000000000035ad         cmp        rax, 0xfffffffffffffffe
00000000000035b1         je         loc_3b51

00000000000035b7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000035bc         sete       al
00000000000035bf         and        al, byte [rsp+0xe8+var_D9]
00000000000035c3         jne        loc_3760

                     loc_35c9:
00000000000035c9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3380+996, sub_3380+1031
00000000000035d0         call       j_iswprint                                  ; iswprint
00000000000035d5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000035da         test       eax, eax
00000000000035dc         mov        eax, 0x0
00000000000035e1         cmove      r12d, eax
00000000000035e5         add        rbx, r15
00000000000035e8         call       j_mbsinit                                   ; mbsinit
00000000000035ed         test       eax, eax
00000000000035ef         je         loc_3573

                     loc_35f1:
00000000000035f1         mov        edx, r12d                                   ; CODE XREF=sub_3380+545
00000000000035f4         mov        rdi, rbx
00000000000035f7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000035fd         xor        edx, 0x1
0000000000003600         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003605         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000360b         and        dl, byte [rsp+0xe8+var_DB]
000000000000360f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003617         mov        r14, qword [rsp+0xe8+var_A8]
000000000000361c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003621         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3626:
0000000000003626         cmp        rdi, 0x1                                    ; CODE XREF=sub_3380+2112, sub_3380+2168
000000000000362a         jbe        loc_3c2b

                     loc_3630:
0000000000003630         mov        rcx, rdi                                    ; CODE XREF=sub_3380+1961
0000000000003633         xor        esi, esi
0000000000003635         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000363b         add        rcx, rbp
000000000000363e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003643         jmp        loc_36fe
0000000000003648         align      16

                     loc_3650:
0000000000003650         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3380+896
0000000000003655         sete       al
0000000000003658         test       r9b, r9b
000000000000365b         jne        loc_3b10

0000000000003661         mov        esi, r8d
0000000000003664         xor        esi, 0x1
0000000000003667         and        al, sil
000000000000366a         je         loc_369b

000000000000366c         cmp        r13, r15
000000000000366f         jbe        loc_3676

0000000000003671         mov        byte [r14+r15], 0x27

                     loc_3676:
0000000000003676         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3380+751
000000000000367a         cmp        r13, rsi
000000000000367d         jbe        loc_3685

000000000000367f         mov        byte [r14+r15+1], 0x24

                     loc_3685:
0000000000003685         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3380+765
0000000000003689         cmp        r13, rsi
000000000000368c         jbe        loc_3694

000000000000368e         mov        byte [r14+r15+2], 0x27

                     loc_3694:
0000000000003694         add        r15, 0x3                                    ; CODE XREF=sub_3380+780
0000000000003698         mov        r8d, eax

                     loc_369b:
000000000000369b         cmp        r13, r15                                    ; CODE XREF=sub_3380+746
000000000000369e         jbe        loc_36a5

00000000000036a0         mov        byte [r14+r15], 0x5c

                     loc_36a5:
00000000000036a5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3380+798
00000000000036a9         cmp        r13, rax
00000000000036ac         jbe        loc_36bb

00000000000036ae         mov        eax, ebx
00000000000036b0         shr        al, 0x6
00000000000036b3         add        eax, 0x30
00000000000036b6         mov        byte [r14+r15+1], al

                     loc_36bb:
00000000000036bb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3380+812
00000000000036bf         cmp        r13, rax
00000000000036c2         jbe        loc_36d4

00000000000036c4         mov        eax, ebx
00000000000036c6         shr        al, 0x3
00000000000036c9         and        eax, 0x7
00000000000036cc         add        eax, 0x30
00000000000036cf         mov        byte [r14+r15+2], al

                     loc_36d4:
00000000000036d4         and        ebx, 0x7                                    ; CODE XREF=sub_3380+834
00000000000036d7         add        rbp, 0x1
00000000000036db         add        r15, 0x3
00000000000036df         add        ebx, 0x30
00000000000036e2         cmp        rbp, rcx
00000000000036e5         jae        loc_2ed0

00000000000036eb         mov        esi, edx

                     loc_36ed:
00000000000036ed         cmp        r13, r15                                    ; CODE XREF=sub_3380+985, sub_3380+1969
00000000000036f0         jbe        loc_36f6

00000000000036f2         mov        byte [r14+r15], bl

                     loc_36f6:
00000000000036f6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3380+880
00000000000036fa         add        r15, 0x1

                     loc_36fe:
00000000000036fe         test       dl, dl                                      ; CODE XREF=sub_3380+707
0000000000003700         jne        loc_3650

0000000000003706         mov        eax, esi
0000000000003708         xor        eax, 0x1
000000000000370b         and        eax, r8d
000000000000370e         test       r10b, r10b
0000000000003711         je         loc_3721

0000000000003713         cmp        r13, r15
0000000000003716         jbe        loc_371d

0000000000003718         mov        byte [r14+r15], 0x5c

                     loc_371d:
000000000000371d         add        r15, 0x1                                    ; CODE XREF=sub_3380+918

                     loc_3721:
0000000000003721         add        rbp, 0x1                                    ; CODE XREF=sub_3380+913
0000000000003725         cmp        rbp, rcx
0000000000003728         jae        loc_2eac

000000000000372e         test       al, al
0000000000003730         je         loc_3b2e

0000000000003736         cmp        r13, r15
0000000000003739         jbe        loc_3740

000000000000373b         mov        byte [r14+r15], 0x27

                     loc_3740:
0000000000003740         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3380+953
0000000000003744         cmp        r13, rax
0000000000003747         jbe        loc_374f

0000000000003749         mov        byte [r14+r15+1], 0x27

                     loc_374f:
000000000000374f         add        r15, 0x2                                    ; CODE XREF=sub_3380+967
0000000000003753         xor        r10d, r10d
0000000000003756         xor        r8d, r8d
0000000000003759         jmp        loc_36ed
000000000000375b         align      32

                     loc_3760:
0000000000003760         cmp        r15, 0x1                                    ; CODE XREF=sub_3380+579
0000000000003764         je         loc_35c9

000000000000376a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000376f         lea        rcx, qword [rdi+r15]
0000000000003773         lea        rdx, qword [rdi+r14+1]
0000000000003778         lea        r8, qword [rcx+r14]
000000000000377c         jmp        loc_378d
000000000000377e         align      128

                     loc_3780:
0000000000003780         add        rdx, 0x1                                    ; CODE XREF=sub_3380+1046, sub_3380+1072
0000000000003784         cmp        r8, rdx
0000000000003787         je         loc_35c9

                     loc_378d:
000000000000378d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3380+1020
0000000000003790         sub        ecx, 0x5b
0000000000003793         cmp        cl, 0x21
0000000000003796         ja         loc_3780

0000000000003798         mov        esi, 0x1
000000000000379d         shl        rsi, cl
00000000000037a0         mov        rcx, rsi
00000000000037a3         movabs     rsi, 0x20000002b
00000000000037ad         test       rcx, rsi
00000000000037b0         je         loc_3780

00000000000037b2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000037b7         mov        r13, qword [rsp+0xe8+var_78]
00000000000037bc         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000037c1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_37c9:
00000000000037c9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3380+1227, sub_3380+1948, sub_3380+2585, sub_3380+2734
00000000000037ce         je         loc_37e0

00000000000037d0         test       al, al
00000000000037d2         mov        eax, 0x4
00000000000037d7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000037dc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_37e0:
00000000000037e0         sub        rsp, 0x8                                    ; CODE XREF=sub_3380+1102
00000000000037e4         mov        rcx, rbp
00000000000037e7         mov        rsi, r13
00000000000037ea         push       qword [rsp+0xf0+var_88]
00000000000037ee         push       qword [rsp+0xf8+var_80]
00000000000037f2         mov        rdi, r14
00000000000037f5         push       0x0
00000000000037f7         mov        r9d, dword [rsp+0x108+var_70]
00000000000037ff         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003804         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003809         and        r9d, 0xfffffffd
000000000000380d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003812         add        rsp, 0x20
0000000000003816         mov        r15, rax

                     loc_3819:
0000000000003819         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3380+2549, sub_3380+2560, sub_3380+2711
0000000000003821         xor        rbx, qword [fs:0x28]
000000000000382a         mov        rax, r15
000000000000382d         jne        loc_3e33

0000000000003833         add        rsp, 0xb8
000000000000383a         pop        rbx
000000000000383b         pop        rbp
000000000000383c         pop        r12
000000000000383e         pop        r13
0000000000003840         pop        r14
0000000000003842         pop        r15
0000000000003844         ret
                        ; endp
0000000000003845         align      8

                     loc_3848:
0000000000003848         mov        rbp, r11                                    ; CODE XREF=sub_2f30+194
000000000000384b         jmp        loc_37c9

                     loc_3850:
0000000000003850         cmp        r13, r15                                    ; CODE XREF=sub_3380+206, sub_3380+220
0000000000003853         jbe        loc_385a

0000000000003855         mov        byte [r14+r15], 0x27

                     loc_385a:
000000000000385a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3380+1235
000000000000385e         cmp        r13, rax
0000000000003861         jbe        loc_3869

0000000000003863         mov        byte [r14+r15+1], 0x5c

                     loc_3869:
0000000000003869         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3380+1249
000000000000386d         cmp        r13, rax
0000000000003870         jbe        loc_3e62

0000000000003876         mov        rdx, r13
0000000000003879         mov        byte [r14+r15+2], 0x27
000000000000387f         mov        r13, qword [rsp+arg_48]
0000000000003884         jmp        loc_3462

                     loc_3889:
0000000000003889         mov        eax, r12d                                   ; CODE XREF=sub_3220+99
000000000000388c         mov        ebx, 0x30
0000000000003891         xor        r12d, r12d
0000000000003894         jmp        sub_2e30+105
                        ; endp

                     loc_3899:
0000000000003899         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3220+67
000000000000389f         jmp        loc_3269

                     loc_38a4:
00000000000038a4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000038a6         jne        loc_2cd3

00000000000038ac         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_38b1:
00000000000038b1         test       r13, r13                                    ; CODE XREF=sub_3380+2749
00000000000038b4         jne        loc_3e4a

00000000000038ba         lea        rax, qword [aLibs+29]                       ; 0x6f75
00000000000038c1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038ca         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038cf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038d4         xor        r12d, r12d
00000000000038d7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000038dc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000038e5         mov        qword [rsp+0xe8+var_A0], rax
00000000000038ea         mov        r15d, 0x1
00000000000038f0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000038f8         jmp        loc_2d13
00000000000038fd         align      256

                     loc_3900:
0000000000003900         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003902         jne        loc_3cfd

0000000000003908         test       r13, r13
000000000000390b         je         loc_3b36

0000000000003911         mov        byte [r14], 0x22
0000000000003915         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000391a         xor        r12d, r12d
000000000000391d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003922         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_392b:
000000000000392b         lea        rax, qword [aLibs+27]                       ; 0x6f73, CODE XREF=sub_3380+1996
0000000000003932         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003937         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000393c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003945         mov        r15d, 0x1
000000000000394b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003950         jmp        loc_2d13

                     loc_3955:
0000000000003955         lea        rax, qword [aLibs+27]                       ; case 6, 0x6f73, CODE XREF=quotearg_buffer_restyled+145
000000000000395c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003961         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003966         xor        r12d, r12d
0000000000003969         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003972         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003977         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000397c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003985         xor        r15d, r15d
0000000000003988         mov        qword [rsp+0xe8+var_A0], rax
000000000000398d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003995         jmp        loc_2d13

                     loc_399a:
000000000000399a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000399f         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000039a4         xor        r12d, r12d
00000000000039a7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000039b0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000039b5         xor        r15d, r15d
00000000000039b8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000039bd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000039c6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000039cf         jmp        loc_2d13

                     loc_39d4:
00000000000039d4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000039d9         je         loc_3a31

00000000000039db         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x6f77
00000000000039e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039e9         call       j_dcgettext                                 ; dcgettext
00000000000039ee         mov        rcx, rax
00000000000039f1         mov        qword [rsp+0xe8+var_80], rax
00000000000039f6         lea        rax, qword [aLibs+31]                       ; 0x6f77
00000000000039fd         cmp        rcx, rax
0000000000003a00         je         loc_3d9e

                     loc_3a06:
0000000000003a06         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x6f75, CODE XREF=sub_3380+2607
0000000000003a0d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a0f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a14         call       j_dcgettext                                 ; dcgettext
0000000000003a19         mov        rcx, rax
0000000000003a1c         mov        qword [rsp+0xe8+var_88], rax
0000000000003a21         lea        rax, qword [aLibs+29]                       ; 0x6f75
0000000000003a28         cmp        rcx, rax
0000000000003a2b         je         loc_3db4

                     loc_3a31:
0000000000003a31         xor        r15d, r15d                                  ; CODE XREF=sub_3380+1625, sub_3380+2629
0000000000003a34         test       ebx, ebx
0000000000003a36         je         loc_3bfd

                     loc_3a3c:
0000000000003a3c         test       ebx, ebx                                    ; CODE XREF=sub_3380+2183, sub_3380+2214
0000000000003a3e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003a43         setne      byte [rsp+0xe8+var_D9]
0000000000003a48         xor        r12d, r12d
0000000000003a4b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003a4e         call       j_strlen                                    ; strlen
0000000000003a53         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003a58         mov        qword [rsp+0xe8+var_D0], rax
0000000000003a5d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a62         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a67         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a70         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003a75         jmp        loc_2d13

                     loc_3a7a:
0000000000003a7a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003a7f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a84         xor        r12d, r12d
0000000000003a87         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a90         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003a95         xor        r15d, r15d
0000000000003a98         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003a9d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003aa6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003aaf         jmp        loc_2d13

                     loc_3ab4:
0000000000003ab4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003ab9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003abe         xor        r12d, r12d
0000000000003ac1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aca         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003acf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ad4         jmp        loc_2cf3

                     loc_3ad9:
0000000000003ad9         cmp        r13, r15                                    ; CODE XREF=sub_3220+133
0000000000003adc         jbe        loc_3ae3

0000000000003ade         mov        byte [r14+r15], 0x30

                     loc_3ae3:
0000000000003ae3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3380+1884
0000000000003ae7         cmp        r13, rax
0000000000003aea         jbe        loc_3af2

0000000000003aec         mov        byte [r14+rcx+2], 0x30

                     loc_3af2:
0000000000003af2         mov        eax, r12d                                   ; CODE XREF=sub_3380+1898
0000000000003af5         lea        r15, qword [rcx+3]
0000000000003af9         xor        r12d, r12d
0000000000003afc         mov        ebx, 0x30
0000000000003b01         jmp        sub_2e30+56
                        ; endp
0000000000003b06         align      16

                     loc_3b10:
0000000000003b10         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3380+731
0000000000003b15         mov        rbp, r11
0000000000003b18         mov        byte [rsp+0xe8+var_DB], bl
0000000000003b1c         jmp        loc_37c9

                     loc_3b21:
0000000000003b21         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3120+105
0000000000003b26         xor        r12d, r12d
0000000000003b29         jmp        loc_3630

                     loc_3b2e:
0000000000003b2e         xor        r10d, r10d                                  ; CODE XREF=sub_3380+944
0000000000003b31         jmp        loc_36ed

                     loc_3b36:
0000000000003b36         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3380+1419
0000000000003b3f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b44         xor        r12d, r12d
0000000000003b47         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b4c         jmp        loc_392b

                     loc_3b51:
0000000000003b51         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3380+561
0000000000003b56         mov        rsi, r14
0000000000003b59         mov        rcx, r13
0000000000003b5c         mov        rax, rbx
0000000000003b5f         mov        rdi, rbx
0000000000003b62         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003b68         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003b6d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003b75         cmp        rsi, r11
0000000000003b78         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003b7e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003b86         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003b8b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003b90         jae        loc_3bb8

0000000000003b92         cmp        byte [rcx], 0x0
0000000000003b95         jne        loc_3ba7

0000000000003b97         jmp        loc_3bb8
0000000000003b99         align      32

                     loc_3ba0:
0000000000003ba0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3380+2099
0000000000003ba5         je         loc_3bb5

                     loc_3ba7:
0000000000003ba7         add        rax, 0x1                                    ; CODE XREF=sub_3380+2069
0000000000003bab         lea        rdx, qword [rbp+rax]
0000000000003bb0         cmp        r11, rdx
0000000000003bb3         ja         loc_3ba0

                     loc_3bb5:
0000000000003bb5         mov        rdi, rax                                    ; CODE XREF=sub_3380+2085

                     loc_3bb8:
0000000000003bb8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3380+2064, sub_3380+2071
0000000000003bbd         xor        r12d, r12d
0000000000003bc0         jmp        loc_3626

                     loc_3bc5:
0000000000003bc5         mov        rdi, rbx                                    ; CODE XREF=sub_3380+551
0000000000003bc8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003bce         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003bd3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003bd9         mov        r15, qword [rsp+0xe8+var_68]
0000000000003be1         xor        r12d, r12d
0000000000003be4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003be9         mov        r13, qword [rsp+0xe8+var_78]
0000000000003bee         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003bf3         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003bf8         jmp        loc_3626

                     loc_3bfd:
0000000000003bfd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3380+1718
0000000000003c02         movzx      eax, byte [rdx]
0000000000003c05         test       al, al
0000000000003c07         je         loc_3a3c

0000000000003c0d         nop        dword [rax]

                     loc_3c10:
0000000000003c10         cmp        r13, r15                                    ; CODE XREF=sub_3380+2212
0000000000003c13         jbe        loc_3c19

0000000000003c15         mov        byte [r14+r15], al

                     loc_3c19:
0000000000003c19         add        r15, 0x1                                    ; CODE XREF=sub_3380+2195
0000000000003c1d         movzx      eax, byte [rdx+r15]
0000000000003c22         test       al, al
0000000000003c24         jne        loc_3c10

0000000000003c26         jmp        loc_3a3c

                     loc_3c2b:
0000000000003c2b         mov        eax, edx                                    ; CODE XREF=sub_3380+682
0000000000003c2d         jmp        loc_3187

                     loc_3c32:
0000000000003c32         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3380+290
0000000000003c36         cmp        bl, 0x3e
0000000000003c39         ja         loc_34b0

0000000000003c3f         movabs     rax, 0x7000a38200000000
0000000000003c49         bt         rax, rbx
0000000000003c4d         jae        loc_34b0

0000000000003c53         cmp        byte [rsp+arg_7], 0x0
0000000000003c58         jne        loc_3e42

0000000000003c5e         cmp        r13, r15
0000000000003c61         jbe        loc_3c68

0000000000003c63         mov        byte [r14+r15], 0x3f

                     loc_3c68:
0000000000003c68         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3380+2273
0000000000003c6c         cmp        r13, rax
0000000000003c6f         jbe        loc_3c77

0000000000003c71         mov        byte [r14+r15+1], 0x22

                     loc_3c77:
0000000000003c77         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3380+2287
0000000000003c7b         cmp        r13, rax
0000000000003c7e         jbe        loc_3c86

0000000000003c80         mov        byte [r14+r15+2], 0x22

                     loc_3c86:
0000000000003c86         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3380+2302
0000000000003c8a         cmp        r13, rax
0000000000003c8d         jbe        loc_3c95

0000000000003c8f         mov        byte [r14+r15+3], 0x3f

                     loc_3c95:
0000000000003c95         add        r15, 0x4                                    ; CODE XREF=sub_3380+2317
0000000000003c99         xor        edx, edx
0000000000003c9b         xor        r12d, r12d
0000000000003c9e         xor        eax, eax
0000000000003ca0         mov        rbp, rcx
0000000000003ca3         jmp        sub_2e30+56
                        ; endp

                     loc_3ca8:
0000000000003ca8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003caa         je         loc_3e38

0000000000003cb0         lea        rax, qword [aLibs+29]                       ; 0x6f75
0000000000003cb7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003cbc         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cc1         xor        r12d, r12d
0000000000003cc4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ccd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003cd2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003cd7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003ce0         xor        r15d, r15d
0000000000003ce3         mov        qword [rsp+0xe8+var_A0], rax
0000000000003ce8         jmp        loc_2d13
0000000000003ced         align      16

                     loc_3cf0:
0000000000003cf0         mov        rbp, r11                                    ; CODE XREF=sub_3380+333
0000000000003cf3         movzx      eax, byte [rsp+arg_7]
0000000000003cf8         jmp        sub_3380+1097
                        ; endp

                     loc_3cfd:
0000000000003cfd         lea        rax, qword [aLibs+27]                       ; 0x6f73, CODE XREF=sub_3380+1410
0000000000003d04         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d09         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d0e         xor        r12d, r12d
0000000000003d11         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d1a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d1f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d24         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d2d         xor        r15d, r15d
0000000000003d30         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d35         jmp        loc_2d13

                     loc_3d3a:
0000000000003d3a         mov        eax, edx                                    ; CODE XREF=sub_3380+87

                     loc_3d3c:
0000000000003d3c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3380+76, sub_3380+2721
0000000000003d41         test       rbx, rbx
0000000000003d44         je         loc_3d72

0000000000003d46         test       al, al
0000000000003d48         je         loc_3d72

0000000000003d4a         movzx      ecx, byte [rbx]
0000000000003d4d         mov        rax, rbx
0000000000003d50         test       cl, cl
0000000000003d52         je         loc_3d72

0000000000003d54         mov        rdx, r15
0000000000003d57         sub        rax, r15

                     loc_3d5a:
0000000000003d5a         cmp        r13, rdx                                    ; CODE XREF=sub_3380+2541
0000000000003d5d         jbe        loc_3d63

0000000000003d5f         mov        byte [r14+rdx], cl

                     loc_3d63:
0000000000003d63         add        rdx, 0x1                                    ; CODE XREF=sub_3380+2525
0000000000003d67         movzx      ecx, byte [rax+rdx]
0000000000003d6b         test       cl, cl
0000000000003d6d         jne        loc_3d5a

0000000000003d6f         mov        r15, rdx

                     loc_3d72:
0000000000003d72         cmp        r13, r15                                    ; CODE XREF=sub_3380+2500, sub_3380+2504, sub_3380+2514
0000000000003d75         jbe        loc_3819

0000000000003d7b         mov        byte [r14+r15], 0x0
0000000000003d80         jmp        loc_3819

                     loc_3d85:
0000000000003d85         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003d8a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003d8f         mov        rbp, r11
0000000000003d92         sete       al
0000000000003d95         mov        byte [rsp+0xe8+var_DB], bl
0000000000003d99         jmp        loc_37c9

                     loc_3d9e:
0000000000003d9e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3380+1664
0000000000003da2         mov        rdi, rcx
0000000000003da5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003daa         mov        qword [rsp+0xe8+var_80], rax
0000000000003daf         jmp        loc_3a06

                     loc_3db4:
0000000000003db4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3380+1707
0000000000003db8         mov        rdi, rcx
0000000000003dbb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003dc0         mov        qword [rsp+0xe8+var_88], rax
0000000000003dc5         jmp        loc_3a31

                     loc_3dca:
0000000000003dca         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3220+16
0000000000003dcf         mov        rbp, r11
0000000000003dd2         mov        eax, edx
0000000000003dd4         mov        byte [rsp+arg_5], bl
0000000000003dd8         jmp        sub_3380+1097
                        ; endp

                     loc_3ddd:
0000000000003ddd         sub        rsp, 0x8                                    ; CODE XREF=sub_3380+98
0000000000003de1         mov        r8d, 0x5
0000000000003de7         mov        rcx, r11
0000000000003dea         push       qword [rsp+0xf0+var_88]
0000000000003dee         push       qword [rsp+0xf8+var_80]
0000000000003df2         mov        rdi, r14
0000000000003df5         push       qword [rsp+0x100+var_C8]
0000000000003df9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003e01         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003e06         mov        rsi, qword [rsp+0x108+var_98]
0000000000003e0b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e10         add        rsp, 0x20
0000000000003e14         mov        r15, rax
0000000000003e17         jmp        loc_3819

                     loc_3e1c:
0000000000003e1c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3380+121
0000000000003e21         jmp        loc_3d3c

                     loc_3e26:
0000000000003e26         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3380+63
0000000000003e2e         jmp        loc_37c9

                     loc_3e33:
0000000000003e33         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3380+1197
                        ; endp

                     loc_3e38:
0000000000003e38         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3380+2346
0000000000003e3d         jmp        loc_38b1

                     loc_3e42:
0000000000003e42         mov        rbp, r11                                    ; CODE XREF=sub_3380+2264
0000000000003e45         jmp        sub_3380+1120
                        ; endp

                     loc_3e4a:
0000000000003e4a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3380+1332
0000000000003e4f         xor        eax, eax
0000000000003e51         xor        r12d, r12d
0000000000003e54         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e5d         jmp        loc_3404

                     loc_3e62:
0000000000003e62         mov        rdx, r13                                    ; CODE XREF=sub_3380+1264
0000000000003e65         mov        r13, qword [rsp+arg_48]
0000000000003e6a         jmp        loc_3462

                     loc_3e6f:
0000000000003e6f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003e74         align      128                                         ; End of unwind block (FDE at 0x7eb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003e80         push       r15                                         ; Begin of unwind block (FDE at 0x7f28), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003e82         push       r14
0000000000003e84         movsxd     r15, edi
0000000000003e87         push       r13
0000000000003e89         push       r12
0000000000003e8b         mov        r14, rdx
0000000000003e8e         push       rbp
0000000000003e8f         push       rbx
0000000000003e90         mov        rbp, rcx
0000000000003e93         sub        rsp, 0x28
0000000000003e97         mov        qword [rsp+0x58+var_50], rsi
0000000000003e9c         call       j___errno_location                          ; __errno_location
0000000000003ea1         mov        r13, rax
0000000000003ea4         mov        eax, dword [rax]
0000000000003ea6         test       r15d, r15d
0000000000003ea9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003eb0         mov        dword [rsp+0x58+var_40], eax
0000000000003eb4         js         loc_4021

0000000000003eba         cmp        dword [nslots], r15d                        ; nslots
0000000000003ec1         jg         loc_3f25

0000000000003ec3         cmp        r15d, 0x7fffffff
0000000000003eca         je         loc_4026

0000000000003ed0         lea        r12d, dword [r15+1]
0000000000003ed4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003edb         movsxd     rsi, r12d
0000000000003ede         shl        rsi, 0x4
0000000000003ee2         cmp        rbx, rax
0000000000003ee5         je         loc_4000

0000000000003eeb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003eee         call       xrealloc                                    ; xrealloc
0000000000003ef3         mov        rbx, rax
0000000000003ef6         mov        qword [slotvec], rax                        ; slotvec

                     loc_3efd:
0000000000003efd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003f04         mov        edx, r12d
0000000000003f07         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003f09         sub        edx, edi
0000000000003f0b         shl        rdi, 0x4
0000000000003f0f         movsxd     rdx, edx
0000000000003f12         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003f15         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003f19         call       j_memset                                    ; memset
0000000000003f1e         mov        dword [nslots], r12d                        ; nslots

                     loc_3f25:
0000000000003f25         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003f28         shl        r15, 0x4
0000000000003f2c         sub        rsp, 0x8
0000000000003f30         add        rbx, r15
0000000000003f33         lea        r15, qword [rbp+8]
0000000000003f37         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003f3b         mov        r11, qword [rbx]
0000000000003f3e         mov        r12, qword [rbx+8]
0000000000003f42         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003f45         or         eax, 0x1
0000000000003f48         mov        dword [rsp+0x60+var_3C], eax
0000000000003f4c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003f4f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003f52         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003f55         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003f57         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003f5a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003f5f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003f62         mov        qword [rsp+0x78+var_48], r11
0000000000003f67         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f6c         add        rsp, 0x20
0000000000003f70         mov        r11, qword [rsp+0x58+var_48]
0000000000003f75         cmp        r11, rax
0000000000003f78         ja         loc_3fe1

0000000000003f7a         lea        rsi, qword [rax+1]
0000000000003f7e         lea        rax, qword [slot0]                          ; slot0
0000000000003f85         cmp        r12, rax
0000000000003f88         mov        qword [rbx], rsi
0000000000003f8b         je         loc_3f9f

0000000000003f8d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003f90         mov        qword [rsp+0x58+var_48], rsi
0000000000003f95         call       j_free                                      ; free
0000000000003f9a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3f9f:
0000000000003f9f         mov        rdi, rsi                                    ; CODE XREF=quotearg_n_options+267
0000000000003fa2         mov        qword [rsp+0x58+var_48], rsi
0000000000003fa7         call       xmalloc                                     ; xmalloc
0000000000003fac         sub        rsp, 0x8
0000000000003fb0         mov        qword [rbx+8], rax
0000000000003fb4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003fb8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003fbb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003fbe         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003fc1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003fc3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003fc8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003fcb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003fd0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003fd5         mov        r12, rax
0000000000003fd8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003fdd         add        rsp, 0x20

                     loc_3fe1:
0000000000003fe1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003fe5         mov        dword [r13], eax
0000000000003fe9         add        rsp, 0x28
0000000000003fed         mov        rax, r12
0000000000003ff0         pop        rbx
0000000000003ff1         pop        rbp
0000000000003ff2         pop        r12
0000000000003ff4         pop        r13
0000000000003ff6         pop        r14
0000000000003ff8         pop        r15
0000000000003ffa         ret
                        ; endp
0000000000003ffb         align      16384

                     loc_4000:
0000000000004000         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101, DATA XREF=sub_3120+88
0000000000004002         call       xrealloc                                    ; xrealloc
0000000000004007         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000400f         mov        rbx, rax
0000000000004012         mov        qword [slotvec], rax                        ; slotvec
0000000000004019         movups     xmmword [rax], xmm0
000000000000401c         jmp        loc_3efd

                     loc_4021:
0000000000004021         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4026:
0000000000004026         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_402b:
000000000000402b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7f28)
                     clone_quoting_options:
0000000000004030         push       r12                                         ; Begin of unwind block (FDE at 0x7f94)
0000000000004032         push       rbp
0000000000004033         push       rbx
0000000000004034         mov        rbx, rdi
0000000000004037         call       j___errno_location                          ; __errno_location
000000000000403c         mov        r12d, dword [rax]
000000000000403f         mov        rbp, rax
0000000000004042         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004049         test       rbx, rbx
000000000000404c         mov        esi, 0x38
0000000000004051         cmove      rbx, rax
0000000000004055         mov        rdi, rbx
0000000000004058         call       xmemdup                                     ; xmemdup
000000000000405d         mov        dword [rbp], r12d
0000000000004061         pop        rbx
0000000000004062         pop        rbp
0000000000004063         pop        r12
0000000000004065         ret
                        ; endp
0000000000004066         align      16                                          ; End of unwind block (FDE at 0x7f94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004070         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7fc0), default_quoting_options
0000000000004077         test       rdi, rdi
000000000000407a         cmove      rdi, rax
000000000000407e         mov        eax, dword [rdi]
0000000000004080         ret
                        ; endp
0000000000004081         align      16                                          ; End of unwind block (FDE at 0x7fc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004090         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7fd4), default_quoting_options
0000000000004097         test       rdi, rdi
000000000000409a         cmove      rdi, rax
000000000000409e         mov        dword [rdi], esi
00000000000040a0         ret
                        ; endp
00000000000040a1         align      16                                          ; End of unwind block (FDE at 0x7fd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000040b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7fe8), default_quoting_options
00000000000040b7         test       rdi, rdi
00000000000040ba         mov        ecx, esi
00000000000040bc         cmove      rdi, rax
00000000000040c0         mov        eax, esi
00000000000040c2         and        ecx, 0x1f
00000000000040c5         shr        al, 0x5
00000000000040c8         movzx      eax, al
00000000000040cb         lea        rdi, qword [rdi+rax*4+8]
00000000000040d0         mov        esi, dword [rdi]
00000000000040d2         mov        eax, esi
00000000000040d4         shr        eax, cl
00000000000040d6         xor        edx, eax
00000000000040d8         and        eax, 0x1
00000000000040db         and        edx, 0x1
00000000000040de         shl        edx, cl
00000000000040e0         xor        edx, esi
00000000000040e2         mov        dword [rdi], edx
00000000000040e4         ret
                        ; endp
00000000000040e5         align      16                                          ; End of unwind block (FDE at 0x7fe8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000040f0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7ffc), default_quoting_options
00000000000040f7         test       rdi, rdi
00000000000040fa         cmove      rdi, rax
00000000000040fe         mov        eax, dword [rdi+4]
0000000000004101         mov        dword [rdi+4], esi
0000000000004104         ret
                        ; endp
0000000000004105         align      16                                          ; End of unwind block (FDE at 0x7ffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004110         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8010), default_quoting_options
0000000000004117         test       rdi, rdi
000000000000411a         cmove      rdi, rax
000000000000411e         test       rsi, rsi
0000000000004121         mov        dword [rdi], 0xa
0000000000004127         je         loc_4137

0000000000004129         test       rdx, rdx
000000000000412c         je         loc_4137

000000000000412e         mov        qword [rdi+0x28], rsi
0000000000004132         mov        qword [rdi+0x30], rdx
0000000000004136         ret
                        ; endp

                     loc_4137:
0000000000004137         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000413b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004140         push       r15                                         ; End of unwind block (FDE at 0x8010), Begin of unwind block (FDE at 0x8024)
0000000000004142         push       r14
0000000000004144         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000414b         push       r13
000000000000414d         push       r12
000000000000414f         mov        r13, rdi
0000000000004152         push       rbp
0000000000004153         push       rbx
0000000000004154         mov        rbx, r8
0000000000004157         mov        r14, rsi
000000000000415a         mov        r15, rdx
000000000000415d         sub        rsp, 0x18
0000000000004161         test       r8, r8
0000000000004164         cmove      rbx, rax
0000000000004168         mov        qword [rsp+0x48+var_40], rcx
000000000000416d         call       j___errno_location                          ; __errno_location
0000000000004172         mov        r12d, dword [rax]
0000000000004175         mov        rbp, rax
0000000000004178         lea        rax, qword [rbx+8]
000000000000417c         sub        rsp, 0x8
0000000000004180         mov        r9d, dword [rbx+4]
0000000000004184         push       qword [rbx+0x30]
0000000000004187         mov        r8d, dword [rbx]
000000000000418a         push       qword [rbx+0x28]
000000000000418d         mov        rdx, r15
0000000000004190         push       rax
0000000000004191         mov        rcx, qword [rsp+0x68+var_40]
0000000000004196         mov        rsi, r14
0000000000004199         mov        rdi, r13
000000000000419c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000041a1         mov        dword [rbp], r12d
00000000000041a5         add        rsp, 0x38
00000000000041a9         pop        rbx
00000000000041aa         pop        rbp
00000000000041ab         pop        r12
00000000000041ad         pop        r13
00000000000041af         pop        r14
00000000000041b1         pop        r15
00000000000041b3         ret
                        ; endp
00000000000041b4         align      64                                          ; End of unwind block (FDE at 0x8024)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000041c0         push       r15                                         ; Begin of unwind block (FDE at 0x8078), CODE XREF=quotearg_alloc+5
00000000000041c2         push       r14
00000000000041c4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000041cb         push       r13
00000000000041cd         push       r12
00000000000041cf         mov        r12, rdx
00000000000041d2         push       rbp
00000000000041d3         push       rbx
00000000000041d4         mov        rbx, rcx
00000000000041d7         mov        r14, rdi
00000000000041da         mov        r15, rsi
00000000000041dd         sub        rsp, 0x38
00000000000041e1         test       rcx, rcx
00000000000041e4         cmove      rbx, rax
00000000000041e8         xor        ebp, ebp
00000000000041ea         call       j___errno_location                          ; __errno_location
00000000000041ef         test       r12, r12
00000000000041f2         mov        r13, rax
00000000000041f5         mov        eax, dword [rax]
00000000000041f7         sete       bpl
00000000000041fb         or         ebp, dword [rbx+4]
00000000000041fe         lea        r10, qword [rbx+8]
0000000000004202         sub        rsp, 0x8
0000000000004206         mov        r8d, dword [rbx]
0000000000004209         mov        rcx, r15
000000000000420c         mov        dword [rsp+0x70+var_5C], eax
0000000000004210         push       qword [rbx+0x30]
0000000000004213         mov        rdx, r14
0000000000004216         push       qword [rbx+0x28]
0000000000004219         push       r10
000000000000421b         xor        esi, esi
000000000000421d         mov        r9d, ebp
0000000000004220         xor        edi, edi
0000000000004222         mov        qword [rsp+0x88+var_48], r10
0000000000004227         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000422c         lea        rsi, qword [rax+1]
0000000000004230         mov        qword [rsp+0x88+var_40], rax
0000000000004235         add        rsp, 0x20
0000000000004239         mov        rdi, rsi
000000000000423c         mov        qword [rsp+0x68+var_50], rsi
0000000000004241         call       xmalloc                                     ; xmalloc
0000000000004246         mov        qword [rsp+0x68+var_58], rax
000000000000424b         sub        rsp, 0x8
000000000000424f         push       qword [rbx+0x30]
0000000000004252         push       qword [rbx+0x28]
0000000000004255         mov        r10, qword [rsp+0x80+var_48]
000000000000425a         mov        r9d, ebp
000000000000425d         mov        r8d, dword [rbx]
0000000000004260         mov        rcx, r15
0000000000004263         mov        rdx, r14
0000000000004266         mov        rdi, rax
0000000000004269         push       r10
000000000000426b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004270         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004275         mov        eax, dword [rsp+0x88+var_5C]
0000000000004279         add        rsp, 0x20
000000000000427d         test       r12, r12
0000000000004280         mov        dword [r13], eax
0000000000004284         je         loc_428f

0000000000004286         mov        r11, qword [rsp+0x68+var_40]
000000000000428b         mov        qword [r12], r11

                     loc_428f:
000000000000428f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004294         add        rsp, 0x38
0000000000004298         pop        rbx
0000000000004299         pop        rbp
000000000000429a         pop        r12
000000000000429c         pop        r13
000000000000429e         pop        r14
00000000000042a0         pop        r15
00000000000042a2         ret
                        ; endp
00000000000042a3         align      16                                          ; End of unwind block (FDE at 0x8078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000042b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x80e4)
00000000000042b3         xor        edx, edx
00000000000042b5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000042ba         align      64                                          ; End of unwind block (FDE at 0x80e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000042c0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x80f8), nslots
00000000000042c6         push       r12
00000000000042c8         mov        r12, qword [slotvec]                        ; slotvec
00000000000042cf         push       rbp
00000000000042d0         push       rbx
00000000000042d1         cmp        eax, 0x1
00000000000042d4         jle        loc_4301

00000000000042d6         sub        eax, 0x2
00000000000042d9         lea        rbx, qword [r12+0x18]
00000000000042de         shl        rax, 0x4
00000000000042e2         lea        rbp, qword [r12+rax+0x28]
00000000000042e7         nop        word [rax+rax]

                     loc_42f0:
00000000000042f0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000042f3         add        rbx, 0x10
00000000000042f7         call       j_free                                      ; free
00000000000042fc         cmp        rbx, rbp
00000000000042ff         jne        loc_42f0

                     loc_4301:
0000000000004301         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004306         lea        rbx, qword [slot0]                          ; slot0
000000000000430d         cmp        rdi, rbx
0000000000004310         je         loc_4329

0000000000004312         call       j_free                                      ; free
0000000000004317         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004322         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_4329:
0000000000004329         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004330         cmp        r12, rbx
0000000000004333         je         loc_4344

0000000000004335         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004338         call       j_free                                      ; free
000000000000433d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4344:
0000000000004344         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004345         mov        dword [nslots], 0x1                         ; nslots
000000000000434f         pop        rbp
0000000000004350         pop        r12
0000000000004352         ret
                        ; endp
0000000000004353         align      32                                          ; End of unwind block (FDE at 0x80f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004360         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8124), default_quoting_options
0000000000004367         mov        rdx, 0xffffffffffffffff
000000000000436e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004373         align      128                                         ; End of unwind block (FDE at 0x8124)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004380         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8138), default_quoting_options
0000000000004387         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000438c         align      16                                          ; End of unwind block (FDE at 0x8138)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004390         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x814c), default_quoting_options
0000000000004397         mov        rsi, rdi
000000000000439a         mov        rdx, 0xffffffffffffffff
00000000000043a1         xor        edi, edi
00000000000043a3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043a8         align      16                                          ; End of unwind block (FDE at 0x814c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000043b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8160), default_quoting_options
00000000000043b7         mov        rdx, rsi
00000000000043ba         mov        rsi, rdi
00000000000043bd         xor        edi, edi
00000000000043bf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043c4         align      16                                          ; End of unwind block (FDE at 0x8160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000043d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8174)
00000000000043d4         mov        rax, rdx
00000000000043d7         mov        rdx, qword [fs:0x28]
00000000000043e0         mov        qword [rsp+0x48+var_10], rdx
00000000000043e5         xor        edx, edx
00000000000043e7         cmp        esi, 0xa
00000000000043ea         je         loc_4454

00000000000043ec         mov        dword [rsp+0x48+var_48], esi
00000000000043ef         mov        rcx, rsp
00000000000043f2         mov        rdx, 0xffffffffffffffff
00000000000043f9         mov        rsi, rax
00000000000043fc         mov        qword [rsp+0x48+var_44], 0x0
0000000000004405         mov        qword [rsp+0x48+var_3C], 0x0
000000000000440e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004417         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004420         mov        qword [rsp+0x48+var_24], 0x0
0000000000004429         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004432         mov        dword [rsp+0x48+var_14], 0x0
000000000000443a         call       quotearg_n_options                          ; quotearg_n_options
000000000000443f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004444         xor        rcx, qword [fs:0x28]
000000000000444d         jne        loc_4459

000000000000444f         add        rsp, 0x48
0000000000004453         ret
                        ; endp

                     loc_4454:
0000000000004454         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4459:
0000000000004459         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000445e         align      32                                          ; End of unwind block (FDE at 0x8174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004460         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8190), CODE XREF=quotearg_style_mem+10
0000000000004464         mov        rax, rdx
0000000000004467         mov        rdx, rcx
000000000000446a         mov        rcx, qword [fs:0x28]
0000000000004473         mov        qword [rsp+0x48+var_10], rcx
0000000000004478         xor        ecx, ecx
000000000000447a         cmp        esi, 0xa
000000000000447d         je         loc_44e0

000000000000447f         mov        dword [rsp+0x48+var_48], esi
0000000000004482         mov        rcx, rsp
0000000000004485         mov        rsi, rax
0000000000004488         mov        qword [rsp+0x48+var_44], 0x0
0000000000004491         mov        qword [rsp+0x48+var_3C], 0x0
000000000000449a         mov        qword [rsp+0x48+var_34], 0x0
00000000000044a3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000044ac         mov        qword [rsp+0x48+var_24], 0x0
00000000000044b5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000044be         mov        dword [rsp+0x48+var_14], 0x0
00000000000044c6         call       quotearg_n_options                          ; quotearg_n_options
00000000000044cb         mov        rdx, qword [rsp+0x48+var_10]
00000000000044d0         xor        rdx, qword [fs:0x28]
00000000000044d9         jne        loc_44e5

00000000000044db         add        rsp, 0x48
00000000000044df         ret
                        ; endp

                     loc_44e0:
00000000000044e0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_44e5:
00000000000044e5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000044ea         align      16                                          ; End of unwind block (FDE at 0x8190)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000044f0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x81ac)
00000000000044f3         mov        esi, edi
00000000000044f5         xor        edi, edi
00000000000044f7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000044fc         align      256                                         ; End of unwind block (FDE at 0x81ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004500         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x81c0)
0000000000004503         mov        rdx, rsi
0000000000004506         mov        esi, edi
0000000000004508         xor        edi, edi
000000000000450a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000450f         align      16                                          ; End of unwind block (FDE at 0x81c0)

                     quotearg_char_mem:
0000000000004510         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x81d4), CODE XREF=quotearg_colon+12
0000000000004514         mov        ecx, edx
0000000000004516         mov        rax, qword [fs:0x28]
000000000000451f         mov        qword [rsp+0x48+var_10], rax
0000000000004524         xor        eax, eax
0000000000004526         mov        rax, qword [qword_20a230]                   ; qword_20a230
000000000000452d         mov        r8, rsp
0000000000004530         and        ecx, 0x1f
0000000000004533         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000453b         mov        qword [rsp+0x48+var_18], rax
0000000000004540         mov        eax, edx
0000000000004542         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004546         shr        al, 0x5
0000000000004549         movzx      eax, al
000000000000454c         lea        r9, qword [r8+rax*4+8]
0000000000004551         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a210
0000000000004559         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000455e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a220
0000000000004566         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000456b         mov        edx, dword [r9]
000000000000456e         mov        eax, edx
0000000000004570         shr        eax, cl
0000000000004572         not        eax
0000000000004574         and        eax, 0x1
0000000000004577         shl        eax, cl
0000000000004579         mov        rcx, r8
000000000000457c         xor        eax, edx
000000000000457e         mov        rdx, rsi
0000000000004581         mov        rsi, rdi
0000000000004584         mov        dword [r9], eax
0000000000004587         xor        edi, edi
0000000000004589         call       quotearg_n_options                          ; quotearg_n_options
000000000000458e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004593         xor        rsi, qword [fs:0x28]
000000000000459c         jne        loc_45a3

000000000000459e         add        rsp, 0x48
00000000000045a2         ret
                        ; endp

                     loc_45a3:
00000000000045a3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000045a8         align      16                                          ; End of unwind block (FDE at 0x81d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_char:
00000000000045b0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x81f0)
00000000000045b4         mov        rsi, 0xffffffffffffffff
00000000000045bb         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_colon:
00000000000045c0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x81f0), Begin of unwind block (FDE at 0x8204), CODE XREF=close_stdout+101
00000000000045c5         mov        rsi, 0xffffffffffffffff
00000000000045cc         jmp        quotearg_char_mem                           ; quotearg_char_mem
00000000000045d1         align      32                                          ; End of unwind block (FDE at 0x8204)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000045e0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8218)
00000000000045e5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000045ea         align      16                                          ; End of unwind block (FDE at 0x8218)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000045f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x822c)
00000000000045f4         mov        rax, rdx
00000000000045f7         mov        rdx, qword [fs:0x28]
0000000000004600         mov        qword [rsp+0x48+var_10], rdx
0000000000004605         xor        edx, edx
0000000000004607         cmp        esi, 0xa
000000000000460a         je         loc_4674

000000000000460c         mov        dword [rsp+0x48+var_48], esi
000000000000460f         mov        rcx, rsp
0000000000004612         mov        rdx, 0xffffffffffffffff
0000000000004619         mov        rsi, rax
000000000000461c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004625         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000462e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004637         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004640         mov        qword [rsp+0x48+var_24], 0x0
0000000000004649         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004652         mov        dword [rsp+0x48+var_14], 0x0
000000000000465a         call       quotearg_n_options                          ; quotearg_n_options
000000000000465f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004664         xor        rcx, qword [fs:0x28]
000000000000466d         jne        loc_4679

000000000000466f         add        rsp, 0x48
0000000000004673         ret
                        ; endp

                     loc_4674:
0000000000004674         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4679:
0000000000004679         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000467e         align      128                                         ; End of unwind block (FDE at 0x822c)

                     quotearg_n_custom_mem:
0000000000004680         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8248), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004684         mov        r9, rcx
0000000000004687         mov        rcx, qword [qword_20a230]                   ; qword_20a230
000000000000468e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004696         mov        rax, qword [fs:0x28]
000000000000469f         mov        qword [rsp+0x48+var_10], rax
00000000000046a4         xor        eax, eax
00000000000046a6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000046aa         test       rsi, rsi
00000000000046ad         mov        qword [rsp+0x48+var_18], rcx
00000000000046b2         mov        dword [rsp+0x48+var_48], 0xa
00000000000046b9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a210
00000000000046c1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000046c6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a220
00000000000046ce         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000046d3         je         loc_4707

00000000000046d5         test       rdx, rdx
00000000000046d8         je         loc_4707

00000000000046da         mov        qword [rsp+0x48+var_20], rsi
00000000000046df         mov        qword [rsp+0x48+var_18], rdx
00000000000046e4         mov        rcx, rsp
00000000000046e7         mov        rdx, r8
00000000000046ea         mov        rsi, r9
00000000000046ed         call       quotearg_n_options                          ; quotearg_n_options
00000000000046f2         mov        rdi, qword [rsp+0x48+var_10]
00000000000046f7         xor        rdi, qword [fs:0x28]
0000000000004700         jne        loc_470c

0000000000004702         add        rsp, 0x48
0000000000004706         ret
                        ; endp

                     loc_4707:
0000000000004707         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_470c:
000000000000470c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004711         align      32                                          ; End of unwind block (FDE at 0x8248)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004720         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x8264)
0000000000004727         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000472c         align      16                                          ; End of unwind block (FDE at 0x8264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004730         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8278)
0000000000004733         mov        r8, 0xffffffffffffffff
000000000000473a         mov        rdx, rsi
000000000000473d         mov        rsi, rdi
0000000000004740         xor        edi, edi
0000000000004742         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004747         align      16                                          ; End of unwind block (FDE at 0x8278)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004750         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x828c)
0000000000004753         mov        rcx, rdx
0000000000004756         mov        rdx, rsi
0000000000004759         mov        rsi, rdi
000000000000475c         xor        edi, edi
000000000000475e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004763         align      16                                          ; End of unwind block (FDE at 0x828c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004770         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x82a0), quote_quoting_options
0000000000004777         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000477c         align      128                                         ; End of unwind block (FDE at 0x82a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004780         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x82b4), quote_quoting_options
0000000000004787         mov        rdx, rsi
000000000000478a         mov        rsi, rdi
000000000000478d         xor        edi, edi
000000000000478f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004794         align      32                                          ; End of unwind block (FDE at 0x82b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000047a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x82c8), quote_quoting_options
00000000000047a7         mov        rdx, 0xffffffffffffffff
00000000000047ae         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047b3         align      64                                          ; End of unwind block (FDE at 0x82c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000047c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x82dc), quote_quoting_options, CODE XREF=main+905, main+1076, main+1254, main+1436, main+1574, main+1624, main+1674, randread_error+11
00000000000047c7         mov        rsi, rdi
00000000000047ca         mov        rdx, 0xffffffffffffffff
00000000000047d1         xor        edi, edi
00000000000047d3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047d8         align      32                                          ; End of unwind block (FDE at 0x82dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     try_nocreate:
00000000000047e0         push       rbx                                         ; Begin of unwind block (FDE at 0x82f4), DATA XREF=gen_tempname_len+61
00000000000047e1         mov        rsi, rdi                                    ; argument "__filename" for method j___lxstat
00000000000047e4         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000047e9         sub        rsp, 0xa0
00000000000047f0         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
00000000000047f3         mov        rax, qword [fs:0x28]
00000000000047fc         mov        qword [rsp+0xa8+var_10], rax
0000000000004804         xor        eax, eax
0000000000004806         call       j___lxstat                                  ; __lxstat
000000000000480b         mov        ebx, eax
000000000000480d         call       j___errno_location                          ; __errno_location
0000000000004812         test       ebx, ebx
0000000000004814         je         loc_4830

0000000000004816         mov        edx, dword [rax]
0000000000004818         cmp        edx, 0x4b
000000000000481b         je         loc_4830

000000000000481d         xor        eax, eax
000000000000481f         cmp        edx, 0x2
0000000000004822         setne      al
0000000000004825         neg        eax
0000000000004827         jmp        loc_483b
0000000000004829         align      16

                     loc_4830:
0000000000004830         mov        dword [rax], 0x11                           ; CODE XREF=try_nocreate+52, try_nocreate+59
0000000000004836         mov        eax, 0xffffffff

                     loc_483b:
000000000000483b         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=try_nocreate+71
0000000000004843         xor        rcx, qword [fs:0x28]
000000000000484c         jne        loc_4857

000000000000484e         add        rsp, 0xa0
0000000000004855         pop        rbx
0000000000004856         ret
                        ; endp

                     loc_4857:
0000000000004857         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=try_nocreate+108
                        ; endp
000000000000485c         align      32                                          ; End of unwind block (FDE at 0x82f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_dir:
0000000000004860         mov        esi, 0x1c0                                  ; Begin of unwind block (FDE at 0x8318), argument "__mode" for method j_mkdir, DATA XREF=gen_tempname_len+117
0000000000004865         jmp        j_mkdir                                     ; mkdir
                        ; endp
000000000000486a         align      16                                          ; End of unwind block (FDE at 0x8318)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_file:
0000000000004870         mov        esi, dword [rsi]                            ; Begin of unwind block (FDE at 0x832c), DATA XREF=gen_tempname_len+85
0000000000004872         mov        edx, 0x180
0000000000004877         xor        eax, eax
0000000000004879         and        sil, 0x3c
000000000000487d         or         sil, 0xc2                                   ; argument "__oflag" for method j_open
0000000000004881         jmp        j_open                                      ; open
                        ; endp
0000000000004886         align      16                                          ; End of unwind block (FDE at 0x832c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     try_tempname_len:
0000000000004890         push       r15                                         ; Begin of unwind block (FDE at 0x8340), CODE XREF=gen_tempname_len+68, gen_tempname_len+92, gen_tempname_len+124, try_tempname+6
0000000000004892         push       r14
0000000000004894         mov        r15, rdi
0000000000004897         push       r13
0000000000004899         push       r12
000000000000489b         mov        r14, r8
000000000000489e         push       rbp
000000000000489f         push       rbx
00000000000048a0         mov        ebp, esi
00000000000048a2         sub        rsp, 0x38
00000000000048a6         mov        qword [rsp+0x68+var_50], rdx
00000000000048ab         mov        qword [rsp+0x68+var_68], rdi
00000000000048af         mov        qword [rsp+0x68+var_48], rcx
00000000000048b4         call       j___errno_location                          ; __errno_location
00000000000048b9         mov        qword [rsp+0x68+var_60], rax
00000000000048be         mov        eax, dword [rax]
00000000000048c0         mov        rdi, r15                                    ; argument "__s" for method j_strlen
00000000000048c3         mov        dword [rsp+0x68+var_3C], eax
00000000000048c7         call       j_strlen                                    ; strlen
00000000000048cc         movsxd     rsi, ebp
00000000000048cf         lea        rdx, qword [rsi+r14]
00000000000048d3         cmp        rdx, rax
00000000000048d6         ja         loc_49eb

00000000000048dc         sub        rax, r14
00000000000048df         mov        rbx, rax
00000000000048e2         sub        rbx, rsi
00000000000048e5         lea        rsi, qword [aPosix+4]                       ; argument "__accept" for method j_strspn, 0x7866
00000000000048ec         lea        rax, qword [r15+rbx]
00000000000048f0         mov        rdi, rax                                    ; argument "__s" for method j_strspn
00000000000048f3         mov        qword [rsp+0x68+var_58], rax
00000000000048f8         call       j_strspn                                    ; strspn
00000000000048fd         cmp        r14, rax
0000000000004900         ja         loc_49eb

0000000000004906         xor        edi, edi
0000000000004908         mov        rsi, r14
000000000000490b         call       randint_all_new                             ; randint_all_new
0000000000004910         test       rax, rax
0000000000004913         mov        rbp, rax
0000000000004916         je         loc_49fd

000000000000491c         mov        rax, qword [rsp+0x68+var_68]
0000000000004920         lea        r12, qword [letters]                        ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0000000000004927         mov        r13d, 0x3a2f8
000000000000492d         add        rax, r14
0000000000004930         add        rbx, rax
0000000000004933         nop        dword [rax+rax]

                     loc_4938:
0000000000004938         test       r14, r14                                    ; CODE XREF=try_tempname_len+253
000000000000493b         mov        r15, qword [rsp+0x68+var_58]
0000000000004940         je         loc_4967

0000000000004942         nop        word [rax+rax]

                     loc_4948:
0000000000004948         mov        esi, 0x3d                                   ; CODE XREF=try_tempname_len+213
000000000000494d         mov        rdi, rbp
0000000000004950         add        r15, 0x1
0000000000004954         call       randint_genmax                              ; randint_genmax
0000000000004959         movzx      eax, byte [r12+rax]
000000000000495e         mov        byte [r15-1], al
0000000000004962         cmp        r15, rbx
0000000000004965         jne        loc_4948

                     loc_4967:
0000000000004967         mov        rsi, qword [rsp+0x68+var_50]                ; CODE XREF=try_tempname_len+176
000000000000496c         mov        rdi, qword [rsp+0x68+var_68]
0000000000004970         mov        rax, qword [rsp+0x68+var_48]
0000000000004975         call       rax
0000000000004977         test       eax, eax
0000000000004979         mov        edx, eax
000000000000497b         jns        loc_49a9

000000000000497d         mov        rax, qword [rsp+0x68+var_60]
0000000000004982         mov        ecx, dword [rax]
0000000000004984         cmp        ecx, 0x11
0000000000004987         jne        loc_49e4

0000000000004989         sub        r13d, 0x1
000000000000498d         jne        loc_4938

000000000000498f         mov        rdi, rbp
0000000000004992         call       randint_all_free                            ; randint_all_free
0000000000004997         mov        rax, qword [rsp+0x68+var_60]
000000000000499c         mov        edx, 0xffffffff
00000000000049a1         mov        dword [rax], 0x11
00000000000049a7         jmp        loc_49d3

                     loc_49a9:
00000000000049a9         mov        rcx, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+235
00000000000049ae         mov        eax, dword [rsp+0x68+var_3C]
00000000000049b2         mov        dword [rcx], eax
00000000000049b4         mov        ecx, eax

                     loc_49b6:
00000000000049b6         mov        rdi, rbp                                    ; CODE XREF=try_tempname_len+345
00000000000049b9         mov        dword [rsp+0x68+var_58], edx
00000000000049bd         mov        dword [rsp+0x68+var_68], ecx
00000000000049c0         call       randint_all_free                            ; randint_all_free
00000000000049c5         mov        rax, qword [rsp+0x68+var_60]
00000000000049ca         mov        ecx, dword [rsp+0x68+var_68]
00000000000049cd         mov        edx, dword [rsp+0x68+var_58]
00000000000049d1         mov        dword [rax], ecx

                     loc_49d3:
00000000000049d3         add        rsp, 0x38                                   ; CODE XREF=try_tempname_len+279, try_tempname_len+363, try_tempname_len+370
00000000000049d7         mov        eax, edx
00000000000049d9         pop        rbx
00000000000049da         pop        rbp
00000000000049db         pop        r12
00000000000049dd         pop        r13
00000000000049df         pop        r14
00000000000049e1         pop        r15
00000000000049e3         ret
                        ; endp

                     loc_49e4:
00000000000049e4         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+247
00000000000049e9         jmp        loc_49b6

                     loc_49eb:
00000000000049eb         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+70, try_tempname_len+112
00000000000049f0         mov        edx, 0xffffffff
00000000000049f5         mov        dword [rax], 0x16
00000000000049fb         jmp        loc_49d3

                     loc_49fd:
00000000000049fd         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+134
0000000000004a02         jmp        loc_49d3
0000000000004a04         align      16                                          ; End of unwind block (FDE at 0x8340)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_C: int32_t, -12


                     gen_tempname_len:
0000000000004a10         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x838c), CODE XREF=main+799, main+1013, main+1049, main+1116, gen_tempname+6
0000000000004a14         cmp        ecx, 0x1
0000000000004a17         mov        dword [rsp+0x18+var_C], edx
0000000000004a1b         je         loc_4a80

0000000000004a1d         cmp        ecx, 0x2
0000000000004a20         je         loc_4a48

0000000000004a22         test       ecx, ecx
0000000000004a24         je         loc_4a60

0000000000004a26         lea        rcx, qword [__PRETTY_FUNCTION__.5642]       ; argument "__function" for method j___assert_fail, "gen_tempname_len"
0000000000004a2d         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/tempname.c"
0000000000004a34         lea        rdi, qword [aInvalidKindInG]                ; argument "__assertion" for method j___assert_fail, "! \\\"invalid KIND in __gen_tempname\\\""
0000000000004a3b         mov        edx, 0x147                                  ; argument "__line" for method j___assert_fail
0000000000004a40         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000004a45         align      8

                     loc_4a48:
0000000000004a48         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+16
0000000000004a4d         lea        rcx, qword [try_nocreate]                   ; try_nocreate
0000000000004a54         call       try_tempname_len                            ; try_tempname_len
0000000000004a59         add        rsp, 0x18
0000000000004a5d         ret
                        ; endp
0000000000004a5e         align      32

                     loc_4a60:
0000000000004a60         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+20
0000000000004a65         lea        rcx, qword [try_file]                       ; try_file
0000000000004a6c         call       try_tempname_len                            ; try_tempname_len
0000000000004a71         add        rsp, 0x18
0000000000004a75         ret
                        ; endp
0000000000004a76         align      128

                     loc_4a80:
0000000000004a80         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+11
0000000000004a85         lea        rcx, qword [try_dir]                        ; try_dir
0000000000004a8c         call       try_tempname_len                            ; try_tempname_len
0000000000004a91         add        rsp, 0x18
0000000000004a95         ret
                        ; endp
0000000000004a96         align      32                                          ; End of unwind block (FDE at 0x838c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gen_tempname:
0000000000004aa0         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x83b0)
0000000000004aa6         jmp        gen_tempname_len                            ; gen_tempname_len
                        ; endp
0000000000004aab         align      16                                          ; End of unwind block (FDE at 0x83b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_tempname:
0000000000004ab0         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x83c4)
0000000000004ab6         jmp        try_tempname_len                            ; try_tempname_len
                        ; endp
0000000000004abb         align      64                                          ; End of unwind block (FDE at 0x83c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004ac0         push       r15                                         ; Begin of unwind block (FDE at 0x83dc), CODE XREF=version_etc_va+75, version_etc+161
0000000000004ac2         push       r14
0000000000004ac4         push       r13
0000000000004ac6         push       r12
0000000000004ac8         mov        r12, r9
0000000000004acb         push       rbp
0000000000004acc         push       rbx
0000000000004acd         mov        rbp, rdi
0000000000004ad0         mov        rbx, r8
0000000000004ad3         sub        rsp, 0x28
0000000000004ad7         test       rsi, rsi
0000000000004ada         je         loc_4bf8

0000000000004ae0         mov        r8, rdx
0000000000004ae3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004aea         mov        r9, rcx
0000000000004aed         xor        eax, eax
0000000000004aef         mov        rcx, rsi
0000000000004af2         mov        esi, 0x1
0000000000004af7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4afc:
0000000000004afc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x7512, CODE XREF=version_etc_arn+337
0000000000004b03         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b05         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b0a         call       j_dcgettext                                 ; dcgettext
0000000000004b0f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004b16         mov        rcx, rax
0000000000004b19         mov        r8d, 0x7e3
0000000000004b1f         mov        esi, 0x1
0000000000004b24         mov        rdi, rbp
0000000000004b27         xor        eax, eax
0000000000004b29         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b2e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004b35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b3c         call       j_dcgettext                                 ; dcgettext
0000000000004b41         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004b44         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004b47         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004b4c         cmp        r12, 0x9
0000000000004b50         ja         loc_4e90

0000000000004b56         lea        rdx, qword [switch_table_77f8]              ; switch_table_77f8
0000000000004b5d         movsxd     rax, dword [rdx+r12*4]
0000000000004b61         add        rax, rdx
0000000000004b64         jmp        rax                                         ; switch statement using table at 0x77f8, with 10 cases, 0x4b70,0x4be6,0x4c20,0x4c78,0x4cb8,0x4d00,0x4d50,0x4da8,0x4dd8,0x4e40
0000000000004b66         align      16

                     loc_4b70:
0000000000004b70         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004b74         mov        rax, qword [rbx+0x10]
0000000000004b78         lea        rsi, qword [aWrittenBySSSns_7708]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004b7f         mov        r8, qword [rbx+8]
0000000000004b83         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b8a         mov        r13, qword [rbx+0x30]
0000000000004b8e         mov        r12, qword [rbx+0x28]
0000000000004b92         mov        qword [rsp+0x58+var_48], r9
0000000000004b97         mov        r15, qword [rbx+0x20]
0000000000004b9b         mov        r14, qword [rbx+0x18]
0000000000004b9f         mov        qword [rsp+0x58+var_58], rax
0000000000004ba3         mov        qword [rsp+0x58+var_50], r8
0000000000004ba8         mov        rbx, qword [rbx]
0000000000004bab         call       j_dcgettext                                 ; dcgettext
0000000000004bb0         sub        rsp, 0x8

                     loc_4bb4:
0000000000004bb4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004bb9         mov        rdx, rax
0000000000004bbc         mov        rcx, rbx
0000000000004bbf         mov        esi, 0x1
0000000000004bc4         mov        rdi, rbp
0000000000004bc7         xor        eax, eax
0000000000004bc9         push       r9
0000000000004bcb         push       r13
0000000000004bcd         push       r12
0000000000004bcf         push       r15
0000000000004bd1         push       r14
0000000000004bd3         mov        r9, qword [rsp+0x88+var_58]
0000000000004bd8         mov        r8, qword [rsp+0x88+var_50]
0000000000004bdd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004be2         add        rsp, 0x30

                     loc_4be6:
0000000000004be6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004bea         pop        rbx
0000000000004beb         pop        rbp
0000000000004bec         pop        r12
0000000000004bee         pop        r13
0000000000004bf0         pop        r14
0000000000004bf2         pop        r15
0000000000004bf4         ret
                        ; endp
0000000000004bf5         align      8

                     loc_4bf8:
0000000000004bf8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004bfb         mov        rcx, rdx
0000000000004bfe         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004c05         mov        esi, 0x1
0000000000004c0a         xor        eax, eax
0000000000004c0c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c11         jmp        loc_4afc
0000000000004c16         align      32

                     loc_4c20:
0000000000004c20         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004c24         mov        r9, qword [rbx+0x38]
0000000000004c28         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004c2f         mov        rax, qword [rbx+0x10]
0000000000004c33         mov        r8, qword [rbx+8]
0000000000004c37         mov        edx, 0x5
0000000000004c3c         mov        r13, qword [rbx+0x30]
0000000000004c40         mov        r12, qword [rbx+0x28]
0000000000004c44         mov        r15, qword [rbx+0x20]
0000000000004c48         mov        r14, qword [rbx+0x18]
0000000000004c4c         mov        rbx, qword [rbx]
0000000000004c4f         mov        qword [rsp+0x58+var_40], r10
0000000000004c54         mov        qword [rsp+0x58+var_48], r9
0000000000004c59         mov        qword [rsp+0x58+var_58], rax
0000000000004c5d         mov        qword [rsp+0x58+var_50], r8

                     loc_4c62:
0000000000004c62         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004c64         call       j_dcgettext                                 ; dcgettext
0000000000004c69         mov        r10, qword [rsp+0x58+var_40]
0000000000004c6e         push       r10
0000000000004c70         jmp        loc_4bb4
0000000000004c75         align      8

                     loc_4c78:
0000000000004c78         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004c7b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004c82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c89         call       j_dcgettext                                 ; dcgettext
0000000000004c8e         add        rsp, 0x28
0000000000004c92         mov        rcx, rbx
0000000000004c95         mov        rdi, rbp
0000000000004c98         pop        rbx
0000000000004c99         pop        rbp
0000000000004c9a         pop        r12
0000000000004c9c         pop        r13
0000000000004c9e         pop        r14
0000000000004ca0         pop        r15
0000000000004ca2         mov        rdx, rax
0000000000004ca5         mov        esi, 0x1
0000000000004caa         xor        eax, eax
0000000000004cac         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004cb1         align      8

                     loc_4cb8:
0000000000004cb8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004cbc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004cc3         mov        rbx, qword [rbx]
0000000000004cc6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ccb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ccd         call       j_dcgettext                                 ; dcgettext
0000000000004cd2         add        rsp, 0x28
0000000000004cd6         mov        r8, r12
0000000000004cd9         mov        rcx, rbx
0000000000004cdc         mov        rdi, rbp
0000000000004cdf         mov        rdx, rax
0000000000004ce2         mov        esi, 0x1
0000000000004ce7         pop        rbx
0000000000004ce8         pop        rbp
0000000000004ce9         pop        r12
0000000000004ceb         pop        r13
0000000000004ced         pop        r14
0000000000004cef         pop        r15
0000000000004cf1         xor        eax, eax
0000000000004cf3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004cf8         align      256

                     loc_4d00:
0000000000004d00         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004d04         mov        r12, qword [rbx+8]
0000000000004d08         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004d0f         mov        rbx, qword [rbx]
0000000000004d12         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d17         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d19         call       j_dcgettext                                 ; dcgettext
0000000000004d1e         add        rsp, 0x28
0000000000004d22         mov        r9, r13
0000000000004d25         mov        r8, r12
0000000000004d28         mov        rcx, rbx
0000000000004d2b         mov        rdi, rbp
0000000000004d2e         mov        rdx, rax
0000000000004d31         pop        rbx
0000000000004d32         pop        rbp
0000000000004d33         pop        r12
0000000000004d35         pop        r13
0000000000004d37         pop        r14
0000000000004d39         pop        r15
0000000000004d3b         mov        esi, 0x1
0000000000004d40         xor        eax, eax
0000000000004d42         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d47         align      16

                     loc_4d50:
0000000000004d50         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004d57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d5c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d5e         mov        r14, qword [rbx+0x18]
0000000000004d62         mov        r13, qword [rbx+0x10]
0000000000004d66         mov        r12, qword [rbx+8]
0000000000004d6a         mov        rbx, qword [rbx]
0000000000004d6d         call       j_dcgettext                                 ; dcgettext
0000000000004d72         sub        rsp, 0x8

                     loc_4d76:
0000000000004d76         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004d78         mov        rdx, rax
0000000000004d7b         mov        r9, r13
0000000000004d7e         mov        r8, r12
0000000000004d81         mov        rcx, rbx
0000000000004d84         mov        rdi, rbp
0000000000004d87         mov        esi, 0x1
0000000000004d8c         xor        eax, eax
0000000000004d8e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d93         pop        rax
0000000000004d94         pop        rdx
0000000000004d95         add        rsp, 0x28
0000000000004d99         pop        rbx
0000000000004d9a         pop        rbp
0000000000004d9b         pop        r12
0000000000004d9d         pop        r13
0000000000004d9f         pop        r14
0000000000004da1         pop        r15
0000000000004da3         ret
                        ; endp
0000000000004da4         align      8

                     loc_4da8:
0000000000004da8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004dac         lea        rsi, qword [aWrittenBySSSns_7688]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004db3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004db8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dba         mov        r14, qword [rbx+0x18]
0000000000004dbe         mov        r13, qword [rbx+0x10]
0000000000004dc2         mov        r12, qword [rbx+8]
0000000000004dc6         mov        rbx, qword [rbx]
0000000000004dc9         call       j_dcgettext                                 ; dcgettext
0000000000004dce         push       r15
0000000000004dd0         jmp        loc_4d76
0000000000004dd2         align      8

                     loc_4dd8:
0000000000004dd8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004ddc         mov        r12, qword [rbx+0x28]
0000000000004de0         lea        rsi, qword [aWrittenBySSSns_76b0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004de7         mov        r15, qword [rbx+0x20]
0000000000004deb         mov        r14, qword [rbx+0x18]
0000000000004def         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004df4         mov        r13, qword [rbx+0x10]
0000000000004df8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dfa         mov        rbx, qword [rbx]
0000000000004dfd         mov        qword [rsp+0x58+var_58], r8
0000000000004e01         call       j_dcgettext                                 ; dcgettext
0000000000004e06         sub        rsp, 0x8
0000000000004e0a         mov        r9, r13
0000000000004e0d         push       r12
0000000000004e0f         push       r15
0000000000004e11         push       r14

                     loc_4e13:
0000000000004e13         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004e18         mov        rcx, rbx
0000000000004e1b         mov        rdx, rax
0000000000004e1e         mov        rdi, rbp
0000000000004e21         mov        esi, 0x1
0000000000004e26         xor        eax, eax
0000000000004e28         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004e2d         add        rsp, 0x20
0000000000004e31         add        rsp, 0x28
0000000000004e35         pop        rbx
0000000000004e36         pop        rbp
0000000000004e37         pop        r12
0000000000004e39         pop        r13
0000000000004e3b         pop        r14
0000000000004e3d         pop        r15
0000000000004e3f         ret
                        ; endp

                     loc_4e40:
0000000000004e40         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004e44         mov        r13, qword [rbx+0x30]
0000000000004e48         lea        rsi, qword [aWrittenBySSSns_76d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004e4f         mov        r12, qword [rbx+0x28]
0000000000004e53         mov        r15, qword [rbx+0x20]
0000000000004e57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e5c         mov        r14, qword [rbx+0x18]
0000000000004e60         mov        r8, qword [rbx+8]
0000000000004e64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e66         mov        qword [rsp+0x58+var_50], r9
0000000000004e6b         mov        rbx, qword [rbx]
0000000000004e6e         mov        qword [rsp+0x58+var_58], r8
0000000000004e72         call       j_dcgettext                                 ; dcgettext
0000000000004e77         push       r13
0000000000004e79         push       r12
0000000000004e7b         push       r15
0000000000004e7d         push       r14
0000000000004e7f         mov        r9, qword [rsp+0x78+var_50]
0000000000004e84         jmp        loc_4e13
0000000000004e86         align      16

                     loc_4e90:
0000000000004e90         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004e94         mov        r9, qword [rbx+0x38]
0000000000004e98         mov        edx, 0x5
0000000000004e9d         mov        rax, qword [rbx+0x10]
0000000000004ea1         mov        r8, qword [rbx+8]
0000000000004ea5         lea        rsi, qword [aWrittenBySSSns_7770]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004eac         mov        r13, qword [rbx+0x30]
0000000000004eb0         mov        r12, qword [rbx+0x28]
0000000000004eb4         mov        r15, qword [rbx+0x20]
0000000000004eb8         mov        r14, qword [rbx+0x18]
0000000000004ebc         mov        qword [rsp+0x58+var_40], r10
0000000000004ec1         mov        qword [rsp+0x58+var_48], r9
0000000000004ec6         mov        qword [rsp+0x58+var_58], rax
0000000000004eca         mov        qword [rsp+0x58+var_50], r8
0000000000004ecf         mov        rbx, qword [rbx]
0000000000004ed2         jmp        loc_4c62
0000000000004ed7         align      32                                          ; End of unwind block (FDE at 0x83dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004ee0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x84f0)
0000000000004ee3         cmp        qword [r8], 0x0
0000000000004ee7         je         j_version_etc_arn                           ; version_etc_arn

0000000000004ee9         nop        dword [rax]

                     loc_4ef0:
0000000000004ef0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004ef4         cmp        qword [r8+r9*8], 0x0
0000000000004ef9         jne        loc_4ef0

                     j_version_etc_arn:        // version_etc_arn
0000000000004efb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004f00         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x84f0), Begin of unwind block (FDE at 0x8504)
0000000000004f04         mov        r10, r8
0000000000004f07         xor        r9d, r9d
0000000000004f0a         mov        rax, qword [fs:0x28]
0000000000004f13         mov        qword [rsp+0x68+var_10], rax
0000000000004f18         xor        eax, eax
0000000000004f1a         mov        r8, rsp
0000000000004f1d         nop        dword [rax]

                     loc_4f20:
0000000000004f20         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004f23         cmp        eax, 0x2f
0000000000004f26         ja         loc_4f6a

0000000000004f28         mov        r11d, eax
0000000000004f2b         add        r11, qword [r10+0x10]
0000000000004f2f         add        eax, 0x8
0000000000004f32         mov        dword [r10], eax

                     loc_4f35:
0000000000004f35         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004f38         test       rax, rax
0000000000004f3b         mov        qword [r8+r9*8], rax
0000000000004f3f         je         loc_4f4b

0000000000004f41         add        r9, 0x1
0000000000004f45         cmp        r9, 0xa
0000000000004f49         jne        loc_4f20

                     loc_4f4b:
0000000000004f4b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004f50         mov        rax, qword [rsp+0x68+var_10]
0000000000004f55         xor        rax, qword [fs:0x28]
0000000000004f5e         jne        loc_4f65

0000000000004f60         add        rsp, 0x68
0000000000004f64         ret
                        ; endp

                     loc_4f65:
0000000000004f65         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4f6a:
0000000000004f6a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004f6e         lea        rax, qword [r11+8]
0000000000004f72         mov        qword [r10+8], rax
0000000000004f76         jmp        loc_4f35
0000000000004f78         align      128                                         ; End of unwind block (FDE at 0x8504)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004f80         push       rbp                                         ; Begin of unwind block (FDE at 0x8520), CODE XREF=main+392
0000000000004f81         push       rbx
0000000000004f82         mov        r10d, 0x20
0000000000004f88         xor        r11d, r11d
0000000000004f8b         sub        rsp, 0xb8
0000000000004f92         mov        rax, qword [fs:0x28]
0000000000004f9b         mov        qword [rsp+0xc8+var_50], rax
0000000000004fa0         xor        eax, eax
0000000000004fa2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004faa         mov        qword [rsp+0xc8+var_28], r8
0000000000004fb2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004fba         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004fbf         mov        qword [rsp+0xc8+var_20], r9
0000000000004fc7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004fcf         mov        qword [rsp+0xc8+var_B8], rax
0000000000004fd4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004fdc         xor        r9d, r9d
0000000000004fdf         mov        qword [rsp+0xc8+var_B0], rax
0000000000004fe4         mov        rbp, rax
0000000000004fe7         nop        word [rax+rax]

                     loc_4ff0:
0000000000004ff0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004ff4         ja         loc_504c

0000000000004ff6         mov        eax, r10d
0000000000004ff9         mov        r11d, 0x1
0000000000004fff         add        r10d, 0x8
0000000000005003         add        rax, rbp

                     loc_5006:
0000000000005006         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005009         test       rax, rax
000000000000500c         mov        qword [r8+r9*8], rax
0000000000005010         je         loc_501c

0000000000005012         add        r9, 0x1
0000000000005016         cmp        r9, 0xa
000000000000501a         jne        loc_4ff0

                     loc_501c:
000000000000501c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000501f         jne        loc_5045

                     loc_5021:
0000000000005021         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005026         mov        rax, qword [rsp+0xc8+var_50]
000000000000502b         xor        rax, qword [fs:0x28]
0000000000005034         jne        loc_5040

0000000000005036         add        rsp, 0xb8
000000000000503d         pop        rbx
000000000000503e         pop        rbp
000000000000503f         ret
                        ; endp

                     loc_5040:
0000000000005040         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5045:
0000000000005045         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000504a         jmp        loc_5021

                     loc_504c:
000000000000504c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000504f         add        rbx, 0x8
0000000000005053         jmp        loc_5006
0000000000005055         align      32                                          ; End of unwind block (FDE at 0x8520)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005060         push       rbx                                         ; Begin of unwind block (FDE at 0x854c)
0000000000005061         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005068         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000506d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000506f         call       j_dcgettext                                 ; dcgettext
0000000000005074         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000507b         mov        rsi, rax
000000000000507e         mov        edi, 0x1
0000000000005083         xor        eax, eax
0000000000005085         call       j___printf_chk                              ; __printf_chk
000000000000508a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005091         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005096         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005098         call       j_dcgettext                                 ; dcgettext
000000000000509d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000050a4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x66a1
00000000000050ab         mov        rsi, rax
00000000000050ae         mov        edi, 0x1
00000000000050b3         xor        eax, eax
00000000000050b5         call       j___printf_chk                              ; __printf_chk
00000000000050ba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000050c1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000050c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050cf         call       j_dcgettext                                 ; dcgettext
00000000000050d4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000050d7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000050da         pop        rbx
00000000000050db         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000050e0         push       rbx                                         ; End of unwind block (FDE at 0x854c), Begin of unwind block (FDE at 0x856c), CODE XREF=main+515, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15, randint_new+9, randint_all_new+19, randread_new+79, randread_new+181
00000000000050e1         mov        rbx, rdi
00000000000050e4         call       j_malloc                                    ; malloc
00000000000050e9         test       rax, rax
00000000000050ec         jne        loc_50f3

00000000000050ee         test       rbx, rbx
00000000000050f1         jne        loc_50f5

                     loc_50f3:
00000000000050f3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000050f4         ret
                        ; endp

                     loc_50f5:
00000000000050f5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50fa:
00000000000050fa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x856c)
                     xnmalloc:
0000000000005100         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8588)
0000000000005103         mul        rsi
0000000000005106         mov        rdi, rax
0000000000005109         seto       al
000000000000510c         test       rdi, rdi
000000000000510f         js         loc_511b

0000000000005111         movzx      eax, al
0000000000005114         test       rax, rax
0000000000005117         jne        loc_511b

0000000000005119         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_511b:
000000000000511b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000511f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5124:
0000000000005124         nop                                                    ; End of unwind block (FDE at 0x8588)
0000000000005126         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005130         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x859c)
                        ; endp
0000000000005132         align      64                                          ; End of unwind block (FDE at 0x859c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005140         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x85b0), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005143         push       rbx
0000000000005144         mov        rbx, rsi
0000000000005147         jne        loc_514e

0000000000005149         test       rdi, rdi
000000000000514c         jne        loc_5168

                     loc_514e:
000000000000514e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005151         call       j_realloc                                   ; realloc
0000000000005156         test       rax, rax
0000000000005159         jne        loc_5160

000000000000515b         test       rbx, rbx
000000000000515e         jne        loc_5171

                     loc_5160:
0000000000005160         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005161         ret
                        ; endp
0000000000005162         align      8

                     loc_5168:
0000000000005168         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000516d         xor        eax, eax
000000000000516f         pop        rbx
0000000000005170         ret
                        ; endp

                     loc_5171:
0000000000005171         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5176:
0000000000005176         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x85b0)
                     xnrealloc:
0000000000005180         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x85d4)
0000000000005183         mul        rdx
0000000000005186         mov        rsi, rax
0000000000005189         seto       al
000000000000518c         test       rsi, rsi
000000000000518f         js         loc_519b

0000000000005191         movzx      eax, al
0000000000005194         test       rax, rax
0000000000005197         jne        loc_519b

0000000000005199         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_519b:
000000000000519b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000519f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51a4:
00000000000051a4         nop                                                    ; End of unwind block (FDE at 0x85d4)
00000000000051a6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000051b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x85e8)
00000000000051b3         mov        r9, rdx
00000000000051b6         mov        rcx, qword [rsi]
00000000000051b9         je         loc_51f0

00000000000051bb         xor        edx, edx
00000000000051bd         movabs     rax, 0x5555555555555554
00000000000051c7         div        r9
00000000000051ca         cmp        rax, rcx
00000000000051cd         jbe        loc_520b

00000000000051cf         mov        rax, rcx
00000000000051d2         shr        rax, 0x1
00000000000051d5         lea        rcx, qword [rax+rcx+1]

                     loc_51da:
00000000000051da         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000051dd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000051e1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000051e4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000051e9         align      16

                     loc_51f0:
00000000000051f0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000051f3         je         loc_5218

                     loc_51f5:
00000000000051f5         mov        rax, rcx                                    ; CODE XREF=sub_5214+28
00000000000051f8         mul        r9
00000000000051fb         seto       dl
00000000000051fe         test       rax, rax
0000000000005201         movzx      edx, dl
0000000000005204         js         loc_520b

0000000000005206         test       rdx, rdx
0000000000005209         je         loc_51da

                     loc_520b:
000000000000520b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000520f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5214:
0000000000005214         nop        dword [rax]
                        ; endp

                     loc_5218:
0000000000005218         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000521a         mov        eax, 0x80
000000000000521f         xor        r8d, r8d
0000000000005222         div        r9
0000000000005225         test       rax, rax
0000000000005228         sete       r8b
000000000000522c         lea        rcx, qword [r8+rax]
0000000000005230         jmp        loc_51f5
0000000000005232         align      64                                          ; End of unwind block (FDE at 0x85e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005240         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8600)
0000000000005243         mov        rax, qword [rsi]
0000000000005246         je         loc_5270

0000000000005248         movabs     rdx, 0x5555555555555553
0000000000005252         cmp        rax, rdx
0000000000005255         ja         loc_5281

0000000000005257         mov        rdx, rax
000000000000525a         shr        rdx, 0x1
000000000000525d         lea        rax, qword [rdx+rax+1]

                     loc_5262:
0000000000005262         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005265         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005268         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000526d         align      16

                     loc_5270:
0000000000005270         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005273         mov        edx, 0x80
0000000000005278         cmove      rax, rdx
000000000000527c         test       rax, rax
000000000000527f         jns        loc_5262

                     loc_5281:
0000000000005281         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005285         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_528a:
000000000000528a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8600)
                     xzalloc:
0000000000005290         push       rbx                                         ; Begin of unwind block (FDE at 0x8618)
0000000000005291         mov        rbx, rdi
0000000000005294         call       xmalloc                                     ; xmalloc
0000000000005299         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000529c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000529e         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000052a1         pop        rbx
00000000000052a2         jmp        j_memset                                    ; memset
                        ; endp
00000000000052a7         align      16                                          ; End of unwind block (FDE at 0x8618)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000052b0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8634)
00000000000052b3         sub        rsp, 0x8
00000000000052b7         mul        rsi
00000000000052ba         seto       dl
00000000000052bd         test       rax, rax
00000000000052c0         js         loc_52d9

00000000000052c2         movzx      edx, dl
00000000000052c5         test       rdx, rdx
00000000000052c8         jne        loc_52d9

00000000000052ca         call       j_calloc                                    ; calloc
00000000000052cf         test       rax, rax
00000000000052d2         je         loc_52d9

00000000000052d4         add        rsp, 0x8
00000000000052d8         ret
                        ; endp

                     loc_52d9:
00000000000052d9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_52de:
00000000000052de         nop                                                    ; End of unwind block (FDE at 0x8634)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000052e0         push       rbp                                         ; Begin of unwind block (FDE at 0x8650), CODE XREF=clone_quoting_options+40
00000000000052e1         push       rbx
00000000000052e2         mov        rbp, rdi
00000000000052e5         mov        rdi, rsi
00000000000052e8         mov        rbx, rsi
00000000000052eb         sub        rsp, 0x8
00000000000052ef         call       xmalloc                                     ; xmalloc
00000000000052f4         add        rsp, 0x8
00000000000052f8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000052fb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000052fe         pop        rbx
00000000000052ff         pop        rbp
0000000000005300         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005303         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005308         align      16                                          ; End of unwind block (FDE at 0x8650)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005310         push       rbx                                         ; Begin of unwind block (FDE at 0x8678), CODE XREF=main+758, main+1486
0000000000005311         mov        rbx, rdi
0000000000005314         call       j_strlen                                    ; strlen
0000000000005319         mov        rdi, rbx
000000000000531c         lea        rsi, qword [rax+1]
0000000000005320         pop        rbx
0000000000005321         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005323         align      16                                          ; End of unwind block (FDE at 0x8678)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005330         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8694), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=file_name_concat+19, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005337         sub        rsp, 0x8
000000000000533b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005340         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005342         call       j_dcgettext                                 ; dcgettext
0000000000005347         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000534d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6f17
0000000000005354         mov        rcx, rax
0000000000005357         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005359         xor        eax, eax
000000000000535b         call       j_error                                     ; error
0000000000005360         call       j_abort                                     ; abort
                        ; endp
0000000000005365         align      16                                          ; End of unwind block (FDE at 0x8694)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005370         push       r12                                         ; Begin of unwind block (FDE at 0x86ac), CODE XREF=close_stream+21, randread_free+51, fopen_safer+65, fopen_safer+134
0000000000005372         push       rbp
0000000000005373         push       rbx
0000000000005374         mov        rbx, rdi
0000000000005377         call       j_fileno                                    ; fileno
000000000000537c         test       eax, eax
000000000000537e         mov        rdi, rbx
0000000000005381         js         loc_53d7

0000000000005383         call       j___freading                                ; __freading
0000000000005388         test       eax, eax
000000000000538a         jne        loc_53b8

                     loc_538c:
000000000000538c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000538f         call       rpl_fflush                                  ; rpl_fflush
0000000000005394         test       eax, eax
0000000000005396         je         loc_53d4

0000000000005398         call       j___errno_location                          ; __errno_location
000000000000539d         mov        r12d, dword [rax]
00000000000053a0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000053a3         mov        rbp, rax
00000000000053a6         call       j_fclose                                    ; fclose
00000000000053ab         test       r12d, r12d
00000000000053ae         jne        loc_53e0

                     loc_53b0:
00000000000053b0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000053b1         pop        rbp
00000000000053b2         pop        r12
00000000000053b4         ret
                        ; endp
00000000000053b5         align      8

                     loc_53b8:
00000000000053b8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000053bb         call       j_fileno                                    ; fileno
00000000000053c0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000053c2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000053c7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000053c9         call       j_lseek                                     ; lseek
00000000000053ce         cmp        rax, 0xffffffffffffffff
00000000000053d2         jne        loc_538c

                     loc_53d4:
00000000000053d4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_53d7:
00000000000053d7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000053d8         pop        rbp
00000000000053d9         pop        r12
00000000000053db         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_53e0:
00000000000053e0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000053e4         mov        eax, 0xffffffff
00000000000053e9         jmp        loc_53b0
00000000000053eb         align      16                                          ; End of unwind block (FDE at 0x86ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000053f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x86e4), CODE XREF=rpl_fclose+31
00000000000053f3         push       rbx
00000000000053f4         mov        rbx, rdi
00000000000053f7         je         loc_540a

00000000000053f9         call       j___freading                                ; __freading
00000000000053fe         test       eax, eax
0000000000005400         je         loc_540a

0000000000005402         test       dword [rbx], 0x100
0000000000005408         jne        loc_5418

                     loc_540a:
000000000000540a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000540d         pop        rbx
000000000000540e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005413         align      8

                     loc_5418:
0000000000005418         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000541b         mov        edx, 0x1
0000000000005420         xor        esi, esi
0000000000005422         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005427         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000542a         pop        rbx
000000000000542b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005430         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x86e4), Begin of unwind block (FDE at 0x8704), CODE XREF=rpl_fflush+50
0000000000005434         cmp        qword [rdi+0x10], rax
0000000000005438         je         loc_5440

                     j_j_fseeko:        // fseeko
000000000000543a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000543f         align      64

                     loc_5440:
0000000000005440         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005444         cmp        qword [rdi+0x28], rax
0000000000005448         jne        j_j_fseeko                                  ; fseeko

000000000000544a         cmp        qword [rdi+0x48], 0x0
000000000000544f         jne        j_j_fseeko                                  ; fseeko

0000000000005451         push       r12
0000000000005453         push       rbp
0000000000005454         mov        r12d, edx
0000000000005457         push       rbx
0000000000005458         mov        rbp, rsi
000000000000545b         mov        rbx, rdi
000000000000545e         call       j_fileno                                    ; fileno
0000000000005463         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005466         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005469         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000546b         call       j_lseek                                     ; lseek
0000000000005470         cmp        rax, 0xffffffffffffffff
0000000000005474         je         loc_5482

0000000000005476         and        dword [rbx], 0xffffffef
0000000000005479         mov        qword [rbx+0x90], rax
0000000000005480         xor        eax, eax

                     loc_5482:
0000000000005482         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005483         pop        rbp
0000000000005484         pop        r12
0000000000005486         ret
                        ; endp
0000000000005487         align      16                                          ; End of unwind block (FDE at 0x8704)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005490         push       r13                                         ; Begin of unwind block (FDE at 0x8734), CODE XREF=sub_3380+534
0000000000005492         push       r12
0000000000005494         mov        r13, rsi
0000000000005497         push       rbp
0000000000005498         push       rbx
0000000000005499         mov        rbx, rdi
000000000000549c         mov        r12, rdx
000000000000549f         sub        rsp, 0x18
00000000000054a3         mov        rax, qword [fs:0x28]
00000000000054ac         mov        qword [rsp+0x38+var_30], rax
00000000000054b1         xor        eax, eax
00000000000054b3         lea        rax, qword [rsp+0x38+var_34]
00000000000054b8         test       rdi, rdi
00000000000054bb         cmove      rbx, rax
00000000000054bf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000054c2         call       j_mbrtowc                                   ; mbrtowc
00000000000054c7         cmp        rax, 0xfffffffffffffffd
00000000000054cb         mov        rbp, rax
00000000000054ce         jbe        loc_54f0

00000000000054d0         test       r12, r12
00000000000054d3         je         loc_54f0

00000000000054d5         xor        edi, edi
00000000000054d7         call       hard_locale                                 ; hard_locale
00000000000054dc         test       al, al
00000000000054de         jne        loc_54f0

00000000000054e0         movzx      eax, byte [r13]
00000000000054e5         mov        ebp, 0x1
00000000000054ea         mov        dword [rbx], eax
00000000000054ec         nop        dword [rax]

                     loc_54f0:
00000000000054f0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000054f5         xor        rdx, qword [fs:0x28]
00000000000054fe         mov        rax, rbp
0000000000005501         jne        loc_550e

0000000000005503         add        rsp, 0x18
0000000000005507         pop        rbx
0000000000005508         pop        rbp
0000000000005509         pop        r12
000000000000550b         pop        r13
000000000000550d         ret
                        ; endp

                     loc_550e:
000000000000550e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005513         align      32                                          ; End of unwind block (FDE at 0x8734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005520         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8774), CODE XREF=rpl_mbrtowc+71
0000000000005524         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005526         call       j_setlocale                                 ; setlocale
000000000000552b         mov        rdx, rax
000000000000552e         mov        eax, 0x1
0000000000005533         test       rdx, rdx
0000000000005536         je         loc_5555

0000000000005538         lea        rdi, qword [aMemoryExhauste+17]             ; 0x7860
000000000000553f         mov        ecx, 0x2
0000000000005544         mov        rsi, rdx
0000000000005547         rep  cmpsb byte [rsi], byte [rdi]
0000000000005549         seta       cl
000000000000554c         sbb        cl, 0x0
000000000000554f         xor        eax, eax
0000000000005551         test       cl, cl
0000000000005553         jne        loc_5560

                     loc_5555:
0000000000005555         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005559         ret
                        ; endp
000000000000555a         align      32

                     loc_5560:
0000000000005560         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005567         mov        ecx, 0x6
000000000000556c         mov        rsi, rdx
000000000000556f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005571         seta       al
0000000000005574         sbb        al, 0x0
0000000000005576         test       al, al
0000000000005578         setne      al
000000000000557b         add        rsp, 0x8
000000000000557f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005580         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x8774), Begin of unwind block (FDE at 0x8794), CODE XREF=gettext_quote.part.1+11
0000000000005584         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005589         call       j_nl_langinfo                               ; nl_langinfo
000000000000558e         test       rax, rax
0000000000005591         je         loc_55b0

0000000000005593         cmp        byte [rax], 0x0
0000000000005596         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000559d         cmove      rax, rdx
00000000000055a1         add        rsp, 0x8
00000000000055a5         ret
                        ; endp
00000000000055a6         align      16

                     loc_55b0:
00000000000055b0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000055b7         add        rsp, 0x8
00000000000055bb         ret
                        ; endp
00000000000055bc         align      64                                          ; End of unwind block (FDE at 0x8794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_new:
00000000000055c0         push       rbx                                         ; Begin of unwind block (FDE at 0x87b4)
00000000000055c1         mov        rbx, rdi
00000000000055c4         mov        edi, 0x18
00000000000055c9         call       xmalloc                                     ; xmalloc
00000000000055ce         mov        qword [rax], rbx
00000000000055d1         mov        qword [rax+0x10], 0x0
00000000000055d9         mov        qword [rax+8], 0x0
00000000000055e1         pop        rbx
00000000000055e2         ret
                        ; endp
00000000000055e3         align      16                                          ; End of unwind block (FDE at 0x87b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_new:
00000000000055f0         push       rbx                                         ; Begin of unwind block (FDE at 0x87d0), CODE XREF=try_tempname_len+123
00000000000055f1         call       randread_new                                ; randread_new
00000000000055f6         test       rax, rax
00000000000055f9         je         loc_5620

00000000000055fb         mov        rbx, rax
00000000000055fe         mov        edi, 0x18
0000000000005603         call       xmalloc                                     ; xmalloc
0000000000005608         mov        qword [rax], rbx
000000000000560b         mov        qword [rax+0x10], 0x0
0000000000005613         mov        qword [rax+8], 0x0
000000000000561b         pop        rbx
000000000000561c         ret
                        ; endp
000000000000561d         align      32

                     loc_5620:
0000000000005620         xor        eax, eax                                    ; CODE XREF=randint_all_new+9
0000000000005622         pop        rbx
0000000000005623         ret
                        ; endp
0000000000005624         align      16                                          ; End of unwind block (FDE at 0x87d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_get_source:
0000000000005630         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x87f0)
0000000000005633         ret
                        ; endp
0000000000005634         align      64                                          ; End of unwind block (FDE at 0x87f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     randint_genmax:
0000000000005640         push       r15                                         ; Begin of unwind block (FDE at 0x8804), CODE XREF=try_tempname_len+196
0000000000005642         push       r14
0000000000005644         lea        r15, qword [rsi+1]
0000000000005648         push       r13
000000000000564a         push       r12
000000000000564c         mov        r13, rdi
000000000000564f         push       rbp
0000000000005650         push       rbx
0000000000005651         mov        r14, rsi
0000000000005654         sub        rsp, 0x28
0000000000005658         mov        rbp, qword [rdi+8]
000000000000565c         mov        rbx, qword [rdi+0x10]
0000000000005660         mov        rax, qword [fs:0x28]
0000000000005669         mov        qword [rsp+0x58+var_40], rax
000000000000566e         xor        eax, eax
0000000000005670         mov        rax, qword [rdi]
0000000000005673         lea        r12, qword [rsp+0x58+var_48]
0000000000005678         mov        qword [rsp+0x58+var_50], rax
000000000000567d         jmp        loc_56b5
000000000000567f         align      128

                     loc_5680:
0000000000005680         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+120
0000000000005683         je         loc_570f

                     loc_5689:
0000000000005689         mov        rax, rbx                                    ; CODE XREF=randint_genmax+201
000000000000568c         xor        edx, edx
000000000000568e         sub        rax, r14
0000000000005691         div        r15
0000000000005694         sub        rbx, rdx
0000000000005697         mov        rdi, rdx
000000000000569a         mov        rsi, rax
000000000000569d         xor        edx, edx
000000000000569f         mov        rax, rbp
00000000000056a2         div        r15
00000000000056a5         cmp        rbp, rbx
00000000000056a8         jbe        loc_5748

00000000000056ae         lea        rbx, qword [rdi-1]
00000000000056b2         mov        rbp, rdx

                     loc_56b5:
00000000000056b5         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+61
00000000000056b8         jae        loc_5680

00000000000056ba         mov        rax, rbx
00000000000056bd         xor        edx, edx
00000000000056bf         nop

                     loc_56c0:
00000000000056c0         shl        rax, 0x8                                    ; CODE XREF=randint_genmax+145
00000000000056c4         add        rdx, 0x1
00000000000056c8         add        rax, 0xff
00000000000056ce         cmp        r14, rax
00000000000056d1         ja         loc_56c0

00000000000056d3         mov        rdi, qword [rsp+0x58+var_50]
00000000000056d8         mov        rsi, r12
00000000000056db         call       randread                                    ; randread
00000000000056e0         mov        rax, r12
00000000000056e3         nop        dword [rax+rax]

                     loc_56e8:
00000000000056e8         movzx      edx, byte [rax]                             ; CODE XREF=randint_genmax+196
00000000000056eb         shl        rbx, 0x8
00000000000056ef         shl        rbp, 0x8
00000000000056f3         add        rbx, 0xff
00000000000056fa         add        rax, 0x1
00000000000056fe         add        rbp, rdx
0000000000005701         cmp        r14, rbx
0000000000005704         ja         loc_56e8

0000000000005706         cmp        rbx, r14
0000000000005709         jne        loc_5689

                     loc_570f:
000000000000570f         mov        qword [r13+0x10], 0x0                       ; CODE XREF=randint_genmax+67
0000000000005717         mov        qword [r13+8], 0x0

                     loc_571f:
000000000000571f         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=randint_genmax+275
0000000000005724         xor        rcx, qword [fs:0x28]
000000000000572d         mov        rax, rbp
0000000000005730         jne        loc_5755

0000000000005732         add        rsp, 0x28
0000000000005736         pop        rbx
0000000000005737         pop        rbp
0000000000005738         pop        r12
000000000000573a         pop        r13
000000000000573c         pop        r14
000000000000573e         pop        r15
0000000000005740         ret
                        ; endp
0000000000005741         align      8

                     loc_5748:
0000000000005748         mov        qword [r13+8], rax                          ; CODE XREF=randint_genmax+104
000000000000574c         mov        qword [r13+0x10], rsi
0000000000005750         mov        rbp, rdx
0000000000005753         jmp        loc_571f

                     loc_5755:
0000000000005755         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randint_genmax+240
                        ; endp
000000000000575a         align      32                                          ; End of unwind block (FDE at 0x8804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_free:
0000000000005760         push       rbx                                         ; Begin of unwind block (FDE at 0x8850)
0000000000005761         mov        rdx, 0xffffffffffffffff
0000000000005768         mov        rbx, rdi
000000000000576b         mov        esi, 0x18
0000000000005770         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000005775         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000005778         pop        rbx
0000000000005779         jmp        j_free                                      ; free
                        ; endp
000000000000577e         align      128                                         ; End of unwind block (FDE at 0x8850)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_free:
0000000000005780         push       r13                                         ; Begin of unwind block (FDE at 0x886c), CODE XREF=try_tempname_len+258, try_tempname_len+304
0000000000005782         push       r12
0000000000005784         push       rbp
0000000000005785         push       rbx
0000000000005786         mov        rbx, rdi
0000000000005789         sub        rsp, 0x8
000000000000578d         mov        rdi, qword [rdi]
0000000000005790         call       randread_free                               ; randread_free
0000000000005795         mov        r12d, eax
0000000000005798         call       j___errno_location                          ; __errno_location
000000000000579d         mov        r13d, dword [rax]
00000000000057a0         mov        rdi, rbx
00000000000057a3         mov        rdx, 0xffffffffffffffff
00000000000057aa         mov        esi, 0x18
00000000000057af         mov        rbp, rax
00000000000057b2         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
00000000000057b7         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
00000000000057ba         call       j_free                                      ; free
00000000000057bf         mov        dword [rbp], r13d
00000000000057c3         add        rsp, 0x8
00000000000057c7         mov        eax, r12d
00000000000057ca         pop        rbx
00000000000057cb         pop        rbp
00000000000057cc         pop        r12
00000000000057ce         pop        r13
00000000000057d0         ret
                        ; endp
00000000000057d1         align      32                                          ; End of unwind block (FDE at 0x886c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_error:
00000000000057e0         push       rbp                                         ; Begin of unwind block (FDE at 0x88a4), DATA XREF=randread_new+90, randread_new+196, randread_new+348
00000000000057e1         push       rbx
00000000000057e2         sub        rsp, 0x8
00000000000057e6         test       rdi, rdi
00000000000057e9         je         loc_5828

00000000000057eb         call       quote                                       ; quote
00000000000057f0         mov        rbp, rax
00000000000057f3         call       j___errno_location                          ; __errno_location
00000000000057f8         cmp        dword [rax], 0x0
00000000000057fb         mov        rbx, rax
00000000000057fe         mov        edx, 0x5
0000000000005803         je         loc_582d

0000000000005805         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
000000000000580c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000580e         call       j_dcgettext                                 ; dcgettext

                     loc_5813:
0000000000005813         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure, CODE XREF=randread_error+91
0000000000005819         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000581b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000581e         mov        rcx, rbp
0000000000005821         xor        eax, eax
0000000000005823         call       j_error                                     ; error

                     loc_5828:
0000000000005828         call       j_abort                                     ; abort, CODE XREF=randread_error+9
                        ; endp

                     loc_582d:
000000000000582d         lea        rsi, qword [aSEndOfFile]                    ; argument "msgid" for method j_dcgettext, "%s: end of file", CODE XREF=randread_error+35
0000000000005834         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005836         call       j_dcgettext                                 ; dcgettext
000000000000583b         jmp        loc_5813
000000000000583d         align      64                                          ; End of unwind block (FDE at 0x88a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     randread_new:
0000000000005840         push       r15                                         ; Begin of unwind block (FDE at 0x88c4), CODE XREF=randint_all_new+1
0000000000005842         push       r14
0000000000005844         push       r13
0000000000005846         push       r12
0000000000005848         push       rbp
0000000000005849         push       rbx
000000000000584a         sub        rsp, 0x38
000000000000584e         mov        rax, qword [fs:0x28]
0000000000005857         mov        qword [rsp+0x68+var_40], rax
000000000000585c         xor        eax, eax
000000000000585e         test       rsi, rsi
0000000000005861         je         loc_5988

0000000000005867         test       rdi, rdi
000000000000586a         mov        r12, rdi
000000000000586d         mov        rbp, rsi
0000000000005870         je         loc_58f0

0000000000005872         lea        rsi, qword [aDevurandom+13]                 ; 0x789a
0000000000005879         call       fopen_safer                                 ; fopen_safer
000000000000587e         test       rax, rax
0000000000005881         mov        r13, rax
0000000000005884         je         loc_5a88

000000000000588a         mov        edi, 0x1038
000000000000588f         call       xmalloc                                     ; xmalloc
0000000000005894         mov        rbx, rax
0000000000005897         mov        qword [rax], r13
000000000000589a         lea        rax, qword [randread_error]                 ; randread_error
00000000000058a1         cmp        rbp, 0x1000
00000000000058a8         mov        ecx, 0x1000
00000000000058ad         lea        rsi, qword [rbx+0x18]                       ; argument "__buf" for method j_setvbuf
00000000000058b1         cmovbe     rcx, rbp                                    ; argument "__n" for method j_setvbuf
00000000000058b5         mov        qword [rbx+8], rax
00000000000058b9         mov        qword [rbx+0x10], r12
00000000000058bd         xor        edx, edx                                    ; argument "__modes" for method j_setvbuf
00000000000058bf         mov        rdi, r13                                    ; argument "__stream" for method j_setvbuf
00000000000058c2         call       j_setvbuf                                   ; setvbuf

                     loc_58c7:
00000000000058c7         mov        rdx, qword [rsp+0x68+var_40]                ; CODE XREF=randread_new+317, randread_new+367, randread_new+586
00000000000058cc         xor        rdx, qword [fs:0x28]
00000000000058d5         mov        rax, rbx
00000000000058d8         jne        loc_5a8f

00000000000058de         add        rsp, 0x38
00000000000058e2         pop        rbx
00000000000058e3         pop        rbp
00000000000058e4         pop        r12
00000000000058e6         pop        r13
00000000000058e8         pop        r14
00000000000058ea         pop        r15
00000000000058ec         ret
                        ; endp
00000000000058ed         align      16

                     loc_58f0:
00000000000058f0         mov        edi, 0x1038                                 ; CODE XREF=randread_new+48
00000000000058f5         call       xmalloc                                     ; xmalloc
00000000000058fa         mov        rbx, rax
00000000000058fd         mov        qword [rax], 0x0
0000000000005904         lea        rax, qword [randread_error]                 ; randread_error
000000000000590b         lea        rdi, qword [aDevurandom]                    ; argument "__file" for method j_open, "/dev/urandom"
0000000000005912         xor        esi, esi                                    ; argument "__oflag" for method j_open
0000000000005914         mov        qword [rbx+0x10], 0x0
000000000000591c         mov        qword [rbx+8], rax
0000000000005920         mov        qword [rbx+0x18], 0x0
0000000000005928         xor        eax, eax
000000000000592a         call       j_open                                      ; open
000000000000592f         test       eax, eax
0000000000005931         lea        r13, qword [rbx+0x20]
0000000000005935         mov        r15d, eax
0000000000005938         js         loc_59b8

000000000000593a         cmp        rbp, 0x800
0000000000005941         mov        rdx, rbp
0000000000005944         mov        r14d, 0x800
000000000000594a         cmova      rdx, r14
000000000000594e         mov        ecx, 0x1018
0000000000005953         mov        rsi, r13
0000000000005956         mov        edi, eax
0000000000005958         call       j___read_chk                                ; __read_chk
000000000000595d         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000005960         mov        rbp, rax
0000000000005963         call       j_close                                     ; close
0000000000005968         cmp        rbp, 0x7ff
000000000000596f         jle        loc_5a94

                     loc_5975:
0000000000005975         mov        rdi, r13                                    ; CODE XREF=randread_new+502, randread_new+547, randread_new+573, randread_new+663, randread_new+742, randread_new+798
0000000000005978         call       isaac_seed                                  ; isaac_seed
000000000000597d         jmp        loc_58c7
0000000000005982         align      8

                     loc_5988:
0000000000005988         mov        edi, 0x1038                                 ; CODE XREF=randread_new+33
000000000000598d         call       xmalloc                                     ; xmalloc
0000000000005992         mov        rbx, rax
0000000000005995         mov        qword [rax], 0x0
000000000000599c         lea        rax, qword [randread_error]                 ; randread_error
00000000000059a3         mov        qword [rbx+0x10], 0x0
00000000000059ab         mov        qword [rbx+8], rax
00000000000059af         jmp        loc_58c7
00000000000059b4         align      8

                     loc_59b8:
00000000000059b8         lea        r12, qword [rsp+0x68+var_58]                ; CODE XREF=randread_new+248
00000000000059bd         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
00000000000059bf         mov        r14d, 0x18
00000000000059c5         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
00000000000059c8         call       j_gettimeofday                              ; gettimeofday
00000000000059cd         movdqa     xmm0, xmmword [rsp+0x68+var_58]
00000000000059d3         movups     xmmword [rbx+0x20], xmm0
00000000000059d7         call       j_getpid                                    ; getpid
00000000000059dc         mov        dword [rbx+0x30], eax
00000000000059df         mov        dword [rsp+0x68+var_58], eax
00000000000059e3         call       j_getppid                                   ; getppid
00000000000059e8         mov        dword [rsp+0x68+var_58], eax
00000000000059ec         mov        dword [rbx+0x34], eax

                     loc_59ef:
00000000000059ef         mov        ebp, 0x800                                  ; CODE XREF=randread_new+804
00000000000059f4         mov        eax, 0x4
00000000000059f9         sub        rbp, r14
00000000000059fc         cmp        rbp, 0x4
0000000000005a00         cmova      rbp, rax
0000000000005a04         call       j_getuid                                    ; getuid
0000000000005a09         test       ebp, ebp
0000000000005a0b         mov        dword [rsp+0x68+var_58], eax
0000000000005a0f         lea        rcx, qword [r13+r14]
0000000000005a14         mov        esi, ebp
0000000000005a16         je         loc_5a2c

0000000000005a18         xor        eax, eax

                     loc_5a1a:
0000000000005a1a         mov        edx, eax                                    ; CODE XREF=randread_new+490
0000000000005a1c         add        eax, 0x1
0000000000005a1f         movzx      edi, byte [r12+rdx]
0000000000005a24         cmp        eax, esi
0000000000005a26         mov        byte [rcx+rdx], dil
0000000000005a2a         jb         loc_5a1a

                     loc_5a2c:
0000000000005a2c         add        rbp, r14                                    ; CODE XREF=randread_new+470
0000000000005a2f         cmp        rbp, 0x7ff
0000000000005a36         ja         loc_5975

0000000000005a3c         call       j_getgid                                    ; getgid
0000000000005a41         mov        dword [rsp+0x68+var_58], eax
0000000000005a45         mov        eax, 0x800
0000000000005a4a         mov        edx, 0x4
0000000000005a4f         sub        rax, rbp
0000000000005a52         lea        rcx, qword [r13+rbp]
0000000000005a57         cmp        rax, 0x4
0000000000005a5b         cmova      rax, rdx
0000000000005a5f         test       eax, eax
0000000000005a61         mov        esi, eax
0000000000005a63         je         loc_5975

0000000000005a69         xor        eax, eax

                     loc_5a6b:
0000000000005a6b         mov        edx, eax                                    ; CODE XREF=randread_new+571
0000000000005a6d         add        eax, 0x1
0000000000005a70         movzx      edi, byte [r12+rdx]
0000000000005a75         cmp        eax, esi
0000000000005a77         mov        byte [rcx+rdx], dil
0000000000005a7b         jb         loc_5a6b

0000000000005a7d         jmp        loc_5975
0000000000005a82         align      8

                     loc_5a88:
0000000000005a88         xor        ebx, ebx                                    ; CODE XREF=randread_new+68
0000000000005a8a         jmp        loc_58c7

                     loc_5a8f:
0000000000005a8f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randread_new+152
                        ; endp

                     loc_5a94:
0000000000005a94         test       rbp, rbp                                    ; CODE XREF=randread_new+303
0000000000005a97         mov        r15, r14
0000000000005a9a         mov        eax, 0x10
0000000000005a9f         cmovs      rbp, r12
0000000000005aa3         lea        r12, qword [rsp+0x68+var_58]
0000000000005aa8         sub        r15, rbp
0000000000005aab         cmp        r15, 0x10
0000000000005aaf         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
0000000000005ab2         cmova      r15, rax
0000000000005ab6         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
0000000000005ab8         call       j_gettimeofday                              ; gettimeofday
0000000000005abd         lea        rax, qword [r13+rbp]
0000000000005ac2         add        rbp, r15
0000000000005ac5         mov        ecx, r15d
0000000000005ac8         cmp        rbp, 0x7ff
0000000000005acf         mov        rsi, r12
0000000000005ad2         mov        rdi, rax
0000000000005ad5         rep movsb  byte [rdi], byte [rsi]
0000000000005ad7         ja         loc_5975

0000000000005add         mov        r15, r14
0000000000005ae0         mov        r8d, 0x4
0000000000005ae6         sub        r15, rbp
0000000000005ae9         mov        qword [rsp+0x68+var_60], r8
0000000000005aee         cmp        r15, 0x4
0000000000005af2         cmova      r15, r8
0000000000005af6         lea        rdx, qword [rbp+r15]
0000000000005afb         add        rbp, r13
0000000000005afe         mov        qword [rsp+0x68+var_68], rdx
0000000000005b02         call       j_getpid                                    ; getpid
0000000000005b07         mov        rdx, qword [rsp+0x68+var_68]
0000000000005b0b         mov        dword [rsp+0x68+var_58], eax
0000000000005b0f         mov        ecx, r15d
0000000000005b12         mov        rdi, rbp
0000000000005b15         mov        rsi, r12
0000000000005b18         mov        r8, qword [rsp+0x68+var_60]
0000000000005b1d         rep movsb  byte [rdi], byte [rsi]
0000000000005b1f         cmp        rdx, 0x7ff
0000000000005b26         jg         loc_5975

0000000000005b2c         sub        r14, rdx
0000000000005b2f         cmp        r14, 0x4
0000000000005b33         cmova      r14, r8
0000000000005b37         call       j_getppid                                   ; getppid
0000000000005b3c         mov        rdx, qword [rsp+0x68+var_68]
0000000000005b40         mov        dword [rsp+0x68+var_58], eax
0000000000005b44         mov        ecx, r14d
0000000000005b47         mov        rsi, r12
0000000000005b4a         lea        rax, qword [r13+rdx]
0000000000005b4f         add        r14, rdx
0000000000005b52         cmp        r14, 0x7ff
0000000000005b59         mov        rdi, rax
0000000000005b5c         rep movsb  byte [rdi], byte [rsi]
0000000000005b5e         ja         loc_5975

0000000000005b64         jmp        loc_59ef
0000000000005b69         align      16                                          ; End of unwind block (FDE at 0x88c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler:
0000000000005b70         mov        qword [rdi+8], rsi                          ; Begin of unwind block (FDE at 0x8910)
0000000000005b74         ret
                        ; endp
0000000000005b75         align      128                                         ; End of unwind block (FDE at 0x8910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler_arg:
0000000000005b80         mov        qword [rdi+0x10], rsi                       ; Begin of unwind block (FDE at 0x8924)
0000000000005b84         ret
                        ; endp
0000000000005b85         align      16                                          ; End of unwind block (FDE at 0x8924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     randread:
0000000000005b90         push       r15                                         ; Begin of unwind block (FDE at 0x8938), CODE XREF=randint_genmax+155
0000000000005b92         push       r14
0000000000005b94         push       r13
0000000000005b96         push       r12
0000000000005b98         mov        r12, rdi
0000000000005b9b         push       rbp
0000000000005b9c         push       rbx
0000000000005b9d         mov        rbp, rdx
0000000000005ba0         mov        rbx, rsi
0000000000005ba3         sub        rsp, 0x18
0000000000005ba7         mov        rcx, qword [rdi]
0000000000005baa         test       rcx, rcx
0000000000005bad         mov        qword [rsp+0x48+var_40], rcx
0000000000005bb2         je         loc_5c18

0000000000005bb4         call       j___errno_location                          ; __errno_location
0000000000005bb9         mov        rcx, qword [rsp+0x48+var_40]
0000000000005bbe         mov        r13, rax
0000000000005bc1         jmp        loc_5be6
0000000000005bc3         align      8

                     loc_5bc8:
0000000000005bc8         mov        rax, qword [r12]                            ; CODE XREF=randread+112
0000000000005bcc         mov        rdi, qword [r12+0x10]
0000000000005bd1         mov        eax, dword [rax]
0000000000005bd3         and        eax, 0x20
0000000000005bd6         cmovne     eax, edx
0000000000005bd9         mov        dword [r13], eax
0000000000005bdd         call       qword [r12+8]
0000000000005be2         mov        rcx, qword [r12]

                     loc_5be6:
0000000000005be6         mov        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked, CODE XREF=randread+49
0000000000005be9         mov        rdi, rbx                                    ; argument "__ptr" for method j_fread_unlocked
0000000000005bec         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000005bf1         call       j_fread_unlocked                            ; fread_unlocked
0000000000005bf6         add        rbx, rax
0000000000005bf9         sub        rbp, rax
0000000000005bfc         mov        edx, dword [r13]
0000000000005c00         jne        loc_5bc8

                     loc_5c02:
0000000000005c02         add        rsp, 0x18                                   ; CODE XREF=randread+366
0000000000005c06         pop        rbx
0000000000005c07         pop        rbp
0000000000005c08         pop        r12
0000000000005c0a         pop        r13
0000000000005c0c         pop        r14
0000000000005c0e         pop        r15
0000000000005c10         ret
                        ; endp
0000000000005c11         align      8

                     loc_5c18:
0000000000005c18         mov        r14, qword [rdi+0x18]                       ; CODE XREF=randread+34
0000000000005c1c         lea        rax, qword [rdi+0x838]
0000000000005c23         lea        r13, qword [rdi+0x20]
0000000000005c27         mov        qword [rsp+0x48+var_40], rax
0000000000005c2c         cmp        rdx, r14
0000000000005c2f         jbe        loc_5d12

                     loc_5c35:
0000000000005c35         mov        esi, 0x800                                  ; CODE XREF=randread+330
0000000000005c3a         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000005c3d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000005c40         sub        rsi, r14
0000000000005c43         add        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy
0000000000005c48         add        rbx, r14
0000000000005c4b         sub        rbp, r14
0000000000005c4e         call       j_memcpy                                    ; memcpy
0000000000005c53         test       bl, 0x7
0000000000005c56         jne        loc_5cc0

0000000000005c58         cmp        rbp, 0x7ff
0000000000005c5f         jbe        loc_5d03

0000000000005c65         lea        r15, qword [rbp-0x800]
0000000000005c6c         mov        r14, r15
0000000000005c6f         and        r14d, 0x7ff
0000000000005c76         jmp        loc_5c8c
0000000000005c78         align      128

                     loc_5c80:
0000000000005c80         cmp        r15, r14                                    ; CODE XREF=randread+276
0000000000005c83         je         loc_5cc0

0000000000005c85         sub        r15, 0x800

                     loc_5c8c:
0000000000005c8c         mov        rsi, rbx                                    ; CODE XREF=randread+230
0000000000005c8f         mov        rdi, r13
0000000000005c92         add        rbx, 0x800
0000000000005c99         call       isaac_refill                                ; isaac_refill
0000000000005c9e         test       r15, r15
0000000000005ca1         mov        rbp, r15
0000000000005ca4         jne        loc_5c80

0000000000005ca6         mov        qword [r12+0x18], 0x0
0000000000005caf         add        rsp, 0x18
0000000000005cb3         pop        rbx
0000000000005cb4         pop        rbp
0000000000005cb5         pop        r12
0000000000005cb7         pop        r13
0000000000005cb9         pop        r14
0000000000005cbb         pop        r15
0000000000005cbd         ret
                        ; endp
0000000000005cbe         align      64

                     loc_5cc0:
0000000000005cc0         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+198, randread+243
0000000000005cc5         mov        rdi, r13
0000000000005cc8         mov        r14d, 0x800
0000000000005cce         call       isaac_refill                                ; isaac_refill
0000000000005cd3         cmp        rbp, 0x800
0000000000005cda         ja         loc_5c35

                     loc_5ce0:
0000000000005ce0         mov        r14d, 0x800                                 ; CODE XREF=randread+384

                     loc_5ce6:
0000000000005ce6         mov        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy, CODE XREF=randread+404
0000000000005ceb         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000005cee         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000005cf1         sub        r14, rbp
0000000000005cf4         call       j_memcpy                                    ; memcpy
0000000000005cf9         mov        qword [r12+0x18], r14
0000000000005cfe         jmp        loc_5c02

                     loc_5d03:
0000000000005d03         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+207
0000000000005d08         mov        rdi, r13
0000000000005d0b         call       isaac_refill                                ; isaac_refill
0000000000005d10         jmp        loc_5ce0

                     loc_5d12:
0000000000005d12         mov        r15, rax                                    ; CODE XREF=randread+159
0000000000005d15         sub        r15, r14
0000000000005d18         lea        rax, qword [r15+0x800]
0000000000005d1f         mov        qword [rsp+0x48+var_40], rax
0000000000005d24         jmp        loc_5ce6
0000000000005d26         align      16                                          ; End of unwind block (FDE at 0x8938)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_free:
0000000000005d30         push       rbp                                         ; Begin of unwind block (FDE at 0x899c), CODE XREF=randint_all_free+16
0000000000005d31         push       rbx
0000000000005d32         mov        rdx, 0xffffffffffffffff
0000000000005d39         mov        rbx, rdi
0000000000005d3c         mov        esi, 0x1038
0000000000005d41         sub        rsp, 0x8
0000000000005d45         mov        rbp, qword [rdi]
0000000000005d48         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000005d4d         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000005d50         call       j_free                                      ; free
0000000000005d55         test       rbp, rbp
0000000000005d58         je         loc_5d70

0000000000005d5a         add        rsp, 0x8
0000000000005d5e         mov        rdi, rbp
0000000000005d61         pop        rbx
0000000000005d62         pop        rbp
0000000000005d63         jmp        rpl_fclose                                  ; rpl_fclose
                        ; endp
0000000000005d68         align      16

                     loc_5d70:
0000000000005d70         add        rsp, 0x8                                    ; CODE XREF=randread_free+40
0000000000005d74         xor        eax, eax
0000000000005d76         pop        rbx
0000000000005d77         pop        rbp
0000000000005d78         ret
                        ; endp
0000000000005d79         align      128                                         ; End of unwind block (FDE at 0x899c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_refill:
0000000000005d80         mov        rax, qword [rdi+0x810]                      ; Begin of unwind block (FDE at 0x89d4), CODE XREF=randread+265, randread+318, randread+379
0000000000005d87         mov        rdx, qword [rdi+0x800]
0000000000005d8e         lea        r9, qword [rdi+0x400]
0000000000005d95         lea        rcx, qword [rax+1]
0000000000005d99         mov        rax, rdi
0000000000005d9c         mov        qword [rdi+0x810], rcx
0000000000005da3         add        rcx, qword [rdi+0x808]
0000000000005daa         nop        word [rax+rax]

                     loc_5db0:
0000000000005db0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+329
0000000000005db3         shl        r8, 0x15
0000000000005db7         xor        rdx, r8
0000000000005dba         mov        r8, qword [rax]
0000000000005dbd         not        rdx
0000000000005dc0         add        rdx, qword [rax+0x400]
0000000000005dc7         mov        r10, r8
0000000000005dca         and        r10d, 0x7f8
0000000000005dd1         mov        r11, qword [rdi+r10]
0000000000005dd5         mov        r10, rdx
0000000000005dd8         shr        r10, 0x5
0000000000005ddc         add        r11, rdx
0000000000005ddf         xor        rdx, r10
0000000000005de2         add        rcx, r11
0000000000005de5         mov        qword [rax], rcx
0000000000005de8         shr        rcx, 0x8
0000000000005dec         and        ecx, 0x7f8
0000000000005df2         mov        r11, qword [rdi+rcx]
0000000000005df6         add        r11, r8
0000000000005df9         mov        qword [rsi], r11
0000000000005dfc         add        rdx, qword [rax+0x408]
0000000000005e03         mov        rcx, qword [rax+8]
0000000000005e07         mov        r10, rdx
0000000000005e0a         mov        rdx, rcx
0000000000005e0d         and        edx, 0x7f8
0000000000005e13         mov        r8, qword [rdi+rdx]
0000000000005e17         mov        rdx, r10
0000000000005e1a         shl        rdx, 0xc
0000000000005e1e         xor        rdx, r10
0000000000005e21         add        r8, r10
0000000000005e24         add        r8, r11
0000000000005e27         mov        qword [rax+8], r8
0000000000005e2b         shr        r8, 0x8
0000000000005e2f         and        r8d, 0x7f8
0000000000005e36         add        rcx, qword [rdi+r8]
0000000000005e3a         mov        qword [rsi+8], rcx
0000000000005e3e         mov        r8, qword [rax+0x10]
0000000000005e42         mov        r11, rcx
0000000000005e45         add        rdx, qword [rax+0x410]
0000000000005e4c         mov        rcx, r8
0000000000005e4f         and        ecx, 0x7f8
0000000000005e55         mov        r10, qword [rdi+rcx]
0000000000005e59         add        r10, rdx
0000000000005e5c         mov        rcx, r10
0000000000005e5f         add        rcx, r11
0000000000005e62         mov        qword [rax+0x10], rcx
0000000000005e66         shr        rcx, 0x8
0000000000005e6a         and        ecx, 0x7f8
0000000000005e70         mov        r10, qword [rdi+rcx]
0000000000005e74         mov        rcx, rdx
0000000000005e77         shr        rcx, 0x21
0000000000005e7b         xor        rdx, rcx
0000000000005e7e         add        r10, r8
0000000000005e81         mov        qword [rsi+0x10], r10
0000000000005e85         mov        rcx, qword [rax+0x18]
0000000000005e89         add        rdx, qword [rax+0x418]
0000000000005e90         mov        r8, rcx
0000000000005e93         and        r8d, 0x7f8
0000000000005e9a         mov        r11, qword [rdi+r8]
0000000000005e9e         add        r11, rdx
0000000000005ea1         mov        r8, r11
0000000000005ea4         add        r8, r10
0000000000005ea7         add        rax, 0x20
0000000000005eab         add        rsi, 0x20
0000000000005eaf         mov        qword [rax-8], r8
0000000000005eb3         shr        r8, 0x8
0000000000005eb7         and        r8d, 0x7f8
0000000000005ebe         add        rcx, qword [rdi+r8]
0000000000005ec2         mov        qword [rsi-8], rcx
0000000000005ec6         cmp        rax, r9
0000000000005ec9         jb         loc_5db0

0000000000005ecf         lea        r9, qword [rdi+0x800]
0000000000005ed6         nop        word [cs:rax+rax]

                     loc_5ee0:
0000000000005ee0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+633
0000000000005ee3         shl        r8, 0x15
0000000000005ee7         xor        rdx, r8
0000000000005eea         mov        r8, qword [rax]
0000000000005eed         not        rdx
0000000000005ef0         add        rdx, qword [rax-0x400]
0000000000005ef7         mov        r10, r8
0000000000005efa         and        r10d, 0x7f8
0000000000005f01         mov        r11, qword [rdi+r10]
0000000000005f05         mov        r10, rdx
0000000000005f08         shr        r10, 0x5
0000000000005f0c         add        r11, rdx
0000000000005f0f         xor        rdx, r10
0000000000005f12         add        rcx, r11
0000000000005f15         mov        qword [rax], rcx
0000000000005f18         shr        rcx, 0x8
0000000000005f1c         and        ecx, 0x7f8
0000000000005f22         mov        r11, qword [rdi+rcx]
0000000000005f26         add        r11, r8
0000000000005f29         mov        qword [rsi], r11
0000000000005f2c         add        rdx, qword [rax-0x3f8]
0000000000005f33         mov        rcx, qword [rax+8]
0000000000005f37         mov        r10, rdx
0000000000005f3a         mov        rdx, rcx
0000000000005f3d         and        edx, 0x7f8
0000000000005f43         mov        r8, qword [rdi+rdx]
0000000000005f47         mov        rdx, r10
0000000000005f4a         shl        rdx, 0xc
0000000000005f4e         xor        rdx, r10
0000000000005f51         add        r8, r10
0000000000005f54         add        r8, r11
0000000000005f57         mov        qword [rax+8], r8
0000000000005f5b         shr        r8, 0x8
0000000000005f5f         and        r8d, 0x7f8
0000000000005f66         add        rcx, qword [rdi+r8]
0000000000005f6a         mov        qword [rsi+8], rcx
0000000000005f6e         mov        r8, qword [rax+0x10]
0000000000005f72         mov        r11, rcx
0000000000005f75         add        rdx, qword [rax-0x3f0]
0000000000005f7c         mov        rcx, r8
0000000000005f7f         and        ecx, 0x7f8
0000000000005f85         mov        r10, qword [rdi+rcx]
0000000000005f89         add        r10, rdx
0000000000005f8c         mov        rcx, r10
0000000000005f8f         add        rcx, r11
0000000000005f92         mov        qword [rax+0x10], rcx
0000000000005f96         shr        rcx, 0x8
0000000000005f9a         and        ecx, 0x7f8
0000000000005fa0         mov        r10, qword [rdi+rcx]
0000000000005fa4         mov        rcx, rdx
0000000000005fa7         shr        rcx, 0x21
0000000000005fab         xor        rdx, rcx
0000000000005fae         add        r10, r8
0000000000005fb1         mov        qword [rsi+0x10], r10
0000000000005fb5         mov        rcx, qword [rax+0x18]
0000000000005fb9         add        rdx, qword [rax-0x3e8]
0000000000005fc0         mov        r8, rcx
0000000000005fc3         and        r8d, 0x7f8
0000000000005fca         mov        r11, qword [rdi+r8]
0000000000005fce         add        r11, rdx
0000000000005fd1         mov        r8, r11
0000000000005fd4         add        r8, r10
0000000000005fd7         add        rax, 0x20
0000000000005fdb         add        rsi, 0x20
0000000000005fdf         mov        qword [rax-8], r8
0000000000005fe3         shr        r8, 0x8
0000000000005fe7         and        r8d, 0x7f8
0000000000005fee         add        rcx, qword [rdi+r8]
0000000000005ff2         mov        qword [rsi-8], rcx
0000000000005ff6         cmp        rax, r9
0000000000005ff9         jb         loc_5ee0

0000000000005fff         mov        qword [rdi+0x800], rdx
0000000000006006         mov        qword [rdi+0x808], rcx
000000000000600d         ret
                        ; endp
000000000000600e         align      16                                          ; End of unwind block (FDE at 0x89d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_seed:
0000000000006010         push       r13                                         ; Begin of unwind block (FDE at 0x89e8), CODE XREF=randread_new+312
0000000000006012         push       r12
0000000000006014         lea        r12, qword [rdi+0x800]
000000000000601b         push       rbp
000000000000601c         mov        rdx, rdi
000000000000601f         push       rbx
0000000000006020         mov        rax, rdi
0000000000006023         movabs     rcx, 0x98f5704f6c44c0ab
000000000000602d         movabs     r10, 0xae985bf2cbfc89ed
0000000000006037         movabs     rbp, 0x48fe4a0fa5a09315
0000000000006041         movabs     rsi, 0x82f053db8355e0ce
000000000000604b         movabs     r8, 0xb29b2e824a595524
0000000000006055         movabs     rbx, 0x8c0ea5053d4712a0
000000000000605f         movabs     r11, 0xb9f8b322c73ac862
0000000000006069         movabs     r9, 0x647c4677a2884b7c
0000000000006073         nop        dword [rax+rax]

                     loc_6078:
0000000000006078         add        rsi, qword [rax+0x20]                       ; CODE XREF=isaac_seed+314
000000000000607c         add        rcx, qword [rax+0x38]
0000000000006080         mov        r13, qword [rax]
0000000000006083         add        rbp, qword [rax+0x28]
0000000000006087         add        r10, qword [rax+0x30]
000000000000608b         sub        r13, rsi
000000000000608e         add        r9, r13
0000000000006091         mov        r13, rcx
0000000000006094         shr        r13, 0x9
0000000000006098         add        rcx, r9
000000000000609b         xor        rbp, r13
000000000000609e         mov        r13, qword [rax+8]
00000000000060a2         sub        r13, rbp
00000000000060a5         add        r11, r13
00000000000060a8         mov        r13, r9
00000000000060ab         shl        r13, 0x9
00000000000060af         add        r9, r11
00000000000060b2         xor        r10, r13
00000000000060b5         mov        r13, qword [rax+0x10]
00000000000060b9         sub        r13, r10
00000000000060bc         add        rbx, r13
00000000000060bf         mov        r13, r11
00000000000060c2         shr        r13, 0x17
00000000000060c6         add        r11, rbx
00000000000060c9         xor        rcx, r13
00000000000060cc         mov        r13, qword [rax+0x18]
00000000000060d0         sub        r13, rcx
00000000000060d3         add        r8, r13
00000000000060d6         mov        r13, rbx
00000000000060d9         shl        r13, 0xf
00000000000060dd         add        rbx, r8
00000000000060e0         xor        r9, r13
00000000000060e3         mov        r13, r8
00000000000060e6         sub        rsi, r9
00000000000060e9         shr        r13, 0xe
00000000000060ed         mov        qword [rax], r9
00000000000060f0         xor        r11, r13
00000000000060f3         mov        r13, rsi
00000000000060f6         add        r8, rsi
00000000000060f9         sub        rbp, r11
00000000000060fc         shl        r13, 0x14
0000000000006100         mov        qword [rax+8], r11
0000000000006104         xor        rbx, r13
0000000000006107         lea        r13, qword [rsi+rbp]
000000000000610b         mov        rsi, rbp
000000000000610e         sub        r10, rbx
0000000000006111         shr        rsi, 0x11
0000000000006115         mov        qword [rax+0x10], rbx
0000000000006119         xor        r8, rsi
000000000000611c         mov        rsi, r10
000000000000611f         add        rbp, r10
0000000000006122         sub        rcx, r8
0000000000006125         shl        rsi, 0xe
0000000000006129         mov        qword [rax+0x18], r8
000000000000612d         xor        rsi, r13
0000000000006130         add        r10, rcx
0000000000006133         mov        qword [rax+0x28], rbp
0000000000006137         mov        qword [rax+0x20], rsi
000000000000613b         mov        qword [rax+0x30], r10
000000000000613f         add        rax, 0x40
0000000000006143         mov        qword [rax-8], rcx
0000000000006147         cmp        r12, rax
000000000000614a         jne        loc_6078

                     loc_6150:
0000000000006150         add        rsi, qword [rdx+0x20]                       ; CODE XREF=isaac_seed+530
0000000000006154         add        rcx, qword [rdx+0x38]
0000000000006158         mov        r12, qword [rdx]
000000000000615b         add        rbp, qword [rdx+0x28]
000000000000615f         add        r10, qword [rdx+0x30]
0000000000006163         sub        r12, rsi
0000000000006166         add        r9, r12
0000000000006169         mov        r12, rcx
000000000000616c         shr        r12, 0x9
0000000000006170         add        rcx, r9
0000000000006173         xor        rbp, r12
0000000000006176         mov        r12, qword [rdx+8]
000000000000617a         sub        r12, rbp
000000000000617d         add        r11, r12
0000000000006180         mov        r12, r9
0000000000006183         shl        r12, 0x9
0000000000006187         add        r9, r11
000000000000618a         xor        r10, r12
000000000000618d         mov        r12, qword [rdx+0x10]
0000000000006191         sub        r12, r10
0000000000006194         add        rbx, r12
0000000000006197         mov        r12, r11
000000000000619a         shr        r12, 0x17
000000000000619e         add        r11, rbx
00000000000061a1         xor        rcx, r12
00000000000061a4         mov        r12, qword [rdx+0x18]
00000000000061a8         sub        r12, rcx
00000000000061ab         add        r8, r12
00000000000061ae         mov        r12, rbx
00000000000061b1         shl        r12, 0xf
00000000000061b5         add        rbx, r8
00000000000061b8         xor        r9, r12
00000000000061bb         mov        r12, r8
00000000000061be         sub        rsi, r9
00000000000061c1         shr        r12, 0xe
00000000000061c5         mov        qword [rdx], r9
00000000000061c8         xor        r11, r12
00000000000061cb         mov        r12, rsi
00000000000061ce         add        r8, rsi
00000000000061d1         sub        rbp, r11
00000000000061d4         shl        r12, 0x14
00000000000061d8         mov        qword [rdx+8], r11
00000000000061dc         xor        rbx, r12
00000000000061df         lea        r12, qword [rsi+rbp]
00000000000061e3         mov        rsi, rbp
00000000000061e6         sub        r10, rbx
00000000000061e9         shr        rsi, 0x11
00000000000061ed         mov        qword [rdx+0x10], rbx
00000000000061f1         xor        r8, rsi
00000000000061f4         mov        rsi, r10
00000000000061f7         add        rbp, r10
00000000000061fa         sub        rcx, r8
00000000000061fd         shl        rsi, 0xe
0000000000006201         mov        qword [rdx+0x18], r8
0000000000006205         xor        rsi, r12
0000000000006208         add        r10, rcx
000000000000620b         mov        qword [rdx+0x28], rbp
000000000000620f         mov        qword [rdx+0x20], rsi
0000000000006213         mov        qword [rdx+0x30], r10
0000000000006217         add        rdx, 0x40
000000000000621b         mov        qword [rdx-8], rcx
000000000000621f         cmp        rax, rdx
0000000000006222         jne        loc_6150

0000000000006228         pop        rbx
0000000000006229         mov        qword [rdi+0x810], 0x0
0000000000006234         mov        qword [rdi+0x808], 0x0
000000000000623f         pop        rbp
0000000000006240         mov        qword [rdi+0x800], 0x0
000000000000624b         pop        r12
000000000000624d         pop        r13
000000000000624f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
0000000000006250         push       r12                                         ; End of unwind block (FDE at 0x89e8), Begin of unwind block (FDE at 0x8a1c), CODE XREF=randread_new+57
0000000000006252         push       rbp
0000000000006253         mov        rbp, rsi
0000000000006256         push       rbx
0000000000006257         call       j_fopen                                     ; fopen
000000000000625c         test       rax, rax
000000000000625f         mov        rbx, rax
0000000000006262         je         loc_6271

0000000000006264         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000006267         call       j_fileno                                    ; fileno
000000000000626c         cmp        eax, 0x2
000000000000626f         jbe        loc_6280

                     loc_6271:
0000000000006271         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
0000000000006274         pop        rbx
0000000000006275         pop        rbp
0000000000006276         pop        r12
0000000000006278         ret
                        ; endp
0000000000006279         align      128

                     loc_6280:
0000000000006280         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
0000000000006282         call       dup_safer                                   ; dup_safer
0000000000006287         test       eax, eax
0000000000006289         mov        r12d, eax
000000000000628c         js         loc_62c8

000000000000628e         mov        rdi, rbx
0000000000006291         call       rpl_fclose                                  ; rpl_fclose
0000000000006296         test       eax, eax
0000000000006298         jne        loc_62ad

000000000000629a         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
000000000000629d         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
00000000000062a0         call       j_fdopen                                    ; fdopen
00000000000062a5         test       rax, rax
00000000000062a8         mov        rbx, rax
00000000000062ab         jne        loc_6271

                     loc_62ad:
00000000000062ad         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
00000000000062b2         mov        ebp, dword [rax]
00000000000062b4         mov        rbx, rax
00000000000062b7         mov        edi, r12d                                   ; argument "__fd" for method j_close
00000000000062ba         call       j_close                                     ; close
00000000000062bf         mov        dword [rbx], ebp
00000000000062c1         xor        ebx, ebx
00000000000062c3         jmp        loc_6271
00000000000062c5         align      8

                     loc_62c8:
00000000000062c8         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
00000000000062cd         mov        r12d, dword [rax]
00000000000062d0         mov        rbp, rax
00000000000062d3         mov        rdi, rbx
00000000000062d6         call       rpl_fclose                                  ; rpl_fclose
00000000000062db         xor        ebx, ebx
00000000000062dd         mov        dword [rbp], r12d
00000000000062e1         jmp        loc_6271
00000000000062e3         align      16                                          ; End of unwind block (FDE at 0x8a1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
00000000000062f0         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0x8a4c), CODE XREF=fopen_safer+50
00000000000062f5         xor        esi, esi
00000000000062f7         xor        eax, eax
00000000000062f9         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
00000000000062fe         align      256                                         ; End of unwind block (FDE at 0x8a4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000006300         push       r12                                         ; Begin of unwind block (FDE at 0x8a64), CODE XREF=dup_safer+9
0000000000006302         push       rbp
0000000000006303         mov        ebp, edi
0000000000006305         push       rbx
0000000000006306         sub        rsp, 0x50
000000000000630a         mov        rax, qword [fs:0x28]
0000000000006313         mov        qword [rsp+0x68+var_50], rax
0000000000006318         xor        eax, eax
000000000000631a         lea        rax, qword [rsp+0x68+arg_0]
000000000000631f         test       esi, esi
0000000000006321         mov        qword [rsp+0x68+var_38], rdx
0000000000006326         mov        qword [rsp+0x68+var_30], rcx
000000000000632b         mov        qword [rsp+0x68+var_28], r8
0000000000006330         mov        qword [rsp+0x68+var_60], rax
0000000000006335         lea        rax, qword [rsp+0x68+var_48]
000000000000633a         mov        qword [rsp+0x68+var_20], r9
000000000000633f         mov        dword [rsp+0x68+var_68], 0x10
0000000000006346         mov        qword [rsp+0x68+var_58], rax
000000000000634b         je         loc_6552

0000000000006351         cmp        esi, 0x406
0000000000006357         jne        loc_63a0

0000000000006359         mov        rax, qword [rsp+0x68+var_58]
000000000000635e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000006365         mov        dword [rsp+0x68+var_68], 0x18
000000000000636c         mov        r12d, dword [rax+0x10]
0000000000006370         mov        edx, r12d
0000000000006373         js         loc_64a3

0000000000006379         xor        eax, eax
000000000000637b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000006380         call       j_fcntl                                     ; fcntl
0000000000006385         test       eax, eax
0000000000006387         mov        ebx, eax
0000000000006389         js         loc_6518

                     loc_638f:
000000000000638f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000006399         jmp        loc_63e0
000000000000639b         align      32

                     loc_63a0:
00000000000063a0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
00000000000063a3         je         loc_63d0

00000000000063a5         jg         loc_6400

00000000000063a7         cmp        esi, 0x4
00000000000063aa         je         loc_6480

00000000000063b0         jg         loc_6470

00000000000063b6         cmp        esi, 0x2
00000000000063b9         je         loc_6480

00000000000063bf         jg         loc_63d0

00000000000063c1         cmp        esi, 0x1
00000000000063c4         jne        loc_6428

00000000000063c6         nop        word [cs:rax+rax]

                     loc_63d0:
00000000000063d0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
00000000000063d2         xor        eax, eax
00000000000063d4         call       j_fcntl                                     ; fcntl
00000000000063d9         mov        ebx, eax
00000000000063db         nop        dword [rax+rax]

                     loc_63e0:
00000000000063e0         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
00000000000063e5         xor        rcx, qword [fs:0x28]
00000000000063ee         mov        eax, ebx
00000000000063f0         jne        loc_654d

00000000000063f6         add        rsp, 0x50
00000000000063fa         pop        rbx
00000000000063fb         pop        rbp
00000000000063fc         pop        r12
00000000000063fe         ret
                        ; endp
00000000000063ff         align      1024

                     loc_6400:
0000000000006400         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000006406         jg         loc_6450

0000000000006408         cmp        esi, 0x406
000000000000640e         jge        loc_6480

0000000000006410         cmp        esi, 0x401
0000000000006416         je         loc_63d0

0000000000006418         cmp        esi, 0x402
000000000000641e         je         loc_6480

0000000000006420         cmp        esi, 0x400
0000000000006426         je         loc_6480

                     loc_6428:
0000000000006428         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000642b         cmp        eax, 0x2f
000000000000642e         ja         loc_656a

0000000000006434         add        rax, qword [rsp+0x68+var_58]

                     loc_6439:
0000000000006439         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000643c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000643e         xor        eax, eax
0000000000006440         call       j_fcntl                                     ; fcntl
0000000000006445         mov        ebx, eax
0000000000006447         jmp        loc_63e0
0000000000006449         align      16

                     loc_6450:
0000000000006450         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000006456         je         loc_6480

0000000000006458         jl         loc_63d0

000000000000645e         cmp        esi, 0x40a
0000000000006464         jne        loc_6428

0000000000006466         jmp        loc_63d0
000000000000646b         align      16

                     loc_6470:
0000000000006470         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000006473         je         loc_63d0

0000000000006479         jg         loc_6480

000000000000647b         cmp        esi, 0x8
000000000000647e         jne        loc_6428

                     loc_6480:
0000000000006480         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000006483         cmp        eax, 0x2f
0000000000006486         ja         loc_6574

000000000000648c         add        rax, qword [rsp+0x68+var_58]

                     loc_6491:
0000000000006491         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000006493         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006495         xor        eax, eax
0000000000006497         call       j_fcntl                                     ; fcntl
000000000000649c         mov        ebx, eax
000000000000649e         jmp        loc_63e0

                     loc_64a3:
00000000000064a3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
00000000000064a5         xor        eax, eax
00000000000064a7         call       j_fcntl                                     ; fcntl
00000000000064ac         test       eax, eax
00000000000064ae         mov        ebx, eax
00000000000064b0         js         loc_63e0

00000000000064b6         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000064bd         jne        loc_63e0

                     loc_64c3:
00000000000064c3         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
00000000000064c5         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
00000000000064ca         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000064cc         call       j_fcntl                                     ; fcntl
00000000000064d1         test       eax, eax
00000000000064d3         js         loc_64f1

00000000000064d5         or         eax, 0x1
00000000000064d8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
00000000000064dd         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000064df         mov        edx, eax
00000000000064e1         xor        eax, eax
00000000000064e3         call       j_fcntl                                     ; fcntl
00000000000064e8         cmp        eax, 0xffffffff
00000000000064eb         jne        loc_63e0

                     loc_64f1:
00000000000064f1         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
00000000000064f6         mov        r12d, dword [rax]
00000000000064f9         mov        rbp, rax
00000000000064fc         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000064fe         call       j_close                                     ; close
0000000000006503         mov        ebx, 0xffffffff
0000000000006508         mov        dword [rbp], r12d
000000000000650c         jmp        loc_63e0
0000000000006511         align      8

                     loc_6518:
0000000000006518         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000000651d         cmp        dword [rax], 0x16
0000000000006520         jne        loc_638f

0000000000006526         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006528         xor        eax, eax
000000000000652a         mov        edx, r12d
000000000000652d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000652f         call       j_fcntl                                     ; fcntl
0000000000006534         test       eax, eax
0000000000006536         mov        ebx, eax
0000000000006538         js         loc_63e0

000000000000653e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000006548         jmp        loc_64c3

                     loc_654d:
000000000000654d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_6552:
0000000000006552         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000006557         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006559         mov        edx, dword [rax+0x10]
000000000000655c         xor        eax, eax
000000000000655e         call       j_fcntl                                     ; fcntl
0000000000006563         mov        ebx, eax
0000000000006565         jmp        loc_63e0

                     loc_656a:
000000000000656a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000000656f         jmp        loc_6439

                     loc_6574:
0000000000006574         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000006579         jmp        loc_6491
000000000000657e         align      128                                         ; End of unwind block (FDE at 0x8a64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006580         push       r15                                         ; Begin of unwind block (FDE at 0x8a9c), DATA XREF=_start+22
0000000000006582         push       r14
0000000000006584         mov        r15, rdx
0000000000006587         push       r13
0000000000006589         push       r12
000000000000658b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006592         push       rbp
0000000000006593         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000659a         push       rbx
000000000000659b         mov        r13d, edi
000000000000659e         mov        r14, rsi
00000000000065a1         sub        rbp, r12
00000000000065a4         sub        rsp, 0x8
00000000000065a8         sar        rbp, 0x3
00000000000065ac         call       _init                                       ; _init
00000000000065b1         test       rbp, rbp
00000000000065b4         je         loc_65d6

00000000000065b6         xor        ebx, ebx
00000000000065b8         nop        dword [rax+rax]

                     loc_65c0:
00000000000065c0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000065c3         mov        rsi, r14
00000000000065c6         mov        edi, r13d
00000000000065c9         call       qword [r12+rbx*8]
00000000000065cd         add        rbx, 0x1
00000000000065d1         cmp        rbp, rbx
00000000000065d4         jne        loc_65c0

                     loc_65d6:
00000000000065d6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000065da         pop        rbx
00000000000065db         pop        rbp
00000000000065dc         pop        r12
00000000000065de         pop        r13
00000000000065e0         pop        r14
00000000000065e2         pop        r15
00000000000065e4         ret
                        ; endp
00000000000065e5         align      16                                          ; End of unwind block (FDE at 0x8a9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000065f0         ret                                                    ; Begin of unwind block (FDE at 0x8ae4), DATA XREF=_start+15
                        ; endp
00000000000065f2         align      512                                         ; End of unwind block (FDE at 0x8ae4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006600         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8afc), __dso_handle, CODE XREF=main+94
0000000000006607         xor        esi, esi
0000000000006609         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000660e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8afc)
000000000000660f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6610; 0x6619[ (9 bytes)
        ; File offset : [26128; 26137[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006610         sub        rsp, 0x8
0000000000006614         add        rsp, 0x8
0000000000006618         ret
                        ; endp
0000000000006619         db  0x00 ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         db  0x00 ; '.'
000000000000661d         db  0x00 ; '.'
000000000000661e         db  0x00 ; '.'
000000000000661f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6620; 0x789d[ (4733 bytes)
        ; File offset : [26144; 30877[ (4733 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006620         db  0x01 ; '.'
0000000000006621         db  0x00 ; '.'
0000000000006622         db  0x02 ; '.'
0000000000006623         db  0x00 ; '.'
                     aMktemp:
0000000000006624         db         "mktemp", 0                                 ; DATA XREF=main+383, usage+433, usage+748, usage+932, usage+951, usage+985
000000000000662b         db  0x5b ; '['                                         ; DATA XREF=usage+445
000000000000662c         db  0x00 ; '.'
                     aTestInvocation:
000000000000662d         db         "test invocation", 0                        ; DATA XREF=usage+484
                     aMulticallInvoc:
000000000000663d         db         "Multi-call invocation", 0                  ; DATA XREF=usage+532
                     aSha224sum:
0000000000006653         db         "sha224sum", 0                              ; DATA XREF=usage+549
                     aSha2Utilities:
000000000000665d         db         "sha2 utilities", 0                         ; DATA XREF=usage+561
                     aSha256sum:
000000000000666c         db         "sha256sum", 0                              ; DATA XREF=usage+452
                     aSha384sum:
0000000000006676         db         "sha384sum", 0                              ; DATA XREF=usage+496
                     aSha512sum:
0000000000006680         db         "sha512sum", 0                              ; DATA XREF=usage+520
                     aNsOnlineHelpSn:
000000000000668a         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+634
00000000000066a1         db  0x47 ; 'G'                                         ; DATA XREF=main+376, usage+662, usage+855, emit_bug_reporting_address+68
00000000000066a2         db  0x4e ; 'N'
00000000000066a3         db  0x55 ; 'U'
00000000000066a4         db  0x20 ; ' '
                     aCoreutils:
00000000000066a5         db         "coreutils", 0                              ; DATA XREF=main+63, main+75, usage+508
00000000000066af         db  0x65 ; 'e'                                         ; DATA XREF=usage+701, usage+894
00000000000066b0         db  0x6e ; 'n'
00000000000066b1         db  0x5f ; '_'
00000000000066b2         db  0x00 ; '.'
                     aFullDocumentat:
00000000000066b3         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+729, usage+918
                     aTmpxxxxxxxxxx:
00000000000066ce         db         "tmp.XXXXXXXXXX", 0                         ; DATA XREF=main+439, main+452
00000000000066dd         db  0x2f ; '/'                                         ; DATA XREF=main+981, main+1397
00000000000066de         db  0x74 ; 't'
00000000000066df         db  0x6d ; 'm'
00000000000066e0         db  0x70 ; 'p'
00000000000066e1         db  0x00 ; '.'
                     aUsrlocalsharel:
00000000000066e2         db         "/usr/local/share/locale", 0                ; DATA XREF=main+56
                     aEricBlake:
00000000000066fa         db         "Eric Blake", 0                             ; DATA XREF=main+362
                     aJimMeyering:
0000000000006705         db         "Jim Meyering", 0                           ; DATA XREF=main+369
                     aDpqtuv:
0000000000006712         db         "dp:qtuV", 0                                ; DATA XREF=main+135
                     aTooManyTemplat:
000000000000671a         db         "too many templates", 0                     ; DATA XREF=main+1324
                     aTooFewXsInTemp:
000000000000672d         db         "too few X's in template %s", 0             ; DATA XREF=main+1629
                     aTmpdir:
0000000000006748         db         "TMPDIR", 0                                 ; DATA XREF=main+952, main+1367
                     aWriteError:
000000000000674f         db         "write error", 0                            ; DATA XREF=main+1192, close_stdout+67
                     aDirectory:
000000000000675b         db         "directory", 0
                     aQuiet:
0000000000006765         db         "quiet", 0
                     aDryrun:
000000000000676b         db         "dry-run", 0
                     aSuffix:
0000000000006773         db         "suffix", 0
                     aTmpdir_677a:        // aTmpdir
000000000000677a         db         "tmpdir", 0
                     aHelp:
0000000000006781         db         "help", 0
                     aVersion:
0000000000006786         db         "version", 0
000000000000678e         align      16
                     aTrySHelpForMor:
0000000000006790         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000067b7         align      8
                     aUsageSOptionTe:
00000000000067b8         db         "Usage: %s [OPTION]... [TEMPLATE]\n", 0     ; DATA XREF=usage+93
00000000000067da         align      32
                     aCreateATempora:
00000000000067e0         db         "Create a temporary file or directory, safely, and print its name.\nTEMPLATE must contain at least 3 consecutive 'X's in last component.\nIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\n", 0 ; DATA XREF=usage+132
00000000000068b3         align      8
                     aFilesAreCreate:
00000000000068b8         db         "Files are created u+rw, and directories u+rwx, minus umask restrictions.\n", 0 ; DATA XREF=usage+169
0000000000006902         align      8
                     aDDirectoryCrea:
0000000000006908         db         "  -d, --directory     create a directory, not a file\n  -u, --dry-run       do not create anything; merely print a name (unsafe)\n  -q, --quiet         suppress diagnostics about file/dir-creation failure\n", 0 ; DATA XREF=usage+223
00000000000069d4         align      8
                     aSuffixsuffAppe:
00000000000069d8         db         "      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\n                        This option is implied if TEMPLATE does not end in X\n", 0 ; DATA XREF=usage+260
0000000000006a74         align      8
                     aPDirTmpdirdirI:
0000000000006a78         db         "  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\n                        specified, use $TMPDIR if set, else /tmp.  With\n                        this option, TEMPLATE must not be an absolute name;\n                        unlike w" ; DATA XREF=usage+297
0000000000006b78         db         "ith -t, TEMPLATE may contain slashes, but\n                        mktemp creates only the final component\n", 0
0000000000006be3         align      8
                     aTInterpretTemp:
0000000000006be8         db         "  -t                  interpret TEMPLATE as a single file name component,\n                        relative to a directory: $TMPDIR, if set; else the\n                        directory specified via -p; else /tmp [deprecated]\n", 0 ; DATA XREF=usage+334
0000000000006cc9         align      16
                     aHelpDisplayThi:
0000000000006cd0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+371
0000000000006cfd         align      256
                     aVersionOutputV:
0000000000006d00         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+408
0000000000006d36         align      8
                     aHttpswwwgnuorg:
0000000000006d38         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+655, usage+755, usage+848, usage+958, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006d60         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+999
0000000000006da7         align      8
                     aOrAvailableLoc:
0000000000006da8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+798
0000000000006ddb         align      32
                     aWithSuffixTemp:
0000000000006de0         db         "with --suffix, template %s must end in X", 0 ; DATA XREF=main+910
0000000000006e09         align      16
                     aInvalidSuffixS:
0000000000006e10         db         "invalid suffix %s, contains directory separator", 0 ; DATA XREF=main+1679
                     aInvalidTemplat:
0000000000006e40         db         "invalid template, %s, contains directory separator", 0 ; DATA XREF=main+1441
0000000000006e73         align      8
                     aInvalidTemplat_6e78:        // aInvalidTemplat
0000000000006e78         db         "invalid template, %s; with --tmpdir, it may not be absolute", 0 ; DATA XREF=main+1579
0000000000006eb4         align      8
                     aFailedToCreate:
0000000000006eb8         db         "failed to create directory via template %s", 0 ; DATA XREF=main+1259
0000000000006ee3         align      8
                     aFailedToCreate_6ee8:        // aFailedToCreate
0000000000006ee8         db         "failed to create file via template %s", 0  ; DATA XREF=main+1089
                     a831:
0000000000006f0e         db         "8.31", 0                                   ; DATA XREF=Version
                     aSS:
0000000000006f13         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000006f1a         align      32
                     aANullArgv0WasP:
0000000000006f20         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000006f58         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000006f60         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000006f61         db  0x74 ; 't'
0000000000006f62         db  0x2d ; '-'
0000000000006f63         db  0x00 ; '.'
0000000000006f64         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000006f65         db  0x80 ; '.'
0000000000006f66         db  0x98 ; '.'
0000000000006f67         db  0x00 ; '.'
0000000000006f68         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000006f69         db  0x80 ; '.'
0000000000006f6a         db  0x99 ; '.'
0000000000006f6b         db  0x00 ; '.'
0000000000006f6c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000006f6d         db  0x07 ; '.'
0000000000006f6e         db  0x65 ; 'e'
0000000000006f6f         db  0x00 ; '.'
0000000000006f70         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000006f71         db  0xaf ; '.'
0000000000006f72         db  0x00 ; '.'
0000000000006f73         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3380+1451, sub_3380+1493, sub_3380+2429
0000000000006f74         db  0x00 ; '.'
0000000000006f75         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3380+132, sub_3380+1338, sub_3380+1670, sub_3380+1697, sub_3380+2352
0000000000006f76         db  0x00 ; '.'
0000000000006f77         db  0x60 ; '`'                                         ; DATA XREF=sub_3380+1627, sub_3380+1654
0000000000006f78         db  0x00 ; '.'
                     aLiteral:
0000000000006f79         db         "literal", 0
                     aShell:
0000000000006f81         db         "shell", 0
                     aShellalways:
0000000000006f87         db         "shell-always", 0
0000000000006f94         db  0x73 ; 's'
0000000000006f95         db  0x68 ; 'h'
0000000000006f96         db  0x65 ; 'e'
0000000000006f97         db  0x6c ; 'l'
0000000000006f98         db  0x6c ; 'l'
0000000000006f99         db  0x2d ; '-'
                     aEscape:
0000000000006f9a         db         "escape", 0
                     aShellescapealw:
0000000000006fa1         db         "shell-escape-always", 0
0000000000006fb5         db  0x63 ; 'c'
0000000000006fb6         db  0x00 ; '.'
                     aCmaybe:
0000000000006fb7         db         "c-maybe", 0
                     aClocale:
0000000000006fbf         db         "clocale", 0
0000000000006fc7         align      32
                     switch_table_6fe0:        // switch_table
0000000000006fe0         dd         quotearg_buffer_restyled.loc_3a7a-switch_table_6fe0, quotearg_buffer_restyled.loc_2cd3-switch_table_6fe0, quotearg_buffer_restyled.loc_3ca8-switch_table_6fe0, quotearg_buffer_restyled.loc_3ab4-switch_table_6fe0 ; switch table used at 0x2cd1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006ff0         dd         quotearg_buffer_restyled.loc_38a4-switch_table_6fe0, quotearg_buffer_restyled.loc_3900-switch_table_6fe0, quotearg_buffer_restyled.loc_3955-switch_table_6fe0, quotearg_buffer_restyled.loc_399a-switch_table_6fe0
0000000000007000         dd         3 dup (quotearg_buffer_restyled.loc_39d4-switch_table_6fe0)
000000000000700c         db  0x44 ; 'D'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000700d         db  0xc0 ; '.'
000000000000700e         db  0xff ; '.'
000000000000700f         db  0xff ; '.'
0000000000007010         db  0x2c ; ','
0000000000007011         db  0xc1 ; '.'
0000000000007012         db  0xff ; '.'
0000000000007013         db  0xff ; '.'
0000000000007014         db  0x2c ; ','
0000000000007015         db  0xc1 ; '.'
0000000000007016         db  0xff ; '.'
0000000000007017         db  0xff ; '.'
0000000000007018         db  0x2c ; ','
0000000000007019         db  0xc1 ; '.'
000000000000701a         db  0xff ; '.'
000000000000701b         db  0xff ; '.'
000000000000701c         db  0x2c ; ','
000000000000701d         db  0xc1 ; '.'
000000000000701e         db  0xff ; '.'
000000000000701f         db  0xff ; '.'
0000000000007020         db  0x2c ; ','
0000000000007021         db  0xc1 ; '.'
0000000000007022         db  0xff ; '.'
0000000000007023         db  0xff ; '.'
0000000000007024         db  0x2c ; ','
0000000000007025         db  0xc1 ; '.'
0000000000007026         db  0xff ; '.'
0000000000007027         db  0xff ; '.'
0000000000007028         db  0x84 ; '.'
0000000000007029         db  0xc0 ; '.'
000000000000702a         db  0xff ; '.'
000000000000702b         db  0xff ; '.'
000000000000702c         db  0x8c ; '.'
000000000000702d         db  0xbf ; '.'
000000000000702e         db  0xff ; '.'
000000000000702f         db  0xff ; '.'
0000000000007030         db  0x4c ; 'L'
0000000000007031         db  0xbf ; '.'
0000000000007032         db  0xff ; '.'
0000000000007033         db  0xff ; '.'
0000000000007034         db  0x14 ; '.'
0000000000007035         db  0xc1 ; '.'
0000000000007036         db  0xff ; '.'
0000000000007037         db  0xff ; '.'
0000000000007038         db  0x04 ; '.'
0000000000007039         db  0xc1 ; '.'
000000000000703a         db  0xff ; '.'
000000000000703b         db  0xff ; '.'
000000000000703c         db  0xf4 ; '.'
000000000000703d         db  0xc0 ; '.'
000000000000703e         db  0xff ; '.'
000000000000703f         db  0xff ; '.'
0000000000007040         db  0xe4 ; '.'
0000000000007041         db  0xc0 ; '.'
0000000000007042         db  0xff ; '.'
0000000000007043         db  0xff ; '.'
0000000000007044         db  0x2c ; ','
0000000000007045         db  0xc1 ; '.'
0000000000007046         db  0xff ; '.'
0000000000007047         db  0xff ; '.'
0000000000007048         db  0x2c ; ','
0000000000007049         db  0xc1 ; '.'
000000000000704a         db  0xff ; '.'
000000000000704b         db  0xff ; '.'
000000000000704c         db  0x2c ; ','
000000000000704d         db  0xc1 ; '.'
000000000000704e         db  0xff ; '.'
000000000000704f         db  0xff ; '.'
0000000000007050         db  0x2c ; ','
0000000000007051         db  0xc1 ; '.'
0000000000007052         db  0xff ; '.'
0000000000007053         db  0xff ; '.'
0000000000007054         db  0x2c ; ','
0000000000007055         db  0xc1 ; '.'
0000000000007056         db  0xff ; '.'
0000000000007057         db  0xff ; '.'
0000000000007058         db  0x2c ; ','
0000000000007059         db  0xc1 ; '.'
000000000000705a         db  0xff ; '.'
000000000000705b         db  0xff ; '.'
000000000000705c         db  0x2c ; ','
000000000000705d         db  0xc1 ; '.'
000000000000705e         db  0xff ; '.'
000000000000705f         db  0xff ; '.'
0000000000007060         db  0x2c ; ','
0000000000007061         db  0xc1 ; '.'
0000000000007062         db  0xff ; '.'
0000000000007063         db  0xff ; '.'
0000000000007064         db  0x2c ; ','
0000000000007065         db  0xc1 ; '.'
0000000000007066         db  0xff ; '.'
0000000000007067         db  0xff ; '.'
0000000000007068         db  0x2c ; ','
0000000000007069         db  0xc1 ; '.'
000000000000706a         db  0xff ; '.'
000000000000706b         db  0xff ; '.'
000000000000706c         db  0x2c ; ','
000000000000706d         db  0xc1 ; '.'
000000000000706e         db  0xff ; '.'
000000000000706f         db  0xff ; '.'
0000000000007070         db  0x2c ; ','
0000000000007071         db  0xc1 ; '.'
0000000000007072         db  0xff ; '.'
0000000000007073         db  0xff ; '.'
0000000000007074         db  0x2c ; ','
0000000000007075         db  0xc1 ; '.'
0000000000007076         db  0xff ; '.'
0000000000007077         db  0xff ; '.'
0000000000007078         db  0x2c ; ','
0000000000007079         db  0xc1 ; '.'
000000000000707a         db  0xff ; '.'
000000000000707b         db  0xff ; '.'
000000000000707c         db  0x2c ; ','
000000000000707d         db  0xc1 ; '.'
000000000000707e         db  0xff ; '.'
000000000000707f         db  0xff ; '.'
0000000000007080         db  0x2c ; ','
0000000000007081         db  0xc1 ; '.'
0000000000007082         db  0xff ; '.'
0000000000007083         db  0xff ; '.'
0000000000007084         db  0x2c ; ','
0000000000007085         db  0xc1 ; '.'
0000000000007086         db  0xff ; '.'
0000000000007087         db  0xff ; '.'
0000000000007088         db  0x2c ; ','
0000000000007089         db  0xc1 ; '.'
000000000000708a         db  0xff ; '.'
000000000000708b         db  0xff ; '.'
000000000000708c         db  0xd4 ; '.'
000000000000708d         db  0xc0 ; '.'
000000000000708e         db  0xff ; '.'
000000000000708f         db  0xff ; '.'
0000000000007090         db  0xc4 ; '.'
0000000000007091         db  0xc0 ; '.'
0000000000007092         db  0xff ; '.'
0000000000007093         db  0xff ; '.'
0000000000007094         db  0xc4 ; '.'
0000000000007095         db  0xc0 ; '.'
0000000000007096         db  0xff ; '.'
0000000000007097         db  0xff ; '.'
0000000000007098         db  0x94 ; '.'
0000000000007099         db  0xc0 ; '.'
000000000000709a         db  0xff ; '.'
000000000000709b         db  0xff ; '.'
000000000000709c         db  0xc4 ; '.'
000000000000709d         db  0xc0 ; '.'
000000000000709e         db  0xff ; '.'
000000000000709f         db  0xff ; '.'
00000000000070a0         db  0x6c ; 'l'
00000000000070a1         db  0xc0 ; '.'
00000000000070a2         db  0xff ; '.'
00000000000070a3         db  0xff ; '.'
00000000000070a4         db  0xc4 ; '.'
00000000000070a5         db  0xc0 ; '.'
00000000000070a6         db  0xff ; '.'
00000000000070a7         db  0xff ; '.'
00000000000070a8         db  0x27 ; '''
00000000000070a9         db  0xbf ; '.'
00000000000070aa         db  0xff ; '.'
00000000000070ab         db  0xff ; '.'
00000000000070ac         db  0xc4 ; '.'
00000000000070ad         db  0xc0 ; '.'
00000000000070ae         db  0xff ; '.'
00000000000070af         db  0xff ; '.'
00000000000070b0         db  0xc4 ; '.'
00000000000070b1         db  0xc0 ; '.'
00000000000070b2         db  0xff ; '.'
00000000000070b3         db  0xff ; '.'
00000000000070b4         db  0xc4 ; '.'
00000000000070b5         db  0xc0 ; '.'
00000000000070b6         db  0xff ; '.'
00000000000070b7         db  0xff ; '.'
00000000000070b8         db  0x6c ; 'l'
00000000000070b9         db  0xc0 ; '.'
00000000000070ba         db  0xff ; '.'
00000000000070bb         db  0xff ; '.'
00000000000070bc         db  0x6c ; 'l'
00000000000070bd         db  0xc0 ; '.'
00000000000070be         db  0xff ; '.'
00000000000070bf         db  0xff ; '.'
00000000000070c0         db  0x6c ; 'l'
00000000000070c1         db  0xc0 ; '.'
00000000000070c2         db  0xff ; '.'
00000000000070c3         db  0xff ; '.'
00000000000070c4         db  0x6c ; 'l'
00000000000070c5         db  0xc0 ; '.'
00000000000070c6         db  0xff ; '.'
00000000000070c7         db  0xff ; '.'
00000000000070c8         db  0x6c ; 'l'
00000000000070c9         db  0xc0 ; '.'
00000000000070ca         db  0xff ; '.'
00000000000070cb         db  0xff ; '.'
00000000000070cc         db  0x6c ; 'l'
00000000000070cd         db  0xc0 ; '.'
00000000000070ce         db  0xff ; '.'
00000000000070cf         db  0xff ; '.'
00000000000070d0         db  0x6c ; 'l'
00000000000070d1         db  0xc0 ; '.'
00000000000070d2         db  0xff ; '.'
00000000000070d3         db  0xff ; '.'
00000000000070d4         db  0x6c ; 'l'
00000000000070d5         db  0xc0 ; '.'
00000000000070d6         db  0xff ; '.'
00000000000070d7         db  0xff ; '.'
00000000000070d8         db  0x6c ; 'l'
00000000000070d9         db  0xc0 ; '.'
00000000000070da         db  0xff ; '.'
00000000000070db         db  0xff ; '.'
00000000000070dc         db  0x6c ; 'l'
00000000000070dd         db  0xc0 ; '.'
00000000000070de         db  0xff ; '.'
00000000000070df         db  0xff ; '.'
00000000000070e0         db  0x6c ; 'l'
00000000000070e1         db  0xc0 ; '.'
00000000000070e2         db  0xff ; '.'
00000000000070e3         db  0xff ; '.'
00000000000070e4         db  0x6c ; 'l'
00000000000070e5         db  0xc0 ; '.'
00000000000070e6         db  0xff ; '.'
00000000000070e7         db  0xff ; '.'
00000000000070e8         db  0x6c ; 'l'
00000000000070e9         db  0xc0 ; '.'
00000000000070ea         db  0xff ; '.'
00000000000070eb         db  0xff ; '.'
00000000000070ec         db  0x6c ; 'l'
00000000000070ed         db  0xc0 ; '.'
00000000000070ee         db  0xff ; '.'
00000000000070ef         db  0xff ; '.'
00000000000070f0         db  0x6c ; 'l'
00000000000070f1         db  0xc0 ; '.'
00000000000070f2         db  0xff ; '.'
00000000000070f3         db  0xff ; '.'
00000000000070f4         db  0x6c ; 'l'
00000000000070f5         db  0xc0 ; '.'
00000000000070f6         db  0xff ; '.'
00000000000070f7         db  0xff ; '.'
00000000000070f8         db  0xc4 ; '.'
00000000000070f9         db  0xc0 ; '.'
00000000000070fa         db  0xff ; '.'
00000000000070fb         db  0xff ; '.'
00000000000070fc         db  0xc4 ; '.'
00000000000070fd         db  0xc0 ; '.'
00000000000070fe         db  0xff ; '.'
00000000000070ff         db  0xff ; '.'
0000000000007100         db  0xc4 ; '.'
0000000000007101         db  0xc0 ; '.'
0000000000007102         db  0xff ; '.'
0000000000007103         db  0xff ; '.'
0000000000007104         db  0xc4 ; '.'
0000000000007105         db  0xc0 ; '.'
0000000000007106         db  0xff ; '.'
0000000000007107         db  0xff ; '.'
0000000000007108         db  0xf7 ; '.'
0000000000007109         db  0xbe ; '.'
000000000000710a         db  0xff ; '.'
000000000000710b         db  0xff ; '.'
000000000000710c         db  0x2c ; ','
000000000000710d         db  0xc1 ; '.'
000000000000710e         db  0xff ; '.'
000000000000710f         db  0xff ; '.'
0000000000007110         db  0x6c ; 'l'
0000000000007111         db  0xc0 ; '.'
0000000000007112         db  0xff ; '.'
0000000000007113         db  0xff ; '.'
0000000000007114         db  0x6c ; 'l'
0000000000007115         db  0xc0 ; '.'
0000000000007116         db  0xff ; '.'
0000000000007117         db  0xff ; '.'
0000000000007118         db  0x6c ; 'l'
0000000000007119         db  0xc0 ; '.'
000000000000711a         db  0xff ; '.'
000000000000711b         db  0xff ; '.'
000000000000711c         db  0x6c ; 'l'
000000000000711d         db  0xc0 ; '.'
000000000000711e         db  0xff ; '.'
000000000000711f         db  0xff ; '.'
0000000000007120         db  0x6c ; 'l'
0000000000007121         db  0xc0 ; '.'
0000000000007122         db  0xff ; '.'
0000000000007123         db  0xff ; '.'
0000000000007124         db  0x6c ; 'l'
0000000000007125         db  0xc0 ; '.'
0000000000007126         db  0xff ; '.'
0000000000007127         db  0xff ; '.'
0000000000007128         db  0x6c ; 'l'
0000000000007129         db  0xc0 ; '.'
000000000000712a         db  0xff ; '.'
000000000000712b         db  0xff ; '.'
000000000000712c         db  0x6c ; 'l'
000000000000712d         db  0xc0 ; '.'
000000000000712e         db  0xff ; '.'
000000000000712f         db  0xff ; '.'
0000000000007130         db  0x6c ; 'l'
0000000000007131         db  0xc0 ; '.'
0000000000007132         db  0xff ; '.'
0000000000007133         db  0xff ; '.'
0000000000007134         db  0x6c ; 'l'
0000000000007135         db  0xc0 ; '.'
0000000000007136         db  0xff ; '.'
0000000000007137         db  0xff ; '.'
0000000000007138         db  0x6c ; 'l'
0000000000007139         db  0xc0 ; '.'
000000000000713a         db  0xff ; '.'
000000000000713b         db  0xff ; '.'
000000000000713c         db  0x6c ; 'l'
000000000000713d         db  0xc0 ; '.'
000000000000713e         db  0xff ; '.'
000000000000713f         db  0xff ; '.'
0000000000007140         db  0x6c ; 'l'
0000000000007141         db  0xc0 ; '.'
0000000000007142         db  0xff ; '.'
0000000000007143         db  0xff ; '.'
0000000000007144         db  0x6c ; 'l'
0000000000007145         db  0xc0 ; '.'
0000000000007146         db  0xff ; '.'
0000000000007147         db  0xff ; '.'
0000000000007148         db  0x6c ; 'l'
0000000000007149         db  0xc0 ; '.'
000000000000714a         db  0xff ; '.'
000000000000714b         db  0xff ; '.'
000000000000714c         db  0x6c ; 'l'
000000000000714d         db  0xc0 ; '.'
000000000000714e         db  0xff ; '.'
000000000000714f         db  0xff ; '.'
0000000000007150         db  0x6c ; 'l'
0000000000007151         db  0xc0 ; '.'
0000000000007152         db  0xff ; '.'
0000000000007153         db  0xff ; '.'
0000000000007154         db  0x6c ; 'l'
0000000000007155         db  0xc0 ; '.'
0000000000007156         db  0xff ; '.'
0000000000007157         db  0xff ; '.'
0000000000007158         db  0x6c ; 'l'
0000000000007159         db  0xc0 ; '.'
000000000000715a         db  0xff ; '.'
000000000000715b         db  0xff ; '.'
000000000000715c         db  0x6c ; 'l'
000000000000715d         db  0xc0 ; '.'
000000000000715e         db  0xff ; '.'
000000000000715f         db  0xff ; '.'
0000000000007160         db  0x6c ; 'l'
0000000000007161         db  0xc0 ; '.'
0000000000007162         db  0xff ; '.'
0000000000007163         db  0xff ; '.'
0000000000007164         db  0x6c ; 'l'
0000000000007165         db  0xc0 ; '.'
0000000000007166         db  0xff ; '.'
0000000000007167         db  0xff ; '.'
0000000000007168         db  0x6c ; 'l'
0000000000007169         db  0xc0 ; '.'
000000000000716a         db  0xff ; '.'
000000000000716b         db  0xff ; '.'
000000000000716c         db  0x6c ; 'l'
000000000000716d         db  0xc0 ; '.'
000000000000716e         db  0xff ; '.'
000000000000716f         db  0xff ; '.'
0000000000007170         db  0x6c ; 'l'
0000000000007171         db  0xc0 ; '.'
0000000000007172         db  0xff ; '.'
0000000000007173         db  0xff ; '.'
0000000000007174         db  0x6c ; 'l'
0000000000007175         db  0xc0 ; '.'
0000000000007176         db  0xff ; '.'
0000000000007177         db  0xff ; '.'
0000000000007178         db  0xc4 ; '.'
0000000000007179         db  0xc0 ; '.'
000000000000717a         db  0xff ; '.'
000000000000717b         db  0xff ; '.'
000000000000717c         db  0x9c ; '.'
000000000000717d         db  0xbf ; '.'
000000000000717e         db  0xff ; '.'
000000000000717f         db  0xff ; '.'
0000000000007180         db  0x6c ; 'l'
0000000000007181         db  0xc0 ; '.'
0000000000007182         db  0xff ; '.'
0000000000007183         db  0xff ; '.'
0000000000007184         db  0xc4 ; '.'
0000000000007185         db  0xc0 ; '.'
0000000000007186         db  0xff ; '.'
0000000000007187         db  0xff ; '.'
0000000000007188         db  0x6c ; 'l'
0000000000007189         db  0xc0 ; '.'
000000000000718a         db  0xff ; '.'
000000000000718b         db  0xff ; '.'
000000000000718c         db  0xc4 ; '.'
000000000000718d         db  0xc0 ; '.'
000000000000718e         db  0xff ; '.'
000000000000718f         db  0xff ; '.'
0000000000007190         db  0x6c ; 'l'
0000000000007191         db  0xc0 ; '.'
0000000000007192         db  0xff ; '.'
0000000000007193         db  0xff ; '.'
0000000000007194         db  0x6c ; 'l'
0000000000007195         db  0xc0 ; '.'
0000000000007196         db  0xff ; '.'
0000000000007197         db  0xff ; '.'
0000000000007198         db  0x6c ; 'l'
0000000000007199         db  0xc0 ; '.'
000000000000719a         db  0xff ; '.'
000000000000719b         db  0xff ; '.'
000000000000719c         db  0x6c ; 'l'
000000000000719d         db  0xc0 ; '.'
000000000000719e         db  0xff ; '.'
000000000000719f         db  0xff ; '.'
00000000000071a0         db  0x6c ; 'l'
00000000000071a1         db  0xc0 ; '.'
00000000000071a2         db  0xff ; '.'
00000000000071a3         db  0xff ; '.'
00000000000071a4         db  0x6c ; 'l'
00000000000071a5         db  0xc0 ; '.'
00000000000071a6         db  0xff ; '.'
00000000000071a7         db  0xff ; '.'
00000000000071a8         db  0x6c ; 'l'
00000000000071a9         db  0xc0 ; '.'
00000000000071aa         db  0xff ; '.'
00000000000071ab         db  0xff ; '.'
00000000000071ac         db  0x6c ; 'l'
00000000000071ad         db  0xc0 ; '.'
00000000000071ae         db  0xff ; '.'
00000000000071af         db  0xff ; '.'
00000000000071b0         db  0x6c ; 'l'
00000000000071b1         db  0xc0 ; '.'
00000000000071b2         db  0xff ; '.'
00000000000071b3         db  0xff ; '.'
00000000000071b4         db  0x6c ; 'l'
00000000000071b5         db  0xc0 ; '.'
00000000000071b6         db  0xff ; '.'
00000000000071b7         db  0xff ; '.'
00000000000071b8         db  0x6c ; 'l'
00000000000071b9         db  0xc0 ; '.'
00000000000071ba         db  0xff ; '.'
00000000000071bb         db  0xff ; '.'
00000000000071bc         db  0x6c ; 'l'
00000000000071bd         db  0xc0 ; '.'
00000000000071be         db  0xff ; '.'
00000000000071bf         db  0xff ; '.'
00000000000071c0         db  0x6c ; 'l'
00000000000071c1         db  0xc0 ; '.'
00000000000071c2         db  0xff ; '.'
00000000000071c3         db  0xff ; '.'
00000000000071c4         db  0x6c ; 'l'
00000000000071c5         db  0xc0 ; '.'
00000000000071c6         db  0xff ; '.'
00000000000071c7         db  0xff ; '.'
00000000000071c8         db  0x6c ; 'l'
00000000000071c9         db  0xc0 ; '.'
00000000000071ca         db  0xff ; '.'
00000000000071cb         db  0xff ; '.'
00000000000071cc         db  0x6c ; 'l'
00000000000071cd         db  0xc0 ; '.'
00000000000071ce         db  0xff ; '.'
00000000000071cf         db  0xff ; '.'
00000000000071d0         db  0x6c ; 'l'
00000000000071d1         db  0xc0 ; '.'
00000000000071d2         db  0xff ; '.'
00000000000071d3         db  0xff ; '.'
00000000000071d4         db  0x6c ; 'l'
00000000000071d5         db  0xc0 ; '.'
00000000000071d6         db  0xff ; '.'
00000000000071d7         db  0xff ; '.'
00000000000071d8         db  0x6c ; 'l'
00000000000071d9         db  0xc0 ; '.'
00000000000071da         db  0xff ; '.'
00000000000071db         db  0xff ; '.'
00000000000071dc         db  0x6c ; 'l'
00000000000071dd         db  0xc0 ; '.'
00000000000071de         db  0xff ; '.'
00000000000071df         db  0xff ; '.'
00000000000071e0         db  0x6c ; 'l'
00000000000071e1         db  0xc0 ; '.'
00000000000071e2         db  0xff ; '.'
00000000000071e3         db  0xff ; '.'
00000000000071e4         db  0x6c ; 'l'
00000000000071e5         db  0xc0 ; '.'
00000000000071e6         db  0xff ; '.'
00000000000071e7         db  0xff ; '.'
00000000000071e8         db  0x6c ; 'l'
00000000000071e9         db  0xc0 ; '.'
00000000000071ea         db  0xff ; '.'
00000000000071eb         db  0xff ; '.'
00000000000071ec         db  0x6c ; 'l'
00000000000071ed         db  0xc0 ; '.'
00000000000071ee         db  0xff ; '.'
00000000000071ef         db  0xff ; '.'
00000000000071f0         db  0x6c ; 'l'
00000000000071f1         db  0xc0 ; '.'
00000000000071f2         db  0xff ; '.'
00000000000071f3         db  0xff ; '.'
00000000000071f4         db  0x6c ; 'l'
00000000000071f5         db  0xc0 ; '.'
00000000000071f6         db  0xff ; '.'
00000000000071f7         db  0xff ; '.'
00000000000071f8         db  0x27 ; '''
00000000000071f9         db  0xbe ; '.'
00000000000071fa         db  0xff ; '.'
00000000000071fb         db  0xff ; '.'
00000000000071fc         db  0xc4 ; '.'
00000000000071fd         db  0xc0 ; '.'
00000000000071fe         db  0xff ; '.'
00000000000071ff         db  0xff ; '.'
0000000000007200         db  0x27 ; '''
0000000000007201         db  0xbe ; '.'
0000000000007202         db  0xff ; '.'
0000000000007203         db  0xff ; '.'
0000000000007204         db  0x94 ; '.'
0000000000007205         db  0xc0 ; '.'
0000000000007206         db  0xff ; '.'
0000000000007207         db  0xff ; '.'
0000000000007208         db  0x18 ; '.'                                         ; DATA XREF=sub_3120+137
0000000000007209         db  0xc0 ; '.'
000000000000720a         db  0xff ; '.'
000000000000720b         db  0xff ; '.'
000000000000720c         db  0x28 ; '('
000000000000720d         db  0xbf ; '.'
000000000000720e         db  0xff ; '.'
000000000000720f         db  0xff ; '.'
0000000000007210         db  0x28 ; '('
0000000000007211         db  0xbf ; '.'
0000000000007212         db  0xff ; '.'
0000000000007213         db  0xff ; '.'
0000000000007214         db  0x28 ; '('
0000000000007215         db  0xbf ; '.'
0000000000007216         db  0xff ; '.'
0000000000007217         db  0xff ; '.'
0000000000007218         db  0x28 ; '('
0000000000007219         db  0xbf ; '.'
000000000000721a         db  0xff ; '.'
000000000000721b         db  0xff ; '.'
000000000000721c         db  0x28 ; '('
000000000000721d         db  0xbf ; '.'
000000000000721e         db  0xff ; '.'
000000000000721f         db  0xff ; '.'
0000000000007220         db  0x28 ; '('
0000000000007221         db  0xbf ; '.'
0000000000007222         db  0xff ; '.'
0000000000007223         db  0xff ; '.'
0000000000007224         db  0x08 ; '.'
0000000000007225         db  0xc0 ; '.'
0000000000007226         db  0xff ; '.'
0000000000007227         db  0xff ; '.'
0000000000007228         db  0x58 ; 'X'
0000000000007229         db  0xc1 ; '.'
000000000000722a         db  0xff ; '.'
000000000000722b         db  0xff ; '.'
000000000000722c         db  0x40 ; '@'
000000000000722d         db  0xc1 ; '.'
000000000000722e         db  0xff ; '.'
000000000000722f         db  0xff ; '.'
0000000000007230         db  0xf0 ; '.'
0000000000007231         db  0xbf ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0x30 ; '0'
0000000000007235         db  0xc1 ; '.'
0000000000007236         db  0xff ; '.'
0000000000007237         db  0xff ; '.'
0000000000007238         db  0xd8 ; '.'
0000000000007239         db  0xbf ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0x18 ; '.'
000000000000723d         db  0xc1 ; '.'
000000000000723e         db  0xff ; '.'
000000000000723f         db  0xff ; '.'
0000000000007240         db  0x28 ; '('
0000000000007241         db  0xbf ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0x28 ; '('
0000000000007245         db  0xbf ; '.'
0000000000007246         db  0xff ; '.'
0000000000007247         db  0xff ; '.'
0000000000007248         db  0x28 ; '('
0000000000007249         db  0xbf ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0x28 ; '('
000000000000724d         db  0xbf ; '.'
000000000000724e         db  0xff ; '.'
000000000000724f         db  0xff ; '.'
0000000000007250         db  0x28 ; '('
0000000000007251         db  0xbf ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0x28 ; '('
0000000000007255         db  0xbf ; '.'
0000000000007256         db  0xff ; '.'
0000000000007257         db  0xff ; '.'
0000000000007258         db  0x28 ; '('
0000000000007259         db  0xbf ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0x28 ; '('
000000000000725d         db  0xbf ; '.'
000000000000725e         db  0xff ; '.'
000000000000725f         db  0xff ; '.'
0000000000007260         db  0x28 ; '('
0000000000007261         db  0xbf ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0x28 ; '('
0000000000007265         db  0xbf ; '.'
0000000000007266         db  0xff ; '.'
0000000000007267         db  0xff ; '.'
0000000000007268         db  0x28 ; '('
0000000000007269         db  0xbf ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0x28 ; '('
000000000000726d         db  0xbf ; '.'
000000000000726e         db  0xff ; '.'
000000000000726f         db  0xff ; '.'
0000000000007270         db  0x28 ; '('
0000000000007271         db  0xbf ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0x28 ; '('
0000000000007275         db  0xbf ; '.'
0000000000007276         db  0xff ; '.'
0000000000007277         db  0xff ; '.'
0000000000007278         db  0x28 ; '('
0000000000007279         db  0xbf ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0x28 ; '('
000000000000727d         db  0xbf ; '.'
000000000000727e         db  0xff ; '.'
000000000000727f         db  0xff ; '.'
0000000000007280         db  0x28 ; '('
0000000000007281         db  0xbf ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0x28 ; '('
0000000000007285         db  0xbf ; '.'
0000000000007286         db  0xff ; '.'
0000000000007287         db  0xff ; '.'
0000000000007288         db  0x00 ; '.'
0000000000007289         db  0xc1 ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0xe8 ; '.'
000000000000728d         db  0xc0 ; '.'
000000000000728e         db  0xff ; '.'
000000000000728f         db  0xff ; '.'
0000000000007290         db  0xe8 ; '.'
0000000000007291         db  0xc0 ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0xd0 ; '.'
0000000000007295         db  0xc0 ; '.'
0000000000007296         db  0xff ; '.'
0000000000007297         db  0xff ; '.'
0000000000007298         db  0xe8 ; '.'
0000000000007299         db  0xc0 ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0xb8 ; '.'
000000000000729d         db  0xc0 ; '.'
000000000000729e         db  0xff ; '.'
000000000000729f         db  0xff ; '.'
00000000000072a0         db  0xe8 ; '.'
00000000000072a1         db  0xc0 ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0x28 ; '('
00000000000072a5         db  0xbd ; '.'
00000000000072a6         db  0xff ; '.'
00000000000072a7         db  0xff ; '.'
00000000000072a8         db  0xe8 ; '.'
00000000000072a9         db  0xc0 ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0xe8 ; '.'
00000000000072ad         db  0xc0 ; '.'
00000000000072ae         db  0xff ; '.'
00000000000072af         db  0xff ; '.'
00000000000072b0         db  0xe8 ; '.'
00000000000072b1         db  0xc0 ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0xb8 ; '.'
00000000000072b5         db  0xc0 ; '.'
00000000000072b6         db  0xff ; '.'
00000000000072b7         db  0xff ; '.'
00000000000072b8         db  0xb8 ; '.'
00000000000072b9         db  0xc0 ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0xb8 ; '.'
00000000000072bd         db  0xc0 ; '.'
00000000000072be         db  0xff ; '.'
00000000000072bf         db  0xff ; '.'
00000000000072c0         db  0xb8 ; '.'
00000000000072c1         db  0xc0 ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0xb8 ; '.'
00000000000072c5         db  0xc0 ; '.'
00000000000072c6         db  0xff ; '.'
00000000000072c7         db  0xff ; '.'
00000000000072c8         db  0xb8 ; '.'
00000000000072c9         db  0xc0 ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0xb8 ; '.'
00000000000072cd         db  0xc0 ; '.'
00000000000072ce         db  0xff ; '.'
00000000000072cf         db  0xff ; '.'
00000000000072d0         db  0xb8 ; '.'
00000000000072d1         db  0xc0 ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0xb8 ; '.'
00000000000072d5         db  0xc0 ; '.'
00000000000072d6         db  0xff ; '.'
00000000000072d7         db  0xff ; '.'
00000000000072d8         db  0xb8 ; '.'
00000000000072d9         db  0xc0 ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0xb8 ; '.'
00000000000072dd         db  0xc0 ; '.'
00000000000072de         db  0xff ; '.'
00000000000072df         db  0xff ; '.'
00000000000072e0         db  0xb8 ; '.'
00000000000072e1         db  0xc0 ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0xb8 ; '.'
00000000000072e5         db  0xc0 ; '.'
00000000000072e6         db  0xff ; '.'
00000000000072e7         db  0xff ; '.'
00000000000072e8         db  0xb8 ; '.'
00000000000072e9         db  0xc0 ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0xb8 ; '.'
00000000000072ed         db  0xc0 ; '.'
00000000000072ee         db  0xff ; '.'
00000000000072ef         db  0xff ; '.'
00000000000072f0         db  0xb8 ; '.'
00000000000072f1         db  0xc0 ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0xe8 ; '.'
00000000000072f5         db  0xc0 ; '.'
00000000000072f6         db  0xff ; '.'
00000000000072f7         db  0xff ; '.'
00000000000072f8         db  0xe8 ; '.'
00000000000072f9         db  0xc0 ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0xe8 ; '.'
00000000000072fd         db  0xc0 ; '.'
00000000000072fe         db  0xff ; '.'
00000000000072ff         db  0xff ; '.'
0000000000007300         db  0xe8 ; '.'
0000000000007301         db  0xc0 ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0xf8 ; '.'
0000000000007305         db  0xbc ; '.'
0000000000007306         db  0xff ; '.'
0000000000007307         db  0xff ; '.'
0000000000007308         db  0x28 ; '('
0000000000007309         db  0xbf ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0xb8 ; '.'
000000000000730d         db  0xc0 ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0xb8 ; '.'
0000000000007311         db  0xc0 ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0xb8 ; '.'
0000000000007315         db  0xc0 ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0xb8 ; '.'
0000000000007319         db  0xc0 ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0xb8 ; '.'
000000000000731d         db  0xc0 ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0xb8 ; '.'
0000000000007321         db  0xc0 ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0xb8 ; '.'
0000000000007325         db  0xc0 ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0xb8 ; '.'
0000000000007329         db  0xc0 ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0xb8 ; '.'
000000000000732d         db  0xc0 ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0xb8 ; '.'
0000000000007331         db  0xc0 ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0xb8 ; '.'
0000000000007335         db  0xc0 ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0xb8 ; '.'
0000000000007339         db  0xc0 ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0xb8 ; '.'
000000000000733d         db  0xc0 ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0xb8 ; '.'
0000000000007341         db  0xc0 ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0xb8 ; '.'
0000000000007345         db  0xc0 ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0xb8 ; '.'
0000000000007349         db  0xc0 ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0xb8 ; '.'
000000000000734d         db  0xc0 ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0xb8 ; '.'
0000000000007351         db  0xc0 ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0xb8 ; '.'
0000000000007355         db  0xc0 ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0xb8 ; '.'
0000000000007359         db  0xc0 ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0xb8 ; '.'
000000000000735d         db  0xc0 ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0xb8 ; '.'
0000000000007361         db  0xc0 ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0xb8 ; '.'
0000000000007365         db  0xc0 ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0xb8 ; '.'
0000000000007369         db  0xc0 ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0xb8 ; '.'
000000000000736d         db  0xc0 ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0xb8 ; '.'
0000000000007371         db  0xc0 ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0xe8 ; '.'
0000000000007375         db  0xc0 ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0xb8 ; '.'
0000000000007379         db  0xbf ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0xb8 ; '.'
000000000000737d         db  0xc0 ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0xe8 ; '.'
0000000000007381         db  0xc0 ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0xb8 ; '.'
0000000000007385         db  0xc0 ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0xe8 ; '.'
0000000000007389         db  0xc0 ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0xb8 ; '.'
000000000000738d         db  0xc0 ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0xb8 ; '.'
0000000000007391         db  0xc0 ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0xb8 ; '.'
0000000000007395         db  0xc0 ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0xb8 ; '.'
0000000000007399         db  0xc0 ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0xb8 ; '.'
000000000000739d         db  0xc0 ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0xb8 ; '.'
00000000000073a1         db  0xc0 ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0xb8 ; '.'
00000000000073a5         db  0xc0 ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0xb8 ; '.'
00000000000073a9         db  0xc0 ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0xb8 ; '.'
00000000000073ad         db  0xc0 ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0xb8 ; '.'
00000000000073b1         db  0xc0 ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0xb8 ; '.'
00000000000073b5         db  0xc0 ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0xb8 ; '.'
00000000000073b9         db  0xc0 ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0xb8 ; '.'
00000000000073bd         db  0xc0 ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0xb8 ; '.'
00000000000073c1         db  0xc0 ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0xb8 ; '.'
00000000000073c5         db  0xc0 ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0xb8 ; '.'
00000000000073c9         db  0xc0 ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0xb8 ; '.'
00000000000073cd         db  0xc0 ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0xb8 ; '.'
00000000000073d1         db  0xc0 ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0xb8 ; '.'
00000000000073d5         db  0xc0 ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0xb8 ; '.'
00000000000073d9         db  0xc0 ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0xb8 ; '.'
00000000000073dd         db  0xc0 ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0xb8 ; '.'
00000000000073e1         db  0xc0 ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0xb8 ; '.'
00000000000073e5         db  0xc0 ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0xb8 ; '.'
00000000000073e9         db  0xc0 ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0xb8 ; '.'
00000000000073ed         db  0xc0 ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0xb8 ; '.'
00000000000073f1         db  0xc0 ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0x28 ; '('
00000000000073f5         db  0xbc ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0xe8 ; '.'
00000000000073f9         db  0xc0 ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x28 ; '('
00000000000073fd         db  0xbc ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0xd0 ; '.'
0000000000007401         db  0xc0 ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0x00 ; '.'
0000000000007405         db  0x00 ; '.'
0000000000007406         db  0x00 ; '.'
0000000000007407         db  0x00 ; '.'
0000000000007408         db  0x00 ; '.'
0000000000007409         db  0x00 ; '.'
000000000000740a         db  0x00 ; '.'
000000000000740b         db  0x00 ; '.'
000000000000740c         db  0x00 ; '.'
000000000000740d         db  0x00 ; '.'
000000000000740e         db  0x00 ; '.'
000000000000740f         db  0x00 ; '.'
0000000000007410         db  0x00 ; '.'
0000000000007411         db  0x00 ; '.'
0000000000007412         db  0x00 ; '.'
0000000000007413         db  0x00 ; '.'
0000000000007414         db  0x00 ; '.'
0000000000007415         db  0x00 ; '.'
0000000000007416         db  0x00 ; '.'
0000000000007417         db  0x00 ; '.'
0000000000007418         db  0x00 ; '.'
0000000000007419         db  0x00 ; '.'
000000000000741a         db  0x00 ; '.'
000000000000741b         db  0x00 ; '.'
000000000000741c         db  0x00 ; '.'
000000000000741d         db  0x00 ; '.'
000000000000741e         db  0x00 ; '.'
000000000000741f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007420         db  0x00 ; '.'
0000000000007421         db  0x00 ; '.'
0000000000007422         db  0x00 ; '.'
0000000000007423         db  0x00 ; '.'
0000000000007424         db  0x01 ; '.'
0000000000007425         db  0x00 ; '.'
0000000000007426         db  0x00 ; '.'
0000000000007427         db  0x00 ; '.'
0000000000007428         db  0x02 ; '.'
0000000000007429         db  0x00 ; '.'
000000000000742a         db  0x00 ; '.'
000000000000742b         db  0x00 ; '.'
000000000000742c         db  0x03 ; '.'
000000000000742d         db  0x00 ; '.'
000000000000742e         db  0x00 ; '.'
000000000000742f         db  0x00 ; '.'
0000000000007430         db  0x04 ; '.'
0000000000007431         db  0x00 ; '.'
0000000000007432         db  0x00 ; '.'
0000000000007433         db  0x00 ; '.'
0000000000007434         db  0x05 ; '.'
0000000000007435         db  0x00 ; '.'
0000000000007436         db  0x00 ; '.'
0000000000007437         db  0x00 ; '.'
0000000000007438         db  0x06 ; '.'
0000000000007439         db  0x00 ; '.'
000000000000743a         db  0x00 ; '.'
000000000000743b         db  0x00 ; '.'
000000000000743c         db  0x07 ; '.'
000000000000743d         db  0x00 ; '.'
000000000000743e         db  0x00 ; '.'
000000000000743f         db  0x00 ; '.'
0000000000007440         db  0x08 ; '.'
0000000000007441         db  0x00 ; '.'
0000000000007442         db  0x00 ; '.'
0000000000007443         db  0x00 ; '.'
0000000000007444         db  0x09 ; '.'
0000000000007445         db  0x00 ; '.'
0000000000007446         db  0x00 ; '.'
0000000000007447         db  0x00 ; '.'
                     aCoreutils831li:
0000000000007448         db         "../coreutils-8.31/lib/tempname.c", 0       ; DATA XREF=gen_tempname_len+29
0000000000007469         align      16
                     aInvalidKindInG:
0000000000007470         db         "! \"invalid KIND in __gen_tempname\"", 0   ; DATA XREF=gen_tempname_len+36
0000000000007493         align      32
                     __PRETTY_FUNCTION__.5642:
00000000000074a0         db         "gen_tempname_len", 0                       ; DATA XREF=gen_tempname_len+22
00000000000074b1         align      64
                     letters:
00000000000074c0         db         "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", 0 ; DATA XREF=try_tempname_len+144
                     aSSSn:
00000000000074ff         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000750b         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000007512         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000007513         db  0x43 ; 'C'
0000000000007514         db  0x29 ; ')'
0000000000007515         db  0x00 ; '.'
                     aWrittenBySn:
0000000000007516         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000007526         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000753d         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007559         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000756e         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000007584         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
                     aNlicenseGplv3G:
0000000000007598         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007664         align      8
                     aWrittenBySSSna:
0000000000007668         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7688:        // aWrittenBySSSns
0000000000007688         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000076ac         align      16
                     aWrittenBySSSns_76b0:        // aWrittenBySSSns
00000000000076b0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_76d8:        // aWrittenBySSSns
00000000000076d8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007704         align      8
                     aWrittenBySSSns_7708:        // aWrittenBySSSns
0000000000007708         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007738         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000776c         align      16
                     aWrittenBySSSns_7770:        // aWrittenBySSSns
0000000000007770         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000077ac         align      16
                     aGeneralHelpUsi:
00000000000077b0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000077f1         align      8
                     switch_table_77f8:        // switch_table
00000000000077f8         dd         version_etc_arn.loc_4be6-switch_table_77f8, version_etc_arn.loc_4c78-switch_table_77f8, version_etc_arn.loc_4cb8-switch_table_77f8, version_etc_arn.loc_4d00-switch_table_77f8 ; switch table used at 0x4b64 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007808         dd         version_etc_arn.loc_4d50-switch_table_77f8, version_etc_arn.loc_4da8-switch_table_77f8, version_etc_arn.loc_4dd8-switch_table_77f8, version_etc_arn.loc_4e40-switch_table_77f8
0000000000007818         dd         version_etc_arn.loc_4b70-switch_table_77f8, version_etc_arn.loc_4c20-switch_table_77f8
                     version_etc_copyright:
0000000000007820         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000784f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000007860         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007861         db  0x00 ; '.'
                     aPosix:
0000000000007862         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007868         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
                     aSEndOfFile:
000000000000786e         db         "%s: end of file", 0                        ; DATA XREF=randread_error+77
                     aSReadError:
000000000000787e         db         "%s: read error", 0                         ; DATA XREF=randread_error+37
                     aDevurandom:
000000000000788d         db         "/dev/urandom", 0                           ; DATA XREF=randread_new+203
000000000000789a         db  0x72 ; 'r'                                         ; DATA XREF=randread_new+50
000000000000789b         db  0x62 ; 'b'
000000000000789c         db  0x00 ; '.'
000000000000789d         db  0x00 ; '.'
000000000000789e         db  0x00 ; '.'
000000000000789f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x78a0; 0x7bc4[ (804 bytes)
        ; File offset : [30880; 31684[ (804 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000078a0         db  0x01 ; '.'
00000000000078a1         db  0x1b ; '.'
00000000000078a2         db  0x03 ; '.'
00000000000078a3         db  0x3b ; ';'
00000000000078a4         db  0x24 ; '$'
00000000000078a5         db  0x03 ; '.'
00000000000078a6         db  0x00 ; '.'
00000000000078a7         db  0x00 ; '.'
00000000000078a8         db  0x63 ; 'c'
00000000000078a9         db  0x00 ; '.'
00000000000078aa         db  0x00 ; '.'
00000000000078ab         db  0x00 ; '.'
00000000000078ac         db  0xd0 ; '.'
00000000000078ad         db  0x9e ; '.'
00000000000078ae         db  0xff ; '.'
00000000000078af         db  0xff ; '.'
00000000000078b0         db  0x70 ; 'p'
00000000000078b1         db  0x03 ; '.'
00000000000078b2         db  0x00 ; '.'
00000000000078b3         db  0x00 ; '.'
00000000000078b4         db  0xc0 ; '.'
00000000000078b5         db  0xa2 ; '.'
00000000000078b6         db  0xff ; '.'
00000000000078b7         db  0xff ; '.'
00000000000078b8         db  0x98 ; '.'
00000000000078b9         db  0x03 ; '.'
00000000000078ba         db  0x00 ; '.'
00000000000078bb         db  0x00 ; '.'
00000000000078bc         db  0xd0 ; '.'
00000000000078bd         db  0xa2 ; '.'
00000000000078be         db  0xff ; '.'
00000000000078bf         db  0xff ; '.'
00000000000078c0         db  0xf8 ; '.'
00000000000078c1         db  0x03 ; '.'
00000000000078c2         db  0x00 ; '.'
00000000000078c3         db  0x00 ; '.'
00000000000078c4         db  0x90 ; '.'
00000000000078c5         db  0xa9 ; '.'
00000000000078c6         db  0xff ; '.'
00000000000078c7         db  0xff ; '.'
00000000000078c8         db  0x40 ; '@'
00000000000078c9         db  0x03 ; '.'
00000000000078ca         db  0x00 ; '.'
00000000000078cb         db  0x00 ; '.'
00000000000078cc         db  0xa0 ; '.'
00000000000078cd         db  0xaa ; '.'
00000000000078ce         db  0xff ; '.'
00000000000078cf         db  0xff ; '.'
00000000000078d0         db  0xb0 ; '.'
00000000000078d1         db  0x03 ; '.'
00000000000078d2         db  0x00 ; '.'
00000000000078d3         db  0x00 ; '.'
00000000000078d4         db  0xe0 ; '.'
00000000000078d5         db  0xaa ; '.'
00000000000078d6         db  0xff ; '.'
00000000000078d7         db  0xff ; '.'
00000000000078d8         db  0xcc ; '.'
00000000000078d9         db  0x03 ; '.'
00000000000078da         db  0x00 ; '.'
00000000000078db         db  0x00 ; '.'
00000000000078dc         db  0xf0 ; '.'
00000000000078dd         db  0xae ; '.'
00000000000078de         db  0xff ; '.'
00000000000078df         db  0xff ; '.'
00000000000078e0         db  0x50 ; 'P'
00000000000078e1         db  0x04 ; '.'
00000000000078e2         db  0x00 ; '.'
00000000000078e3         db  0x00 ; '.'
00000000000078e4         db  0x70 ; 'p'
00000000000078e5         db  0xaf ; '.'
00000000000078e6         db  0xff ; '.'
00000000000078e7         db  0xff ; '.'
00000000000078e8         db  0xa0 ; '.'
00000000000078e9         db  0x04 ; '.'
00000000000078ea         db  0x00 ; '.'
00000000000078eb         db  0x00 ; '.'
00000000000078ec         db  0x80 ; '.'
00000000000078ed         db  0xaf ; '.'
00000000000078ee         db  0xff ; '.'
00000000000078ef         db  0xff ; '.'
00000000000078f0         db  0xb4 ; '.'
00000000000078f1         db  0x04 ; '.'
00000000000078f2         db  0x00 ; '.'
00000000000078f3         db  0x00 ; '.'
00000000000078f4         db  0x90 ; '.'
00000000000078f5         db  0xaf ; '.'
00000000000078f6         db  0xff ; '.'
00000000000078f7         db  0xff ; '.'
00000000000078f8         db  0xc8 ; '.'
00000000000078f9         db  0x04 ; '.'
00000000000078fa         db  0x00 ; '.'
00000000000078fb         db  0x00 ; '.'
00000000000078fc         db  0x40 ; '@'
00000000000078fd         db  0xb0 ; '.'
00000000000078fe         db  0xff ; '.'
00000000000078ff         db  0xff ; '.'
0000000000007900         db  0xf8 ; '.'
0000000000007901         db  0x04 ; '.'
0000000000007902         db  0x00 ; '.'
0000000000007903         db  0x00 ; '.'
0000000000007904         db  0xa0 ; '.'
0000000000007905         db  0xb0 ; '.'
0000000000007906         db  0xff ; '.'
0000000000007907         db  0xff ; '.'
0000000000007908         db  0x0c ; '.'
0000000000007909         db  0x05 ; '.'
000000000000790a         db  0x00 ; '.'
000000000000790b         db  0x00 ; '.'
000000000000790c         db  0xf0 ; '.'
000000000000790d         db  0xb0 ; '.'
000000000000790e         db  0xff ; '.'
000000000000790f         db  0xff ; '.'
0000000000007910         db  0x38 ; '8'
0000000000007911         db  0x05 ; '.'
0000000000007912         db  0x00 ; '.'
0000000000007913         db  0x00 ; '.'
0000000000007914         db  0x10 ; '.'
0000000000007915         db  0xb1 ; '.'
0000000000007916         db  0xff ; '.'
0000000000007917         db  0xff ; '.'
0000000000007918         db  0x58 ; 'X'
0000000000007919         db  0x05 ; '.'
000000000000791a         db  0x00 ; '.'
000000000000791b         db  0x00 ; '.'
000000000000791c         db  0x10 ; '.'
000000000000791d         db  0xb2 ; '.'
000000000000791e         db  0xff ; '.'
000000000000791f         db  0xff ; '.'
0000000000007920         db  0xa8 ; '.'
0000000000007921         db  0x05 ; '.'
0000000000007922         db  0x00 ; '.'
0000000000007923         db  0x00 ; '.'
0000000000007924         db  0xb0 ; '.'
0000000000007925         db  0xb2 ; '.'
0000000000007926         db  0xff ; '.'
0000000000007927         db  0xff ; '.'
0000000000007928         db  0xc8 ; '.'
0000000000007929         db  0x05 ; '.'
000000000000792a         db  0x00 ; '.'
000000000000792b         db  0x00 ; '.'
000000000000792c         db  0xa0 ; '.'
000000000000792d         db  0xb3 ; '.'
000000000000792e         db  0xff ; '.'
000000000000792f         db  0xff ; '.'
0000000000007930         db  0x0c ; '.'
0000000000007931         db  0x06 ; '.'
0000000000007932         db  0x00 ; '.'
0000000000007933         db  0x00 ; '.'
0000000000007934         db  0xe0 ; '.'
0000000000007935         db  0xc5 ; '.'
0000000000007936         db  0xff ; '.'
0000000000007937         db  0xff ; '.'
0000000000007938         db  0x84 ; '.'
0000000000007939         db  0x06 ; '.'
000000000000793a         db  0x00 ; '.'
000000000000793b         db  0x00 ; '.'
000000000000793c         db  0x90 ; '.'
000000000000793d         db  0xc7 ; '.'
000000000000793e         db  0xff ; '.'
000000000000793f         db  0xff ; '.'
0000000000007940         db  0xf0 ; '.'
0000000000007941         db  0x06 ; '.'
0000000000007942         db  0x00 ; '.'
0000000000007943         db  0x00 ; '.'
0000000000007944         db  0xd0 ; '.'
0000000000007945         db  0xc7 ; '.'
0000000000007946         db  0xff ; '.'
0000000000007947         db  0xff ; '.'
0000000000007948         db  0x1c ; '.'
0000000000007949         db  0x07 ; '.'
000000000000794a         db  0x00 ; '.'
000000000000794b         db  0x00 ; '.'
000000000000794c         db  0xf0 ; '.'
000000000000794d         db  0xc7 ; '.'
000000000000794e         db  0xff ; '.'
000000000000794f         db  0xff ; '.'
0000000000007950         db  0x30 ; '0'
0000000000007951         db  0x07 ; '.'
0000000000007952         db  0x00 ; '.'
0000000000007953         db  0x00 ; '.'
0000000000007954         db  0x10 ; '.'
0000000000007955         db  0xc8 ; '.'
0000000000007956         db  0xff ; '.'
0000000000007957         db  0xff ; '.'
0000000000007958         db  0x44 ; 'D'
0000000000007959         db  0x07 ; '.'
000000000000795a         db  0x00 ; '.'
000000000000795b         db  0x00 ; '.'
000000000000795c         db  0x50 ; 'P'
000000000000795d         db  0xc8 ; '.'
000000000000795e         db  0xff ; '.'
000000000000795f         db  0xff ; '.'
0000000000007960         db  0x58 ; 'X'
0000000000007961         db  0x07 ; '.'
0000000000007962         db  0x00 ; '.'
0000000000007963         db  0x00 ; '.'
0000000000007964         db  0x70 ; 'p'
0000000000007965         db  0xc8 ; '.'
0000000000007966         db  0xff ; '.'
0000000000007967         db  0xff ; '.'
0000000000007968         db  0x6c ; 'l'
0000000000007969         db  0x07 ; '.'
000000000000796a         db  0x00 ; '.'
000000000000796b         db  0x00 ; '.'
000000000000796c         db  0xa0 ; '.'
000000000000796d         db  0xc8 ; '.'
000000000000796e         db  0xff ; '.'
000000000000796f         db  0xff ; '.'
0000000000007970         db  0x80 ; '.'
0000000000007971         db  0x07 ; '.'
0000000000007972         db  0x00 ; '.'
0000000000007973         db  0x00 ; '.'
0000000000007974         db  0x20 ; ' '
0000000000007975         db  0xc9 ; '.'
0000000000007976         db  0xff ; '.'
0000000000007977         db  0xff ; '.'
0000000000007978         db  0xd4 ; '.'
0000000000007979         db  0x07 ; '.'
000000000000797a         db  0x00 ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         db  0x10 ; '.'
000000000000797d         db  0xca ; '.'
000000000000797e         db  0xff ; '.'
000000000000797f         db  0xff ; '.'
0000000000007980         db  0x40 ; '@'
0000000000007981         db  0x08 ; '.'
0000000000007982         db  0x00 ; '.'
0000000000007983         db  0x00 ; '.'
0000000000007984         db  0x20 ; ' '
0000000000007985         db  0xca ; '.'
0000000000007986         db  0xff ; '.'
0000000000007987         db  0xff ; '.'
0000000000007988         db  0x54 ; 'T'
0000000000007989         db  0x08 ; '.'
000000000000798a         db  0x00 ; '.'
000000000000798b         db  0x00 ; '.'
000000000000798c         db  0xc0 ; '.'
000000000000798d         db  0xca ; '.'
000000000000798e         db  0xff ; '.'
000000000000798f         db  0xff ; '.'
0000000000007990         db  0x80 ; '.'
0000000000007991         db  0x08 ; '.'
0000000000007992         db  0x00 ; '.'
0000000000007993         db  0x00 ; '.'
0000000000007994         db  0xe0 ; '.'
0000000000007995         db  0xca ; '.'
0000000000007996         db  0xff ; '.'
0000000000007997         db  0xff ; '.'
0000000000007998         db  0x94 ; '.'
0000000000007999         db  0x08 ; '.'
000000000000799a         db  0x00 ; '.'
000000000000799b         db  0x00 ; '.'
000000000000799c         db  0xf0 ; '.'
000000000000799d         db  0xca ; '.'
000000000000799e         db  0xff ; '.'
000000000000799f         db  0xff ; '.'
00000000000079a0         db  0xa8 ; '.'
00000000000079a1         db  0x08 ; '.'
00000000000079a2         db  0x00 ; '.'
00000000000079a3         db  0x00 ; '.'
00000000000079a4         db  0x10 ; '.'
00000000000079a5         db  0xcb ; '.'
00000000000079a6         db  0xff ; '.'
00000000000079a7         db  0xff ; '.'
00000000000079a8         db  0xbc ; '.'
00000000000079a9         db  0x08 ; '.'
00000000000079aa         db  0x00 ; '.'
00000000000079ab         db  0x00 ; '.'
00000000000079ac         db  0x30 ; '0'
00000000000079ad         db  0xcb ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0xd0 ; '.'
00000000000079b1         db  0x08 ; '.'
00000000000079b2         db  0x00 ; '.'
00000000000079b3         db  0x00 ; '.'
00000000000079b4         db  0xc0 ; '.'
00000000000079b5         db  0xcb ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0xec ; '.'
00000000000079b9         db  0x08 ; '.'
00000000000079ba         db  0x00 ; '.'
00000000000079bb         db  0x00 ; '.'
00000000000079bc         db  0x50 ; 'P'
00000000000079bd         db  0xcc ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x08 ; '.'
00000000000079c1         db  0x09 ; '.'
00000000000079c2         db  0x00 ; '.'
00000000000079c3         db  0x00 ; '.'
00000000000079c4         db  0x60 ; '`'
00000000000079c5         db  0xcc ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0x1c ; '.'
00000000000079c9         db  0x09 ; '.'
00000000000079ca         db  0x00 ; '.'
00000000000079cb         db  0x00 ; '.'
00000000000079cc         db  0x70 ; 'p'
00000000000079cd         db  0xcc ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0x30 ; '0'
00000000000079d1         db  0x09 ; '.'
00000000000079d2         db  0x00 ; '.'
00000000000079d3         db  0x00 ; '.'
00000000000079d4         db  0x10 ; '.'
00000000000079d5         db  0xcd ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x4c ; 'L'
00000000000079d9         db  0x09 ; '.'
00000000000079da         db  0x00 ; '.'
00000000000079db         db  0x00 ; '.'
00000000000079dc         db  0x20 ; ' '
00000000000079dd         db  0xcd ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0x60 ; '`'
00000000000079e1         db  0x09 ; '.'
00000000000079e2         db  0x00 ; '.'
00000000000079e3         db  0x00 ; '.'
00000000000079e4         db  0x40 ; '@'
00000000000079e5         db  0xcd ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x74 ; 't'
00000000000079e9         db  0x09 ; '.'
00000000000079ea         db  0x00 ; '.'
00000000000079eb         db  0x00 ; '.'
00000000000079ec         db  0x50 ; 'P'
00000000000079ed         db  0xcd ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x88 ; '.'
00000000000079f1         db  0x09 ; '.'
00000000000079f2         db  0x00 ; '.'
00000000000079f3         db  0x00 ; '.'
00000000000079f4         db  0xe0 ; '.'
00000000000079f5         db  0xcd ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0xa4 ; '.'
00000000000079f9         db  0x09 ; '.'
00000000000079fa         db  0x00 ; '.'
00000000000079fb         db  0x00 ; '.'
00000000000079fc         db  0x80 ; '.'
00000000000079fd         db  0xce ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0xc0 ; '.'
0000000000007a01         db  0x09 ; '.'
0000000000007a02         db  0x00 ; '.'
0000000000007a03         db  0x00 ; '.'
0000000000007a04         db  0x90 ; '.'
0000000000007a05         db  0xce ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0xd4 ; '.'
0000000000007a09         db  0x09 ; '.'
0000000000007a0a         db  0x00 ; '.'
0000000000007a0b         db  0x00 ; '.'
0000000000007a0c         db  0xb0 ; '.'
0000000000007a0d         db  0xce ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0xe8 ; '.'
0000000000007a11         db  0x09 ; '.'
0000000000007a12         db  0x00 ; '.'
0000000000007a13         db  0x00 ; '.'
0000000000007a14         db  0xd0 ; '.'
0000000000007a15         db  0xce ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0xfc ; '.'
0000000000007a19         db  0x09 ; '.'
0000000000007a1a         db  0x00 ; '.'
0000000000007a1b         db  0x00 ; '.'
0000000000007a1c         db  0xe0 ; '.'
0000000000007a1d         db  0xce ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0x10 ; '.'
0000000000007a21         db  0x0a ; '.'
0000000000007a22         db  0x00 ; '.'
0000000000007a23         db  0x00 ; '.'
0000000000007a24         db  0x00 ; '.'
0000000000007a25         db  0xcf ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0x24 ; '$'
0000000000007a29         db  0x0a ; '.'
0000000000007a2a         db  0x00 ; '.'
0000000000007a2b         db  0x00 ; '.'
0000000000007a2c         db  0x20 ; ' '
0000000000007a2d         db  0xcf ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0x38 ; '8'
0000000000007a31         db  0x0a ; '.'
0000000000007a32         db  0x00 ; '.'
0000000000007a33         db  0x00 ; '.'
0000000000007a34         db  0x40 ; '@'
0000000000007a35         db  0xcf ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0x50 ; 'P'
0000000000007a39         db  0x0a ; '.'
0000000000007a3a         db  0x00 ; '.'
0000000000007a3b         db  0x00 ; '.'
0000000000007a3c         db  0xc0 ; '.'
0000000000007a3d         db  0xcf ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0x74 ; 't'
0000000000007a41         db  0x0a ; '.'
0000000000007a42         db  0x00 ; '.'
0000000000007a43         db  0x00 ; '.'
0000000000007a44         db  0xd0 ; '.'
0000000000007a45         db  0xcf ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0x88 ; '.'
0000000000007a49         db  0x0a ; '.'
0000000000007a4a         db  0x00 ; '.'
0000000000007a4b         db  0x00 ; '.'
0000000000007a4c         db  0xf0 ; '.'
0000000000007a4d         db  0xcf ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0x9c ; '.'
0000000000007a51         db  0x0a ; '.'
0000000000007a52         db  0x00 ; '.'
0000000000007a53         db  0x00 ; '.'
0000000000007a54         db  0x70 ; 'p'
0000000000007a55         db  0xd1 ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0xe8 ; '.'
0000000000007a59         db  0x0a ; '.'
0000000000007a5a         db  0x00 ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         db  0x00 ; '.'
0000000000007a5d         db  0xd2 ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0x0c ; '.'
0000000000007a61         db  0x0b ; '.'
0000000000007a62         db  0x00 ; '.'
0000000000007a63         db  0x00 ; '.'
0000000000007a64         db  0x10 ; '.'
0000000000007a65         db  0xd2 ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x20 ; ' '
0000000000007a69         db  0x0b ; '.'
0000000000007a6a         db  0x00 ; '.'
0000000000007a6b         db  0x00 ; '.'
0000000000007a6c         db  0x20 ; ' '
0000000000007a6d         db  0xd2 ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0x38 ; '8'
0000000000007a71         db  0x0b ; '.'
0000000000007a72         db  0x00 ; '.'
0000000000007a73         db  0x00 ; '.'
0000000000007a74         db  0x40 ; '@'
0000000000007a75         db  0xd6 ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0x4c ; 'L'
0000000000007a79         db  0x0c ; '.'
0000000000007a7a         db  0x00 ; '.'
0000000000007a7b         db  0x00 ; '.'
0000000000007a7c         db  0x60 ; '`'
0000000000007a7d         db  0xd6 ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0x60 ; '`'
0000000000007a81         db  0x0c ; '.'
0000000000007a82         db  0x00 ; '.'
0000000000007a83         db  0x00 ; '.'
0000000000007a84         db  0xe0 ; '.'
0000000000007a85         db  0xd6 ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0x7c ; '|'
0000000000007a89         db  0x0c ; '.'
0000000000007a8a         db  0x00 ; '.'
0000000000007a8b         db  0x00 ; '.'
0000000000007a8c         db  0xc0 ; '.'
0000000000007a8d         db  0xd7 ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0xa8 ; '.'
0000000000007a91         db  0x0c ; '.'
0000000000007a92         db  0x00 ; '.'
0000000000007a93         db  0x00 ; '.'
0000000000007a94         db  0x40 ; '@'
0000000000007a95         db  0xd8 ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0xc8 ; '.'
0000000000007a99         db  0x0c ; '.'
0000000000007a9a         db  0x00 ; '.'
0000000000007a9b         db  0x00 ; '.'
0000000000007a9c         db  0x60 ; '`'
0000000000007a9d         db  0xd8 ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0xe4 ; '.'
0000000000007aa1         db  0x0c ; '.'
0000000000007aa2         db  0x00 ; '.'
0000000000007aa3         db  0x00 ; '.'
0000000000007aa4         db  0x90 ; '.'
0000000000007aa5         db  0xd8 ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0xf8 ; '.'
0000000000007aa9         db  0x0c ; '.'
0000000000007aaa         db  0x00 ; '.'
0000000000007aab         db  0x00 ; '.'
0000000000007aac         db  0xa0 ; '.'
0000000000007aad         db  0xd8 ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0x0c ; '.'
0000000000007ab1         db  0x0d ; '.'
0000000000007ab2         db  0x00 ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         db  0xe0 ; '.'
0000000000007ab5         db  0xd8 ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0x30 ; '0'
0000000000007ab9         db  0x0d ; '.'
0000000000007aba         db  0x00 ; '.'
0000000000007abb         db  0x00 ; '.'
0000000000007abc         db  0x10 ; '.'
0000000000007abd         db  0xd9 ; '.'
0000000000007abe         db  0xff ; '.'
0000000000007abf         db  0xff ; '.'
0000000000007ac0         db  0x44 ; 'D'
0000000000007ac1         db  0x0d ; '.'
0000000000007ac2         db  0x00 ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0xa0 ; '.'
0000000000007ac5         db  0xd9 ; '.'
0000000000007ac6         db  0xff ; '.'
0000000000007ac7         db  0xff ; '.'
0000000000007ac8         db  0x5c ; '\'
0000000000007ac9         db  0x0d ; '.'
0000000000007aca         db  0x00 ; '.'
0000000000007acb         db  0x00 ; '.'
0000000000007acc         db  0xf0 ; '.'
0000000000007acd         db  0xd9 ; '.'
0000000000007ace         db  0xff ; '.'
0000000000007acf         db  0xff ; '.'
0000000000007ad0         db  0x74 ; 't'
0000000000007ad1         db  0x0d ; '.'
0000000000007ad2         db  0x00 ; '.'
0000000000007ad3         db  0x00 ; '.'
0000000000007ad4         db  0x10 ; '.'
0000000000007ad5         db  0xda ; '.'
0000000000007ad6         db  0xff ; '.'
0000000000007ad7         db  0xff ; '.'
0000000000007ad8         db  0x90 ; '.'
0000000000007ad9         db  0x0d ; '.'
0000000000007ada         db  0x00 ; '.'
0000000000007adb         db  0x00 ; '.'
0000000000007adc         db  0x40 ; '@'
0000000000007add         db  0xda ; '.'
0000000000007ade         db  0xff ; '.'
0000000000007adf         db  0xff ; '.'
0000000000007ae0         db  0xac ; '.'
0000000000007ae1         db  0x0d ; '.'
0000000000007ae2         db  0x00 ; '.'
0000000000007ae3         db  0x00 ; '.'
0000000000007ae4         db  0x70 ; 'p'
0000000000007ae5         db  0xda ; '.'
0000000000007ae6         db  0xff ; '.'
0000000000007ae7         db  0xff ; '.'
0000000000007ae8         db  0xd4 ; '.'
0000000000007ae9         db  0x0d ; '.'
0000000000007aea         db  0x00 ; '.'
0000000000007aeb         db  0x00 ; '.'
0000000000007aec         db  0x90 ; '.'
0000000000007aed         db  0xda ; '.'
0000000000007aee         db  0xff ; '.'
0000000000007aef         db  0xff ; '.'
0000000000007af0         db  0xf0 ; '.'
0000000000007af1         db  0x0d ; '.'
0000000000007af2         db  0x00 ; '.'
0000000000007af3         db  0x00 ; '.'
0000000000007af4         db  0xd0 ; '.'
0000000000007af5         db  0xda ; '.'
0000000000007af6         db  0xff ; '.'
0000000000007af7         db  0xff ; '.'
0000000000007af8         db  0x08 ; '.'
0000000000007af9         db  0x0e ; '.'
0000000000007afa         db  0x00 ; '.'
0000000000007afb         db  0x00 ; '.'
0000000000007afc         db  0x50 ; 'P'
0000000000007afd         db  0xdb ; '.'
0000000000007afe         db  0xff ; '.'
0000000000007aff         db  0xff ; '.'
0000000000007b00         db  0x40 ; '@'
0000000000007b01         db  0x0e ; '.'
0000000000007b02         db  0x00 ; '.'
0000000000007b03         db  0x00 ; '.'
0000000000007b04         db  0x90 ; '.'
0000000000007b05         db  0xdb ; '.'
0000000000007b06         db  0xff ; '.'
0000000000007b07         db  0xff ; '.'
0000000000007b08         db  0x60 ; '`'
0000000000007b09         db  0x0e ; '.'
0000000000007b0a         db  0x00 ; '.'
0000000000007b0b         db  0x00 ; '.'
0000000000007b0c         db  0xf0 ; '.'
0000000000007b0d         db  0xdb ; '.'
0000000000007b0e         db  0xff ; '.'
0000000000007b0f         db  0xff ; '.'
0000000000007b10         db  0x90 ; '.'
0000000000007b11         db  0x0e ; '.'
0000000000007b12         db  0x00 ; '.'
0000000000007b13         db  0x00 ; '.'
0000000000007b14         db  0x80 ; '.'
0000000000007b15         db  0xdc ; '.'
0000000000007b16         db  0xff ; '.'
0000000000007b17         db  0xff ; '.'
0000000000007b18         db  0xd0 ; '.'
0000000000007b19         db  0x0e ; '.'
0000000000007b1a         db  0x00 ; '.'
0000000000007b1b         db  0x00 ; '.'
0000000000007b1c         db  0xe0 ; '.'
0000000000007b1d         db  0xdc ; '.'
0000000000007b1e         db  0xff ; '.'
0000000000007b1f         db  0xff ; '.'
0000000000007b20         db  0xf0 ; '.'
0000000000007b21         db  0x0e ; '.'
0000000000007b22         db  0x00 ; '.'
0000000000007b23         db  0x00 ; '.'
0000000000007b24         db  0x20 ; ' '
0000000000007b25         db  0xdd ; '.'
0000000000007b26         db  0xff ; '.'
0000000000007b27         db  0xff ; '.'
0000000000007b28         db  0x10 ; '.'
0000000000007b29         db  0x0f ; '.'
0000000000007b2a         db  0x00 ; '.'
0000000000007b2b         db  0x00 ; '.'
0000000000007b2c         db  0x50 ; 'P'
0000000000007b2d         db  0xdd ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x2c ; ','
0000000000007b31         db  0x0f ; '.'
0000000000007b32         db  0x00 ; '.'
0000000000007b33         db  0x00 ; '.'
0000000000007b34         db  0x90 ; '.'
0000000000007b35         db  0xdd ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0x4c ; 'L'
0000000000007b39         db  0x0f ; '.'
0000000000007b3a         db  0x00 ; '.'
0000000000007b3b         db  0x00 ; '.'
0000000000007b3c         db  0xa0 ; '.'
0000000000007b3d         db  0xdd ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0x60 ; '`'
0000000000007b41         db  0x0f ; '.'
0000000000007b42         db  0x00 ; '.'
0000000000007b43         db  0x00 ; '.'
0000000000007b44         db  0xc0 ; '.'
0000000000007b45         db  0xde ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0xac ; '.'
0000000000007b49         db  0x0f ; '.'
0000000000007b4a         db  0x00 ; '.'
0000000000007b4b         db  0x00 ; '.'
0000000000007b4c         db  0xe0 ; '.'
0000000000007b4d         db  0xde ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0xc8 ; '.'
0000000000007b51         db  0x0f ; '.'
0000000000007b52         db  0x00 ; '.'
0000000000007b53         db  0x00 ; '.'
0000000000007b54         db  0x40 ; '@'
0000000000007b55         db  0xdf ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x00 ; '.'
0000000000007b59         db  0x10 ; '.'
0000000000007b5a         db  0x00 ; '.'
0000000000007b5b         db  0x00 ; '.'
0000000000007b5c         db  0xa0 ; '.'
0000000000007b5d         db  0xdf ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0x20 ; ' '
0000000000007b61         db  0x10 ; '.'
0000000000007b62         db  0x00 ; '.'
0000000000007b63         db  0x00 ; '.'
0000000000007b64         db  0xd0 ; '.'
0000000000007b65         db  0xe2 ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0x6c ; 'l'
0000000000007b69         db  0x10 ; '.'
0000000000007b6a         db  0x00 ; '.'
0000000000007b6b         db  0x00 ; '.'
0000000000007b6c         db  0xe0 ; '.'
0000000000007b6d         db  0xe2 ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0x80 ; '.'
0000000000007b71         db  0x10 ; '.'
0000000000007b72         db  0x00 ; '.'
0000000000007b73         db  0x00 ; '.'
0000000000007b74         db  0xf0 ; '.'
0000000000007b75         db  0xe2 ; '.'
0000000000007b76         db  0xff ; '.'
0000000000007b77         db  0xff ; '.'
0000000000007b78         db  0x94 ; '.'
0000000000007b79         db  0x10 ; '.'
0000000000007b7a         db  0x00 ; '.'
0000000000007b7b         db  0x00 ; '.'
0000000000007b7c         db  0x90 ; '.'
0000000000007b7d         db  0xe4 ; '.'
0000000000007b7e         db  0xff ; '.'
0000000000007b7f         db  0xff ; '.'
0000000000007b80         db  0xf8 ; '.'
0000000000007b81         db  0x10 ; '.'
0000000000007b82         db  0x00 ; '.'
0000000000007b83         db  0x00 ; '.'
0000000000007b84         db  0xe0 ; '.'
0000000000007b85         db  0xe4 ; '.'
0000000000007b86         db  0xff ; '.'
0000000000007b87         db  0xff ; '.'
0000000000007b88         db  0x30 ; '0'
0000000000007b89         db  0x11 ; '.'
0000000000007b8a         db  0x00 ; '.'
0000000000007b8b         db  0x00 ; '.'
0000000000007b8c         db  0x70 ; 'p'
0000000000007b8d         db  0xe7 ; '.'
0000000000007b8e         db  0xff ; '.'
0000000000007b8f         db  0xff ; '.'
0000000000007b90         db  0x44 ; 'D'
0000000000007b91         db  0x11 ; '.'
0000000000007b92         db  0x00 ; '.'
0000000000007b93         db  0x00 ; '.'
0000000000007b94         db  0xb0 ; '.'
0000000000007b95         db  0xe9 ; '.'
0000000000007b96         db  0xff ; '.'
0000000000007b97         db  0xff ; '.'
0000000000007b98         db  0x78 ; 'x'
0000000000007b99         db  0x11 ; '.'
0000000000007b9a         db  0x00 ; '.'
0000000000007b9b         db  0x00 ; '.'
0000000000007b9c         db  0x50 ; 'P'
0000000000007b9d         db  0xea ; '.'
0000000000007b9e         db  0xff ; '.'
0000000000007b9f         db  0xff ; '.'
0000000000007ba0         db  0xa8 ; '.'
0000000000007ba1         db  0x11 ; '.'
0000000000007ba2         db  0x00 ; '.'
0000000000007ba3         db  0x00 ; '.'
0000000000007ba4         db  0x60 ; '`'
0000000000007ba5         db  0xea ; '.'
0000000000007ba6         db  0xff ; '.'
0000000000007ba7         db  0xff ; '.'
0000000000007ba8         db  0xc0 ; '.'
0000000000007ba9         db  0x11 ; '.'
0000000000007baa         db  0x00 ; '.'
0000000000007bab         db  0x00 ; '.'
0000000000007bac         db  0xe0 ; '.'
0000000000007bad         db  0xec ; '.'
0000000000007bae         db  0xff ; '.'
0000000000007baf         db  0xff ; '.'
0000000000007bb0         db  0xf8 ; '.'
0000000000007bb1         db  0x11 ; '.'
0000000000007bb2         db  0x00 ; '.'
0000000000007bb3         db  0x00 ; '.'
0000000000007bb4         db  0x50 ; 'P'
0000000000007bb5         db  0xed ; '.'
0000000000007bb6         db  0xff ; '.'
0000000000007bb7         db  0xff ; '.'
0000000000007bb8         db  0x40 ; '@'
0000000000007bb9         db  0x12 ; '.'
0000000000007bba         db  0x00 ; '.'
0000000000007bbb         db  0x00 ; '.'
0000000000007bbc         db  0x60 ; '`'
0000000000007bbd         db  0xed ; '.'
0000000000007bbe         db  0xff ; '.'
0000000000007bbf         db  0xff ; '.'
0000000000007bc0         db  0x58 ; 'X'
0000000000007bc1         db  0x12 ; '.'
0000000000007bc2         db  0x00 ; '.'
0000000000007bc3         db  0x00 ; '.'
0000000000007bc4         db  0x00 ; '.'
0000000000007bc5         db  0x00 ; '.'
0000000000007bc6         db  0x00 ; '.'
0000000000007bc7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7bc8; 0x8b10[ (3912 bytes)
        ; File offset : [31688; 35600[ (3912 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007bc8         dd         0x00000014                                  ; Length of the record
0000000000007bcc         dd         0x00000000                                  ; CIE ID
0000000000007bd0         db         0x01                                        ; Version
0000000000007bd1         db         "zR", 0                                     ; Augmentation String
0000000000007bd4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007bd5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007bd6         db         0x10                                        ; Return address register
0000000000007bd7         db         0x01                                        ; Augmentation data length
0000000000007bd8         db         0x1b                                        ; FDE encoding
0000000000007bd9         db  0x0c ; '.'
0000000000007bda         db  0x07 ; '.'
0000000000007bdb         db  0x08 ; '.'
0000000000007bdc         db  0x90 ; '.'
0000000000007bdd         db  0x01 ; '.'
0000000000007bde         db  0x07 ; '.'
0000000000007bdf         db  0x10 ; '.'
0000000000007be0         dd         0x00000014                                  ; Length of the record
0000000000007be4         dd         0x0000001c                                  ; FDE: parent CIE at 0x7bc8 (FDE encoding = 0x1B)
0000000000007be8         db         0x48, 0xa6, 2 dup (0xff)                    ; begin 0x2230
0000000000007bec         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x225b)
0000000000007bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bf1         align      8
0000000000007bf8         dd         0x00000014                                  ; Length of the record
0000000000007bfc         dd         0x00000000                                  ; CIE ID
0000000000007c00         db         0x01                                        ; Version
0000000000007c01         db         "zR", 0                                     ; Augmentation String
0000000000007c04         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007c05         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007c06         db         0x10                                        ; Return address register
0000000000007c07         db         0x01                                        ; Augmentation data length
0000000000007c08         db         0x1b                                        ; FDE encoding
0000000000007c09         db  0x0c ; '.'
0000000000007c0a         db  0x07 ; '.'
0000000000007c0b         db  0x08 ; '.'
0000000000007c0c         db  0x90 ; '.'
0000000000007c0d         db  0x01 ; '.'
0000000000007c0e         db  0x00 ; '.'
0000000000007c0f         db  0x00 ; '.'
0000000000007c10         dd         0x00000024                                  ; Length of the record
0000000000007c14         dd         0x0000001c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007c18         db         0x58, 0x9b, 2 dup (0xff)                    ; begin 0x1770
0000000000007c1c         db         0xf0, 0x03, 2 dup (0x00)                    ; length 0x3f0 (end at 0x1b60)
0000000000007c20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c21         db  0x0e ; '.'
0000000000007c22         db  0x10 ; '.'
0000000000007c23         db  0x46 ; 'F'
0000000000007c24         db  0x0e ; '.'
0000000000007c25         db  0x18 ; '.'
0000000000007c26         db  0x4a ; 'J'
0000000000007c27         db  0x0f ; '.'
0000000000007c28         db  0x0b ; '.'
0000000000007c29         db  0x77 ; 'w'
0000000000007c2a         db  0x08 ; '.'
0000000000007c2b         db  0x80 ; '.'
0000000000007c2c         db  0x00 ; '.'
0000000000007c2d         db  0x3f ; '?'
0000000000007c2e         db  0x1a ; '.'
0000000000007c2f         db  0x3b ; ';'
0000000000007c30         db  0x2a ; '*'
0000000000007c31         db  0x33 ; '3'
0000000000007c32         db  0x24 ; '$'
0000000000007c33         db  0x22 ; '"'
0000000000007c34         db  0x00 ; '.'
0000000000007c35         db  0x00 ; '.'
0000000000007c36         db  0x00 ; '.'
0000000000007c37         db  0x00 ; '.'
0000000000007c38         dd         0x00000014                                  ; Length of the record
0000000000007c3c         dd         0x00000044                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007c40         db         0x20, 0x9f, 2 dup (0xff)                    ; begin 0x1b60
0000000000007c44         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1b68)
0000000000007c48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c49         align      16
0000000000007c50         dd         0x00000018                                  ; Length of the record
0000000000007c54         dd         0x0000005c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007c58         db         0xe8, 0xa6, 2 dup (0xff)                    ; begin 0x2340
0000000000007c5c         db         0x37, 3 dup (0x00)                          ; length 0x37 (end at 0x2377)
0000000000007c60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c61         db  0x4d ; 'M'
0000000000007c62         db  0x0e ; '.'
0000000000007c63         db  0x10 ; '.'
0000000000007c64         db  0x54 ; 'T'
0000000000007c65         db  0x0e ; '.'
0000000000007c66         db  0x08 ; '.'
0000000000007c67         db  0x4c ; 'L'
0000000000007c68         db  0x0e ; '.'
0000000000007c69         db  0x10 ; '.'
0000000000007c6a         db  0x00 ; '.'
0000000000007c6b         db  0x00 ; '.'
0000000000007c6c         dd         0x00000028                                  ; Length of the record
0000000000007c70         dd         0x00000078                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007c74         db         0x0c, 0xa7, 2 dup (0xff)                    ; begin 0x2380
0000000000007c78         db         0x0a, 0x04, 2 dup (0x00)                    ; length 0x40a (end at 0x278a)
0000000000007c7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c7d         db  0x42 ; 'B'
0000000000007c7e         db  0x0e ; '.'
0000000000007c7f         db  0x10 ; '.'
0000000000007c80         db  0x8d ; '.'
0000000000007c81         db  0x02 ; '.'
0000000000007c82         db  0x42 ; 'B'
0000000000007c83         db  0x0e ; '.'
0000000000007c84         db  0x18 ; '.'
0000000000007c85         db  0x8c ; '.'
0000000000007c86         db  0x03 ; '.'
0000000000007c87         db  0x46 ; 'F'
0000000000007c88         db  0x0e ; '.'
0000000000007c89         db  0x20 ; ' '
0000000000007c8a         db  0x86 ; '.'
0000000000007c8b         db  0x04 ; '.'
0000000000007c8c         db  0x41 ; 'A'
0000000000007c8d         db  0x0e ; '.'
0000000000007c8e         db  0x28 ; '('
0000000000007c8f         db  0x83 ; '.'
0000000000007c90         db  0x05 ; '.'
0000000000007c91         db  0x49 ; 'I'
0000000000007c92         db  0x0e ; '.'
0000000000007c93         db  0xb0 ; '.'
0000000000007c94         db  0x01 ; '.'
0000000000007c95         db  0x00 ; '.'
0000000000007c96         db  0x00 ; '.'
0000000000007c97         db  0x00 ; '.'
0000000000007c98         dd         0x00000054                                  ; Length of the record
0000000000007c9c         dd         0x000000a4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007ca0         db         0xd0, 0x9e, 2 dup (0xff)                    ; begin 0x1b70
0000000000007ca4         db         0xb9, 0x06, 2 dup (0x00)                    ; length 0x6b9 (end at 0x2229)
0000000000007ca8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ca9         db  0x42 ; 'B'
0000000000007caa         db  0x0e ; '.'
0000000000007cab         db  0x10 ; '.'
0000000000007cac         db  0x8f ; '.'
0000000000007cad         db  0x02 ; '.'
0000000000007cae         db  0x42 ; 'B'
0000000000007caf         db  0x0e ; '.'
0000000000007cb0         db  0x18 ; '.'
0000000000007cb1         db  0x8e ; '.'
0000000000007cb2         db  0x03 ; '.'
0000000000007cb3         db  0x45 ; 'E'
0000000000007cb4         db  0x0e ; '.'
0000000000007cb5         db  0x20 ; ' '
0000000000007cb6         db  0x8d ; '.'
0000000000007cb7         db  0x04 ; '.'
0000000000007cb8         db  0x42 ; 'B'
0000000000007cb9         db  0x0e ; '.'
0000000000007cba         db  0x28 ; '('
0000000000007cbb         db  0x8c ; '.'
0000000000007cbc         db  0x05 ; '.'
0000000000007cbd         db  0x44 ; 'D'
0000000000007cbe         db  0x0e ; '.'
0000000000007cbf         db  0x30 ; '0'
0000000000007cc0         db  0x86 ; '.'
0000000000007cc1         db  0x06 ; '.'
0000000000007cc2         db  0x41 ; 'A'
0000000000007cc3         db  0x0e ; '.'
0000000000007cc4         db  0x38 ; '8'
0000000000007cc5         db  0x83 ; '.'
0000000000007cc6         db  0x07 ; '.'
0000000000007cc7         db  0x4f ; 'O'
0000000000007cc8         db  0x0e ; '.'
0000000000007cc9         db  0x70 ; 'p'
0000000000007cca         db  0x03 ; '.'
0000000000007ccb         db  0x3b ; ';'
0000000000007ccc         db  0x01 ; '.'
0000000000007ccd         db  0x0a ; '.'
0000000000007cce         db  0x0e ; '.'
0000000000007ccf         db  0x78 ; 'x'
0000000000007cd0         db  0x50 ; 'P'
0000000000007cd1         db  0x0e ; '.'
0000000000007cd2         db  0x80 ; '.'
0000000000007cd3         db  0x01 ; '.'
0000000000007cd4         db  0x6a ; 'j'
0000000000007cd5         db  0x0b ; '.'
0000000000007cd6         db  0x03 ; '.'
0000000000007cd7         db  0xae ; '.'
0000000000007cd8         db  0x01 ; '.'
0000000000007cd9         db  0x0a ; '.'
0000000000007cda         db  0x0e ; '.'
0000000000007cdb         db  0x38 ; '8'
0000000000007cdc         db  0x43 ; 'C'
0000000000007cdd         db  0x0e ; '.'
0000000000007cde         db  0x30 ; '0'
0000000000007cdf         db  0x41 ; 'A'
0000000000007ce0         db  0x0e ; '.'
0000000000007ce1         db  0x28 ; '('
0000000000007ce2         db  0x42 ; 'B'
0000000000007ce3         db  0x0e ; '.'
0000000000007ce4         db  0x20 ; ' '
0000000000007ce5         db  0x42 ; 'B'
0000000000007ce6         db  0x0e ; '.'
0000000000007ce7         db  0x18 ; '.'
0000000000007ce8         db  0x42 ; 'B'
0000000000007ce9         db  0x0e ; '.'
0000000000007cea         db  0x10 ; '.'
0000000000007ceb         db  0x42 ; 'B'
0000000000007cec         db  0x0e ; '.'
0000000000007ced         db  0x08 ; '.'
0000000000007cee         db  0x41 ; 'A'
0000000000007cef         db  0x0b ; '.'
0000000000007cf0         dd         0x0000004c                                  ; Length of the record
0000000000007cf4         dd         0x000000fc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007cf8         db         0x98, 0xaa, 2 dup (0xff)                    ; begin 0x2790
0000000000007cfc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x280d)
0000000000007d00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d01         db  0x42 ; 'B'
0000000000007d02         db  0x0e ; '.'
0000000000007d03         db  0x10 ; '.'
0000000000007d04         db  0x8c ; '.'
0000000000007d05         db  0x02 ; '.'
0000000000007d06         db  0x41 ; 'A'
0000000000007d07         db  0x0e ; '.'
0000000000007d08         db  0x18 ; '.'
0000000000007d09         db  0x86 ; '.'
0000000000007d0a         db  0x03 ; '.'
0000000000007d0b         db  0x44 ; 'D'
0000000000007d0c         db  0x0e ; '.'
0000000000007d0d         db  0x20 ; ' '
0000000000007d0e         db  0x83 ; '.'
0000000000007d0f         db  0x04 ; '.'
0000000000007d10         db  0x69 ; 'i'
0000000000007d11         db  0x0a ; '.'
0000000000007d12         db  0x0e ; '.'
0000000000007d13         db  0x18 ; '.'
0000000000007d14         db  0x41 ; 'A'
0000000000007d15         db  0x0e ; '.'
0000000000007d16         db  0x10 ; '.'
0000000000007d17         db  0x42 ; 'B'
0000000000007d18         db  0x0e ; '.'
0000000000007d19         db  0x08 ; '.'
0000000000007d1a         db  0x45 ; 'E'
0000000000007d1b         db  0x0b ; '.'
0000000000007d1c         db  0x55 ; 'U'
0000000000007d1d         db  0x0a ; '.'
0000000000007d1e         db  0x0e ; '.'
0000000000007d1f         db  0x18 ; '.'
0000000000007d20         db  0x41 ; 'A'
0000000000007d21         db  0x0e ; '.'
0000000000007d22         db  0x10 ; '.'
0000000000007d23         db  0x42 ; 'B'
0000000000007d24         db  0x0e ; '.'
0000000000007d25         db  0x08 ; '.'
0000000000007d26         db  0x48 ; 'H'
0000000000007d27         db  0x0b ; '.'
0000000000007d28         db  0x41 ; 'A'
0000000000007d29         db  0x0a ; '.'
0000000000007d2a         db  0x0e ; '.'
0000000000007d2b         db  0x18 ; '.'
0000000000007d2c         db  0x46 ; 'F'
0000000000007d2d         db  0x0e ; '.'
0000000000007d2e         db  0x10 ; '.'
0000000000007d2f         db  0x42 ; 'B'
0000000000007d30         db  0x0e ; '.'
0000000000007d31         db  0x08 ; '.'
0000000000007d32         db  0x47 ; 'G'
0000000000007d33         db  0x0b ; '.'
0000000000007d34         db  0x49 ; 'I'
0000000000007d35         db  0x0e ; '.'
0000000000007d36         db  0x18 ; '.'
0000000000007d37         db  0x41 ; 'A'
0000000000007d38         db  0x0e ; '.'
0000000000007d39         db  0x10 ; '.'
0000000000007d3a         db  0x42 ; 'B'
0000000000007d3b         db  0x0e ; '.'
0000000000007d3c         db  0x08 ; '.'
0000000000007d3d         db  0x00 ; '.'
0000000000007d3e         db  0x00 ; '.'
0000000000007d3f         db  0x00 ; '.'
0000000000007d40         dd         0x00000010                                  ; Length of the record
0000000000007d44         dd         0x0000014c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007d48         db         0xc8, 0xaa, 2 dup (0xff)                    ; begin 0x2810
0000000000007d4c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2818)
0000000000007d50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d51         align      4
0000000000007d54         dd         0x00000010                                  ; Length of the record
0000000000007d58         dd         0x00000160                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007d5c         db         0xc4, 0xaa, 2 dup (0xff)                    ; begin 0x2820
0000000000007d60         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2828)
0000000000007d64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d65         align      8
0000000000007d68         dd         0x0000002c                                  ; Length of the record
0000000000007d6c         dd         0x00000174                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007d70         db         0xc0, 0xaa, 2 dup (0xff)                    ; begin 0x2830
0000000000007d74         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x28d4)
0000000000007d78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d79         db  0x41 ; 'A'
0000000000007d7a         db  0x0e ; '.'
0000000000007d7b         db  0x10 ; '.'
0000000000007d7c         db  0x86 ; '.'
0000000000007d7d         db  0x02 ; '.'
0000000000007d7e         db  0x41 ; 'A'
0000000000007d7f         db  0x0e ; '.'
0000000000007d80         db  0x18 ; '.'
0000000000007d81         db  0x83 ; '.'
0000000000007d82         db  0x03 ; '.'
0000000000007d83         db  0x44 ; 'D'
0000000000007d84         db  0x0e ; '.'
0000000000007d85         db  0x20 ; ' '
0000000000007d86         db  0x7a ; 'z'
0000000000007d87         db  0x0a ; '.'
0000000000007d88         db  0x0e ; '.'
0000000000007d89         db  0x18 ; '.'
0000000000007d8a         db  0x41 ; 'A'
0000000000007d8b         db  0x0e ; '.'
0000000000007d8c         db  0x10 ; '.'
0000000000007d8d         db  0x41 ; 'A'
0000000000007d8e         db  0x0e ; '.'
0000000000007d8f         db  0x08 ; '.'
0000000000007d90         db  0x41 ; 'A'
0000000000007d91         db  0x0b ; '.'
0000000000007d92         db  0x00 ; '.'
0000000000007d93         db  0x00 ; '.'
0000000000007d94         db  0x00 ; '.'
0000000000007d95         db  0x00 ; '.'
0000000000007d96         db  0x00 ; '.'
0000000000007d97         db  0x00 ; '.'
0000000000007d98         dd         0x00000010                                  ; Length of the record
0000000000007d9c         dd         0x000001a4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007da0         db         0x40, 0xab, 2 dup (0xff)                    ; begin 0x28e0
0000000000007da4         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x293c)
0000000000007da8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007da9         align      4
0000000000007dac         dd         0x00000028                                  ; Length of the record
0000000000007db0         dd         0x000001b8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007db4         db         0x8c, 0xab, 2 dup (0xff)                    ; begin 0x2940
0000000000007db8         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x2987)
0000000000007dbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007dbd         db  0x41 ; 'A'
0000000000007dbe         db  0x0e ; '.'
0000000000007dbf         db  0x10 ; '.'
0000000000007dc0         db  0x83 ; '.'
0000000000007dc1         db  0x02 ; '.'
0000000000007dc2         db  0x5a ; 'Z'
0000000000007dc3         db  0x0a ; '.'
0000000000007dc4         db  0x0e ; '.'
0000000000007dc5         db  0x08 ; '.'
0000000000007dc6         db  0x45 ; 'E'
0000000000007dc7         db  0x0b ; '.'
0000000000007dc8         db  0x5d ; ']'
0000000000007dc9         db  0x0a ; '.'
0000000000007dca         db  0x0e ; '.'
0000000000007dcb         db  0x08 ; '.'
0000000000007dcc         db  0x43 ; 'C'
0000000000007dcd         db  0x0b ; '.'
0000000000007dce         db  0x46 ; 'F'
0000000000007dcf         db  0x0e ; '.'
0000000000007dd0         db  0x08 ; '.'
0000000000007dd1         db  0x00 ; '.'
0000000000007dd2         db  0x00 ; '.'
0000000000007dd3         db  0x00 ; '.'
0000000000007dd4         db  0x00 ; '.'
0000000000007dd5         db  0x00 ; '.'
0000000000007dd6         db  0x00 ; '.'
0000000000007dd7         db  0x00 ; '.'
0000000000007dd8         dd         0x0000001c                                  ; Length of the record
0000000000007ddc         dd         0x000001e4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007de0         db         0xb0, 0xab, 2 dup (0xff)                    ; begin 0x2990
0000000000007de4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x29a8)
0000000000007de8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007de9         db  0x44 ; 'D'
0000000000007dea         db  0x0e ; '.'
0000000000007deb         db  0x10 ; '.'
0000000000007dec         db  0x4e ; 'N'
0000000000007ded         db  0x0a ; '.'
0000000000007dee         db  0x0e ; '.'
0000000000007def         db  0x08 ; '.'
0000000000007df0         db  0x41 ; 'A'
0000000000007df1         db  0x0b ; '.'
0000000000007df2         db  0x00 ; '.'
0000000000007df3         db  0x00 ; '.'
0000000000007df4         db  0x00 ; '.'
0000000000007df5         db  0x00 ; '.'
0000000000007df6         db  0x00 ; '.'
0000000000007df7         db  0x00 ; '.'
0000000000007df8         dd         0x0000004c                                  ; Length of the record
0000000000007dfc         dd         0x00000204                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007e00         db         0xb0, 0xab, 2 dup (0xff)                    ; begin 0x29b0
0000000000007e04         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0x2aaf)
0000000000007e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e09         db  0x42 ; 'B'
0000000000007e0a         db  0x0e ; '.'
0000000000007e0b         db  0x10 ; '.'
0000000000007e0c         db  0x8f ; '.'
0000000000007e0d         db  0x02 ; '.'
0000000000007e0e         db  0x42 ; 'B'
0000000000007e0f         db  0x0e ; '.'
0000000000007e10         db  0x18 ; '.'
0000000000007e11         db  0x8e ; '.'
0000000000007e12         db  0x03 ; '.'
0000000000007e13         db  0x45 ; 'E'
0000000000007e14         db  0x0e ; '.'
0000000000007e15         db  0x20 ; ' '
0000000000007e16         db  0x8d ; '.'
0000000000007e17         db  0x04 ; '.'
0000000000007e18         db  0x42 ; 'B'
0000000000007e19         db  0x0e ; '.'
0000000000007e1a         db  0x28 ; '('
0000000000007e1b         db  0x8c ; '.'
0000000000007e1c         db  0x05 ; '.'
0000000000007e1d         db  0x44 ; 'D'
0000000000007e1e         db  0x0e ; '.'
0000000000007e1f         db  0x30 ; '0'
0000000000007e20         db  0x86 ; '.'
0000000000007e21         db  0x06 ; '.'
0000000000007e22         db  0x41 ; 'A'
0000000000007e23         db  0x0e ; '.'
0000000000007e24         db  0x38 ; '8'
0000000000007e25         db  0x83 ; '.'
0000000000007e26         db  0x07 ; '.'
0000000000007e27         db  0x47 ; 'G'
0000000000007e28         db  0x0e ; '.'
0000000000007e29         db  0x50 ; 'P'
0000000000007e2a         db  0x02 ; '.'
0000000000007e2b         db  0xc3 ; '.'
0000000000007e2c         db  0x0a ; '.'
0000000000007e2d         db  0x0e ; '.'
0000000000007e2e         db  0x38 ; '8'
0000000000007e2f         db  0x44 ; 'D'
0000000000007e30         db  0x0e ; '.'
0000000000007e31         db  0x30 ; '0'
0000000000007e32         db  0x41 ; 'A'
0000000000007e33         db  0x0e ; '.'
0000000000007e34         db  0x28 ; '('
0000000000007e35         db  0x42 ; 'B'
0000000000007e36         db  0x0e ; '.'
0000000000007e37         db  0x20 ; ' '
0000000000007e38         db  0x42 ; 'B'
0000000000007e39         db  0x0e ; '.'
0000000000007e3a         db  0x18 ; '.'
0000000000007e3b         db  0x42 ; 'B'
0000000000007e3c         db  0x0e ; '.'
0000000000007e3d         db  0x10 ; '.'
0000000000007e3e         db  0x42 ; 'B'
0000000000007e3f         db  0x0e ; '.'
0000000000007e40         db  0x08 ; '.'
0000000000007e41         db  0x49 ; 'I'
0000000000007e42         db  0x0b ; '.'
0000000000007e43         db  0x00 ; '.'
0000000000007e44         db  0x00 ; '.'
0000000000007e45         db  0x00 ; '.'
0000000000007e46         db  0x00 ; '.'
0000000000007e47         db  0x00 ; '.'
0000000000007e48         dd         0x0000001c                                  ; Length of the record
0000000000007e4c         dd         0x00000254                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007e50         db         0x60, 0xac, 2 dup (0xff)                    ; begin 0x2ab0
0000000000007e54         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2b4f)
0000000000007e58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e59         db  0x44 ; 'D'
0000000000007e5a         db  0x0e ; '.'
0000000000007e5b         db  0x10 ; '.'
0000000000007e5c         db  0x83 ; '.'
0000000000007e5d         db  0x02 ; '.'
0000000000007e5e         db  0x02 ; '.'
0000000000007e5f         db  0x78 ; 'x'
0000000000007e60         db  0x0a ; '.'
0000000000007e61         db  0x0e ; '.'
0000000000007e62         db  0x08 ; '.'
0000000000007e63         db  0x41 ; 'A'
0000000000007e64         db  0x0b ; '.'
0000000000007e65         db  0x00 ; '.'
0000000000007e66         db  0x00 ; '.'
0000000000007e67         db  0x00 ; '.'
0000000000007e68         dd         0x00000040                                  ; Length of the record
0000000000007e6c         dd         0x00000274                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007e70         db         0xe0, 0xac, 2 dup (0xff)                    ; begin 0x2b50
0000000000007e74         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2c37)
0000000000007e78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e79         db  0x41 ; 'A'
0000000000007e7a         db  0x0e ; '.'
0000000000007e7b         db  0x10 ; '.'
0000000000007e7c         db  0x86 ; '.'
0000000000007e7d         db  0x02 ; '.'
0000000000007e7e         db  0x41 ; 'A'
0000000000007e7f         db  0x0e ; '.'
0000000000007e80         db  0x18 ; '.'
0000000000007e81         db  0x83 ; '.'
0000000000007e82         db  0x03 ; '.'
0000000000007e83         db  0x49 ; 'I'
0000000000007e84         db  0x0e ; '.'
0000000000007e85         db  0x20 ; ' '
0000000000007e86         db  0x6e ; 'n'
0000000000007e87         db  0x0a ; '.'
0000000000007e88         db  0x0e ; '.'
0000000000007e89         db  0x18 ; '.'
0000000000007e8a         db  0x41 ; 'A'
0000000000007e8b         db  0x0e ; '.'
0000000000007e8c         db  0x10 ; '.'
0000000000007e8d         db  0x41 ; 'A'
0000000000007e8e         db  0x0e ; '.'
0000000000007e8f         db  0x08 ; '.'
0000000000007e90         db  0x45 ; 'E'
0000000000007e91         db  0x0b ; '.'
0000000000007e92         db  0x02 ; '.'
0000000000007e93         db  0x4a ; 'J'
0000000000007e94         db  0x0a ; '.'
0000000000007e95         db  0x0e ; '.'
0000000000007e96         db  0x18 ; '.'
0000000000007e97         db  0x41 ; 'A'
0000000000007e98         db  0x0e ; '.'
0000000000007e99         db  0x10 ; '.'
0000000000007e9a         db  0x41 ; 'A'
0000000000007e9b         db  0x0e ; '.'
0000000000007e9c         db  0x08 ; '.'
0000000000007e9d         db  0x44 ; 'D'
0000000000007e9e         db  0x0b ; '.'
0000000000007e9f         db  0x02 ; '.'
0000000000007ea0         db  0x54 ; 'T'
0000000000007ea1         db  0x0e ; '.'
0000000000007ea2         db  0x18 ; '.'
0000000000007ea3         db  0x41 ; 'A'
0000000000007ea4         db  0x0e ; '.'
0000000000007ea5         db  0x10 ; '.'
0000000000007ea6         db  0x41 ; 'A'
0000000000007ea7         db  0x0e ; '.'
0000000000007ea8         db  0x08 ; '.'
0000000000007ea9         db  0x00 ; '.'
0000000000007eaa         db  0x00 ; '.'
0000000000007eab         db  0x00 ; '.'
0000000000007eac         dd         0x00000074                                  ; Length of the record
0000000000007eb0         dd         0x000002b8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007eb4         db         0x8c, 0xad, 2 dup (0xff)                    ; begin 0x2c40
0000000000007eb8         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3e74)
0000000000007ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ebd         db  0x42 ; 'B'
0000000000007ebe         db  0x0e ; '.'
0000000000007ebf         db  0x10 ; '.'
0000000000007ec0         db  0x8f ; '.'
0000000000007ec1         db  0x02 ; '.'
0000000000007ec2         db  0x42 ; 'B'
0000000000007ec3         db  0x0e ; '.'
0000000000007ec4         db  0x18 ; '.'
0000000000007ec5         db  0x8e ; '.'
0000000000007ec6         db  0x03 ; '.'
0000000000007ec7         db  0x45 ; 'E'
0000000000007ec8         db  0x0e ; '.'
0000000000007ec9         db  0x20 ; ' '
0000000000007eca         db  0x8d ; '.'
0000000000007ecb         db  0x04 ; '.'
0000000000007ecc         db  0x42 ; 'B'
0000000000007ecd         db  0x0e ; '.'
0000000000007ece         db  0x28 ; '('
0000000000007ecf         db  0x8c ; '.'
0000000000007ed0         db  0x05 ; '.'
0000000000007ed1         db  0x44 ; 'D'
0000000000007ed2         db  0x0e ; '.'
0000000000007ed3         db  0x30 ; '0'
0000000000007ed4         db  0x86 ; '.'
0000000000007ed5         db  0x06 ; '.'
0000000000007ed6         db  0x41 ; 'A'
0000000000007ed7         db  0x0e ; '.'
0000000000007ed8         db  0x38 ; '8'
0000000000007ed9         db  0x83 ; '.'
0000000000007eda         db  0x07 ; '.'
0000000000007edb         db  0x53 ; 'S'
0000000000007edc         db  0x0e ; '.'
0000000000007edd         db  0xf0 ; '.'
0000000000007ede         db  0x01 ; '.'
0000000000007edf         db  0x03 ; '.'
0000000000007ee0         db  0x81 ; '.'
0000000000007ee1         db  0x0b ; '.'
0000000000007ee2         db  0x0e ; '.'
0000000000007ee3         db  0xf8 ; '.'
0000000000007ee4         db  0x01 ; '.'
0000000000007ee5         db  0x4a ; 'J'
0000000000007ee6         db  0x0e ; '.'
0000000000007ee7         db  0x80 ; '.'
0000000000007ee8         db  0x02 ; '.'
0000000000007ee9         db  0x44 ; 'D'
0000000000007eea         db  0x0e ; '.'
0000000000007eeb         db  0x88 ; '.'
0000000000007eec         db  0x02 ; '.'
0000000000007eed         db  0x45 ; 'E'
0000000000007eee         db  0x0e ; '.'
0000000000007eef         db  0x90 ; '.'
0000000000007ef0         db  0x02 ; '.'
0000000000007ef1         db  0x5f ; '_'
0000000000007ef2         db  0x0e ; '.'
0000000000007ef3         db  0xf0 ; '.'
0000000000007ef4         db  0x01 ; '.'
0000000000007ef5         db  0x64 ; 'd'
0000000000007ef6         db  0x0a ; '.'
0000000000007ef7         db  0x0e ; '.'
0000000000007ef8         db  0x38 ; '8'
0000000000007ef9         db  0x41 ; 'A'
0000000000007efa         db  0x0e ; '.'
0000000000007efb         db  0x30 ; '0'
0000000000007efc         db  0x41 ; 'A'
0000000000007efd         db  0x0e ; '.'
0000000000007efe         db  0x28 ; '('
0000000000007eff         db  0x42 ; 'B'
0000000000007f00         db  0x0e ; '.'
0000000000007f01         db  0x20 ; ' '
0000000000007f02         db  0x42 ; 'B'
0000000000007f03         db  0x0e ; '.'
0000000000007f04         db  0x18 ; '.'
0000000000007f05         db  0x42 ; 'B'
0000000000007f06         db  0x0e ; '.'
0000000000007f07         db  0x10 ; '.'
0000000000007f08         db  0x42 ; 'B'
0000000000007f09         db  0x0e ; '.'
0000000000007f0a         db  0x08 ; '.'
0000000000007f0b         db  0x44 ; 'D'
0000000000007f0c         db  0x0b ; '.'
0000000000007f0d         db  0x03 ; '.'
0000000000007f0e         db  0x99 ; '.'
0000000000007f0f         db  0x05 ; '.'
0000000000007f10         db  0x0e ; '.'
0000000000007f11         db  0xf8 ; '.'
0000000000007f12         db  0x01 ; '.'
0000000000007f13         db  0x4d ; 'M'
0000000000007f14         db  0x0e ; '.'
0000000000007f15         db  0x80 ; '.'
0000000000007f16         db  0x02 ; '.'
0000000000007f17         db  0x44 ; 'D'
0000000000007f18         db  0x0e ; '.'
0000000000007f19         db  0x88 ; '.'
0000000000007f1a         db  0x02 ; '.'
0000000000007f1b         db  0x47 ; 'G'
0000000000007f1c         db  0x0e ; '.'
0000000000007f1d         db  0x90 ; '.'
0000000000007f1e         db  0x02 ; '.'
0000000000007f1f         db  0x5b ; '['
0000000000007f20         db  0x0e ; '.'
0000000000007f21         db  0xf0 ; '.'
0000000000007f22         db  0x01 ; '.'
0000000000007f23         db  0x00 ; '.'
0000000000007f24         dd         0x00000068                                  ; Length of the record
0000000000007f28         dd         0x00000330                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007f2c         db         0x54, 0xbf, 2 dup (0xff)                    ; begin 0x3e80
0000000000007f30         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x402b)
0000000000007f34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f35         db  0x42 ; 'B'
0000000000007f36         db  0x0e ; '.'
0000000000007f37         db  0x10 ; '.'
0000000000007f38         db  0x8f ; '.'
0000000000007f39         db  0x02 ; '.'
0000000000007f3a         db  0x42 ; 'B'
0000000000007f3b         db  0x0e ; '.'
0000000000007f3c         db  0x18 ; '.'
0000000000007f3d         db  0x8e ; '.'
0000000000007f3e         db  0x03 ; '.'
0000000000007f3f         db  0x45 ; 'E'
0000000000007f40         db  0x0e ; '.'
0000000000007f41         db  0x20 ; ' '
0000000000007f42         db  0x8d ; '.'
0000000000007f43         db  0x04 ; '.'
0000000000007f44         db  0x42 ; 'B'
0000000000007f45         db  0x0e ; '.'
0000000000007f46         db  0x28 ; '('
0000000000007f47         db  0x8c ; '.'
0000000000007f48         db  0x05 ; '.'
0000000000007f49         db  0x44 ; 'D'
0000000000007f4a         db  0x0e ; '.'
0000000000007f4b         db  0x30 ; '0'
0000000000007f4c         db  0x86 ; '.'
0000000000007f4d         db  0x06 ; '.'
0000000000007f4e         db  0x41 ; 'A'
0000000000007f4f         db  0x0e ; '.'
0000000000007f50         db  0x38 ; '8'
0000000000007f51         db  0x83 ; '.'
0000000000007f52         db  0x07 ; '.'
0000000000007f53         db  0x47 ; 'G'
0000000000007f54         db  0x0e ; '.'
0000000000007f55         db  0x60 ; '`'
0000000000007f56         db  0x02 ; '.'
0000000000007f57         db  0x99 ; '.'
0000000000007f58         db  0x0e ; '.'
0000000000007f59         db  0x68 ; 'h'
0000000000007f5a         db  0x5f ; '_'
0000000000007f5b         db  0x0e ; '.'
0000000000007f5c         db  0x70 ; 'p'
0000000000007f5d         db  0x46 ; 'F'
0000000000007f5e         db  0x0e ; '.'
0000000000007f5f         db  0x78 ; 'x'
0000000000007f60         db  0x42 ; 'B'
0000000000007f61         db  0x0e ; '.'
0000000000007f62         db  0x80 ; '.'
0000000000007f63         db  0x01 ; '.'
0000000000007f64         db  0x59 ; 'Y'
0000000000007f65         db  0x0e ; '.'
0000000000007f66         db  0x60 ; '`'
0000000000007f67         db  0x02 ; '.'
0000000000007f68         db  0x40 ; '@'
0000000000007f69         db  0x0e ; '.'
0000000000007f6a         db  0x68 ; 'h'
0000000000007f6b         db  0x4b ; 'K'
0000000000007f6c         db  0x0e ; '.'
0000000000007f6d         db  0x70 ; 'p'
0000000000007f6e         db  0x43 ; 'C'
0000000000007f6f         db  0x0e ; '.'
0000000000007f70         db  0x78 ; 'x'
0000000000007f71         db  0x45 ; 'E'
0000000000007f72         db  0x0e ; '.'
0000000000007f73         db  0x80 ; '.'
0000000000007f74         db  0x01 ; '.'
0000000000007f75         db  0x5e ; '^'
0000000000007f76         db  0x0e ; '.'
0000000000007f77         db  0x60 ; '`'
0000000000007f78         db  0x4c ; 'L'
0000000000007f79         db  0x0a ; '.'
0000000000007f7a         db  0x0e ; '.'
0000000000007f7b         db  0x38 ; '8'
0000000000007f7c         db  0x44 ; 'D'
0000000000007f7d         db  0x0e ; '.'
0000000000007f7e         db  0x30 ; '0'
0000000000007f7f         db  0x41 ; 'A'
0000000000007f80         db  0x0e ; '.'
0000000000007f81         db  0x28 ; '('
0000000000007f82         db  0x42 ; 'B'
0000000000007f83         db  0x0e ; '.'
0000000000007f84         db  0x20 ; ' '
0000000000007f85         db  0x42 ; 'B'
0000000000007f86         db  0x0e ; '.'
0000000000007f87         db  0x18 ; '.'
0000000000007f88         db  0x42 ; 'B'
0000000000007f89         db  0x0e ; '.'
0000000000007f8a         db  0x10 ; '.'
0000000000007f8b         db  0x42 ; 'B'
0000000000007f8c         db  0x0e ; '.'
0000000000007f8d         db  0x08 ; '.'
0000000000007f8e         db  0x46 ; 'F'
0000000000007f8f         db  0x0b ; '.'
0000000000007f90         dd         0x00000028                                  ; Length of the record
0000000000007f94         dd         0x0000039c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007f98         db         0x98, 0xc0, 2 dup (0xff)                    ; begin 0x4030
0000000000007f9c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4066)
0000000000007fa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fa1         db  0x42 ; 'B'
0000000000007fa2         db  0x0e ; '.'
0000000000007fa3         db  0x10 ; '.'
0000000000007fa4         db  0x8c ; '.'
0000000000007fa5         db  0x02 ; '.'
0000000000007fa6         db  0x41 ; 'A'
0000000000007fa7         db  0x0e ; '.'
0000000000007fa8         db  0x18 ; '.'
0000000000007fa9         db  0x86 ; '.'
0000000000007faa         db  0x03 ; '.'
0000000000007fab         db  0x41 ; 'A'
0000000000007fac         db  0x0e ; '.'
0000000000007fad         db  0x20 ; ' '
0000000000007fae         db  0x83 ; '.'
0000000000007faf         db  0x04 ; '.'
0000000000007fb0         db  0x6e ; 'n'
0000000000007fb1         db  0x0e ; '.'
0000000000007fb2         db  0x18 ; '.'
0000000000007fb3         db  0x41 ; 'A'
0000000000007fb4         db  0x0e ; '.'
0000000000007fb5         db  0x10 ; '.'
0000000000007fb6         db  0x42 ; 'B'
0000000000007fb7         db  0x0e ; '.'
0000000000007fb8         db  0x08 ; '.'
0000000000007fb9         db  0x00 ; '.'
0000000000007fba         db  0x00 ; '.'
0000000000007fbb         db  0x00 ; '.'
0000000000007fbc         dd         0x00000010                                  ; Length of the record
0000000000007fc0         dd         0x000003c8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007fc4         db         0xac, 0xc0, 2 dup (0xff)                    ; begin 0x4070
0000000000007fc8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4081)
0000000000007fcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fcd         align      16
0000000000007fd0         dd         0x00000010                                  ; Length of the record
0000000000007fd4         dd         0x000003dc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007fd8         db         0xb8, 0xc0, 2 dup (0xff)                    ; begin 0x4090
0000000000007fdc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x40a1)
0000000000007fe0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fe1         align      4
0000000000007fe4         dd         0x00000010                                  ; Length of the record
0000000000007fe8         dd         0x000003f0                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000007fec         db         0xc4, 0xc0, 2 dup (0xff)                    ; begin 0x40b0
0000000000007ff0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x40e5)
0000000000007ff4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ff5         align      8
0000000000007ff8         dd         0x00000010                                  ; Length of the record
0000000000007ffc         dd         0x00000404                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008000         db         0xf0, 0xc0, 2 dup (0xff)                    ; begin 0x40f0
0000000000008004         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4105)
0000000000008008         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008009         align      4
000000000000800c         dd         0x00000010                                  ; Length of the record
0000000000008010         dd         0x00000418                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008014         db         0xfc, 0xc0, 2 dup (0xff)                    ; begin 0x4110
0000000000008018         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4140)
000000000000801c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000801d         db  0x6b ; 'k'
000000000000801e         db  0x0e ; '.'
000000000000801f         db  0x10 ; '.'
0000000000008020         dd         0x00000050                                  ; Length of the record
0000000000008024         dd         0x0000042c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008028         db         0x18, 0xc1, 2 dup (0xff)                    ; begin 0x4140
000000000000802c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x41b4)
0000000000008030         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008031         db  0x42 ; 'B'
0000000000008032         db  0x0e ; '.'
0000000000008033         db  0x10 ; '.'
0000000000008034         db  0x8f ; '.'
0000000000008035         db  0x02 ; '.'
0000000000008036         db  0x42 ; 'B'
0000000000008037         db  0x0e ; '.'
0000000000008038         db  0x18 ; '.'
0000000000008039         db  0x8e ; '.'
000000000000803a         db  0x03 ; '.'
000000000000803b         db  0x49 ; 'I'
000000000000803c         db  0x0e ; '.'
000000000000803d         db  0x20 ; ' '
000000000000803e         db  0x8d ; '.'
000000000000803f         db  0x04 ; '.'
0000000000008040         db  0x42 ; 'B'
0000000000008041         db  0x0e ; '.'
0000000000008042         db  0x28 ; '('
0000000000008043         db  0x8c ; '.'
0000000000008044         db  0x05 ; '.'
0000000000008045         db  0x44 ; 'D'
0000000000008046         db  0x0e ; '.'
0000000000008047         db  0x30 ; '0'
0000000000008048         db  0x86 ; '.'
0000000000008049         db  0x06 ; '.'
000000000000804a         db  0x41 ; 'A'
000000000000804b         db  0x0e ; '.'
000000000000804c         db  0x38 ; '8'
000000000000804d         db  0x83 ; '.'
000000000000804e         db  0x07 ; '.'
000000000000804f         db  0x4d ; 'M'
0000000000008050         db  0x0e ; '.'
0000000000008051         db  0x50 ; 'P'
0000000000008052         db  0x5f ; '_'
0000000000008053         db  0x0e ; '.'
0000000000008054         db  0x58 ; 'X'
0000000000008055         db  0x47 ; 'G'
0000000000008056         db  0x0e ; '.'
0000000000008057         db  0x60 ; '`'
0000000000008058         db  0x46 ; 'F'
0000000000008059         db  0x0e ; '.'
000000000000805a         db  0x68 ; 'h'
000000000000805b         db  0x44 ; 'D'
000000000000805c         db  0x0e ; '.'
000000000000805d         db  0x70 ; 'p'
000000000000805e         db  0x58 ; 'X'
000000000000805f         db  0x0e ; '.'
0000000000008060         db  0x38 ; '8'
0000000000008061         db  0x41 ; 'A'
0000000000008062         db  0x0e ; '.'
0000000000008063         db  0x30 ; '0'
0000000000008064         db  0x41 ; 'A'
0000000000008065         db  0x0e ; '.'
0000000000008066         db  0x28 ; '('
0000000000008067         db  0x42 ; 'B'
0000000000008068         db  0x0e ; '.'
0000000000008069         db  0x20 ; ' '
000000000000806a         db  0x42 ; 'B'
000000000000806b         db  0x0e ; '.'
000000000000806c         db  0x18 ; '.'
000000000000806d         db  0x42 ; 'B'
000000000000806e         db  0x0e ; '.'
000000000000806f         db  0x10 ; '.'
0000000000008070         db  0x42 ; 'B'
0000000000008071         db  0x0e ; '.'
0000000000008072         db  0x08 ; '.'
0000000000008073         db  0x00 ; '.'
0000000000008074         dd         0x00000068                                  ; Length of the record
0000000000008078         dd         0x00000480                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000807c         db         0x44, 0xc1, 2 dup (0xff)                    ; begin 0x41c0
0000000000008080         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x42a3)
0000000000008084         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008085         db  0x42 ; 'B'
0000000000008086         db  0x0e ; '.'
0000000000008087         db  0x10 ; '.'
0000000000008088         db  0x8f ; '.'
0000000000008089         db  0x02 ; '.'
000000000000808a         db  0x42 ; 'B'
000000000000808b         db  0x0e ; '.'
000000000000808c         db  0x18 ; '.'
000000000000808d         db  0x8e ; '.'
000000000000808e         db  0x03 ; '.'
000000000000808f         db  0x49 ; 'I'
0000000000008090         db  0x0e ; '.'
0000000000008091         db  0x20 ; ' '
0000000000008092         db  0x8d ; '.'
0000000000008093         db  0x04 ; '.'
0000000000008094         db  0x42 ; 'B'
0000000000008095         db  0x0e ; '.'
0000000000008096         db  0x28 ; '('
0000000000008097         db  0x8c ; '.'
0000000000008098         db  0x05 ; '.'
0000000000008099         db  0x44 ; 'D'
000000000000809a         db  0x0e ; '.'
000000000000809b         db  0x30 ; '0'
000000000000809c         db  0x86 ; '.'
000000000000809d         db  0x06 ; '.'
000000000000809e         db  0x41 ; 'A'
000000000000809f         db  0x0e ; '.'
00000000000080a0         db  0x38 ; '8'
00000000000080a1         db  0x83 ; '.'
00000000000080a2         db  0x07 ; '.'
00000000000080a3         db  0x4d ; 'M'
00000000000080a4         db  0x0e ; '.'
00000000000080a5         db  0x70 ; 'p'
00000000000080a6         db  0x65 ; 'e'
00000000000080a7         db  0x0e ; '.'
00000000000080a8         db  0x78 ; 'x'
00000000000080a9         db  0x4d ; 'M'
00000000000080aa         db  0x0e ; '.'
00000000000080ab         db  0x80 ; '.'
00000000000080ac         db  0x01 ; '.'
00000000000080ad         db  0x46 ; 'F'
00000000000080ae         db  0x0e ; '.'
00000000000080af         db  0x88 ; '.'
00000000000080b0         db  0x01 ; '.'
00000000000080b1         db  0x42 ; 'B'
00000000000080b2         db  0x0e ; '.'
00000000000080b3         db  0x90 ; '.'
00000000000080b4         db  0x01 ; '.'
00000000000080b5         db  0x5e ; '^'
00000000000080b6         db  0x0e ; '.'
00000000000080b7         db  0x70 ; 'p'
00000000000080b8         db  0x56 ; 'V'
00000000000080b9         db  0x0e ; '.'
00000000000080ba         db  0x78 ; 'x'
00000000000080bb         db  0x43 ; 'C'
00000000000080bc         db  0x0e ; '.'
00000000000080bd         db  0x80 ; '.'
00000000000080be         db  0x01 ; '.'
00000000000080bf         db  0x43 ; 'C'
00000000000080c0         db  0x0e ; '.'
00000000000080c1         db  0x88 ; '.'
00000000000080c2         db  0x01 ; '.'
00000000000080c3         db  0x56 ; 'V'
00000000000080c4         db  0x0e ; '.'
00000000000080c5         db  0x90 ; '.'
00000000000080c6         db  0x01 ; '.'
00000000000080c7         db  0x52 ; 'R'
00000000000080c8         db  0x0e ; '.'
00000000000080c9         db  0x70 ; 'p'
00000000000080ca         db  0x5b ; '['
00000000000080cb         db  0x0e ; '.'
00000000000080cc         db  0x38 ; '8'
00000000000080cd         db  0x41 ; 'A'
00000000000080ce         db  0x0e ; '.'
00000000000080cf         db  0x30 ; '0'
00000000000080d0         db  0x41 ; 'A'
00000000000080d1         db  0x0e ; '.'
00000000000080d2         db  0x28 ; '('
00000000000080d3         db  0x42 ; 'B'
00000000000080d4         db  0x0e ; '.'
00000000000080d5         db  0x20 ; ' '
00000000000080d6         db  0x42 ; 'B'
00000000000080d7         db  0x0e ; '.'
00000000000080d8         db  0x18 ; '.'
00000000000080d9         db  0x42 ; 'B'
00000000000080da         db  0x0e ; '.'
00000000000080db         db  0x10 ; '.'
00000000000080dc         db  0x42 ; 'B'
00000000000080dd         db  0x0e ; '.'
00000000000080de         db  0x08 ; '.'
00000000000080df         db  0x00 ; '.'
00000000000080e0         dd         0x00000010                                  ; Length of the record
00000000000080e4         dd         0x000004ec                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000080e8         db         0xc8, 0xc1, 2 dup (0xff)                    ; begin 0x42b0
00000000000080ec         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x42ba)
00000000000080f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080f1         align      4
00000000000080f4         dd         0x00000028                                  ; Length of the record
00000000000080f8         dd         0x00000500                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000080fc         db         0xc4, 0xc1, 2 dup (0xff)                    ; begin 0x42c0
0000000000008100         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4353)
0000000000008104         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008105         db  0x48 ; 'H'
0000000000008106         db  0x0e ; '.'
0000000000008107         db  0x10 ; '.'
0000000000008108         db  0x8c ; '.'
0000000000008109         db  0x02 ; '.'
000000000000810a         db  0x48 ; 'H'
000000000000810b         db  0x0e ; '.'
000000000000810c         db  0x18 ; '.'
000000000000810d         db  0x86 ; '.'
000000000000810e         db  0x03 ; '.'
000000000000810f         db  0x41 ; 'A'
0000000000008110         db  0x0e ; '.'
0000000000008111         db  0x20 ; ' '
0000000000008112         db  0x83 ; '.'
0000000000008113         db  0x04 ; '.'
0000000000008114         db  0x02 ; '.'
0000000000008115         db  0x74 ; 't'
0000000000008116         db  0x0e ; '.'
0000000000008117         db  0x18 ; '.'
0000000000008118         db  0x4b ; 'K'
0000000000008119         db  0x0e ; '.'
000000000000811a         db  0x10 ; '.'
000000000000811b         db  0x42 ; 'B'
000000000000811c         db  0x0e ; '.'
000000000000811d         db  0x08 ; '.'
000000000000811e         db  0x00 ; '.'
000000000000811f         db  0x00 ; '.'
0000000000008120         dd         0x00000010                                  ; Length of the record
0000000000008124         dd         0x0000052c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008128         db         0x38, 0xc2, 2 dup (0xff)                    ; begin 0x4360
000000000000812c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4373)
0000000000008130         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008131         align      4
0000000000008134         dd         0x00000010                                  ; Length of the record
0000000000008138         dd         0x00000540                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000813c         db         0x44, 0xc2, 2 dup (0xff)                    ; begin 0x4380
0000000000008140         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x438c)
0000000000008144         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008145         align      8
0000000000008148         dd         0x00000010                                  ; Length of the record
000000000000814c         dd         0x00000554                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008150         db         0x40, 0xc2, 2 dup (0xff)                    ; begin 0x4390
0000000000008154         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x43a8)
0000000000008158         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008159         align      4
000000000000815c         dd         0x00000010                                  ; Length of the record
0000000000008160         dd         0x00000568                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008164         db         0x4c, 0xc2, 2 dup (0xff)                    ; begin 0x43b0
0000000000008168         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x43c4)
000000000000816c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000816d         align      16
0000000000008170         dd         0x00000018                                  ; Length of the record
0000000000008174         dd         0x0000057c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008178         db         0x58, 0xc2, 2 dup (0xff)                    ; begin 0x43d0
000000000000817c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x445e)
0000000000008180         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008181         db  0x44 ; 'D'
0000000000008182         db  0x0e ; '.'
0000000000008183         db  0x50 ; 'P'
0000000000008184         db  0x02 ; '.'
0000000000008185         db  0x7f ; '.'
0000000000008186         db  0x0a ; '.'
0000000000008187         db  0x0e ; '.'
0000000000008188         db  0x08 ; '.'
0000000000008189         db  0x41 ; 'A'
000000000000818a         db  0x0b ; '.'
000000000000818b         db  0x00 ; '.'
000000000000818c         dd         0x00000018                                  ; Length of the record
0000000000008190         dd         0x00000598                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008194         db         0xcc, 0xc2, 2 dup (0xff)                    ; begin 0x4460
0000000000008198         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x44ea)
000000000000819c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000819d         db  0x44 ; 'D'
000000000000819e         db  0x0e ; '.'
000000000000819f         db  0x50 ; 'P'
00000000000081a0         db  0x02 ; '.'
00000000000081a1         db  0x7b ; '{'
00000000000081a2         db  0x0a ; '.'
00000000000081a3         db  0x0e ; '.'
00000000000081a4         db  0x08 ; '.'
00000000000081a5         db  0x41 ; 'A'
00000000000081a6         db  0x0b ; '.'
00000000000081a7         db  0x00 ; '.'
00000000000081a8         dd         0x00000010                                  ; Length of the record
00000000000081ac         dd         0x000005b4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000081b0         db         0x40, 0xc3, 2 dup (0xff)                    ; begin 0x44f0
00000000000081b4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x44fc)
00000000000081b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081b9         align      4
00000000000081bc         dd         0x00000010                                  ; Length of the record
00000000000081c0         dd         0x000005c8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000081c4         db         0x3c, 0xc3, 2 dup (0xff)                    ; begin 0x4500
00000000000081c8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x450f)
00000000000081cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081cd         align      16
00000000000081d0         dd         0x00000018                                  ; Length of the record
00000000000081d4         dd         0x000005dc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000081d8         db         0x38, 0xc3, 2 dup (0xff)                    ; begin 0x4510
00000000000081dc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x45a8)
00000000000081e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081e1         db  0x44 ; 'D'
00000000000081e2         db  0x0e ; '.'
00000000000081e3         db  0x50 ; 'P'
00000000000081e4         db  0x02 ; '.'
00000000000081e5         db  0x8e ; '.'
00000000000081e6         db  0x0a ; '.'
00000000000081e7         db  0x0e ; '.'
00000000000081e8         db  0x08 ; '.'
00000000000081e9         db  0x41 ; 'A'
00000000000081ea         db  0x0b ; '.'
00000000000081eb         db  0x00 ; '.'
00000000000081ec         dd         0x00000010                                  ; Length of the record
00000000000081f0         dd         0x000005f8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000081f4         db         0xbc, 0xc3, 2 dup (0xff)                    ; begin 0x45b0
00000000000081f8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x45c0)
00000000000081fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081fd         align      512
0000000000008200         dd         0x00000010                                  ; Length of the record
0000000000008204         dd         0x0000060c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008208         db         0xb8, 0xc3, 2 dup (0xff)                    ; begin 0x45c0
000000000000820c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x45d1)
0000000000008210         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008211         align      4
0000000000008214         dd         0x00000010                                  ; Length of the record
0000000000008218         dd         0x00000620                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000821c         db         0xc4, 0xc3, 2 dup (0xff)                    ; begin 0x45e0
0000000000008220         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x45ea)
0000000000008224         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008225         align      8
0000000000008228         dd         0x00000018                                  ; Length of the record
000000000000822c         dd         0x00000634                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008230         db         0xc0, 0xc3, 2 dup (0xff)                    ; begin 0x45f0
0000000000008234         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x467e)
0000000000008238         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008239         db  0x44 ; 'D'
000000000000823a         db  0x0e ; '.'
000000000000823b         db  0x50 ; 'P'
000000000000823c         db  0x02 ; '.'
000000000000823d         db  0x7f ; '.'
000000000000823e         db  0x0a ; '.'
000000000000823f         db  0x0e ; '.'
0000000000008240         db  0x08 ; '.'
0000000000008241         db  0x41 ; 'A'
0000000000008242         db  0x0b ; '.'
0000000000008243         db  0x00 ; '.'
0000000000008244         dd         0x00000018                                  ; Length of the record
0000000000008248         dd         0x00000650                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000824c         db         0x34, 0xc4, 2 dup (0xff)                    ; begin 0x4680
0000000000008250         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4711)
0000000000008254         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008255         db  0x44 ; 'D'
0000000000008256         db  0x0e ; '.'
0000000000008257         db  0x50 ; 'P'
0000000000008258         db  0x02 ; '.'
0000000000008259         db  0x82 ; '.'
000000000000825a         db  0x0a ; '.'
000000000000825b         db  0x0e ; '.'
000000000000825c         db  0x08 ; '.'
000000000000825d         db  0x41 ; 'A'
000000000000825e         db  0x0b ; '.'
000000000000825f         db  0x00 ; '.'
0000000000008260         dd         0x00000010                                  ; Length of the record
0000000000008264         dd         0x0000066c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008268         db         0xb8, 0xc4, 2 dup (0xff)                    ; begin 0x4720
000000000000826c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x472c)
0000000000008270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008271         align      4
0000000000008274         dd         0x00000010                                  ; Length of the record
0000000000008278         dd         0x00000680                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000827c         db         0xb4, 0xc4, 2 dup (0xff)                    ; begin 0x4730
0000000000008280         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4747)
0000000000008284         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008285         align      8
0000000000008288         dd         0x00000010                                  ; Length of the record
000000000000828c         dd         0x00000694                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008290         db         0xc0, 0xc4, 2 dup (0xff)                    ; begin 0x4750
0000000000008294         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4763)
0000000000008298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008299         align      4
000000000000829c         dd         0x00000010                                  ; Length of the record
00000000000082a0         dd         0x000006a8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000082a4         db         0xcc, 0xc4, 2 dup (0xff)                    ; begin 0x4770
00000000000082a8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x477c)
00000000000082ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082ad         align      16
00000000000082b0         dd         0x00000010                                  ; Length of the record
00000000000082b4         dd         0x000006bc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000082b8         db         0xc8, 0xc4, 2 dup (0xff)                    ; begin 0x4780
00000000000082bc         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4794)
00000000000082c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082c1         align      4
00000000000082c4         dd         0x00000010                                  ; Length of the record
00000000000082c8         dd         0x000006d0                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000082cc         db         0xd4, 0xc4, 2 dup (0xff)                    ; begin 0x47a0
00000000000082d0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x47b3)
00000000000082d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082d5         align      8
00000000000082d8         dd         0x00000014                                  ; Length of the record
00000000000082dc         dd         0x000006e4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000082e0         db         0xe0, 0xc4, 2 dup (0xff)                    ; begin 0x47c0
00000000000082e4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x47d8)
00000000000082e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e9         align      16
00000000000082f0         dd         0x00000020                                  ; Length of the record
00000000000082f4         dd         0x000006fc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000082f8         db         0xe8, 0xc4, 2 dup (0xff)                    ; begin 0x47e0
00000000000082fc         db         0x7c, 3 dup (0x00)                          ; length 0x7c (end at 0x485c)
0000000000008300         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008301         db  0x41 ; 'A'
0000000000008302         db  0x0e ; '.'
0000000000008303         db  0x10 ; '.'
0000000000008304         db  0x83 ; '.'
0000000000008305         db  0x02 ; '.'
0000000000008306         db  0x4f ; 'O'
0000000000008307         db  0x0e ; '.'
0000000000008308         db  0xb0 ; '.'
0000000000008309         db  0x01 ; '.'
000000000000830a         db  0x02 ; '.'
000000000000830b         db  0x65 ; 'e'
000000000000830c         db  0x0a ; '.'
000000000000830d         db  0x0e ; '.'
000000000000830e         db  0x10 ; '.'
000000000000830f         db  0x41 ; 'A'
0000000000008310         db  0x0e ; '.'
0000000000008311         db  0x08 ; '.'
0000000000008312         db  0x41 ; 'A'
0000000000008313         db  0x0b ; '.'
0000000000008314         dd         0x00000010                                  ; Length of the record
0000000000008318         dd         0x00000720                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000831c         db         0x44, 0xc5, 2 dup (0xff)                    ; begin 0x4860
0000000000008320         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x486a)
0000000000008324         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008325         align      8
0000000000008328         dd         0x00000010                                  ; Length of the record
000000000000832c         dd         0x00000734                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008330         db         0x40, 0xc5, 2 dup (0xff)                    ; begin 0x4870
0000000000008334         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x4886)
0000000000008338         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008339         align      4
000000000000833c         dd         0x00000048                                  ; Length of the record
0000000000008340         dd         0x00000748                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008344         db         0x4c, 0xc5, 2 dup (0xff)                    ; begin 0x4890
0000000000008348         db         0x74, 0x01, 2 dup (0x00)                    ; length 0x174 (end at 0x4a04)
000000000000834c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000834d         db  0x42 ; 'B'
000000000000834e         db  0x0e ; '.'
000000000000834f         db  0x10 ; '.'
0000000000008350         db  0x8f ; '.'
0000000000008351         db  0x02 ; '.'
0000000000008352         db  0x42 ; 'B'
0000000000008353         db  0x0e ; '.'
0000000000008354         db  0x18 ; '.'
0000000000008355         db  0x8e ; '.'
0000000000008356         db  0x03 ; '.'
0000000000008357         db  0x45 ; 'E'
0000000000008358         db  0x0e ; '.'
0000000000008359         db  0x20 ; ' '
000000000000835a         db  0x8d ; '.'
000000000000835b         db  0x04 ; '.'
000000000000835c         db  0x42 ; 'B'
000000000000835d         db  0x0e ; '.'
000000000000835e         db  0x28 ; '('
000000000000835f         db  0x8c ; '.'
0000000000008360         db  0x05 ; '.'
0000000000008361         db  0x44 ; 'D'
0000000000008362         db  0x0e ; '.'
0000000000008363         db  0x30 ; '0'
0000000000008364         db  0x86 ; '.'
0000000000008365         db  0x06 ; '.'
0000000000008366         db  0x41 ; 'A'
0000000000008367         db  0x0e ; '.'
0000000000008368         db  0x38 ; '8'
0000000000008369         db  0x83 ; '.'
000000000000836a         db  0x07 ; '.'
000000000000836b         db  0x46 ; 'F'
000000000000836c         db  0x0e ; '.'
000000000000836d         db  0x70 ; 'p'
000000000000836e         db  0x03 ; '.'
000000000000836f         db  0x31 ; '1'
0000000000008370         db  0x01 ; '.'
0000000000008371         db  0x0a ; '.'
0000000000008372         db  0x0e ; '.'
0000000000008373         db  0x38 ; '8'
0000000000008374         db  0x43 ; 'C'
0000000000008375         db  0x0e ; '.'
0000000000008376         db  0x30 ; '0'
0000000000008377         db  0x41 ; 'A'
0000000000008378         db  0x0e ; '.'
0000000000008379         db  0x28 ; '('
000000000000837a         db  0x42 ; 'B'
000000000000837b         db  0x0e ; '.'
000000000000837c         db  0x20 ; ' '
000000000000837d         db  0x42 ; 'B'
000000000000837e         db  0x0e ; '.'
000000000000837f         db  0x18 ; '.'
0000000000008380         db  0x42 ; 'B'
0000000000008381         db  0x0e ; '.'
0000000000008382         db  0x10 ; '.'
0000000000008383         db  0x42 ; 'B'
0000000000008384         db  0x0e ; '.'
0000000000008385         db  0x08 ; '.'
0000000000008386         db  0x41 ; 'A'
0000000000008387         db  0x0b ; '.'
0000000000008388         dd         0x00000020                                  ; Length of the record
000000000000838c         dd         0x00000794                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008390         db         0x80, 0xc6, 2 dup (0xff)                    ; begin 0x4a10
0000000000008394         db         0x86, 3 dup (0x00)                          ; length 0x86 (end at 0x4a96)
0000000000008398         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008399         db  0x44 ; 'D'
000000000000839a         db  0x0e ; '.'
000000000000839b         db  0x20 ; ' '
000000000000839c         db  0x02 ; '.'
000000000000839d         db  0x49 ; 'I'
000000000000839e         db  0x0a ; '.'
000000000000839f         db  0x0e ; '.'
00000000000083a0         db  0x08 ; '.'
00000000000083a1         db  0x43 ; 'C'
00000000000083a2         db  0x0b ; '.'
00000000000083a3         db  0x55 ; 'U'
00000000000083a4         db  0x0a ; '.'
00000000000083a5         db  0x0e ; '.'
00000000000083a6         db  0x08 ; '.'
00000000000083a7         db  0x4b ; 'K'
00000000000083a8         db  0x0b ; '.'
00000000000083a9         db  0x55 ; 'U'
00000000000083aa         db  0x0e ; '.'
00000000000083ab         db  0x08 ; '.'
00000000000083ac         dd         0x00000010                                  ; Length of the record
00000000000083b0         dd         0x000007b8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000083b4         db         0xec, 0xc6, 2 dup (0xff)                    ; begin 0x4aa0
00000000000083b8         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x4aab)
00000000000083bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083bd         align      64
00000000000083c0         dd         0x00000014                                  ; Length of the record
00000000000083c4         dd         0x000007cc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000083c8         db         0xe8, 0xc6, 2 dup (0xff)                    ; begin 0x4ab0
00000000000083cc         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x4abb)
00000000000083d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083d1         align      8
00000000000083d8         dd         0x00000110                                  ; Length of the record
00000000000083dc         dd         0x000007e4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000083e0         db         0xe0, 0xc6, 2 dup (0xff)                    ; begin 0x4ac0
00000000000083e4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4ed7)
00000000000083e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083e9         db  0x42 ; 'B'
00000000000083ea         db  0x0e ; '.'
00000000000083eb         db  0x10 ; '.'
00000000000083ec         db  0x8f ; '.'
00000000000083ed         db  0x02 ; '.'
00000000000083ee         db  0x42 ; 'B'
00000000000083ef         db  0x0e ; '.'
00000000000083f0         db  0x18 ; '.'
00000000000083f1         db  0x8e ; '.'
00000000000083f2         db  0x03 ; '.'
00000000000083f3         db  0x42 ; 'B'
00000000000083f4         db  0x0e ; '.'
00000000000083f5         db  0x20 ; ' '
00000000000083f6         db  0x8d ; '.'
00000000000083f7         db  0x04 ; '.'
00000000000083f8         db  0x42 ; 'B'
00000000000083f9         db  0x0e ; '.'
00000000000083fa         db  0x28 ; '('
00000000000083fb         db  0x8c ; '.'
00000000000083fc         db  0x05 ; '.'
00000000000083fd         db  0x44 ; 'D'
00000000000083fe         db  0x0e ; '.'
00000000000083ff         db  0x30 ; '0'
0000000000008400         db  0x86 ; '.'
0000000000008401         db  0x06 ; '.'
0000000000008402         db  0x41 ; 'A'
0000000000008403         db  0x0e ; '.'
0000000000008404         db  0x38 ; '8'
0000000000008405         db  0x83 ; '.'
0000000000008406         db  0x07 ; '.'
0000000000008407         db  0x4a ; 'J'
0000000000008408         db  0x0e ; '.'
0000000000008409         db  0x60 ; '`'
000000000000840a         db  0x02 ; '.'
000000000000840b         db  0xdd ; '.'
000000000000840c         db  0x0e ; '.'
000000000000840d         db  0x68 ; 'h'
000000000000840e         db  0x57 ; 'W'
000000000000840f         db  0x0e ; '.'
0000000000008410         db  0x70 ; 'p'
0000000000008411         db  0x42 ; 'B'
0000000000008412         db  0x0e ; '.'
0000000000008413         db  0x78 ; 'x'
0000000000008414         db  0x42 ; 'B'
0000000000008415         db  0x0e ; '.'
0000000000008416         db  0x80 ; '.'
0000000000008417         db  0x01 ; '.'
0000000000008418         db  0x42 ; 'B'
0000000000008419         db  0x0e ; '.'
000000000000841a         db  0x88 ; '.'
000000000000841b         db  0x01 ; '.'
000000000000841c         db  0x42 ; 'B'
000000000000841d         db  0x0e ; '.'
000000000000841e         db  0x90 ; '.'
000000000000841f         db  0x01 ; '.'
0000000000008420         db  0x53 ; 'S'
0000000000008421         db  0x0e ; '.'
0000000000008422         db  0x60 ; '`'
0000000000008423         db  0x44 ; 'D'
0000000000008424         db  0x0a ; '.'
0000000000008425         db  0x0e ; '.'
0000000000008426         db  0x38 ; '8'
0000000000008427         db  0x41 ; 'A'
0000000000008428         db  0x0e ; '.'
0000000000008429         db  0x30 ; '0'
000000000000842a         db  0x41 ; 'A'
000000000000842b         db  0x0e ; '.'
000000000000842c         db  0x28 ; '('
000000000000842d         db  0x42 ; 'B'
000000000000842e         db  0x0e ; '.'
000000000000842f         db  0x20 ; ' '
0000000000008430         db  0x42 ; 'B'
0000000000008431         db  0x0e ; '.'
0000000000008432         db  0x18 ; '.'
0000000000008433         db  0x42 ; 'B'
0000000000008434         db  0x0e ; '.'
0000000000008435         db  0x10 ; '.'
0000000000008436         db  0x42 ; 'B'
0000000000008437         db  0x0e ; '.'
0000000000008438         db  0x08 ; '.'
0000000000008439         db  0x44 ; 'D'
000000000000843a         db  0x0b ; '.'
000000000000843b         db  0x02 ; '.'
000000000000843c         db  0x78 ; 'x'
000000000000843d         db  0x0a ; '.'
000000000000843e         db  0x0e ; '.'
000000000000843f         db  0x68 ; 'h'
0000000000008440         db  0x48 ; 'H'
0000000000008441         db  0x0b ; '.'
0000000000008442         db  0x5a ; 'Z'
0000000000008443         db  0x0a ; '.'
0000000000008444         db  0x0e ; '.'
0000000000008445         db  0x38 ; '8'
0000000000008446         db  0x47 ; 'G'
0000000000008447         db  0x0e ; '.'
0000000000008448         db  0x30 ; '0'
0000000000008449         db  0x41 ; 'A'
000000000000844a         db  0x0e ; '.'
000000000000844b         db  0x28 ; '('
000000000000844c         db  0x42 ; 'B'
000000000000844d         db  0x0e ; '.'
000000000000844e         db  0x20 ; ' '
000000000000844f         db  0x42 ; 'B'
0000000000008450         db  0x0e ; '.'
0000000000008451         db  0x18 ; '.'
0000000000008452         db  0x42 ; 'B'
0000000000008453         db  0x0e ; '.'
0000000000008454         db  0x10 ; '.'
0000000000008455         db  0x42 ; 'B'
0000000000008456         db  0x0e ; '.'
0000000000008457         db  0x08 ; '.'
0000000000008458         db  0x56 ; 'V'
0000000000008459         db  0x0b ; '.'
000000000000845a         db  0x5e ; '^'
000000000000845b         db  0x0a ; '.'
000000000000845c         db  0x0e ; '.'
000000000000845d         db  0x38 ; '8'
000000000000845e         db  0x52 ; 'R'
000000000000845f         db  0x0e ; '.'
0000000000008460         db  0x30 ; '0'
0000000000008461         db  0x41 ; 'A'
0000000000008462         db  0x0e ; '.'
0000000000008463         db  0x28 ; '('
0000000000008464         db  0x42 ; 'B'
0000000000008465         db  0x0e ; '.'
0000000000008466         db  0x20 ; ' '
0000000000008467         db  0x42 ; 'B'
0000000000008468         db  0x0e ; '.'
0000000000008469         db  0x18 ; '.'
000000000000846a         db  0x42 ; 'B'
000000000000846b         db  0x0e ; '.'
000000000000846c         db  0x10 ; '.'
000000000000846d         db  0x42 ; 'B'
000000000000846e         db  0x0e ; '.'
000000000000846f         db  0x08 ; '.'
0000000000008470         db  0x4f ; 'O'
0000000000008471         db  0x0b ; '.'
0000000000008472         db  0x62 ; 'b'
0000000000008473         db  0x0a ; '.'
0000000000008474         db  0x0e ; '.'
0000000000008475         db  0x38 ; '8'
0000000000008476         db  0x50 ; 'P'
0000000000008477         db  0x0e ; '.'
0000000000008478         db  0x30 ; '0'
0000000000008479         db  0x41 ; 'A'
000000000000847a         db  0x0e ; '.'
000000000000847b         db  0x28 ; '('
000000000000847c         db  0x42 ; 'B'
000000000000847d         db  0x0e ; '.'
000000000000847e         db  0x20 ; ' '
000000000000847f         db  0x42 ; 'B'
0000000000008480         db  0x0e ; '.'
0000000000008481         db  0x18 ; '.'
0000000000008482         db  0x42 ; 'B'
0000000000008483         db  0x0e ; '.'
0000000000008484         db  0x10 ; '.'
0000000000008485         db  0x42 ; 'B'
0000000000008486         db  0x0e ; '.'
0000000000008487         db  0x08 ; '.'
0000000000008488         db  0x55 ; 'U'
0000000000008489         db  0x0b ; '.'
000000000000848a         db  0x66 ; 'f'
000000000000848b         db  0x0e ; '.'
000000000000848c         db  0x68 ; 'h'
000000000000848d         db  0x42 ; 'B'
000000000000848e         db  0x0e ; '.'
000000000000848f         db  0x70 ; 'p'
0000000000008490         db  0x5c ; '\'
0000000000008491         db  0x0e ; '.'
0000000000008492         db  0x68 ; 'h'
0000000000008493         db  0x41 ; 'A'
0000000000008494         db  0x0e ; '.'
0000000000008495         db  0x60 ; '`'
0000000000008496         db  0x44 ; 'D'
0000000000008497         db  0x0a ; '.'
0000000000008498         db  0x0e ; '.'
0000000000008499         db  0x38 ; '8'
000000000000849a         db  0x41 ; 'A'
000000000000849b         db  0x0e ; '.'
000000000000849c         db  0x30 ; '0'
000000000000849d         db  0x41 ; 'A'
000000000000849e         db  0x0e ; '.'
000000000000849f         db  0x28 ; '('
00000000000084a0         db  0x42 ; 'B'
00000000000084a1         db  0x0e ; '.'
00000000000084a2         db  0x20 ; ' '
00000000000084a3         db  0x42 ; 'B'
00000000000084a4         db  0x0e ; '.'
00000000000084a5         db  0x18 ; '.'
00000000000084a6         db  0x42 ; 'B'
00000000000084a7         db  0x0e ; '.'
00000000000084a8         db  0x10 ; '.'
00000000000084a9         db  0x42 ; 'B'
00000000000084aa         db  0x0e ; '.'
00000000000084ab         db  0x08 ; '.'
00000000000084ac         db  0x45 ; 'E'
00000000000084ad         db  0x0b ; '.'
00000000000084ae         db  0x68 ; 'h'
00000000000084af         db  0x0a ; '.'
00000000000084b0         db  0x0e ; '.'
00000000000084b1         db  0x68 ; 'h'
00000000000084b2         db  0x48 ; 'H'
00000000000084b3         db  0x0b ; '.'
00000000000084b4         db  0x72 ; 'r'
00000000000084b5         db  0x0e ; '.'
00000000000084b6         db  0x68 ; 'h'
00000000000084b7         db  0x45 ; 'E'
00000000000084b8         db  0x0e ; '.'
00000000000084b9         db  0x70 ; 'p'
00000000000084ba         db  0x42 ; 'B'
00000000000084bb         db  0x0e ; '.'
00000000000084bc         db  0x78 ; 'x'
00000000000084bd         db  0x42 ; 'B'
00000000000084be         db  0x0e ; '.'
00000000000084bf         db  0x80 ; '.'
00000000000084c0         db  0x01 ; '.'
00000000000084c1         db  0x5e ; '^'
00000000000084c2         db  0x0e ; '.'
00000000000084c3         db  0x60 ; '`'
00000000000084c4         db  0x44 ; 'D'
00000000000084c5         db  0x0a ; '.'
00000000000084c6         db  0x0e ; '.'
00000000000084c7         db  0x38 ; '8'
00000000000084c8         db  0x41 ; 'A'
00000000000084c9         db  0x0e ; '.'
00000000000084ca         db  0x30 ; '0'
00000000000084cb         db  0x41 ; 'A'
00000000000084cc         db  0x0e ; '.'
00000000000084cd         db  0x28 ; '('
00000000000084ce         db  0x42 ; 'B'
00000000000084cf         db  0x0e ; '.'
00000000000084d0         db  0x20 ; ' '
00000000000084d1         db  0x42 ; 'B'
00000000000084d2         db  0x0e ; '.'
00000000000084d3         db  0x18 ; '.'
00000000000084d4         db  0x42 ; 'B'
00000000000084d5         db  0x0e ; '.'
00000000000084d6         db  0x10 ; '.'
00000000000084d7         db  0x42 ; 'B'
00000000000084d8         db  0x0e ; '.'
00000000000084d9         db  0x08 ; '.'
00000000000084da         db  0x41 ; 'A'
00000000000084db         db  0x0b ; '.'
00000000000084dc         db  0x79 ; 'y'
00000000000084dd         db  0x0a ; '.'
00000000000084de         db  0x0e ; '.'
00000000000084df         db  0x68 ; 'h'
00000000000084e0         db  0x42 ; 'B'
00000000000084e1         db  0x0e ; '.'
00000000000084e2         db  0x70 ; 'p'
00000000000084e3         db  0x42 ; 'B'
00000000000084e4         db  0x0e ; '.'
00000000000084e5         db  0x78 ; 'x'
00000000000084e6         db  0x42 ; 'B'
00000000000084e7         db  0x0e ; '.'
00000000000084e8         db  0x80 ; '.'
00000000000084e9         db  0x01 ; '.'
00000000000084ea         db  0x51 ; 'Q'
00000000000084eb         db  0x0b ; '.'
00000000000084ec         dd         0x00000010                                  ; Length of the record
00000000000084f0         dd         0x000008f8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000084f4         db         0xec, 0xc9, 2 dup (0xff)                    ; begin 0x4ee0
00000000000084f8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4f00)
00000000000084fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084fd         align      256
0000000000008500         dd         0x00000018                                  ; Length of the record
0000000000008504         dd         0x0000090c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008508         db         0xf8, 0xc9, 2 dup (0xff)                    ; begin 0x4f00
000000000000850c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4f78)
0000000000008510         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008511         db  0x44 ; 'D'
0000000000008512         db  0x0e ; '.'
0000000000008513         db  0x70 ; 'p'
0000000000008514         db  0x02 ; '.'
0000000000008515         db  0x60 ; '`'
0000000000008516         db  0x0a ; '.'
0000000000008517         db  0x0e ; '.'
0000000000008518         db  0x08 ; '.'
0000000000008519         db  0x41 ; 'A'
000000000000851a         db  0x0b ; '.'
000000000000851b         db  0x00 ; '.'
000000000000851c         dd         0x00000028                                  ; Length of the record
0000000000008520         dd         0x00000928                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008524         db         0x5c, 0xca, 2 dup (0xff)                    ; begin 0x4f80
0000000000008528         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5055)
000000000000852c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000852d         db  0x41 ; 'A'
000000000000852e         db  0x0e ; '.'
000000000000852f         db  0x10 ; '.'
0000000000008530         db  0x86 ; '.'
0000000000008531         db  0x02 ; '.'
0000000000008532         db  0x41 ; 'A'
0000000000008533         db  0x0e ; '.'
0000000000008534         db  0x18 ; '.'
0000000000008535         db  0x83 ; '.'
0000000000008536         db  0x03 ; '.'
0000000000008537         db  0x50 ; 'P'
0000000000008538         db  0x0e ; '.'
0000000000008539         db  0xd0 ; '.'
000000000000853a         db  0x01 ; '.'
000000000000853b         db  0x02 ; '.'
000000000000853c         db  0xab ; '.'
000000000000853d         db  0x0a ; '.'
000000000000853e         db  0x0e ; '.'
000000000000853f         db  0x18 ; '.'
0000000000008540         db  0x41 ; 'A'
0000000000008541         db  0x0e ; '.'
0000000000008542         db  0x10 ; '.'
0000000000008543         db  0x41 ; 'A'
0000000000008544         db  0x0e ; '.'
0000000000008545         db  0x08 ; '.'
0000000000008546         db  0x41 ; 'A'
0000000000008547         db  0x0b ; '.'
0000000000008548         dd         0x0000001c                                  ; Length of the record
000000000000854c         dd         0x00000954                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008550         db         0x10, 0xcb, 2 dup (0xff)                    ; begin 0x5060
0000000000008554         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x50e0)
0000000000008558         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008559         db  0x41 ; 'A'
000000000000855a         db  0x0e ; '.'
000000000000855b         db  0x10 ; '.'
000000000000855c         db  0x83 ; '.'
000000000000855d         db  0x02 ; '.'
000000000000855e         db  0x02 ; '.'
000000000000855f         db  0x7a ; 'z'
0000000000008560         db  0x0e ; '.'
0000000000008561         db  0x08 ; '.'
0000000000008562         db  0x00 ; '.'
0000000000008563         db  0x00 ; '.'
0000000000008564         db  0x00 ; '.'
0000000000008565         db  0x00 ; '.'
0000000000008566         db  0x00 ; '.'
0000000000008567         db  0x00 ; '.'
0000000000008568         dd         0x00000018                                  ; Length of the record
000000000000856c         dd         0x00000974                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008570         db         0x70, 0xcb, 2 dup (0xff)                    ; begin 0x50e0
0000000000008574         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x50fa)
0000000000008578         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008579         db  0x41 ; 'A'
000000000000857a         db  0x0e ; '.'
000000000000857b         db  0x10 ; '.'
000000000000857c         db  0x83 ; '.'
000000000000857d         db  0x02 ; '.'
000000000000857e         db  0x53 ; 'S'
000000000000857f         db  0x0a ; '.'
0000000000008580         db  0x0e ; '.'
0000000000008581         db  0x08 ; '.'
0000000000008582         db  0x41 ; 'A'
0000000000008583         db  0x0b ; '.'
0000000000008584         dd         0x00000010                                  ; Length of the record
0000000000008588         dd         0x00000990                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000858c         db         0x74, 0xcb, 2 dup (0xff)                    ; begin 0x5100
0000000000008590         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5124)
0000000000008594         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008595         db  0x5f ; '_'
0000000000008596         db  0x0e ; '.'
0000000000008597         db  0x10 ; '.'
0000000000008598         dd         0x00000010                                  ; Length of the record
000000000000859c         dd         0x000009a4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000085a0         db         0x90, 0xcb, 2 dup (0xff)                    ; begin 0x5130
00000000000085a4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5132)
00000000000085a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085a9         align      4
00000000000085ac         dd         0x00000020                                  ; Length of the record
00000000000085b0         dd         0x000009b8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000085b4         db         0x8c, 0xcb, 2 dup (0xff)                    ; begin 0x5140
00000000000085b8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5176)
00000000000085bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085bd         db  0x44 ; 'D'
00000000000085be         db  0x0e ; '.'
00000000000085bf         db  0x10 ; '.'
00000000000085c0         db  0x83 ; '.'
00000000000085c1         db  0x02 ; '.'
00000000000085c2         db  0x5d ; ']'
00000000000085c3         db  0x0a ; '.'
00000000000085c4         db  0x0e ; '.'
00000000000085c5         db  0x08 ; '.'
00000000000085c6         db  0x47 ; 'G'
00000000000085c7         db  0x0b ; '.'
00000000000085c8         db  0x48 ; 'H'
00000000000085c9         db  0x0a ; '.'
00000000000085ca         db  0x0e ; '.'
00000000000085cb         db  0x08 ; '.'
00000000000085cc         db  0x41 ; 'A'
00000000000085cd         db  0x0b ; '.'
00000000000085ce         db  0x00 ; '.'
00000000000085cf         db  0x00 ; '.'
00000000000085d0         dd         0x00000010                                  ; Length of the record
00000000000085d4         dd         0x000009dc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000085d8         db         0xa8, 0xcb, 2 dup (0xff)                    ; begin 0x5180
00000000000085dc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x51a4)
00000000000085e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085e1         db  0x5f ; '_'
00000000000085e2         db  0x0e ; '.'
00000000000085e3         db  0x10 ; '.'
00000000000085e4         dd         0x00000014                                  ; Length of the record
00000000000085e8         dd         0x000009f0                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000085ec         db         0xc4, 0xcb, 2 dup (0xff)                    ; begin 0x51b0
00000000000085f0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5232)
00000000000085f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085f5         db  0x02 ; '.'
00000000000085f6         db  0x5f ; '_'
00000000000085f7         db  0x0e ; '.'
00000000000085f8         db  0x10 ; '.'
00000000000085f9         db  0x49 ; 'I'
00000000000085fa         db  0x0e ; '.'
00000000000085fb         db  0x08 ; '.'
00000000000085fc         dd         0x00000014                                  ; Length of the record
0000000000008600         dd         0x00000a08                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008604         db         0x3c, 0xcc, 2 dup (0xff)                    ; begin 0x5240
0000000000008608         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x528a)
000000000000860c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000860d         db  0x02 ; '.'
000000000000860e         db  0x45 ; 'E'
000000000000860f         db  0x0e ; '.'
0000000000008610         db  0x10 ; '.'
0000000000008611         db  0x00 ; '.'
0000000000008612         db  0x00 ; '.'
0000000000008613         db  0x00 ; '.'
0000000000008614         dd         0x00000018                                  ; Length of the record
0000000000008618         dd         0x00000a20                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000861c         db         0x74, 0xcc, 2 dup (0xff)                    ; begin 0x5290
0000000000008620         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x52a7)
0000000000008624         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008625         db  0x41 ; 'A'
0000000000008626         db  0x0e ; '.'
0000000000008627         db  0x10 ; '.'
0000000000008628         db  0x83 ; '.'
0000000000008629         db  0x02 ; '.'
000000000000862a         db  0x51 ; 'Q'
000000000000862b         db  0x0e ; '.'
000000000000862c         db  0x08 ; '.'
000000000000862d         db  0x00 ; '.'
000000000000862e         db  0x00 ; '.'
000000000000862f         db  0x00 ; '.'
0000000000008630         dd         0x00000018                                  ; Length of the record
0000000000008634         dd         0x00000a3c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008638         db         0x78, 0xcc, 2 dup (0xff)                    ; begin 0x52b0
000000000000863c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x52de)
0000000000008640         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008641         db  0x47 ; 'G'
0000000000008642         db  0x0e ; '.'
0000000000008643         db  0x10 ; '.'
0000000000008644         db  0x61 ; 'a'
0000000000008645         db  0x0a ; '.'
0000000000008646         db  0x0e ; '.'
0000000000008647         db  0x08 ; '.'
0000000000008648         db  0x41 ; 'A'
0000000000008649         db  0x0b ; '.'
000000000000864a         db  0x00 ; '.'
000000000000864b         db  0x00 ; '.'
000000000000864c         dd         0x00000024                                  ; Length of the record
0000000000008650         dd         0x00000a58                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008654         db         0x8c, 0xcc, 2 dup (0xff)                    ; begin 0x52e0
0000000000008658         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5308)
000000000000865c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000865d         db  0x41 ; 'A'
000000000000865e         db  0x0e ; '.'
000000000000865f         db  0x10 ; '.'
0000000000008660         db  0x86 ; '.'
0000000000008661         db  0x02 ; '.'
0000000000008662         db  0x41 ; 'A'
0000000000008663         db  0x0e ; '.'
0000000000008664         db  0x18 ; '.'
0000000000008665         db  0x83 ; '.'
0000000000008666         db  0x03 ; '.'
0000000000008667         db  0x4d ; 'M'
0000000000008668         db  0x0e ; '.'
0000000000008669         db  0x20 ; ' '
000000000000866a         db  0x49 ; 'I'
000000000000866b         db  0x0e ; '.'
000000000000866c         db  0x18 ; '.'
000000000000866d         db  0x47 ; 'G'
000000000000866e         db  0x0e ; '.'
000000000000866f         db  0x10 ; '.'
0000000000008670         db  0x41 ; 'A'
0000000000008671         db  0x0e ; '.'
0000000000008672         db  0x08 ; '.'
0000000000008673         db  0x00 ; '.'
0000000000008674         dd         0x00000018                                  ; Length of the record
0000000000008678         dd         0x00000a80                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000867c         db         0x94, 0xcc, 2 dup (0xff)                    ; begin 0x5310
0000000000008680         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5323)
0000000000008684         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008685         db  0x41 ; 'A'
0000000000008686         db  0x0e ; '.'
0000000000008687         db  0x10 ; '.'
0000000000008688         db  0x83 ; '.'
0000000000008689         db  0x02 ; '.'
000000000000868a         db  0x50 ; 'P'
000000000000868b         db  0x0e ; '.'
000000000000868c         db  0x08 ; '.'
000000000000868d         db  0x00 ; '.'
000000000000868e         db  0x00 ; '.'
000000000000868f         db  0x00 ; '.'
0000000000008690         dd         0x00000014                                  ; Length of the record
0000000000008694         dd         0x00000a9c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008698         db         0x98, 0xcc, 2 dup (0xff)                    ; begin 0x5330
000000000000869c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5365)
00000000000086a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086a1         db  0x4b ; 'K'
00000000000086a2         db  0x0e ; '.'
00000000000086a3         db  0x10 ; '.'
00000000000086a4         db  0x00 ; '.'
00000000000086a5         db  0x00 ; '.'
00000000000086a6         db  0x00 ; '.'
00000000000086a7         db  0x00 ; '.'
00000000000086a8         dd         0x00000034                                  ; Length of the record
00000000000086ac         dd         0x00000ab4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000086b0         db         0xc0, 0xcc, 2 dup (0xff)                    ; begin 0x5370
00000000000086b4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x53eb)
00000000000086b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086b9         db  0x42 ; 'B'
00000000000086ba         db  0x0e ; '.'
00000000000086bb         db  0x10 ; '.'
00000000000086bc         db  0x8c ; '.'
00000000000086bd         db  0x02 ; '.'
00000000000086be         db  0x41 ; 'A'
00000000000086bf         db  0x0e ; '.'
00000000000086c0         db  0x18 ; '.'
00000000000086c1         db  0x86 ; '.'
00000000000086c2         db  0x03 ; '.'
00000000000086c3         db  0x41 ; 'A'
00000000000086c4         db  0x0e ; '.'
00000000000086c5         db  0x20 ; ' '
00000000000086c6         db  0x83 ; '.'
00000000000086c7         db  0x04 ; '.'
00000000000086c8         db  0x7d ; '}'
00000000000086c9         db  0x0a ; '.'
00000000000086ca         db  0x0e ; '.'
00000000000086cb         db  0x18 ; '.'
00000000000086cc         db  0x41 ; 'A'
00000000000086cd         db  0x0e ; '.'
00000000000086ce         db  0x10 ; '.'
00000000000086cf         db  0x42 ; 'B'
00000000000086d0         db  0x0e ; '.'
00000000000086d1         db  0x08 ; '.'
00000000000086d2         db  0x44 ; 'D'
00000000000086d3         db  0x0b ; '.'
00000000000086d4         db  0x60 ; '`'
00000000000086d5         db  0x0a ; '.'
00000000000086d6         db  0x0e ; '.'
00000000000086d7         db  0x18 ; '.'
00000000000086d8         db  0x41 ; 'A'
00000000000086d9         db  0x0e ; '.'
00000000000086da         db  0x10 ; '.'
00000000000086db         db  0x42 ; 'B'
00000000000086dc         db  0x0e ; '.'
00000000000086dd         db  0x08 ; '.'
00000000000086de         db  0x45 ; 'E'
00000000000086df         db  0x0b ; '.'
00000000000086e0         dd         0x0000001c                                  ; Length of the record
00000000000086e4         dd         0x00000aec                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000086e8         db         0x08, 0xcd, 2 dup (0xff)                    ; begin 0x53f0
00000000000086ec         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5430)
00000000000086f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086f1         db  0x44 ; 'D'
00000000000086f2         db  0x0e ; '.'
00000000000086f3         db  0x10 ; '.'
00000000000086f4         db  0x83 ; '.'
00000000000086f5         db  0x02 ; '.'
00000000000086f6         db  0x5a ; 'Z'
00000000000086f7         db  0x0a ; '.'
00000000000086f8         db  0x0e ; '.'
00000000000086f9         db  0x08 ; '.'
00000000000086fa         db  0x4a ; 'J'
00000000000086fb         db  0x0b ; '.'
00000000000086fc         db  0x53 ; 'S'
00000000000086fd         db  0x0e ; '.'
00000000000086fe         db  0x08 ; '.'
00000000000086ff         db  0x00 ; '.'
0000000000008700         dd         0x0000002c                                  ; Length of the record
0000000000008704         dd         0x00000b0c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008708         db         0x28, 0xcd, 2 dup (0xff)                    ; begin 0x5430
000000000000870c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5487)
0000000000008710         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008711         db  0x63 ; 'c'
0000000000008712         db  0x0e ; '.'
0000000000008713         db  0x10 ; '.'
0000000000008714         db  0x8c ; '.'
0000000000008715         db  0x02 ; '.'
0000000000008716         db  0x41 ; 'A'
0000000000008717         db  0x0e ; '.'
0000000000008718         db  0x18 ; '.'
0000000000008719         db  0x86 ; '.'
000000000000871a         db  0x03 ; '.'
000000000000871b         db  0x44 ; 'D'
000000000000871c         db  0x0e ; '.'
000000000000871d         db  0x20 ; ' '
000000000000871e         db  0x83 ; '.'
000000000000871f         db  0x04 ; '.'
0000000000008720         db  0x6b ; 'k'
0000000000008721         db  0x0e ; '.'
0000000000008722         db  0x18 ; '.'
0000000000008723         db  0x41 ; 'A'
0000000000008724         db  0x0e ; '.'
0000000000008725         db  0x10 ; '.'
0000000000008726         db  0x42 ; 'B'
0000000000008727         db  0x0e ; '.'
0000000000008728         db  0x08 ; '.'
0000000000008729         db  0x00 ; '.'
000000000000872a         db  0x00 ; '.'
000000000000872b         db  0x00 ; '.'
000000000000872c         db  0x00 ; '.'
000000000000872d         db  0x00 ; '.'
000000000000872e         db  0x00 ; '.'
000000000000872f         db  0x00 ; '.'
0000000000008730         dd         0x0000003c                                  ; Length of the record
0000000000008734         dd         0x00000b3c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008738         db         0x58, 0xcd, 2 dup (0xff)                    ; begin 0x5490
000000000000873c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5513)
0000000000008740         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008741         db  0x42 ; 'B'
0000000000008742         db  0x0e ; '.'
0000000000008743         db  0x10 ; '.'
0000000000008744         db  0x8d ; '.'
0000000000008745         db  0x02 ; '.'
0000000000008746         db  0x42 ; 'B'
0000000000008747         db  0x0e ; '.'
0000000000008748         db  0x18 ; '.'
0000000000008749         db  0x8c ; '.'
000000000000874a         db  0x03 ; '.'
000000000000874b         db  0x44 ; 'D'
000000000000874c         db  0x0e ; '.'
000000000000874d         db  0x20 ; ' '
000000000000874e         db  0x86 ; '.'
000000000000874f         db  0x04 ; '.'
0000000000008750         db  0x41 ; 'A'
0000000000008751         db  0x0e ; '.'
0000000000008752         db  0x28 ; '('
0000000000008753         db  0x83 ; '.'
0000000000008754         db  0x05 ; '.'
0000000000008755         db  0x4a ; 'J'
0000000000008756         db  0x0e ; '.'
0000000000008757         db  0x40 ; '@'
0000000000008758         db  0x02 ; '.'
0000000000008759         db  0x64 ; 'd'
000000000000875a         db  0x0a ; '.'
000000000000875b         db  0x0e ; '.'
000000000000875c         db  0x28 ; '('
000000000000875d         db  0x41 ; 'A'
000000000000875e         db  0x0e ; '.'
000000000000875f         db  0x20 ; ' '
0000000000008760         db  0x41 ; 'A'
0000000000008761         db  0x0e ; '.'
0000000000008762         db  0x18 ; '.'
0000000000008763         db  0x42 ; 'B'
0000000000008764         db  0x0e ; '.'
0000000000008765         db  0x10 ; '.'
0000000000008766         db  0x42 ; 'B'
0000000000008767         db  0x0e ; '.'
0000000000008768         db  0x08 ; '.'
0000000000008769         db  0x41 ; 'A'
000000000000876a         db  0x0b ; '.'
000000000000876b         db  0x00 ; '.'
000000000000876c         db  0x00 ; '.'
000000000000876d         db  0x00 ; '.'
000000000000876e         db  0x00 ; '.'
000000000000876f         db  0x00 ; '.'
0000000000008770         dd         0x0000001c                                  ; Length of the record
0000000000008774         dd         0x00000b7c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008778         db         0xa8, 0xcd, 2 dup (0xff)                    ; begin 0x5520
000000000000877c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5580)
0000000000008780         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008781         db  0x44 ; 'D'
0000000000008782         db  0x0e ; '.'
0000000000008783         db  0x10 ; '.'
0000000000008784         db  0x75 ; 'u'
0000000000008785         db  0x0a ; '.'
0000000000008786         db  0x0e ; '.'
0000000000008787         db  0x08 ; '.'
0000000000008788         db  0x47 ; 'G'
0000000000008789         db  0x0b ; '.'
000000000000878a         db  0x5f ; '_'
000000000000878b         db  0x0e ; '.'
000000000000878c         db  0x08 ; '.'
000000000000878d         db  0x00 ; '.'
000000000000878e         db  0x00 ; '.'
000000000000878f         db  0x00 ; '.'
0000000000008790         dd         0x0000001c                                  ; Length of the record
0000000000008794         dd         0x00000b9c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008798         db         0xe8, 0xcd, 2 dup (0xff)                    ; begin 0x5580
000000000000879c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x55bc)
00000000000087a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087a1         db  0x44 ; 'D'
00000000000087a2         db  0x0e ; '.'
00000000000087a3         db  0x10 ; '.'
00000000000087a4         db  0x61 ; 'a'
00000000000087a5         db  0x0a ; '.'
00000000000087a6         db  0x0e ; '.'
00000000000087a7         db  0x08 ; '.'
00000000000087a8         db  0x4b ; 'K'
00000000000087a9         db  0x0b ; '.'
00000000000087aa         db  0x4b ; 'K'
00000000000087ab         db  0x0e ; '.'
00000000000087ac         db  0x08 ; '.'
00000000000087ad         db  0x00 ; '.'
00000000000087ae         db  0x00 ; '.'
00000000000087af         db  0x00 ; '.'
00000000000087b0         dd         0x00000018                                  ; Length of the record
00000000000087b4         dd         0x00000bbc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000087b8         db         0x08, 0xce, 2 dup (0xff)                    ; begin 0x55c0
00000000000087bc         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x55e3)
00000000000087c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c1         db  0x41 ; 'A'
00000000000087c2         db  0x0e ; '.'
00000000000087c3         db  0x10 ; '.'
00000000000087c4         db  0x83 ; '.'
00000000000087c5         db  0x02 ; '.'
00000000000087c6         db  0x61 ; 'a'
00000000000087c7         db  0x0e ; '.'
00000000000087c8         db  0x08 ; '.'
00000000000087c9         db  0x00 ; '.'
00000000000087ca         db  0x00 ; '.'
00000000000087cb         db  0x00 ; '.'
00000000000087cc         dd         0x0000001c                                  ; Length of the record
00000000000087d0         dd         0x00000bd8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000087d4         db         0x1c, 0xce, 2 dup (0xff)                    ; begin 0x55f0
00000000000087d8         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x5624)
00000000000087dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087dd         db  0x41 ; 'A'
00000000000087de         db  0x0e ; '.'
00000000000087df         db  0x10 ; '.'
00000000000087e0         db  0x83 ; '.'
00000000000087e1         db  0x02 ; '.'
00000000000087e2         db  0x6b ; 'k'
00000000000087e3         db  0x0a ; '.'
00000000000087e4         db  0x0e ; '.'
00000000000087e5         db  0x08 ; '.'
00000000000087e6         db  0x44 ; 'D'
00000000000087e7         db  0x0b ; '.'
00000000000087e8         db  0x43 ; 'C'
00000000000087e9         db  0x0e ; '.'
00000000000087ea         db  0x08 ; '.'
00000000000087eb         db  0x00 ; '.'
00000000000087ec         dd         0x00000010                                  ; Length of the record
00000000000087f0         dd         0x00000bf8                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000087f4         db         0x3c, 0xce, 2 dup (0xff)                    ; begin 0x5630
00000000000087f8         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x5634)
00000000000087fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087fd         align      2048
0000000000008800         dd         0x00000048                                  ; Length of the record
0000000000008804         dd         0x00000c0c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008808         db         0x38, 0xce, 2 dup (0xff)                    ; begin 0x5640
000000000000880c         db         0x1a, 0x01, 2 dup (0x00)                    ; length 0x11a (end at 0x575a)
0000000000008810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008811         db  0x42 ; 'B'
0000000000008812         db  0x0e ; '.'
0000000000008813         db  0x10 ; '.'
0000000000008814         db  0x8f ; '.'
0000000000008815         db  0x02 ; '.'
0000000000008816         db  0x42 ; 'B'
0000000000008817         db  0x0e ; '.'
0000000000008818         db  0x18 ; '.'
0000000000008819         db  0x8e ; '.'
000000000000881a         db  0x03 ; '.'
000000000000881b         db  0x46 ; 'F'
000000000000881c         db  0x0e ; '.'
000000000000881d         db  0x20 ; ' '
000000000000881e         db  0x8d ; '.'
000000000000881f         db  0x04 ; '.'
0000000000008820         db  0x42 ; 'B'
0000000000008821         db  0x0e ; '.'
0000000000008822         db  0x28 ; '('
0000000000008823         db  0x8c ; '.'
0000000000008824         db  0x05 ; '.'
0000000000008825         db  0x44 ; 'D'
0000000000008826         db  0x0e ; '.'
0000000000008827         db  0x30 ; '0'
0000000000008828         db  0x86 ; '.'
0000000000008829         db  0x06 ; '.'
000000000000882a         db  0x41 ; 'A'
000000000000882b         db  0x0e ; '.'
000000000000882c         db  0x38 ; '8'
000000000000882d         db  0x83 ; '.'
000000000000882e         db  0x07 ; '.'
000000000000882f         db  0x47 ; 'G'
0000000000008830         db  0x0e ; '.'
0000000000008831         db  0x60 ; '`'
0000000000008832         db  0x02 ; '.'
0000000000008833         db  0xde ; '.'
0000000000008834         db  0x0a ; '.'
0000000000008835         db  0x0e ; '.'
0000000000008836         db  0x38 ; '8'
0000000000008837         db  0x41 ; 'A'
0000000000008838         db  0x0e ; '.'
0000000000008839         db  0x30 ; '0'
000000000000883a         db  0x41 ; 'A'
000000000000883b         db  0x0e ; '.'
000000000000883c         db  0x28 ; '('
000000000000883d         db  0x42 ; 'B'
000000000000883e         db  0x0e ; '.'
000000000000883f         db  0x20 ; ' '
0000000000008840         db  0x42 ; 'B'
0000000000008841         db  0x0e ; '.'
0000000000008842         db  0x18 ; '.'
0000000000008843         db  0x42 ; 'B'
0000000000008844         db  0x0e ; '.'
0000000000008845         db  0x10 ; '.'
0000000000008846         db  0x42 ; 'B'
0000000000008847         db  0x0e ; '.'
0000000000008848         db  0x08 ; '.'
0000000000008849         db  0x48 ; 'H'
000000000000884a         db  0x0b ; '.'
000000000000884b         db  0x00 ; '.'
000000000000884c         dd         0x00000018                                  ; Length of the record
0000000000008850         dd         0x00000c58                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008854         db         0x0c, 0xcf, 2 dup (0xff)                    ; begin 0x5760
0000000000008858         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0x577e)
000000000000885c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000885d         db  0x41 ; 'A'
000000000000885e         db  0x0e ; '.'
000000000000885f         db  0x10 ; '.'
0000000000008860         db  0x83 ; '.'
0000000000008861         db  0x02 ; '.'
0000000000008862         db  0x58 ; 'X'
0000000000008863         db  0x0e ; '.'
0000000000008864         db  0x08 ; '.'
0000000000008865         db  0x00 ; '.'
0000000000008866         db  0x00 ; '.'
0000000000008867         db  0x00 ; '.'
0000000000008868         dd         0x00000034                                  ; Length of the record
000000000000886c         dd         0x00000c74                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008870         db         0x10, 0xcf, 2 dup (0xff)                    ; begin 0x5780
0000000000008874         db         0x51, 3 dup (0x00)                          ; length 0x51 (end at 0x57d1)
0000000000008878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008879         db  0x42 ; 'B'
000000000000887a         db  0x0e ; '.'
000000000000887b         db  0x10 ; '.'
000000000000887c         db  0x8d ; '.'
000000000000887d         db  0x02 ; '.'
000000000000887e         db  0x42 ; 'B'
000000000000887f         db  0x0e ; '.'
0000000000008880         db  0x18 ; '.'
0000000000008881         db  0x8c ; '.'
0000000000008882         db  0x03 ; '.'
0000000000008883         db  0x41 ; 'A'
0000000000008884         db  0x0e ; '.'
0000000000008885         db  0x20 ; ' '
0000000000008886         db  0x86 ; '.'
0000000000008887         db  0x04 ; '.'
0000000000008888         db  0x41 ; 'A'
0000000000008889         db  0x0e ; '.'
000000000000888a         db  0x28 ; '('
000000000000888b         db  0x83 ; '.'
000000000000888c         db  0x05 ; '.'
000000000000888d         db  0x47 ; 'G'
000000000000888e         db  0x0e ; '.'
000000000000888f         db  0x30 ; '0'
0000000000008890         db  0x7a ; 'z'
0000000000008891         db  0x0e ; '.'
0000000000008892         db  0x28 ; '('
0000000000008893         db  0x44 ; 'D'
0000000000008894         db  0x0e ; '.'
0000000000008895         db  0x20 ; ' '
0000000000008896         db  0x41 ; 'A'
0000000000008897         db  0x0e ; '.'
0000000000008898         db  0x18 ; '.'
0000000000008899         db  0x42 ; 'B'
000000000000889a         db  0x0e ; '.'
000000000000889b         db  0x10 ; '.'
000000000000889c         db  0x42 ; 'B'
000000000000889d         db  0x0e ; '.'
000000000000889e         db  0x08 ; '.'
000000000000889f         db  0x00 ; '.'
00000000000088a0         dd         0x0000001c                                  ; Length of the record
00000000000088a4         dd         0x00000cac                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000088a8         db         0x38, 0xcf, 2 dup (0xff)                    ; begin 0x57e0
00000000000088ac         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x583d)
00000000000088b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b1         db  0x41 ; 'A'
00000000000088b2         db  0x0e ; '.'
00000000000088b3         db  0x10 ; '.'
00000000000088b4         db  0x86 ; '.'
00000000000088b5         db  0x02 ; '.'
00000000000088b6         db  0x41 ; 'A'
00000000000088b7         db  0x0e ; '.'
00000000000088b8         db  0x18 ; '.'
00000000000088b9         db  0x83 ; '.'
00000000000088ba         db  0x03 ; '.'
00000000000088bb         db  0x44 ; 'D'
00000000000088bc         db  0x0e ; '.'
00000000000088bd         db  0x20 ; ' '
00000000000088be         db  0x00 ; '.'
00000000000088bf         db  0x00 ; '.'
00000000000088c0         dd         0x00000048                                  ; Length of the record
00000000000088c4         dd         0x00000ccc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000088c8         db         0x78, 0xcf, 2 dup (0xff)                    ; begin 0x5840
00000000000088cc         db         0x29, 0x03, 2 dup (0x00)                    ; length 0x329 (end at 0x5b69)
00000000000088d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088d1         db  0x42 ; 'B'
00000000000088d2         db  0x0e ; '.'
00000000000088d3         db  0x10 ; '.'
00000000000088d4         db  0x8f ; '.'
00000000000088d5         db  0x02 ; '.'
00000000000088d6         db  0x42 ; 'B'
00000000000088d7         db  0x0e ; '.'
00000000000088d8         db  0x18 ; '.'
00000000000088d9         db  0x8e ; '.'
00000000000088da         db  0x03 ; '.'
00000000000088db         db  0x42 ; 'B'
00000000000088dc         db  0x0e ; '.'
00000000000088dd         db  0x20 ; ' '
00000000000088de         db  0x8d ; '.'
00000000000088df         db  0x04 ; '.'
00000000000088e0         db  0x42 ; 'B'
00000000000088e1         db  0x0e ; '.'
00000000000088e2         db  0x28 ; '('
00000000000088e3         db  0x8c ; '.'
00000000000088e4         db  0x05 ; '.'
00000000000088e5         db  0x41 ; 'A'
00000000000088e6         db  0x0e ; '.'
00000000000088e7         db  0x30 ; '0'
00000000000088e8         db  0x86 ; '.'
00000000000088e9         db  0x06 ; '.'
00000000000088ea         db  0x41 ; 'A'
00000000000088eb         db  0x0e ; '.'
00000000000088ec         db  0x38 ; '8'
00000000000088ed         db  0x83 ; '.'
00000000000088ee         db  0x07 ; '.'
00000000000088ef         db  0x44 ; 'D'
00000000000088f0         db  0x0e ; '.'
00000000000088f1         db  0x70 ; 'p'
00000000000088f2         db  0x02 ; '.'
00000000000088f3         db  0x94 ; '.'
00000000000088f4         db  0x0a ; '.'
00000000000088f5         db  0x0e ; '.'
00000000000088f6         db  0x38 ; '8'
00000000000088f7         db  0x41 ; 'A'
00000000000088f8         db  0x0e ; '.'
00000000000088f9         db  0x30 ; '0'
00000000000088fa         db  0x41 ; 'A'
00000000000088fb         db  0x0e ; '.'
00000000000088fc         db  0x28 ; '('
00000000000088fd         db  0x42 ; 'B'
00000000000088fe         db  0x0e ; '.'
00000000000088ff         db  0x20 ; ' '
0000000000008900         db  0x42 ; 'B'
0000000000008901         db  0x0e ; '.'
0000000000008902         db  0x18 ; '.'
0000000000008903         db  0x42 ; 'B'
0000000000008904         db  0x0e ; '.'
0000000000008905         db  0x10 ; '.'
0000000000008906         db  0x42 ; 'B'
0000000000008907         db  0x0e ; '.'
0000000000008908         db  0x08 ; '.'
0000000000008909         db  0x44 ; 'D'
000000000000890a         db  0x0b ; '.'
000000000000890b         db  0x00 ; '.'
000000000000890c         dd         0x00000010                                  ; Length of the record
0000000000008910         dd         0x00000d18                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008914         db         0x5c, 0xd2, 2 dup (0xff)                    ; begin 0x5b70
0000000000008918         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x5b75)
000000000000891c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000891d         align      32
0000000000008920         dd         0x00000010                                  ; Length of the record
0000000000008924         dd         0x00000d2c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008928         db         0x58, 0xd2, 2 dup (0xff)                    ; begin 0x5b80
000000000000892c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x5b85)
0000000000008930         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008931         align      4
0000000000008934         dd         0x00000060                                  ; Length of the record
0000000000008938         dd         0x00000d40                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
000000000000893c         db         0x54, 0xd2, 2 dup (0xff)                    ; begin 0x5b90
0000000000008940         db         0x96, 0x01, 2 dup (0x00)                    ; length 0x196 (end at 0x5d26)
0000000000008944         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008945         db  0x42 ; 'B'
0000000000008946         db  0x0e ; '.'
0000000000008947         db  0x10 ; '.'
0000000000008948         db  0x8f ; '.'
0000000000008949         db  0x02 ; '.'
000000000000894a         db  0x42 ; 'B'
000000000000894b         db  0x0e ; '.'
000000000000894c         db  0x18 ; '.'
000000000000894d         db  0x8e ; '.'
000000000000894e         db  0x03 ; '.'
000000000000894f         db  0x42 ; 'B'
0000000000008950         db  0x0e ; '.'
0000000000008951         db  0x20 ; ' '
0000000000008952         db  0x8d ; '.'
0000000000008953         db  0x04 ; '.'
0000000000008954         db  0x42 ; 'B'
0000000000008955         db  0x0e ; '.'
0000000000008956         db  0x28 ; '('
0000000000008957         db  0x8c ; '.'
0000000000008958         db  0x05 ; '.'
0000000000008959         db  0x44 ; 'D'
000000000000895a         db  0x0e ; '.'
000000000000895b         db  0x30 ; '0'
000000000000895c         db  0x86 ; '.'
000000000000895d         db  0x06 ; '.'
000000000000895e         db  0x41 ; 'A'
000000000000895f         db  0x0e ; '.'
0000000000008960         db  0x38 ; '8'
0000000000008961         db  0x83 ; '.'
0000000000008962         db  0x07 ; '.'
0000000000008963         db  0x4a ; 'J'
0000000000008964         db  0x0e ; '.'
0000000000008965         db  0x50 ; 'P'
0000000000008966         db  0x02 ; '.'
0000000000008967         db  0x5f ; '_'
0000000000008968         db  0x0a ; '.'
0000000000008969         db  0x0e ; '.'
000000000000896a         db  0x38 ; '8'
000000000000896b         db  0x41 ; 'A'
000000000000896c         db  0x0e ; '.'
000000000000896d         db  0x30 ; '0'
000000000000896e         db  0x41 ; 'A'
000000000000896f         db  0x0e ; '.'
0000000000008970         db  0x28 ; '('
0000000000008971         db  0x42 ; 'B'
0000000000008972         db  0x0e ; '.'
0000000000008973         db  0x20 ; ' '
0000000000008974         db  0x42 ; 'B'
0000000000008975         db  0x0e ; '.'
0000000000008976         db  0x18 ; '.'
0000000000008977         db  0x42 ; 'B'
0000000000008978         db  0x0e ; '.'
0000000000008979         db  0x10 ; '.'
000000000000897a         db  0x42 ; 'B'
000000000000897b         db  0x0e ; '.'
000000000000897c         db  0x08 ; '.'
000000000000897d         db  0x48 ; 'H'
000000000000897e         db  0x0b ; '.'
000000000000897f         db  0x02 ; '.'
0000000000008980         db  0x9b ; '.'
0000000000008981         db  0x0a ; '.'
0000000000008982         db  0x0e ; '.'
0000000000008983         db  0x38 ; '8'
0000000000008984         db  0x41 ; 'A'
0000000000008985         db  0x0e ; '.'
0000000000008986         db  0x30 ; '0'
0000000000008987         db  0x41 ; 'A'
0000000000008988         db  0x0e ; '.'
0000000000008989         db  0x28 ; '('
000000000000898a         db  0x42 ; 'B'
000000000000898b         db  0x0e ; '.'
000000000000898c         db  0x20 ; ' '
000000000000898d         db  0x42 ; 'B'
000000000000898e         db  0x0e ; '.'
000000000000898f         db  0x18 ; '.'
0000000000008990         db  0x42 ; 'B'
0000000000008991         db  0x0e ; '.'
0000000000008992         db  0x10 ; '.'
0000000000008993         db  0x42 ; 'B'
0000000000008994         db  0x0e ; '.'
0000000000008995         db  0x08 ; '.'
0000000000008996         db  0x43 ; 'C'
0000000000008997         db  0x0b ; '.'
0000000000008998         dd         0x00000034                                  ; Length of the record
000000000000899c         dd         0x00000da4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000089a0         db         0x90, 0xd3, 2 dup (0xff)                    ; begin 0x5d30
00000000000089a4         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x5d79)
00000000000089a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089a9         db  0x41 ; 'A'
00000000000089aa         db  0x0e ; '.'
00000000000089ab         db  0x10 ; '.'
00000000000089ac         db  0x86 ; '.'
00000000000089ad         db  0x02 ; '.'
00000000000089ae         db  0x41 ; 'A'
00000000000089af         db  0x0e ; '.'
00000000000089b0         db  0x18 ; '.'
00000000000089b1         db  0x83 ; '.'
00000000000089b2         db  0x03 ; '.'
00000000000089b3         db  0x53 ; 'S'
00000000000089b4         db  0x0e ; '.'
00000000000089b5         db  0x20 ; ' '
00000000000089b6         db  0x59 ; 'Y'
00000000000089b7         db  0x0a ; '.'
00000000000089b8         db  0x0e ; '.'
00000000000089b9         db  0x18 ; '.'
00000000000089ba         db  0x44 ; 'D'
00000000000089bb         db  0x0e ; '.'
00000000000089bc         db  0x10 ; '.'
00000000000089bd         db  0x41 ; 'A'
00000000000089be         db  0x0e ; '.'
00000000000089bf         db  0x08 ; '.'
00000000000089c0         db  0x4d ; 'M'
00000000000089c1         db  0x0b ; '.'
00000000000089c2         db  0x44 ; 'D'
00000000000089c3         db  0x0e ; '.'
00000000000089c4         db  0x18 ; '.'
00000000000089c5         db  0x43 ; 'C'
00000000000089c6         db  0x0e ; '.'
00000000000089c7         db  0x10 ; '.'
00000000000089c8         db  0x41 ; 'A'
00000000000089c9         db  0x0e ; '.'
00000000000089ca         db  0x08 ; '.'
00000000000089cb         db  0x00 ; '.'
00000000000089cc         db  0x00 ; '.'
00000000000089cd         db  0x00 ; '.'
00000000000089ce         db  0x00 ; '.'
00000000000089cf         db  0x00 ; '.'
00000000000089d0         dd         0x00000010                                  ; Length of the record
00000000000089d4         dd         0x00000ddc                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000089d8         db         0xa8, 0xd3, 2 dup (0xff)                    ; begin 0x5d80
00000000000089dc         db         0x8e, 0x02, 2 dup (0x00)                    ; length 0x28e (end at 0x600e)
00000000000089e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089e1         align      4
00000000000089e4         dd         0x00000030                                  ; Length of the record
00000000000089e8         dd         0x00000df0                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
00000000000089ec         db         0x24, 0xd6, 2 dup (0xff)                    ; begin 0x6010
00000000000089f0         db         0x40, 0x02, 2 dup (0x00)                    ; length 0x240 (end at 0x6250)
00000000000089f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089f5         db  0x42 ; 'B'
00000000000089f6         db  0x0e ; '.'
00000000000089f7         db  0x10 ; '.'
00000000000089f8         db  0x8d ; '.'
00000000000089f9         db  0x02 ; '.'
00000000000089fa         db  0x42 ; 'B'
00000000000089fb         db  0x0e ; '.'
00000000000089fc         db  0x18 ; '.'
00000000000089fd         db  0x8c ; '.'
00000000000089fe         db  0x03 ; '.'
00000000000089ff         db  0x48 ; 'H'
0000000000008a00         db  0x0e ; '.'
0000000000008a01         db  0x20 ; ' '
0000000000008a02         db  0x86 ; '.'
0000000000008a03         db  0x04 ; '.'
0000000000008a04         db  0x44 ; 'D'
0000000000008a05         db  0x0e ; '.'
0000000000008a06         db  0x28 ; '('
0000000000008a07         db  0x83 ; '.'
0000000000008a08         db  0x05 ; '.'
0000000000008a09         db  0x03 ; '.'
0000000000008a0a         db  0x09 ; '.'
0000000000008a0b         db  0x02 ; '.'
0000000000008a0c         db  0x0e ; '.'
0000000000008a0d         db  0x20 ; ' '
0000000000008a0e         db  0x57 ; 'W'
0000000000008a0f         db  0x0e ; '.'
0000000000008a10         db  0x18 ; '.'
0000000000008a11         db  0x4d ; 'M'
0000000000008a12         db  0x0e ; '.'
0000000000008a13         db  0x10 ; '.'
0000000000008a14         db  0x42 ; 'B'
0000000000008a15         db  0x0e ; '.'
0000000000008a16         db  0x08 ; '.'
0000000000008a17         db  0x00 ; '.'
0000000000008a18         dd         0x0000002c                                  ; Length of the record
0000000000008a1c         dd         0x00000e24                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008a20         db         0x30, 0xd8, 2 dup (0xff)                    ; begin 0x6250
0000000000008a24         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x62e3)
0000000000008a28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a29         db  0x42 ; 'B'
0000000000008a2a         db  0x0e ; '.'
0000000000008a2b         db  0x10 ; '.'
0000000000008a2c         db  0x8c ; '.'
0000000000008a2d         db  0x02 ; '.'
0000000000008a2e         db  0x41 ; 'A'
0000000000008a2f         db  0x0e ; '.'
0000000000008a30         db  0x18 ; '.'
0000000000008a31         db  0x86 ; '.'
0000000000008a32         db  0x03 ; '.'
0000000000008a33         db  0x44 ; 'D'
0000000000008a34         db  0x0e ; '.'
0000000000008a35         db  0x20 ; ' '
0000000000008a36         db  0x83 ; '.'
0000000000008a37         db  0x04 ; '.'
0000000000008a38         db  0x5e ; '^'
0000000000008a39         db  0x0a ; '.'
0000000000008a3a         db  0x0e ; '.'
0000000000008a3b         db  0x18 ; '.'
0000000000008a3c         db  0x41 ; 'A'
0000000000008a3d         db  0x0e ; '.'
0000000000008a3e         db  0x10 ; '.'
0000000000008a3f         db  0x42 ; 'B'
0000000000008a40         db  0x0e ; '.'
0000000000008a41         db  0x08 ; '.'
0000000000008a42         db  0x48 ; 'H'
0000000000008a43         db  0x0b ; '.'
0000000000008a44         db  0x00 ; '.'
0000000000008a45         db  0x00 ; '.'
0000000000008a46         db  0x00 ; '.'
0000000000008a47         db  0x00 ; '.'
0000000000008a48         dd         0x00000014                                  ; Length of the record
0000000000008a4c         dd         0x00000e54                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008a50         db         0xa0, 0xd8, 2 dup (0xff)                    ; begin 0x62f0
0000000000008a54         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x62fe)
0000000000008a58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a59         align      32
0000000000008a60         dd         0x00000034                                  ; Length of the record
0000000000008a64         dd         0x00000e6c                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008a68         db         0x98, 0xd8, 2 dup (0xff)                    ; begin 0x6300
0000000000008a6c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x657e)
0000000000008a70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a71         db  0x42 ; 'B'
0000000000008a72         db  0x0e ; '.'
0000000000008a73         db  0x10 ; '.'
0000000000008a74         db  0x8c ; '.'
0000000000008a75         db  0x02 ; '.'
0000000000008a76         db  0x41 ; 'A'
0000000000008a77         db  0x0e ; '.'
0000000000008a78         db  0x18 ; '.'
0000000000008a79         db  0x86 ; '.'
0000000000008a7a         db  0x03 ; '.'
0000000000008a7b         db  0x43 ; 'C'
0000000000008a7c         db  0x0e ; '.'
0000000000008a7d         db  0x20 ; ' '
0000000000008a7e         db  0x83 ; '.'
0000000000008a7f         db  0x04 ; '.'
0000000000008a80         db  0x44 ; 'D'
0000000000008a81         db  0x0e ; '.'
0000000000008a82         db  0x70 ; 'p'
0000000000008a83         db  0x02 ; '.'
0000000000008a84         db  0xf0 ; '.'
0000000000008a85         db  0x0a ; '.'
0000000000008a86         db  0x0e ; '.'
0000000000008a87         db  0x20 ; ' '
0000000000008a88         db  0x41 ; 'A'
0000000000008a89         db  0x0e ; '.'
0000000000008a8a         db  0x18 ; '.'
0000000000008a8b         db  0x41 ; 'A'
0000000000008a8c         db  0x0e ; '.'
0000000000008a8d         db  0x10 ; '.'
0000000000008a8e         db  0x42 ; 'B'
0000000000008a8f         db  0x0e ; '.'
0000000000008a90         db  0x08 ; '.'
0000000000008a91         db  0x42 ; 'B'
0000000000008a92         db  0x0b ; '.'
0000000000008a93         db  0x00 ; '.'
0000000000008a94         db  0x00 ; '.'
0000000000008a95         db  0x00 ; '.'
0000000000008a96         db  0x00 ; '.'
0000000000008a97         db  0x00 ; '.'
0000000000008a98         dd         0x00000044                                  ; Length of the record
0000000000008a9c         dd         0x00000ea4                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008aa0         db         0xe0, 0xda, 2 dup (0xff)                    ; begin 0x6580
0000000000008aa4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x65e5)
0000000000008aa8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008aa9         db  0x42 ; 'B'
0000000000008aaa         db  0x0e ; '.'
0000000000008aab         db  0x10 ; '.'
0000000000008aac         db  0x8f ; '.'
0000000000008aad         db  0x02 ; '.'
0000000000008aae         db  0x42 ; 'B'
0000000000008aaf         db  0x0e ; '.'
0000000000008ab0         db  0x18 ; '.'
0000000000008ab1         db  0x8e ; '.'
0000000000008ab2         db  0x03 ; '.'
0000000000008ab3         db  0x45 ; 'E'
0000000000008ab4         db  0x0e ; '.'
0000000000008ab5         db  0x20 ; ' '
0000000000008ab6         db  0x8d ; '.'
0000000000008ab7         db  0x04 ; '.'
0000000000008ab8         db  0x42 ; 'B'
0000000000008ab9         db  0x0e ; '.'
0000000000008aba         db  0x28 ; '('
0000000000008abb         db  0x8c ; '.'
0000000000008abc         db  0x05 ; '.'
0000000000008abd         db  0x48 ; 'H'
0000000000008abe         db  0x0e ; '.'
0000000000008abf         db  0x30 ; '0'
0000000000008ac0         db  0x86 ; '.'
0000000000008ac1         db  0x06 ; '.'
0000000000008ac2         db  0x48 ; 'H'
0000000000008ac3         db  0x0e ; '.'
0000000000008ac4         db  0x38 ; '8'
0000000000008ac5         db  0x83 ; '.'
0000000000008ac6         db  0x07 ; '.'
0000000000008ac7         db  0x4d ; 'M'
0000000000008ac8         db  0x0e ; '.'
0000000000008ac9         db  0x40 ; '@'
0000000000008aca         db  0x72 ; 'r'
0000000000008acb         db  0x0e ; '.'
0000000000008acc         db  0x38 ; '8'
0000000000008acd         db  0x41 ; 'A'
0000000000008ace         db  0x0e ; '.'
0000000000008acf         db  0x30 ; '0'
0000000000008ad0         db  0x41 ; 'A'
0000000000008ad1         db  0x0e ; '.'
0000000000008ad2         db  0x28 ; '('
0000000000008ad3         db  0x42 ; 'B'
0000000000008ad4         db  0x0e ; '.'
0000000000008ad5         db  0x20 ; ' '
0000000000008ad6         db  0x42 ; 'B'
0000000000008ad7         db  0x0e ; '.'
0000000000008ad8         db  0x18 ; '.'
0000000000008ad9         db  0x42 ; 'B'
0000000000008ada         db  0x0e ; '.'
0000000000008adb         db  0x10 ; '.'
0000000000008adc         db  0x42 ; 'B'
0000000000008add         db  0x0e ; '.'
0000000000008ade         db  0x08 ; '.'
0000000000008adf         db  0x00 ; '.'
0000000000008ae0         dd         0x00000014                                  ; Length of the record
0000000000008ae4         dd         0x00000eec                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008ae8         db         0x08, 0xdb, 2 dup (0xff)                    ; begin 0x65f0
0000000000008aec         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x65f2)
0000000000008af0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008af1         align      8
0000000000008af8         dd         0x00000010                                  ; Length of the record
0000000000008afc         dd         0x00000f04                                  ; FDE: parent CIE at 0x7bf8 (FDE encoding = 0x1B)
0000000000008b00         db         0x00, 0xdb, 2 dup (0xff)                    ; begin 0x6600
0000000000008b04         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x660e)
0000000000008b08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b09         align      16


        ; Segment Segment 3
        ; Range: [0x209a70; 0x20a240[ (2000 bytes)
        ; File offset : [39536; 41088[ (1552 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a70; 0x209a78[ (8 bytes)
        ; File offset : [39536; 39544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a70         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a78; 0x209a80[ (8 bytes)
        ; File offset : [39544; 39552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a78         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a80; 0x209bd8[ (344 bytes)
        ; File offset : [39552; 39896[ (344 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000209a80         db  0x5b ; '['                                         ; DATA XREF=main+128
0000000000209a81         db  0x67 ; 'g'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x00 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x64 ; 'd'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0x65 ; 'e'
0000000000209aa1         db  0x67 ; 'g'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x00 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x71 ; 'q'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0x6b ; 'k'
0000000000209ac1         db  0x67 ; 'g'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x00 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x75 ; 'u'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x73 ; 's'
0000000000209ae1         db  0x67 ; 'g'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x01 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x80 ; '.'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x7a ; 'z'
0000000000209b01         db  0x67 ; 'g'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x02 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x70 ; 'p'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x81 ; '.'
0000000000209b21         db  0x67 ; 'g'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x7e ; '~'
0000000000209b39         db  0xff ; '.'
0000000000209b3a         db  0xff ; '.'
0000000000209b3b         db  0xff ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x86 ; '.'
0000000000209b41         db  0x67 ; 'g'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x7d ; '}'
0000000000209b59         db  0xff ; '.'
0000000000209b5a         db  0xff ; '.'
0000000000209b5b         db  0xff ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0x00 ; '.'
0000000000209b61         db  0x00 ; '.'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x00 ; '.'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
                     quoting_style_args:
0000000000209b80         db  0x79 ; 'y'
0000000000209b81         db  0x6f ; 'o'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x81 ; '.'
0000000000209b89         db  0x6f ; 'o'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x87 ; '.'
0000000000209b91         db  0x6f ; 'o'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x94 ; '.'
0000000000209b99         db  0x6f ; 'o'
0000000000209b9a         db  0x00 ; '.'
0000000000209b9b         db  0x00 ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0xa1 ; '.'
0000000000209ba1         db  0x6f ; 'o'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0xb5 ; '.'
0000000000209ba9         db  0x6f ; 'o'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0xb7 ; '.'
0000000000209bb1         db  0x6f ; 'o'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x9a ; '.'
0000000000209bb9         db  0x6f ; 'o'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0xf3 ; '.'
0000000000209bc1         db  0x66 ; 'f'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0xbf ; '.'
0000000000209bc9         db  0x6f ; 'o'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209bd8; 0x209dc8[ (496 bytes)
        ; File offset : [39896; 40392[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209bd8         db  0x01 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0x01 ; '.'
0000000000209be1         db  0x00 ; '.'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x0c ; '.'
0000000000209be9         db  0x00 ; '.'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0x58 ; 'X'
0000000000209bf1         db  0x17 ; '.'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x0d ; '.'
0000000000209bf9         db  0x00 ; '.'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x10 ; '.'
0000000000209c01         db  0x66 ; 'f'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x19 ; '.'
0000000000209c09         db  0x00 ; '.'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x70 ; 'p'
0000000000209c11         db  0x9a ; '.'
0000000000209c12         db  0x20 ; ' '
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x1b ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x08 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x1a ; '.'
0000000000209c29         db  0x00 ; '.'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x78 ; 'x'
0000000000209c31         db  0x9a ; '.'
0000000000209c32         db  0x20 ; ' '
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x1c ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x08 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0xf5 ; '.'
0000000000209c49         db  0xfe ; '.'
0000000000209c4a         db  0xff ; '.'
0000000000209c4b         db  0x6f ; 'o'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x98 ; '.'
0000000000209c51         db  0x02 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x05 ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x00 ; '.'
0000000000209c61         db  0x0a ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x06 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0xe0 ; '.'
0000000000209c71         db  0x02 ; '.'
0000000000209c72         db  0x00 ; '.'
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x0a ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x4c ; 'L'
0000000000209c81         db  0x03 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x0b ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x18 ; '.'
0000000000209c91         db  0x00 ; '.'
0000000000209c92         db  0x00 ; '.'
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x15 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x00 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x03 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0xc8 ; '.'
0000000000209cb1         db  0x9d ; '.'
0000000000209cb2         db  0x20 ; ' '
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x02 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xd0 ; '.'
0000000000209cc1         db  0x05 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x14 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0x07 ; '.'
0000000000209cd1         db  0x00 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x17 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0x88 ; '.'
0000000000209ce1         db  0x11 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x07 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x58 ; 'X'
0000000000209cf1         db  0x0e ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x08 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x30 ; '0'
0000000000209d01         db  0x03 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x09 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x18 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x1e ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x08 ; '.'
0000000000209d21         db  0x00 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0xfb ; '.'
0000000000209d29         db  0xff ; '.'
0000000000209d2a         db  0xff ; '.'
0000000000209d2b         db  0x6f ; 'o'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x01 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x08 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0xfe ; '.'
0000000000209d39         db  0xff ; '.'
0000000000209d3a         db  0xff ; '.'
0000000000209d3b         db  0x6f ; 'o'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0xe8 ; '.'
0000000000209d41         db  0x0d ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0xff ; '.'
0000000000209d49         db  0xff ; '.'
0000000000209d4a         db  0xff ; '.'
0000000000209d4b         db  0x6f ; 'o'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x01 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0xf0 ; '.'
0000000000209d59         db  0xff ; '.'
0000000000209d5a         db  0xff ; '.'
0000000000209d5b         db  0x6f ; 'o'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x4c ; 'L'
0000000000209d61         db  0x0d ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0xf9 ; '.'
0000000000209d69         db  0xff ; '.'
0000000000209d6a         db  0xff ; '.'
0000000000209d6b         db  0x6f ; 'o'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x17 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x00 ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x00 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0x00 ; '.'
0000000000209d89         db  0x00 ; '.'
0000000000209d8a         db  0x00 ; '.'
0000000000209d8b         db  0x00 ; '.'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x00 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0x00 ; '.'
0000000000209d99         db  0x00 ; '.'
0000000000209d9a         db  0x00 ; '.'
0000000000209d9b         db  0x00 ; '.'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x00 ; '.'
0000000000209da1         db  0x00 ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0x00 ; '.'
0000000000209da9         db  0x00 ; '.'
0000000000209daa         db  0x00 ; '.'
0000000000209dab         db  0x00 ; '.'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x00 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0x00 ; '.'
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x00 ; '.'
0000000000209dc1         db  0x00 ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209dc8; 0x209ff8[ (560 bytes)
        ; File offset : [40392; 40952[ (560 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209dc8         db  0xd8 ; '.'
0000000000209dc9         db  0x9b ; '.'
0000000000209dca         db  0x20 ; ' '
0000000000209dcb         db  0x00 ; '.'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
                     qword_209dd0:
0000000000209dd0         dq         0x0000000000000000                          ; DATA XREF=0x1770
0000000000209dd8         db  0x00 ; '.'                                         ; DATA XREF=0x1776
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
                     getenv@GOT:        // getenv
0000000000209de0         dq         0x000000000020a250                          ; DATA XREF=j_getenv
                     free@GOT:        // free
0000000000209de8         dq         0x000000000020a258                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209df0         dq         0x000000000020a260                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209df8         dq         0x000000000020a268                          ; DATA XREF=j___errno_location
                     remove@GOT:        // remove
0000000000209e00         dq         0x000000000020a270                          ; DATA XREF=j_remove
                     strncmp@GOT:        // strncmp
0000000000209e08         dq         0x000000000020a278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e10         dq         0x000000000020a288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e18         dq         0x000000000020a290                          ; DATA XREF=j___fpending
                     __read_chk@GOT:        // __read_chk
0000000000209e20         dq         0x000000000020a298                          ; DATA XREF=j___read_chk
                     mkdir@GOT:        // mkdir
0000000000209e28         dq         0x000000000020a2a0                          ; DATA XREF=j_mkdir
                     puts@GOT:        // puts
0000000000209e30         dq         0x000000000020a2a8                          ; DATA XREF=j_puts
                     fcntl@GOT:        // fcntl
0000000000209e38         dq         0x000000000020a2b0                          ; DATA XREF=j_fcntl
                     getpid@GOT:        // getpid
0000000000209e40         dq         0x000000000020a2b8                          ; DATA XREF=j_getpid
                     fread_unlocked@GOT:        // fread_unlocked
0000000000209e48         dq         0x000000000020a2c0                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
0000000000209e50         dq         0x000000000020a2c8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e58         dq         0x000000000020a2d0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e60         dq         0x000000000020a2d8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e68         dq         0x000000000020a2e0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e70         dq         0x000000000020a2e8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e78         dq         0x000000000020a2f0                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
0000000000209e80         dq         0x000000000020a2f8                          ; DATA XREF=j___lxstat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e88         dq         0x000000000020a300                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
0000000000209e90         dq         0x000000000020a308                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
0000000000209e98         dq         0x000000000020a310                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ea0         dq         0x000000000020a318                          ; DATA XREF=j_mbrtowc
                     strrchr@GOT:        // strrchr
0000000000209ea8         dq         0x000000000020a320                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209eb0         dq         0x000000000020a328                          ; DATA XREF=j_lseek
                     gettimeofday@GOT:        // gettimeofday
0000000000209eb8         dq         0x000000000020a330                          ; DATA XREF=j_gettimeofday
                     __assert_fail@GOT:        // __assert_fail
0000000000209ec0         dq         0x000000000020a338                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000209ec8         dq         0x000000000020a340                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000209ed0         dq         0x000000000020a348                          ; DATA XREF=j_close
                     strspn@GOT:        // strspn
0000000000209ed8         dq         0x000000000020a350                          ; DATA XREF=j_strspn
                     memcmp@GOT:        // memcmp
0000000000209ee0         dq         0x000000000020a360                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209ee8         dq         0x000000000020a368                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209ef0         dq         0x000000000020a370                          ; DATA XREF=j_calloc
                     fputc_unlocked@GOT:        // fputc_unlocked
0000000000209ef8         dq         0x000000000020a378                          ; DATA XREF=j_fputc_unlocked
                     memcpy@GOT:        // memcpy
0000000000209f00         dq         0x000000000020a388                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f08         dq         0x000000000020a390                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
0000000000209f10         dq         0x000000000020a398                          ; DATA XREF=j_getgid
                     malloc@GOT:        // malloc
0000000000209f18         dq         0x000000000020a3a0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f20         dq         0x000000000020a3a8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f28         dq         0x000000000020a3b0                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f30         dq         0x000000000020a3b8                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f38         dq         0x000000000020a3c0                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
0000000000209f40         dq         0x000000000020a3c8                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
0000000000209f48         dq         0x000000000020a3d0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f50         dq         0x000000000020a3d8                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
0000000000209f58         dq         0x000000000020a3e0                          ; DATA XREF=j_setvbuf
                     mempcpy@GOT:        // mempcpy
0000000000209f60         dq         0x000000000020a3e8                          ; DATA XREF=j_mempcpy
                     error@GOT:        // error
0000000000209f68         dq         0x000000000020a3f0                          ; DATA XREF=j_error
                     __explicit_bzero_chk@GOT:        // __explicit_bzero_chk
0000000000209f70         dq         0x000000000020a3f8                          ; DATA XREF=j___explicit_bzero_chk
                     open@GOT:        // open
0000000000209f78         dq         0x000000000020a400                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000209f80         dq         0x000000000020a408                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000209f88         dq         0x000000000020a410                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f90         dq         0x000000000020a418                          ; DATA XREF=j___cxa_atexit
                     getppid@GOT:        // getppid
0000000000209f98         dq         0x000000000020a420                          ; DATA XREF=j_getppid
                     exit@GOT:        // exit
0000000000209fa0         dq         0x000000000020a428                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209fa8         dq         0x000000000020a430                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fb0         dq         0x000000000020a438                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fb8         dq         0x000000000020a448                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fc0         dq         0x000000000020a450                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fc8         dq         0x000000000020a460                          ; DATA XREF=j___ctype_b_loc
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fd9         db  0x00 ; '.'
0000000000209fda         db  0x00 ; '.'
0000000000209fdb         db  0x00 ; '.'
0000000000209fdc         db  0x00 ; '.'
0000000000209fdd         db  0x00 ; '.'
0000000000209fde         db  0x00 ; '.'
0000000000209fdf         db  0x00 ; '.'
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209ff0:
0000000000209ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209ff0, __do_global_dtors_aux+9
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a080[ (128 bytes)
        ; File offset : [40960; 41088[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000006f0e                          ; "8.31", DATA XREF=main+353
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, randread_error+51
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05649e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a080; 0x20a240[ (448 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a081         db  0x00 ; '.'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x00 ; '.'
000000000020a085         db  0x00 ; '.'
000000000020a086         db  0x00 ; '.'
000000000020a087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a088         db  0x00 ; '.'                                         ; DATA XREF=main+346, main+1137, usage+125, usage+162, usage+199, usage+216, usage+253, usage+290, usage+327, usage+364, usage+401
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a090         db  0x00 ; '.'                                         ; DATA XREF=main+404
000000000020a091         db  0x00 ; '.'
000000000020a092         db  0x00 ; '.'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a098         db  0x00 ; '.'                                         ; DATA XREF=main+196, main+248
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x00 ; '.'
000000000020a09d         db  0x00 ; '.'
000000000020a09e         db  0x00 ; '.'
000000000020a09f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
000000000020a0a8         db  0x00 ; '.'
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
000000000020a0b0         db  0x00 ; '.'
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
000000000020a0b8         db  0x00 ; '.'
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=maybe_close_stdout+13, usage+61, close_stdout+44, set_program_name+125
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
                     completed.7697:
000000000020a0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
                     stdout_closed:
000000000020a0c9         db  0x00 ; '.'                                         ; DATA XREF=main+1144, maybe_close_stdout
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a0d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
                     file_name:
000000000020a0d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     program_name:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
000000000020a0e8         db  0x00 ; '.'
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
000000000020a0f0         db  0x00 ; '.'
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
000000000020a0f8         db  0x00 ; '.'
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     slot0:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x00 ; '.'
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x00 ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
000000000020a120         db  0x00 ; '.'
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
                     default_quoting_options:
000000000020a200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
000000000020a220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
                     qword_20a230:
000000000020a230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020a238         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a250; 0x20a680[ (1072 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a250; 0x4148d0[ (2139776 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000020a250         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000020a258         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a260         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a268         extern function code                                   ; DATA XREF=__errno_location@GOT
                     remove:
000000000020a270         extern function code                                   ; DATA XREF=remove@GOT
                     strncmp:
000000000020a278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a280         extern function code
                     _exit:
000000000020a288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a290         extern function code                                   ; DATA XREF=__fpending@GOT
                     __read_chk:
000000000020a298         extern function code                                   ; DATA XREF=__read_chk@GOT
                     mkdir:
000000000020a2a0         extern function code                                   ; DATA XREF=mkdir@GOT
                     puts:
000000000020a2a8         extern function code                                   ; DATA XREF=puts@GOT
                     fcntl:
000000000020a2b0         extern function code                                   ; DATA XREF=fcntl@GOT
                     getpid:
000000000020a2b8         extern function code                                   ; DATA XREF=getpid@GOT
                     fread_unlocked:
000000000020a2c0         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000020a2c8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2d0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a2d8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2e0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2e8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a2f0         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020a2f8         extern function code                                   ; DATA XREF=__lxstat@GOT
                     __stack_chk_fail:
000000000020a300         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
000000000020a308         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
000000000020a310         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a318         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strrchr:
000000000020a320         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a328         extern function code                                   ; DATA XREF=lseek@GOT
                     gettimeofday:
000000000020a330         extern function code                                   ; DATA XREF=gettimeofday@GOT
                     __assert_fail:
000000000020a338         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020a340         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020a348         extern function code                                   ; DATA XREF=close@GOT
                     strspn:
000000000020a350         extern function code                                   ; DATA XREF=strspn@GOT
                     __libc_start_main:
000000000020a358         extern function code
                     memcmp:
000000000020a360         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a368         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a370         extern function code                                   ; DATA XREF=calloc@GOT
                     fputc_unlocked:
000000000020a378         extern function code                                   ; DATA XREF=fputc_unlocked@GOT
                     __gmon_start__:
000000000020a380         extern function code
                     memcpy:
000000000020a388         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a390         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
000000000020a398         extern function code                                   ; DATA XREF=getgid@GOT
                     malloc:
000000000020a3a0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a3a8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a3b0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a3b8         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a3c0         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
000000000020a3c8         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
000000000020a3d0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3d8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
000000000020a3e0         extern function code                                   ; DATA XREF=setvbuf@GOT
                     mempcpy:
000000000020a3e8         extern function code                                   ; DATA XREF=mempcpy@GOT
                     error:
000000000020a3f0         extern function code                                   ; DATA XREF=error@GOT
                     __explicit_bzero_chk:
000000000020a3f8         extern function code                                   ; DATA XREF=__explicit_bzero_chk@GOT
                     open:
000000000020a400         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020a408         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020a410         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
000000000020a418         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     getppid:
000000000020a420         extern function code                                   ; DATA XREF=getppid@GOT
                     exit:
000000000020a428         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a430         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a438         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a440         extern function code
                     mbsinit:
000000000020a448         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a450         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a458         extern function code
                     __ctype_b_loc:
000000000020a460         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     getenv@@GLIBC_2.2.5:
000000000020a468         extern function code
                     free@@GLIBC_2.2.5:
000000000020a470         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a478         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a480         extern function code
                     remove@@GLIBC_2.2.5:
000000000020a488         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a490         extern function code
                     _ITM_deregisterTMCloneTable_20a498:        // _ITM_deregisterTMCloneTable
000000000020a498         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     __read_chk@@GLIBC_2.4:
000000000020a4b0         extern function code
                     mkdir@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     puts@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     getpid@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a500         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a508         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020a510         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a518         extern function code
                     getuid@@GLIBC_2.2.5:
000000000020a520         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a528         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a530         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a538         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a540         extern function code
                     gettimeofday@@GLIBC_2.2.5:
000000000020a548         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020a550         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a558         extern function code
                     close@@GLIBC_2.2.5:
000000000020a560         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020a568         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a570         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a578         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a580         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a588         extern function code
                     fputc_unlocked@@GLIBC_2.2.5:
000000000020a590         extern function code
                     __gmon_start___20a598:        // __gmon_start__
000000000020a598         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a5a0         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a5a8         extern function code
                     getgid@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a5b8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a5c0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a5c8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a5d0         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a5d8         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000020a5e0         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a5e8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a5f0         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000020a5f8         extern function code
                     mempcpy@@GLIBC_2.2.5:
000000000020a600         extern function code
                     error@@GLIBC_2.2.5:
000000000020a608         extern function code
                     __explicit_bzero_chk@@GLIBC_2.25:
000000000020a610         extern function code
                     open@@GLIBC_2.2.5:
000000000020a618         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a620         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020a628         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a630         extern function code
                     getppid@@GLIBC_2.2.5:
000000000020a638         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a640         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a648         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a650         extern function code
                     _ITM_registerTMCloneTable_20a658:        // _ITM_registerTMCloneTable
000000000020a658         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a660         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a668         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a670         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a678         extern function code
